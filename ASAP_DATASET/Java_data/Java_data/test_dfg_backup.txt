Please find the dataflow of the function. We present the source and list of target indices.
String-[3] [5, 14, 16, 23, 25, 32, 34, 78, 80, 87, 89]
Map-[1] [12, 30, 76, 85]
defaultMap-[36] [44, 53]
effectiveMap-[18] [49, 108, 118]
context-[58] [66, 92]
contextMap-[103] [112]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ArrayDouble-[1] [6, 84, 90]
int-[11] [15, 27, 33, 60, 68, 76, 101, 121, 127, 133, 139, 147, 193, 199, 209, 234, 259, 321, 375]
array-[9] [20, 306]
shape-[18] [43, 104]
newShape-[30] [47]
newShape-[54] [54, 63, 71, 79]
newShape-[56] [54]
dimIndex-[54] [56]
dimIndex-[56] [56, 106, 168, 183, 218, 243, 268]
ni-[61] [94, 225]
nj-[69] [96, 250]
nk-[77] [98, 275]
double-[109] [115, 346]
n-[102] [117, 171, 186, 328, 382]
i-[148] [152]
i-[156] [156, 162, 166, 177, 181, 210, 214]
eshape-[124] [160, 312]
neweshape-[136] [175, 366]
i-[228] [228, 287]
j-[235] [239]
j-[253] [253, 294]
k-[260] [264]
k-[278] [278, 301]
origin-[196] [282, 289, 296, 310, 364]
l-[322] [326]
l-[330] [330, 336, 376, 380]
d-[112] [334, 353]
it-[304] [339]
IndexIterator-[303] [357]
newArray-[87] [360, 416]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[9] [11, 15, 23, 25]
Map-[7] [21, 62]
lastSourceOffset-[16] [31, 35, 60]
offsetMap-[27] [42, 54, 69]
##########
Please find the dataflow of the function. We present the source and list of target indices.
packetInterceptor-[5] [13, 30, 35]
packetFilter-[8] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [8, 19, 30]
integerValue-[6] [15, 27]
totalDigits-[21] [34]
isNeg-[13] [38]
totalDigits-[41] [41]
scale-[9] [47, 57, 65, 78]
totalLength-[52] [52]
totalDigits-[21, 41] [59, 67]
totalLength-[65] [62]
totalLength-[67] [62]
totalLength-[70] [62]
totalLength-[78] [76]
totalLength-[32, 76] [82]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 18, 40]
countersReader-[7] [22, 30]
counterId-[11] [34, 48]
int-[10] [41]
CountersReader-[6] [44]
buffer-[20] [52, 63]
recordOffset-[42] [56, 67]
recordingId-[15] [74]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [13, 26, 37]
sColumnID-[15] [20, 76]
aColumnSet-[9] [32]
aKey-[28] [41]
aColumnRef-[39] [49, 63]
if-[47] [57]
Column-[55] [61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[3] [8, 16, 23, 30]
final-[7] [13]
Set-[1] [14]
iNodeName-[9] [40]
cl-[31] [46, 54]
clusters-[18] [50, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[4] [7, 10]
index-[5] [20]
cmp-[14] [22]
mergeSort-[2] [27]
lo-[8] [29]
hi-[11] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
args-[9] [14]
final-[5] [17, 26]
ShutdownSignalBarrier-[18] [22]
MediaDriver-[27] [33, 51, 54]
ctx-[30] [39, 58]
barrier-[43] [62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
entry-[30] [33]
predicate-[10] [46]
JwtContext-[8] [54]
cache-[14] [62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
node-[10] [20, 28]
timerID-[5] [24, 36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
bufferSize-[8] [16, 29, 34, 48]
buf-[21] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
fmt-[20] [32]
ncd-[5] [38]
showCoords-[11] [40]
uri-[14] [42]
os-[8] [45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
activity-[5] [18, 63, 122]
NullPointerException-[9] [25]
handle-[32] [53, 68, 82]
raEntity-[39] [55, 80]
sleeContainer-[41] [88]
ach-[75] [96]
ac-[86] [101, 107]
UnrecognizedActivityException-[11] [120]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5]
fqn-[6] [12, 22, 36, 47]
int-[9] [19]
structindex-[10] [31, 42]
groupindex-[20] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [8, 11]
insideOf-[3] [18]
start-[6] [24]
FastStringUtils-[20] [27, 34]
inStr-[9] [31]
end-[12] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HttpRequest-[2] [12]
destination-[7] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Map-[2] [16]
String-[4] [18, 46]
Object-[6] [20]
defaultValues-[22] [33, 69]
schema-[11] [41]
SchemaRegistryException-[14] [62]
e-[57] [64]
##########
Please find the dataflow of the function. We present the source and list of target indices.
version-[10] [24, 77, 268]
builder-[13] [28, 141, 208, 242, 270]
Attribute-[40] [55, 154, 167, 182]
JGroupsModel-[18] [71]
AttributeConverter-[81] [86]
value-[106] [115, 122]
address-[100] [126]
DiscardAttributeChecker-[36] [150]
RejectAttributeChecker-[51] [178]
typeConverter-[83] [193]
String-[102] [232]
opName-[233] [247]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [7, 15]
SDVariable-[3] [9, 17, 73, 81, 97, 172]
i_v1-[11] [23]
vals-[19] [28, 63, 108, 118, 175, 226]
i-[57] [61]
i-[69] [69, 78, 112, 122, 179]
outputVars-[48] [76]
var-[74] [84, 160, 188, 201, 220]
grad-[82] [92, 106]
gradVar-[98] [124, 166, 173, 186, 207, 214]
UnsupportedOperationException-[130] [136]
e-[131] [152]
sameDiff-[156] [182, 197, 210]
##########
Please find the dataflow of the function. We present the source and list of target indices.
picture-[5] [10, 24, 42]
IllegalArgumentException-[16] [32, 74]
type-[40] [51, 63, 78]
getPictureType-[53] [82]
willResample-[59] [87]
mToImageResampler-[65] [93]
##########
Please find the dataflow of the function. We present the source and list of target indices.
once-[13] [17]
SendError-[9] [46]
StringBuilder-[55] [59]
buf-[56] [63, 90, 97, 109]
req-[5] [67, 77, 122, 151]
port-[75] [85, 101]
HTTPUtil-[118] [133, 137, 147, 162, 166, 223, 269]
tmp-[116] [141, 145, 170]
updir-[189] [199, 227]
log-[21] [204, 250]
File-[188] [234]
tdsContext-[191] [237]
downdir-[235] [245, 273]
##########
Please find the dataflow of the function. We present the source and list of target indices.
RequestParam-[12] [20, 28]
contactId-[17] [43]
sid-[25] [52]
mask-[33] [62]
contactManager-[39] [65]
deletePermission-[9] [67]
contact-[37] [69, 97]
sidObject-[47] [71, 106]
permission-[56] [73, 115]
String-[24] [78]
model-[82] [91, 100, 109, 126]
ModelAndView-[8] [120]
##########
Please find the dataflow of the function. We present the source and list of target indices.
text-[13] [24]
rtFormat-[18] [28, 62]
RTHtml-[1] [58]
mOut-[30] [64]
mImages-[37] [70]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [16]
ValidatorMetaData-[3] [18]
validatorMetaDataList-[20] [26, 50, 59]
clazz-[11] [41]
propertyName-[14] [43]
annotations-[35] [54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [7]
n-[5] [14]
Node-[4] [20]
map-[12] [23]
name-[8] [27]
attr-[21] [32, 40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Class-[2] [9, 59, 76]
final-[8] [15]
instance-[17] [23, 27, 65]
Object-[16] [29]
parentClass-[13] [40, 47, 92]
parent-[80] [80, 90, 101, 112]
childClass-[63] [82, 96, 110]
##########
Please find the dataflow of the function. We present the source and list of target indices.
bytes-[7] [17, 44, 88]
len-[10] [21, 48]
int-[9] [67]
i-[68] [72]
len-[74] [74]
len-[76] [74]
i-[74] [76]
i-[76] [76, 90]
System-[56] [80, 95]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[8] [13, 23]
queryParam-[2] [19]
name-[5] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[4] [7, 10]
Bitmap-[1] [14]
bitmap-[15] [24, 38, 51]
x-[5] [28, 42]
y-[8] [30, 44]
zoom-[11] [32, 46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
oos-[8] [15, 38]
e-[25] [34]
connector-[45] [50, 56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [10, 27, 39]
boolean-[2] [15, 45]
packageList-[12] [22, 42]
name-[6] [34]
c-[40] [52, 61, 63, 81, 87, 100, 112, 122]
if-[50] [75, 85]
canonicalName-[28] [77, 94, 106, 118]
shouldInclude-[70] [134]
result-[16] [137, 153]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [5]
final-[4] [8, 13]
Class-[9] [14]
value-[6] [17, 31, 45]
valueClass-[15] [25]
targetType-[10] [27, 47]
convertType-[2] [43]
ex-[54] [73]
##########
Please find the dataflow of the function. We present the source and list of target indices.
o-[6] [11, 20]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [5]
paramTemplates-[12] [17, 28]
ParameterizedTemplateModel-[6] [22]
paramTemplate-[7] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
logger-[16] [23]
sbbEntity-[6] [29, 41, 56, 69]
name-[9] [49, 75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[3] [5, 15, 17, 24, 26]
Map-[1] [13]
map-[19] [31, 46, 60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[12] [17, 35]
bytesRead-[13] [25]
bytesRead-[31] [31, 55, 67, 101, 125]
c-[36] [46, 61]
lineBuf-[27] [53, 65, 99]
lookingFor-[18] [72]
lookingFor-[76] [76, 81, 110, 117]
endSequence-[70] [83, 104]
##########
Please find the dataflow of the function. We present the source and list of target indices.
s-[23] [29, 126, 138]
int-[1] [41, 72]
i-[42] [46]
i-[50] [50, 94]
recbyte-[55] [65]
j-[73] [77]
j-[81] [81, 87]
ds-[57] [92]
nrecords-[101] [101]
i-[104] [104]
dataLoaded-[17] [109]
close-[124] [136]
##########
Please find the dataflow of the function. We present the source and list of target indices.
profile-[6] [11, 46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
V-[3] [7, 14, 35]
Collection-[1] [12]
vertex-[8] [22]
inwardEdgeVerticesForVertex-[16] [26, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Marker-[16] [16]
E-[1] [18, 26, 34, 112, 197, 205, 212]
h-[20] [20, 51, 60, 77, 131, 140, 185]
Node-[24] [24, 32, 110]
first-[28] [28, 58, 68, 129, 155, 177, 189, 208]
second-[36] [36, 66, 191]
currentLevel-[7, 47] [43]
n-[45] [45, 99]
currentLevel-[47] [47, 55, 83, 96, 118, 146, 168]
markers-[53] [53, 81, 116, 144, 166]
t-[114] [114, 175]
DataNode-[195] [195, 203]
firstDataNode-[199] [199, 215, 228]
item-[213] [213, 223, 242]
count-[235] [235]
##########
Please find the dataflow of the function. We present the source and list of target indices.
pos-[29] [8, 29]
s-[10] [10, 20]
Character-[16] [16]
pos-[8, 29] [24]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [8, 11]
parseInt-[3] [18]
buffer-[6] [24]
from-[9] [27]
to-[12] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
State-[3] [6]
old-[4] [15, 23]
newState-[7] [17, 46]
a-[12] [21, 27, 31, 33, 40, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
featureStyles-[11] [16, 27, 40]
featureTable-[5] [23, 36, 52, 59]
featureId-[8] [25, 38, 54, 61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ConceptType_Type-[10] [16, 46]
jcasType-[18] [25, 36, 48]
v-[5] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [5, 9, 21, 28, 119, 139, 153]
final-[4] [8, 18]
AtomicReference-[19] [26]
wb-[34] [45]
ps-[43] [53]
public-[0] [62]
throws-[12] [69]
InterruptedException-[15] [70, 270]
pm-[67] [72, 87, 221, 262, 293]
jobId-[6] [78, 126, 307]
title-[10] [82, 91, 311]
long-[94] [103]
startTime-[95] [106, 288, 318]
JsonObject-[129] [132]
response-[120] [136]
jo-[130] [142, 156]
result-[154] [173, 187, 198, 210, 243]
status-[140] [184, 194, 206, 234]
ar-[23] [202, 278, 327, 358]
stopTime-[104] [213, 286, 316]
System-[97] [215]
STATUS_REQUEST_DELAY-[116] [225]
Activator-[228] [237, 299]
e-[250] [253, 344, 347]
STATUS_REQUEST_TIMEOUT-[84] [290]
##########
Please find the dataflow of the function. We present the source and list of target indices.
K-[3] [9, 19]
V-[5] [11]
PersistentTreeMap-[7] [26]
c-[21] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [9]
JsonObject-[10] [14]
jsonObject-[11] [18, 37]
authToken-[6] [28]
JsonResult-[1] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
text-[5] [10, 14, 66]
java-[36] [44, 52, 60]
ComponentIDPropertyEditor-[73] [78]
st-[57] [84, 95, 104, 111]
cidPropEditor-[75] [91, 122]
setAsText-[2] [93]
results-[41] [118, 138, 146]
ComponentID-[27] [130, 136]
cid-[133] [150, 157]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DataRoot-[3] [10]
dataRootExt-[7] [13, 32, 35]
dataRoot-[11] [21, 26, 28, 39, 43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
response-[9] [15, 32, 54]
versionControl-[2] [19]
e-[39] [46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
dataset-[6] [14]
schema-[12] [24, 30, 36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Stage-[16] [22]
long-[2] [28]
numShards-[29] [35, 110]
awsClientConfig-[6] [39]
conf-[9] [41]
streamName-[12] [43]
e-[52] [67, 73, 100]
issues-[20] [76]
context-[25] [80]
Errors-[59] [96]
##########
Please find the dataflow of the function. We present the source and list of target indices.
madvocContainer-[8] [28, 37, 48, 57, 66, 75, 84, 93, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183]
##########
Please find the dataflow of the function. We present the source and list of target indices.
URLStreamHandler-[1] [9, 13, 163]
protocol-[6] [19, 54, 64, 113, 175, 186]
handler-[10] [24, 29, 160, 177, 190, 211]
String-[5] [31, 36, 103]
prevProtocol-[33] [46, 50]
createURLStreamHandlerProtocol-[38] [60, 203]
p-[87] [91]
p-[97] [97, 108]
handlerPkgs-[93] [106]
type-[121] [127, 143, 155, 165]
ctxLoader-[72] [129]
classname-[104] [133, 149]
Class-[117] [145]
handlerMap-[15] [171]
##########
Please find the dataflow of the function. We present the source and list of target indices.
out-[8] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
byte-[4] [17, 31]
src-[20] [28, 36, 48, 60, 72, 84, 96, 108, 120, 137, 151]
bytes-[7] [41, 53, 65, 77, 89, 101, 113, 125, 139]
offset-[10] [43, 55, 67, 79, 91, 103, 115, 127, 130, 153]
DataInputStream-[142] [146]
stream-[143] [160]
DescriptorException-[13] [175]
ex-[170] [177]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sleeComponent-[5] [18, 57, 105, 153, 201, 249, 297, 326]
componentID-[16] [27, 45, 65, 75, 93, 113, 123, 141, 161, 171, 189, 209, 219, 237, 257, 267, 285, 305, 315, 334]
deployableUnit-[8] [34, 82, 130, 178, 226, 274]
EventTypeID-[29] [43]
DependencyException-[11] [53, 101, 149, 197, 245, 293]
LibraryID-[77] [91]
ProfileSpecificationID-[125] [139]
ResourceAdaptorID-[173] [187]
ResourceAdaptorTypeID-[221] [235]
SbbID-[269] [283]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [4, 10]
it-[22] [34, 50]
InputStream-[43] [43]
getConfigurationStream-[46] [46]
configClass-[12] [48, 65, 107, 128]
decoder-[59] [59]
in-[63] [63]
catch-[69] [69, 87]
final-[7] [71, 89]
ConfigurationException-[16] [72, 103, 124]
e-[73] [73, 83, 93, 113]
LOG-[77] [77]
CodecException-[90] [90]
IOException-[92] [92]
incrementErrors-[97] [97, 118]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[6] [13, 17, 45]
String-[9] [14, 27, 46]
iNodes-[11] [31, 75]
it-[29] [37, 49, 67]
node-[47] [60]
databaseName-[15] [62]
statuses-[20] [64]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [7, 9]
final-[4] [27, 35]
OClassEmbedded-[36] [40]
database-[29] [42, 148]
sourceClass-[37] [59, 81, 101, 190, 290]
OCommandExecutionException-[22] [65, 114]
className-[54] [69, 118]
OPropertyImpl-[74] [78, 186]
prop-[75] [90]
fieldName-[85] [122, 194]
linkedClass-[130] [146, 165, 200]
linked-[141] [160, 175]
linkedType-[135] [169, 198]
OType-[134] [171]
type-[16] [196]
internalProp-[188] [210, 223, 236, 251, 266, 281]
max-[246] [255]
min-[261] [270]
defaultValue-[276] [285]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[3] [6, 14, 56]
final-[9] [13]
method-[11] [28, 37, 48, 68, 92, 112, 130, 141, 176, 276]
methodHandleByMethod-[24] [33]
args-[17] [42, 79, 118, 178, 209]
if-[46] [62, 231]
proxy-[7] [77, 105]
else-[85] [109, 170]
invoke-[4] [114]
data-[124] [135, 152, 161, 180, 200, 298]
provider-[148] [159, 172, 218]
tlp-[198] [205, 296, 303]
p-[211] [211]
return-[100] [217]
e-[228] [233, 251, 288]
Throwable-[20] [258]
onlyError-[247] [262]
cause-[260] [270, 278, 283]
ThreadLocalProvider-[197] [295]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16]
int-[13] [17]
fcommand-[6] [27, 69, 75, 81, 96, 102]
tempStr-[23] [36, 61, 114, 124]
leftCol-[14] [42, 67]
CellUtility-[38] [49, 63, 90]
rightCol-[18] [53, 94]
sheetConfig-[10] [110, 117]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 14]
typeInfo-[11] [18]
name-[7] [27]
GroupType-[2] [34]
subType-[16] [52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Type-[6] [12]
opcode-[4] [21]
ctype-[7] [23]
name-[10] [29]
ftype-[13] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
v-[8] [17, 27, 33]
verticies-[13] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[7] [11, 18, 30]
isEmpty-[3] [13]
##########
Please find the dataflow of the function. We present the source and list of target indices.
interceptorClass-[11] [19]
annotation-[17] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
key-[5] [15]
index-[9] [20, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
stream-[6] [19]
matcher-[12] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [4]
returnType-[11] [23]
mapper-[19] [33]
file-[8] [37]
javaType-[17] [39]
ApiException-[14] [51]
e-[46] [55]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[4] [10]
GeometryMetadata-[1] [17, 21]
metadata-[18] [25, 32, 39, 46, 57, 68, 79, 99, 110, 131, 142, 155]
geoPackageId-[5] [29]
tableName-[8] [36]
geomId-[11] [43]
envelope-[14] [50, 61, 72, 83, 92, 103, 114, 124, 135, 146]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Collection-[1] [13]
T-[3] [15, 29]
collection-[17] [24, 35]
value-[9] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
offset-[5] [21, 39, 44]
lastCommittedOffset-[19] [30, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
iqueue-[17] [17, 26, 69]
conn-[12] [24, 40, 64, 73, 85, 96]
WrappedByteChannel-[33] [33, 38]
c-[34] [34, 66]
ByteBuffer-[47] [47]
buf-[48] [48, 62, 78, 91, 104, 117]
takeBuffer-[50] [50]
SocketChannelIOHelper-[58] [58]
queue-[94] [94]
pushBuffer-[102] [102, 115]
IOException-[8] [111]
e-[112] [112, 121]
##########
Please find the dataflow of the function. We present the source and list of target indices.
profileEntity-[17] [32, 71, 88, 116, 136, 160]
profileTable-[26] [40, 58, 90, 138]
event-[65] [83, 129, 169, 175, 177]
persisted-[80] [97]
logger-[103] [110, 147, 154]
ac-[56] [165]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[1] [4, 51]
want-[5] [14, 29, 45, 72]
start-[16] [31]
i-[52] [56]
raw-[43] [58, 67]
i-[62] [62, 69, 75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[4] [21, 68, 82, 91]
node-[29] [44, 59]
ScopeNode-[46] [53, 57]
push-[16] [77]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[3] [7, 12]
String-[4] [8]
int-[0] [13, 20]
tag-[14] [25, 51, 53, 97, 119]
name-[5] [27, 63, 67, 101, 121]
descriptor-[9] [29, 76, 106, 123]
hashCode-[21] [37, 57, 59, 125]
entry-[33] [42, 49, 55, 61, 70, 81, 86, 88]
addConstantUtf8-[99] [104]
Entry-[32] [114]
constantPoolCount-[116] [116]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[0] [15, 27, 44]
raf-[10] [20, 47]
pos-[16] [24]
byte-[32] [38]
readLen-[28] [40, 58]
b-[35] [51, 70, 82, 94, 114]
rc-[45] [56]
convertunsignedByte2Short-[68] [80, 92]
String-[108] [112]
pidd-[109] [127, 134, 141]
##########
Please find the dataflow of the function. We present the source and list of target indices.
input-[8] [15, 22, 24, 33, 56, 73, 86, 173]
byte-[2] [43, 48, 54, 135, 165, 171]
i-[67] [71]
i-[80] [80, 90, 125, 131]
int-[66] [93, 140, 181, 191]
c-[84] [96, 102, 121]
digit-[94] [110, 137]
IllegalArgumentException-[11] [117]
input58-[51] [129, 149, 153, 198, 212, 223]
zeros-[141, 162] [147, 155]
zeros-[162] [162, 194, 265]
decoded-[168] [185, 204, 240, 244, 261, 267]
inputStart-[192] [196, 214, 225]
outputStart-[207] [207]
inputStart-[232] [232]
outputStart-[207, 253] [238, 246]
outputStart-[253] [253, 263]
##########
Please find the dataflow of the function. We present the source and list of target indices.
authentication-[8] [22, 41, 73]
getPrincipal-[2] [43]
principal-[39] [49, 60]
LdapUserDetails-[51] [54, 58]
details-[55] [63]
log-[27] [80, 87]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StringBuilder-[8] [13]
dataString-[10] [17, 72]
SEPARATOR-[28] [40, 56]
String-[1] [64]
newTokenString-[66] [79, 89, 98, 101]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [7, 10, 16, 48]
str-[8] [22]
delim-[11] [24]
values-[18] [29, 43, 50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ForwardPath-[2] [9, 13, 35]
path-[6] [15, 20, 40]
Path-[5] [26]
next-[10] [33, 49, 51]
of-[3] [38]
previous-[36] [47, 54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7]
newLocator-[2] [14]
resourceURL-[5] [16]
label-[8] [18]
##########
Please find the dataflow of the function. We present the source and list of target indices.
t-[6] [15]
getStackTrace-[3] [17]
StringBuilder-[22] [26]
StackTraceElement-[10] [32]
stackTrace-[13] [35]
str-[23] [38, 54]
e-[33] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
File-[8] [12]
tsFile-[9] [32, 53, 69]
Date-[1] [41]
MojoExecutionException-[6] [65]
e-[60] [71]
##########
Please find the dataflow of the function. We present the source and list of target indices.
beanDefinition-[8] [23, 36, 58, 91, 114, 130, 141, 160, 184, 194]
Object-[1] [44, 50, 153]
paramNo-[34] [52, 76]
int-[33] [69]
i-[70] [74]
i-[78] [78, 84, 97, 105, 136]
args-[47] [82, 103, 168]
WiringMode-[62] [118]
PetiteException-[19] [126, 180]
bean-[154] [158, 205]
ex-[175] [200]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Set-[2] [8, 14]
ORecord-[4] [10, 16]
source-[18] [24, 37, 50, 61, 70, 78]
target-[12] [31, 44, 57, 65, 74, 86]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
OContextConfiguration-[5] [18]
iServerConfig-[6] [20]
iParameters-[12] [25, 29, 41]
OServerParameterConfiguration-[9] [38]
param-[39] [47, 51]
configuration-[43] [59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
OrientGraph-[1] [8, 21, 46]
g-[9] [18, 43, 62, 66]
getTxGraphImplFactory-[23] [48]
pool-[13] [54]
settings-[37] [56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
n-[7] [18, 46, 51]
tagPlugin-[12] [31, 58]
tagPluginContext-[41] [55, 62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
context-[7] [27]
source-[11] [45]
output-[15] [47]
pool-[21] [49]
##########
Please find the dataflow of the function. We present the source and list of target indices.
present-[5] [12, 14, 20, 22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
value-[11] [22]
c-[7] [37, 46]
val-[16] [50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
entitiesCache-[13] [18, 113, 127]
i-[31] [35]
result-[37] [37, 48, 139]
result-[39] [37]
result-[41] [37]
length-[37] [39]
length-[39] [39]
length-[41] [39]
i-[37] [41]
i-[39] [41]
i-[41] [41, 50, 68, 141]
Object-[5] [45, 81, 110]
ded-[64] [73, 86, 95]
key-[82] [93, 105, 117, 131]
object-[55] [99, 107, 133]
cachedObject-[111] [122, 144]
else-[103] [137]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[1] [6]
fields-[13] [24]
e-[22] [32, 42]
FieldEditor-[20] [39]
pe-[40] [40, 56]
result-[7] [48, 54, 66]
Math-[50] [50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
channel-[7] [14, 30]
final-[5] [23]
InetSocketAddress-[24] [28]
remote-[25] [38, 44]
StringUtils-[18] [56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
File-[2] [9]
directory-[10] [19, 29, 42, 54, 64, 75, 84, 97, 106]
IOException-[7] [38, 73, 93]
##########
Please find the dataflow of the function. We present the source and list of target indices.
e-[8] [13, 26, 32, 45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
properties-[11] [16, 24, 34, 40]
PropertyInjectionPoint-[5] [19]
pip-[6] [29, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [5, 66, 71, 84]
numElements-[6] [13, 24, 31, 42, 48, 57, 62, 77]
IllegalArgumentException-[9] [20, 38]
sizeAfterLoadFactor-[68] [93]
bits-[85] [101]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cursor-[4] [12, 51, 77, 82]
t-[17] [26, 64]
sdata-[37] [47, 69, 93, 100]
level-[21] [55, 86]
j-[62] [73]
StructureData-[35] [98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [6, 8]
properties-[10] [14]
##########
Please find the dataflow of the function. We present the source and list of target indices.
o-[9] [22]
String-[20] [24, 44, 62]
key-[17] [31, 37, 47, 55, 65]
lastDotIndex-[35] [51, 72, 80]
int-[34] [83]
index-[84] [90, 154]
keyEnding-[45] [96]
e-[103] [106]
ArrayList-[113] [117, 136]
keyStart-[63] [123, 144]
propArray-[114] [128, 133, 146, 150]
arrayProperties-[119] [140]
value-[25] [156]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DatasetOuterDimension-[16] [20]
nestedDatasets-[10] [23]
first-[17] [31]
DataType-[1] [35, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
urlSafeKey-[17] [22, 37, 56]
com-[4] [44]
fromUrlSafe-[13] [54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StructureMembers-[4] [10]
wrapperSm-[5] [15]
m-[13] [27, 55, 69, 118]
v-[23] [37, 48, 64, 73, 79, 85, 91, 101, 112]
StructureDS-[103] [106, 110]
convertMemberInfo-[2] [116]
##########
Please find the dataflow of the function. We present the source and list of target indices.
MultiTypeData-[2] [9]
getMultiTypeData-[3] [12]
b-[6] [18]
result-[10] [22, 29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [5, 9]
alias-[6] [16, 33]
value-[10] [21, 43, 54]
actionsManager-[12] [29]
cfg-[27] [38, 45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
UnsafeBuffer-[6] [10]
termBuffer-[11] [18]
termOffset-[15] [22]
metadataBuffer-[7] [24]
##########
Please find the dataflow of the function. We present the source and list of target indices.
V-[3] [15, 44]
LinkedList-[13] [20]
name-[9] [31, 70]
int-[26] [34]
h-[27] [39, 66]
i-[35] [50]
e-[46] [55, 62, 72, 82, 90, 92]
hash-[29] [64]
eq-[68] [68]
values-[17] [78, 98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
message-[10] [15]
##########
Please find the dataflow of the function. We present the source and list of target indices.
NodeList-[10] [14]
doc-[5] [20]
nodes-[11] [29, 38, 65]
int-[35] [46, 93]
i-[47] [51]
numNodes-[36] [53]
i-[55] [55, 69]
Node-[59] [63, 110]
n-[60] [85]
att-[94] [98]
attrs-[83] [100, 113]
att-[106] [106, 117]
keyval-[111] [126, 137, 158, 168]
isRobots-[73] [145, 180]
content-[78] [166, 182, 192]
String-[77] [187]
vals-[190] [202]
##########
Please find the dataflow of the function. We present the source and list of target indices.
E-[3] [7, 17, 26, 34]
Queue-[5] [15]
queue-[19] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
valuelist-[28] [33, 49]
ValueListsType-[18] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
table-[17] [24]
db-[8] [29]
ctx-[5] [31]
suffix-[11] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
CandidateAnswerVariant_Type-[8] [14, 55]
jcasType-[16] [23, 39, 45, 57]
FSList-[1] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
num-[5] [23]
context-[10] [29]
escapeNum-[27] [31, 37, 87]
str-[17] [55]
transport-[40] [63, 90]
buf-[53] [67]
e-[74] [81]
QUOTE-[44] [94]
##########
Please find the dataflow of the function. We present the source and list of target indices.
s-[4] [9, 14, 21, 29, 36, 42, 50, 56, 63, 70, 76, 84, 90]
assert-[8] [13, 20, 49, 83]
slast-[52] [54]
states-[86] [88]
##########
Please find the dataflow of the function. We present the source and list of target indices.
total-[8] [20, 37]
v-[15] [22, 28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
groupNames-[5] [12, 17, 34]
String-[3] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[3] [12]
String-[5] [14, 21]
listOfIDs-[16] [34, 59, 76]
polymer-[29] [39]
grouping-[54] [63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
char-[8] [11, 45]
int-[2] [14, 21, 28]
start-[15] [31]
i-[29] [33]
str-[6] [35, 48]
i-[41] [41, 52, 67]
numPreEscapes-[22] [57, 79]
curChar-[46] [61, 76, 82]
separator-[9] [63]
split-[18] [72]
escapeChar-[12] [84]
numPreEscapes-[89] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [11, 15, 22]
long-[12] [16]
ClusterMember-[6] [23]
clusterMembers-[9] [26]
member-[24] [31, 38, 44]
position-[13] [42]
leadershipTermId-[17] [46, 48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 35, 54]
RpcResponseCommand-[12] [16]
responseCommand-[9] [18]
resp-[13] [26, 43]
clientErrMsg-[6] [41, 60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4, 7]
resolver-[8] [22]
systemId-[5] [26, 43]
r-[18] [33, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
bd-[19] [29, 41]
type-[6] [31, 33]
beanNameConsumer-[13] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
BoundingBox-[4] [12]
boundingBox-[5] [18]
projection-[8] [20]
query-[2] [24]
featureBoundingBox-[14] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
JsonArray-[1] [5]
array-[6] [13, 20]
addAll-[2] [18]
list-[16] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7, 13, 27, 55, 57, 64, 66, 73, 82, 170, 180, 191, 201, 211, 217]
Pair-[41] [48]
Map-[53] [71]
Object-[22] [75, 84]
HashMap-[62] [80]
localVarQueryParams-[43] [89, 105, 121, 137, 153]
type-[5] [101]
apiClient-[93] [109, 125, 141, 157, 183, 204]
relationTypes-[8] [117]
pageSize-[11] [133]
cursor-[14] [149]
permissions-[17] [165]
final-[169] [179, 190, 200]
localVarAccepts-[173] [187]
localVarContentTypes-[194] [208]
FactSheetListResponse-[1] [226, 230]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[5] [18]
childNode-[10] [23, 35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [23, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
bean-[8] [24, 30, 37, 45, 73]
proxyUnwrapper-[19] [26]
String-[1] [34, 78, 103]
mixInClass-[14] [58, 75]
Vocab-[53] [60]
Object-[7] [65]
mixinSource-[5] [71, 95]
nestedContextProviderFromMixin-[67] [86, 97]
contextProviderVocab-[80] [91, 138, 145]
getVocab-[2] [93]
mixinVocab-[54] [108, 115]
vocab-[104] [113, 130, 143, 150, 156]
classVocab-[35] [125, 132]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cls-[7] [19, 46, 75, 91, 107]
getContext-[9] [28, 62, 125, 136, 154, 165]
##########
Please find the dataflow of the function. We present the source and list of target indices.
factor-[5] [16, 39]
WebDAVException-[8] [21]
conditionFactors-[12] [35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [9]
fileName-[6] [19, 39]
result-[11] [24, 45]
String-[5] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
getAddressTransactions-[5] [17]
address-[8] [19]
limit-[11] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Class-[2] [5, 12, 39, 106]
classOrInterfaceWithInterfaces-[6] [19, 34, 42, 94, 109]
interfaceSearched-[9] [27, 59, 78, 128]
iface-[40] [51, 67, 76]
returnValue-[13] [65, 72, 84, 100, 122, 134]
checkInterfaces-[3] [74, 124]
superClass-[117] [126]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12]
puHolder-[10] [22]
URL-[31] [38, 88]
pu-[20] [45, 60, 81, 96, 112, 128, 146, 182]
jarfilesUrls-[33] [67, 85]
persistence_xml-[6] [73, 93]
jar-[58] [75]
url-[89] [100]
String-[57] [103]
scopedPersistenceUnitName-[104] [106, 117, 122, 152, 157, 175, 186]
deploymentUnit-[14] [126]
ROOT_LOGGER-[138] [171]
##########
Please find the dataflow of the function. We present the source and list of target indices.
PipelineConfiguration-[1] [7]
issues-[14] [21, 39, 46, 61, 68, 87, 94, 109, 115]
upgrade-[31] [33, 44, 79, 92, 103]
pipelineConf-[8] [37, 53, 59, 85, 101, 107, 122]
library-[5] [57, 83, 105]
##########
Please find the dataflow of the function. We present the source and list of target indices.
deviceId-[8] [29, 65, 87, 149]
int-[16] [38]
l-[39] [43]
l-[51] [51, 70, 92]
queue-[59] [75, 107]
lastCommandId-[23] [99]
MAX_EXECUTION_QUEUE-[81] [101]
cudaEvent_t-[57] [104]
event-[105] [115, 120, 127, 133]
cnt-[139] [139]
deviceClocks-[25] [145]
##########
Please find the dataflow of the function. We present the source and list of target indices.
requestURL-[13] [18]
httpRequest-[5] [20, 36, 52, 60, 74, 76]
locale-[29] [34]
requestPath-[45] [50]
httpResponse-[8] [80, 82]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HollowObjectTypeMapper-[8] [13]
o-[5] [17, 42]
RecordPrimaryKey-[1] [30]
typeMapper-[10] [32, 38]
extractPrimaryKey-[2] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
listeners-[13] [23, 26]
l-[8] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[3] [7, 45, 122]
n-[8] [15, 27, 39, 42, 48, 125]
final-[6] [20, 121]
int-[21] [25]
pos-[31] [29]
m-[22] [31, 35]
avail-[35] [33]
readBytes-[39] [37]
avail-[33] [50, 56]
toSkip-[46, 116] [62, 77, 84, 88, 128]
result-[52] [67, 93, 118, 130]
is-[69] [69, 80, 100]
System-[71] [71]
skipByReading-[75] [75]
skip-[4] [82]
toSkip-[111] [111]
toSkip-[118] [116]
readBytes-[135] [133]
t-[123] [135, 138]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 17, 26, 30, 34]
String-[20] [35, 43]
CellRangeAddress-[22] [40]
poiCell-[15] [48, 114, 129]
caddress-[41] [51, 62, 71, 77, 90, 96]
cellRangeMap-[24] [53]
key-[44] [57]
fcell-[11] [67, 86, 112, 121]
originRowIndex-[28] [110]
sheetConfig-[7] [116]
cellAttributesMap-[32] [118]
saveAttrs-[36] [131]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [5, 9]
number-[6] [12, 25, 36]
rounded-[10] [19, 42, 46, 51]
Integer-[21] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
deployment-[5] [10, 34, 41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
avail-[10] [15, 26, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[8] [11]
Variable-[2] [17]
struct-[6] [20]
v-[18] [30, 57]
attName-[9] [34]
att-[28] [40, 45]
attValue-[12] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
TreeItem-[1] [9, 13]
LogTreeNode-[17] [21]
localRoot-[5] [25, 31, 37, 55, 82, 120]
localLeaf-[10] [46, 137, 146]
logTreeNode-[18] [50]
Tree-[68] [72]
ArrayList-[76] [80]
names-[77] [93, 99]
it-[97] [107, 127]
t-[69] [114, 141]
doTree-[2] [118]
String-[125] [125]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [8]
typeName-[9] [27, 56]
typeClass-[21] [32, 50, 67, 83]
loader-[38] [52]
editor-[61] [72, 87, 95]
IntrospectionException-[15] [79]
text-[6] [91]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[8] [63]
parent-[12] [67, 110, 123, 138]
DETAIL_KEY-[33] [84, 125]
getName-[80] [97]
SUMMARY_KEY-[54] [101, 140]
##########
Please find the dataflow of the function. We present the source and list of target indices.
toPut-[10] [14, 20, 32, 54, 66, 138]
IComplexNDArray-[3] [44, 56, 59, 64]
column-[7] [49]
int-[6] [70, 112]
i-[71] [75]
r-[45] [77, 97, 119, 128]
i-[83] [83, 94, 101, 113, 117]
putComplex-[61] [90]
n-[88] [103]
i-[125] [125, 132, 142]
##########
Please find the dataflow of the function. We present the source and list of target indices.
t-[9] [14, 26, 44]
type-[6] [24]
Throwable-[8] [32]
bad-[33] [49]
##########
Please find the dataflow of the function. We present the source and list of target indices.
vermarktungsart-[26] [31, 45]
String-[18] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
managerFactory-[7] [16, 36]
notNull-[14] [21]
log-[11] [23, 41]
ResourceChangeHandler-[2] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [8, 11]
RegExpAndDurationTimeCoverageEnhancer-[2] [17]
matchPattern-[6] [19]
substitutionPattern-[9] [21]
duration-[12] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Date-[13] [16]
s-[11] [26]
start-[14] [28]
end-[17] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [10]
File-[3] [12, 23]
file-[24] [29, 43]
nextFile-[31] [31]
allFiles-[14] [39, 48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
changesContainer-[7] [16, 28, 32, 43, 53]
pageIndex-[11] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
SchedulerSupport-[10] [12]
U-[19] [23, 39]
concatMapIterable-[25] [45]
mapper-[41] [47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[8] [11, 20, 71, 139, 141]
uri-[14] [23, 74]
part1-[12] [31, 35, 50]
path-[9] [43, 48]
part2-[21] [54, 62]
path-[60] [58]
path-[62] [58]
port-[65] [82, 88, 97]
WebSocketImpl-[84] [90]
HandshakeImpl1Client-[102] [106]
handshake-[103] [110, 117, 152, 176]
path-[9, 58] [114]
host-[72] [123]
headers-[128] [145]
kv-[143] [157, 163]
##########
Please find the dataflow of the function. We present the source and list of target indices.
fetchPlan-[6] [13, 18, 22, 32, 39, 41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Attribute-[8] [15]
atts-[10] [18]
att-[16] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [13]
uri-[5] [20, 35, 61]
real-[14] [25, 45]
ctxt-[16] [31, 57]
getResourceAsStream-[2] [33, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 11]
s-[6] [17, 28, 37]
out-[9] [21, 44]
StringBuilder-[31] [35]
replace-[3] [40]
sb-[42] [50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Token_Type-[8] [14, 45]
jcasType-[16] [23, 35, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7, 10]
out-[20] [26, 44, 50, 144, 149]
FileOutputStream-[19] [29]
bufferedWriter-[17] [36, 79, 100]
BufferedWriter-[15] [39]
key-[8] [68, 85, 93]
description-[5] [89]
value-[11] [97]
e-[110] [113, 127, 134, 160, 167]
IOException-[109] [159]
error-[130] [163]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12]
int-[5] [9]
index-[6] [23]
tag-[10] [25, 31]
value-[14] [27, 33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
thisNode-[5] [18]
i-[16] [24, 39]
DecisionTree-[4] [32, 37]
nextChildTree-[34] [49, 68]
matchingValue-[47] [61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
reader-[6] [17, 29, 38]
evaluate-[2] [23]
sourceName-[10] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
String-[10] [14]
writer-[7] [18]
write-[3] [20]
fieldName-[11] [22]
value-[15] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Box3D_I32-[5] [8]
boxA-[6] [14, 26, 38, 50, 62, 74]
boxB-[9] [20, 32, 44, 56, 68, 80]
##########
Please find the dataflow of the function. We present the source and list of target indices.
addOperation-[5] [12, 61]
String-[9] [28]
factoryClass-[10] [33, 58]
newFactoryClass-[29] [39, 48, 56, 74]
FACTORY_CLASS-[16] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
tc-[27] [46]
wantFeatureType-[5] [50]
ds-[16] [52, 104]
configResult-[44] [59, 65]
makeTablesDefault-[32] [70]
structAdded-[34] [72]
makeNestedTables-[37] [75]
config-[84] [91, 106]
NestedTable-[98] [102]
errlog-[54] [108]
flatTable-[99] [115]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[3] [8, 15, 22, 28, 97, 136, 169]
ResponseHandler-[1] [13, 20]
final-[7] [31]
responseParam-[33] [41, 91, 130, 163, 197]
status-[39] [53, 79, 83, 122, 193]
urlCalledParam-[9] [64]
entity-[89] [101, 112, 128, 140, 151, 161, 173, 182]
responseJsonString-[98] [116, 137, 155]
else-[76] [119, 158]
EntityUtils-[108] [147, 178]
FluidClientException-[68] [189, 213]
responseString-[170] [209]
responseHandler-[17] [225]
##########
Please find the dataflow of the function. We present the source and list of target indices.
GaragenKategorieTyp-[16] [29]
objektKategorie2-[23] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Pattern-[8] [11, 17]
p-[9] [25]
d-[5] [29]
m-[23] [41]
LOG-[32] [48, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[8] [17, 33, 53, 64]
R-[10] [25, 41, 124, 180, 191, 249, 256]
ObservableSource-[15] [37, 120]
source-[19] [48, 67]
t-[54] [58, 104, 140]
Callable-[50] [62, 177, 189]
ex-[79] [86, 93, 150, 157, 164, 206, 213, 220]
observer-[27] [95, 113, 166, 222, 240, 259, 264, 284]
EmptyDisposable-[89] [109, 160, 216, 236]
r-[126] [130, 175, 194, 280]
mapper-[43] [136]
Throwable-[78] [149, 205]
Exceptions-[82] [153, 209]
u-[181] [185, 231, 261]
ScalarDisposable-[247] [254]
sd-[251] [268, 271]
##########
Please find the dataflow of the function. We present the source and list of target indices.
snapshot-[8] [15, 34]
close-[28] [36, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
timer-[5] [15, 25, 36, 39, 58, 74, 81, 97]
EJB3_TIMER_LOGGER-[32] [70]
callTimeout-[63] [90, 95]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 15, 26]
String-[18] [20, 31, 33]
Map-[16] [27]
msgToSet-[10] [46]
entry-[35] [50, 56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[4] [7, 62]
Encoding-[19] [22, 25]
long-[16] [31]
valueCount-[5] [42]
uncompressedPageSize-[8] [44]
bytes-[11] [46]
statistics-[14] [48]
rlEncoding-[20] [50]
dlEncoding-[23] [52]
valuesEncoding-[26] [54]
out-[34] [65]
beforeHeader-[32] [71]
rowCount-[17] [74]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[2] [13, 23, 98]
String-[3] [14, 24, 39, 41, 99, 113]
field-[10] [17, 27, 106]
upperClassName-[25] [49, 155]
map-[43] [54, 62, 68, 77, 88, 142, 157]
fieldName-[15] [72, 81, 146]
upperCaseFirstFieldName-[100] [118]
protobufAttribute-[7] [123, 135]
setter-[114] [148, 161]
CLASS_TO_FIELD_SETTERS_MAP_CACHE-[45] [151]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Record-[1] [10]
record-[11] [26, 37, 78, 97, 101, 140]
response-[5] [56, 72]
parser-[64] [80]
conf-[17] [88]
e-[116] [128, 134]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[6] [19]
classLoader-[9] [21]
url-[15] [26, 32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HashMap-[1] [12, 21]
String-[3] [14]
Object-[5] [16]
i-[30] [34]
i-[42] [42, 52, 58, 70, 74]
data-[18] [46, 86, 107, 116, 125, 133, 137]
queue-[36] [54]
export-[7] [61]
int-[29] [69]
i-[82] [82, 92, 98]
playbackModes-[76] [94]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[6] [10]
actionRequest-[8] [20, 29]
request-[18] [38, 72, 82, 94]
dispatcher-[36] [47, 78, 90]
response-[27] [52, 74, 84, 96]
target-[42] [60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
PersistenceProviderAdaptor-[2] [11, 48, 89]
deploymentUnit-[6] [20, 29, 31, 40, 52]
String-[8] [46, 59]
adaptorModule-[9] [64, 71]
key-[60] [69, 76, 97, 111]
provider-[15] [78]
map-[50] [93, 107]
current-[91] [102, 116, 122]
adaptor-[12] [113, 118]
##########
Please find the dataflow of the function. We present the source and list of target indices.
graph-[29] [37, 41, 62]
final-[27] [47]
T-[4] [72]
oldValue-[49] [74]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [9]
req-[6] [12, 21]
query-[10] [25, 33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
MultiTypeData-[2] [9]
getMultiTypeData-[3] [12]
c-[6] [18]
result-[10] [22, 29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
string-[6] [14, 42, 49, 59, 70, 81, 92, 104, 109, 129, 169, 221]
schema-[9] [27, 100, 117, 158, 204]
Integer-[77] [125]
Object-[2] [148]
Schema-[8] [155]
value-[149] [165, 176, 183]
makeValue-[3] [167]
possible-[156] [171]
if-[174] [219]
e-[216] [235]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Granularity-[13] [16]
Set-[1] [21]
Locator-[3] [23, 30]
isReroll-[11] [39]
delayedMetricsRerollGranularity-[14] [48]
getGranularity-[42] [54]
delayedMetricsStorageGranularity-[17] [60, 73, 104]
locators-[25] [77, 94, 112, 121]
executionContext-[8] [84, 98, 116]
slotKey-[67] [86]
getDelayedLocators-[82] [96]
parentSlotKey-[69] [100]
getLocators-[5] [114]
##########
Please find the dataflow of the function. We present the source and list of target indices.
m-[16] [22, 119]
numKeysToBeAdded-[20] [30, 38, 50]
int-[19] [43, 47, 67]
targetCapacity-[44] [59, 63, 79]
MAXIMUM_CAPACITY-[61] [65]
newCapacity-[69, 81] [77]
newCapacity-[83] [81]
newCapacity-[81] [87, 95]
table-[71] [89]
Map-[6] [105, 137]
K-[10] [111, 143]
V-[14] [115, 147]
i-[117] [129, 151]
e-[149] [159, 165]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16, 20]
int-[5] [9, 21, 26]
String-[13] [17]
tag-[6] [31, 47]
name-[14] [33, 51]
descriptor-[18] [35, 53]
bootstrapMethodIndex-[22] [37, 55]
index-[10] [45]
hashCode-[27] [57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
eventListener-[15] [20]
addCacheDependencies-[3] [23]
cacheType-[6] [25]
properties-[9] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [7]
objects-[11] [20, 62]
newEdits-[14] [36]
final-[32] [42, 66]
String-[33] [43, 46]
newEditsVal-[34] [52]
response-[26] [86, 98, 106]
uri-[68] [90]
json-[44] [92]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [8, 12, 46, 106, 113, 124]
pn-[9] [15]
final-[7] [17, 29, 105]
n-[13] [26, 51, 67]
-[21] [30, 109]
factor-[56] [56, 63, 69, 83, 91, 98]
isPrime-[19] [61]
v-[35] [75, 115, 131, 146]
Integer-[33] [79]
n-[91] [89]
n-[89] [96]
i-[125] [129]
i-[138] [138, 143, 150]
factors-[107] [141, 159]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 19, 58, 132]
TargetScope-[20] [24, 135, 146]
scope-[11] [28]
namingListener-[15] [38, 53, 82]
holder-[32] [43, 48, 84, 94, 174]
ListenerHolder-[31] [51, 63, 72, 104, 127, 139, 150]
targetScope-[21] [55, 98, 112, 160]
NamingListener-[14] [61, 70]
holdersByListener-[34] [75, 87]
byListenerCopy-[65] [78, 89]
holdersForTarget-[106] [117, 122, 162, 170]
Map-[59] [133]
List-[102] [137, 148]
FastCopyHashMap-[68] [144]
holdersByTarget-[108] [153, 165]
byTargetCopy-[141] [156, 167]
##########
Please find the dataflow of the function. We present the source and list of target indices.
pruneTimer-[11] [16, 23, 30]
public-[0] [41]
delay-[6] [54, 56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
str-[5] [15, 30]
isDefault-[9] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ncf-[5] [13, 19]
GetDataRunnable-[26] [30]
public-[0] [35]
final-[25] [45]
StringWriter-[46] [50]
sw-[47] [63, 70]
task-[65] [79, 95]
runner-[27] [84]
##########
Please find the dataflow of the function. We present the source and list of target indices.
attachTimer-[2] [12]
timerID-[5] [14]
acReferencesHandler-[20] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ZonedDateTime-[7] [11, 44]
DateTimeService-[19] [37]
currentBlock-[9] [48, 61]
verifyAndCreateTempTables-[2] [59]
lastStartupBlock-[46] [63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
RunAs-[1] [26, 34, 56, 99]
sc-[6] [41, 59, 65, 84, 102, 108]
principal-[57] [73, 100, 116]
UndertowLogger-[47] [90]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [5, 9]
columnName-[6] [14]
propertyName-[10] [20]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4]
line-[5] [10, 20, 32, 38, 42, 57, 70, 75]
consume-[40] [40]
START_COMMENT-[14] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
CtClass-[5] [8]
superClass-[9] [14, 26, 41]
concreteClass-[6] [22, 33]
cce-[54] [57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
java-[1] [16, 29, 43, 56]
Codec-[7] [22, 35, 49, 62, 91, 105]
final-[15] [42]
int-[69] [78]
i-[79] [83]
numCodecs-[70] [85]
i-[87] [87, 98]
id-[94] [103, 116, 123, 130]
uniqueSet-[53] [112, 126]
retval-[26] [119, 135]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [6]
output-[13] [11]
output-[17] [11]
output-[21] [19]
output-[25] [19]
output-[29] [27]
output-[33] [27]
output-[37] [35]
output-[41] [35]
output-[45] [43]
output-[43] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [9, 16, 25, 46]
BinarySearch-[7] [23]
int-[40] [43, 67]
list-[18] [51, 73]
index-[44] [55]
element-[47] [60]
Override-[31] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
entryMap-[10] [23]
HashMap-[17] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [10, 22, 91]
StringBuilder-[11] [15]
commandName-[6] [17]
option-[24] [31, 47, 61, 77]
usage-[12] [38, 68, 98, 119]
param-[93] [107]
##########
Please find the dataflow of the function. We present the source and list of target indices.
y-[9] [13]
y-[17] [17, 36]
int-[8] [22]
x-[23] [27]
x-[31] [31, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 54]
prefix-[6] [11, 15, 29, 138]
StringTokenizer-[23] [27]
StringBuilder-[36] [41]
tokens-[24] [47, 57]
token-[55] [55, 69, 76, 83, 91, 107]
stringBuilder-[38] [87, 99, 128]
URLEncoder-[103] [103]
java-[116] [116]
io-[118] [118]
UnsupportedEncodingException-[120] [120]
ex-[121] [121]
##########
Please find the dataflow of the function. We present the source and list of target indices.
se-[6] [21, 30, 40, 50]
double-[18] [27, 37, 47, 79, 86]
final-[36] [46]
int-[13] [58]
i-[59] [63]
length-[14] [65]
i-[67] [67, 76]
Point2D_F64-[8] [71]
points-[9] [74]
pt-[72] [82, 89, 93, 107]
x-[80] [84, 95, 99, 113]
y-[87] [91, 103, 109, 117]
tranX-[19] [97]
c-[38] [101, 119]
s-[48] [105, 115]
tranY-[28] [111]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [11, 15]
String-[16] [27, 44, 67, 109]
List-[1] [29]
ctx-[9] [35]
entry-[33] [47, 102]
Object-[12] [53]
name-[45] [64, 79, 82]
targetName-[17] [70, 75]
ValidationConstraintContext-[84] [88]
target-[62] [92, 175]
valueName-[68] [94, 173]
Check-[31] [99]
check-[100] [114, 134, 149, 179]
checkProfiles-[112] [125]
constraint-[147] [158]
vcc-[85] [162]
value-[54] [164, 177]
Violation-[3] [171]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [5, 9, 65, 76]
final-[4] [8]
absPath-[10] [18, 23, 30, 38, 54, 83]
isWindowsDrive-[28] [33]
basePath-[6] [35, 45, 72]
StringBuilder-[57] [61]
getParts-[70] [81]
int-[87] [94, 144, 190]
i-[95] [99]
baseParts-[68] [105, 120, 151]
absParts-[79] [109, 127, 197, 230]
i-[115] [115, 122, 129, 136, 145, 149]
start-[88] [134, 147, 193]
i-[156] [156, 191, 195]
result-[58] [161, 170, 180, 207, 216, 226, 238]
i-[202] [202, 232]
File-[174] [220]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ByteBuffer-[1] [7]
frameNumber-[11] [11, 23]
pic-[5] [17]
_out-[8] [19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Attribute-[1] [20]
attName-[5] [25]
att-[21] [32, 41, 45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 13, 27, 79, 96, 142]
ArrayList-[14] [21, 28, 35]
snapshots-[18] [43, 83, 100, 190]
logs-[32] [45, 135, 146, 192]
archive-[6] [49]
serviceCount-[10] [51]
long-[54] [60, 66, 73]
int-[9] [80]
snapshotStepsSize-[81] [91]
Snapshot-[16] [97]
lastLeadershipTermId-[56] [107, 153, 182]
snapshot-[98] [109, 115, 121, 127]
lastTermBaseLogPosition-[62] [113, 159, 184]
appendedLogPosition-[75] [119, 165, 186]
committedLogPosition-[68] [125, 171, 188]
Log-[30] [143]
log-[144] [155, 161, 167, 173]
RecoveryPlan-[1] [180]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ComponentView-[1] [6, 41]
cv-[7] [13, 24, 30, 35, 48, 75, 99, 105]
componentView-[9] [26, 97]
componentViewName-[39] [60]
reference-[66] [73]
e-[85] [92]
##########
Please find the dataflow of the function. We present the source and list of target indices.
parse-[3] [20]
source-[6] [22]
Element-[2] [25]
doc-[14] [28]
root-[26] [35]
IOException-[9] [46]
e-[41] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
PnSignalingParams-[2] [11, 21, 31, 45, 53]
MediaConstraints-[7] [17, 27]
iceServers-[43] [55]
pcConstraints-[9] [57]
videoConstraints-[19] [59]
audioConstraints-[29] [61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
azimuths-[10] [15, 38, 55]
float-[1] [18]
r-[26] [30]
nRays-[20] [32]
r-[34] [34, 40, 45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Observable-[3] [5, 56, 64]
int-[14] [17]
timestamp-[12] [35, 48]
ts-[23] [40, 82]
tr-[75] [92, 103]
pageSize-[15] [112]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sm-[8] [18, 22]
names-[3] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
tag-[6] [13, 25, 51, 59, 65, 80, 106, 114, 120, 131, 137, 145]
tagName-[11] [42, 97]
TagType-[31] [86]
checkNestedDecoraTags-[36] [91]
decoraTagName-[40] [95]
decoraTagStart-[49] [104]
decoraTagEnd-[57] [129]
defineDecoraTag-[71] [151]
##########
Please find the dataflow of the function. We present the source and list of target indices.
jarFile-[12] [18, 27, 69, 76]
JarFile-[11] [21]
jar-[6] [23, 55]
PluginExecutionException-[9] [51]
e-[46] [61, 86]
IOException-[45] [85]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StringBand-[6] [10]
url-[7] [22, 29, 44, 61, 68, 77]
protocol-[17] [26]
host-[39] [48]
port-[54] [72]
##########
Please find the dataflow of the function. We present the source and list of target indices.
logger-[20] [27, 79, 86]
profileName-[33] [54, 92]
profileObject-[48] [57]
profileTable-[50] [98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
FindFile-[30] [34]
ff-[31] [38, 45, 72]
File-[50] [58]
f-[59] [70, 82]
count-[88] [88, 107]
log-[94] [101]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[5] [15]
value-[8] [17]
##########
Please find the dataflow of the function. We present the source and list of target indices.
out-[6] [14, 27, 34, 47]
vendorData-[9] [22, 41]
writeObject-[3] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[7] [11, 36]
onCancelled-[19] [27, 41]
UnicastProcessor-[9] [34]
capacityHint-[16] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[5] [10, 27]
CoordinateTransform-[1] [19]
v-[20] [31, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
LinearProbing-[17] [27]
keys-[9] [38, 148]
-[35] [43, 49, 64, 70, 87, 93]
int-[6] [48, 104]
oldCapacity-[15] [52, 111]
K-[32] [61, 68, 117]
newCapacity-[50] [76, 99]
SuppressWarnings-[57] [80]
V-[40] [84, 91]
Object-[74] [97]
i-[105] [109]
i-[113] [113, 122, 141]
oldKeys-[33] [120]
key-[118] [127, 137]
newKeys-[62] [133, 150]
newValues-[85] [135, 156]
oldValues-[41] [139]
values-[46] [154]
##########
Please find the dataflow of the function. We present the source and list of target indices.
classLoader-[6] [30]
fc-[13] [34, 41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
delete-[1] [16]
HttpDelete-[15] [19]
uri-[4] [21]
response-[9] [24, 34, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [8, 73]
list-[10] [16, 28, 44, 54, 76]
final-[5] [62]
StringBuilder-[63] [67]
builder-[64] [81, 90, 98, 107]
item-[74] [102]
##########
Please find the dataflow of the function. We present the source and list of target indices.
w-[5] [13, 17, 31, 49, 173, 377, 385, 408, 428]
int-[7] [28, 104, 202, 206, 259, 282]
ss-[39] [47, 256]
spins-[35] [61]
r-[68, 70] [66]
r-[8] [68]
r-[74, 76] [72]
r-[66] [74]
r-[80, 82] [78]
r-[72] [80]
r-[78] [86]
spins-[91] [91, 164]
WorkQueue-[4] [96, 99]
pred-[29] [115, 130, 279]
ws-[102] [120, 135, 142]
j-[107] [128, 144]
v-[97] [140, 151, 157]
SPINS-[37] [166]
c-[194] [210, 261, 270, 289, 308, 393, 445, 466]
SMASK-[132] [221]
ac-[203] [227, 252]
prevctl-[196] [264, 310, 348, 468]
t-[283] [296, 322, 331]
parkTime-[198] [316, 342, 350, 401, 438]
deadline-[200] [334, 352, 447]
Thread-[186] [357, 360]
U-[300] [366, 395, 404, 415, 458]
wt-[358] [370, 381, 419]
ctl-[212] [391, 443]
PARKBLOCKER-[372] [421]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[6] [14, 36]
e-[21] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Ptg-[2] [8, 37, 51]
final-[7] [13, 17, 21]
ptg-[23] [39, 53, 68, 100, 111, 133, 183]
originalOperandClass-[27] [47, 102, 185]
int-[14] [61]
currentRow-[62] [64, 74, 87, 104]
shiftFormulaRef-[19] [79, 98, 117, 153, 171, 187]
ptgs-[11] [94]
position-[15] [96]
AttrPtg-[113] [127, 131]
newPtg-[128] [137]
fptg-[145] [163, 165]
singlePtg-[161] [181]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16, 20, 24]
int-[5] [9]
boolean-[1] [28]
String-[21] [39, 48, 106, 125]
HashMap-[37] [46]
TieCell-[41] [50, 76]
tieCells-[43] [71, 79]
poiCell-[18] [87, 180, 191, 197]
tieCell-[77] [93, 97, 109, 133]
parent-[53] [115]
errorMethod-[107] [139]
errorMessage-[127] [146, 151, 162, 203]
cell-[14] [158, 217]
formRow-[6] [213]
formCol-[10] [215]
updateGui-[29] [219]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
TransactionalAction-[14] [18]
public-[0] [23]
logger-[31] [38]
profileTable-[6] [44, 50]
removeObjectPool-[2] [48]
sleeTransactionManager-[10] [58, 63]
action-[15] [75, 81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
SelectionKey-[4] [9, 109]
key-[5] [23, 27]
channel-[37] [47, 55, 65, 103, 127]
socket-[63] [67, 71, 80]
w-[88] [99, 113, 119, 129, 145, 157, 165, 177]
wsf-[90] [123]
i-[11] [137]
IOException-[14] [151]
ex-[152] [185]
##########
Please find the dataflow of the function. We present the source and list of target indices.
interceptorFactory-[5] [20]
priority-[8] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Serializable-[0] [4]
resultSet-[8] [22, 29, 45]
classIdTypeFrom-[27] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
##########
Please find the dataflow of the function. We present the source and list of target indices.
commandName-[13] [31, 38]
scriptOutDirectory-[24] [33, 40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [4]
obj-[5] [13, 20, 32, 36, 55]
Remote-[15] [26, 30]
remote-[27] [42]
IOException-[8] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[2] [25]
copy-[3] [26, 90, 117]
ByteArrayOutputStream-[32] [36]
out-[16] [40, 48, 55, 105]
ObjectOutputStream-[15] [43]
baos-[33] [45, 67]
obj-[7] [52]
ByteArrayInputStream-[73] [77]
data-[62] [79]
ObjectInputStream-[20] [85]
bais-[74] [87]
in-[82] [92, 112]
Streams-[101] [108]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[8] [18]
counter-[6] [21, 38]
snapshotCoutner-[19] [29, 42]
value-[9] [31, 44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[4] [7]
value-[8] [13, 17, 44]
dim-[5] [21, 34, 41]
shape-[19] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[7] [10]
value-[11] [27, 52]
parent-[5] [36, 40, 55]
Attribute-[1] [44, 48]
name-[8] [50]
addAttribute-[2] [57]
att-[45] [59, 63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
poly-[6] [19]
p-[9] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
constraint-[8] [20, 32]
MvelConstraint-[22] [25, 30]
mvelConstraint-[27] [37]
accessor-[35] [45, 55]
ClassFieldReader-[47] [53]
getFieldName-[2] [58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
String-[10] [19, 31, 54, 74]
configBuildRef-[7] [23, 100]
Map-[15] [29, 48]
Cell-[17] [52, 65]
cachedMap-[21] [58]
entry-[56] [68, 77]
originFormula-[75] [85, 94]
cell-[66] [92]
actionFullName-[11] [96]
rowsMap-[37] [98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ByteBuffer-[7] [11, 17]
nalUnits-[9] [20]
out-[12] [23, 31]
nal-[18] [35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [10, 27, 40, 67, 122, 163, 295, 307]
ActionsManager-[11] [22]
actionsManager-[12] [34, 49]
String-[43] [45, 123, 164, 296, 312, 314]
actions-[32] [57, 85, 258]
Print-[68] [72]
print-[69] [76, 132, 157, 197, 249, 339, 346, 393]
width-[6] [82, 229, 255, 382, 397]
actionRuntime-[97] [100, 108, 270, 273, 281]
ar-[118] [126, 175, 187, 211, 291, 299]
actionMethod-[146] [152]
Chalk256-[136] [201, 217, 350, 366]
signature-[165] [227]
aliases-[47] [242, 318]
Comparator-[93] [266]
Map-[41] [308]
entry-[316] [327, 360, 376]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [14]
fieldName-[5] [19]
Object-[1] [22]
realFieldName-[15] [33]
value-[23] [38, 161]
returnType-[11] [45, 54, 76, 95, 117, 139]
Integer-[58] [65]
Boolean-[80] [87]
Long-[99] [106]
Double-[121] [128]
Float-[143] [150]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 9]
newurl-[10] [12, 20]
url-[6] [16]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [15, 23, 32]
Method-[6] [25, 34, 39]
HashMap-[21] [30]
Class-[10] [47, 63]
superInterfaces-[50] [52, 66]
xInterfaceClass-[11] [54, 98]
ignore-[17] [72, 91]
superInterface-[64] [76, 89]
abstractMethods-[27] [83, 122, 142]
getAllInterfacesMethods-[8] [87]
methods-[42] [96]
i-[107] [112]
methods-[114, 116, 118] [114]
length-[114, 116, 118] [116]
i-[114, 116, 118] [118]
methods-[114] [128, 134]
i-[118] [130, 136]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16, 20]
String-[9] [13, 17]
cv-[27] [33]
visitField-[2] [35]
access-[6] [37]
name-[10] [39]
descriptor-[14] [41]
signature-[18] [43]
value-[22] [45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [15, 29]
keys-[17] [41]
Object-[19] [50]
keyArgs-[31] [64]
scalaArgs-[52] [70]
lang-[11] [72]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sqlSelect-[6] [13, 23, 29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [13]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7, 10, 38, 67, 69, 76, 78, 85, 94, 150, 160, 171, 181, 191, 197]
bookmarkType-[5] [23, 113]
ApiException-[14] [30]
Pair-[53] [60]
Map-[65] [83]
Object-[16] [87, 96]
HashMap-[74] [92]
localVarQueryParams-[55] [101, 117, 133]
apiClient-[105] [121, 137, 163, 184]
groupKey-[8] [129]
sharingType-[11] [145]
final-[149] [159, 170, 180]
localVarAccepts-[153] [167]
localVarContentTypes-[174] [188]
BookmarkListResponse-[1] [206, 210]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Serializable-[37] [39]
unsetFaultTolerantResourceAdaptorContext-[7] [47]
IllegalArgumentException-[11] [57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
graph-[15] [21, 27, 84, 188, 400]
final-[13] [33, 111, 177, 207, 218]
doc-[35] [43, 104, 344, 406]
ODocument-[34] [65, 76, 122, 129, 333, 357, 380]
String-[61] [72, 101, 116, 329]
List-[63] [74, 120, 331]
docs-[124] [144, 164]
OrientBaseGraph-[14] [148, 389]
id-[137] [152]
treeRidbagEdgesToRemove-[67] [158, 337]
fieldName-[102] [162]
it-[186] [200, 227]
Edge-[210] [214, 275, 305]
Index-[180] [219]
Element-[184] [223]
index-[225] [241, 263, 281, 301]
OrientIndex-[251] [258, 289, 296]
OrientVertex-[253] [260]
idx-[255] [265, 293, 310]
OrientEdge-[291] [298, 315]
e-[306] [317]
Map-[59] [325]
entry-[335] [348, 361]
Iterator-[178] [355]
iter-[359] [373, 383]
docEdge-[381] [393]
settings-[412] [418]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [6, 12, 18]
final-[5] [11]
i-[19] [23, 30, 37, 43]
array-[25] [25, 35]
array-[27] [25]
length-[25] [27]
length-[27] [27]
object-[13] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[5] [9, 30, 37, 46]
T-[3] [14]
object-[15] [27, 52]
array-[12] [40]
sum-[31] [43, 54, 61]
method-[21] [48]
v-[38] [56]
return-[60] [70]
throwable-[67] [77]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [8]
event-[5] [11]
contextName-[9] [23, 35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
buf-[5] [11, 24]
short-[8] [17]
s1-[9] [38, 52]
int-[31] [46]
s2-[18] [60]
posneg-[32] [63]
double-[1] [67]
nn-[47] [69]
##########
Please find the dataflow of the function. We present the source and list of target indices.
activeWindow-[10] [28, 39]
page-[37] [47, 61]
RepositoryView-[55] [59]
view-[56] [72, 77]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DataDescriptor-[0] [9, 13]
assDD-[10] [17, 25, 31, 37, 43, 49, 55, 61, 67, 73, 99]
bitWidth-[5] [45, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [10, 18]
Point-[3] [12, 20]
projection-[33] [38, 52, 82, 87, 105]
points-[14] [59, 65, 75, 123]
toWebMercator-[50] [61]
simplifiedPoints-[22] [69, 108, 114, 121, 127]
simplifyPoints-[5] [73]
simplifyTolerance-[8] [77]
Units-[42] [91]
ProjectionTransform-[48] [97]
WEB_MERCATOR_PROJECTION-[56] [101]
fromWebMercator-[99] [110]
##########
Please find the dataflow of the function. We present the source and list of target indices.
location-[9] [28, 52, 113, 135, 173, 196, 230, 247, 269]
DataFactory-[32] [38, 44]
wantFeatureType-[6] [50, 73, 87, 133, 232, 358]
task-[18] [54, 350, 362]
errlog-[21] [57, 81, 153, 222, 236, 321, 364]
result-[41] [63, 75, 89, 94, 105]
FeatureDataset-[2] [125, 353]
CdmrFeatureDataset-[117] [129]
opt-[127] [140, 147, 159, 263, 274, 282, 293, 307, 327]
ucar-[11] [177]
String-[8] [193]
MFileCollectionManager-[209] [212]
open-[3] [214]
spec-[194] [216, 218]
CompositeDatasetFactory-[200] [226]
dcm-[210] [234]
DatasetUrl-[240] [243]
durl-[241] [252, 346]
Optional-[123] [259]
CoverageDatasetFactory-[265] [301, 315]
NetcdfDataset-[339] [342]
ncd-[340] [360, 373]
fd-[354] [369, 380]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[13] [22]
memberValues-[17] [25, 35]
Object-[15] [32]
mvName-[23] [39, 56]
cp-[9] [49]
annotation-[6] [52]
mv-[43] [58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
record-[7] [18, 39]
date-[4] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[3] [9, 35, 42, 54, 63, 69]
iClusterNames-[11] [17, 21, 45, 57]
Set-[1] [33]
final-[32] [60]
s-[70] [77, 88]
partitions-[37] [84, 95]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16]
String-[5] [9, 13]
cv-[23] [28]
visitInnerClass-[2] [30]
name-[6] [32]
outerName-[10] [34]
innerName-[14] [36]
access-[18] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [10, 13, 16, 19, 34, 37, 94, 100]
float-[2] [22, 25, 31]
ipktyp-[14] [45, 136, 148]
iiword-[8] [59, 108]
nword-[11] [61, 81]
kxky-[17] [63, 85, 118]
nbits-[20] [65, 87, 120]
ref-[23] [67, 122]
scale-[26] [69, 124]
miss-[29] [71, 126]
decimalScale-[38] [73, 128]
nword-[90] [90]
nword-[11, 90] [102]
ksgrid-[97] [110, 116]
else-[133] [145]
##########
Please find the dataflow of the function. We present the source and list of target indices.
boolean-[16] [21]
ds-[5] [25, 40, 54, 75, 97, 142, 358, 371]
filter-[32] [36]
isCatRef-[22] [46, 66]
release-[17] [48, 57, 124, 128, 336, 362, 375]
InvCatalogRef-[27] [52, 69, 73, 360, 365, 369]
out-[11] [79, 83, 332]
catref-[70] [89, 116, 126, 366, 373]
countCatrefs-[106] [106]
context-[14] [118, 222, 245, 268, 288, 334]
InvDataset-[4] [138, 150, 157, 164, 206, 276, 312]
List-[136] [148]
dlist-[140] [167, 315]
dds-[165] [172, 182, 207, 220, 277, 286, 313, 320, 328]
leaves-[152] [178, 188, 209, 242, 265, 279]
listen-[112] [216, 236, 259, 282]
type-[199] [229, 252]
Type-[201] [231, 254]
task-[8] [294, 299, 330, 342, 347]
crawlDirectDatasets-[2] [326]
break-[305] [353]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Collection-[5] [11]
Dimension-[7] [13, 20]
subset-[9] [23]
set-[15] [30]
d-[21] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
className-[6] [15]
e-[25] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
NotificationError-[8] [12]
error-[9] [16, 23, 53]
errorMsg-[5] [20]
NotificationResponse-[1] [36, 41]
notification-[38] [45, 58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
terrain-[26] [31, 45]
TerrainType-[18] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Throwable-[4] [8, 15, 22, 29, 36, 58, 84]
List-[2] [13, 82]
ArrayDeque-[27] [34]
deque-[31] [41, 51, 61, 115]
t-[9] [45]
e-[59] [59, 69, 80, 135]
CompositeException-[71] [71, 74, 78]
ce-[75] [75, 88]
exceptions-[86] [86, 99, 119]
int-[96] [96]
i-[111] [97, 111, 123]
i-[97, 111] [107]
list-[17] [131, 141]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[3] [6, 9]
key-[7] [16, 41]
url-[10] [43]
t-[35] [48, 54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
WAMInstruction-[3] [9, 28, 35, 37, 51, 58, 65]
instructions-[11] [40]
optimizeConstants-[16] [46]
SizeableList-[1] [49]
matcher-[30] [68]
result-[53] [71, 81]
instruction-[66] [76]
##########
Please find the dataflow of the function. We present the source and list of target indices.
stageLib-[5] [17]
stageLibraryName-[8] [21]
exportedInterface-[11] [23]
def-[15] [28, 40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [4, 14, 19]
final-[7] [11, 46, 76, 106]
queryResponse-[20] [24, 125]
response-[9] [30, 54]
responseClass-[16] [32]
MAPPER-[26] [50]
ErrorResponse-[47] [56]
error-[48] [63, 67, 83, 93, 113]
LOGGER-[61] [81, 91, 111]
e1-[78] [87]
e-[41] [97, 108, 117]
IOException-[77] [107]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [21]
moveOffset-[8] [26, 34, 45, 49, 53]
buf-[32] [36]
moveSize-[22] [40]
readPos-[45] [43]
readLimit-[49] [47]
writePos-[53] [51]
##########
Please find the dataflow of the function. We present the source and list of target indices.
pointer-[9] [19, 39, 52]
pointersPool-[11] [23]
clear-[2] [25, 58]
OPointer-[8] [38]
pointerMapping-[41] [56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cat-[9] [19, 33]
URI-[1] [25]
getUnresolvedUrlName-[27] [37, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[4] [10]
BaseKnowledgeBuilderResultImpl-[12] [21]
parserErrors-[14] [25]
iter-[23] [31, 42]
error-[40] [50, 61, 88, 99, 150, 161, 191]
ParserError-[52] [55, 59]
markers-[8] [63, 113, 163, 184]
DroolsBuildMarker-[6] [68, 118, 168, 189]
err-[56] [70, 76]
KnowledgeBuilderResult-[90] [93, 97]
res-[94] [106, 120]
errorLines-[104] [126, 130, 136]
ExpanderException-[152] [155, 159]
exc-[156] [170]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[7] [14]
httpMethod-[8] [23]
HttpRequestBase-[1] [34, 46]
method-[15] [42, 77]
type-[36] [51, 58, 89]
hasBody-[11] [68]
httpRequest-[47] [72, 87, 110, 119]
uri-[5] [79, 114]
e-[99] [106]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Map-[7] [11, 19, 102]
String-[9] [15, 21, 23, 93, 106]
jsonBody-[5] [30, 47, 63]
JsonNode-[4] [44]
linksNode-[45] [56, 61, 73, 81]
x-[89] [96, 119, 133, 188]
URI-[13] [104]
links-[17] [112]
rel-[94] [114, 160, 183]
subobj-[141] [147, 165]
JsonNodeType-[36] [153]
linkTemplates-[25] [169, 196]
parseLinkObject-[158] [181]
ObjectNode-[163] [186]
linksForRel-[167] [194]
##########
Please find the dataflow of the function. We present the source and list of target indices.
event-[14] [22, 38, 69]
fragmentTag-[20] [32, 48]
editor-[53] [61, 106, 117, 132, 157, 189]
String-[19] [75, 120]
link-[67] [82, 86, 123, 182]
mLinkSelection-[96] [100, 112]
Selection-[93] [115]
str-[130] [138]
selection-[94] [142, 148, 161, 167]
linkText-[121] [154, 173]
url-[76] [180, 197]
##########
Please find the dataflow of the function. We present the source and list of target indices.
c-[6] [14, 20, 76]
MatrixException-[9] [28, 30]
final-[4] [36]
ColumnVector-[1] [37, 41]
int-[5] [48]
r-[49] [53]
m_nRows-[43] [55]
r-[58] [58, 65, 73]
cv-[38] [61, 81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cPtr-[7] [20, 30]
BitStreamFilterType-[1] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
GrantedAuthority-[3] [11, 19, 37]
HashSet-[17] [24]
authorities-[13] [28, 40]
mapped-[21] [43, 66, 75]
authority-[38] [50]
defaultAuthority-[61] [70]
##########
Please find the dataflow of the function. We present the source and list of target indices.
functionContext-[16] [34, 51, 289, 320]
args-[49] [59, 77, 89, 142]
FunctionException-[42] [65, 115]
PdxInstance-[79] [82, 87]
criteria-[71] [93, 137, 159, 178, 207, 209, 241, 247, 253, 259, 317]
TextPageCriteria-[70] [96, 140]
pdxInstance-[84] [99, 129]
e-[110] [117, 335, 358, 363]
Object-[48] [151, 224, 233, 268, 270, 305, 312]
cache-[20] [155, 174, 200]
Region-[145] [166, 218, 266, 276]
GeodePagination-[185] [189]
TextPolicySearchStrategy-[193] [198]
geodeSearch-[195] [203]
String-[147] [220]
Collection-[149] [222, 231]
pagingRegion-[153] [227, 278]
pagination-[186] [237]
region-[172] [273]
collection-[235] [284, 315]
PagingCollection-[303] [310]
pageCollection-[307] [328]
logger-[339] [350]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Class-[5] [8]
getMethods-[3] [17]
superclass-[6] [19]
interfaces-[11] [21]
methods-[14] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
str-[8] [15, 32, 55, 74]
RegionRequest-[4] [25, 42, 92, 148]
matcher-[49] [53, 61, 80, 98, 110, 122, 134, 153, 164, 175, 186]
ResolvingException-[11] [70]
Integer-[94] [106, 118, 130]
BigDecimal-[151] [162, 173, 184]
##########
Please find the dataflow of the function. We present the source and list of target indices.
load-[2] [20]
bindings-[15] [24, 26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
req-[5] [16, 18, 33, 45]
resp-[8] [24]
SendError-[12] [57]
ioe-[52] [63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
IHTTPSession-[4] [12]
Response-[1] [14, 21]
interceptor-[16] [24]
handle-[2] [26, 44]
session-[5] [28, 46]
response-[33] [38]
return-[37] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
text-[5] [16, 34]
clients-[11] [20, 36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[8] [12]
String-[9] [15, 38, 59, 72]
List-[2] [23]
RowsMapping-[4] [25]
NavigableMap-[13] [36]
ConfigRangeAttrs-[17] [40, 61]
shiftMap-[19] [44]
fullName-[10] [48, 87]
tailmap-[42] [65]
entry-[63] [75, 95]
key-[73] [83]
rowsMappingList-[27] [91, 114]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[6] [15]
i-[16] [20]
i-[26] [24]
block-[7] [29, 36, 42, 51, 59, 68, 76, 85]
i-[24] [31, 38, 44, 53, 61, 70, 78, 87]
div-[34] [49, 66, 83]
##########
Please find the dataflow of the function. We present the source and list of target indices.
SqlType-[1] [9]
Class-[5] [14, 52, 66]
clazz-[6] [17, 38]
x-[15] [19, 23, 25, 57]
sqlType-[10] [32, 43, 49, 72, 83, 90]
interfaces-[55] [69]
types-[34] [74]
i-[67] [78]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 8, 17, 24, 144]
filename-[6] [29, 31, 61, 70, 72, 81, 88, 90, 96, 208]
abspath-[9] [44, 46, 107, 114, 116, 122, 135]
q-[19] [131, 147, 268]
currentpath-[145] [155, 167, 272]
File-[161] [165, 170, 191, 254]
current-[162] [175]
contents-[173] [184, 194, 257]
subfile-[192] [200, 218, 229, 243, 255, 262, 276]
wantdir-[12] [216, 227]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[5] [17, 23, 36]
BoolFunction-[1] [29]
boolFunctions-[13] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [11, 15, 25, 29]
String-[12] [18]
indexDefinition-[9] [57, 59, 142]
clustersToIndex-[20] [63, 69, 76, 82, 164]
HashSet-[72] [85]
e-[109] [124, 212, 227, 292, 300, 317]
name-[126] [136, 229, 286, 312]
valueSerializer-[31] [144]
apiVersion-[95] [169, 184]
indexId-[130] [175, 179, 190, 240, 248]
assert-[178] [183]
rebuild-[23] [195]
progressListener-[27] [199]
Exception-[108] [211, 267]
OLogManager-[112] [215, 272]
storage-[132] [244]
OInvalidIndexEngineIdException-[256] [256]
ignore-[257] [257]
doReloadIndexEngine-[260] [260]
ex-[268] [284]
OIndexException-[294] [298, 308]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StyleDao-[1] [6, 41]
StyleTable-[17] [33]
styleDao-[7] [38, 50, 59]
attributesDao-[25] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
OClientConnection-[1] [12]
iChannelId-[6] [20]
connection-[14] [25, 29, 37]
protocol-[9] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[7] [11, 24]
OBinarySerializer-[9] [22]
type-[17] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
String-[6] [10]
deploymentRuntimeName-[7] [19]
subdeploymentName-[11] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
graphName-[5] [20]
permissions-[8] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
##########
Please find the dataflow of the function. We present the source and list of target indices.
containerName-[8] [26, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
logger-[6] [17, 35]
appenderName-[10] [21]
Appender-[14] [24]
currentAppender-[15] [32]
captureAppender-[26] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
makeStation-[2] [16]
stationData-[5] [18, 38]
s-[12] [23, 34]
recnum-[8] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [11, 18, 51, 80]
long-[2] [12, 58, 81]
rankedPositions-[15] [22, 41, 84, 96, 111]
int-[19] [28, 67]
i-[29] [33]
length-[35] [35]
length-[37] [35]
i-[35] [37]
i-[37] [37, 43, 68, 72]
ClusterMember-[6] [52]
members-[9] [55]
member-[53] [61]
length-[74] [74, 113]
length-[76] [74]
i-[74] [76]
i-[76] [76, 86, 98]
newPosition-[91] [101, 103]
rankedPosition-[93] [105]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 13, 95, 102, 136, 143, 189, 196]
TypeLiteral-[5] [11, 93, 100, 106, 134, 141, 173, 187, 194, 199]
typeLiteral-[15] [22, 47, 64, 150, 167, 179, 203]
type-[20] [33, 86]
Errors-[37] [41]
errors-[38] [54]
ParameterizedType-[79] [84]
parameterizedType-[81] [114]
guiceProviderType-[97] [126]
SuppressWarnings-[89] [130, 183]
-[104] [152, 209]
wrappedPrimitives-[138] [156, 162]
recreated-[191] [212]
##########
Please find the dataflow of the function. We present the source and list of target indices.
tmd-[6] [18, 29, 44, 50, 68, 83, 89, 105]
methodVisitor-[10] [27, 34, 66, 73, 103, 112, 121]
wd-[40] [79]
##########
Please find the dataflow of the function. We present the source and list of target indices.
e-[7] [12, 46]
maxSize-[17] [32]
delegate-[35] [42]
add-[4] [44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 18]
String-[5] [9, 19]
beanName-[6] [30]
beanDefinition-[26] [44, 105, 178, 217]
arguments-[16] [56, 143]
cd-[34] [66, 137]
methodName-[10] [70, 115, 141, 188]
methods-[64] [75, 79, 88, 99, 121]
method-[50] [119, 155, 167, 201, 212]
MethodDescriptor-[61] [134]
md-[135] [150, 157]
PetiteException-[97] [174]
references-[22] [203]
MethodInjectionPoint-[206] [210]
ref-[195] [214]
mip-[207] [221]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HashMap-[8] [17]
String-[10] [19, 36, 82]
ProfileAttribute-[12] [21]
cmpInterface-[30] [47]
method-[45] [57, 70, 85, 118, 180, 204]
attributeGetterMethodPrefix-[38] [78, 93]
attributeName-[83] [102, 128, 130, 140, 142, 155, 178, 200, 251, 295, 324]
DeploymentException-[6] [114, 196]
profileAttribute-[167] [173, 255, 299, 306, 326]
ProfileAttributeImpl-[165] [176]
e-[191] [212]
cmpField-[226] [243, 259]
getDescriptor-[228] [276]
profileIndex-[274] [287, 310]
map-[14] [320, 337]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Se3_F64-[2] [8, 21]
planeToWorld-[3] [9, 14, 18, 78, 88]
Vector3D_F64-[25] [29, 50, 54, 58, 62]
plane-[6] [31, 35, 39, 80]
axisZ-[26] [44, 70, 86]
axisX-[51] [72, 82]
axisY-[59] [74, 84]
##########
Please find the dataflow of the function. We present the source and list of target indices.
CatalogExt-[5] [23, 36]
catalogs-[13] [39]
result-[25] [45, 56, 82]
ext-[37] [49]
o1-[59] [65]
o2-[61] [73]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[1] [6, 9, 12, 16, 22]
len-[13] [29, 50, 417, 425, 441]
i-[19] [34, 41, 406, 431, 446]
lo-[10] [48, 56, 60, 76, 126, 130, 146, 196, 200, 216, 266, 270, 286, 336, 340, 356, 422, 436]
S-[62] [78, 97, 113, 132, 148, 167, 183, 202, 218, 237, 253, 272, 288, 307, 323, 342, 358, 377, 393]
B-[68] [85, 103, 120, 138, 155, 173, 190, 208, 225, 243, 260, 278, 295, 313, 330, 348, 365, 383, 400]
hi-[7] [91, 95, 111, 161, 165, 181, 231, 235, 251, 301, 305, 321, 371, 375, 391, 412]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Module-[18] [24]
moduleName-[9] [35]
final-[14] [39]
PersistenceProvider-[4] [42, 50, 57, 77]
module-[25] [46]
List-[2] [55]
serviceLoader-[44] [70, 80]
provider1-[78] [91, 98]
result-[59] [94, 104]
##########
Please find the dataflow of the function. We present the source and list of target indices.
repositionableStream-[19] [23]
position-[4] [25, 39]
newPosition-[8] [27, 41]
fileChannel-[33] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
fi-[14] [20, 43, 74, 97]
file-[5] [26]
edit-[8] [45]
fragments-[39] [50, 69]
Tuple-[31] [59]
Atom-[35] [63]
ByteBuffer-[37] [65]
fragment-[67] [76, 80]
NIOUtils-[22] [92]
##########
Please find the dataflow of the function. We present the source and list of target indices.
index-[11] [26, 110, 313, 328]
OBinaryCondition-[36] [41]
OIdentifier-[47] [51]
keyCondition-[38] [56, 114, 303]
key-[48] [63]
OAndBlock-[13] [72, 87, 92]
block-[14] [75]
IndexSearchDescriptor-[1] [98, 102]
result-[99] [106, 112, 301, 344, 351]
indexKeyValue-[89] [116, 264]
String-[22] [120, 196]
indexFields-[24] [123]
blockIterator-[85] [126, 150, 160, 275]
blockCopy-[73] [128, 348]
boolean-[67] [138, 143]
OBooleanExpression-[83] [157]
singleExp-[158] [168, 180, 252]
OExpression-[61] [173]
OContainsTextCondition-[170] [178, 227, 231, 250]
if-[166] [187, 209, 339]
left-[174] [189, 199, 241]
indexField-[121] [211]
found-[68] [219, 341]
indexFieldFound-[144] [223, 292]
condition-[228] [237, 244, 272]
breakHere-[139] [289]
##########
Please find the dataflow of the function. We present the source and list of target indices.
node-[11] [21, 29]
name-[5] [25, 37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ncfile-[7] [14, 30, 37, 56, 88, 96, 130, 154, 162, 183]
file-[50] [61, 69, 104]
file-[114] [114, 119, 128, 189]
file-[116] [114]
countAccessed-[114] [116]
countAccessed-[116] [116]
release-[4] [132]
cacheLog-[78] [138, 144]
name-[84] [150, 181]
System-[108] [173]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Vector-[1] [8, 12]
String-[4] [16]
osname-[17] [30]
enumt-[41] [51, 64]
CatalogEntry-[58] [58, 62]
e-[59] [59, 72, 81, 96, 115]
SYSTEM-[78] [78]
systemId-[5] [90, 105]
windows-[27] [94]
map-[9] [111, 127, 143]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[5] [8, 11, 14, 17, 21, 28, 35, 42, 49, 60]
xb-[12] [24, 38]
xa-[6] [26, 40]
yb-[15] [31, 45]
ya-[9] [33, 47]
dx0-[22] [52, 54]
dy0-[29] [56, 58]
dx1-[36] [63, 65]
dy1-[43] [67, 69]
error0-[50] [73, 79]
error1-[61] [75, 89]
tol-[18] [81, 83, 91, 93]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
sheet-[7] [18, 32]
rowIndexStart-[11] [22]
removingRow-[16] [27, 36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Map-[1] [12]
String-[3] [14]
Object-[5] [16]
qs-[18] [34, 54, 75, 96, 109, 125, 136]
timeParams-[29] [40, 47, 60, 68, 81, 89, 102]
metricPath-[120] [131]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [31]
e-[33] [49]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [5]
tabName-[7] [16, 50, 64, 117, 132, 152]
parent-[21] [30, 42, 56, 74, 85, 93, 109, 120, 124, 140, 144]
tabIndex-[12] [38]
String-[6] [53, 162, 177]
sheetName-[54] [82]
sheet1-[72] [101, 172, 185]
ConfigurationUtility-[168] [181]
skippedRegionCells-[179] [183, 194, 203]
sheetConfig-[107] [190, 199]
cellRangeMap-[166] [192, 201]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[8] [14]
HashMap-[12] [21]
hashMap-[18] [27, 42]
playlistName-[9] [33]
BroadcasterPlaylist-[2] [38]
provider-[6] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
V-[5] [10, 17]
K-[3] [15]
map-[19] [23]
value-[11] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
a-[5] [10, 21, 28, 144]
int-[18] [25, 32]
bl-[33] [44, 83, 132]
bh-[35] [48, 99, 138]
len-[39] [57, 71, 92, 109, 119, 127, 146]
ah-[26] [66, 103, 106, 140]
al-[19] [68, 76, 114, 123, 125, 134]
bufa-[46] [85, 130]
bufb-[50] [136]
len-[144] [142]
len-[146] [142]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
int-[10] [14]
buffer-[7] [18]
termOffset-[11] [24]
termId-[15] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [8]
movie-[6] [15, 35, 45]
videoTrack-[13] [26, 30]
mediaFrameNo-[9] [32]
editedTv-[22] [47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Date-[6] [10]
String-[1] [15]
time-[7] [26]
formattedTime-[16] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
field-[5] [13, 23, 33, 43, 53, 63, 73, 83, 93, 103, 113, 123, 137, 152, 174]
Byte-[19] [29]
Short-[39] [49]
Integer-[59] [69]
Long-[79] [89]
Float-[99] [109]
Double-[119] [129]
valueStr-[8] [139, 161]
String-[7] [146]
##########
Please find the dataflow of the function. We present the source and list of target indices.
type-[7] [13, 23, 35, 43, 56, 69, 82, 95, 108, 121, 135, 148, 161]
##########
Please find the dataflow of the function. We present the source and list of target indices.
command-[6] [10, 17, 24, 31, 38, 45, 52, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 20]
ptg-[7] [33, 104, 115, 252]
areaPtg-[28] [38, 47]
int-[35] [44, 53, 60, 91]
i-[61] [65]
rowList-[67] [67, 80, 315]
rowList-[69] [67]
rowList-[73] [67]
size-[67] [69]
size-[69] [69, 317]
size-[73] [69]
i-[67] [73]
i-[69] [73]
i-[73] [73, 84, 236, 256, 312, 327]
originFirstRow-[36] [100, 187, 264]
Area3DPxg-[106] [109, 113, 117, 121]
area3dPxg-[123] [137, 147, 165, 176, 205, 216, 227]
new3dpxg-[118] [154, 161, 172, 183, 192, 201, 212, 223, 241]
originalOperandClass-[11] [158]
shiftRow-[92] [189, 198, 266, 270]
originLastRow-[45] [196, 268]
newPtg-[24] [234, 254, 325]
unitSize-[54] [238, 258, 329]
AreaPtgBase-[31] [246, 250]
areaPtgBase-[247] [272, 278, 284, 290, 296, 302]
##########
Please find the dataflow of the function. We present the source and list of target indices.
logger-[10] [17]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[4] [7, 10]
WAMCallPoint-[1] [14, 18]
offset-[8] [20, 42]
length-[11] [22]
functorName-[5] [24, 31, 44]
entry-[15] [35, 48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HTTPSession-[5] [10, 72, 78]
HTTPMethod-[2] [20, 35, 58]
meth-[21] [32, 106, 138]
m-[8] [37, 112]
session-[11] [39, 114]
url-[14] [41, 116]
MOCKMETHODCLASS-[27] [54]
cons-[60] [66, 108]
methodcl-[52] [68]
String-[13] [82]
HTTPException-[18] [96, 128]
e-[91] [100, 123, 132]
Exception-[90] [122]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4, 28]
filename-[5] [20, 40, 48, 53]
dataDir-[29] [46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
info-[12] [21, 113, 145, 165]
src-[6] [27, 38, 59, 109, 153, 178, 189, 209]
prefix-[9] [34, 36, 52, 143, 176]
ZipEntry-[46] [50, 170, 174]
entry-[47] [55, 66, 75, 83, 95, 171, 185, 200]
JarOutputStream-[18] [70]
L-[80] [88]
jout-[19] [91, 98, 196, 238, 256]
File-[5] [104]
i-[122] [126]
files-[107] [128, 138]
i-[132] [132, 140]
jar-[3] [136]
buffer-[163] [167, 224, 228, 242]
FileInputStream-[203] [207]
int-[121] [212]
len-[213] [218, 246]
in-[220] [220, 250]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[10] [13]
buf-[8] [17, 32, 51]
offset-[19] [19]
byte-[5] [24, 39, 57]
value-[14] [27, 43, 61]
offset-[34] [34, 53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Oparse-[9] [13]
jjtn000-[10] [27, 30, 60, 69, 104, 186, 191]
OStatement-[2] [40]
result-[41] [45, 85]
jjtree-[23] [56, 100, 114, 182]
jjtc000-[19] [65, 97, 107, 179]
getToken-[34] [73, 195]
jjte000-[92] [123, 137, 143, 158, 171]
RuntimeException-[125] [135]
ParseException-[7] [145, 155]
Error-[169] [205]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sex-[24] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Label-[2] [12]
value-[6] [14]
##########
Please find the dataflow of the function. We present the source and list of target indices.
buffer-[7] [18]
context-[10] [20]
##########
Please find the dataflow of the function. We present the source and list of target indices.
i-[20] [24]
i-[31] [31, 38, 58, 62]
oa-[15] [34, 45, 51, 80, 90, 99, 105, 108, 118, 126, 132]
operations-[26] [36]
operationAnalysisMap-[7] [41, 95, 122]
int-[19] [57]
i-[69] [69, 77]
attributes-[64] [75]
attr-[73] [82, 110]
##########
Please find the dataflow of the function. We present the source and list of target indices.
float-[1] [17, 23]
i-[31] [35]
nRays-[37] [37]
nRays-[39] [37]
i-[37] [39]
i-[39] [39, 44, 49]
lons-[20] [42, 57]
myASIBs-[10] [47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [8, 11, 14]
NTLMAuthScheme-[19] [23]
scheme-[20] [27, 34, 41, 48, 56]
userName-[6] [31]
password-[9] [38]
workstation-[12] [45]
domain-[15] [52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ds-[5] [20, 31, 44, 84]
String-[37] [55]
id-[38] [63]
fileOutName-[57] [78]
out-[70] [86, 91]
messBuffer-[33] [88, 97, 111]
ioe-[108] [117, 132, 138]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[12] [23]
i-[24] [28]
dimensions-[14] [30, 43]
i-[36] [36, 47, 52]
dim-[41] [55, 63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
configs-[8] [12, 44]
config-[16] [20, 31]
Config-[6] [49]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Size-[1] [4, 32]
comp-[8] [15, 22, 42, 53]
size-[5] [28, 34, 45]
compWidth-[13] [40]
compHeight-[20] [51]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [9]
c-[6] [12]
s-[10] [21, 37]
i-[19] [30, 43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
parent-[7] [11, 21]
DapSort-[17] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
copy-[3] [14]
input-[6] [16]
output-[9] [18]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
ReferencedData-[2] [18]
ref-[7] [24]
data-[13] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
frameLength-[8] [27, 33, 57]
buffer-[10] [37, 51]
LITTLE_ENDIAN-[24] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [23, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
addr-[5] [18]
url-[10] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Class-[4] [13, 27, 36, 47]
List-[2] [25]
thePackage-[11] [55]
iClassLoader-[21] [57]
discovered-[51] [67, 84]
theInterface-[17] [76]
classList-[31] [80, 113]
ex-[93] [108]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ByteBuffer-[2] [7, 19, 36, 39]
nalUnits-[9] [22, 48]
size-[13] [25, 43]
nal-[20] [29]
allocate-[37] [41, 50, 54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
E-[11] [20]
c-[13] [24]
boolean-[3] [30, 44]
i-[22] [37, 49]
ret-[45] [45, 64]
add-[47] [47]
changed-[31] [59, 62, 69]
##########
Please find the dataflow of the function. We present the source and list of target indices.
args-[7] [25]
commandLine-[21] [32]
options-[27] [34]
taskFactory-[17] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 26, 49, 72, 111, 129, 164, 204]
servletRequest-[6] [17, 34, 84]
MultipartRequestWrapper-[19] [27, 31]
multipartRequest-[28] [39, 57, 135]
paramNames-[55] [65, 76]
String-[53] [73, 112]
paramName-[74] [88, 119, 139]
targets-[10] [97]
in-[106] [115]
name-[113] [124, 227]
j-[150] [154]
paramValues-[156] [156, 168, 194, 209, 215, 220]
paramValues-[158] [156]
paramValues-[160] [156]
length-[156] [158]
length-[158] [158, 211]
length-[160] [158]
j-[156] [160]
j-[158] [160]
j-[160] [160, 170, 196]
FileUpload-[130] [165]
paramValue-[166] [177, 186]
value-[206] [229]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 16]
req-[11] [18]
##########
Please find the dataflow of the function. We present the source and list of target indices.
AObject-[5] [8]
obj1-[6] [14, 26, 38, 60, 72]
obj2-[9] [20, 32, 79]
i-[54] [58]
i-[66] [66, 76, 83]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[4] [8]
A-[2] [15]
to-[10] [24]
instance-[17] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
queues-[10] [20]
q-[18] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sclPic-[7] [18, 24, 28, 34, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[7] [10, 41, 175]
remainder-[11] [22, 34, 53, 58, 105, 110, 112, 262]
ModuleDefImpl-[1] [27, 184, 188]
c-[5] [29, 132, 196, 201, 225]
idx-[32] [46, 64, 100, 116, 212]
base-[42] [51, 56, 67, 73, 87, 96, 136, 192, 205, 229]
previous-[8] [78, 85, 90, 92, 180, 260]
LocalContainer-[4] [121, 143, 148, 223]
LocalContained-[126] [130]
contained-[127] [141, 150, 155]
next-[122] [145, 170, 220, 236, 258]
id-[176] [190]
m-[185] [207, 218]
IIOPLogger-[160] [247]
ensurePackageExists-[2] [256]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [8]
next-[2] [13]
ob-[9] [18]
e-[24] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
TaskAttemptContext-[2] [16]
conf-[6] [22]
taskAttemptId-[9] [24]
e-[31] [40, 47, 57, 64, 74]
IllegalArgumentException-[36] [53, 70]
catch-[44] [61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
i-[11] [15]
i-[22] [22, 30, 50, 92]
methods-[17] [48, 90]
int-[10] [59, 153, 236]
oa-[41] [64, 96, 105, 116, 129, 342]
opIdx-[60] [68]
opIdx-[75] [75, 81, 100]
operations-[70] [79, 98]
StringBuffer-[123] [127]
params-[114] [138, 160, 171]
b-[124] [144, 218, 246, 261, 275, 346]
j-[154] [158]
j-[165] [165, 173]
String-[45] [168]
s-[169] [182, 189, 191, 200, 208, 210, 232, 239, 265, 268, 279, 291, 301, 313, 315, 327, 329]
idx-[237] [237, 255, 285, 297, 305, 319, 333]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[8] [11]
int-[3] [14, 29, 125, 131]
result-[17] [22, 26, 49, 66, 84, 155, 165, 178, 186, 196]
CoordinateAxis1D-[39] [45, 56, 73]
horizXaxis-[37] [58, 91, 122]
x_coord-[9] [63, 145]
horizYaxis-[43] [75, 97, 117]
y_coord-[12] [80, 143]
CoordinateAxis2D-[93] [99, 115, 120]
g2d-[105] [109, 139]
result2-[128] [147, 160, 170]
found-[137] [152]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [7, 32, 174]
ctx-[5] [13, 19, 86, 179]
sb-[17] [25, 67, 101, 143, 160, 167, 184]
snippet-[8] [36]
int-[44] [49, 81]
currSnippet-[34] [52, 71, 88, 128, 147, 151, 158, 181]
macroPos-[50] [61, 77, 90, 110, 126]
snippetPos-[45] [75, 108, 117, 134, 149]
macroEnd-[82] [82, 95, 119]
processMacroAt-[84] [84]
processedMacros-[40] [121, 140]
ret-[175] [192]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4]
sql-[5] [15, 28, 30, 41]
ndx-[9] [22, 34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
log-[21] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
K-[5] [15, 25, 33, 43, 75]
Override-[1] [21, 57, 73, 93]
public-[2] [22, 58, 74, 94]
Iterator-[23] [31, 39]
return-[29] [64, 80, 112]
it-[48] [65, 81]
hasNext-[60] [67]
next-[76] [83]
inner-[50] [113]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[6] [9]
subcenter-[10] [15, 44]
getSubCenterName-[4] [40]
center-[7] [42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
poa-[8] [16, 20]
ex-[34] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
libraryLoadAttempted-[24] [27]
libraryFound-[38] [45, 79]
WAMResolvingNativeMachine-[2] [50]
symbolTable-[13] [52]
ImplementationUnavailableException-[17] [60, 85]
e-[76] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
passes-[22] [22, 35]
batch-[25] [39]
iter-[11] [42, 55]
batch-[49] [49]
DataSet-[3] [52]
next-[4] [53, 57, 71, 75]
preProcessor-[63] [67]
##########
Please find the dataflow of the function. We present the source and list of target indices.
SleeStateChangeRequest-[13] [17, 71, 75]
public-[0] [24, 64, 86, 114, 133, 145, 212, 226]
logger-[34] [41, 95, 175, 198]
oldState-[29] [54, 82, 91, 107, 109, 123]
Override-[23] [63, 85, 113, 132, 144, 211, 225]
final-[12] [70]
SleeState-[28] [81, 90, 146, 152, 227, 233]
generateMessageWithLogo-[45] [99]
requestCompleted-[66] [116]
notifyStateChange-[52] [121]
getNewState-[56] [125, 147, 228]
runningRequest-[72] [165]
e-[172] [181, 204]
Throwable-[171] [194]
boolean-[134] [213]
isBlockingRequest-[135] [215]
sleeContainer-[161] [240]
startingRequest-[14] [244]
InvalidStateException-[6] [250]
ex-[251] [255, 261, 268, 274]
ManagementException-[8] [266]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[8] [11, 78, 131, 136]
byte-[0] [17, 23, 42, 48, 87, 93, 139, 145, 150, 156, 191, 202]
offset-[9] [25, 50, 67, 267]
buf-[6] [28, 35, 81, 98]
header-[20] [39, 59]
uncomplen-[12] [52]
out-[45] [63, 265, 296]
CBZip2InputStream-[70] [74]
numCompBytes-[79] [95, 106, 119]
bufc-[90] [102, 115]
ByteArrayInputStream-[109] [113]
cbzip2-[71] [124, 168]
bis-[110] [128]
nread-[137] [166, 184, 241, 246]
ubuff-[142] [172, 233]
total-[132] [182, 239, 244, 269]
obuff-[153] [186, 196, 199, 219, 237, 251, 261]
temp-[194] [204, 215, 223]
System-[55] [211, 229, 257]
arraycopy-[231] [259]
ioe-[276] [291]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[2] [6]
final-[5] [9]
ptg-[7] [16, 23, 34, 139, 176, 187, 346]
Ref3DPxg-[25] [28, 32, 36, 40]
ref3dPxg-[29] [42, 56, 75, 87, 98, 109, 120]
newRow-[11] [69, 145, 262, 351]
new3dpxg-[37] [83, 94, 105, 116, 128, 190, 226, 237, 248, 274, 287, 300, 311, 322, 334]
RefPtgBase-[18] [133, 137]
refPtgBase-[134] [151, 157, 163]
Area3DPxg-[178] [181, 185, 189, 193]
area3dPxg-[182] [195, 209, 219, 230, 241, 252, 268, 278, 291, 304, 315, 326]
SheetIdentifier-[49] [202]
NameIdentifier-[54] [207]
shiftRow-[260] [284, 297, 349, 373, 381]
AreaPtgBase-[339] [344]
int-[259] [348]
areaPtgBase-[341] [357, 367, 375, 383, 389, 395, 401, 407, 413]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[3] [11, 36]
line-[13] [23, 45]
String-[12] [39, 55]
parts-[28] [48]
newParts-[41] [50, 57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
String-[6] [14]
base64Key-[15] [21, 64]
is-[11] [27]
ex-[34] [47, 54]
OSymmetricKey-[2] [60]
algorithm-[7] [62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
timeOwlThingContextInitRule-[12] [10]
timeOwlThingContextInitRule-[14] [10]
timer-[6] [12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96, 102, 108, 114, 120, 126, 132, 138, 144, 150, 156, 162, 168, 174, 180]
timeRootContextInitializationRule-[18] [16]
timeRootContextInitializationRule-[20] [16]
timeDisjointSubsumerFromMemberRule-[24] [22]
timeDisjointSubsumerFromMemberRule-[26] [22]
timeContradictionFromNegationRule-[30] [28]
timeContradictionFromNegationRule-[32] [28]
timeObjectIntersectionFromFirstConjunctRule-[36] [34]
timeObjectIntersectionFromFirstConjunctRule-[38] [34]
timeObjectIntersectionFromSecondConjunctRule-[42] [40]
timeObjectIntersectionFromSecondConjunctRule-[44] [40]
timeSuperClassFromSubClassRule-[48] [46]
timeSuperClassFromSubClassRule-[50] [46]
timePropagationFromExistentialFillerRule-[54] [52]
timePropagationFromExistentialFillerRule-[56] [52]
timeObjectUnionFromDisjunctRule-[60] [58]
timeObjectUnionFromDisjunctRule-[62] [58]
timeBackwardLinkChainFromBackwardLinkRule-[66] [64]
timeBackwardLinkChainFromBackwardLinkRule-[68] [64]
timeReflexiveBackwardLinkCompositionRule-[72] [70]
timeReflexiveBackwardLinkCompositionRule-[74] [70]
timeNonReflexiveBackwardLinkCompositionRule-[78] [76]
timeNonReflexiveBackwardLinkCompositionRule-[80] [76]
timeSubsumerBackwardLinkRule-[84] [82]
timeSubsumerBackwardLinkRule-[86] [82]
timeContradictionOverBackwardLinkRule-[90] [88]
timeContradictionOverBackwardLinkRule-[92] [88]
timeContradictionPropagationRule-[96] [94]
##########
Please find the dataflow of the function. We present the source and list of target indices.
QueryConcept_Type-[8] [14, 45]
jcasType-[16] [23, 35, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
file-[6] [21, 45, 72]
url-[19] [37, 52]
fis-[12] [40, 50, 103]
doConfigure-[3] [48]
errMsg-[68] [82, 91]
ioe-[63] [84, 93]
JoranException-[9] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[3] [9]
to-[10] [21, 25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
public-[2] [18]
WebViewFactory-[37] [50]
m_browser-[43] [57, 60]
m_logger-[28] [67]
##########
Please find the dataflow of the function. We present the source and list of target indices.
log-[12] [14, 40, 75]
exception-[6] [20, 26, 31, 51, 57, 67, 69, 91, 123, 134]
stackTrace-[84] [101, 117]
errors-[9] [106, 156, 182, 206]
UserReadableError-[125] [128, 132]
userError-[129] [138, 147, 165, 171, 193]
ActionError-[113] [163, 189, 213]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[2] [8, 19, 43]
requested-[6] [22, 55]
r-[20] [30, 48, 59, 66]
Long-[32] [38]
n-[9] [50]
u-[44] [61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7]
CursorResult-[1] [15]
sql-[5] [19]
selectionArgs-[10] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sourceOffset-[5] [24, 46]
conf-[13] [35]
PaginationMode-[19] [41]
increment-[8] [50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [8]
salt-[9] [26]
rawPassword-[5] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
args-[8] [22]
e-[29] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
object-[7] [18, 52, 112, 137, 238]
properties-[37] [41, 104]
StringBuilder-[58] [62]
sb-[59] [66, 175, 183, 190, 197, 232, 252]
String-[9] [83, 92, 101, 263]
Object-[85] [94, 130, 265]
prop-[102] [120, 159, 187, 201]
field-[110] [123, 133]
value-[131] [142, 161]
RuntimeException-[29] [149, 213]
cache-[87] [155, 166, 222, 269]
throw-[147] [211]
new-[148] [212]
e-[208] [215]
entityManager-[48] [248]
query-[246] [276, 294]
entry-[267] [280, 286]
##########
Please find the dataflow of the function. We present the source and list of target indices.
runningSlots-[10] [13]
slotKey-[4] [17, 27, 34, 64]
shardStateManager-[23] [30]
stamp-[21] [51, 71, 84, 95]
currentTimeInMillis-[39] [55, 66]
UpdateStamp-[20] [77, 88]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Triple_Type-[8] [14, 45]
jcasType-[16] [23, 35, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Permissions-[1] [4]
permissions-[5] [25]
cs-[9] [27]
principals-[14] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [6]
type-[7] [21, 30, 50, 52, 62]
subType-[42] [56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[8] [11, 15]
property-[9] [20]
defaultClassName-[12] [22]
Class-[5] [25]
clazz-[26] [32, 67, 116, 131]
className-[16] [36, 52, 86, 104, 127]
e-[43] [54, 77, 88, 95, 106]
Object-[2] [58]
result-[59] [65, 151]
NestedRuntimeException-[48] [82, 100, 123]
expected-[6] [112, 139, 143]
##########
Please find the dataflow of the function. We present the source and list of target indices.
LifeCycle-[23] [28]
appender-[21] [30, 52, 59]
ec-[5] [42, 71]
o-[40] [50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
O-[3] [7, 12, 22]
options-[13] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Integer-[8] [12]
name-[5] [18]
ch-[9] [23, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
typeName-[7] [23, 52]
type-[17] [28, 46, 61]
loader-[34] [48]
findEditor-[3] [59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
VLEN-[14] [17]
int-[4] [19, 28]
first-[20] [22, 43]
origin-[5] [26, 35]
last-[29] [31, 45]
Range-[1] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ranges-[7] [14, 47, 168, 232]
InvalidRangeException-[10] [24, 99, 141]
ii-[32] [36]
rank-[20] [38, 161]
ii-[40] [40, 51, 93, 103, 135, 145, 217, 221]
Range-[5] [44, 66, 165, 229]
r-[45] [56, 64, 75, 85, 107, 117, 127, 149, 166, 174, 180, 230, 241, 277, 293, 311, 326, 347]
shape-[91] [133, 248, 253, 288, 363]
int-[31] [157, 209, 216]
reducedRank-[189] [189, 200]
Index-[0] [193, 196]
newindex-[194] [203, 246, 258, 286, 299]
rank-[223] [223]
rank-[225] [223]
ii-[223] [225]
ii-[225] [225, 236, 255, 267, 308, 323, 344]
newDim-[210] [250, 262]
newDim-[270] [270, 290, 303]
stride-[265] [301, 306, 313, 321, 342]
newindex-[321] [317]
newindex-[323] [317]
newindex-[326] [317]
newindex-[328] [317]
offset-[321] [319]
offset-[323] [319]
offset-[326] [319]
offset-[328] [319]
newDim-[332] [332]
newindex-[342] [338]
newindex-[344] [338]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [16]
cust-[11] [19]
getLevelDescription-[3] [21]
gr-[6] [23, 43]
result-[17] [32, 37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cc-[2] [13, 21]
ccs-[7] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[8] [11, 23, 28]
String-[14] [17]
Method-[2] [34]
methods-[21] [41, 104, 250]
target-[12] [49, 53, 246]
typeClass-[47] [63, 81, 106]
source-[9] [67, 77, 86, 215]
Class-[46] [71, 84, 89, 126, 169]
args-[26] [96, 139, 147, 221, 252]
methodName-[18] [108]
argClasses-[92] [110]
mm-[100] [115, 122, 131, 179]
result-[35] [120, 217, 235, 240, 259]
mParameterTypes-[129] [133]
actualArgs-[31] [143, 196, 206, 254]
j-[155] [159]
mParameterTypes-[161] [161, 172]
mParameterTypes-[163] [161]
mParameterTypes-[165] [161]
length-[161] [163]
length-[163] [163]
length-[165] [163]
j-[161] [165]
j-[163] [165]
j-[165] [165, 174, 185, 198, 208, 223]
type-[170] [189, 226]
context-[6] [213, 244]
propertyName-[15] [219, 248]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [10, 15]
sub-[5] [18]
n-[16] [23, 36, 54]
match-[29] [29, 42, 50]
begin-[8] [59]
end-[11] [61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ThreddsMetadata-[1] [10, 16, 42]
vocab-[7] [20, 60]
result-[13] [38, 63, 80]
variables-[33] [47]
vs-[45] [52, 71]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12]
level-[6] [22, 58]
StringBuilder-[29] [33]
message-[10] [95]
msg-[30] [104]
throwable-[14] [113, 118]
System-[98] [122]
##########
Please find the dataflow of the function. We present the source and list of target indices.
access-[7] [24, 79]
DataFactory-[1] [30]
ds-[22] [42, 73]
result-[33] [51, 60, 67, 83]
openFeatureDataset-[4] [71]
task-[16] [81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
conditions-[15] [20, 47]
Object-[4] [27, 57, 59, 63, 65]
onPojo-[5] [34]
If-[7] [39, 55]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ofy-[2] [9, 14, 23, 34, 38, 43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [14, 18]
String-[8] [15, 24, 102]
addedFullName-[16] [29]
StringBuilder-[37] [41]
int-[19] [47]
i-[48] [52]
parts-[27] [55, 77, 95]
i-[62] [62, 68, 79, 97]
fname-[38] [73, 86, 105]
shiftMap-[12] [111, 120]
sname-[103] [115, 124]
increasedLength-[20] [131]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Array-[1] [4]
double-[7] [10, 58, 65, 77, 110, 125, 141]
int-[15] [19, 97]
s-[5] [21, 30, 43, 113]
a-[8] [38, 74, 91, 134, 151]
ArrayDouble-[45] [51]
nz-[16] [55, 104]
b-[11] [63, 144]
Math-[70] [85, 130, 147]
i-[98] [102]
i-[106] [106, 121, 169]
sIndex-[28] [117]
fac1-[59] [128]
sz-[111] [136, 154]
denom1-[66] [139]
denom2-[78] [160]
c-[48] [165, 178]
term1-[126] [171]
term2-[142] [173]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[6] [9]
login-[4] [19]
username-[7] [21]
password-[10] [23]
e-[30] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [6, 10]
final-[5] [9]
port-[7] [17]
encoding-[11] [19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HashSet-[27] [37]
String-[29] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HeuristicSearchNode-[1] [15, 24]
O-[3] [17, 26]
T-[5] [19, 28]
makeNode-[7] [33]
successor-[10] [35]
node-[21] [38, 47, 54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
typeMirror-[4] [13, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Flow-[1] [4, 33, 45]
flowParam-[5] [10, 21, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 14, 22]
int-[2] [10, 31]
displayMetrics-[7] [18]
float-[15] [23]
dip-[11] [34]
scale-[16] [36]
alpha-[24] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [12]
depth-[13] [21, 45, 72]
isBe-[16] [27, 51, 77]
b-[10] [32, 39, 56, 63]
else-[35] [42]
if-[25] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
e-[8] [13, 25, 31, 43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
File-[6] [10]
src-[7] [18, 27, 46, 56]
dest-[11] [29, 37, 48, 58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
SimpleScheduleBuilder-[20] [23]
dto-[6] [31, 43, 52, 64]
builderSc-[21] [39, 60, 75]
builder-[16] [71]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ConfirmDialog-[17] [28]
cd-[29] [36]
ex-[63] [68, 75, 98]
getUI-[21] [79]
##########
Please find the dataflow of the function. We present the source and list of target indices.
put-[2] [11]
dateRootExt-[5] [13, 19, 27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Bitmap-[4] [7]
setData-[2] [15]
bitmap-[5] [17]
format-[10] [19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [10]
ccAddress-[6] [21]
toTerm-[12] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
dto-[6] [21, 37, 54, 70]
builder-[16] [30, 46, 63]
Date-[35] [68]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cls-[7] [12, 27, 38, 49, 60, 71, 82, 93, 104, 115, 131]
IIOPLogger-[17] [125]
##########
Please find the dataflow of the function. We present the source and list of target indices.
parent-[8] [16, 24, 39]
getFullName-[2] [18, 26, 41]
name-[13] [37, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Type-[2] [7, 83, 95, 125, 135, 153, 170, 198]
type-[8] [13, 17, 30, 47, 65, 192, 215, 226, 243, 256, 266, 277, 287, 298, 306, 313, 333]
Class-[19] [22, 38, 60]
ParameterizedType-[15] [32, 45]
clazz-[26] [35, 57, 70, 79, 88, 98, 116]
superClass-[96] [106, 145, 190]
superInterfaces-[86] [110, 155, 172, 201]
result-[138] [150, 167, 183, 204, 220]
resultIndex-[141] [160, 179]
resultIndex-[207] [207]
mapTypeParameters-[188] [211]
superInterface-[199] [213]
TypeVariable-[228] [231, 238]
tv-[235] [246]
WildcardType-[258] [264]
CaptureType-[279] [285]
else-[274] [295, 310, 325]
getArrayExactDirectSuperTypes-[77] [304]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[1] [8]
type-[5] [13, 29, 34, 41]
result-[9] [18, 23, 25, 36, 43, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
action-[5] [21, 39]
Platform-[10] [27]
actionStream-[17] [35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
strict-[8] [16, 41, 72]
f-[5] [32, 47, 59, 66, 95, 125, 146, 170, 200, 247, 263, 293, 328, 346, 362, 385, 409, 433]
parentname-[11] [43, 55]
NetcdfFile-[51] [74]
getShortName-[78] [83]
isString-[19] [90]
i-[105] [109]
i-[115] [115, 121, 137, 180, 184]
String-[10] [132, 214]
val-[133] [142, 154]
int-[104] [179, 272]
getLength-[111] [186, 279]
i-[190] [190, 196, 219, 273, 277]
getEnumType-[163] [210]
getStringValue-[135] [217]
en-[208] [225]
econst-[215] [229, 244, 255]
ecint-[223] [234]
encodeString-[152] [253]
i-[283] [283, 289, 306]
number-[302] [318, 324, 334]
dataType-[311] [339, 356, 372, 378, 396, 402, 420, 426]
DataType-[320] [358, 374, 380, 398, 404, 422, 428]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Collections-[9] [20]
String-[12] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
getConfig-[10] [16, 34]
schema-[5] [44, 57]
defaultValuesForTypes-[40] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[10] [14, 18]
Cell-[11] [15]
newCell-[16] [27, 64]
sourceCell-[12] [36, 66]
CellValueType-[46] [53]
name-[34] [57]
e-[47] [60]
checkLock-[20] [68]
newCellStyle-[25] [70]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4, 8]
color-[5] [11, 15, 23, 35, 59]
validated-[9] [31, 45, 63, 65, 73]
##########
Please find the dataflow of the function. We present the source and list of target indices.
time-[5] [15]
final-[3] [25]
e-[27] [32, 38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [5, 9, 28]
String-[12] [14]
paramTemplates-[21] [32]
paramTemplate-[30] [35]
init-[3] [38]
context-[7] [40]
vars-[16] [42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
context-[27] [34, 75]
emsObject-[32] [45, 57]
Deque-[6] [52, 62]
EntityManager-[8] [54, 64]
CURRENT_ENTITY_MANAGER-[40] [81]
ems-[66] [83, 87]
threadLocalFallback-[13] [102]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16]
String-[9] [13, 17]
int-[5] [21]
tag-[6] [26, 54, 56, 107, 133]
owner-[10] [28, 66, 70, 111, 135]
name-[14] [30, 75, 79, 118, 137]
descriptor-[18] [32, 88, 120, 139]
Entry-[1] [35, 128]
hashCode-[22] [40, 60, 62, 143]
entry-[36] [45, 52, 58, 64, 73, 82, 93, 96, 98]
constantPoolCount-[130] [130]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Map-[1] [12]
StreamCompositeKey-[3] [14, 69, 73]
StreamBacklog-[5] [16, 98, 113]
typeId-[34] [46, 50, 55, 59, 63, 142]
final-[11] [68, 97, 118, 129]
keyBuffer-[36] [75, 82, 89, 122]
streams-[18] [101, 349]
key-[70] [105]
long-[119] [130]
counters-[27] [133]
counterId-[32] [137]
PUBLISHER_LIMIT_TYPE_ID-[48] [148]
streamBacklog-[99] [150, 161, 179, 190, 208, 219, 237, 248, 266, 277, 295, 306, 324]
registrationId-[120] [156, 158, 185, 187, 214, 216, 243, 245, 272, 274, 301, 303, 332]
value-[131] [169, 198, 227, 256, 285, 314, 337]
PUBLISHER_POS_TYPE_ID-[65] [177]
SENDER_LIMIT_TYPE_ID-[57] [235]
RECEIVER_POS_TYPE_ID-[52] [293]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
message-[7] [27]
thr-[11] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[2] [5, 8, 11, 60, 74, 90, 106, 115, 124]
int-[14] [17, 20, 23, 27]
ix-[15] [33, 112]
iy-[18] [37, 121]
iz-[21] [41, 130]
seed-[24] [45]
vectorIndex-[51] [48]
vectorIndex-[53] [48]
vectorIndex-[28] [51]
vectorIndex-[58] [56]
vectorIndex-[56] [68, 82, 98]
Utils-[63] [77, 93]
fx-[6] [110]
fy-[9] [119]
fz-[12] [128]
xvGradient-[61] [136]
xvPoint-[107] [138]
yvGradient-[75] [142]
yvPoint-[116] [144]
zvGradient-[91] [148]
zvPoint-[125] [150]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[1] [4, 30, 52]
x-[5] [10, 15, 23, 45, 68]
itemWidth-[27] [49]
dividerSize-[32] [54]
values-[36] [58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
resultSets-[11] [16, 26]
rs-[6] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
A-[8] [12, 22, 49]
Annotation-[10] [15, 29]
annotations-[18] [32]
annotationType-[24] [36]
anno-[30] [40, 51]
##########
Please find the dataflow of the function. We present the source and list of target indices.
isTagFile-[18] [22]
inFileName-[7] [33]
ctxt-[20] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Node-[1] [10, 24]
K-[3] [12, 26]
V-[5] [14, 28]
final-[9] [18]
node-[16] [32]
lval-[30] [36, 43, 53, 55, 65]
index-[20] [47, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
message-[4] [8, 30]
listener-[18] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StructureMembers-[4] [10]
sm-[5] [15]
m-[13] [31, 62, 144]
org-[23] [41, 53, 93, 99, 105, 111, 125]
int-[38] [59]
List-[47] [70]
Dimension-[49] [72]
orgDims-[51] [76]
rank-[39] [80, 84]
n-[60] [82]
VariableSimpleImpl-[87] [91]
dims-[74] [117]
result-[88] [131, 150]
att-[123] [135]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4, 7, 12, 14, 71]
Pattern-[19] [22]
patternString-[8] [26]
pattern-[20] [32]
matcher-[30] [34, 49, 62, 78, 86, 108]
template-[5] [36]
StringBuffer-[39] [43]
variables-[16] [58, 74]
replacement-[72] [72, 92, 100]
buffer-[40] [90, 112, 116]
Matcher-[29] [96]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[8] [13, 19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
TEMP_DIRECTORY-[14] [19, 27, 97, 102]
Path-[32] [47]
baseDir-[33] [51]
tempDirectory-[49] [72, 79]
File-[2] [75]
deleteOnExit-[6] [87, 92]
tempDirectoryAsFile-[77] [90, 99]
ExtractException-[9] [113]
e-[108] [117]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Assert-[10] [18]
int-[26] [31, 109]
bytesRead-[27] [61, 86, 98, 128, 159, 169]
contentLength-[51] [67, 72, 80, 119, 136]
totalBytesRead-[33, 157] [74, 121]
is-[88] [88, 100]
buffer-[40] [92, 104, 115, 165, 181]
Math-[111] [111]
IOException-[8] [143]
Policy-[145] [145]
totalBytesRead-[159] [157]
os-[5] [161]
write-[2] [163]
bufferPool-[42] [177]
inputRead-[15] [184]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7]
double-[10] [13]
boolean-[16] [19]
str-[5] [35]
type-[8] [37]
one-[11] [39]
two-[14] [41]
interval-[17] [43]
isDefault-[20] [45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
attributeClass-[8] [14, 27]
value-[18] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
arguments-[16] [26, 111]
Method-[1] [30, 53, 61]
int-[23] [45, 104]
candidates-[33] [64]
candidate-[62] [69, 89, 127]
targetMethod-[7] [77]
paramTypes-[87] [97, 109]
argCount-[24] [101]
typeDiffWeight-[105] [116, 123]
minTypeDiffWeight-[47] [118, 121]
matchingMethod-[55] [125, 134]
##########
Please find the dataflow of the function. We present the source and list of target indices.
state-[23] [30, 51]
ResourceAdaptorObjectState-[25] [32]
raUnconfigure-[2] [38]
InvalidStateException-[6] [47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
bytes-[8] [13, 33]
ois-[25] [38]
ex-[48] [57, 64, 73]
##########
Please find the dataflow of the function. We present the source and list of target indices.
INDArray-[1] [4, 7, 10, 13, 17, 27, 43, 64]
labelsMinusMu-[18] [20, 31, 35]
labels-[5] [22]
mu-[11] [24]
diffsquared-[29] [49]
sigma-[14] [51]
alpha-[8] [56]
phitimesalphasum-[45] [71]
result-[65] [79]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
type-[6] [18]
typeJsonSerializer-[10] [20]
##########
Please find the dataflow of the function. We present the source and list of target indices.
item-[5] [10, 35, 70]
i-[19] [23]
i-[29] [29, 41, 48, 63]
setSelectedIndex-[53] [75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
File-[1] [5, 24, 28]
file-[6] [14, 66]
path-[12] [30, 58]
gzipFile-[25] [36, 71]
log-[45] [52]
ZipUtil-[20] [62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
input-[5] [14]
res-[10] [21, 32]
IFile-[4] [23, 26, 30]
dslConf-[27] [36, 52]
stream-[44] [50, 60, 94]
e-[71] [80]
##########
Please find the dataflow of the function. We present the source and list of target indices.
path-[5] [10, 61, 87]
Boolean-[24] [28]
useMyFaces-[25] [43, 48]
String-[4] [53, 79]
jar-[54] [65, 80, 91]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[1] [10]
v-[5] [17]
attname-[8] [21]
att-[15] [26, 35, 46, 55]
defValue-[11] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[5] [9, 16, 23]
final-[13] [20]
typeToken-[18] [33]
omittedValues-[25] [35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
iter-[10] [20, 33, 63]
InvDocumentation-[27] [27, 31]
doc-[28] [28, 42]
String-[4] [39]
dtype-[40] [40, 51, 56]
type-[5] [60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
str-[5] [10, 17]
annotation-[15] [26]
isAnnotationHere-[19] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
shutdown-[2] [10, 17, 47, 60]
OtpOutputStream-[9] [13]
final-[4] [26]
new-[34] [40]
reason-[6] [43]
tuple-[31] [54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
p_port-[5] [12, 16, 40, 56]
MalformedURIException-[8] [30, 48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[2] [6, 10]
long-[7] [11]
UnboundRecordFilter-[3] [17]
public-[0] [24]
startPos-[8] [39]
pageSize-[12] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[9] [13, 19, 24, 36]
pos-[6] [34, 48, 57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
tbl-[5] [17, 34]
is-[13] [23, 43]
IOException-[8] [30]
String-[4] [38, 46, 61, 77, 83, 120, 126, 255]
content-[39] [51]
lines-[49] [80]
line-[78] [86, 191, 209]
tline-[84] [94, 109, 157, 179]
-[63] [102]
if-[92] [107, 150, 167, 278]
idx-[136] [140]
indices-[142] [142, 152, 169, 195, 213, 218]
indices-[144] [142]
indices-[146] [142]
length-[142] [144]
length-[144] [144, 159, 181]
length-[146] [144]
idx-[142] [146]
idx-[144] [146]
idx-[146] [146, 154, 171, 176, 188, 197, 206, 215, 220, 225, 232, 237]
words-[123] [186, 204, 230, 235, 249]
lengths-[174] [223]
result-[66] [245, 260]
aResult-[258] [268]
p-[264] [273, 280, 296, 302, 312, 318]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[11] [14]
String-[37] [41]
ch-[7] [43]
start-[12] [45]
length-[15] [47]
s-[38] [56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
U-[5] [9, 28, 43]
T-[3] [13, 20, 41]
value-[14] [46]
mapper-[30] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
V-[2] [4, 9]
instream-[15] [27, 112]
reader-[22] [49]
array-[40] [67, 82, 95]
classOfV-[11] [104]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [19]
connection-[9] [23, 93]
databaseMetaData-[21] [32, 41]
String-[29] [38]
log-[49] [56, 77]
name-[30] [62]
version-[39] [66]
sex-[74] [83]
connectionProvider-[11] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [4, 71]
TimedEntry-[8] [12]
key-[5] [18, 63]
entry-[9] [23, 32, 44, 53, 74]
entryMap-[14] [59]
value-[72] [81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [11, 21, 31]
U-[4] [15, 23, 43]
map-[17] [34, 46, 65]
observable-[32] [50, 58]
consumer-[25] [54]
listener-[44] [60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Belief-[1] [6, 14, 48]
results-[8] [23, 33, 51]
index-[11] [27, 31, 58]
int-[10] [41]
idx-[42] [56, 68]
belief-[15] [61]
b-[49] [63]
belief-[74] [74]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [19, 26]
parsingErrors-[8] [29]
result-[20] [32, 38]
s-[27] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[2] [4, 10, 26, 28, 37, 55, 86]
Double-[6] [12, 30, 39, 57, 88]
int-[16] [21]
count-[22, 72] [46, 65, 67]
arr-[14] [48, 61]
sublist-[59] [59, 80]
chunk-[17] [69, 74, 103]
count-[74] [72]
ret-[32] [76, 92, 105, 114]
lists-[90] [97, 109]
##########
Please find the dataflow of the function. We present the source and list of target indices.
dir-[18] [38]
Path-[30] [44]
ds-[32] [47]
Files-[34] [53]
p-[45] [57, 82]
attr-[51] [66, 84]
if-[64] [90]
debug-[8] [92, 132]
count-[96] [96, 111, 142]
System-[10] [103, 134]
e-[120] [123]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
int-[6] [10]
sheet1-[15] [21, 27, 39]
rowIndex-[7] [31, 43]
colIndex-[11] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
property-[5] [17, 28, 39]
arrayContains-[9] [20, 31]
inputAnnotation-[11] [22, 33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [9]
check-[10] [17]
value-[6] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
logger-[6] [14]
appenderName-[10] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
File-[1] [8, 12, 35, 39]
fileLocation-[5] [14, 43]
f-[9] [19, 26]
fc-[36] [49, 56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7, 49, 97, 99, 106, 108, 115, 124, 164, 174, 185, 194, 204, 210]
stageInstances-[14] [22]
fragmentId-[5] [34, 73]
ApiException-[17] [41]
List-[10] [81]
Pair-[83] [90]
Map-[95] [113]
Object-[19] [117, 126]
HashMap-[104] [122]
queryParams-[85] [131, 147, 239]
apiClient-[69] [135, 151, 177, 197, 231]
description-[8] [143]
final-[163] [173, 184, 193]
accepts-[167] [181]
contentTypes-[188] [201]
TypeRef-[217] [221]
PipelineFragmentEnvelopeJson-[1] [223]
path-[50] [235]
postBody-[20] [241]
postBinaryBody-[27] [243]
headerParams-[101] [245]
formParams-[119] [247]
accept-[175] [249]
contentType-[195] [251]
authNames-[207] [253]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12]
String-[5] [13]
style-[6] [22, 52]
isBlank-[20] [36]
color-[14] [38, 62]
IllegalArgumentException-[28] [44]
font-[2] [50]
size-[10] [57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
URL-[2] [13]
spec-[6] [15, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
load-[2] [17]
##########
Please find the dataflow of the function. We present the source and list of target indices.
InvalidStateException-[6] [22]
object-[36] [44, 51, 64]
##########
Please find the dataflow of the function. We present the source and list of target indices.
BigDecimal-[2] [6, 16]
x-[7] [12, 30, 45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [20, 37]
String-[23] [30]
Group-[7] [38]
groups-[9] [41]
groupNames-[25] [46, 72]
group-[39] [50, 64, 76]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [12, 22, 48, 72, 96, 120, 144, 168, 192, 216, 240, 264, 288, 312]
ZonedDateTime-[23] [26]
values-[10] [33, 57, 81, 105, 129, 153, 177, 201, 225, 249, 273, 297, 321]
map-[19] [37, 61, 85, 109, 133, 157, 181, 205, 229, 253, 277, 301, 325]
ExpectedLabels-[15] [41, 65, 89, 113, 137, 161, 185, 209, 233, 257, 281, 305, 329]
time-[24] [43, 340]
Integer-[17] [55, 79, 103, 127, 151, 175, 199, 223, 295, 319]
temp-[50] [67, 342]
int-[49] [73, 97, 121, 145, 169, 193, 217, 289, 313]
safeInt-[52] [76, 100, 124, 148, 172, 196, 220, 292, 316]
pressure-[74] [91, 344]
humidity-[98] [115, 346]
voc-[122] [139, 348]
light-[146] [163, 350]
noise-[170] [187, 352]
noisedba-[194] [211, 354]
battery-[218] [235, 356]
shake-[242] [259, 358]
boolean-[241] [265]
safeBoolean-[244] [268]
Boolean-[247] [271]
cable-[266] [283, 360]
rssi-[314] [331, 364]
State-[2] [338]
vocResistance-[290] [362]
##########
Please find the dataflow of the function. We present the source and list of target indices.
app-[9] [22]
play-[13] [30, 43]
List-[2] [41]
Lang-[4] [49, 73]
langs-[20] [57]
availables-[6] [59]
availableLangs-[51] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cancelTask-[5] [23, 28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 11, 28]
nullable-[12] [16, 22]
AOption-[5] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
File-[1] [8]
files-[11] [23, 27, 42, 44]
FileNotFoundException-[6] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [10]
FeatureIndexType-[3] [12, 25]
type-[26] [35, 43]
indexed-[14] [39, 49]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Class-[1] [9]
declared-[6] [19]
getter-[15] [24, 31]
componentType-[10] [29, 40, 60, 71]
fieldDescriptor-[47] [55, 62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
QueryConcept_Type-[8] [14, 55]
jcasType-[16] [23, 39, 45, 57]
StringList-[1] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ElkInconsistentOntologyException-[10] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cls-[5] [14, 24, 33, 40, 54, 65, 83, 102, 113, 132]
InterfaceAnalysis-[58] [61]
ia-[59] [70]
ValueAnalysis-[76] [79, 124, 128]
va-[77] [88, 126, 137]
ExceptionAnalysis-[106] [109]
ea-[107] [118]
addValue-[86] [135]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 13]
Callable-[5] [11]
callable-[15] [21]
transferRequest-[9] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 11, 18]
Key-[16] [22]
create-[9] [24, 30]
value-[12] [26]
key-[20] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [6, 122]
final-[13] [17, 21, 25, 29, 33]
page-[8] [19, 64, 191]
int-[18] [22, 60, 194]
String-[10] [26, 71, 141]
sortColumnName-[27] [43, 54]
sql-[11] [48, 52, 76, 86, 146, 151]
ascending-[31] [56]
pageSize-[23] [69, 80, 103, 110, 130, 198]
from-[61] [78]
pageSql-[72] [88]
query-[92] [94, 99, 106, 113, 126, 135, 156, 158, 163, 173, 179]
dbsql-[84] [96, 149, 160]
params-[15] [117, 167]
list-[124] [128, 200]
countSql-[142] [153]
PageData-[4] [187]
count-[171] [196]
##########
Please find the dataflow of the function. We present the source and list of target indices.
serverSocket-[8] [14, 43, 93]
listener-[39] [50]
runner-[46] [61]
getContext-[52] [65]
ex-[77] [84, 86]
##########
Please find the dataflow of the function. We present the source and list of target indices.
key-[20] [24, 49, 79, 204, 220]
dir-[43] [54, 132]
WatchEvent-[73] [86, 109]
event-[77] [92, 117, 147]
kind-[90] [94, 100, 149, 165]
Path-[42] [111, 120, 129]
ev-[113] [123]
name-[121] [136, 153]
System-[59] [139]
child-[130] [157, 179, 187]
if-[98] [173]
x-[36] [195]
valid-[202] [213]
keys-[45] [216, 225]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[3] [10]
String-[8] [15, 19]
map-[12] [21, 41]
clazz-[16] [35]
fromMap-[4] [39]
cls-[29] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
E-[7] [11, 33, 40]
Expression-[9] [31, 38]
result-[35] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
type-[6] [17]
value-[9] [28, 37, 52, 61, 76, 85, 100, 109, 124, 133, 148, 157, 172, 181]
AttributeBadValueException-[13] [33, 57, 81, 105, 129, 153, 177]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
Map-[14] [18, 58, 101]
String-[16] [20, 22, 40, 60, 62, 105, 107, 146, 155, 175]
fcell-[11] [34]
component-[7] [45, 120, 180, 199]
cname-[41] [50, 70, 93]
defaultControlMap-[24] [66, 89]
defaultMap-[64] [75, 80, 95, 111, 167, 187]
entry-[109] [122, 128]
CellFormAttributes-[30] [140]
inputAttrs-[32] [143]
attr-[141] [149, 158]
propertyName-[171] [182, 191, 201]
propertyValue-[156] [203]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 13, 19]
Collection-[5] [17]
iterator-[15] [26, 37]
targetCollection-[21] [33, 46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [12]
inBufferPos-[13] [21, 35, 42]
count-[15] [30]
currentBuffer-[23] [40]
b-[8] [48]
count-[50] [50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
int-[2] [10, 18, 96, 130]
startOffset-[11] [21]
signature-[7] [26, 82, 99, 112, 152, 180, 255, 298, 338, 360]
offset-[30] [30, 74, 84, 105, 116, 133]
currentChar-[24] [36, 70, 150, 162, 166, 217, 247, 296, 311, 348]
signatureVisitor-[15] [66, 86, 108, 196, 206, 222, 271, 281, 320, 344, 364]
parseType-[3] [80, 336, 358]
endOffset-[97] [118, 123]
boolean-[135] [140]
offset-[156] [156, 186, 233, 261]
visited-[136] [174, 235, 289]
String-[6] [177, 252]
name-[178] [178, 200, 210, 253, 275, 285]
start-[131] [184, 231, 259]
inner-[141] [193, 239, 268]
offset-[156, 318] [302, 379]
offset-[318] [318, 334, 340, 356, 362]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
iLength-[6] [16, 29, 36]
fill-[2] [21]
position-[25] [27]
iFiller-[10] [31]
position-[36] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
output-[9] [23]
encoding-[12] [25]
copy-[3] [28]
input-[6] [30]
out-[18] [32, 35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7, 10, 19]
uri-[5] [24]
qName-[11] [26, 83, 92, 100]
isElement-[14] [28]
prefix-[20] [33, 42, 48]
write-[46] [51, 72, 90]
localName-[8] [59, 68, 74]
i-[81] [96]
##########
Please find the dataflow of the function. We present the source and list of target indices.
BoundingBox-[1] [8, 44]
zoomLevel-[5] [19, 34]
tileMatrix-[15] [24, 60]
tileGrid-[30] [39, 62]
getBoundingBox-[2] [48, 56]
boundingBox-[10] [52, 68]
matrixSetBoundingBox-[46] [58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Pool-[3] [16]
serverName-[7] [23, 61, 101, 125, 163, 208, 246, 272]
pool-[17] [28, 33]
PoolManager-[19] [39]
ObjectName-[47] [51, 134, 166]
String-[6] [69, 113]
jmx-[10] [72, 138, 183]
objectName-[48] [76]
host-[70] [83, 87, 106, 110, 219, 232]
StringBuilder-[54] [118]
findJmxPort-[115] [142]
objectNames-[136] [147, 151, 170]
IllegalArgumentException-[97] [159, 200]
portObjectName-[168] [187, 204]
port-[181] [194, 223, 234]
poolFactory-[37] [226, 228, 242]
InstanceNotFoundException-[14] [252]
e-[253] [257, 263, 276, 282]
##########
Please find the dataflow of the function. We present the source and list of target indices.
row-[28] [33, 49]
ResultSetType-[18] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Demuxer-[16] [19]
demuxer-[17] [25, 45, 83, 254, 397]
filename-[6] [29, 144]
int-[42] [51, 66, 275, 280]
i-[67] [71]
numStreams-[43] [73]
i-[75] [75, 87, 121]
final-[79] [90, 156, 195, 210, 242]
Decoder-[58] [91]
stream-[81] [94]
decoder-[92] [102, 106, 125]
audioStreamId-[53] [119, 133, 272]
audioDecoder-[60] [123, 147, 164, 170, 176, 182, 188, 289, 348]
MediaAudio-[157] [160]
MediaAudioConverterFactory-[199] [203]
samples-[158] [207, 293, 302, 317, 352, 361, 376, 390]
AudioFrame-[211] [214]
converter-[197] [218, 311, 370]
audioFrame-[212] [227, 320, 379, 403]
LineUnavailableException-[13] [233]
MediaPacket-[243] [246]
packet-[244] [258, 266, 295, 337]
offset-[328] [276, 335]
bytesRead-[287] [281, 330]
bytesRead-[289, 291, 293, 295, 297] [287]
offset-[276, 328] [297]
rawAudio-[238] [309, 315, 324, 368, 374, 383]
offset-[330] [328]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[1] [6, 13]
i-[14] [18]
i-[22] [22, 30]
len-[28, 30, 33] [26]
len-[26] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
parameterName-[5] [18]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [10]
image-[5] [18]
x-[8] [26]
y-[11] [28]
pixelValue-[14] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Grib2Pds-[4] [8, 14, 37]
pds-[5] [18, 24]
int-[20] [30]
pdsIntv-[11] [42]
ti-[40] [51, 62, 70, 76, 82, 102]
timeUnitOrg-[22] [66, 74, 98, 145]
range-[137] [115]
range-[139] [115]
range-[141] [115]
range-[143] [115]
range-[145] [115]
range-[151] [115]
range-[155] [115]
range-[156] [115]
range-[158] [115]
range-[162] [115]
range-[164] [115]
range-[166] [115]
range-[168] [115]
range-[171] [115]
range-[172] [115]
range-[174] [115]
range-[175] [115]
range-[179] [115]
range-[181] [115]
range-[185] [115]
range-[187] [115]
range-[189] [115]
range-[192] [115]
range-[194] [115]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DapGroup-[0] [8, 12]
DapSort-[16] [20]
gscope-[9] [27, 39]
DapException-[6] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[8] [10, 18, 23, 47]
clazz-[20] [37]
avm-[31] [49]
unmarshal-[11] [51]
src-[14] [56]
e-[64] [71]
result-[44] [76]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [24, 47]
actionRequest-[6] [28, 44, 68]
servletRequest-[26] [51]
executorService-[11] [57]
invoke-[2] [70]
log-[34] [81]
ex-[78] [91]
asyncContext-[49] [98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
event-[5] [10, 35]
Task-[27] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
value1-[7] [20]
clz-[18] [29]
name-[11] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [9]
viewName-[6] [23]
cls-[11] [28, 38, 46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
loc-[6] [16]
entry-[10] [24, 28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
key-[8] [19, 37]
GempakStation-[12] [29]
Key-[7] [41]
findKey-[10] [44]
dateKey-[42] [51, 56]
latType-[35] [62, 68]
subType-[76] [83, 91]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Point3D_F64-[5] [8]
Vector3D_F64-[11] [14, 17]
uu-[22] [34, 94, 137]
u-[12] [36, 40, 45, 76]
uv-[24] [43, 90, 92, 106, 133]
v-[15] [49, 54, 58, 85]
vv-[26] [52, 96, 110]
w0-[18] [61, 72, 81]
output-[9] [65]
T_v0-[6] [67]
wu-[28] [70, 112, 135]
wv-[30] [79, 108, 139]
D-[32] [88, 115, 142]
double-[21] [98]
s-[99] [103, 119, 123, 155]
t-[101] [130, 147, 157]
##########
Please find the dataflow of the function. We present the source and list of target indices.
boolean-[16] [19]
Seq-[10] [24]
KoreanPhraseExtractor-[4] [26]
extractPhrases-[8] [34]
tokens-[14] [36]
filterSpam-[17] [38]
includeHashtags-[20] [40]
seq-[30] [46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
methods-[11] [16, 24, 34, 40]
MethodInjectionPoint-[5] [19]
mip-[6] [29, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
QueryConcept_Type-[10] [16, 46]
jcasType-[18] [25, 36, 48, 53]
v-[5] [59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
K-[3] [13]
V-[5] [15]
final-[10] [19]
node-[17] [28, 35]
isBlack-[8] [37]
index-[21] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Attachment-[1] [4, 33, 45]
attachmentParam-[5] [10, 21, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
mappingDao-[5] [16, 21]
featureId-[8] [25]
geometryType-[11] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
CalendarDateUnit-[8] [11]
dateUnit-[15] [21]
refDate-[5] [27]
TimeHelper-[1] [32]
cdUnit-[9] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
PersistenceProvider-[2] [21, 147, 182, 309, 365, 388]
persistenceProviderDeploymentHolder-[9] [25, 29]
providerMap-[23] [39, 46, 51, 83]
pu-[6] [55, 75, 87, 101, 118, 314, 370, 414]
deploymentUnit-[12] [69, 169, 214, 302, 403]
String-[19] [97, 114, 354]
persistenceProviderClassName-[116] [126, 131, 191, 240, 260, 280, 348, 362, 437, 455]
Configuration-[109] [133, 153, 358]
configuredPersistenceProviderModule-[99] [140, 159, 295, 346]
classLoader-[167] [189]
providers-[149] [194, 203, 216, 289, 304, 316, 390, 405, 416]
provider-[183] [207, 222, 310, 321, 327, 366, 375, 410, 444, 459]
PersistenceProviderDeploymentHolder-[8] [210, 298, 399]
ROOT_LOGGER-[63] [234, 254, 274, 340, 429, 451]
e-[228] [238, 247, 258, 267, 278, 334, 344, 423, 433]
JpaLogger-[232] [252, 272, 338, 427, 449]
catch-[244] [264]
PersistenceProviderLoader-[185] [291, 392]
getProviderByName-[312] [368, 412]
providerNameDerivedFromClassName-[356] [379, 396, 435]
List-[145] [386]
ModuleLoadException-[333] [422]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [6]
authority-[7] [16, 30]
getID-[22] [34, 41, 48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 15]
ORecordAbstract-[16] [20]
record-[7] [22]
rec-[17] [24]
setVersion-[3] [26]
iVersion-[11] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
type-[5] [27]
processorList-[19] [32, 42]
ConnectionEventProcessor-[17] [39]
processor-[40] [45]
onEvent-[2] [48]
remoteAddr-[8] [50]
conn-[11] [52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Flow-[2] [18]
JsonNode-[4] [22]
json-[10] [29, 42]
ByteString-[6] [34]
callbackName-[13] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
initialize-[4] [16]
input-[10] [18]
char-[7] [44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[2] [9, 16, 24]
SerialRow-[4] [11, 18, 26, 62]
final-[8] [15]
all-[13] [32, 58, 71]
list-[28] [37, 46, 56, 79, 90]
current-[20] [50, 65]
row-[63] [75, 83]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 9]
publicId-[6] [16]
urn-[10] [19, 25, 32, 38, 45, 51, 58, 64, 71, 77, 84, 90, 97, 103, 110, 116, 123, 129, 136, 142, 149, 155, 165]
PublicId-[12] [21, 34, 47, 60, 73, 86, 99, 112, 125, 138, 151]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ClientAnchor-[2] [13]
factory-[10] [16]
anchor-[14] [22, 33, 46, 57, 71]
newCell-[7] [26, 37, 50, 61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
JOptionPane-[44] [54, 91, 101]
runStatus-[16] [59]
statusLabel-[37] [74]
e-[71] [80]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Search_Type-[10] [16, 46]
jcasType-[18] [25, 36, 48]
v-[5] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [11]
Object-[8] [15]
array-[9] [23, 33, 39, 59]
bp-[6] [37]
componentType-[21] [41, 52]
index-[13] [43, 61]
value-[16] [46, 50, 63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12]
String-[13] [20, 26]
parameters-[15] [23]
filterConfig-[6] [29]
parameter-[21] [33, 51]
value-[27] [38, 53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[0] [4]
attributePrototypes-[8] [12, 19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Map-[1] [21]
Long-[3] [23, 163]
String-[5] [25, 173]
LOCAL_MAPPING-[14] [34, 50, 53, 67, 73, 86, 183, 245]
returnVal-[27] [62]
synchronized-[48] [65]
HashMap-[30] [82, 241]
ISyntax-[103] [120]
preparedStatement-[92] [129, 148, 233]
syntax-[104] [139]
resultSet-[97] [146, 156, 166, 176, 235]
id-[164] [164, 187]
title-[174] [174, 189]
timeToUpdateAgain-[45] [193]
System-[39] [196]
sqlError-[216] [223]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
charsData-[11] [23, 37]
Map-[15] [29]
String-[17] [31, 33]
anchortMap-[21] [43, 76]
positionMap-[35] [49, 78]
i-[58] [62]
wb-[7] [64, 80]
i-[70] [70, 84]
##########
Please find the dataflow of the function. We present the source and list of target indices.
overwriteString-[7] [15, 21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
g-[7] [21, 26, 97, 414, 432]
ncfile-[4] [28, 95, 410]
dontUseVertical-[13] [43]
dims-[36] [46, 48, 64, 66, 73, 75, 280]
Variable-[89] [93]
verticalName-[52] [101, 398]
v-[90] [104, 113, 131, 156, 228, 250, 269, 294, 394, 401, 416]
Attribute-[118] [136, 161, 233, 255, 274, 299]
lookup-[122] [140]
record-[126] [144, 241, 421, 436]
positive-[151] [165]
units-[172] [188, 208]
axisType-[178] [192, 212, 221, 261]
AxisType-[177] [194, 214, 223, 259]
SimpleUnit-[182] [202]
_Coordinate-[257] [276, 301]
hcs-[57] [287, 305]
double-[315] [321]
nlevs-[81] [323, 387]
int-[80] [329, 383]
i-[330] [334]
levels-[83] [336, 352]
i-[342] [342, 356, 361]
Double-[346] [350]
data-[318] [359, 390]
d-[347] [364]
Array-[371] [374]
DataType-[108] [378]
dataArray-[372] [405]
##########
Please find the dataflow of the function. We present the source and list of target indices.
source-[9] [14, 33]
Optional-[2] [19, 37, 52]
MuteEvent-[4] [27, 31]
muteRequest-[28] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [11, 35, 63]
Match-[1] [13]
path-[5] [21, 46, 75, 96]
tail-[15] [26, 38, 66]
after-[36] [50, 58]
treeMap-[17] [54, 83]
key-[64] [79, 87, 98]
match-[2] [94]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StringEntity-[12] [16]
json-[8] [18]
entity-[13] [23, 34]
httpRequest-[5] [30]
setEntity-[2] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
timeoutString-[7] [16, 26, 39, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
id-[6] [17, 28, 36, 43, 52, 62]
OrientElement-[1] [30, 34]
OIdentifiable-[38] [45, 50]
rec-[39] [47, 57, 84]
IllegalArgumentException-[21] [72]
final-[4] [80, 97]
doc-[82] [92, 105, 123, 130]
schemaClass-[99] [110, 114]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [5, 9, 13]
consumer-[7] [21, 26, 42]
result-[11] [23, 32]
animate-[15] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [12, 14]
ClassLoader-[7] [28]
WSEndpointDeploymentUnit-[37] [42]
loader-[8] [44]
context-[5] [46]
urlPatternToClassNameMap-[16] [48]
jbwmd-[19] [50]
metadata-[22] [52]
jbwsMetadata-[25] [54]
WildFlySecurityManager-[31] [59, 91]
unit-[39] [82, 86]
origClassLoader-[29] [95]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [10, 17]
Set-[8] [15]
expectedVersions-[6] [25]
Sets-[21] [34]
expectedSet-[19] [38]
versions-[12] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
boolean-[1] [11]
expiry-[5] [18, 22, 62]
long-[7] [32, 44]
final-[31] [43]
now-[33] [47]
lastCleanupTime-[8] [49, 54]
isExpired-[12] [51, 71]
timeDiff-[45] [60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[1] [4]
i-[10] [21, 51, 58, 64]
size-[23] [23]
els-[15] [28, 40, 44, 62]
elements-[30] [46]
Object-[12] [49]
element-[5] [67, 70]
##########
Please find the dataflow of the function. We present the source and list of target indices.
scope-[6] [19, 24, 32, 40, 48, 64]
err-[12] [56]
n-[9] [60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Option-[2] [16]
shortForm-[6] [20]
longForm-[9] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DateFormat-[13] [16, 20]
defaultDatePattern-[8] [31, 46]
formatter-[14] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[12] [15, 150, 156]
dataType-[10] [21, 34, 93, 134, 175, 216]
DataType-[9] [23, 36, 95, 136, 177, 218]
barray-[7] [29, 46, 57]
ByteBuffer-[50] [53]
byteOrder-[16] [62, 70]
bbuff-[51] [66, 103, 144, 185, 226]
ByteOrder-[82] [86]
short-[109] [115]
nelems-[13] [117, 158, 199, 240]
tbuff-[101] [120, 142, 161, 183, 202, 224, 243]
pa-[112] [124, 128, 153, 165, 169, 194, 206, 210, 235, 247, 251]
float-[191] [197]
double-[232] [238]
##########
Please find the dataflow of the function. We present the source and list of target indices.
IComplexNumber-[2] [5]
Complex-[9] [13]
num-[6] [15, 25]
c-[10] [45, 51]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 14, 30]
String-[5] [9]
ODatabaseDocumentInternal-[15] [31]
sysdb-[32] [43, 54, 113]
clusterName-[10] [47, 85]
schema-[52] [67]
className-[6] [71, 105]
cls-[65] [76, 81]
currentDB-[16] [125, 137]
ODatabaseRecordThreadLocal-[18] [129, 141]
##########
Please find the dataflow of the function. We present the source and list of target indices.
out-[11] [17, 24, 30, 37, 43, 50, 57, 63, 70, 76, 83, 90, 96, 103, 109, 116, 122, 129, 135, 142, 148]
##########
Please find the dataflow of the function. We present the source and list of target indices.
byte-[19] [25]
protocolCodeLength-[16] [27]
in-[10] [31]
protocolCodeBytes-[22] [35, 43]
ProtocolCode-[1] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
CoreSQLUtils-[15] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
adviceClassReaderCache-[16] [21, 34, 55]
ClassReader-[1] [30]
advice-[11] [38, 52, 59]
adviceReader-[32] [43, 48, 61, 66]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
int-[2] [10, 20]
CharSequence-[6] [14]
index-[11] [23]
i-[21] [25]
source-[7] [27, 41]
i-[33] [33, 45, 53]
match-[15] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
GeoPackageMetadata-[1] [9, 17, 49, 53]
String-[14] [23, 29, 33]
id-[5] [38]
selection-[15] [57]
selectionArgs-[26] [59]
cursor-[43] [72, 83, 90]
metadata-[10] [79, 99]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [12]
to-[5] [20]
implementation-[14] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
key-[7] [13, 105]
K-[6] [36, 100]
V-[2] [40, 52, 102]
bindingSelection-[21] [44, 60, 77]
Key-[0] [50, 56]
entrySetBinder-[42] [69, 89]
valueKey-[54] [107, 112]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DatagramChannel-[14] [17]
final-[5] [24, 50, 107, 151, 243]
probe-[15] [28, 37, 54, 94, 111]
StandardSocketOptions-[32] [41, 58, 98, 115]
int-[25] [51, 108, 152]
maxSoSndBuf-[52] [65, 90]
ctx-[9] [67, 84, 124, 141, 157, 165, 173, 194, 207, 228]
Integer-[45] [102]
maxSoRcvBuf-[109] [122, 147, 213, 236]
System-[74] [131]
defaultSoSndBuf-[26] [163]
soSndBuf-[153] [179, 200]
SOCKET_SNDBUF_LENGTH_PROP_NAME-[82] [192]
ConfigurationException-[184] [218]
ex-[245] [254, 260]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[15] [26, 39, 53, 180]
atomicOperation-[17] [59, 154, 164]
fileId-[34] [61]
OSBTreeBonsaiBucket-[76] [85, 121]
cacheEntry-[55] [89, 125, 156]
rootBucketPointer-[63] [91, 127]
subTreesToDelete-[44] [106, 162]
rootBucket-[82] [108, 111, 118, 142]
keySerializer-[97] [135]
valueSerializer-[99] [137]
lock-[28] [170]
e-[182] [190]
rollback-[185] [197]
##########
Please find the dataflow of the function. We present the source and list of target indices.
exemptionURL-[6] [16]
boolean-[2] [31]
e-[23] [38, 51]
sp-[10] [45, 61, 72]
SourcePicture-[9] [49]
exemptionURLString-[14] [69]
Tools-[80] [80]
inProgress-[32] [87, 94]
##########
Please find the dataflow of the function. We present the source and list of target indices.
modelElement-[5] [10, 24, 38, 61, 66]
##########
Please find the dataflow of the function. We present the source and list of target indices.
nextToken-[9] [19]
kind-[5] [21, 23, 30]
e-[37] [44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [5, 9, 18]
sheet-[7] [26, 36, 52, 63, 77, 108, 135]
sheetRightCol-[57] [79, 116]
cellAttributesMap-[20] [81]
commandList-[70] [90, 112, 121, 128]
List-[66] [93]
String-[12] [95]
sheetConfigMap-[16] [110, 126, 137]
formList-[97] [114, 130, 139]
hasEachCommand-[86] [141]
##########
Please find the dataflow of the function. We present the source and list of target indices.
connectionToRemove-[16] [28, 33, 48]
threadLocalConnection-[18] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
BoundingBox-[7] [12]
ProjectionConstants-[15] [19, 23, 27, 40, 47]
standardWgs84Box-[9] [54]
wgs84ToWebMercatorTransform-[34] [58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [8, 11, 14]
JPAConfig-[2] [23, 33]
n1-[6] [27]
u1-[9] [29]
n2-[12] [37]
u2-[15] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [8, 57]
java-[12] [21, 34]
p-[19] [43]
s-[6] [47, 75, 92, 108]
pos-[9] [53]
m-[41] [64, 77, 94, 110]
isInsideCharClass-[73] [73]
isEscapedChar-[90] [90]
isNoncapturingParen-[106] [106]
numParens-[118] [118]
numParens-[58, 118] [124]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [13, 23]
scala-[5] [29]
list-[25] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
path-[5] [13]
value-[9] [18, 27, 33, 43, 54, 64, 79]
Byte-[20] [25, 81]
Long-[35] [41]
Integer-[56] [62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [10]
String-[4] [19]
s-[5] [22]
start-[8] [26, 28]
length-[11] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [18]
list-[9] [29]
CacheEntry-[21] [39]
KEY-[23] [41]
VALUE-[25] [43]
killList-[27] [47]
cacheEntry-[45] [54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
write-[13] [18, 27, 32, 37, 46, 55]
type-[5] [20]
value-[8] [48]
quote-[42] [51]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[9] [15, 25]
joinPoint-[11] [19, 32]
LogBuilder-[26] [30]
targetLogBuilder-[27] [38, 56, 69]
sourceLocation-[17] [48, 62, 75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
Object-[5] [9]
k1-[6] [22]
System-[18] [25]
k2-[10] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
txId-[5] [19]
Transaction-[1] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
byte-[2] [13, 19]
streamHeader-[16] [34, 38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
it-[24] [34, 44, 72]
JtxResource-[22] [41]
resource-[42] [42, 52]
Exception-[14] [61]
ex-[62] [62, 67]
lastException-[16] [65, 93, 108]
status-[10] [87, 98]
wasForced-[6] [114]
JtxException-[104] [119]
##########
Please find the dataflow of the function. We present the source and list of target indices.
closed-[10] [14]
dmr8-[20] [27, 30]
chunk-[47] [51]
flags-[72] [80]
state-[65] [83]
State-[67] [85]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[12] [15]
roll-[10] [21, 82]
record-[7] [24, 38, 51, 70]
avroSchema-[13] [48, 84]
location-[16] [61, 80]
##########
Please find the dataflow of the function. We present the source and list of target indices.
state-[5] [15, 21, 39, 49]
TimerState-[4] [17, 23]
thread-[8] [28, 33, 43, 55]
##########
Please find the dataflow of the function. We present the source and list of target indices.
statusList-[10] [20, 31, 57]
int-[28] [39]
len-[29] [42]
i-[40] [46]
i-[50] [50, 61]
Status-[8] [54]
s-[55] [72, 81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [12, 33]
text-[6] [16, 18, 30, 55, 79]
StringTokenizer-[24] [28]
stoker-[25] [36]
value-[10] [44, 73, 111]
firstToke-[34] [50, 59]
udunitString-[14] [53, 77, 92]
du-[83] [87, 107]
DateUnit-[82] [90]
e-[70] [99]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Granularity-[2] [15]
requestedDuration-[6] [20, 29]
points-[9] [22, 37]
assumedIntervalMillis-[12] [24]
gran-[16] [31, 42, 44, 60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Schema-[2] [5, 19, 29, 65, 98]
schema-[6] [11, 33, 118, 125, 132]
schemas-[31] [41, 52, 74, 85, 107]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[17] [19]
tags-[21] [28, 39, 68, 79]
checkArgument-[26] [35]
Observable-[3] [53]
e-[49] [57]
metric-[13] [66, 77]
dataAccess-[62] [73]
addTags-[7] [75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
WavHeader-[2] [12, 16]
short-[28] [33, 70, 91]
format-[6] [35, 41, 47, 53, 60, 73, 80, 93, 104, 110]
samples-[9] [118]
w-[13] [123]
##########
Please find the dataflow of the function. We present the source and list of target indices.
i-[15] [19]
i-[25] [25, 39, 58, 77]
URL-[31] [35]
PROTOCOLS-[21] [37, 56, 75]
log-[50] [69]
e-[66] [80]
##########
Please find the dataflow of the function. We present the source and list of target indices.
stage-[23] [33, 65]
service-[31] [47, 71]
missingServices-[11] [55, 89, 107]
List-[7] [114]
String-[9] [116]
LinkedList-[14] [121]
if-[86] [135, 167]
serviceDefinition-[130] [142, 154]
unsupportedServices-[118] [150, 170, 187]
throw-[97] [177]
new-[98] [178]
StringUtils-[103] [183]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cls-[6] [13, 24, 33, 43, 131, 146, 161, 176, 191, 206, 221, 238, 254, 265, 286, 304, 321, 332, 359, 371, 381, 392, 419]
Class-[5] [40, 167]
componentClass-[41] [52, 59, 61, 76]
sequence-[68] [68, 122]
String-[2] [71, 89, 103, 137]
getTypeIDLName-[3] [74]
int-[45] [79]
idlName-[72] [82, 92, 106]
idx-[80] [98, 110]
idlModule-[90] [118]
baseName-[104] [126]
java-[133] [148, 163, 178, 193, 208, 244]
InterfaceAnalysis-[258] [261, 325, 328]
ia-[259] [269, 277, 326, 336, 344]
org-[223] [292, 307]
ExceptionAnalysis-[385] [388]
ea-[386] [396, 404]
ValueAnalysis-[412] [415]
va-[413] [423, 431]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Array-[3] [15]
result-[16] [24, 42, 63]
reallyRead-[4] [28]
client-[7] [30]
cancelTask-[10] [32]
orgVar-[38] [44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[1] [6, 11, 18, 36]
i-[19] [23]
i-[32] [32, 43, 63]
responseGroups-[25] [39]
currentGroupSize-[37] [52, 59]
maxCoherentResponses-[7] [54, 57]
bestGroupSoFar-[12] [61, 68]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ActionInputParameter-[3] [10, 46]
name-[7] [17, 33, 59, 125]
ret-[11] [22, 27, 39, 129, 156]
annotatedParameter-[47] [61, 90]
pd-[55] [70, 78, 137]
if-[68] [76]
Object-[87] [96]
callValue-[88] [104, 116]
propertyValue-[98] [119, 146]
beanWrapper-[110] [121]
##########
Please find the dataflow of the function. We present the source and list of target indices.
PartitionInfoCacheSupport-[3] [11, 16, 29]
String-[7] [21, 33]
Map-[1] [27]
partitionInfoDiff-[35] [44, 53, 65, 68, 77, 85]
partitionValues-[14] [48]
location-[22] [50]
pCache-[19] [56, 61, 72]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 11, 21]
value-[12] [24]
##########
Please find the dataflow of the function. We present the source and list of target indices.
status-[3] [6, 33]
content-[11] [16, 44]
Result-[2] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [8, 14, 26, 40, 54]
offset-[9] [21, 33, 47, 61]
in-[17] [29, 43, 57]
ch1-[55] [71]
ch2-[41] [77]
ch3-[27] [83]
ch4-[15] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DifferentialFunction-[7] [12]
functionName-[17] [31, 49]
exec-[14] [38, 52]
sameDiffFunctionInstances-[27] [45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[7] [13, 53]
byte-[20] [26]
pending-[8] [39]
pending-[8, 143] [46, 64]
sendEverything-[37] [50, 56, 140]
bytesToRead-[54] [54, 85]
BUFFER_SIZE-[31] [58, 66]
Math-[60] [60]
int-[29] [69, 83]
read-[70] [70, 76, 90, 108, 145]
buff-[23] [78, 104]
outputStream-[5] [100]
Exception-[114] [114]
e-[115] [115]
pending-[145] [143]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ctx-[8] [23]
db-[5] [25]
suffix-[11] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
Node-[5] [9]
refChild-[10] [17, 29, 38, 50]
siblingIndex-[15] [27, 58]
newChild-[6] [44, 56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[3] [14, 17, 65]
arr-[10] [31]
startIndex-[15] [33]
availableSize-[18] [35]
out-[21] [40, 68]
o-[7] [44]
e-[51] [61]
written-[66] [75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4]
name-[5] [12, 22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
inputDirectory-[10] [23, 31, 58, 81, 350]
getLog-[15] [38, 99, 114, 129, 278, 402]
File-[9] [64, 71, 93, 172, 328, 334, 361, 382]
markdownFiles-[73] [96]
file-[94] [107, 122, 137, 156, 166, 207, 238, 316, 338, 365, 386]
debug-[103] [118, 133, 282, 406]
MarkdownDTO-[144] [148]
dto-[145] [152, 158, 188, 214, 295, 323, 410, 419]
StringUtils-[54] [162]
baseDepth-[52] [178]
List-[69] [197]
FileUtils-[77] [203, 234]
raw-[201] [220]
String-[199] [231, 254, 266, 309]
getInputEncoding-[209] [240]
line-[232] [250, 257, 269]
key-[255] [286, 301]
value-[267] [290, 303]
recursiveInput-[87] [330]
inputFileExtension-[310] [375, 396]
outputDirectory-[332] [380]
MojoExecutionException-[13] [432]
e-[427] [436, 442]
##########
Please find the dataflow of the function. We present the source and list of target indices.
json-[5] [10, 15, 40, 55, 70]
JSONObject-[4] [18]
VenmoConfiguration-[1] [23, 28]
venmoConfiguration-[25] [32, 47, 62, 78]
Json-[36] [51, 66]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[6] [9]
repetitionLevel-[7] [21, 26, 28]
definitionLevel-[10] [23, 31, 33]
valueCount-[43] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
event-[22] [37, 64, 79]
wroConfiguration-[7] [49]
PropertyChangeListener-[12] [54]
public-[16] [58]
void-[17] [59]
final-[20] [62]
PropertyChangeEvent-[21] [63]
headersConfigurer-[25] [67]
newResponseHeadersConfigurer-[27] [69]
wroManagerFactory-[31] [73]
valueAsLong-[35] [77]
##########
Please find the dataflow of the function. We present the source and list of target indices.
m-[10] [15, 41]
index-[5] [37]
ca-[33] [47, 57, 80]
DataType-[21] [53, 63]
ForbiddenConversionException-[27] [69]
CDMArrayStructure-[74] [78]
as-[75] [83]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[2] [14]
ParamValueMetaData-[4] [16, 38]
jbossWebMD-[10] [20, 43]
getContextParams-[6] [22]
contextParamsMD-[18] [28, 33, 47, 52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ArrayStructure-[2] [8]
StructureMembers-[11] [22, 26]
m-[14] [28]
ArrayStructureW-[35] [39]
membersw-[23] [41]
child-[6] [43, 62, 68]
iter-[60] [79, 89]
int-[52] [86]
recno-[87] [87, 103]
StructureData-[96] [96]
sd-[97] [97, 110]
innerData-[9] [99]
result-[36] [106, 118]
count-[112] [112]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [4, 34]
orig-[5] [26, 43, 58]
Remote-[45] [56]
ctx-[11] [64]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[6] [10, 17, 25, 35]
entry-[19] [29]
String-[26] [38]
req-[8] [46, 79]
favoriteNotices-[40] [51, 59, 69, 81]
notificationId-[27] [55, 63, 73]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13]
Cell-[6] [16]
String-[10] [18]
newComment-[11] [25, 36]
finalCommentMap-[20] [30]
cell-[7] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [16, 26]
OCompression-[9] [17]
compression-[11] [20, 86, 110]
tempInstance-[18] [30, 62]
name-[28] [32, 42, 51, 64, 75, 84]
IllegalArgumentException-[47] [71]
compressionClasses-[58] [80]
e-[93] [108]
##########
Please find the dataflow of the function. We present the source and list of target indices.
newSize-[5] [10, 19]
setSize-[2] [17]
size-[15] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ByteBuffer-[2] [14, 32, 53]
spentBuffer-[15] [25, 30, 40, 47]
size-[6] [36, 57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[7] [10]
session-[5] [15]
key-[8] [21]
value-[11] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Calendar-[5] [15]
cal-[6] [19, 37]
DateTime-[22] [26]
msecs-[9] [28]
base-[13] [30]
CalendarDate-[2] [35]
dt-[23] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Styles-[1] [8]
featureTable-[5] [20, 34]
id-[14] [25, 36]
styles-[9] [30, 41]
getTableStyles-[2] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
s-[7] [16, 30, 34]
c-[11] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4]
name-[5] [10, 17, 19, 29, 36, 38, 53, 57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
File-[1] [7, 12, 33]
final-[6] [11, 32, 37, 52]
dir-[8] [17]
boolean-[29] [38]
file-[34] [41, 60, 80]
pointFile-[39] [70]
extension-[54] [76]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[7] [10, 13, 16]
Set-[1] [20]
String-[3] [22]
minLongitude-[8] [35]
minLatitude-[11] [37]
maxLongitude-[14] [39]
maxLatitude-[17] [41]
ids-[24] [49, 56, 70, 86]
cell-[43] [60, 74]
getContainingIds-[5] [62, 76]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Type-[8] [16, 42]
type-[9] [23]
e-[6] [29, 38, 50, 59, 65, 72, 79, 86, 93, 100, 107, 114, 128, 137, 144, 151, 158, 164, 168]
Local-[26] [35]
Label-[47] [56]
array-[27] [69, 104, 155]
loopvar-[36] [83, 111, 132, 148]
checkloop-[57] [90, 141]
loopbody-[48] [97, 172]
componentType-[17] [118, 125]
callback-[12] [121]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Exception-[6] [10]
exception-[7] [19]
StackTraceElement-[14] [28]
stackTrace-[17] [31]
String-[1] [34]
stackTraceElement-[29] [37, 109, 117]
if-[43] [63]
className-[45] [65, 84, 104]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [5]
addMap-[7] [21]
Map-[11] [29]
Integer-[13] [33]
List-[15] [35, 48]
SerialRow-[17] [37, 50, 81]
map-[19] [41]
entry-[39] [54, 91]
entryRowList-[52] [63, 70, 84]
row-[82] [97]
##########
Please find the dataflow of the function. We present the source and list of target indices.
isInconsistent-[3] [18, 38]
incompleteness_-[23] [27]
consistencyCheckingState-[16] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[4] [7, 10]
ens-[5] [24]
time-[8] [33, 47]
nlevels-[29] [35, 49]
level-[11] [38, 51]
recordTracker-[22] [45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
HttpRequest-[2] [12]
destination-[7] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
lock-[14] [18, 20, 102]
long-[4] [28]
unit-[8] [31]
timeout-[5] [35]
nanos-[29] [62, 68, 91]
InterruptedException-[11] [74]
notEmpty-[64] [78]
ie-[75] [85]
##########
Please find the dataflow of the function. We present the source and list of target indices.
shutdown-[2] [20]
lock-[8] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
catListBox-[8] [12]
save-[2] [14, 33, 45]
fileChooser-[27] [31]
catgenFileChooser-[39] [43]
prefs-[20] [49]
##########
Please find the dataflow of the function. We present the source and list of target indices.
positionalTraverser-[11] [18, 29, 46]
visitor-[6] [22, 25, 48]
TermWalker-[2] [34]
Term-[39] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5]
prefix-[6] [15, 20, 25, 29, 52, 169, 171, 177, 185]
int-[59] [66]
c-[50] [69, 89, 95, 102, 109, 116, 123, 130, 137, 144, 151]
i-[67] [75]
i-[79] [79, 91, 97, 104, 111, 118, 125, 132, 139, 146, 153, 161]
start-[60] [159, 175]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [10, 13]
subCounters-[19] [23, 44, 67]
DataDescriptor-[4] [28]
BitCounterUncompressed-[1] [30, 39, 62, 77, 81]
subKey-[5] [48, 71, 83]
-[32] [50]
subCounter-[42] [54, 59, 73, 90]
n-[8] [85]
replicationCountSize-[14] [87]
row-[11] [92]
rc-[78] [95, 98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[8] [35, 79]
ActionWrapper-[1] [62, 68]
totalFilters-[36] [70, 86, 107, 112]
totalInterceptors-[9] [74, 156, 177]
executionArray-[65] [103, 115, 173, 185, 206]
index-[80] [105, 110]
index-[117] [117, 175, 187]
actionRequest-[121] [128, 190]
ActionRequest-[134] [142]
actionResult-[146] [150, 194, 201]
System-[91] [161]
actionRuntime-[95] [165]
index-[185] [180]
index-[187] [180]
index-[190] [180]
index-[194] [180]
index-[196] [180]
index-[201] [180]
index-[206] [180]
##########
Please find the dataflow of the function. We present the source and list of target indices.
boolean-[1] [8, 139]
otherValue-[6] [20, 43, 74, 96]
isEmbedded-[15] [22]
final-[4] [27, 36, 89, 111, 128, 153]
OSBTreeRidBag-[28] [32, 37, 41]
delegate-[34] [45]
thisTree-[29] [49, 65]
otherTree-[38] [57, 69]
uuid-[72] [76]
iMergeSingleItemsOfMultiValueFields-[9] [86]
iter-[94] [104, 115]
OIdentifiable-[92] [112, 131, 154]
value-[113] [113, 123, 165, 188]
Iterator-[90] [129]
localIter-[133] [133, 146, 157]
rawIterator-[135] [135]
found-[140] [140, 173, 184]
v-[155] [155, 169]
add-[186] [186]
##########
Please find the dataflow of the function. We present the source and list of target indices.
world-[7] [16, 27]
double-[13] [24, 35, 42]
fromY-[25] [38]
toLat_r-[36] [55, 64, 66, 93, 117, 185]
PI_OVER_2-[58] [71, 74, 96]
toLon_r-[43] [76, 99, 138, 147, 149, 167, 197]
Math-[51] [78, 89, 101, 113, 134, 163, 181, 193]
centMeridian-[82] [105]
fromX-[14] [108]
earthRadius-[40] [111]
Misc-[47] [130]
PI-[141] [154, 157, 170]
INVALID-[125] [174]
result-[10] [177, 189, 202]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [9, 17, 30, 38, 83]
Long-[15] [26, 28]
List-[7] [36]
buckets-[22] [47, 63, 76, 106]
index-[57] [61]
index-[69] [69, 80]
pointMap-[19] [87]
from-[74] [91, 104, 118]
bucketPoint-[85] [96, 112, 128]
long-[73] [101]
emptyBucketFactory-[32] [114]
to-[102] [120]
result-[40] [124, 133]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [6, 10, 16]
final-[5] [9]
getProperty-[3] [36]
name-[7] [38]
defaultValue-[11] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
java-[1] [11, 24, 35]
Array-[7] [30]
Variable-[17] [47]
variables-[19] [50]
result-[32] [52, 64]
variable-[48] [56]
##########
Please find the dataflow of the function. We present the source and list of target indices.
NetcdfFileWriter-[2] [19]
version-[6] [21]
location-[9] [23]
chunker-[12] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
encoderConfig-[2] [5, 10, 21]
RestAssuredMockMvcConfig-[1] [17]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[1] [5]
parse-[3] [28]
spec-[7] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 19, 40, 50]
Prefix-[2] [12, 22, 41]
set-[14] [26]
iter-[24] [32, 44]
prefix-[42] [54, 69]
string-[7] [58]
comp-[52] [63, 74]
##########
Please find the dataflow of the function. We present the source and list of target indices.
entry-[5] [17, 130, 140]
local-[25] [35, 48]
CatalogEntry-[4] [42, 46]
dpe-[43] [43, 57]
String-[14] [54]
dp-[55] [55, 66, 79, 98]
partial-[15] [70, 85, 104]
pos-[92] [92]
localDelegate-[27] [117, 126, 136]
pos-[10, 92] [142]
##########
Please find the dataflow of the function. We present the source and list of target indices.
m-[7] [15]
data-[11] [19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [11]
condition-[13] [26, 46]
MatchCondition-[38] [42]
n-[9] [44]
INDArray-[8] [49]
op-[39] [60]
boolean-[2] [65, 71]
int-[15] [74, 86]
arr-[50] [76, 93, 105]
i-[87] [91]
i-[99] [99, 109, 116, 124]
result-[68] [114, 122, 131]
##########
Please find the dataflow of the function. We present the source and list of target indices.
reqPath-[11] [18, 20, 45, 79]
req-[5] [26, 86]
String-[10] [31]
match-[39] [50, 57]
rc-[32] [55, 68, 73, 90]
res-[8] [88]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [8]
key-[6] [21]
defaultValue-[9] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
java-[7] [15]
uri-[12] [26]
Object-[1] [29]
dataset-[5] [35]
elem-[22] [37]
contentObject-[31] [52, 64]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
ModularReference-[2] [19]
className-[7] [21]
factoryClass-[14] [23, 33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
o-[7] [18, 80]
field-[10] [29, 51, 100]
JsonFormat-[26] [33]
formatAnn-[27] [40, 65, 108]
parse-[4] [78]
RuntimeException-[47] [96]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Subscription-[7] [11]
next-[12] [25, 39, 43]
upstream-[9] [33, 51]
subscriber-[18] [64]
##########
Please find the dataflow of the function. We present the source and list of target indices.
EntityManager-[3] [13]
threadLocalFallback-[7] [21]
em-[4] [26, 35]
ems-[15] [31, 43, 58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
resolution-[6] [11, 15, 21, 25, 30, 32, 57]
theTimer-[34] [40, 51]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Collection-[1] [10]
ManagementAction-[3] [12, 19]
uActions-[14] [25, 72, 88]
preUninstallActions-[49] [65, 77]
componentId-[63] [81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DapStructure-[11] [15]
datav-[5] [21, 34, 106, 137, 161, 216]
DapVariable-[19] [49, 78]
dstruct-[12] [53, 132]
f-[62] [66]
dfields-[51] [68, 81]
f-[74] [74, 85, 110]
List-[47] [88]
field-[79] [100]
DataCursor-[4] [103, 158]
fdata-[104] [115]
fieldslices-[92] [117]
DapSequence-[126] [130]
long-[134] [145]
r-[146] [150]
count-[135] [152]
r-[154] [154, 165]
printer-[168] [175, 181, 192, 198]
printCompoundInstance-[2] [187]
dr-[159] [189]
DapException-[9] [212]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [14]
Class-[8] [15]
c-[12] [36, 73]
getConstructor-[5] [38, 75]
params-[20] [40, 77]
Constructor-[1] [43, 56, 64]
NoSuchMethodException-[23] [83, 107]
return-[72] [87]
result-[47] [98, 103]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16, 20, 27, 42, 166, 202]
int-[9] [13]
boolean-[17] [21]
trustAll-[18] [37, 142]
connectionTimeout-[14] [39, 48, 77]
socket-[44] [53, 67, 86, 96, 122, 148]
socketFactory-[29] [55, 103, 117]
host-[6] [59, 73, 124, 150]
port-[10] [61, 75, 126, 152]
SSLSocket-[1] [81, 88, 94, 111, 137]
sslSocket-[82] [91, 108, 134, 189, 218, 227]
SSLSocketFactory-[105] [115]
String-[5] [167]
secureEnabledProtocols-[161] [176]
StringUtil-[172] [182]
values-[170] [186, 193]
verifyHttpsHost-[22] [199]
SSLParameters-[203] [207]
sslParams-[204] [211, 222]
##########
Please find the dataflow of the function. We present the source and list of target indices.
EightPuzzleState-[1] [8, 16]
newState-[9] [13, 39, 47]
e-[26] [35]
op-[5] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[6] [13, 17, 21, 28]
Object-[3] [18, 22]
iLeft-[19] [35, 47]
iRight-[23] [39, 55]
##########
Please find the dataflow of the function. We present the source and list of target indices.
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[8] [11]
pc-[6] [23, 44, 92]
page-[36] [42, 105]
parseTagFileDirectives-[3] [46]
path-[12] [48, 64, 81, 102]
err-[21] [58, 75]
e-[55] [71]
TagFileDirectiveVisitor-[85] [90]
tagLibInfo-[15] [98]
name-[9] [100]
tagFileVisitor-[87] [109, 112, 119]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [9, 11, 17, 23, 29]
qualifiedTableName-[5] [34]
partitionNameValueMap-[13] [36]
partitionTypeMap-[21] [38]
partitionPath-[24] [40]
sql-[30] [45]
##########
Please find the dataflow of the function. We present the source and list of target indices.
values-[5] [11, 16, 31]
V-[3] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ElkClass-[7] [24, 31, 51, 64, 122]
classTaxonomy-[9] [34, 55]
classNode-[53] [67]
clazz-[65] [73, 87, 105, 123, 135]
PredefinedElkIris-[81] [95]
classes-[26] [101, 115, 125]
objectFactory-[14] [131]
writer-[17] [142, 149]
decl-[129] [144]
##########
Please find the dataflow of the function. We present the source and list of target indices.
source-[5] [10, 108, 123]
iterator-[23] [29, 35, 48]
IJavaBreakpoint-[42] [42, 46]
element-[43] [43, 56, 64, 83]
DroolsLineBreakpoint-[1] [58, 62, 77, 81]
l-[78] [78, 90, 100, 115, 128]
int-[87] [87]
matchLine-[88] [88]
String-[4] [96]
matchSource-[98] [98, 112]
CoreException-[134] [134]
e-[135] [135, 140]
logError-[138] [138]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [5, 10]
list-[12] [23, 36, 42, 46]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 9]
path-[6] [16, 30]
ss-[10] [23, 37, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Rectangle-[1] [8]
stretchedPt-[10] [18, 26, 34, 46, 59]
anchorPt-[14] [22, 30, 38, 50, 63]
Math-[42] [55]
##########
Please find the dataflow of the function. We present the source and list of target indices.
targetInputStream-[15] [26, 68]
target-[21] [37, 47, 51, 77]
ProxettaException-[33] [73]
ioex-[61] [83]
##########
Please find the dataflow of the function. We present the source and list of target indices.
newContentFile-[6] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [10]
indexX-[8] [17, 23, 51]
indexY-[11] [29, 35, 48]
gtest-[44] [57, 67]
MAX_DOUBLE-[41] [62]
double-[1] [71, 94]
rect-[65] [74, 80, 97, 103]
pt-[5] [88, 111]
dx-[72] [119, 121]
dy-[95] [123, 125]
##########
Please find the dataflow of the function. We present the source and list of target indices.
input-[7] [12, 31]
int-[21] [40, 63]
i-[41] [45]
data-[29] [47, 58, 102, 112]
i-[51] [51, 60]
char-[26] [55]
c-[56] [72, 76, 92, 110, 120]
b-[64] [85, 88, 127]
i-[100] [100]
i-[51, 100] [114]
hitDots-[136] [136, 141]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
String-[5] [9, 16]
name-[6] [24, 40, 52, 66]
valuesList-[18] [29, 55, 68]
value-[10] [42, 59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
getSun-[11] [27]
currentDate-[5] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DeclarationFilter-[2] [15]
public-[0] [20]
d-[25] [29]
mods-[10] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
section-[5] [18, 21, 101, 120]
_read-[2] [32, 54]
debugCaching-[61] [79]
System-[63] [81]
getFullName-[71] [89]
cache-[45] [95]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [8]
element-[6] [20]
tagName-[9] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
t1-[13] [29, 134]
ctxt-[41] [60, 145, 155, 216, 222, 230, 238]
javacErrors-[54] [71, 96]
javaCompiler-[56] [76, 141, 195, 212]
log-[19] [83, 102, 121]
javaFileName-[39] [89, 127]
Level-[23] [106]
long-[12] [112]
System-[31] [115]
t2-[113] [132]
jsw-[178] [182, 191]
options-[162] [205]
##########
Please find the dataflow of the function. We present the source and list of target indices.
request-[6] [23, 56]
requestParameterName-[11] [27]
forceGzipString-[21] [32, 46]
String-[20] [53, 104, 181, 250]
uri-[54] [64, 73, 75, 111, 168, 189, 231, 258]
boolean-[1] [81]
extension-[105] [116, 125, 127, 139]
extensions-[95] [141]
result-[82] [148, 162, 197, 210, 240, 266, 277]
matches-[88] [170, 184]
match-[182] [193]
wildcards-[159] [222]
Wildcard-[164] [227]
excludes-[214] [233, 253]
exclude-[251] [262]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[7] [11, 20]
originalSize-[12] [24, 32, 54, 124, 127]
pageSize-[26] [34, 109, 115, 130]
index-[8] [48, 73, 79, 91, 111, 118, 133]
E-[3] [64, 101]
size-[21] [75, 95]
List-[1] [99]
original-[14] [105]
result-[103] [141]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [9, 20, 117]
char-[5] [21, 99]
c-[22] [22, 31, 57, 100, 109, 141, 149, 158, 164, 173, 182, 191, 200, 209, 218, 227, 239, 256, 261, 276, 287]
input-[24] [24, 43, 83, 102, 151]
ndx-[13, 65] [26]
quote-[6] [33, 111]
ndx-[36] [36, 47]
String-[1] [41, 118, 122]
startNdx-[11] [45, 51, 73, 85]
ndx-[65] [65, 71]
textLen-[69] [91]
ndx-[65, 296] [104]
ndx-[114] [114]
str-[119] [119, 136]
text-[87] [124, 282]
textLen-[69, 289] [128, 131, 284]
ndx-[146] [146, 153]
ndx-[236] [236]
parseUnicode-[241] [241]
looseMode-[251] [251]
ndx-[265] [265]
syntaxError-[272] [272]
textLen-[289] [289]
growAndCopy-[292] [292]
ndx-[296] [296]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Target-[1] [7, 26, 35, 41, 104, 139, 170, 189]
final-[6] [10, 34, 57, 84, 93, 103, 118]
methodParams-[14] [19, 43]
actionTarget-[8] [30, 55, 61]
i-[70] [74]
methodParams-[76] [76, 88]
methodParams-[78] [76]
methodParams-[80] [76]
length-[76] [78]
length-[78] [78]
length-[80] [78]
i-[76] [80]
i-[78] [80]
i-[80] [80, 90, 209]
MethodParam-[11] [85]
methodParam-[86] [97, 109, 122, 157, 174, 193]
paramType-[95] [134, 145, 178]
paramTarget-[105] [137, 168, 187, 214]
action-[59] [147, 180, 202]
createActionMethodArgument-[143] [176, 198]
type-[195] [200]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ResourcePreProcessor-[2] [6, 15]
final-[5] [9, 14, 33, 37, 41]
processor-[7] [21]
criteria-[11] [23]
resource-[35] [60]
reader-[39] [62]
writer-[43] [64]
decorated-[16] [84, 88]
##########
Please find the dataflow of the function. We present the source and list of target indices.
entity-[6] [11, 29, 51, 76]
deleteById-[2] [27]
result-[17] [43]
dbOom-[21] [61]
type-[49] [69]
ded-[59] [74]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 171]
in-[19] [31, 190]
byte-[26] [39, 43, 47, 53, 81, 130]
escape-[9] [45]
utf8-[29] [55, 75, 84, 122, 135, 145]
int-[61] [68]
i-[69] [73]
i-[86] [86, 118, 137, 147]
b-[82] [92, 111, 127, 166]
spaceplus-[12] [96]
out-[50] [99, 160, 173]
index8-[101] [101]
escape8-[40] [113]
fromHex-[133] [143]
i-[156] [154]
index8-[162] [162, 177]
utf8Charset-[35] [179]
##########
Please find the dataflow of the function. We present the source and list of target indices.
imageBytes-[9] [21]
reader-[13] [27, 38, 44, 59, 69, 99, 114]
int-[1] [30, 36, 52, 75]
ImageLineInt-[66] [66]
row-[67] [67, 80]
rowValues-[78] [78, 91, 105]
System-[87] [87]
pixels-[33] [95, 121]
rowNumber-[53, 110] [97]
rowNumber-[110] [110]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[1] [13]
timeLastQuerySent-[8] [22]
difference-[14] [26, 34]
minDelayBetweenQueries-[28] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ORecord-[1] [5]
final-[4] [8, 12, 19, 62]
ORecordCallback-[20] [28]
iRecord-[6] [42, 69, 117, 123]
iClusterName-[10] [44]
iMode-[14] [46]
iForceCreate-[17] [48]
iRecordCreatedCallback-[26] [50]
iRecordUpdatedCallback-[32] [52]
ORecordId-[63] [67]
rid-[64] [77, 91]
database-[38] [83]
e-[59] [96, 104, 133]
ONeedRetryException-[98] [102]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7]
value-[8] [20, 31, 37, 67]
encode-[11] [26, 35]
e-[46] [53]
name-[5] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
lookupLink-[7] [16]
name-[10] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
OpSymbol-[2] [8, 20, 27]
result-[21] [35, 50, 61, 100]
candidate-[6] [37, 72, 91]
fixity-[30] [45]
SourceCodeException-[18] [68]
fixities-[32] [80]
##########
Please find the dataflow of the function. We present the source and list of target indices.
index-[5] [15, 24]
state-[11] [18]
##########
Please find the dataflow of the function. We present the source and list of target indices.
GeoPackageMetadata-[1] [8, 26]
geoPackage-[5] [13, 34]
metadata-[9] [18, 23, 30, 39, 44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StringBuilder-[7] [11]
headerB-[8] [16, 27, 34, 45, 52, 60]
Format-[23] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [29, 39, 74]
System-[32] [42]
StringTokenizer-[49] [53]
classpath-[40] [55]
pathSep-[30] [57]
st-[50] [67, 77]
path-[75] [75, 88]
file-[61] [83, 95]
File-[60] [86]
##########
Please find the dataflow of the function. We present the source and list of target indices.
U-[3] [11, 17, 30, 47, 62, 77]
List-[7] [15, 26, 28, 43, 60]
list-[19] [38]
partitionSize-[22] [40]
Batch-[9] [45, 75]
partitions-[32] [66]
split-[49] [69, 86]
partition-[64] [80]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 8, 11, 24, 26, 132]
loginJson-[28] [37, 46, 89]
username-[9] [43]
password-[12] [52]
response-[16] [55, 95, 122, 128, 145, 150, 159]
url-[6] [65]
Response-[15] [101]
##########
Please find the dataflow of the function. We present the source and list of target indices.
boolean-[1] [8]
profileName-[5] [25, 45]
logger-[32] [39]
result-[9] [48, 66]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[4] [7]
oldSize-[5] [21, 44]
newSize-[8] [27, 50]
lowWaterSizeThreshold-[23] [29]
signalable-[13] [33, 56]
highWaterSizeThreshold-[46] [52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
reset-[6] [17, 19]
start-[2] [23]
running-[12] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4, 7, 10]
objectNode-[15] [23, 32, 41, 50, 59, 69]
resource-[11] [47]
verb-[8] [56]
namespace-[5] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [12, 133, 199]
String-[17] [21, 143, 262, 339, 345]
map-[6] [23, 46, 136, 202]
className-[18] [32, 58, 69]
targetType-[9] [39, 63, 101]
target-[13] [44, 90, 95, 116, 127, 377, 394]
cnfex-[76] [83]
jsonParser-[54] [97]
Map-[5] [129, 286, 298, 309, 355, 375]
key-[134] [146, 206]
classMetadataName-[27] [154, 166]
if-[152] [160, 247, 289]
cd-[106] [177]
keyName-[162] [181, 382]
targetIsMap-[125] [189, 370]
pd-[175] [191, 212, 218, 227, 233, 322, 328, 396]
Class-[8] [209, 224, 319]
value-[200] [242, 249, 267, 274, 284, 304, 311, 350, 357, 384, 398]
componentType-[225] [256, 260, 276, 343, 361]
List-[251] [272]
propertyType-[210] [296, 313]
map2bean-[2] [306]
else-[281] [317, 388]
keyType-[337] [359]
ignore-[405] [408]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[8] [11]
int-[3] [14]
lat-[9] [37]
lon-[12] [39]
pp-[28] [51, 57]
result-[17] [63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
k1-[7] [21]
v1-[11] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
TextEditor-[1] [4, 20, 24]
text-[5] [14]
HTMLToken-[10] [31]
tokens-[12] [34]
token-[32] [40, 48]
value-[38] [56, 58, 72, 74, 88, 90, 104, 106, 125]
CHAR_PROTECTOR-[64] [80, 96, 112]
newText-[21] [121, 130]
##########
Please find the dataflow of the function. We present the source and list of target indices.
flags-[10] [19, 49, 71, 105, 118, 127, 136, 203, 231, 275, 310, 336, 362]
node-[4] [36, 59, 77, 93, 150, 220, 245, 290, 356]
name-[34] [44, 57, 69]
DapDataset-[87] [91]
printXMLAttribute-[65] [95, 108, 121, 130, 192, 212, 265, 300, 326]
dataset-[88] [99, 112]
DapDimension-[144] [148, 161]
orig-[145] [154, 170, 181]
ce-[7] [166]
actual-[162] [175, 179, 186]
size-[184] [200]
DapVariable-[239] [243]
var-[240] [250]
basetype-[248] [258, 269, 292, 304, 330]
DapAttribute-[284] [288]
attr-[285] [294, 315]
PERLINE-[21] [364]
printer-[26] [370]
##########
Please find the dataflow of the function. We present the source and list of target indices.
keySet-[5] [12, 17, 32]
K-[3] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
descriptors-[16] [25, 117]
boolean-[36] [44]
present-[42] [53, 165]
strict-[50] [57, 111, 157]
lastSeen-[64] [68, 119, 147]
id-[102] [109]
known-[37] [113, 142]
firstPresent-[46] [115]
event-[125] [128]
LocalDateTime-[72] [149]
strictPresent-[60] [161]
presenceEvent-[87] [177, 194]
##########
Please find the dataflow of the function. We present the source and list of target indices.
shutdown-[2] [30]
eParam-[38] [47, 53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
setParam-[2] [14]
field-[5] [16]
value-[8] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 26]
String-[6] [10, 16, 20, 22, 53, 87, 89]
Map-[14] [18, 85]
newComment-[11] [34, 41, 68, 74, 123]
normalComment-[28] [63]
commentKey-[54] [66, 97, 130]
TieConstants-[56] [78]
sheetCommentMap-[24] [93, 126]
map-[91] [102, 107, 117, 132]
cellKey-[7] [121]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[8] [14]
int-[18] [21, 43]
bound-[30] [39, 108, 110, 117]
initSearch-[10] [46, 52, 65]
SearchNode-[1] [58]
search-[2] [63]
startStates-[16] [67]
maxSteps-[19] [69]
numStepsSoFar-[44] [71]
node-[59] [76, 82]
e-[95] [98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Flow-[1] [4, 33, 45]
flowParam-[5] [10, 21, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Map-[1] [10, 21]
String-[3] [12, 23, 32, 44]
final-[9] [20, 41]
ResourcePostProcessor-[5] [25, 34]
ResourcePreProcessor-[14] [46]
preProcessorsMap-[16] [50]
map-[27] [57, 81]
entry-[48] [62, 71]
##########
Please find the dataflow of the function. We present the source and list of target indices.
raf-[11] [16, 25, 44]
short-[32] [38, 63, 73, 83]
data-[35] [48, 57, 67, 77]
ioe-[92] [103]
##########
Please find the dataflow of the function. We present the source and list of target indices.
byteData-[9] [21]
bomIn-[13] [30]
bom-[28] [38, 44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ST-[1] [4, 19, 23]
prototype-[5] [25]
template-[20] [28, 37, 47]
domainObject-[8] [34]
contentInfo-[16] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [15]
Resource-[3] [17, 28, 47, 151]
path-[8] [35, 75, 146]
res-[29] [40, 50]
list-[5] [52, 156]
ret-[19] [57, 161, 180]
child-[48] [66, 113, 124, 144]
String-[7] [72]
p-[73] [79, 87, 89, 119]
if-[77] [97]
overlays-[99] [109]
VirtualFile-[106] [112]
overlay-[107] [115, 138]
VirtualFileResource-[131] [136]
vfsResource-[133] [154]
ServletResource-[62] [167]
c-[152] [171]
e-[186] [193]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [10, 14, 21]
StringBuffer-[22] [26]
buffer-[23] [30, 37, 44, 51, 67]
mimeType-[16] [41]
bytes-[8] [59]
out-[12] [63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
AtomicQueryConcept_Type-[10] [16, 46]
jcasType-[18] [25, 36, 48]
v-[5] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
WorkQueue-[1] [20]
int-[11] [25]
p-[7] [30, 37]
ws-[23] [35, 47, 57]
m-[26] [45, 59]
r-[12] [61]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[8] [11]
int-[3] [14, 29, 125, 131]
result-[17] [22, 26, 49, 66, 84, 147, 157, 168]
CoordinateAxis1D-[39] [45, 56, 73]
horizXaxis-[37] [58, 91, 122]
x_coord-[9] [63, 142]
horizYaxis-[43] [75, 97, 117]
y_coord-[12] [80, 140]
CoordinateAxis2D-[93] [99, 115, 120]
g2d-[105] [109, 136]
result2-[128] [144, 152, 162]
##########
Please find the dataflow of the function. We present the source and list of target indices.
children-[8] [21, 33]
child-[19] [24]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [10]
String-[3] [12]
stationKeys-[26] [32, 44]
keys-[14] [47, 60]
key-[42] [52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [10, 14]
type-[12] [23]
data-[15] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[13] [19, 41, 47, 50, 86, 99, 127, 132]
v2-[8] [25, 33, 120]
index-[5] [52, 61, 73, 134]
chunk-[71] [88, 101, 107]
data-[44] [96, 141]
Array-[1] [116]
##########
Please find the dataflow of the function. We present the source and list of target indices.
FunctionProperties-[2] [13]
e-[20] [24]
properties-[6] [26, 43, 60, 77, 94, 111, 128, 149]
e-[32] [32, 47, 54, 58]
props-[10] [35, 69, 103, 137, 159]
int-[19] [53, 87, 121]
e-[66] [66, 81, 88, 92]
e-[100] [100, 115, 122, 126]
e-[134] [134, 153]
##########
Please find the dataflow of the function. We present the source and list of target indices.
url-[6] [14]
Properties-[2] [20]
getProperties-[3] [23]
is-[12] [25, 28]
properties-[21] [35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 17, 26]
String-[14] [20, 22, 32, 89, 127, 153, 194, 205]
int-[10] [27, 62, 117, 143, 181]
fullName-[15] [35, 41]
configBuildRef-[7] [54]
startRowIndex-[11] [65]
i-[63] [67]
sheet-[52] [69, 82]
i-[75] [75, 86]
row-[80] [94, 254]
fname-[90] [100, 106, 120, 130, 198, 208]
searchName-[33] [110, 124, 136, 212, 218]
sindex-[118] [134, 202, 247]
snum-[128] [146, 165, 167, 189, 214]
sufindex-[144] [160, 173]
suffix-[154] [176, 216, 222]
steps-[28] [192]
increaseNum-[183] [220]
changeMap-[24] [227, 237]
realFullName-[196] [231, 241]
changeName-[206] [243, 256]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 12, 16, 23]
int-[9] [24, 61, 84]
cell-[14] [32, 112, 121]
formula-[30] [47, 129]
wbWrapper-[6] [49]
sheetIndex-[10] [55]
k-[62] [66]
ptgs-[41] [68, 79]
k-[72] [72, 81]
ptg-[77] [91]
areaInt-[85] [96, 103]
lastStaticRow-[25] [105]
watchList-[21] [107]
TieConstants-[125] [131]
##########
Please find the dataflow of the function. We present the source and list of target indices.
INDArray-[6] [9]
other-[7] [20]
result-[10] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [23, 31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
SchedulerSupport-[5] [7]
T-[14] [18, 24, 47]
singleSource-[26] [34, 50]
##########
Please find the dataflow of the function. We present the source and list of target indices.
callBack-[12] [20, 45, 57]
requestHandler-[5] [24, 41, 61, 86]
signed-[18] [38, 51]
String-[17] [54]
correctTime-[55] [70, 74, 98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cls-[5] [23, 36, 53]
map-[15] [27, 42, 55, 59]
HashMap-[14] [30, 45]
values-[19] [32, 49]
put-[2] [51, 61]
attr-[8] [63]
val-[11] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
rowList-[5] [13]
jtable-[25] [35, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
debugFolder-[22] [33, 40, 53, 90]
fileName-[58] [64, 69]
fileName-[82] [80]
File-[11] [84, 88]
fileName-[80] [92]
file-[85] [101, 119]
bytes-[8] [103]
log-[47] [113]
ioex-[110] [121]
##########
Please find the dataflow of the function. We present the source and list of target indices.
inputRead-[19] [28]
write-[2] [35]
os-[5] [37, 47]
requestBodyWriter-[12] [43]
##########
Please find the dataflow of the function. We present the source and list of target indices.
clazz-[11] [16, 21, 37, 97]
classLoader-[8] [30, 35, 60, 67, 79, 95, 115, 117]
URL-[2] [47, 90, 130]
if-[28] [65]
final-[44] [72, 89]
URLClassLoader-[69] [73, 77]
urlClassLoader-[74] [82]
urls-[49] [107, 125]
url-[102] [111]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [5, 10]
copyOf-[8] [19]
original-[13] [21, 23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [5]
string-[6] [17, 53]
final-[4] [20]
StringBuilder-[21] [25]
sb-[22] [36, 49, 63, 77]
prefix-[31] [40]
suffix-[58] [67]
##########
Please find the dataflow of the function. We present the source and list of target indices.
serverExchange-[5] [19, 34, 72, 84]
connection-[8] [28]
context-[32] [45, 58]
NANOSECONDS-[51] [64]
allowed-[11] [69]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[8] [16, 48, 70, 80, 103]
FilenameFilter-[17] [21]
File-[9] [30, 49, 64, 104, 108]
dir-[10] [31, 55]
name-[34] [38]
filter-[18] [59]
markers-[50] [67]
String-[33] [71, 81]
marker-[65] [74, 110, 134]
markerName-[84] [90]
HUMBLE_TEMP_EXTENSION-[42] [96]
libName-[82] [116]
lib-[105] [122, 128]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[13] [20, 46]
maxBytes-[8] [24, 43]
length-[29] [37, 189]
start-[14] [41, 51]
last-[21] [49, 234]
int-[7] [53, 58, 81, 90, 94, 102, 106, 117, 149, 181]
bytesAvailable-[55] [68, 78, 112]
filePosition-[63] [75, 86, 97]
dataEnd-[61] [84, 173]
Math-[33] [108, 183]
needToScan-[47] [114]
match-[5] [120, 152, 196]
bufStart-[91] [126]
scanBytes-[103] [128, 160, 178, 204, 227]
pos-[118] [133, 142, 194, 209, 218]
seek-[73] [138, 214, 232]
bufferStart-[99] [140, 216]
needToScan-[160] [158]
needToScan-[162] [158]
matchLen-[150] [162, 168, 175, 229]
needToScan-[158, 225] [166, 191]
readBuffer-[171] [171]
buffer-[124] [187, 200]
needToScan-[227, 229] [225]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[7] [11, 21]
UnicastSubject-[9] [19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [9]
path-[6] [13]
stringPath-[11] [20, 26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
CtorDescriptor-[1] [14]
Class-[5] [20]
ctorDescriptor-[15] [25, 82]
args-[7] [37, 70]
j-[49] [53]
arg-[55] [55, 65]
arg-[57] [55]
arg-[59] [55]
length-[55] [57]
length-[57] [57]
length-[59] [57]
j-[55] [59]
j-[57] [59]
j-[59] [59, 67, 72]
ctors-[10] [77]
##########
Please find the dataflow of the function. We present the source and list of target indices.
CommandResource-[4] [22, 27]
provider-[9] [29]
command-[12] [31, 41, 69]
capabilities-[15] [33, 71]
context-[18] [45, 75]
Optional-[2] [57, 87, 95]
commandResource-[24] [99]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Bitmap-[1] [4, 26, 29]
Matrix-[11] [15]
matrix-[12] [19, 51]
degree-[8] [23]
src-[5] [33, 39, 45]
bmp-[27] [57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [5, 9, 25, 117, 132, 154]
final-[4] [8, 24, 116, 131, 153]
cssUri-[6] [19, 37, 60, 66, 109, 120]
imageUrl-[10] [21, 30]
cleanImageUrl-[26] [28, 135, 144, 151]
idxLastSeparator-[35] [48, 64, 77]
ClasspathUriLocator-[56] [70, 84]
idxLastSeparator-[84] [82]
idxLastSeparator-[86] [82]
idxLastSeparator-[88] [82]
idxLastSeparator-[92] [82]
idxLastSeparator-[35, 82] [98, 126]
ServletContextUriLocator-[41] [139]
cssUriFolder-[118] [159]
processedImageUrl-[133] [161]
LOG-[13] [164]
computedImageLocation-[155] [170, 174]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7]
api_key-[5] [13, 15]
api_secret-[8] [19, 21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
url-[6] [26, 34]
bitmap-[10] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [11]
Cookie-[2] [16, 40, 56, 105]
request-[9] [21]
cookies-[19] [29, 49, 59]
ArrayList-[38] [45]
cookie-[57] [64, 80]
cookieName-[13] [72]
list-[42] [76, 87, 100]
##########
Please find the dataflow of the function. We present the source and list of target indices.
MetadataManager-[11] [25]
closeDatabases-[13] [28]
mm-[26] [43, 48]
openDatabases-[20] [55]
ArrayList-[16] [58]
myEnv-[66] [73, 79]
logger-[83] [97]
dbe-[94] [103]
##########
Please find the dataflow of the function. We present the source and list of target indices.
command-[6] [14]
capabilities-[9] [21, 31, 41, 51, 61, 71, 81, 91]
##########
Please find the dataflow of the function. We present the source and list of target indices.
names-[15] [28, 41]
String-[1] [35, 39]
name-[36] [36, 54, 61]
Object-[47] [47]
value-[48] [48, 65]
pageContext-[17] [50]
info-[7] [57, 75]
toStringValue-[63] [63]
##########
Please find the dataflow of the function. We present the source and list of target indices.
StringBuffer-[9] [14]
e-[6] [21]
messageBuilder-[11] [25, 32, 60]
current-[19] [36, 43, 45, 54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
objects-[24] [34]
size-[36] [36]
obj-[5] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [9, 19]
LocalDateTime-[10] [20]
PDTFactory-[13] [23]
time-[6] [27]
aLDT-[11] [31, 49]
aOld-[21] [47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [20]
DataTable-[21] [25]
parent-[11] [39]
d-[22] [48, 53]
first-[6] [57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
resourceModel-[9] [16]
HashMap-[24] [33]
String-[26] [35]
Long-[28] [37]
resource-[14] [40]
data-[30] [45, 57, 68]
long-[42] [53, 64]
Optional-[2] [76, 99]
Progress-[4] [81]
length-[43] [83]
knownPosition-[55] [85]
knownTimestamp-[66] [87]
##########
Please find the dataflow of the function. We present the source and list of target indices.
logger-[12] [19]
profileID-[32] [44]
isUninstall-[5] [52]
TransactionalAction-[77] [81]
public-[0] [85]
traceMBeanImpl-[93] [101]
profileTableName-[25] [108]
sleeContainer-[95] [119, 140, 170]
commitAction-[78] [135]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4]
line-[5] [18, 23, 36]
index-[9] [29, 40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
parent-[9] [18, 26]
that-[4] [20, 30]
isChildOf-[1] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[5] [12, 40, 50, 191, 197]
ob-[6] [22, 104, 208]
String-[10] [30, 156]
values-[14] [33, 43]
propName-[31] [47, 110, 163, 171]
Class-[19] [53, 96]
paramValue-[51] [63, 124, 138, 201]
paramType-[54] [67, 113, 132, 142, 188]
nextValue-[58] [75, 92, 140, 144]
TypeConverter-[77] [82, 88, 115, 126]
multiValue-[85] [119, 130]
setterTypes-[98] [121]
setterMethod-[152] [178, 204]
obClass-[20] [180]
upperPropertyName-[157] [186]
params-[194] [210]
e-[217] [224, 231]
catch-[221] [228]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Concept_Type-[8] [14, 55]
jcasType-[16] [23, 39, 45, 57]
FSList-[1] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
LOG-[16] [35, 50, 72, 104, 159, 184]
unparseablePaths-[28] [47]
path-[45] [57]
String-[44] [85, 89, 140]
Map-[81] [87, 136]
versionCollisions-[65] [97]
entry-[95] [110, 120, 148]
for-[79] [134, 172]
List-[91] [142]
Dependency-[93] [144, 174]
versionEntry-[146] [165, 177]
dependency-[175] [190]
##########
Please find the dataflow of the function. We present the source and list of target indices.
metadataRecord-[6] [13, 35, 46, 70]
SEP-[17] [39, 50]
CUSTOM_LOCATION-[41] [52, 68]
HiveStageCheckedException-[9] [62]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [4, 17]
varName-[5] [15, 24, 35]
aliases-[10] [20]
alias-[18] [29, 39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
inputStream-[7] [25]
type-[10] [30]
e-[41] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
EndedEvent-[4] [14, 18]
source-[9] [20]
Optional-[2] [24, 39]
stopRequest-[15] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ImageDescriptor-[2] [9]
id-[6] [22, 36, 49]
retVal-[10] [27, 32, 51, 56]
getDefault-[12] [39]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[7] [10]
Field-[1] [18, 24]
Date-[13] [20, 26]
fldName-[8] [28]
label-[11] [30]
defValue-[14] [32]
fld-[21] [42, 49]
##########
Please find the dataflow of the function. We present the source and list of target indices.
featureRow-[5] [14, 24]
style-[8] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [11]
save-[5] [21]
pojo-[9] [23, 62]
ctx-[13] [27]
ex-[44] [48, 54, 64]
SaveException-[43] [60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
map-[4] [32]
SaxEvent-[28] [39]
entry-[30] [42, 51]
String-[26] [48, 57]
event-[40] [60]
value-[58] [62, 77]
key-[49] [68, 75]
node-[7] [71]
ParseException-[11] [90]
de-[85] [92]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Restriction-[2] [14]
name-[6] [20]
value-[9] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
byte-[8] [14, 116, 122, 142]
hash-[11] [23, 147]
h-[17] [38, 51, 65, 131]
HASH_LENGTH-[25] [40, 53, 67, 133]
SALT_LENGTH-[27] [42, 55, 69, 124, 139]
int-[32] [48, 62, 160, 167]
n-[33] [78, 82, 103, 155]
r-[49] [86, 90, 107, 153]
p-[63] [94, 98, 111, 157]
N-[80] [105]
R-[88] [109]
P-[96] [113]
salt-[119] [135, 151]
password-[6] [149]
i-[168] [172]
h-[174] [174, 184]
h-[176] [174]
h-[178] [174]
length-[174] [176]
length-[176] [176]
length-[178] [176]
i-[174] [178]
i-[176] [178]
i-[178] [178, 186, 191]
result-[184] [182]
result-[186] [182]
result-[189] [182]
result-[191] [182]
result-[196] [182]
result-[198] [182]
##########
Please find the dataflow of the function. We present the source and list of target indices.
key-[7] [16, 25, 29, 41]
final-[9] [32, 50]
String-[35] [51]
words-[37] [54]
singleValue-[11] [72, 88]
word-[52] [74, 90]
apiVersion-[65] [81, 102]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DetailedCookieMatcher-[1] [15]
securedMatcher-[10] [25]
##########
Please find the dataflow of the function. We present the source and list of target indices.
LiveFile-[1] [4]
current-[5] [15, 35]
scanInternal-[13] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [8]
database-[5] [14]
sql-[9] [19]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[6] [10]
final-[9] [13, 17]
Class-[14] [18]
convertToCollection-[7] [25]
value-[11] [27]
destinationType-[15] [29]
componentType-[19] [31]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Point2D_F64-[7] [16, 22]
points-[9] [24, 41, 56]
i-[35] [39]
i-[47] [47, 53, 60]
array-[19] [51, 76, 78]
AndrewMonotoneConvexHull_F64-[64] [68]
andrew-[65] [72]
hull-[12] [82]
##########
Please find the dataflow of the function. We present the source and list of target indices.
eventModel-[6] [15, 32]
player-[9] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [10, 39, 46]
newValue-[6] [14, 22]
cacheUpdatePeriodListeners-[30] [43]
PropertyChangeEvent-[47] [51]
getCacheUpdatePeriod-[18] [57]
newValueAsPrimitive-[12] [61]
listener-[41] [64]
event-[48] [68]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Disposable-[3] [8]
get-[4] [13]
d-[9] [19, 35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
loader-[21] [35, 59, 79]
String-[11] [45]
MapreduceUtils-[23] [51]
final-[19] [72]
URLClassLoader-[37] [73, 77]
addJarsToJob-[3] [81]
conf-[6] [83]
allowMultiple-[9] [85]
urlClassLoader-[74] [87]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[5] [8]
className-[6] [18, 38]
CtClass-[2] [31]
interfaces-[11] [43, 47, 62]
classPool-[34] [58]
clazz-[54] [68]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Properties-[2] [5, 23]
properties-[6] [16, 20, 34, 56, 67]
args-[11] [29]
i-[39] [43]
args-[45] [45, 58]
args-[47] [45]
args-[49] [45]
length-[45] [47]
length-[47] [47]
length-[49] [47]
i-[45] [49]
i-[47] [49]
i-[49] [49, 60]
##########
Please find the dataflow of the function. We present the source and list of target indices.
statusCode-[13] [21, 38, 55, 72, 76, 86, 100]
request-[10] [29, 46, 63, 84]
message-[16] [31, 48, 65, 88, 104]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[11] [17]
Override-[8] [51]
public-[9] [52]
OClass-[43] [53, 64, 337]
OrientBaseGraph-[45] [57]
OType-[74] [77, 166]
String-[61] [81, 86, 97]
final-[56] [96, 314, 322, 336, 354]
elementClass-[27] [102, 446]
p-[113] [120, 133, 153, 170, 191, 204, 217, 230, 243, 276, 295]
indexType-[62] [131, 423]
keyType-[75] [164, 371, 389]
Locale-[145] [182]
className-[82] [202, 306, 310, 344, 385, 417]
collate-[87] [228, 394, 402]
metadata-[92] [261, 265, 272, 435]
ODocument-[91] [268]
ancestorClassName-[98] [312, 350]
db-[316] [326, 405]
schema-[324] [340, 346]
cls-[338] [358, 427]
property-[356] [367, 373]
OPropertyIndexDefinition-[379] [383]
key-[362] [387, 421, 454]
indexDefinition-[380] [398, 425]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[0] [5]
dd-[17] [24, 33, 41, 49, 58, 64]
subKeys-[19] [26]
total_nbits-[33] [31]
total_nbits-[35] [31]
countBits-[1] [35]
total_nbytesCDM-[41] [39]
total_nbytesCDM-[43] [39]
total_nbytesCDM-[10] [43]
total_nbits-[58] [56]
total_nbits-[60] [56]
total_nbytesCDM-[64] [62]
total_nbytesCDM-[66] [62]
total_nbits-[89] [79]
total_nbits-[56] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [10, 28]
List-[11] [29]
Check-[13] [31]
list-[15] [52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Builder-[2] [12]
OcspFetcher-[4] [19, 27]
public-[0] [26]
properties-[31] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
poll-[2] [18]
timeout-[5] [20]
unit-[8] [22]
e-[29] [44, 50, 71, 77]
StageException-[11] [65]
Errors-[36] [67]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [9]
index-[6] [16]
obj-[10] [24]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[6] [9]
fromString-[4] [19]
content-[7] [21]
charset-[10] [23, 32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
BillingAgreementRecipe-[1] [8]
recipe-[9] [16, 28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
doc-[7] [11, 26, 69, 112, 155, 198]
LOGGER-[40] [47, 83, 90, 126, 133, 169, 176, 212, 219]
ex-[37] [53, 59, 80, 96, 102, 123, 139, 145, 166, 182, 188, 209, 225, 231]
Exception-[36] [79, 122, 165, 208]
##########
Please find the dataflow of the function. We present the source and list of target indices.
name-[9] [14, 50]
final-[7] [25]
String-[8] [26]
channels-[41] [46]
id-[27] [59]
##########
Please find the dataflow of the function. We present the source and list of target indices.
type-[5] [15]
name-[8] [17, 34, 78, 185]
String-[7] [22, 33, 101, 128, 137, 170]
Object-[1] [24, 30, 105, 113, 130, 139]
cookies-[40] [55, 65, 147, 157, 167]
Cookie-[37] [62, 144, 164]
cookie-[2] [63, 70, 83, 165, 173, 197]
Function-[20] [99]
Collection-[103] [111]
context-[42] [120]
request-[118] [122, 149]
key-[171] [181, 195]
map-[132] [191, 209, 218]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Element-[6] [20]
lockentry-[7] [25, 49]
appendChild-[23] [30]
locktype-[21] [32]
LockEntry-[1] [37, 47]
result-[38] [44, 75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
boolean-[1] [13]
tsr-[7] [16]
inTx-[14] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ShutdownLogManager-[28] [32]
LogManager-[22] [34]
shutdown-[2] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [11, 22]
given-[6] [17]
name-[9] [25]
value-[12] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [16]
RecordInfo-[3] [18, 76, 80]
int-[11] [29, 46, 69]
bytes-[9] [36, 41, 64, 72, 98, 118]
i-[47] [51]
numberOfElements-[30] [53]
i-[55] [55]
fieldInfo-[77] [84, 90, 114, 128]
fieldStart-[70] [88, 122]
dataType-[60] [94, 100]
serializerVersion-[12] [109]
retList-[20] [124, 133]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ResizeWidthAnimation-[15] [19]
mContainer-[9] [21, 56]
public-[0] [32]
int-[4] [36]
width-[37] [42]
anim-[16] [49, 60]
duration-[5] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
chsubs-[12] [22]
filename-[7] [27]
ch-[20] [31, 43, 48]
int-[1] [39, 58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [6]
final-[5] [9, 14]
ChannelUri-[15] [18]
channel-[7] [22]
channelUri-[16] [25, 42]
sessionId-[11] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ca-[11] [18]
axisName-[5] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [10]
filename-[11] [18, 26, 45]
console-[8] [30]
content-[5] [34, 54]
outgoing-[41] [50, 67]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[3] [22, 30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
FileInputStream-[19] [15]
FileInputStream-[21] [15]
filename-[8] [21]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DesignDocument-[9] [19]
documents-[11] [22]
dd-[20] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
getId-[4] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
MessageType-[1] [4, 7, 101]
configuration-[11] [16, 35]
List-[27] [45]
Type-[47] [54, 61]
requestedSchema-[5] [64, 98, 103, 114]
listColumns-[31] [74]
t-[62] [78]
requestedTypes-[49] [85, 109]
fileSchema-[8] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 15, 19]
int-[16] [20]
dest-[7] [28]
data-[13] [30]
off-[17] [32]
len-[21] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Class-[2] [7, 26, 77, 87]
c-[8] [21, 31, 66, 68]
ifaces-[29] [29, 47, 59]
int-[40] [40]
n-[51] [41, 51, 61]
n-[41, 51] [45]
uniqueIfaces-[55] [55, 82, 89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Search_Type-[10] [16, 46]
jcasType-[18] [25, 36, 48]
v-[5] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
InvalidDataException-[11] [29]
frame-[8] [41]
currentContinuousFrame-[15] [54, 69, 83, 106, 133, 148, 162, 181, 204]
FramedataImpl1-[67] [81, 146, 160]
webSocketImpl-[5] [92, 100, 123, 171, 179, 197]
e-[118] [125, 192, 199]
Opcode-[60] [139]
getPayloadFromByteBufferList-[74] [153]
RuntimeException-[117] [191]
logRuntimeException-[121] [195]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 17]
isLineColor-[19] [31]
colorFill-[23] [34, 49, 87]
ctSpPr-[11] [36, 51]
ex-[62] [75]
XColor-[2] [79]
themeTable-[15] [85, 108]
xcolor-[81] [92, 98]
index-[7] [106]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5]
otp-[6] [12, 18, 39, 46]
len-[37] [52]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 109]
s-[6] [11, 26, 48, 61]
char-[18] [24, 58]
int-[34] [41]
i-[42] [46]
i-[54] [54, 65]
c-[59] [71, 77, 84, 90, 103]
bo-[21] [97, 111]
count-[99] [99]
count-[35, 99] [115]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[2] [5, 12]
ticks-[6] [17, 21]
oldSeconds-[13] [24]
seconds-[9] [30]
MILLIS_PER_SECOND-[26] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8]
cv-[15] [21]
visitAnnotation-[2] [23]
descriptor-[6] [25]
visible-[10] [27]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [6]
final-[5] [12, 23, 50, 63, 69, 75, 101, 120, 169]
MessageDigest-[13] [16]
text-[7] [29]
md-[14] [37, 56]
utf8Bytes-[27] [41, 45]
byte-[24] [51]
int-[64] [70, 102]
StringBuilder-[76] [80]
length-[71] [82, 105, 109]
md5hash-[54] [92]
radix-[65] [97, 145]
result-[77] [107, 149, 160]
zeroBeginLen-[103] [115, 129]
char-[121] [127]
zeroBegin-[124] [137, 155]
e-[173] [180]
##########
Please find the dataflow of the function. We present the source and list of target indices.
detachSbbEntity-[2] [20]
sbbEntityId-[5] [22, 60]
detached-[16] [27]
acReferencesHandler-[29] [39]
logger-[47] [54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
contentId-[8] [20, 33]
name-[15] [26]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 14, 20]
char-[9] [15]
DecoraTag-[21] [36]
decoraTags-[24] [39, 138]
int-[29] [42, 82]
decoraTag-[37] [45, 76, 85, 100, 113, 119, 136]
out-[6] [63, 107, 132, 143]
decoratorContent-[12] [67, 111, 147, 151]
ndx-[51] [69, 74, 149, 155]
decoratorLen-[55] [71]
regionLen-[83] [93]
pageContent-[18] [134]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 14]
int-[19] [24]
index-[25] [27, 38, 54, 65, 77, 88, 99, 111]
path-[6] [29, 50, 56, 90, 128, 137]
err-[9] [44, 122]
className-[15] [71, 105]
begin-[20] [75, 109, 141]
WEB_INF_TAGS-[60] [79]
META_INF_TAGS-[94] [113]
className-[135] [133]
className-[137] [133]
className-[139] [133]
className-[141] [133]
className-[133] [146]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [8, 42, 136, 178]
int-[9] [13, 21]
size-[26] [30, 36]
i-[22] [34]
i-[38] [38, 50]
entries-[28] [46]
entry-[44] [55, 61, 70, 78]
leadershipTermId-[6] [57, 59, 87]
entryIndex-[10] [63, 65, 72, 109]
index-[14] [68, 100, 141]
long-[5] [137, 144]
SIZE_OF_INT-[128] [155]
byteBuffer-[124] [161]
filePosition-[138] [163]
ClusterException-[105] [169]
ex-[180] [187]
##########
Please find the dataflow of the function. We present the source and list of target indices.
featureRow-[5] [14, 24]
icon-[8] [32]
##########
Please find the dataflow of the function. We present the source and list of target indices.
MethodIntf-[4] [10]
methodIntf-[5] [15, 101, 127, 148]
assert-[14] [21]
method-[8] [22, 34, 242]
Method-[7] [28]
classMethod-[30] [46, 54, 64]
String-[37] [51, 61]
final-[50] [60]
ArrayKey-[74] [79]
methodParams-[40] [87]
get-[93] [95, 97, 121, 123, 144, 162, 164, 166, 190, 208]
methodName-[52] [104, 130, 173, 194]
methodParamsKey-[76] [107, 176]
attr-[91] [112, 119, 135, 142, 153, 160, 181, 188, 199, 206, 217]
className-[62] [170, 212]
defaultMethodIntf-[11] [226, 240]
isMethodLevel-[2] [238]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Response-[1] [9]
call-[13] [17, 21, 44, 59, 75]
e-[29] [38]
IllegalStateException-[34] [51, 68]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[7] [11, 15, 19]
ID-[2] [12]
entityType-[9] [35]
id-[13] [37]
name-[17] [39]
delta-[21] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
LoginManager-[3] [25, 30, 51]
loginType-[7] [38, 53, 62]
loginManager-[32] [43, 48, 64, 69]
configs-[15] [55]
CACHED_INSTANCES-[34] [58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
DeclarationFilter-[1] [4, 10, 16, 23]
final-[9] [15]
f-[5] [19]
public-[0] [28]
f1-[11] [37]
d-[33] [41, 48]
f2-[17] [44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
featureTable-[5] [17, 42, 77]
featureId-[8] [19, 44, 79]
icons-[11] [24, 31, 46, 64]
icon-[62] [81, 87]
##########
Please find the dataflow of the function. We present the source and list of target indices.
unit-[6] [17, 24, 57, 75, 96, 119, 132, 171, 186, 236, 258]
final-[4] [20, 33, 49, 53, 128, 206, 226]
deploymentRoot-[22] [37, 41, 159]
Attachments-[28] [61, 140]
module-[55] [68, 105]
classLoader-[51] [73, 84, 103, 223, 242]
WSLogger-[9] [90, 153, 163]
ArchiveDeployment-[1] [112, 227]
Module-[54] [129]
parentModule-[130] [147, 196]
parentDep-[113] [178, 234]
newDeployment-[2] [182, 232]
root-[35] [210, 217]
uvf-[208] [244]
dep-[228] [247, 263]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[2] [15]
Class-[4] [17, 28]
SASLMechanism-[8] [21, 32]
answer-[23] [45, 60]
mechanismsPreference-[40] [54]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[12] [25, 48]
Presence-[7] [27, 61, 63]
presenceMap-[15] [31]
user-[13] [35, 74]
resources-[29] [40, 51]
packetUnavailable-[8] [58, 70, 85]
resource-[49] [78]
##########
Please find the dataflow of the function. We present the source and list of target indices.
WebSocket-[28] [37]
selector-[64] [71]
selectorthread-[60] [77]
timeout-[5] [81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
E-[3] [15, 20]
excClass-[17] [24, 37]
t-[11] [28, 41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
boolean-[5] [8]
shareReferences-[9] [14, 32]
prettyPrint-[6] [16, 30]
createJsonConfiguration-[3] [28]
##########
Please find the dataflow of the function. We present the source and list of target indices.
modelTransformers-[14] [19, 34]
Transformer-[5] [24]
WroModel-[7] [26]
modelTransformer-[9] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ctChart-[7] [13]
ChartType-[2] [21, 24]
chartType-[22] [33, 42]
plotArea-[11] [37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 30, 47]
country-[6] [12, 18, 23, 37]
iso2Code-[31] [42, 57, 59]
StringUtils-[14] [50]
Locale-[8] [55]
language-[9] [64]
name-[48] [70, 75]
##########
Please find the dataflow of the function. We present the source and list of target indices.
configuration-[8] [18]
baseName-[5] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Passage_Type-[8] [14, 45]
jcasType-[16] [23, 35, 47]
##########
Please find the dataflow of the function. We present the source and list of target indices.
any-[5] [16, 31]
String-[12] [21]
value-[23] [33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
INDArray-[2] [5, 44, 89, 100]
int-[8] [11, 14, 17, 20, 23]
col-[6] [29, 56, 64, 93]
h-[21] [71, 138]
w-[24] [73, 143]
Col2Im-[77] [80]
output-[45] [104]
sy-[9] [116, 118]
sx-[12] [121, 123]
ph-[15] [146, 148]
pw-[18] [151, 153]
Nd4j-[47] [165]
col2Im-[78] [173, 177]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [11, 16, 24]
inBufferPos-[18] [33, 39]
currentBuffer-[31] [35, 66, 73, 89, 93]
n-[25] [44, 52, 56, 60, 83]
readCount-[52] [50]
inBufferPos-[56] [54]
count-[60] [58]
inBufferPos-[54] [64, 78, 91, 97]
needNewBuffer-[71] [71]
in-[27] [85]
readCount-[50] [102]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[6] [9, 12, 23, 31, 38, 71, 74, 121, 127, 207, 215, 230, 238]
float-[1] [18, 55, 133, 139, 258, 266, 274]
isword-[7] [28, 34]
nword-[10] [41]
ipktyp-[24] [47, 79, 96, 185, 302]
data-[21] [52, 64, 68, 190, 204, 294, 322]
lendat-[39] [57, 158, 160, 177, 179, 196, 300]
iiword-[32] [62, 147, 152, 154, 166, 171, 173, 194, 298]
iiw-[72] [84, 101, 112, 129, 156, 162, 245]
irw-[75] [88, 105, 116, 141, 175, 181, 281]
DM_RINT-[26] [145]
iarray-[124] [149, 198, 210, 218, 233, 252]
DM_RFLT-[60] [164]
rarray-[136] [168, 200, 261, 269, 288]
MDGRB2-[98] [187]
misflg-[216] [226]
kx-[239] [250, 316]
difmin-[275] [286, 314]
kxky-[231] [304]
nbits-[208] [306]
ref-[259] [308]
scale-[267] [310]
miss-[224] [312]
decimalScale-[13] [318]
##########
Please find the dataflow of the function. We present the source and list of target indices.
K-[3] [12, 22, 29, 52]
V-[5] [14, 20, 61]
Map-[10] [18]
source-[16] [33, 64]
i-[31] [45, 55]
key-[53] [53, 68, 77]
value-[62] [62, 75]
target-[24] [71]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[1] [6, 11, 79]
enabledCipherSuites-[4] [19, 45, 61, 82, 95]
OptionHelper-[26] [35]
defaultCipherSuites-[14] [51, 53]
supportedCipherSuites-[9] [65]
getIncludedCipherSuites-[30] [67]
getExcludedCipherSuites-[39] [71]
cipherSuite-[80] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Class-[1] [5, 20]
altPath-[24] [34, 42, 56]
path-[26] [46, 78]
newType-[21] [50, 61, 67, 72, 83, 89]
mappings-[11] [52, 74]
target-[17] [93]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Utils-[14] [23]
roll-[7] [36]
newDataWindowEndTimeMillis-[10] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[2] [7, 12]
it-[16] [27, 39]
s-[23] [34, 47]
Status-[22] [37]
effLevel-[13] [45, 55, 62]
getEffectiveLevel-[3] [49]
result-[8] [57, 60, 67]
##########
Please find the dataflow of the function. We present the source and list of target indices.
authToken-[8] [10, 19, 24, 34, 84, 90, 106]
servletRequest-[14] [28, 98]
JsonResult-[1] [47]
log-[39] [64]
T-[7] [75]
UserSession-[73] [80]
userSession-[77] [94]
##########
Please find the dataflow of the function. We present the source and list of target indices.
float-[1] [23, 27, 36, 40, 44, 53, 57]
mBitmapDisplayed-[9] [29, 46]
max-[58] [62, 72]
fw-[24] [64]
fh-[41] [66]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ResizeWidthAnimation-[15] [19]
mContainer-[9] [21, 56]
public-[0] [32]
int-[4] [36]
width-[37] [42]
anim-[16] [49, 60]
duration-[5] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
trace-[15] [20, 30]
beforeCommitActions-[8] [28, 33]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[0] [9]
a-[4] [18, 29, 43]
pos-[10] [25, 35, 52, 64]
dumprarcs-[1] [27]
s-[7] [33, 45]
sb-[13] [37, 47, 57]
pos-[71] [71]
pos-[10, 71] [76]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[7] [13]
##########
Please find the dataflow of the function. We present the source and list of target indices.
index-[7] [12, 50]
rank-[16] [26, 39, 41]
int-[4] [33]
prefixrank-[34] [58, 67]
hasvlen-[37] [63]
current-[54] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
wd-[8] [18, 48, 59]
mv-[16] [37, 53, 71, 78, 87]
name-[46] [63]
DESC_VOID-[30] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
args-[8] [15, 68, 90]
System-[22] [41, 50, 98]
Module-[58] [62]
module-[59] [85]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [8]
propName-[5] [13]
prop-[9] [18, 27]
Long-[1] [23]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Packet-[1] [6]
done-[14] [14]
packet-[7] [17, 54]
queue-[19] [19, 33, 37]
synchronized-[31] [31]
InterruptedException-[47] [47]
ie-[48] [48]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[1] [12, 15, 19, 26, 30, 42, 62, 71, 88]
segmentSize-[20] [33]
srcPos-[5] [36, 65, 91]
destPos-[13] [45, 132]
length-[16] [49, 80]
byte-[7] [54]
log2OfSegmentSize-[24] [67]
remainingBytesInSegment-[27] [78]
orderedCopy-[2] [83]
segment-[57] [85]
bitmask-[38] [93]
data-[10] [96]
dataPosition-[43] [98, 130]
bytesToCopyFromSegment-[72] [100]
dataPosition-[130] [103]
dataPosition-[132] [103]
##########
Please find the dataflow of the function. We present the source and list of target indices.
selectNodes-[3] [13]
path-[6] [15]
node-[9] [17]
##########
Please find the dataflow of the function. We present the source and list of target indices.
newProperties-[5] [21, 43, 57, 73, 113, 118]
ConfigProperties-[4] [29, 68]
configProperty-[32] [47, 61]
entityProperty-[71] [83, 98]
InvalidConfigurationException-[8] [94]
configProperties-[34] [116]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[4] [7]
stnIdVName-[5] [14, 16, 31]
stnDescVName-[8] [20, 22]
stationVar-[25] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
activityContextInterface-[5] [21]
IllegalStateException-[33] [55]
concreteActivityContextInterfaceClass-[11] [67, 77]
methodTest-[100] [104, 119]
methodToAdd-[17] [110, 137]
sbbConcreteClass-[112] [115]
logger-[124] [131]
DeploymentException-[14] [152]
e-[147] [154, 160]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[6] [18, 21, 100]
Set-[36] [42]
Encoding-[38] [44, 50]
descriptor-[4] [59]
valueCount-[7] [61]
compressionCodecName-[10] [63]
state-[66] [68]
dictionaryPage-[13] [76, 83]
bytes-[16] [104, 149]
compressedTotalPageSize-[22] [110, 124]
uncompressedLength-[116] [114]
uncompressedLength-[118] [114]
uncompressedTotalPageSize-[19] [116]
headersSize-[102] [118, 126]
compressedLength-[124] [122]
compressedLength-[126] [122]
LOG-[87] [128]
out-[93] [134, 143, 153]
dataEncodings-[52] [160, 197]
rlEncodings-[40] [165, 183]
encodingStatsBuilder-[156] [172]
currentEncodings-[179] [186, 193]
dlEncodings-[46] [190]
totalStats-[28] [202]
columnIndexBuilder-[31] [206, 208]
offsetIndexBuilder-[34] [212, 214]
##########
Please find the dataflow of the function. We present the source and list of target indices.
AObjectCatalog-[11] [23, 35]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[8] [11, 14, 17, 20, 23]
Calendar-[5] [30, 61, 74]
cal-[6] [34, 65, 78, 97]
DateTime-[37] [41]
year-[9] [43]
monthOfYear-[12] [45]
dayOfMonth-[15] [47]
hourOfDay-[18] [49]
minuteOfHour-[21] [51]
secondOfMinute-[24] [53]
base-[28] [55]
dt-[38] [68, 70, 82, 84, 99]
CalendarDate-[2] [95]
##########
Please find the dataflow of the function. We present the source and list of target indices.
res-[9] [19, 61]
contents-[6] [32]
out-[17] [42]
IOException-[12] [48]
e-[49] [58, 71]
HttpServletResponse-[8] [65]
##########
Please find the dataflow of the function. We present the source and list of target indices.
addViewInterceptor-[2] [23]
method-[14] [25]
interceptorFactory-[5] [27]
priority-[8] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
SearchResult_Type-[10] [16, 52, 90]
jcasType-[18] [25, 36, 42, 54, 68, 74, 80, 92]
i-[5] [60, 98]
CandidateAnswerVariant-[1] [65]
addr-[48] [86]
##########
Please find the dataflow of the function. We present the source and list of target indices.
pageSize-[7] [12, 27, 33, 48, 59, 69]
PAGE_MIN_SIZE-[14] [23]
ConfigurationException-[19] [40, 65]
PAGE_MAX_SIZE-[35] [44]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Integer-[9] [16, 38]
i-[39] [56, 88, 131, 154]
Stack255-[59] [63]
agent-[45] [66, 78, 156, 167]
agentExecutionStack-[60] [80, 104, 112, 133, 158]
toRemove-[11] [84, 140, 176]
idle-[24] [94, 181]
Object-[98] [102]
if-[73] [122]
node-[99] [124, 138, 147, 163]
Plan-[126] [136]
Goal-[149] [161]
##########
Please find the dataflow of the function. We present the source and list of target indices.
cs-[9] [14, 24, 34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
double-[5] [8, 11, 14]
LatLonPointImpl-[2] [17]
findPoint-[3] [22]
lat1-[6] [26]
lon1-[9] [28]
az-[12] [30]
dist-[15] [32]
result-[18] [34]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ByteString-[3] [18, 24]
mat-[8] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[4] [10, 55, 70]
iStorage-[6] [14]
String-[11] [28, 38, 42, 71, 108, 134]
e-[46] [59, 74, 117]
pos-[57] [82]
storageURL-[12] [89]
dbName-[72] [93]
poolToClose-[30] [99, 103, 113, 128, 137]
pool-[135] [141]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Range-[4] [7, 15]
section-[2] [17, 26, 33, 44, 46]
r1-[5] [30]
r2-[8] [37]
CoordinateAxis2D-[1] [42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
out-[6] [26, 33, 40, 54]
QUOTE_BYTES-[37] [58]
##########
Please find the dataflow of the function. We present the source and list of target indices.
LearningFailureException-[6] [19, 191]
inputExamples-[10] [48, 102]
example-[46] [64, 100, 128, 165]
String-[60] [79, 107, 141]
allProperties-[62] [82]
inputProperties-[74] [85]
inputPropertiesSet-[42] [92]
State-[45] [99]
Set-[58] [105]
errorMessage-[126] [124]
errorMessage-[128] [124]
errorMessage-[130] [124]
errorMessage-[132] [124]
errorMessage-[134] [124]
inputProperty-[118] [132]
outputProperties-[89] [144]
if-[111] [148]
properties-[114] [151]
outputProperty-[142] [155, 169]
errorMessage-[163] [161]
errorMessage-[165] [161]
errorMessage-[167] [161]
errorMessage-[169] [161]
errorMessage-[171] [161]
errorMessage-[161] [184, 193]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[10] [13, 21]
i-[22] [26]
n-[14] [28]
i-[30] [30, 40]
writeDouble-[3] [34]
pa-[8] [36]
start-[11] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
FileObserver-[1] [11, 15, 19, 23, 27]
path-[6] [13, 45]
final-[4] [39, 43, 55]
String-[5] [44]
event-[41] [52]
activity-[57] [65, 70]
Override-[34] [80]
void-[36] [82]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[5] [9]
currentLength-[10] [16]
length-[12] [22, 42]
data-[20] [31]
currentLength-[33] [33, 44]
byteValue-[6] [40]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Integer-[1] [8]
device-[9] [43, 109, 134, 161, 166]
CudaEnvironment-[16] [45, 76, 111, 136]
devPtr-[61] [70, 94]
threadId-[5] [107]
logger-[101] [155]
##########
Please find the dataflow of the function. We present the source and list of target indices.
value-[11] [16, 26, 44, 52, 70, 77, 89, 96, 108, 120]
Collection-[4] [28, 39]
addGrantedAuthorityCollection-[2] [34, 60, 82]
result-[8] [36, 62, 84, 101]
Object-[10] [54, 65]
-[56] [67]
String-[79] [87]
GrantedAuthority-[6] [98, 106]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ds-[6] [17]
atype-[9] [19]
coordAxis-[13] [23, 29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
ScaledUnit-[12] [20, 24]
uu-[10] [26]
offset-[21] [29]
##########
Please find the dataflow of the function. We present the source and list of target indices.
String-[2] [5, 8, 11, 15]
str-[6] [23, 39, 52, 54, 65, 76]
oldStr-[9] [27, 69]
pos-[21] [32, 45, 58, 63]
result-[39, 41, 43, 45] [37]
result-[50] [48]
newStr-[12] [50]
result-[48] [74]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[2] [6, 47, 70]
final-[10] [14, 20, 42]
IncompleteKey-[11] [21, 27]
num-[16] [29]
allocations-[24] [37, 57]
incompleteKey-[12] [39]
Key-[45] [66]
KeyRange-[4] [86]
typedKeys-[49] [90]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9, 13, 21, 61]
File-[6] [22, 26]
directory-[7] [28]
cncFile-[23] [37, 43, 58, 69]
logger-[18] [52, 81]
isDriverActive-[3] [77]
driverTimeoutMs-[11] [79]
cncByteBuffer-[63] [83, 93]
IoUtil-[65] [89]
##########
Please find the dataflow of the function. We present the source and list of target indices.
List-[1] [10]
String-[3] [12]
result-[14] [34, 49, 53]
file-[26] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
final-[5] [9]
reader-[7] [22, 34]
writer-[11] [24, 41]
IOUtils-[18] [30, 37]
##########
Please find the dataflow of the function. We present the source and list of target indices.
v-[16] [30, 61, 75, 96, 117]
Flags-[20] [35, 39, 43, 65, 79, 101, 105]
assert-[26] [71, 92]
intocon-[49] [84, 111]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sld-[5] [14]
SldException-[8] [26]
e-[21] [30]
##########
Please find the dataflow of the function. We present the source and list of target indices.
message-[5] [20]
t-[8] [22]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Object-[1] [4]
propertyId-[5] [14, 35, 56, 77]
Integer-[19] [40, 61, 82]
location-[23] [44]
size-[65] [86]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Field-[1] [4, 42, 63]
routeFieldParam-[5] [10, 21, 33, 38, 49, 69]
##########
Please find the dataflow of the function. We present the source and list of target indices.
int-[9] [12]
imageBytes-[7] [23]
tiffImage-[17] [29]
directory-[27] [37, 43]
float-[1] [49]
rasters-[41] [52]
x-[10] [56]
y-[13] [58]
pixelValue-[50] [66]
##########
Please find the dataflow of the function. We present the source and list of target indices.
T-[3] [7, 12, 19, 29]
Vertex-[1] [17, 27]
compare-[14] [42, 44]
data-[8] [46]
v-[31] [48, 60]
match-[21] [58, 67]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Cookie-[5] [8, 27, 34]
cookie-[6] [19, 43]
cookieList-[29] [39, 50, 59]
Cookies-[2] [57]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Point3D_F64-[2] [7, 11, 24, 43]
mean-[3] [12, 17, 21, 68, 80, 92, 105]
points-[9] [46, 74, 86, 98]
x-[29] [49, 53, 70, 72]
p-[44] [51, 57]
y-[57] [55]
y-[59] [55]
y-[33] [59]
z-[68] [61]
z-[70] [61]
z-[72] [61]
z-[74] [61]
z-[76] [61]
z-[80] [61]
z-[82] [61]
z-[84] [61]
z-[86] [61]
z-[88] [61]
z-[92] [61]
z-[94] [61]
z-[96] [61]
z-[98] [61]
z-[100] [61]
z-[105] [61]
y-[55] [82, 84]
z-[37] [94, 96]
##########
Please find the dataflow of the function. We present the source and list of target indices.
reconnecting-[15] [21, 129]
shutdown-[39] [44, 55, 75]
isConnected-[32] [52, 69]
connect-[60] [60]
host-[62] [62]
port-[64] [64]
subdomain-[66] [66]
disconnect-[78] [78]
start-[85] [85]
ComponentException-[93] [93]
e-[94] [94, 107]
manager-[97] [97]
Thread-[112] [112]
InterruptedException-[122] [122]
e1-[123] [123]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Passage_Type-[10] [16, 46]
jcasType-[18] [25, 36, 48]
v-[5] [53]
##########
Please find the dataflow of the function. We present the source and list of target indices.
Set-[1] [12]
SbbID-[3] [14, 21]
result-[16] [34, 40]
componentRepository-[8] [36]
##########
Please find the dataflow of the function. We present the source and list of target indices.
contactId-[23] [37]
contact-[27] [51, 76]
model-[61] [70, 79, 96]
acl-[42] [85]
ModelAndView-[14] [90]
##########
Please find the dataflow of the function. We present the source and list of target indices.
arg-[6] [13, 51]
JspC-[37] [41]
jspc-[38] [47, 56, 78, 103, 116]
System-[20] [61, 92, 112]
Localizer-[26] [67]
je-[89] [98]
##########
Please find the dataflow of the function. We present the source and list of target indices.
enableGlobalCache-[6] [17]
asyncDatastore-[2] [31, 42]
##########
Please find the dataflow of the function. We present the source and list of target indices.
sel-[20] [30, 42]
TableRow-[1] [36]
list-[8] [38]
##########
Please find the dataflow of the function. We present the source and list of target indices.
File-[1] [5, 9, 17, 28, 37]
final-[4] [8, 42]
dir1-[6] [23]
List-[15] [26]
getParentDirs-[21] [32]
dir2-[10] [34]
parts1-[19] [50, 80, 100]
parts2-[30] [56, 89]
int-[43] [65]
i-[66] [70]
maxCommonSize-[44] [72]
i-[75] [75, 84, 93, 104]
matched-[38] [98, 115]
##########
Please find the dataflow of the function. We present the source and list of target indices.
long-[8] [14]
trackerNumber-[9] [17]
tnum-[15] [21]
tnum-[25] [25, 42]
File-[29] [34]
pathname-[6] [36]
oldDatabaseFile-[31] [48, 58, 71, 87]
catalogInitLog-[65] [81]
##########
Please find the dataflow of the function. We present the source and list of target indices.
propertyName-[9] [20, 28, 34, 45]
restoreProperties-[16] [30]
System-[24] [41]
##########
Please find the dataflow of the function. We present the source and list of target indices.
headers-[5] [11]
HttpHeaders-[4] [15]
accept-[9] [28, 31, 38]
##########
