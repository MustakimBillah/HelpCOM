id,repo,method,docstring,path,helpers,gptOutput
6621cd80cda9bd4817b10f64,tony19/logback-android,"public Map<String, String> getEffectiveConverterMap() {
    Map<String, String> effectiveMap = new HashMap<String, String>();

    // add the least specific map fist
    Map<String, String> defaultMap = getDefaultConverterMap();
    if (defaultMap != null) {
      effectiveMap.putAll(defaultMap);
    }

    // contextMap is more specific than the default map
    Context context = getContext();
    if (context != null) {
      @SuppressWarnings(""unchecked"")
      Map<String, String> contextMap = (Map<String, String>) context
          .getObject(CoreConstants.PATTERN_RULE_REGISTRY);
      if (contextMap != null) {
        effectiveMap.putAll(contextMap);
      }
    }
    return effectiveMap;
  }",Returns a map where the default converter map is merged with the map contained in the context .,logback-android/src/main/java/ch/qos/logback/core/html/HTMLLayoutBase.java,"[{'Syntax': 'getDefaultConverterMap()', 'FunctionName': 'getDefaultConverterMap', 'ArgsCount': 0, 'MethodBody': 'public  Map<String, String> getDefaultConverterMap() {\n    return converterMap;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/pattern/parser/SamplePatternLayout.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'abstract public Context getContext();', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/pattern/parser/AbstractPatternLayoutBaseTest.java'}, {'Syntax': 'context\n          .getObject(CoreConstants.PATTERN_RULE_REGISTRY)', 'FunctionName': 'getObject', 'ArgsCount': 1, 'MethodBody': 'public Object getObject(String key) {\n    return objectMap.get(key);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/ContextBase.java'}]"
6621cd81cda9bd4817b10f65,Unidata/thredds,"private ArrayDouble.D3 addStagger(ArrayDouble.D3 array, int dimIndex) {

    //ADD: assert 0<=dimIndex<=2

    int[] shape = array.getShape();
    int[] newShape = new int[3];
    System.arraycopy(shape, 0, newShape, 0, 3);

    newShape[dimIndex]++;
    int ni = newShape[0];
    int nj = newShape[1];
    int nk = newShape[2];
    ArrayDouble.D3 newArray = new ArrayDouble.D3(ni, nj, nk);
    //Index newIndex = newArray.getIndex();

    //extract 1d array to be extended
    int n = shape[dimIndex];  //length of extracted array
    double[] d = new double[n];  //tmp array to hold extracted values
    int[] eshape = new int[3];       //shape of extracted array
    int[] neweshape = new int[3];  //shape of new array slice to write into
    for (int i = 0; i < 3; i++) {
      eshape[i] = (i == dimIndex)
          ? n
          : 1;
      neweshape[i] = (i == dimIndex)
          ? n + 1
          : 1;
    }
    int[] origin = new int[3];

    try {

      //loop through the other 2 dimensions and ""extrapinterpolate"" the other
      for (int i = 0; i < ((dimIndex == 0)
          ? 1
          : ni); i++) {
        for (int j = 0; j < ((dimIndex == 1)
            ? 1
            : nj); j++) {
          for (int k = 0; k < ((dimIndex == 2)
              ? 1
              : nk); k++) {
            origin[0] = i;
            origin[1] = j;
            origin[2] = k;
            IndexIterator it = array.section(origin,
                eshape).getIndexIterator();
            for (int l = 0; l < n; l++) {
              d[l] = it.getDoubleNext();  //get the original values
            }
            double[] d2 = extrapinterpolate(d);  //compute new values
            //define slice of new array to write into
            IndexIterator newit =
                newArray.section(origin,
                    neweshape).getIndexIterator();
            for (int l = 0; l < n + 1; l++) {
              newit.setDoubleNext(d2[l]);
            }
          }
        }
      }
    } catch (InvalidRangeException e) {
      //ADD: report error?
      return null;
    }

    return newArray;
  }",Add 1 to the size of the array for the given dimension . Use linear average and interpolation to fill in the values .,cdm/src/main/java/ucar/unidata/geoloc/vertical/WRFEta.java,[]
6621cd81cda9bd4817b10f66,streamsets/datacollector,"@SuppressWarnings(""unchecked"")
  public static Map<String, String> deserializeOffsetMap(String lastSourceOffset) throws IOException {
    Map<String, String> offsetMap;
    if (lastSourceOffset == null || lastSourceOffset.isEmpty()) {
      offsetMap = new HashMap<>();
    } else {
      offsetMap = JSON_MAPPER.readValue(lastSourceOffset, Map.class);
    }
    return offsetMap;
  }",Deserialize String offset to Map of table to offset,stagesupport/src/main/java/com/streamsets/pipeline/lib/util/OffsetUtil.java,[]
6621cd81cda9bd4817b10f67,abmargb/jamppa,"public void addPacketInterceptor(PacketInterceptor packetInterceptor,
            PacketFilter packetFilter) {
        if (packetInterceptor == null) {
            throw new NullPointerException(""Packet interceptor is null."");
        }
        interceptors.put(packetInterceptor, new InterceptorWrapper(
                packetInterceptor, packetFilter));
    }",Registers a packet interceptor with this connection . The interceptor will be invoked every time a packet is about to be sent by this connection . Interceptors may modify the packet to be sent . A packet filter determines which packets will be delivered to the interceptor .,src/main/java/org/jivesoftware/smack/Connection.java,"[{'Syntax': 'interceptors.put(packetInterceptor, new InterceptorWrapper(\n                packetInterceptor, packetFilter))', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public synchronized V put(K key, V value) {\n        V oldValue = null;\n        // Delete an old entry if it exists.\n        if (map.containsKey(key)) {\n            oldValue = remove(key, true);\n        }\n\n        CacheObject<V> cacheObject = new CacheObject<V>(value);\n        map.put(key, cacheObject);\n        // Make an entry into the cache order list.\n        // Store the cache order list entry so that we can get back to it\n        // during later lookups.\n        cacheObject.lastAccessedListNode = lastAccessedList.addFirst(key);\n        // Add the object to the age list\n        LinkedListNode ageNode = ageList.addFirst(key);\n        ageNode.timestamp = System.currentTimeMillis();\n        cacheObject.ageListNode = ageNode;\n\n        // If cache is too full, remove least used cache entries until it is not\n        // too full.\n        cullCache();\n\n        return oldValue;\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/smack/util/Cache.java'}]"
6621cd81cda9bd4817b10f68,rupertlssmith/lojix,"public static int getCharacterCountDecimal(long integerValue, int scale)
    {
        boolean isNeg = integerValue < 0;

        // Work out how many digits will be needed for the number, adding space for the minus sign, the decimal
        // point and leading zeros if needed.
        int totalDigits = BitHackUtils.getCharacterCountInt64(integerValue);
        int totalLength = totalDigits;

        if (isNeg)
        {
            totalDigits--; // Minus sign already accounted for.
        }

        if (scale > 0)
        {
            totalLength++; // For the decimal point.

            if (scale >= totalDigits)
            {
                // For the leading zeros (+ 1 for the zero before decimal point).
                totalLength += (scale - totalDigits) + 1;
            }
        }
        else
        {
            // Add a zero for each negative point in scale
            totalLength -= scale;
        }

        return totalLength;
    }",Calculates the number of ASCII characters that will be needed to represent a specified signed decimal number .,lojix/power_model/src/main/com/thesett/aima/attribute/time/BitHackUtils.java,"[{'Syntax': 'BitHackUtils.getCharacterCountInt64(integerValue)', 'FunctionName': 'getCharacterCountInt64', 'ArgsCount': 1, 'MethodBody': 'public static int getCharacterCountInt64(long value)\n    {\n        if (value >= 0)\n        {\n            return getCharacterCountUInt64(value);\n        }\n        else if (value == Long.MIN_VALUE)\n        {\n            return getCharacterCountUInt64(Long.MAX_VALUE) + 1;\n        }\n        else\n        {\n            return getCharacterCountUInt64(-value) + 1;\n        }\n    }', 'FileName': '/rupertlssmith/lojix/lojix/power_model/src/main/com/thesett/aima/attribute/time/BitHackUtils.java'}]"
6621cd81cda9bd4817b10f69,real-logic/aeron,"public static boolean isActive(final CountersReader countersReader, final int counterId, final long recordingId)
    {
        final DirectBuffer buffer = countersReader.metaDataBuffer();

        if (countersReader.getCounterState(counterId) == RECORD_ALLOCATED)
        {
            final int recordOffset = CountersReader.metaDataOffset(counterId);

            return
                buffer.getInt(recordOffset + TYPE_ID_OFFSET) == RECORDING_POSITION_TYPE_ID &&
                buffer.getLong(recordOffset + KEY_OFFSET + RECORDING_ID_OFFSET) == recordingId;
        }

        return false;
    }",Is the recording counter still active .,aeron-archive/src/main/java/io/aeron/archive/status/RecordingPos.java,"[{'Syntax': 'countersReader.metaDataBuffer()', 'FunctionName': 'metaDataBuffer', 'ArgsCount': 0, 'MethodBody': 'public UnsafeBuffer metaDataBuffer()\n    {\n        return logMetaDataBuffer;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/LogBuffers.java'}]"
6621cd81cda9bd4817b10f6a,phax/ph-genericode,"public static boolean isKeyColumn (@Nonnull final ColumnSet aColumnSet, @Nullable final String sColumnID)
  {
    if (sColumnID != null)
      for (final Key aKey : getAllKeys (aColumnSet))
        for (final KeyColumnRef aColumnRef : aKey.getColumnRef ())
          if (aColumnRef.getRef () instanceof Column)
            if (((Column) aColumnRef.getRef ()).getId ().equals (sColumnID))
              return true;
    return false;
  }",Check if the passed column ID is a key column in the specified column set,src/main/java/com/helger/genericode/Genericode10Helper.java,"[{'Syntax': 'getAllKeys (aColumnSet)', 'FunctionName': 'getAllKeys', 'ArgsCount': 1, 'MethodBody': '@Nonnull\n  @ReturnsMutableCopy\n  public static ICommonsList <Key> getAllKeys (@Nonnull final ColumnSet aColumnSet)\n  {\n    final ICommonsList <Key> ret = new CommonsArrayList <> ();\n    getAllKeys (aColumnSet, ret);\n    return ret;\n  }', 'FileName': '/phax/ph-genericode/src/main/java/com/helger/genericode/Genericode04Helper.java'}]"
6621cd81cda9bd4817b10f6b,orientechnologies/orientdb,"public Set<String> getClustersOwnedByServer(final String iNodeName) {
    final Set<String> clusters = new HashSet<String>();
    for (String cl : getClusterNames()) {
      if (iNodeName.equals(getClusterOwner(cl)))
        clusters.add(cl);
    }
    return clusters;
  }",Returns the set of clusters where server is the owner .,server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java,"[{'Syntax': 'getClusterNames()', 'FunctionName': 'getClusterNames', 'ArgsCount': 0, 'MethodBody': 'public Set<String> getClusterNames() {\n    stateLock.readLock().lock();\n    try {\n\n      return new HashSet<String>(clusterMap.keySet());\n\n    } finally {\n      stateLock.readLock().unlock();\n      ;\n    }\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java'}, {'Syntax': 'iNodeName.equals(getClusterOwner(cl))', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'getClusterOwner(cl)', 'FunctionName': 'getClusterOwner', 'ArgsCount': 1, 'MethodBody': ""public String getClusterOwner(final String iClusterName) {\n    String owner;\n\n    final ODocument clusters = getConfiguredClusters();\n\n    // GET THE CLUSTER CFG\n    final ODocument cfg = iClusterName != null ? (ODocument) clusters.field(iClusterName) : null;\n\n    if (cfg != null) {\n      owner = cfg.field(OWNER);\n      if (owner != null) return owner;\n\n      final List<String> serverList = cfg.field(SERVERS);\n      if (serverList != null && !serverList.isEmpty()) {\n        // RETURN THE FIRST ONE\n        owner = serverList.get(0);\n        if (NEW_NODE_TAG.equals(owner) && serverList.size() > 1)\n          // DON'T RETURN <NEW_NODE>\n          owner = serverList.get(1);\n      }\n    } else\n      // RETURN THE OWNER OF *\n      return getClusterOwner(ALL_WILDCARD);\n\n    return owner;\n  }"", 'FileName': '/orientechnologies/orientdb/server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java'}, {'Syntax': 'clusters.add(cl)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}]"
6621cd81cda9bd4817b10f6c,cglib/cglib,"public void mergeSort(int index, int lo, int hi, Comparator cmp) {
        chooseComparer(index, cmp);
        super.mergeSort(lo, hi - 1);
    }",Sort the arrays using an in - place merge sort .,cglib/src/main/java/net/sf/cglib/util/ParallelSorter.java,"[{'Syntax': 'chooseComparer(index, cmp)', 'FunctionName': 'chooseComparer', 'ArgsCount': 2, 'MethodBody': 'private void chooseComparer(int index, Comparator cmp) {\n        Object array = a[index];\n        Class type = array.getClass().getComponentType();\n        if (type.equals(Integer.TYPE)) {\n            comparer = new IntComparer((int[])array);\n        } else if (type.equals(Long.TYPE)) {\n            comparer = new LongComparer((long[])array);\n        } else if (type.equals(Double.TYPE)) {\n            comparer = new DoubleComparer((double[])array);\n        } else if (type.equals(Float.TYPE)) {\n            comparer = new FloatComparer((float[])array);\n        } else if (type.equals(Short.TYPE)) {\n            comparer = new ShortComparer((short[])array);\n        } else if (type.equals(Byte.TYPE)) {\n            comparer = new ByteComparer((byte[])array);\n        } else if (cmp != null) {\n            comparer = new ComparatorComparer((Object[])array, cmp);\n        } else {\n            comparer = new ObjectComparer((Object[])array);\n        } \n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/util/ParallelSorter.java'}, {'Syntax': 'super.mergeSort(lo, hi - 1)', 'FunctionName': 'mergeSort', 'ArgsCount': 2, 'MethodBody': 'public void mergeSort(int index, Comparator cmp) {\n        mergeSort(index, 0, len(), cmp);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/util/ParallelSorter.java'}]"
6621cd81cda9bd4817b10f6d,real-logic/aeron,"public static void main(final String[] args)
    {
        loadPropertiesFiles(args);

        final ShutdownSignalBarrier barrier = new ShutdownSignalBarrier();
        final MediaDriver.Context ctx = new MediaDriver.Context();

        ctx.terminationHook(barrier::signal);

        try (MediaDriver ignore = MediaDriver.launch(ctx))
        {
            barrier.await();

            System.out.println(""Shutdown Driver..."");
        }
    }",Start Media Driver as a stand - alone process .,aeron-driver/src/main/java/io/aeron/driver/MediaDriver.java,"[{'Syntax': 'ctx.terminationHook(barrier::signal)', 'FunctionName': 'terminationHook', 'ArgsCount': 1, 'MethodBody': 'public Context terminationHook(final Runnable terminationHook)\n        {\n            this.terminationHook = terminationHook;\n            return this;\n        }', 'FileName': '/real-logic/aeron/aeron-cluster/src/main/java/io/aeron/cluster/ConsensusModule.java'}, {'Syntax': 'MediaDriver.launch(ctx)', 'FunctionName': 'launch', 'ArgsCount': 1, 'MethodBody': 'public static Archive launch(final Context ctx)\n    {\n        final Archive archive = new Archive(ctx);\n        if (ArchiveThreadingMode.INVOKER == ctx.threadingMode())\n        {\n            archive.conductorInvoker.start();\n        }\n        else\n        {\n            AgentRunner.startOnThread(archive.conductorRunner, ctx.threadFactory());\n        }\n\n        return archive;\n    }', 'FileName': '/real-logic/aeron/aeron-archive/src/main/java/io/aeron/archive/Archive.java'}, {'Syntax': 'barrier.await()', 'FunctionName': 'await', 'ArgsCount': 0, 'MethodBody': 'public void await() throws InterruptedException\n    {\n        synchronized (mutex)\n        {\n            while (null == result)\n            {\n                mutex.wait();\n            }\n        }\n\n        if (result instanceof Exception)\n        {\n            throw new RuntimeException((Exception)result);\n        }\n    }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/echo/ProvisioningMessage.java'}]"
6621cd81cda9bd4817b10f6e,ToastShaman/dropwizard-auth-jwt,"public void invalidateAll(Predicate<? super JwtContext> predicate) {
        cache.asMap().entrySet().stream()
            .map(entry -> entry.getValue().getKey())
            .filter(predicate::test)
            .map(JwtContext::getJwt)
            .forEach(cache::invalidate);
    }",Discards any cached principal for the collection of credentials satisfying the given predicate .,src/main/java/com/github/toastshaman/dropwizard/auth/jwt/CachingJwtAuthenticator.java,"[{'Syntax': 'cache.asMap().entrySet().stream()\n            .map(entry -> entry.getValue().getKey())\n            .filter(predicate::test)', 'FunctionName': 'filter', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void filter(final ContainerRequestContext requestContext) throws IOException {\n        final Optional<String> optionalToken = getTokenFromCookieOrHeader(requestContext);\n\n        if (optionalToken.isPresent()) {\n            try {\n                final JwtContext jwtContext = verifyToken(optionalToken.get());\n                final Optional<P> principal = authenticator.authenticate(jwtContext);\n\n                if (principal.isPresent()) {\n                    requestContext.setSecurityContext(new SecurityContext() {\n\n                        @Override\n                        public Principal getUserPrincipal() {\n                            return principal.get();\n                        }\n\n                        @Override\n                        public boolean isUserInRole(String role) {\n                            return authorizer.authorize(principal.get(), role);\n                        }\n\n                        @Override\n                        public boolean isSecure() {\n                            return requestContext.getSecurityContext().isSecure();\n                        }\n\n                        @Override\n                        public String getAuthenticationScheme() {\n                            return SecurityContext.BASIC_AUTH;\n                        }\n\n                    });\n                    return;\n                }\n            } catch (InvalidJwtException ex) {\n                LOGGER.warn(""Error decoding credentials: "" + ex.getMessage(), ex);\n            } catch (AuthenticationException ex) {\n                LOGGER.warn(""Error authenticating credentials"", ex);\n                throw new InternalServerErrorException();\n            }\n        }\n\n        throw new WebApplicationException(unauthorizedHandler.buildResponse(prefix, realm));\n    }', 'FileName': '/ToastShaman/dropwizard-auth-jwt/src/main/java/com/github/toastshaman/dropwizard/auth/jwt/JwtAuthFilter.java'}]"
6621cd81cda9bd4817b10f6f,RestComm/jain-slee,"public boolean attachTimer(TimerID timerID) {
		final Node node = getAttachedTimersNode(true);
		if (!node.hasChild(timerID)) {
			node.addChild(Fqn.fromElements(timerID));
			return true;
		}
		else {
			return false;
		}
	}",Attaches a timer,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java,"[{'Syntax': 'getAttachedTimersNode(true)', 'FunctionName': 'getAttachedTimersNode', 'ArgsCount': 1, 'MethodBody': 'private Node getAttachedTimersNode(boolean createIfNotExists) {\n\t\tif (_attachedTimersNode == null) {\n\t\t\tfinal Node node = getNode();\n\t\t\t_attachedTimersNode = node.getChild(ATTACHED_TIMERS_NODE_NAME);\n\t\t\tif (_attachedTimersNode == null && createIfNotExists) {\n\t\t\t\t_attachedTimersNode = node.addChild(ATTACHED_TIMERS_FQN);\n\t\t\t}\n\t\t}\n\t\treturn _attachedTimersNode;\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java'}]"
6621cd81cda9bd4817b10f70,eclipse/packagedrone,"private void allocateCharBuffer() {
        if (bufferSize == 0) return;
        
        if (bufferSize > MAX_BUFFER_SIZE) {
            buf =  new CharBuffer(new char[bufferSize], 0, bufferSize);
        } else {
            buf = getCharBufferThreadLocalPool().allocate(bufferSize);
        }
    }",END PWC 6512276,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspWriterImpl.java,"[{'Syntax': 'getCharBufferThreadLocalPool().allocate(bufferSize)', 'FunctionName': 'allocate', 'ArgsCount': 1, 'MethodBody': 'public T[] allocate ( int length );', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.utils.rpm/src/org/eclipse/packagedrone/utils/rpm/header/Header.java'}, {'Syntax': 'getCharBufferThreadLocalPool()', 'FunctionName': 'getCharBufferThreadLocalPool', 'ArgsCount': 0, 'MethodBody': 'private CharBufferThreadLocalPool getCharBufferThreadLocalPool() {\n        CharBufferThreadLocalPool pool = charBufferPools.get();\n        if (pool == null) {\n            pool = new CharBufferThreadLocalPool();\n            charBufferPools.set(pool);\n        }\n        return pool;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspWriterImpl.java'}]"
6621cd81cda9bd4817b10f71,Unidata/thredds,"public void writeXML(NetcdfDataset ncd, OutputStream os, boolean showCoords, String uri) throws IOException {

    // Output the document, use standard formatter
    //XMLOutputter fmt = new XMLOutputter(""  "", true);
    //fmt.setLineSeparator(""\n"");
    XMLOutputter fmt = new XMLOutputter( Format.getPrettyFormat());
    fmt.output(makeDocument(ncd, showCoords, uri), os);
  }",Write a NetcdfDataset as an NcML - G document to the specified stream .,cdm/src/main/java/ucar/nc2/ncml/NcMLGWriter.java,[]
6621cd81cda9bd4817b10f72,RestComm/jain-slee,"protected ActivityContextInterface getACI(Object activity)
			throws NullPointerException, UnrecognizedActivityException,
			FactoryException {
		if (activity == null) {
			throw new NullPointerException(""null activity object"");
		}
		ActivityHandle handle = null;
		for (ResourceAdaptorEntity raEntity : sleeContainer
				.getResourceManagement().getResourceAdaptorEntitiesPerType(resourceAdaptorTypeID)) {
			handle = raEntity.getResourceAdaptorObject().getActivityHandle(
					activity);
			if (handle != null) {
				ActivityContextHandle ach = new ResourceAdaptorActivityContextHandleImpl(raEntity, handle);
				ActivityContext ac = sleeContainer.getActivityContextFactory()
						.getActivityContext(ach);
				if (ac != null) {
					return ac.getActivityContextInterface();
				}
				break;
			}
		}

		throw new UnrecognizedActivityException(activity.toString());
	}",This method returns the aci for the specified activity if exists it should be invoked by each impl of methods of an ra type aci factory .,container/resource/src/main/java/org/mobicents/slee/resource/AbstractActivityContextInterfaceFactory.java,"[{'Syntax': 'sleeContainer\n\t\t\t\t.getResourceManagement().getResourceAdaptorEntitiesPerType(resourceAdaptorTypeID)', 'FunctionName': 'getResourceAdaptorEntitiesPerType', 'ArgsCount': 1, 'MethodBody': 'public Set<ResourceAdaptorEntity> getResourceAdaptorEntitiesPerType(ResourceAdaptorTypeID resourceAdaptorTypeID) {\n\t\treturn entitiesPerType.get(resourceAdaptorTypeID);\n\t}', 'FileName': '/RestComm/jain-slee/container/resource/src/main/java/org/mobicents/slee/container/management/ResourceManagementImpl.java'}, {'Syntax': 'sleeContainer\n\t\t\t\t.getResourceManagement()', 'FunctionName': 'getResourceManagement', 'ArgsCount': 0, 'MethodBody': 'public ResourceManagement getResourceManagement() {\n\t\treturn resourceManagement;\n\t}', 'FileName': '/RestComm/jain-slee/container/common/src/main/java/org/mobicents/slee/container/deployment/jboss/action/ResourceManagementAction.java'}, {'Syntax': 'raEntity.getResourceAdaptorObject().getActivityHandle(\n\t\t\t\t\tactivity)', 'FunctionName': 'getActivityHandle', 'ArgsCount': 1, 'MethodBody': 'public ActivityHandle getActivityHandle(Object activity) {\r\n\t\treturn null;\r\n\t}', 'FileName': '/RestComm/jain-slee/tools/statistics/ra/src/main/java/org/restcomm/slee/resource/statistics/StatisticsResourceAdaptor.java'}, {'Syntax': 'raEntity.getResourceAdaptorObject()', 'FunctionName': 'getResourceAdaptorObject', 'ArgsCount': 0, 'MethodBody': 'public ResourceAdaptor getResourceAdaptorObject() {\n\t\treturn object;\n\t}', 'FileName': '/RestComm/jain-slee/container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java'}, {'Syntax': 'sleeContainer.getActivityContextFactory()\n\t\t\t\t\t\t.getActivityContext(ach)', 'FunctionName': 'getActivityContext', 'ArgsCount': 1, 'MethodBody': '@Override\r\n\tpublic ActivityContextImpl getActivityContext(ActivityContextHandle ach) {\r\n\t\treturn getActivityContext(ach,false);\r\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextFactoryImpl.java'}, {'Syntax': 'sleeContainer.getActivityContextFactory()', 'FunctionName': 'getActivityContextFactory', 'ArgsCount': 0, 'MethodBody': 'public ActivityContextFactory getActivityContextFactory() {\n\t\treturn this.activityContextFactory;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'ac.getActivityContextInterface()', 'FunctionName': 'getActivityContextInterface', 'ArgsCount': 0, 'MethodBody': 'public ActivityContextInterface getActivityContextInterface();', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/EventContext.java'}, {'Syntax': 'activity.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString() {\r\n    return ""ComponentTypeInfo: type=["" + type + ""] componentNumber=["" + componentNumber + ""]"";\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentTypeInfo.java'}]"
6621cd81cda9bd4817b10f73,Unidata/thredds,"static public String fqnPrefix(String fqn)
    {
        int structindex = fqn.lastIndexOf('.');
        int groupindex = fqn.lastIndexOf('/');
        if(structindex >= 0)
            return fqn.substring(0, structindex);
        else
            return fqn.substring(0, groupindex);
    }",return prefix name part of an fqn ; result will be escaped .,dap4/d4core/src/main/java/dap4/core/util/DapUtil.java,[]
6621cd81cda9bd4817b10f74,boonproject/boon,"public static boolean insideOf(String start, String inStr, String end) {
        return Chr.insideOf(FastStringUtils.toCharArray(start), FastStringUtils.toCharArray(inStr), FastStringUtils.toCharArray(end));
    }",Checks to see if a string is inside of another,boon/src/main/java/org/boon/Str.java,"[{'Syntax': 'Chr.insideOf(FastStringUtils.toCharArray(start), FastStringUtils.toCharArray(inStr), FastStringUtils.toCharArray(end))', 'FunctionName': 'insideOf', 'ArgsCount': 3, 'MethodBody': 'public static boolean insideOf(String start, String inStr, String end) {\n        return Chr.insideOf(FastStringUtils.toCharArray(start), FastStringUtils.toCharArray(inStr), FastStringUtils.toCharArray(end));\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/Str.java'}, {'Syntax': 'FastStringUtils.toCharArray(start)', 'FunctionName': 'toCharArray', 'ArgsCount': 1, 'MethodBody': '@Override\n            public char[] toCharArray(String string) {\n                return (char[]) UNSAFE.getObject(string, STRING_VALUE_FIELD_OFFSET);\n            }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/FastStringUtils.java'}, {'Syntax': 'FastStringUtils.toCharArray(inStr)', 'FunctionName': 'toCharArray', 'ArgsCount': 1, 'MethodBody': '@Override\n            public char[] toCharArray(String string) {\n                return (char[]) UNSAFE.getObject(string, STRING_VALUE_FIELD_OFFSET);\n            }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/FastStringUtils.java'}, {'Syntax': 'FastStringUtils.toCharArray(end)', 'FunctionName': 'toCharArray', 'ArgsCount': 1, 'MethodBody': '@Override\n            public char[] toCharArray(String string) {\n                return (char[]) UNSAFE.getObject(string, STRING_VALUE_FIELD_OFFSET);\n            }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/FastStringUtils.java'}]"
6621cd81cda9bd4817b10f75,oblac/jodd,"public static HttpRequest head(final String destination) {
		return new HttpRequest()
				.method(HttpMethod.HEAD)
				.set(destination);
	}",Builds a HEAD request .,jodd-http/src/main/java/jodd/http/HttpRequest.java,"[{'Syntax': 'new HttpRequest()\n\t\t\t\t.method(HttpMethod.HEAD)\n\t\t\t\t.set(destination)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'public void set(final boolean value) {\n\t\tthis.value = value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}]"
6621cd81cda9bd4817b10f76,streamsets/datacollector,"public static Map<String, Object> getDefaultValues(Schema schema) throws SchemaRegistryException {
    Map<String, Object> defaultValues = new HashMap<>();
    try {
      defaultValues.putAll(AvroTypeUtil.getDefaultValuesFromSchema(schema, new HashSet<String>()));
    } catch (IOException e) {
      throw new SchemaRegistryException(e);
    }
    return defaultValues;
  }",Helper method to extract default values from a Schema . This is normally done in DataGeneratorFormat validation however we have to do it at runtime for Schema Registry .,commonlib/src/main/java/com/streamsets/pipeline/lib/util/AvroSchemaHelper.java,[]
6621cd81cda9bd4817b10f77,wildfly/wildfly,"@SuppressWarnings(""deprecation"")
    static void addTransformations(ModelVersion version, ResourceTransformationDescriptionBuilder builder) {

        if (JGroupsModel.VERSION_5_0_0.requiresTransformation(version)) {
            builder.getAttributeBuilder()
                    .setDiscard(DiscardAttributeChecker.UNDEFINED, Attribute.STATISTICS_ENABLED.getDefinition())
                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.STATISTICS_ENABLED.getDefinition())
                    .end();
        }

        if (JGroupsModel.VERSION_3_0_0.requiresTransformation(version)) {
            AttributeConverter typeConverter = new AttributeConverter.DefaultAttributeConverter() {
                @Override
                protected void convertAttribute(PathAddress address, String name, ModelNode value, TransformationContext context) {
                    if (!value.isDefined()) {
                        value.set(address.getLastElement().getValue());
                    }
                }
            };
            builder.getAttributeBuilder()
                    .setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(Attribute.MODULE.getDefinition().getDefaultValue()), Attribute.MODULE.getDefinition())
                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.MODULE.getDefinition())
                    .setValueConverter(typeConverter, DeprecatedAttribute.TYPE.getDefinition())
                    .end();

            builder.addRawOperationTransformationOverride(MapOperations.MAP_GET_DEFINITION.getName(), new SimpleOperationTransformer(new LegacyPropertyMapGetOperationTransformer()));

            for (String opName : Operations.getAllWriteAttributeOperationNames()) {
                builder.addOperationTransformationOverride(opName)
                        .inheritResourceAttributeDefinitions()
                        .setCustomOperationTransformer(new LegacyPropertyWriteOperationTransformer());
            }
        }

        PropertyResourceDefinition.buildTransformation(version, builder);
    }",Builds transformations common to both stack protocols and transport .,clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/AbstractProtocolResourceDefinition.java,"[{'Syntax': 'builder.getAttributeBuilder()\n                    .setDiscard(DiscardAttributeChecker.UNDEFINED, Attribute.STATISTICS_ENABLED.getDefinition())\n                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.STATISTICS_ENABLED.getDefinition())\n                    .end()', 'FunctionName': 'end', 'ArgsCount': 0, 'MethodBody': 'public void end() {\n        this.conversation.end();\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/web/context/ConversationBean.java'}, {'Syntax': 'Attribute.STATISTICS_ENABLED.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': '@Override\n        public RuntimeCapability<?> getDefinition() {\n            return this.definition;\n        }', 'FileName': '/wildfly/wildfly/microprofile/openapi-smallrye/src/main/java/org/wildfly/extension/microprofile/openapi/MicroProfileOpenAPISubsystemDefinition.java'}, {'Syntax': 'Attribute.STATISTICS_ENABLED.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': '@Override\n        public RuntimeCapability<?> getDefinition() {\n            return this.definition;\n        }', 'FileName': '/wildfly/wildfly/microprofile/openapi-smallrye/src/main/java/org/wildfly/extension/microprofile/openapi/MicroProfileOpenAPISubsystemDefinition.java'}, {'Syntax': 'value.set(address.getLastElement().getValue())', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'public void set(final Supplier<T> delegate) {\n        this.delegate = delegate;\n    }', 'FileName': '/wildfly/wildfly/ee/src/main/java/org/jboss/as/ee/concurrent/service/DelegatingSupplier.java'}, {'Syntax': 'address.getLastElement().getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\n            return value;\n        }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConstructorConfig.java'}, {'Syntax': 'builder.getAttributeBuilder()\n                    .setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(Attribute.MODULE.getDefinition().getDefaultValue()), Attribute.MODULE.getDefinition())\n                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.MODULE.getDefinition())\n                    .setValueConverter(typeConverter, DeprecatedAttribute.TYPE.getDefinition())\n                    .end()', 'FunctionName': 'end', 'ArgsCount': 0, 'MethodBody': 'public void end() {\n        this.conversation.end();\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/web/context/ConversationBean.java'}, {'Syntax': 'Attribute.MODULE.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': '@Override\n        public RuntimeCapability<?> getDefinition() {\n            return this.definition;\n        }', 'FileName': '/wildfly/wildfly/microprofile/openapi-smallrye/src/main/java/org/wildfly/extension/microprofile/openapi/MicroProfileOpenAPISubsystemDefinition.java'}, {'Syntax': 'Attribute.MODULE.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': '@Override\n        public RuntimeCapability<?> getDefinition() {\n            return this.definition;\n        }', 'FileName': '/wildfly/wildfly/microprofile/openapi-smallrye/src/main/java/org/wildfly/extension/microprofile/openapi/MicroProfileOpenAPISubsystemDefinition.java'}, {'Syntax': 'Attribute.MODULE.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': '@Override\n        public RuntimeCapability<?> getDefinition() {\n            return this.definition;\n        }', 'FileName': '/wildfly/wildfly/microprofile/openapi-smallrye/src/main/java/org/wildfly/extension/microprofile/openapi/MicroProfileOpenAPISubsystemDefinition.java'}, {'Syntax': 'DeprecatedAttribute.TYPE.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': '@Override\n        public RuntimeCapability<?> getDefinition() {\n            return this.definition;\n        }', 'FileName': '/wildfly/wildfly/microprofile/openapi-smallrye/src/main/java/org/wildfly/extension/microprofile/openapi/MicroProfileOpenAPISubsystemDefinition.java'}, {'Syntax': 'MapOperations.MAP_GET_DEFINITION.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}]"
6621cd81cda9bd4817b10f78,deeplearning4j/nd4j,"public List<SDVariable> diff(List<SDVariable> i_v1) {
        List<SDVariable> vals = doDiff(i_v1);
        if(vals == null){
            throw new IllegalStateException(""Error executing diff operation: doDiff returned null for op: "" + this.opName());
        }

        val outputVars = args();
        for(int i = 0; i < vals.size(); i++) {
            SDVariable var = outputVars[i];
            SDVariable grad = var.getGradient();
            if(grad != null) {
                SDVariable gradVar =  f().add(grad, vals.get(i));
                try {
                    vals.set(i, gradVar);
                } catch (UnsupportedOperationException e){
                    throw new UnsupportedOperationException(""Use a mutable list when returning values from ""+this.getClass().getSimpleName()+"".doDiff (e.g. Arrays.asList instead of Collections.singletonList)"", e);
                }
                sameDiff.setGradientForVariableName(var.getVarName(), gradVar);
            } else {
                SDVariable gradVar = vals.get(i);
                sameDiff.updateVariableNameAndReference(gradVar,var.getVarName() + ""-grad"");
                sameDiff.setGradientForVariableName(var.getVarName(), gradVar);
                sameDiff.setForwardVariableForVarName(gradVar.getVarName(),var);

            }
        }

        return vals;
    }",Perform automatic differentiation wrt the input variables,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/functions/DifferentialFunction.java,[]
6621cd81cda9bd4817b10f79,artclarke/humble-video,"protected void validatePicture(MediaPicture picture)
  {
    // if the picture is NULL, throw up
    
    if (picture == null)
      throw new IllegalArgumentException(""The picture is NULL."");

    // if the picture is not complete, throw up
    
    if (!picture.isComplete())
      throw new IllegalArgumentException(""The picture is not complete."");

    // if the picture is an invalid type throw up

    PixelFormat.Type type = picture.getFormat();
    if ((type != getPictureType()) && (willResample() && 
        type != mToImageResampler.getOutputFormat()))
      throw new IllegalArgumentException(
        ""Picture is of type: "" + type + "", but must be "" + 
        getPictureType() + (willResample() 
          ? "" or "" + mToImageResampler.getOutputFormat()
          : """") +
        ""."");
  }",Test that the passed picture is valid and conforms to the converters specifications .,humble-video-noarch/src/main/java/io/humble/video/awt/AMediaPictureConverter.java,"[{'Syntax': 'picture.isComplete()', 'FunctionName': 'isComplete', 'ArgsCount': 0, 'MethodBody': 'public boolean isComplete() {\n    return VideoJNI.MediaPicture_isComplete(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaPicture.java'}, {'Syntax': 'picture.getFormat()', 'FunctionName': 'getFormat', 'ArgsCount': 0, 'MethodBody': 'public PixelFormat.Type getFormat() {\n    return PixelFormat.Type.swigToEnum(VideoJNI.MediaPicture_getFormat(swigCPtr, this));\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaPicture.java'}, {'Syntax': 'getPictureType()', 'FunctionName': 'getPictureType', 'ArgsCount': 0, 'MethodBody': 'public PixelFormat.Type getPictureType()\n    {\n      return mPictureType;\n    }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/awt/MediaPictureConverterFactory.java'}, {'Syntax': 'willResample()', 'FunctionName': 'willResample', 'ArgsCount': 0, 'MethodBody': 'public boolean willResample();', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/awt/MediaPictureConverter.java'}, {'Syntax': 'mToImageResampler.getOutputFormat()', 'FunctionName': 'getOutputFormat', 'ArgsCount': 0, 'MethodBody': 'public AudioFormat.Type getOutputFormat() {\n    return AudioFormat.Type.swigToEnum(VideoJNI.MediaAudioResampler_getOutputFormat(swigCPtr, this));\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaAudioResampler.java'}, {'Syntax': 'getPictureType()', 'FunctionName': 'getPictureType', 'ArgsCount': 0, 'MethodBody': 'public PixelFormat.Type getPictureType()\n    {\n      return mPictureType;\n    }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/awt/MediaPictureConverterFactory.java'}, {'Syntax': 'willResample()', 'FunctionName': 'willResample', 'ArgsCount': 0, 'MethodBody': 'public boolean willResample();', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/awt/MediaPictureConverter.java'}, {'Syntax': 'mToImageResampler.getOutputFormat()', 'FunctionName': 'getOutputFormat', 'ArgsCount': 0, 'MethodBody': 'public AudioFormat.Type getOutputFormat() {\n    return AudioFormat.Type.swigToEnum(VideoJNI.MediaAudioResampler_getOutputFormat(swigCPtr, this));\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaAudioResampler.java'}]"
6621cd81cda9bd4817b10f7a,Unidata/thredds,"public void initOnce(HttpServletRequest req)
            throws SendError
    {
        if(once)
            return;
        once = true;
        log.info(getClass().getName() + "" GET initialization"");
        if(this.tdsContext == null)
            throw new SendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, ""Cannot find TDS Context"");
        // Get server host + port name
        StringBuilder buf = new StringBuilder();
        buf.append(req.getServerName());
        int port = req.getServerPort();
        if(port > 0) {
            buf.append("":"");
            buf.append(port);
        }
        this.server = buf.toString();

        // Obtain servlet path info
        String tmp = HTTPUtil.canonicalpath(req.getContextPath());
        this.threddsname = HTTPUtil.nullify(HTTPUtil.relpath(tmp));
        tmp = HTTPUtil.canonicalpath(req.getServletPath());
        this.requestname = HTTPUtil.nullify(HTTPUtil.relpath(tmp));

        if(this.threddsname == null)
            this.threddsname = DEFAULTSERVLETNAME;

        // Get the upload dir
        File updir = tdsContext.getUploadDir();
        if(updir == null) {
            log.warn(""No tds.upload.dir specified"");
            this.uploaddir = null;
        } else
            this.uploaddir = HTTPUtil.canonicalpath(updir.getAbsolutePath());
        // Get the download dir
        File downdir = tdsContext.getDownloadDir();
        if(downdir == null) {
            log.warn(""No tds.download.dir specified"");
            this.downloaddir = null;
        } else
            this.downloaddir = HTTPUtil.canonicalpath(downdir.getAbsolutePath());

    }",Invoked on first get so that everything is available especially Spring stuff .,tds/src/main/java/thredds/server/reify/LoadCommon.java,[]
6621cd82cda9bd4817b10f7b,spring-projects/spring-security,"@RequestMapping(value = ""/secure/deletePermission.htm"")
	public ModelAndView deletePermission(@RequestParam(""contactId"") long contactId,
			@RequestParam(""sid"") String sid, @RequestParam(""permission"") int mask) {

		Contact contact = contactManager.getById(contactId);

		Sid sidObject = new PrincipalSid(sid);
		Permission permission = permissionFactory.buildFromMask(mask);

		contactManager.deletePermission(contact, sidObject, permission);

		Map<String, Object> model = new HashMap<>();
		model.put(""contact"", contact);
		model.put(""sid"", sidObject);
		model.put(""permission"", permission);

		return new ModelAndView(""deletePermission"", ""model"", model);
	}",Deletes a permission,samples/xml/contacts/src/main/java/sample/contact/AdminPermissionController.java,"[{'Syntax': 'permissionFactory.buildFromMask(mask)', 'FunctionName': 'buildFromMask', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic Permission buildFromMask(int mask) {\n\t\tif (this.registeredPermissionsByInteger.containsKey(mask)) {\n\t\t\t// The requested mask has an exact match against a statically-defined\n\t\t\t// Permission, so return it\n\t\t\treturn this.registeredPermissionsByInteger.get(mask);\n\t\t}\n\n\t\t// To get this far, we have to use a CumulativePermission\n\t\tCumulativePermission permission = new CumulativePermission();\n\t\tfor (int i = 0; i < 32; i++) {\n\t\t\tint permissionToCheck = 1 << i;\n\t\t\tif ((mask & permissionToCheck) == permissionToCheck) {\n\t\t\t\tPermission p = this.registeredPermissionsByInteger.get(permissionToCheck);\n\t\t\t\tAssert.state(p != null,\n\t\t\t\t\t\t() -> ""Mask \'"" + permissionToCheck + ""\' does not have a corresponding static Permission"");\n\t\t\t\tpermission.set(p);\n\t\t\t}\n\t\t}\n\t\treturn permission;\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/domain/DefaultPermissionFactory.java'}, {'Syntax': 'model.put(""contact"", contact)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(Class<? extends Filter> filter, int position) {\n\t\tthis.filterToOrder.putIfAbsent(filter.getName(), position);\n\t}', 'FileName': '/spring-projects/spring-security/config/src/main/java/org/springframework/security/config/annotation/web/builders/FilterOrderRegistration.java'}, {'Syntax': 'model.put(""sid"", sidObject)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(Class<? extends Filter> filter, int position) {\n\t\tthis.filterToOrder.putIfAbsent(filter.getName(), position);\n\t}', 'FileName': '/spring-projects/spring-security/config/src/main/java/org/springframework/security/config/annotation/web/builders/FilterOrderRegistration.java'}, {'Syntax': 'model.put(""permission"", permission)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(Class<? extends Filter> filter, int position) {\n\t\tthis.filterToOrder.putIfAbsent(filter.getName(), position);\n\t}', 'FileName': '/spring-projects/spring-security/config/src/main/java/org/springframework/security/config/annotation/web/builders/FilterOrderRegistration.java'}]"
6621cd82cda9bd4817b10f7c,1gravity/Android-RTEditor,"public RTHtml<RTImage, RTAudio, RTVideo> convert(final Spanned text, RTFormat.Html rtFormat) {
        mText = text;
        mRTFormat = rtFormat;

        mOut = new StringBuilder();
        mImages = new ArrayList<>();
        mParagraphStyles.clear();

        // convert paragraphs
        convertParagraphs();

        return new RTHtml<>(rtFormat, mOut.toString(), mImages);
    }",Converts a spanned text to HTML,RTEditor/src/main/java/com/onegravity/rteditor/converter/ConverterSpannedToHtml.java,"[{'Syntax': 'mParagraphStyles.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'public synchronized void clear() {\n        getItemsInternal().clear();\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/toolbar/spinner/SpinnerItems.java'}, {'Syntax': 'convertParagraphs()', 'FunctionName': 'convertParagraphs', 'ArgsCount': 0, 'MethodBody': 'private void convertParagraphs() {\n        RTLayout rtLayout = new RTLayout(mText);\n\n        // a manual for loop is faster than the for-each loop for an ArrayList:\n        // see https://developer.android.com/training/articles/perf-tips.html#Loops\n        ArrayList<Paragraph> paragraphs = rtLayout.getParagraphs();\n        for (int i = 0, size = paragraphs.size(); i < size; i++) {\n            Paragraph paragraph = paragraphs.get(i);\n\n            // retrieve all spans for this paragraph\n            Set<SingleParagraphStyle> styles = getParagraphStyles(mText, paragraph);\n\n            // get the alignment span if there is any\n            ParagraphType alignmentType = null;\n            for (SingleParagraphStyle style : styles) {\n                if (style.getType().isAlignment()) {\n                    alignmentType = style.getType();\n                    break;\n                }\n            }\n\n            /*\n             * start tag: bullet points, numbering and indentation\n             */\n            int newIndent = 0;\n            ParagraphType newType = ParagraphType.NONE;\n            for (SingleParagraphStyle style : styles) {\n                newIndent += style.getIndentation();\n                ParagraphType type = style.getType();\n                newType = type.isBullet() ? ParagraphType.BULLET :\n                        type.isNumbering() ? ParagraphType.NUMBERING :\n                                type.isIndentation() && newType.isUndefined() ? ParagraphType.INDENTATION_UL : newType;\n            }\n            // process leading margin style\n            processLeadingMarginStyle(new AccumulatedParagraphStyle(newType, newIndent, 0));\n            // add start list tag\n            mOut.append(newType.getListStartTag());\n\n            /*\n             * start tag: alignment (left, center, right)\n             */\n            if (alignmentType != null) {\n                mOut.append(alignmentType.getStartTag());\n            }\n\n            /*\n             * Convert the plain text\n             */\n            withinParagraph(mText, paragraph.start(), paragraph.end());\n\n            /*\n             * end tag: alignment (left, center, right)\n             */\n            if (alignmentType != null) {\n                removeTrailingLineBreak(alignmentType);\n                mOut.append(alignmentType.getEndTag());\n            }\n\n\n            // add end list tag\n            removeTrailingLineBreak(newType);\n            mOut.append(newType.getListEndTag());\n        }\n\n        /*\n         * end tag: bullet points and indentation\n         */\n        while (!mParagraphStyles.isEmpty()) {\n            removeParagraph();\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/ConverterSpannedToHtml.java'}, {'Syntax': 'mOut.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n        return mType.name() + "" - "" + mStyle.getClass().getSimpleName();\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/SingleParagraphStyle.java'}]"
6621cd82cda9bd4817b10f7d,boonproject/boon,"private List<ValidatorMetaData> extractValidatorMetaData( Class<?> clazz, String propertyName, List<ValidatorMetaData> validatorMetaDataList ) {
        /* If the meta-data was not found, then generate it. */
        if ( validatorMetaDataList == null ) { // if not found
            /* Read the annotation from the class based on the property name. */
            Collection<AnnotationData> annotations = Annotations.getAnnotationDataForFieldAndProperty( clazz, propertyName, this.validationAnnotationPackages );

            /* Extract the POJO based meta-data from the annotation. */
            validatorMetaDataList =
                    extractMetaDataFromAnnotations( annotations );

        }
        return validatorMetaDataList;
    }",Extract BaseValidator Meta Data .,boon/src/main/java/org/boon/validation/readers/AnnotationValidatorMetaDataReader.java,"[{'Syntax': 'Annotations.getAnnotationDataForFieldAndProperty( clazz, propertyName, this.validationAnnotationPackages )', 'FunctionName': 'getAnnotationDataForFieldAndProperty', 'ArgsCount': 3, 'MethodBody': 'public static Collection<AnnotationData> getAnnotationDataForFieldAndProperty( Class<?> clazz, String propertyName, Set<String> allowedPackages ) {\n        /* Extract the AnnotationData from the Java annotation. */\n        List<AnnotationData> propertyAnnotationDataList =\n                getAnnotationDataForProperty( clazz, propertyName, false, allowedPackages );\n\n        /* Read the field annotation.  */\n        List<AnnotationData> fieldAnnotationDataList =\n                getAnnotationDataForField( clazz, propertyName, allowedPackages );\n\n        /* Combine the annotation from field and properties. Field validations take precedence over property validations. */\n        Map<String, AnnotationData> map = new HashMap<String, AnnotationData>( propertyAnnotationDataList.size() + fieldAnnotationDataList.size() );\n\n        /* Add the property annotation to the map. */\n        for ( AnnotationData annotationData : propertyAnnotationDataList ) {\n            map.put( annotationData.getName(), annotationData );\n        }\n\n        /* Add the field annotation to the map allowing them to override the property annotation. */\n        for ( AnnotationData annotationData : fieldAnnotationDataList ) {\n            map.put( annotationData.getName(), annotationData );\n        }\n        return map.values();\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/Annotations.java'}, {'Syntax': 'extractMetaDataFromAnnotations( annotations )', 'FunctionName': 'extractMetaDataFromAnnotations', 'ArgsCount': 1, 'MethodBody': 'private List<ValidatorMetaData> extractMetaDataFromAnnotations(\r\n            Collection<AnnotationData> annotations ) {\r\n        List<ValidatorMetaData> list = new ArrayList<ValidatorMetaData>();\r\n\r\n        for ( AnnotationData annotationData : annotations ) {\r\n            ValidatorMetaData validatorMetaData = convertAnnotationDataToValidatorMetaData( annotationData );\r\n            list.add( validatorMetaData );\r\n        }\r\n\r\n        return list;\r\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/validation/readers/AnnotationValidatorMetaDataReader.java'}]"
6621cd82cda9bd4817b10f7e,Unidata/thredds,"protected String
    pull(Node n, String name)
    {
        NamedNodeMap map = n.getAttributes();
        Node attr = map.getNamedItem(name);
        if(attr == null)
            return null;
        return attr.getNodeValue();
    }",XML Attribute utilities,dap4/d4core/src/main/java/dap4/core/dmr/parser/DOM4Parser.java,[]
6621cd82cda9bd4817b10f7f,oblac/jodd,"public static Class<?> childClassOf(final Class<?> parentClass, final Object instance) {

		if (instance == null || instance == Object.class) {
			return null;
		}

		if (parentClass != null) {
			if (parentClass.isInterface()) {
				return null;
			}
		}

		Class<?> childClass = instance.getClass();
		while (true) {
			Class<?> parent = childClass.getSuperclass();
			if (parent == parentClass) {
				return childClass;
			}
			if (parent == null) {
				return null;
			}
			childClass = parent;
		}
	}",Returns the class of the immediate subclass of the given parent class for the given object instance ; or null if such immediate subclass cannot be uniquely identified for the given object instance .,jodd-core/src/main/java/jodd/util/ClassUtil.java,[]
6621cd82cda9bd4817b10f80,Unidata/thredds,"public void
    writeBytes(byte[] bytes, int len)
            throws IOException
    {
        outputBytes(bytes, 0, len);
        if(this.checksummode.enabled(ChecksumMode.DAP)) {
            this.checksum.update(bytes, 0, len);
            if(DUMPCSUM) {
                System.err.print(""SSS "");
                for(int i = 0; i < len; i++) {
                    System.err.printf(""%02x"", bytes[i]);
                }
                System.err.println();
            }
        }
    }",Write out a set of bytes,dap4/d4servlet/src/main/java/dap4/servlet/SerialWriter.java,[]
6621cd82cda9bd4817b10f81,jillesvangurp/urlbuilder,"public UrlBuilder queryParam(String name, Number value) {
        if(value != null) {
            return queryParam(name, value.toString());
        } else {
            return null;
        }
    }",Create a query parameter with a number value .,src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java,"[{'Syntax': 'queryParam(name, value.toString())', 'FunctionName': 'queryParam', 'ArgsCount': 2, 'MethodBody': 'public UrlBuilder queryParam(String name, Boolean value) {\n        if(value != null) {\n            return queryParam(name, value.toString());\n        } else {\n            return null;\n        }\n    }', 'FileName': '/jillesvangurp/urlbuilder/src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java'}, {'Syntax': 'value.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n        return build();\n    }', 'FileName': '/jillesvangurp/urlbuilder/src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java'}]"
6621cd82cda9bd4817b10f82,ngageoint/geopackage-android,"public Bitmap drawTile(int x, int y, int zoom) {
        Bitmap bitmap;
        if (isIndexQuery()) {
            bitmap = drawTileQueryIndex(x, y, zoom);
        } else {
            bitmap = drawTileQueryAll(x, y, zoom);
        }
        return bitmap;
    }",Draw a tile bitmap from the x y and zoom level,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java,"[{'Syntax': 'isIndexQuery()', 'FunctionName': 'isIndexQuery', 'ArgsCount': 0, 'MethodBody': 'public boolean isIndexQuery() {\n        return indexManager != null && indexManager.isIndexed();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java'}, {'Syntax': 'drawTileQueryIndex(x, y, zoom)', 'FunctionName': 'drawTileQueryIndex', 'ArgsCount': 3, 'MethodBody': 'public Bitmap drawTileQueryIndex(int x, int y, int zoom) {\n\n        // Get the web mercator bounding box\n        BoundingBox webMercatorBoundingBox = TileBoundingBoxUtils\n                .getWebMercatorBoundingBox(x, y, zoom);\n\n        Bitmap bitmap = null;\n\n        // Query for geometries matching the bounds in the index\n        FeatureIndexResults results = queryIndexedFeatures(webMercatorBoundingBox);\n\n        try {\n\n            long tileCount = results.count();\n\n            // Draw if at least one geometry exists\n            if (tileCount > 0) {\n\n                if (maxFeaturesPerTile == null || tileCount <= maxFeaturesPerTile.longValue()) {\n\n                    // Draw the tile bitmap\n                    bitmap = drawTile(zoom, webMercatorBoundingBox, results);\n\n                } else if (maxFeaturesTileDraw != null) {\n\n                    // Draw the max features tile\n                    bitmap = maxFeaturesTileDraw.drawTile(tileWidth, tileHeight, tileCount, results);\n                }\n\n            }\n        } finally {\n            results.close();\n        }\n\n        return bitmap;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java'}, {'Syntax': 'drawTileQueryAll(x, y, zoom)', 'FunctionName': 'drawTileQueryAll', 'ArgsCount': 3, 'MethodBody': 'public Bitmap drawTileQueryAll(int x, int y, int zoom) {\n\n        BoundingBox boundingBox = TileBoundingBoxUtils\n                .getWebMercatorBoundingBox(x, y, zoom);\n\n        Bitmap bitmap = null;\n\n        // Query for all features\n        FeatureCursor cursor = featureDao.queryForAll();\n\n        try {\n\n            int totalCount = cursor.getCount();\n\n            // Draw if at least one geometry exists\n            if (totalCount > 0) {\n\n                if (maxFeaturesPerTile == null || totalCount <= maxFeaturesPerTile) {\n\n                    // Draw the tile bitmap\n                    bitmap = drawTile(zoom, boundingBox, cursor);\n\n                } else if (maxFeaturesTileDraw != null) {\n\n                    // Draw the unindexed max features tile\n                    bitmap = maxFeaturesTileDraw.drawUnindexedTile(tileWidth, tileHeight, totalCount, cursor);\n                }\n\n            }\n        } finally {\n            cursor.close();\n        }\n\n        return bitmap;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java'}]"
6621cd82cda9bd4817b10f83,rupertlssmith/lojix,"public void cleanUp()
    {
        if (oos != null)
        {
            try
            {
                oos.close();
            }
            catch (IOException e)
            {
                LogLog.error(""Could not close oos."", e);
            }

            oos = null;
        }

        if (connector != null)
        {
            // LogLog.debug(""Interrupting the connector."");
            connector.interrupted = true;
            connector = null; // allow gc
        }
    }",Drop the connection to the remote host and release the underlying connector thread if it has been created .,base/base/src/main/com/thesett/util/log4j/SilentFailSocketAppender.java,"[{'Syntax': 'oos.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'public void close()\n    {\n    }', 'FileName': '/rupertlssmith/lojix/base/base/src/main/com/thesett/util/log4j/LoggingToLog4JHandler.java'}]"
6621cd82cda9bd4817b10f84,streamsets/datacollector,"private static boolean isSystemClass(String name, List<String> packageList) {
    boolean result = false;
    if (packageList != null) {
      String canonicalName = ClassLoaderUtil.canonicalizeClassOrResource(name);
      for (String c : packageList) {
        boolean shouldInclude = true;
        if (c.startsWith(""-"")) {
          c = c.substring(1);
          shouldInclude = false;
        }
        if (canonicalName.startsWith(c)) {
          if ( c.endsWith(""."")                                   // package
            || canonicalName.length() == c.length()              // class
            ||    canonicalName.length() > c.length()            // nested
            && canonicalName.charAt(c.length()) == '$' ) {
            if (shouldInclude) {
              result = true;
            } else {
              return false;
            }
          }
        }
      }
    }
    return result;
  }",Checks if a class should be included as a system class .,bootstrap/src/main/java/com/streamsets/pipeline/SystemPackage.java,[]
6621cd82cda9bd4817b10f85,oblac/jodd,"protected Object convertType(final Object value, final Class targetType) {
		final Class valueClass = value.getClass();

		if (valueClass == targetType) {
			return value;
		}

		try {
			return TypeConverterManager.get().convertType(value, targetType);
		}
		catch (Exception ex) {
			if (!strictTypes) {
				return null;
			}
			throw new JsonException(""Type conversion failed"", ex);
		}
	}",Converts type of the given value .,jodd-json/src/main/java/jodd/json/JsonParserBase.java,"[{'Syntax': 'TypeConverterManager.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public boolean get() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}]"
6621cd82cda9bd4817b10f86,jkuhnert/ognl,"public static String getPackageName(Object o)
    {
        return (o == null) ? null : getClassPackageName(o.getClass());
    }",Returns the package name of the object s class .,src/main/java/ognl/OgnlRuntime.java,"[{'Syntax': 'getClassPackageName(o.getClass())', 'FunctionName': 'getClassPackageName', 'ArgsCount': 1, 'MethodBody': ""public static String getClassPackageName(Class<?> c) {\n        String s = c.getName();\n        int i = s.lastIndexOf('.');\n\n        return (i < 0) ? null : s.substring(0, i);\n    }"", 'FileName': '/jkuhnert/ognl/src/main/java/ognl/OgnlRuntime.java'}]"
6621cd82cda9bd4817b10f87,fuinorg/srcgen4j-core,"public final void addParamTemplate(final ParameterizedTemplateModel paramTemplate) {
        if (paramTemplates == null) {
            paramTemplates = new ArrayList<ParameterizedTemplateModel>();
        }
        paramTemplates.add(paramTemplate);
    }",Adds another template to the list . If the list does not exist it will be created .,src/main/java/org/fuin/srcgen4j/core/velocity/ParameterizedTemplateModels.java,[]
6621cd82cda9bd4817b10f88,RestComm/jain-slee,"public static Object getSbbUsageParameterSet(SbbEntity sbbEntity, String name)
			throws UnrecognizedUsageParameterSetNameException {
		if (logger.isTraceEnabled()) {
			logger.trace(""getSbbUsageParameterSet(): serviceId = ""
					+ sbbEntity.getSbbEntityId().getServiceID() + "" , sbbID = ""
					+ sbbEntity.getSbbId() + "" , name = "" + name);
		}
		return getServiceUsageMBeanImpl(sbbEntity.getSbbEntityId().getServiceID())
				.getInstalledUsageParameterSet(sbbEntity.getSbbId(), name);
	}",SBB USAGE PARAMS,container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbAbstractMethodHandler.java,"[{'Syntax': 'sbbEntity.getSbbEntityId().getServiceID()', 'FunctionName': 'getServiceID', 'ArgsCount': 0, 'MethodBody': 'public ServiceID getServiceID();', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ServiceConfigurationUpdateEvent.java'}, {'Syntax': 'sbbEntity.getSbbEntityId()', 'FunctionName': 'getSbbEntityId', 'ArgsCount': 0, 'MethodBody': 'public String getSbbEntityId() {\r\n    return sbbEntityId;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/sbb/entity/SbbEntityInfo.java'}, {'Syntax': 'sbbEntity.getSbbId()', 'FunctionName': 'getSbbId', 'ArgsCount': 0, 'MethodBody': 'public String getSbbId() {\r\n    return sbbId;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/sbb/entity/SbbEntityInfo.java'}, {'Syntax': 'getServiceUsageMBeanImpl(sbbEntity.getSbbEntityId().getServiceID())\n\t\t\t\t.getInstalledUsageParameterSet(sbbEntity.getSbbId(), name)', 'FunctionName': 'getInstalledUsageParameterSet', 'ArgsCount': 2, 'MethodBody': 'public AbstractUsageParameterSet getInstalledUsageParameterSet(\r\n\t\t\tSbbID sbbID, String name)\r\n\t\t\tthrows UnrecognizedUsageParameterSetNameException {\r\n\t\tif (name == null) {\r\n\t\t\tthrow new NullPointerException(""null name"");\r\n\t\t}\r\n\t\tAbstractUsageParameterSet installedUsageParameterSet = _getInstalledUsageParameterSet(\r\n\t\t\t\tsbbID, name);\r\n\t\tif (installedUsageParameterSet == null) {\r\n\t\t\tthrow new UnrecognizedUsageParameterSetNameException(name);\r\n\t\t}\r\n\t\treturn installedUsageParameterSet;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/usage/src/main/java/org/mobicents/slee/container/management/jmx/ServiceUsageMBeanImpl.java'}, {'Syntax': 'getServiceUsageMBeanImpl(sbbEntity.getSbbEntityId().getServiceID())', 'FunctionName': 'getServiceUsageMBeanImpl', 'ArgsCount': 1, 'MethodBody': 'private static ServiceUsageMBeanImpl getServiceUsageMBeanImpl(\n\t\t\tServiceID serviceID) {\n\t\treturn (ServiceUsageMBeanImpl) sleeContainer\n\t\t\t\t.getComponentRepository().getComponentByID(serviceID)\n\t\t\t\t.getServiceUsageMBean();\n\t}', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbAbstractMethodHandler.java'}, {'Syntax': 'sbbEntity.getSbbEntityId().getServiceID()', 'FunctionName': 'getServiceID', 'ArgsCount': 0, 'MethodBody': 'public ServiceID getServiceID();', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ServiceConfigurationUpdateEvent.java'}, {'Syntax': 'sbbEntity.getSbbEntityId()', 'FunctionName': 'getSbbEntityId', 'ArgsCount': 0, 'MethodBody': 'public String getSbbEntityId() {\r\n    return sbbEntityId;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/sbb/entity/SbbEntityInfo.java'}, {'Syntax': 'sbbEntity.getSbbId()', 'FunctionName': 'getSbbId', 'ArgsCount': 0, 'MethodBody': 'public String getSbbId() {\r\n    return sbbId;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/sbb/entity/SbbEntityInfo.java'}]"
6621cd82cda9bd4817b10f89,apache/parquet-mr,"public Map<String, String> toExtraMetaData() {
    final Map<String, String> map = new HashMap<String, String>();
    map.put(THRIFT_CLASS, getThriftClass().getName());
    map.put(THRIFT_DESCRIPTOR, descriptor.toJSON());
    return map;
  }",generates a map of key values to store in the footer,parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftMetaData.java,"[{'Syntax': 'map.put(THRIFT_CLASS, getThriftClass().getName())', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(final K key, final V newValue) {\n    if (newValue == null || !newValue.isCurrent(key)) {\n      if (LOG.isWarnEnabled()) {\n        LOG.warn(\n            ""Ignoring new cache entry for \'{}\' because it is {}"",\n            key,\n            (newValue == null ? ""null"" : ""not current""));\n      }\n      return;\n    }\n\n    V oldValue = cacheMap.get(key);\n    if (oldValue != null && oldValue.isNewerThan(newValue)) {\n      if (LOG.isWarnEnabled()) {\n        LOG.warn(""Ignoring new cache entry for \'{}\' because "" + ""existing cache entry is newer"", key);\n      }\n      return;\n    }\n\n    // no existing value or new value is newer than old value\n    oldValue = cacheMap.put(key, newValue);\n    if (LOG.isDebugEnabled()) {\n      if (oldValue == null) {\n        LOG.debug(""Added new cache entry for \'{}\'"", key);\n      } else {\n        LOG.debug(""Overwrote existing cache entry for \'{}\'"", key);\n      }\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/LruCache.java'}, {'Syntax': 'getThriftClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n      return name;\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/filter2/recordlevel/PhoneBookWriter.java'}, {'Syntax': 'getThriftClass()', 'FunctionName': 'getThriftClass', 'ArgsCount': 0, 'MethodBody': 'public Class<?> getThriftClass() {\n    if (thriftClass == null) {\n      thriftClass = getThriftClass(thriftClassName);\n    }\n    return thriftClass;\n  }', 'FileName': '/apache/parquet-mr/parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftMetaData.java'}, {'Syntax': 'map.put(THRIFT_DESCRIPTOR, descriptor.toJSON())', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(final K key, final V newValue) {\n    if (newValue == null || !newValue.isCurrent(key)) {\n      if (LOG.isWarnEnabled()) {\n        LOG.warn(\n            ""Ignoring new cache entry for \'{}\' because it is {}"",\n            key,\n            (newValue == null ? ""null"" : ""not current""));\n      }\n      return;\n    }\n\n    V oldValue = cacheMap.get(key);\n    if (oldValue != null && oldValue.isNewerThan(newValue)) {\n      if (LOG.isWarnEnabled()) {\n        LOG.warn(""Ignoring new cache entry for \'{}\' because "" + ""existing cache entry is newer"", key);\n      }\n      return;\n    }\n\n    // no existing value or new value is newer than old value\n    oldValue = cacheMap.put(key, newValue);\n    if (LOG.isDebugEnabled()) {\n      if (oldValue == null) {\n        LOG.debug(""Added new cache entry for \'{}\'"", key);\n      } else {\n        LOG.debug(""Overwrote existing cache entry for \'{}\'"", key);\n      }\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/LruCache.java'}, {'Syntax': 'descriptor.toJSON()', 'FunctionName': 'toJSON', 'ArgsCount': 0, 'MethodBody': 'public String toJSON() {\n    return JSON.toJSON(this);\n  }', 'FileName': '/apache/parquet-mr/parquet-thrift/src/main/java/org/apache/parquet/thrift/struct/ThriftType.java'}]"
6621cd82cda9bd4817b10f8a,Unidata/thredds,"private void getMoreBytes() throws IOException {
        currentOffset = 0;   // reset current array offset to 0
        int bytesRead = 0;   // bytes read so far
        int lookingFor = 0;  // character in endSequence to look for
        for (; bytesRead < lineBuf.length; bytesRead++) {
            int c = in.read();
            if (c == -1)
                break;  // break on EOL and return what we have so far

            lineBuf[bytesRead] = (byte) c;
            if (lineBuf[bytesRead] == endSequence[lookingFor]) {
                lookingFor++;
                if (lookingFor == endSequence.length) {
                    endFound = true;
                    break;
                }
            } else if (lineBuf[bytesRead] == endSequence[0]) { // CHANGED JC
                lookingFor = 1;
            } else {
                lookingFor = 0;
            }
        }
        bytesRemaining = bytesRead;  // number of bytes we've read
    }",Get more bytes into buffer . Stop when endSequence is found .,opendap/src/main/java/opendap/dap/HeaderInputStream.java,[]
6621cd82cda9bd4817b10f8b,Unidata/thredds,"private int loadData() {
    if (!headerLoaded) return -1;
    if (dataLoaded) return 0;
    InputStream s = stream;
    if (s == null) return -1;
    try {
      /* read in the data */
      for (int i = 0; i < nrecords; i++) {
        /* read the data record indicator */
        byte recbyte = ds.readByte();
        if (recbyte == 0x20) {
          for (int j = 0; j < nfields; j++) {
            data[j].readRowN(ds, i);
          }
        } else {
          /* a deleted record */
          nrecords--;
          i--;
        }
      }
      dataLoaded = true;
    } catch (java.io.IOException e) {
      close(s);
      return -1;
    } finally {
      close(s);
    }
    return 0;
  }",Load the dbase file data .,ui/src/main/java/ucar/nc2/ui/gis/shapefile/DbaseFile.java,[]
6621cd82cda9bd4817b10f8c,oblac/jodd,"public void useProfile(final String profile) {
		if (profile == null) {
			return;
		}
		if (this.enabledProfiles == null) {
			this.enabledProfiles = new HashSet<>();
		}
		this.enabledProfiles.add(profile);
	}",Enables single profile .,jodd-vtor/src/main/java/jodd/vtor/Vtor.java,"[{'Syntax': 'this.enabledProfiles.add(profile)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cd82cda9bd4817b10f8d,streamsets/datacollector,"public Collection<V> getInwardEdgeVertices(V vertex) {
    Collection<V> inwardEdgeVerticesForVertex =  inwardEdgesVertices.get(vertex);
    return inwardEdgeVerticesForVertex != null ? inwardEdgeVerticesForVertex : Collections.<V>emptySet();
  }",Returns the inward flowing edge vertices .,jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/multithread/util/DirectedGraph.java,[]
6621cd82cda9bd4817b10f8e,rupertlssmith/lojix,"public E poll()
    {
        /*log.fine(""public E poll(): called"");*/

        // This is used to keep track of the level of the list that is found to have data in it.
        int currentLevel = 0;

        while (true)
        {
            // This is used to locate the marker head of a list that contains data.
            Marker<E> h = null;

            // This is used to locate the potential data node of a list with data in it. Another thread may already
            // have taken this data.
            Node<E> first = null;

            // Second data item, may also be tail marker, first data item of next list, or null at end of last list.
            Node<E> second = null;

            // Loop down any empty lists at the front of the queue until a list with data in it is found.
            for (; currentLevel < n; currentLevel++)
            {
                h = markers[currentLevel];
                first = h.getNext();
                second = first.getNext();

                // Check if the list at the current level is not empty and should be tried for data.
                if (!h.isEmpty(markers[currentLevel + 1]))
                {
                    break;
                }

                // Check if the current level is empty and is the last level, in which case return null.
                else if (currentLevel == (n - 1))
                {
                    // log.info(""returning null from level loop."");

                    return null;
                }

                // Else if the current level is empty loop to the next one to see if it has data.
            }

            /*log.fine(""current poll level = "" + currentLevel);*/

            // This is used to locate the tail of the list that has been found with data in it.
            Node<E> t = markers[currentLevel + 1].getTail();

            // Check that the first data item has not yet been taken. Another thread may already have taken it,
            // in which case performing a relatively expensive cas on the head will fail. If first is still intact
            // then second will be intact too.
            if (first == h.getNext())
            {
                // Check if the queue has become empty.
                if (h.isEmpty(markers[currentLevel + 1]))
                {
                    // Another thread has managed to take data from the queue, leaving it empty.

                    // First won't be null. It may point to tail though...
                    if (first == null)
                    {
                        // Don't want to return here, want to try the next list. The list loop has a return null
                        // once it gets to the end to take care of that.
                        // log.info(""returning null as first == null"");

                        return null;
                    }
                    else
                    {
                        // Not sure yet why castail here? Does this repair a broken tail ref left after the last item
                        // was taken?
                        markers[currentLevel + 1].casTail(t, first);
                    }
                }

                // The queue contains data, so try to move its head marker reference from the first data item, onto the
                // second item (which may be data, or the tail marker). If this succeeds, then the first data node
                // has been atomically extracted from the head of the queue.
                else if (h.casNext(first, second))
                {
                    // h Does not refer to an empty queue, so first must be a data node.
                    DataNode<E> firstDataNode = ((DataNode<E>) first);
                    E item = firstDataNode.getItem();

                    // Even though the empty test did not indicate that the list was empty, it may contain null
                    // data items, because the remove method doesn't extract nodes on a remove. These need to be skipped
                    // over. Could they be removed here?
                    if (item != null)
                    {
                        firstDataNode.setItem(null);

                        /*log.fine(""returing item = "" + item);*/

                        // Decrement the queue size count.
                        count.decrementAndGet();

                        return item;
                    }

                    // else skip over deleted item, continue trying at this level. Go back an retry starting from same
                    // level. List at this level may now be empty, or may get the next item from it.

                    // else skip over marker element. just make markers return null for item to skip them? No, because
                    // need to advance currentLevel and get head and tail markers for the next level. but then, next
                    // level advance will occur when this level is retried and found to be empty won't it?
                }
            }
        }
    }",Retrieves and removes the head of this queue or null if this queue is empty .,base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java,"[{'Syntax': 'h.getNext()', 'FunctionName': 'getNext', 'ArgsCount': 0, 'MethodBody': 'Node<E> getNext()\n        {\n            return next;\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}, {'Syntax': 'first.getNext()', 'FunctionName': 'getNext', 'ArgsCount': 0, 'MethodBody': 'Node<E> getNext()\n        {\n            return next;\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}, {'Syntax': 'h.isEmpty(markers[currentLevel + 1])', 'FunctionName': 'isEmpty', 'ArgsCount': 1, 'MethodBody': 'public static boolean isEmpty(String s)\n    {\n        return ((s == null) || """".equals(s));\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/validate/Validation.java'}, {'Syntax': 'markers[currentLevel + 1].getTail()', 'FunctionName': 'getTail', 'ArgsCount': 0, 'MethodBody': 'Node<E> getTail()\n        {\n            return tail;\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}, {'Syntax': 'h.getNext()', 'FunctionName': 'getNext', 'ArgsCount': 0, 'MethodBody': 'Node<E> getNext()\n        {\n            return next;\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}, {'Syntax': 'h.isEmpty(markers[currentLevel + 1])', 'FunctionName': 'isEmpty', 'ArgsCount': 1, 'MethodBody': 'public static boolean isEmpty(String s)\n    {\n        return ((s == null) || """".equals(s));\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/validate/Validation.java'}, {'Syntax': 'markers[currentLevel + 1].casTail(t, first)', 'FunctionName': 'casTail', 'ArgsCount': 2, 'MethodBody': 'boolean casTail(Node<E> cmp, Node<E> val)\n        {\n            return TAIL_UPDATER.compareAndSet(this, cmp, val);\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}, {'Syntax': 'h.casNext(first, second)', 'FunctionName': 'casNext', 'ArgsCount': 2, 'MethodBody': 'boolean casNext(Node<E> cmp, Node<E> val)\n        {\n            return NEXT_UPDATER.compareAndSet(this, cmp, val);\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}, {'Syntax': 'firstDataNode.getItem()', 'FunctionName': 'getItem', 'ArgsCount': 0, 'MethodBody': 'E getItem()\n        {\n            return item;\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}, {'Syntax': 'firstDataNode.setItem(null)', 'FunctionName': 'setItem', 'ArgsCount': 1, 'MethodBody': 'void setItem(E val)\n        {\n            ITEM_UPDATER.set(this, val);\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java'}]"
6621cd82cda9bd4817b10f8f,kiegroup/droolsjbpm-tools,"public void skipWhiteSpace() {
        while (pos < s.length() && Character.isWhitespace(s.charAt(pos)))
            ++pos;
    }",Skips the next sequence of white space in s . An exception is not thrown if there is no matching white space .,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/internal/authentication/Parser.java,"[{'Syntax': 's.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public long length() {\n        return length;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/RequestInputStream.java'}, {'Syntax': 'Character.isWhitespace(s.charAt(pos))', 'FunctionName': 'isWhitespace', 'ArgsCount': 1, 'MethodBody': 'public boolean isWhitespace(char character) {\n        return Character.isWhitespace(character);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/scanners/WhitespaceDetector.java'}]"
6621cd82cda9bd4817b10f90,boonproject/boon,"public static int parseInt( String buffer, int from, int to ) {
        return CharScanner.parseInt( FastStringUtils.toCharArray(buffer), from , to );
    }",parse an int within a range,boon/src/main/java/org/boon/StringScanner.java,"[{'Syntax': 'CharScanner.parseInt( FastStringUtils.toCharArray(buffer), from , to )', 'FunctionName': 'parseInt', 'ArgsCount': 3, 'MethodBody': 'public static int parseInt( String buffer, int from, int to ) {\n        return CharScanner.parseInt( FastStringUtils.toCharArray(buffer), from , to );\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/StringScanner.java'}, {'Syntax': 'FastStringUtils.toCharArray(buffer)', 'FunctionName': 'toCharArray', 'ArgsCount': 1, 'MethodBody': '@Override\n            public char[] toCharArray(String string) {\n                return (char[]) UNSAFE.getObject(string, STRING_VALUE_FIELD_OFFSET);\n            }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/FastStringUtils.java'}]"
6621cd83cda9bd4817b10f91,basis-technology-corp/tcl-regex-java,"void copyins(State old, State newState) {
        Arc a;

        assert old != newState;

        for (a = old.ins; a != null; a = a.inchain) {
            cparc(a, a.from, newState);
        }
    }",copyins - copy all in arcs of a state to another state,src/main/java/com/basistech/tclre/Nfa.java,"[{'Syntax': 'cparc(a, a.from, newState)', 'FunctionName': 'cparc', 'ArgsCount': 3, 'MethodBody': 'void cparc(Arc oa, State from, State to) {\n        newarc(oa.type, oa.co, from, to);\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Nfa.java'}]"
6621cd83cda9bd4817b10f92,ngageoint/geopackage-android,"public void setFeatureStyles(String featureTable, long featureId,
                                 FeatureStyles featureStyles) {
        if (featureStyles != null) {
            setStyles(featureTable, featureId, featureStyles.getStyles());
            setIcons(featureTable, featureId, featureStyles.getIcons());
        } else {
            deleteStyles(featureTable, featureId);
            deleteIcons(featureTable, featureId);
        }
    }",Set the feature styles for the feature table and feature id,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,"[{'Syntax': 'setStyles(featureTable, featureId, featureStyles.getStyles())', 'FunctionName': 'setStyles', 'ArgsCount': 3, 'MethodBody': 'public void setStyles(String featureTable, long featureId, Styles styles) {\n        deleteStyles(featureTable, featureId);\n\n        if (styles != null) {\n\n            if (styles.getDefault() != null) {\n                setStyleDefault(featureTable, featureId, styles.getDefault());\n            }\n\n            for (Entry<GeometryType, StyleRow> style : styles.getStyles()\n                    .entrySet()) {\n                setStyle(featureTable, featureId, style.getKey(),\n                        style.getValue());\n            }\n\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}, {'Syntax': 'featureStyles.getStyles()', 'FunctionName': 'getStyles', 'ArgsCount': 0, 'MethodBody': 'public Map<Long, StyleRow> getStyles() {\n        return featureStyleExtension.getStyles(tableName);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureTableStyles.java'}, {'Syntax': 'setIcons(featureTable, featureId, featureStyles.getIcons())', 'FunctionName': 'setIcons', 'ArgsCount': 3, 'MethodBody': 'public void setIcons(String featureTable, long featureId, Icons icons) {\n        deleteIcons(featureTable, featureId);\n\n        if (icons != null) {\n\n            if (icons.getDefault() != null) {\n                setIconDefault(featureTable, featureId, icons.getDefault());\n            }\n\n            for (Entry<GeometryType, IconRow> icon : icons.getIcons()\n                    .entrySet()) {\n                setIcon(featureTable, featureId, icon.getKey(), icon.getValue());\n            }\n\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}, {'Syntax': 'featureStyles.getIcons()', 'FunctionName': 'getIcons', 'ArgsCount': 0, 'MethodBody': 'public Map<Long, IconRow> getIcons() {\n        return featureStyleExtension.getIcons(tableName);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureTableStyles.java'}, {'Syntax': 'deleteStyles(featureTable, featureId)', 'FunctionName': 'deleteStyles', 'ArgsCount': 2, 'MethodBody': 'public void deleteStyles(String featureTable, long featureId) {\n        deleteMappings(getStyleMappingDao(featureTable), featureId);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}, {'Syntax': 'deleteIcons(featureTable, featureId)', 'FunctionName': 'deleteIcons', 'ArgsCount': 2, 'MethodBody': 'public void deleteIcons(String featureTable, long featureId) {\n        deleteMappings(getIconMappingDao(featureTable), featureId);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}]"
6621cd83cda9bd4817b10f93,oaqa/baseqa,"public void setId(String v) {
    if (ConceptType_Type.featOkTst && ((ConceptType_Type)jcasType).casFeat_id == null)
      jcasType.jcas.throwFeatMissing(""id"", ""edu.cmu.lti.oaqa.type.kb.ConceptType"");
    jcasType.ll_cas.ll_setStringValue(addr, ((ConceptType_Type)jcasType).casFeatCode_id, v);}",setter for id - sets The id of the concept type .,src/main/java/edu/cmu/lti/oaqa/type/kb/ConceptType.java,[]
6621cd83cda9bd4817b10f94,kiegroup/droolsjbpm-tools,"public String getJobStatus(final String jobId, final String title) throws IOException, InterruptedException {
		final AtomicReference<String> ar = new AtomicReference<String>();

		IWorkbench wb = PlatformUI.getWorkbench();
		IProgressService ps = wb.getProgressService();
		try {
			ps.busyCursorWhile(new IRunnableWithProgress() {
				public void run(IProgressMonitor pm) throws InterruptedException {
					pm.beginTask(""Waiting for Job ""+jobId+"":\n\n""+title, STATUS_REQUEST_TIMEOUT);
					pm.subTask(title);
					long startTime = System.currentTimeMillis();
					long stopTime = startTime;
					do {
						try {
							// send a Job Status request every STATUS_REQUEST_DELAY milliseconds
							Thread.sleep(STATUS_REQUEST_DELAY);
							String response = httpGet(""jobs/"" + jobId);
							JsonObject jo = JsonObject.readFrom(response);
							String status = jo.get(""status"").asString();
							String result = jo.get(""result"").asString();
							if (""null"".equals(result)) {
								if (!""SUCCESS"".equals(status))
									result = null;
							}
							if (status!=null && result!=null)
								ar.set(status + "":"" + result);
							stopTime = System.currentTimeMillis();
							pm.worked(STATUS_REQUEST_DELAY);

							Activator.println(""status=""+status);
							Activator.println(""result=""+result);
						}
						catch (Exception e) {
							e.printStackTrace();
						}
						if (pm.isCanceled())
							throw new InterruptedException(""Operation canceled"");
					}
					while (ar.get()==null && stopTime - startTime < STATUS_REQUEST_TIMEOUT);
					pm.done();
					Activator.println(
							""\n----------------------------------\n""+
							""Job ""+jobId+""\n""+title+""\ncompleted in ""+(stopTime - startTime) / 1000.0+"" sec\n""+
							""Status: "" + ar.get()+
							""\n----------------------------------\n"");
				}
			});
		}
		catch (InvocationTargetException e) {
			e.printStackTrace();
			return null;
		}

		return ar.get();
	}",Sends a job status request to the KIE Server .,drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/server/KieServiceDelegate.java,"[{'Syntax': 'httpGet(""jobs/"" + jobId)', 'FunctionName': 'httpGet', 'ArgsCount': 1, 'MethodBody': 'protected String httpGet(String request) throws IOException {\n\t\tString host = getKieRESTUrl();\n\t\tURL url = new URL(host + ""/"" + request);\n\t\tActivator.println(""[GET] ""+url.toString());\n\t\tHttpURLConnection conn = (HttpURLConnection) url.openConnection();\n\t\tconn.setRequestMethod(""GET"");\n\t\tconn.setRequestProperty(""Content"", ""application/json"");\n\t\tsetHttpCredentials(conn);\n\t\tString response = new BufferedReader(new InputStreamReader((conn.getInputStream()))).readLine();\n\t\tActivator.println(""[GET] response: ""+response);\n\t\treturn response;\n\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/server/KieServiceDelegate.java'}, {'Syntax': 'JsonObject.readFrom(response)', 'FunctionName': 'readFrom', 'ArgsCount': 1, 'MethodBody': 'public static JsonArray readFrom( Reader reader ) throws IOException {\n    return JsonValue.readFrom( reader ).asArray();\n  }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/com/eclipsesource/json/JsonArray.java'}, {'Syntax': 'jo.get(""status"").asString()', 'FunctionName': 'asString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String asString() {\n    return string;\n  }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/com/eclipsesource/json/JsonString.java'}, {'Syntax': 'jo.get(""status"")', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Row get(final int row) {\n        return (Row) this.rows.get( row );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/RowList.java'}, {'Syntax': 'jo.get(""result"").asString()', 'FunctionName': 'asString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String asString() {\n    return string;\n  }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/com/eclipsesource/json/JsonString.java'}, {'Syntax': 'jo.get(""result"")', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Row get(final int row) {\n        return (Row) this.rows.get( row );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/RowList.java'}, {'Syntax': '""null"".equals(result)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': '""SUCCESS"".equals(status)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': 'ar.set(status + "":"" + result)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'public void set(String text) {\n            this.fContent = text;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/dsl/editor/TransformedDocument.java'}, {'Syntax': 'Activator.println(""status=""+status)', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public static void println(Object arg) {\n\t\tif (debug)\n\t\t\tSystem.out.println(arg);\n\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/Activator.java'}, {'Syntax': 'Activator.println(""result=""+result)', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public static void println(Object arg) {\n\t\tif (debug)\n\t\t\tSystem.out.println(arg);\n\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/Activator.java'}, {'Syntax': 'e.printStackTrace()', 'FunctionName': 'printStackTrace', 'ArgsCount': 0, 'MethodBody': 'public void printStackTrace() {\n        Throwable wrappedException = getWrappedException();\n        if (wrappedException != null)\n            wrappedException.printStackTrace();\n        else\n            super.printStackTrace();\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/DAV4JRuntimeException.java'}, {'Syntax': 'Activator.println(\n\t\t\t\t\t\t\t""\\n----------------------------------\\n""+\n\t\t\t\t\t\t\t""Job ""+jobId+""\\n""+title+""\\ncompleted in ""+(stopTime - startTime) / 1000.0+"" sec\\n""+\n\t\t\t\t\t\t\t""Status: "" + ar.get()+\n\t\t\t\t\t\t\t""\\n----------------------------------\\n"")', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public static void println(Object arg) {\n\t\tif (debug)\n\t\t\tSystem.out.println(arg);\n\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/Activator.java'}, {'Syntax': 'e.printStackTrace()', 'FunctionName': 'printStackTrace', 'ArgsCount': 0, 'MethodBody': 'public void printStackTrace() {\n        Throwable wrappedException = getWrappedException();\n        if (wrappedException != null)\n            wrappedException.printStackTrace();\n        else\n            super.printStackTrace();\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/DAV4JRuntimeException.java'}]"
6621cd83cda9bd4817b10f95,GlenKPeterson/Paguro,"public static <K,V> PersistentTreeMap<K,V> empty(Comparator<? super K> c) {
        return new PersistentTreeMap<>(c, null, 0);
    }",Returns a new empty PersistentTreeMap that will use the specified comparator .,src/main/java/org/organicdesign/fp/collections/PersistentTreeMap.java,[]
6621cd83cda9bd4817b10f96,oblac/jodd,"protected JsonResult tokenAsJson(final T authToken) {
		final JsonObject jsonObject = new JsonObject();

		jsonObject.put(""token"", userAuth.tokenValue(authToken));

		return JsonResult.of(jsonObject);
	}",Prepares the JSON payload that carries on the token value .,jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java,"[{'Syntax': 'jsonObject.put(""token"", userAuth.tokenValue(authToken))', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void put(final K key, final V object) {\n\t\tput(key, object, timeout);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'userAuth.tokenValue(authToken)', 'FunctionName': 'tokenValue', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic String tokenValue(final SimTok authToken) {\n\t\treturn new SimTokCoder().encode(authToken);\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/test/java/jodd/joy/fixtures/MyUserAuth.java'}, {'Syntax': 'JsonResult.of(jsonObject)', 'FunctionName': 'of', 'ArgsCount': 1, 'MethodBody': 'public static MutableBoolean of(final boolean value) {\n\t\treturn new MutableBoolean(value);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}]"
6621cd83cda9bd4817b10f97,RestComm/jain-slee,"public void setAsText(String text ) {
        if ( text == null || text.equals("""")) {
            super.setValue( new ComponentID[0]);
        } else {
            java.util.ArrayList results = new java.util.ArrayList();
            // the format for component ID is name vendor version.
            java.util.StringTokenizer st = new java.util.StringTokenizer(text,CID_SEPARATOR,true);
            ComponentIDPropertyEditor cidPropEditor = new ComponentIDPropertyEditor();
            while (st.hasMoreTokens()) {
                cidPropEditor.setAsText(st.nextToken());
                if (st.hasMoreTokens()) {
                	st.nextToken();
                }
                results.add(cidPropEditor.getValue());
            }
            ComponentID[] cid = new ComponentID[results.size()];
            results.toArray(cid);
            this.setValue(cid);
        }
        
    }",Set the element as text value parse it and setValue . The separator is CID_SEPARATOR,container/jmx-property-editors/src/main/java/org/mobicents/slee/container/management/jmx/editors/ComponentIDArrayPropertyEditor.java,"[{'Syntax': 'text.equals("""")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'super.setValue( new ComponentID[0])', 'FunctionName': 'setValue', 'ArgsCount': 1, 'MethodBody': 'public void setValue(Object value) throws IllegalArgumentException {\n            if (value == null) {\n                this.value = null;\n                return;\n            }\n\n            if (isAssignable(value.getClass(), type)) {\n                this.value = value;\n            }\n            else {\n                throw new IllegalArgumentException(""Value is of type "" + value.getClass().getName() + "", required type is "" + type);\n            }\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'cidPropEditor.setAsText(st.nextToken())', 'FunctionName': 'setAsText', 'ArgsCount': 1, 'MethodBody': 'public void setAsText(String text ) {\r\n        if ( text == null || text.equals("""")) {\r\n            super.setValue( new SbbEntityID[0]);\r\n        } else {\r\n            java.util.ArrayList<SbbEntityID> results = new java.util.ArrayList<SbbEntityID>();\r\n            // the format for component ID is name vendor version.\r\n            java.util.StringTokenizer st = new java.util.StringTokenizer(text,CID_SEPARATOR,true);\r\n            SbbEntityIDPropertyEditor cidPropEditor = new SbbEntityIDPropertyEditor();\r\n            while (st.hasMoreTokens()) {\r\n                cidPropEditor.setAsText(st.nextToken());\r\n                if (st.hasMoreTokens()) {\r\n                \tst.nextToken();\r\n                }\r\n                results.add((SbbEntityID)cidPropEditor.getValue());\r\n            }\r\n            SbbEntityID[] cid = new SbbEntityID[results.size()];\r\n            results.toArray(cid);\r\n            this.setValue(cid);\r\n        }\r\n        \r\n    }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/container/management/jmx/editors/SbbEntityIDArrayPropertyEditor.java'}, {'Syntax': 'results.add(cidPropEditor.getValue())', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(Button button) {\r\n    rootPanel.add(button);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/common/ToolBar.java'}, {'Syntax': 'cidPropEditor.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public long getValue() {\r\n    return value;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/usage/CounterTypeUsageParameterInfo.java'}, {'Syntax': 'results.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n        return sbbEntity.cacheData.getChildRelationSbbEntities(getChildRelationMethod.getChildRelationMethodName()).size();\n    }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}, {'Syntax': 'results.toArray(cid)', 'FunctionName': 'toArray', 'ArgsCount': 1, 'MethodBody': 'public static ActivityContextIdLabel[] toArray(String[] ids) {\r\n    if (ids == null || ids.length == 0)\r\n      return null;\r\n\r\n    ActivityContextIdLabel[] activityContextLabels = new ActivityContextIdLabel[ids.length];\r\n    for (int i = 0; i < ids.length; i++) {\r\n      activityContextLabels[i] = new ActivityContextIdLabel(ids[i]);\r\n    }\r\n\r\n    return activityContextLabels;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/activity/ActivityContextIdLabel.java'}, {'Syntax': 'this.setValue(cid)', 'FunctionName': 'setValue', 'ArgsCount': 1, 'MethodBody': 'public void setValue(Object value) throws IllegalArgumentException {\n            if (value == null) {\n                this.value = null;\n                return;\n            }\n\n            if (isAssignable(value.getClass(), type)) {\n                this.value = value;\n            }\n            else {\n                throw new IllegalArgumentException(""Value is of type "" + value.getClass().getName() + "", required type is "" + type);\n            }\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}]"
6621cd83cda9bd4817b10f98,Unidata/thredds,"public @Nonnull DataRoot convert2DataRoot(DataRootExt dataRootExt) {
    DataRoot dataRoot = dataRootExt.getDataRoot();
    if (dataRoot != null) return dataRoot;

    // otherwise must read the catalog that its in
    dataRoot = readDataRootFromCatalog(dataRootExt);
    dataRootExt.setDataRoot(dataRoot);
    return dataRoot;
  }",convert a dataRootExt to a dataRoot,tdcommon/src/main/java/thredds/server/catalog/DataRootPathMatcher.java,[]
6621cd83cda9bd4817b10f99,kiegroup/droolsjbpm-tools,"public void versionControl() throws DAVException {
        IResponse response = null;
        try {
            response = davClient.versionControl(locator, newContext(), null);
            examineResponse(response);
        } catch (IOException e) {
            throw new SystemException(e);
        } finally {
            closeResponse(response);
        }
    }",Bring the receiver under version control . This means that the receiver is replaced by a version - controlled resource . Note that the client may send version control to a resource that is already under version control with no adverse effects .,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/AbstractResourceHandle.java,"[{'Syntax': 'davClient.versionControl(locator, newContext(), null)', 'FunctionName': 'versionControl', 'ArgsCount': 3, 'MethodBody': 'public IResponse versionControl(ILocator locator, IContext context, Document body) throws IOException;', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/IServer.java'}, {'Syntax': 'newContext()', 'FunctionName': 'newContext', 'ArgsCount': 0, 'MethodBody': 'public IContext newContext();', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/IContextFactory.java'}, {'Syntax': 'examineResponse(response)', 'FunctionName': 'examineResponse', 'ArgsCount': 1, 'MethodBody': 'protected void examineResponse(IResponse response) throws WebDAVException {\n        examineStatusCode(response.getStatusCode(), response.getStatusMessage());\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/AbstractResourceHandle.java'}, {'Syntax': 'closeResponse(response)', 'FunctionName': 'closeResponse', 'ArgsCount': 1, 'MethodBody': 'protected void closeResponse(IResponse response) throws SystemException {\n        if (response == null)\n            return;\n        try {\n            response.close();\n        } catch (IOException e) {\n            throw new SystemException(e);\n        }\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/AbstractResourceHandle.java'}]"
6621cd83cda9bd4817b10f9a,Netflix/hollow,"protected static boolean hasCollectionsInDataSet(HollowDataset dataset) {
        for(HollowSchema schema : dataset.getSchemas()) {
            if ((schema instanceof HollowListSchema) ||
                    (schema instanceof HollowSetSchema) ||
                    (schema instanceof HollowMapSchema)) {
                return true;
            }
        }
        return false;
    }",Determines whether DataSet contains any collections schema,hollow/src/main/java/com/netflix/hollow/api/codegen/HollowAPIGenerator.java,"[{'Syntax': 'dataset.getSchemas()', 'FunctionName': 'getSchemas', 'ArgsCount': 0, 'MethodBody': 'public List<HollowSchema> getSchemas() {\n        List<HollowSchema> schemas = new ArrayList<HollowSchema>(typeDataAccessMap.size());\n        for(Map.Entry<String, HollowHistoricalTypeDataAccess> entry : typeDataAccessMap.entrySet())\n            schemas.add(entry.getValue().getSchema());\n        return schemas;\n    }', 'FileName': '/Netflix/hollow/hollow/src/main/java/com/netflix/hollow/tools/history/HollowHistoricalStateDataAccess.java'}]"
6621cd83cda9bd4817b10f9b,streamsets/datacollector,"public static long checkStreamExists(
      ClientConfiguration awsClientConfig,
      KinesisConfigBean conf,
      String streamName,
      List<Stage.ConfigIssue> issues,
      Stage.Context context
  ) {
    long numShards = 0;

    try {
      numShards = getShardCount(awsClientConfig, conf, streamName);
    } catch (AmazonClientException|StageException e) {
      LOG.error(Errors.KINESIS_01.getMessage(), e.toString(), e);
      issues.add(context.createConfigIssue(
          Groups.KINESIS.name(),
          KINESIS_CONFIG_BEAN + "".streamName"", Errors.KINESIS_01, e.toString()
      ));
    }
    return numShards;
  }",Checks for existence of the requested stream and adds any configuration issues to the list .,kinesis-lib/src/main/java/com/streamsets/pipeline/stage/lib/kinesis/KinesisUtil.java,[]
6621cd83cda9bd4817b10f9c,oblac/jodd,"protected void registerMadvocComponents() {
		if (madvocContainer == null) {
			throw new MadvocException(""Madvoc WebApp not initialized."");
		}

		log.debug(""Registering Madvoc WebApp components"");

		madvocContainer.registerComponent(MadvocEncoding.class);

		madvocContainer.registerComponentInstance(new ServletContextProvider(servletContext));

		madvocContainer.registerComponent(ActionConfigManager.class);
		madvocContainer.registerComponent(ActionMethodParamNameResolver.class);
		madvocContainer.registerComponent(ActionMethodParser.class);
		madvocContainer.registerComponent(ActionPathRewriter.class);
		madvocContainer.registerComponent(ActionsManager.class);
		madvocContainer.registerComponent(ContextInjectorComponent.class);
		madvocContainer.registerComponent(InterceptorsManager.class);
		madvocContainer.registerComponent(FiltersManager.class);
		madvocContainer.registerComponent(MadvocController.class);
		madvocContainer.registerComponent(RootPackages.class);
		madvocContainer.registerComponent(ResultsManager.class);
		madvocContainer.registerComponent(ResultMapper.class);
		madvocContainer.registerComponent(ScopeResolver.class);
		madvocContainer.registerComponent(ScopeDataInspector.class);
		madvocContainer.registerComponent(AsyncActionExecutor.class);
		madvocContainer.registerComponent(FileUploader.class);
	}",Registers default Madvoc components .,jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java,"[{'Syntax': 'madvocContainer.registerComponent(MadvocEncoding.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponentInstance(new ServletContextProvider(servletContext))', 'FunctionName': 'registerComponentInstance', 'ArgsCount': 1, 'MethodBody': 'public void registerComponentInstance(final Object componentInstance) {\n\t\tfinal Class component = componentInstance.getClass();\n\t\tfinal String name = resolveBaseComponentName(component);\n\t\tregisterComponentInstance(name, componentInstance);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/MadvocContainer.java'}, {'Syntax': 'madvocContainer.registerComponent(ActionConfigManager.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ActionMethodParamNameResolver.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ActionMethodParser.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ActionPathRewriter.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ActionsManager.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ContextInjectorComponent.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(InterceptorsManager.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(FiltersManager.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(MadvocController.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(RootPackages.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ResultsManager.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ResultMapper.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ScopeResolver.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(ScopeDataInspector.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(AsyncActionExecutor.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'madvocContainer.registerComponent(FileUploader.class)', 'FunctionName': 'registerComponent', 'ArgsCount': 1, 'MethodBody': 'public WebApp registerComponent(final Class<?> madvocComponent) {\n\t\tObjects.requireNonNull(madvocComponent);\n\t\tmadvocComponents.add(ClassConsumer.of(madvocComponent));\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}]"
6621cd83cda9bd4817b10f9d,jboss/jboss-common-core,"public URLStreamHandler createURLStreamHandler(final String protocol)
   {
      // Check the handler map
      URLStreamHandler handler = (URLStreamHandler) handlerMap.get(protocol);
      if( handler != null )
         return handler;

      // Validate that createURLStreamHandler is not recursing
      String prevProtocol = (String) createURLStreamHandlerProtocol.get();
      if( prevProtocol != null && prevProtocol.equals(protocol) )
         return null;
      createURLStreamHandlerProtocol.set(protocol);

      // See if the handler pkgs definition has changed
      checkHandlerPkgs();

      // Search the handlerPkgs for a matching protocol handler
      ClassLoader ctxLoader = Thread.currentThread().getContextClassLoader();
      for(int p = 0; p < handlerPkgs.length; p ++)
      {
         try
         {
            // Form the standard protocol handler class name
            String classname = handlerPkgs[p] + ""."" + protocol + "".Handler"";
            Class<?> type = null;

            try
            {
               type = ctxLoader.loadClass(classname);
            }
            catch(ClassNotFoundException e)
            {
               // Try our class loader
               type = Class.forName(classname);
            }

            if( type != null )
            {
               handler = (URLStreamHandler) type.newInstance();
               handlerMap.put(protocol, handler);
               log.trace(""Found protocol:""+protocol+"" handler:""+handler);
            }
         }
         catch (Throwable ignore)
         {
         }
      }

      createURLStreamHandlerProtocol.set(null);
      return handler;
   }",Search the handlerPkgs for URLStreamHandler classes matching the pkg + protocol + . Handler naming convention .,src/main/java/org/jboss/net/protocol/URLStreamHandlerFactory.java,"[{'Syntax': 'handlerMap.get(protocol)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(Object key) \n   {\n      TimedEntry entry = (TimedEntry) entryMap.get(key);\n      if( entry == null )\n         return null;\n\n      if( entry.isCurrent(now) == false )\n      {   // Try to refresh the entry\n         if( entry.refresh() == false )\n         {   // Failed, remove the entry and return null\n            entry.destroy();\n            entryMap.remove(key);\n            return null;\n         }\n      }\n      Object value = entry.getValue();\n      return value;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'createURLStreamHandlerProtocol.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public final Object get() throws IllegalAccessException {\n      return field.get(instance);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/FieldInstance.java'}, {'Syntax': 'prevProtocol.equals(protocol)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj)\n   {\n      return obj instanceof TimeoutClientSocketFactory;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/sockets/TimeoutClientSocketFactory.java'}, {'Syntax': 'createURLStreamHandlerProtocol.set(protocol)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'public final void set(final Object value) throws IllegalAccessException {\n      field.set(instance, value);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/FieldInstance.java'}, {'Syntax': 'checkHandlerPkgs()', 'FunctionName': 'checkHandlerPkgs', 'ArgsCount': 0, 'MethodBody': 'private synchronized void checkHandlerPkgs()\n   {\n      String handlerPkgsProp = System.getProperty(""java.protocol.handler.pkgs"");\n      if( handlerPkgsProp != null && handlerPkgsProp.equals(lastHandlerPkgs) == false )\n      {\n         // Update the handlerPkgs[] from the handlerPkgsProp\n         StringTokenizer tokeninzer = new StringTokenizer(handlerPkgsProp, ""|"");\n         ArrayList<String> tmp = new ArrayList<String>();\n         while( tokeninzer.hasMoreTokens() )\n         {\n            String pkg = tokeninzer.nextToken().intern();\n            if( tmp.contains(pkg) == false )\n               tmp.add(pkg);\n         }\n         // Include the JBoss default protocol handler pkg\n         if( tmp.contains(PACKAGE_PREFIX) == false )\n            tmp.add(PACKAGE_PREFIX);\n         handlerPkgs = new String[tmp.size()];\n         tmp.toArray(handlerPkgs);\n         lastHandlerPkgs = handlerPkgsProp;\n      }\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/protocol/URLStreamHandlerFactory.java'}, {'Syntax': 'Thread.currentThread().getContextClassLoader()', 'FunctionName': 'getContextClassLoader', 'ArgsCount': 0, 'MethodBody': 'public ClassLoader getContextClassLoader()\n   {\n      return getContextClassLoader(Thread.currentThread());\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/loading/ContextClassLoader.java'}, {'Syntax': 'ctxLoader.loadClass(classname)', 'FunctionName': 'loadClass', 'ArgsCount': 1, 'MethodBody': 'public static Class loadClass(String className) throws ClassNotFoundException\n   {\n      return loadClass(className, Thread.currentThread().getContextClassLoader());\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Classes.java'}, {'Syntax': 'handlerMap.put(protocol, handler)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public V put(K key, V value)\n   {\n      key = maskNull(key);\n\n      Entry<K, V>[] table = this.table;\n      int hash = hash(key);\n      int length = table.length;\n      int index = index(hash, length);\n\n      for (int start = index; ;)\n      {\n         Entry<K, V> e = table[index];\n         if (e == null)\n            break;\n\n         if (e.hash == hash && eq(key, e.key))\n         {\n            table[index] = new Entry<K, V>(e.key, e.hash, value);\n            return e.value;\n         }\n\n         index = nextIndex(index, length);\n         if (index == start)\n            throw new IllegalStateException(""Table is full!"");\n      }\n\n      modCount++;\n      table[index] = new Entry<K, V>(key, hash, value);\n      if (++size >= threshold)\n         resize(length);\n\n      return null;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}, {'Syntax': 'createURLStreamHandlerProtocol.set(null)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'public final void set(final Object value) throws IllegalAccessException {\n      field.set(instance, value);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/FieldInstance.java'}]"
6621cd83cda9bd4817b10f9e,stanfy/enroscar,"@Override
  protected void sendData(final OutputStream out) throws IOException {
    if (DEBUG) { Log.v(TAG, ""enter sendData(OutputStream)""); }
    out.write(getContent());
  }",Writes the data to the given OutputStream .,net/src/main/java/com/stanfy/enroscar/rest/request/net/multipart/StringPart.java,"[{'Syntax': 'out.write(getContent())', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public synchronized void write(final int oneByte) throws IOException {\n    checkNotClosed();\n    if (count == buf.length) {\n      out.write(buf, 0, count);\n      count = 0;\n    }\n    buf[count++] = (byte) oneByte;\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/PoolableBufferedOutputStream.java'}, {'Syntax': 'getContent()', 'FunctionName': 'getContent', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Object getContent() throws IOException {\n    return contentHandler.getContent(this);\n  }', 'FileName': '/stanfy/enroscar/net/src/main/java/com/stanfy/enroscar/net/ContentControlUrlConnection.java'}]"
6621cd83cda9bd4817b10f9f,Unidata/thredds,"protected double grabDouble(byte[] bytes, int offset)
          throws DescriptorException {
    try {
      byte[] src;
      if (littleEndianData) {
        src = new byte[8];
        src[0] = bytes[offset + 7];
        src[1] = bytes[offset + 6];
        src[2] = bytes[offset + 5];
        src[3] = bytes[offset + 4];
        src[4] = bytes[offset + 3];
        src[5] = bytes[offset + 2];
        src[6] = bytes[offset + 1];
        src[7] = bytes[offset];
        offset = 0;
      } else {
        src = bytes;
      }
      DataInputStream stream =
              new DataInputStream(new ByteArrayInputStream(src, offset, 8));
      return stream.readDouble();
    } catch (Exception ex) {
      throw new DescriptorException(ex);
    }
  }",Unpack an eight - byte IEEE float from the given byte array .,cdm/src/main/java/ucar/atd/dorade/DoradeDescriptor.java,[]
6621cd83cda9bd4817b10fa0,RestComm/jain-slee,"private void checkDependencies(SleeComponent sleeComponent,
			DeployableUnitImpl deployableUnit) throws DependencyException {
		for (ComponentID componentID : sleeComponent.getDependenciesSet()) {
			if (componentID instanceof EventTypeID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((EventTypeID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof LibraryID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((LibraryID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ProfileSpecificationID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ProfileSpecificationID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ResourceAdaptorID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ResourceAdaptorID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ResourceAdaptorTypeID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ResourceAdaptorTypeID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof SbbID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((SbbID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ServiceID) {
				throw new SLEEException(
						""Component ""
								+ sleeComponent.getComponentID()
								+ "" depends on a service component ""
								+ componentID
								+ "" which is not available in the component repository or in the deployable unit"");
			}
		}
	}",Checks if all dependencies of a DU component exists,container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitBuilderImpl.java,"[{'Syntax': 'sleeComponent.getDependenciesSet()', 'FunctionName': 'getDependenciesSet', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic Set<ComponentID> getDependenciesSet() {\r\n\t\treturn descriptor.getDependenciesSet();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()\r\n\t\t\t\t\t\t.getComponentByID((EventTypeID) componentID)', 'FunctionName': 'getComponentByID', 'ArgsCount': 1, 'MethodBody': 'public SbbComponent getComponentByID(SbbID id) {\r\n\r\n\t\t\treturn null;\r\n\t\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/test/java/org/mobicents/slee/container/component/validator/SbbComponentValidatorSbbEventsTest.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()', 'FunctionName': 'getDeployableUnitRepository', 'ArgsCount': 0, 'MethodBody': 'public DeployableUnitRepositoryImpl getDeployableUnitRepository() {\r\n\t\treturn repository;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitImpl.java'}, {'Syntax': 'sleeComponent.getComponentID()', 'FunctionName': 'getComponentID', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic ComponentID getComponentID() {\r\n\t\treturn getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()\r\n\t\t\t\t\t\t.getComponentByID((LibraryID) componentID)', 'FunctionName': 'getComponentByID', 'ArgsCount': 1, 'MethodBody': 'public SbbComponent getComponentByID(SbbID id) {\r\n\r\n\t\t\treturn null;\r\n\t\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/test/java/org/mobicents/slee/container/component/validator/SbbComponentValidatorSbbEventsTest.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()', 'FunctionName': 'getDeployableUnitRepository', 'ArgsCount': 0, 'MethodBody': 'public DeployableUnitRepositoryImpl getDeployableUnitRepository() {\r\n\t\treturn repository;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitImpl.java'}, {'Syntax': 'sleeComponent.getComponentID()', 'FunctionName': 'getComponentID', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic ComponentID getComponentID() {\r\n\t\treturn getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()\r\n\t\t\t\t\t\t.getComponentByID((ProfileSpecificationID) componentID)', 'FunctionName': 'getComponentByID', 'ArgsCount': 1, 'MethodBody': 'public SbbComponent getComponentByID(SbbID id) {\r\n\r\n\t\t\treturn null;\r\n\t\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/test/java/org/mobicents/slee/container/component/validator/SbbComponentValidatorSbbEventsTest.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()', 'FunctionName': 'getDeployableUnitRepository', 'ArgsCount': 0, 'MethodBody': 'public DeployableUnitRepositoryImpl getDeployableUnitRepository() {\r\n\t\treturn repository;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitImpl.java'}, {'Syntax': 'sleeComponent.getComponentID()', 'FunctionName': 'getComponentID', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic ComponentID getComponentID() {\r\n\t\treturn getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()\r\n\t\t\t\t\t\t.getComponentByID((ResourceAdaptorID) componentID)', 'FunctionName': 'getComponentByID', 'ArgsCount': 1, 'MethodBody': 'public SbbComponent getComponentByID(SbbID id) {\r\n\r\n\t\t\treturn null;\r\n\t\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/test/java/org/mobicents/slee/container/component/validator/SbbComponentValidatorSbbEventsTest.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()', 'FunctionName': 'getDeployableUnitRepository', 'ArgsCount': 0, 'MethodBody': 'public DeployableUnitRepositoryImpl getDeployableUnitRepository() {\r\n\t\treturn repository;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitImpl.java'}, {'Syntax': 'sleeComponent.getComponentID()', 'FunctionName': 'getComponentID', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic ComponentID getComponentID() {\r\n\t\treturn getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()\r\n\t\t\t\t\t\t.getComponentByID((ResourceAdaptorTypeID) componentID)', 'FunctionName': 'getComponentByID', 'ArgsCount': 1, 'MethodBody': 'public SbbComponent getComponentByID(SbbID id) {\r\n\r\n\t\t\treturn null;\r\n\t\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/test/java/org/mobicents/slee/container/component/validator/SbbComponentValidatorSbbEventsTest.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()', 'FunctionName': 'getDeployableUnitRepository', 'ArgsCount': 0, 'MethodBody': 'public DeployableUnitRepositoryImpl getDeployableUnitRepository() {\r\n\t\treturn repository;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitImpl.java'}, {'Syntax': 'sleeComponent.getComponentID()', 'FunctionName': 'getComponentID', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic ComponentID getComponentID() {\r\n\t\treturn getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()\r\n\t\t\t\t\t\t.getComponentByID((SbbID) componentID)', 'FunctionName': 'getComponentByID', 'ArgsCount': 1, 'MethodBody': 'public SbbComponent getComponentByID(SbbID id) {\r\n\r\n\t\t\treturn null;\r\n\t\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/test/java/org/mobicents/slee/container/component/validator/SbbComponentValidatorSbbEventsTest.java'}, {'Syntax': 'deployableUnit.getDeployableUnitRepository()', 'FunctionName': 'getDeployableUnitRepository', 'ArgsCount': 0, 'MethodBody': 'public DeployableUnitRepositoryImpl getDeployableUnitRepository() {\r\n\t\treturn repository;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitImpl.java'}, {'Syntax': 'sleeComponent.getComponentID()', 'FunctionName': 'getComponentID', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic ComponentID getComponentID() {\r\n\t\treturn getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'sleeComponent.getComponentID()', 'FunctionName': 'getComponentID', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic ComponentID getComponentID() {\r\n\t\treturn getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}]"
6621cd83cda9bd4817b10fa1,CAFapi/caf-common,"private <T> T getConfig(final Class<T> configClass)
        throws ConfigurationException
    {
        Iterator<Name> it = getServicePath().descendingPathIterator();
        while (it.hasNext()) {
            try (InputStream in = getConfigurationStream(configClass, it.next())) {
                return decoder.deserialise(in, configClass);
            } catch (final ConfigurationException e) {
                LOG.trace(""No configuration at this path level"", e);
            } catch (final CodecException | IOException e) {
                incrementErrors();
                throw new ConfigurationException(""Failed to get configuration for "" + configClass.getSimpleName(), e);
            }
        }
        incrementErrors();
        throw new ConfigurationException(""No configuration found for "" + configClass.getSimpleName());
    }",Acquire decode and decrypt a configuration object from a data stream .,config-caf/src/main/java/com/hpe/caf/api/CafConfigurationSource.java,"[{'Syntax': 'getServicePath().descendingPathIterator()', 'FunctionName': 'descendingPathIterator', 'ArgsCount': 0, 'MethodBody': 'public Iterator<Name> descendingPathIterator()\n    {\n        return new DescendingPathIterator(pathName);\n    }', 'FileName': '/CAFapi/caf-common/util-naming/src/main/java/com/hpe/caf/naming/ServicePath.java'}, {'Syntax': 'getServicePath()', 'FunctionName': 'getServicePath', 'ArgsCount': 0, 'MethodBody': 'protected ServicePath getServicePath()\n    {\n        return this.id;\n    }', 'FileName': '/CAFapi/caf-common/config-caf/src/main/java/com/hpe/caf/api/CafConfigurationSource.java'}, {'Syntax': 'it.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n        public boolean hasNext()\n        {\n            return count > 0;\n        }', 'FileName': '/CAFapi/caf-common/util-naming/src/main/java/com/hpe/caf/naming/ServicePath.java'}, {'Syntax': 'getConfigurationStream(configClass, it.next())', 'FunctionName': 'getConfigurationStream', 'ArgsCount': 2, 'MethodBody': 'protected abstract InputStream getConfigurationStream(final Class configClass, final Name relativePath)\n        throws ConfigurationException;', 'FileName': '/CAFapi/caf-common/config-caf/src/main/java/com/hpe/caf/api/CafConfigurationSource.java'}, {'Syntax': 'it.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@Override\n        public Name next()\n        {\n            if (count <= 0) {\n                throw new NoSuchElementException(""Element beyond end of iteration"");\n            } else {\n                return name.getPrefix(count--);\n            }\n        }', 'FileName': '/CAFapi/caf-common/util-naming/src/main/java/com/hpe/caf/naming/ServicePath.java'}, {'Syntax': 'decoder.deserialise(in, configClass)', 'FunctionName': 'deserialise', 'ArgsCount': 2, 'MethodBody': '@Override\n    public <T> T deserialise(final InputStream stream, final Class<T> clazz) throws CodecException\n    {\n        try {\n            return decode(stream, clazz);\n        } catch (final IOException | ScriptException | NoSuchMethodException ex) {\n            throw new CodecException(""Failed to decode JavaScript"", ex);\n        }\n    }', 'FileName': '/CAFapi/caf-common/decoder-js/src/main/java/com/hpe/caf/decoder/JavascriptDecoder.java'}, {'Syntax': 'incrementErrors()', 'FunctionName': 'incrementErrors', 'ArgsCount': 0, 'MethodBody': 'protected void incrementErrors()\n    {\n        this.confErrors.incrementAndGet();\n    }', 'FileName': '/CAFapi/caf-common/config-caf/src/main/java/com/hpe/caf/api/CafConfigurationSource.java'}, {'Syntax': 'incrementErrors()', 'FunctionName': 'incrementErrors', 'ArgsCount': 0, 'MethodBody': 'protected void incrementErrors()\n    {\n        this.confErrors.incrementAndGet();\n    }', 'FileName': '/CAFapi/caf-common/config-caf/src/main/java/com/hpe/caf/api/CafConfigurationSource.java'}]"
6621cd83cda9bd4817b10fa2,orientechnologies/orientdb,"@Override
  public int getNodesWithStatus(final Collection<String> iNodes, final String databaseName, final DB_STATUS... statuses) {
    for (Iterator<String> it = iNodes.iterator(); it.hasNext(); ) {
      final String node = it.next();

      if (!isNodeStatusEqualsTo(node, databaseName, statuses))
        it.remove();
    }
    return iNodes.size();
  }",Returns the nodes with the requested status .,distributed-v2/src/main/java/com/orientechnologies/orient/distributed/impl/ODistributedAbstractPlugin.java,"[{'Syntax': 'iNodes.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Iterator<T> iterator() {\n    return values.iterator();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/sql/method/misc/TestIterable.java'}, {'Syntax': 'it.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean hasNext() {\n    return current < items;\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/test/java/com/orientechnologies/orient/etl/OETLStubRandomExtractor.java'}, {'Syntax': 'it.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Move the current record stream to the next one in result set"")\n  public void next() {\n    setCurrentRecord(currentRecordIdx + 1);\n    dumpRecordDetails();\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'isNodeStatusEqualsTo(node, databaseName, statuses)', 'FunctionName': 'isNodeStatusEqualsTo', 'ArgsCount': 3, 'MethodBody': 'boolean isNodeStatusEqualsTo(String iNodeName, String iDatabaseName, DB_STATUS... statuses);', 'FileName': '/orientechnologies/orientdb/server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedServerManager.java'}, {'Syntax': 'it.remove()', 'FunctionName': 'remove', 'ArgsCount': 0, 'MethodBody': '@Override\n  public void remove() {\n    throw new UnsupportedOperationException(""remove()"");\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/main/java/com/orientechnologies/orient/etl/extractor/OETLAbstractExtractor.java'}, {'Syntax': 'iNodes.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}]"
6621cd83cda9bd4817b10fa3,orientechnologies/orientdb,"public Object execute(final Map<Object, Object> iArgs) {
    if (type == null)
      throw new OCommandExecutionException(""Cannot execute the command because it has not been parsed yet"");

    final ODatabaseDocument database = getDatabase();
    final OClassEmbedded sourceClass = (OClassEmbedded) database.getMetadata().getSchema().getClass(className);
    if (sourceClass == null)
      throw new OCommandExecutionException(""Source class '"" + className + ""' not found"");

    OPropertyImpl prop = (OPropertyImpl) sourceClass.getProperty(fieldName);

    if (prop != null) {
      if (ifNotExists) {
        return sourceClass.properties().size();
      }
      throw new OCommandExecutionException(
          ""Property '"" + className + ""."" + fieldName + ""' already exists. Remove it before to retry."");
    }

    // CREATE THE PROPERTY
    OClass linkedClass = null;
    OType linkedType = null;
    if (linked != null) {
      // FIRST SEARCH BETWEEN CLASSES
      linkedClass = database.getMetadata().getSchema().getClass(linked);

      if (linkedClass == null)
        // NOT FOUND: SEARCH BETWEEN TYPES
        linkedType = OType.valueOf(linked.toUpperCase(Locale.ENGLISH));
    }

    // CREATE IT LOCALLY
    OPropertyImpl internalProp = sourceClass.addPropertyInternal(fieldName, type, linkedType, linkedClass, unsafe);
    if (readonly) {
      internalProp.setReadonly(true);
    }

    if (mandatory) {
      internalProp.setMandatory(true);
    }

    if (notnull) {
      internalProp.setNotNull(true);
    }

    if (max != null) {
      internalProp.setMax(max);
    }

    if (min != null) {
      internalProp.setMin(min);
    }

    if (defaultValue != null) {
      internalProp.setDefaultValue(defaultValue);
    }

    return sourceClass.properties().size();
  }",Execute the CREATE PROPERTY .,core/src/main/java/com/orientechnologies/orient/core/sql/OCommandExecutorSQLCreateProperty.java,"[{'Syntax': 'getDatabase()', 'FunctionName': 'getDatabase', 'ArgsCount': 0, 'MethodBody': 'ODatabaseDocumentInternal getDatabase();', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTransactionInternal.java'}, {'Syntax': 'database.getMetadata().getSchema().getClass(className)', 'FunctionName': 'getClass', 'ArgsCount': 1, 'MethodBody': 'OClass getClass(Class<?> iClass);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OSchema.java'}, {'Syntax': 'database.getMetadata().getSchema()', 'FunctionName': 'getSchema', 'ArgsCount': 0, 'MethodBody': 'public ODocument getSchema() {\n    return schema;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OPushSchemaRequest.java'}, {'Syntax': 'database.getMetadata()', 'FunctionName': 'getMetadata', 'ArgsCount': 0, 'MethodBody': 'public ORecordMetadata getMetadata() {\n    return metadata;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OGetRecordMetadataResponse.java'}, {'Syntax': 'sourceClass.getProperty(fieldName)', 'FunctionName': 'getProperty', 'ArgsCount': 1, 'MethodBody': 'public String getProperty(final String iName) {\n    return getProperty(iName, null);\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerConfiguration.java'}, {'Syntax': 'sourceClass.properties().size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'sourceClass.properties()', 'FunctionName': 'properties', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Return all configured properties"")\n  public void properties() {\n    message(""\\nPROPERTIES:"");\n\n    final List<ODocument> resultSet = new ArrayList<ODocument>();\n\n    for (Entry<String, String> p : properties.entrySet()) {\n      final ODocument row = new ODocument();\n      resultSet.add(row);\n\n      row.field(""NAME"", p.getKey());\n      row.field(""VALUE"", p.getValue());\n    }\n\n    final OTableFormatter formatter = new OTableFormatter(this);\n    formatter.setMaxWidthSize(getConsoleWidth());\n    formatter.setMaxMultiValueEntries(getMaxMultiValueEntries());\n\n    formatter.writeRecords(resultSet, -1);\n\n    message(""\\n"");\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'database.getMetadata().getSchema().getClass(linked)', 'FunctionName': 'getClass', 'ArgsCount': 1, 'MethodBody': 'OClass getClass(Class<?> iClass);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OSchema.java'}, {'Syntax': 'database.getMetadata().getSchema()', 'FunctionName': 'getSchema', 'ArgsCount': 0, 'MethodBody': 'public ODocument getSchema() {\n    return schema;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OPushSchemaRequest.java'}, {'Syntax': 'database.getMetadata()', 'FunctionName': 'getMetadata', 'ArgsCount': 0, 'MethodBody': 'public ORecordMetadata getMetadata() {\n    return metadata;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OGetRecordMetadataResponse.java'}, {'Syntax': 'OType.valueOf(linked.toUpperCase(Locale.ENGLISH))', 'FunctionName': 'valueOf', 'ArgsCount': 1, 'MethodBody': 'public static ResourceGeneric valueOf(String name) {\n      return nameToGenericMap.get(name);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/security/ORule.java'}, {'Syntax': 'sourceClass.addPropertyInternal(fieldName, type, linkedType, linkedClass, unsafe)', 'FunctionName': 'addPropertyInternal', 'ArgsCount': 5, 'MethodBody': 'public OPropertyImpl addPropertyInternal(\n      final String name,\n      final OType type,\n      final OType linkedType,\n      final OClass linkedClass,\n      final boolean unsafe) {\n    if (name == null || name.length() == 0) throw new OSchemaException(""Found property name null"");\n\n    if (!unsafe) checkPersistentPropertyType(getDatabase(), name, type, linkedClass);\n\n    final OPropertyEmbedded prop;\n\n    // This check are doubled because used by sql commands\n    if (linkedType != null) OPropertyImpl.checkLinkTypeSupport(type);\n\n    if (linkedClass != null) OPropertyImpl.checkSupportLinkedClass(type);\n\n    acquireSchemaWriteLock();\n    try {\n      checkEmbedded();\n\n      if (properties.containsKey(name))\n        throw new OSchemaException(""Class \'"" + this.name + ""\' already has property \'"" + name + ""\'"");\n\n      OGlobalProperty global = owner.findOrCreateGlobalProperty(name, type);\n\n      prop = createPropertyInstance(global);\n\n      properties.put(name, prop);\n\n      if (linkedType != null) prop.setLinkedTypeInternal(linkedType);\n      else if (linkedClass != null) prop.setLinkedClassInternal(linkedClass);\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    if (prop != null && !unsafe) fireDatabaseMigration(getDatabase(), name, type);\n\n    return prop;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OClassEmbedded.java'}, {'Syntax': 'internalProp.setReadonly(true)', 'FunctionName': 'setReadonly', 'ArgsCount': 1, 'MethodBody': 'public OPropertyImpl setReadonly(final boolean isReadonly) {\n    getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    acquireSchemaWriteLock();\n    try {\n      final ODatabaseDocumentInternal database = getDatabase();\n      final String cmd =\n          String.format(""alter property %s readonly %s"", getFullNameQuoted(), isReadonly);\n      database.command(cmd).close();\n\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OPropertyRemote.java'}, {'Syntax': 'internalProp.setMandatory(true)', 'FunctionName': 'setMandatory', 'ArgsCount': 1, 'MethodBody': 'public OPropertyImpl setMandatory(final boolean isMandatory) {\n    getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    acquireSchemaWriteLock();\n    try {\n      final ODatabaseDocumentInternal database = getDatabase();\n      final String cmd =\n          String.format(""alter property %s mandatory %s"", getFullNameQuoted(), isMandatory);\n      database.command(cmd).close();\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OPropertyRemote.java'}, {'Syntax': 'internalProp.setNotNull(true)', 'FunctionName': 'setNotNull', 'ArgsCount': 1, 'MethodBody': 'public OPropertyImpl setNotNull(final boolean isNotNull) {\n    getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    acquireSchemaWriteLock();\n    try {\n      final ODatabaseDocumentInternal database = getDatabase();\n      final String cmd =\n          String.format(""alter property %s notnull %s"", getFullNameQuoted(), isNotNull);\n      database.command(cmd).close();\n\n    } finally {\n      releaseSchemaWriteLock();\n    }\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OPropertyRemote.java'}, {'Syntax': 'internalProp.setMax(max)', 'FunctionName': 'setMax', 'ArgsCount': 1, 'MethodBody': 'public OPropertyImpl setMax(final String max) {\n    getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    acquireSchemaWriteLock();\n    try {\n      final ODatabaseDocumentInternal database = getDatabase();\n      final String cmd =\n          String.format(""alter property %s max %s"", getFullNameQuoted(), quoteString(max));\n      database.command(cmd).close();\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OPropertyRemote.java'}, {'Syntax': 'internalProp.setMin(min)', 'FunctionName': 'setMin', 'ArgsCount': 1, 'MethodBody': 'public OPropertyImpl setMin(final String min) {\n    getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    acquireSchemaWriteLock();\n    try {\n      final ODatabaseDocumentInternal database = getDatabase();\n      final String cmd =\n          String.format(""alter property %s min %s"", getFullNameQuoted(), quoteString(min));\n      database.command(cmd).close();\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OPropertyRemote.java'}, {'Syntax': 'internalProp.setDefaultValue(defaultValue)', 'FunctionName': 'setDefaultValue', 'ArgsCount': 1, 'MethodBody': 'public OPropertyImpl setDefaultValue(final String defaultValue) {\n    getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    acquireSchemaWriteLock();\n    try {\n      final ODatabaseDocumentInternal database = getDatabase();\n      final String cmd =\n          String.format(\n              ""alter property %s default %s"", getFullNameQuoted(), quoteString(defaultValue));\n      database.command(cmd).close();\n\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OPropertyRemote.java'}, {'Syntax': 'sourceClass.properties().size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'sourceClass.properties()', 'FunctionName': 'properties', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Return all configured properties"")\n  public void properties() {\n    message(""\\nPROPERTIES:"");\n\n    final List<ODocument> resultSet = new ArrayList<ODocument>();\n\n    for (Entry<String, String> p : properties.entrySet()) {\n      final ODocument row = new ODocument();\n      resultSet.add(row);\n\n      row.field(""NAME"", p.getKey());\n      row.field(""VALUE"", p.getValue());\n    }\n\n    final OTableFormatter formatter = new OTableFormatter(this);\n    formatter.setMaxWidthSize(getConsoleWidth());\n    formatter.setMaxMultiValueEntries(getMaxMultiValueEntries());\n\n    formatter.writeRecords(resultSet, -1);\n\n    message(""\\n"");\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}]"
6621cd83cda9bd4817b10fa4,google/guice,"@Override
  public Object invoke(Object proxy, final Method method, final Object[] args) throws Throwable {
    // If we setup a method handle earlier for this method, call it.
    // This is necessary for default methods that java8 creates, so we
    // can call the default method implementation (and not our proxied version of it).
    if (methodHandleByMethod.containsKey(method)) {
      return methodHandleByMethod.get(method).invokeWithArguments(args);
    }

    if (method.getDeclaringClass().equals(Object.class)) {
      if (""equals"".equals(method.getName())) {
        return proxy == args[0];
      } else if (""hashCode"".equals(method.getName())) {
        return System.identityHashCode(proxy);
      } else {
        return method.invoke(this, args);
      }
    }

    AssistData data = assistDataByMethod.get(method);
    checkState(data != null, ""No data for method: %s"", method);
    Provider<?> provider;
    if (data.cachedBinding != null) { // Try to get optimized form...
      provider = data.cachedBinding.getProvider();
    } else {
      provider = getBindingFromNewInjector(method, args, data).getProvider();
    }
    try {
      int p = 0;
      for (ThreadLocalProvider tlp : data.providers) {
        tlp.set(args[p++]);
      }
      return provider.get();
    } catch (ProvisionException e) {
      // if this is an exception declared by the factory method, throw it as-is
      if (e.getErrorMessages().size() == 1) {
        Message onlyError = getOnlyElement(e.getErrorMessages());
        Throwable cause = onlyError.getCause();
        if (cause != null && canRethrow(method, cause)) {
          throw cause;
        }
      }
      throw e;
    } finally {
      for (ThreadLocalProvider tlp : data.providers) {
        tlp.remove();
      }
    }
  }",When a factory method is invoked we create a child injector that binds all parameters then use that to get an instance of the return type .,extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java,"[{'Syntax': 'methodHandleByMethod.get(method)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'T get(T defaultValue) throws RemoteException;', 'FileName': '/google/guice/extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java'}, {'Syntax': 'method.getDeclaringClass().equals(Object.class)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean equals(Object o) {\n    return o instanceof CheckedProviderMethodsModule\n        && ((CheckedProviderMethodsModule) o).delegate == delegate;\n  }', 'FileName': '/google/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java'}, {'Syntax': '""equals"".equals(method.getName())', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean equals(Object o) {\n    return o instanceof CheckedProviderMethodsModule\n        && ((CheckedProviderMethodsModule) o).delegate == delegate;\n  }', 'FileName': '/google/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java'}, {'Syntax': 'method.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getName() {\n      return name;\n    }', 'FileName': '/google/guice/extensions/assistedinject/test/com/google/inject/assistedinject/ManyConstructorsTest.java'}, {'Syntax': '""hashCode"".equals(method.getName())', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean equals(Object o) {\n    return o instanceof CheckedProviderMethodsModule\n        && ((CheckedProviderMethodsModule) o).delegate == delegate;\n  }', 'FileName': '/google/guice/extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java'}, {'Syntax': 'method.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getName() {\n      return name;\n    }', 'FileName': '/google/guice/extensions/assistedinject/test/com/google/inject/assistedinject/ManyConstructorsTest.java'}, {'Syntax': 'method.invoke(this, args)', 'FunctionName': 'invoke', 'ArgsCount': 2, 'MethodBody': 'Object invoke(Object target, Object... parameters)\n        throws IllegalAccessException, InvocationTargetException;', 'FileName': '/google/guice/core/src/com/google/inject/internal/InjectorImpl.java'}, {'Syntax': 'assistDataByMethod.get(method)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'T get(T defaultValue) throws RemoteException;', 'FileName': '/google/guice/extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java'}, {'Syntax': 'data.cachedBinding.getProvider()', 'FunctionName': 'getProvider', 'ArgsCount': 0, 'MethodBody': 'String getProvider();', 'FileName': '/google/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBindingMBean.java'}, {'Syntax': 'getBindingFromNewInjector(method, args, data).getProvider()', 'FunctionName': 'getProvider', 'ArgsCount': 0, 'MethodBody': 'String getProvider();', 'FileName': '/google/guice/extensions/jmx/src/com/google/inject/tools/jmx/ManagedBindingMBean.java'}, {'Syntax': 'getBindingFromNewInjector(method, args, data)', 'FunctionName': 'getBindingFromNewInjector', 'ArgsCount': 3, 'MethodBody': 'public Binding<?> getBindingFromNewInjector(\n      final Method method, final Object[] args, final AssistData data) {\n    checkState(\n        injector != null,\n        ""Factories.create() factories cannot be used until they\'re initialized by Guice."");\n\n    final Key<?> returnType = data.returnType;\n\n    // We ignore any pre-existing binding annotation.\n    final Key<?> returnKey = Key.get(returnType.getTypeLiteral(), RETURN_ANNOTATION);\n\n    Module assistedModule =\n        new AbstractModule() {\n          @Override\n          @SuppressWarnings({\n            ""unchecked"",\n            ""rawtypes""\n          }) // raw keys are necessary for the args array and return value\n          protected void configure() {\n            Binder binder = binder().withSource(method);\n\n            int p = 0;\n            if (!data.optimized) {\n              for (Key<?> paramKey : data.paramTypes) {\n                // Wrap in a Provider to cover null, and to prevent Guice from injecting the\n                // parameter\n                binder.bind((Key) paramKey).toProvider(Providers.of(args[p++]));\n              }\n            } else {\n              for (Key<?> paramKey : data.paramTypes) {\n                // Bind to our ThreadLocalProviders.\n                binder.bind((Key) paramKey).toProvider(data.providers.get(p++));\n              }\n            }\n\n            Constructor constructor = data.constructor;\n            // Constructor *should* always be non-null here,\n            // but if it isn\'t, we\'ll end up throwing a fairly good error\n            // message for the user.\n            if (constructor != null) {\n              binder\n                  .bind(returnKey)\n                  .toConstructor(constructor, (TypeLiteral) data.implementationType)\n                  .in(Scopes.NO_SCOPE); // make sure we erase any scope on the implementation type\n            }\n          }\n        };\n\n    Injector forCreate = injector.createChildInjector(assistedModule);\n    Binding<?> binding = forCreate.getBinding(returnKey);\n    // If we have providers cached in data, cache the binding for future optimizations.\n    if (data.optimized) {\n      data.cachedBinding = binding;\n    }\n    return binding;\n  }', 'FileName': '/google/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java'}, {'Syntax': 'tlp.set(args[p++])', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'void set(ServletContext injectedServletContext) {\n      this.injectedServletContext = injectedServletContext;\n    }', 'FileName': '/google/guice/extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java'}, {'Syntax': 'provider.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': '@Override\n                public Integer get() {\n                  return testValue;\n                }', 'FileName': '/google/guice/extensions/testlib/test/com/google/inject/testing/fieldbinder/BoundFieldModuleTest.java'}, {'Syntax': 'e.getErrorMessages().size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n    return root.errors == null ? 0 : root.errors.size();\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/Errors.java'}, {'Syntax': 'e.getErrorMessages()', 'FunctionName': 'getErrorMessages', 'ArgsCount': 0, 'MethodBody': 'public Collection<Message> getErrorMessages() {\n    return messages;\n  }', 'FileName': '/google/guice/core/src/com/google/inject/CreationException.java'}, {'Syntax': 'e.getErrorMessages()', 'FunctionName': 'getErrorMessages', 'ArgsCount': 0, 'MethodBody': 'public Collection<Message> getErrorMessages() {\n    return messages;\n  }', 'FileName': '/google/guice/core/src/com/google/inject/CreationException.java'}, {'Syntax': 'onlyError.getCause()', 'FunctionName': 'getCause', 'ArgsCount': 0, 'MethodBody': 'public Throwable getCause() {\n    return errorDetail.getCause();\n  }', 'FileName': '/google/guice/core/src/com/google/inject/spi/Message.java'}, {'Syntax': 'canRethrow(method, cause)', 'FunctionName': 'canRethrow', 'ArgsCount': 2, 'MethodBody': 'static boolean canRethrow(Method invoked, Throwable thrown) {\n    if (thrown instanceof Error || thrown instanceof RuntimeException) {\n      return true;\n    }\n\n    for (Class<?> declared : invoked.getExceptionTypes()) {\n      if (declared.isInstance(thrown)) {\n        return true;\n      }\n    }\n\n    return false;\n  }', 'FileName': '/google/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java'}]"
6621cd83cda9bd4817b10fa5,tiefaces/TieFaces,"private void setFooterOfSheetConfiguration(final FormCommand fcommand, final SheetConfiguration sheetConfig,
			final int leftCol, final int rightCol) {
		String tempStr;
		if (fcommand.calcFooterLength() == 0) {
			tempStr = CellUtility.getCellIndexLetterKey(leftCol, 0) + "" : ""
					+ CellUtility.getCellIndexLetterKey(rightCol, 0);
		} else {
			tempStr = CellUtility.getCellIndexLetterKey(leftCol,
					fcommand.getTopRow() + fcommand.calcHeaderLength() + fcommand.calcBodyLength()) + "" : ""
					+ CellUtility.getCellIndexLetterKey(rightCol, fcommand.getTopRow() + fcommand.calcHeaderLength());
		}
		sheetConfig.setFormFooterRange(tempStr);
		sheetConfig.setFooterCellRange(new CellRange(tempStr));
	}",Sets the footer of sheet configuration .,src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java,"[{'Syntax': 'fcommand.calcFooterLength()', 'FunctionName': 'calcFooterLength', 'ArgsCount': 0, 'MethodBody': 'public final int calcFooterLength() {\r\n\t\treturn calcLength(this.getFooterLength());\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/FormCommand.java'}, {'Syntax': 'CellUtility.getCellIndexLetterKey(leftCol, 0)', 'FunctionName': 'getCellIndexLetterKey', 'ArgsCount': 2, 'MethodBody': 'public static String getCellIndexLetterKey(final String columnLetter, final int rowIndex) {\r\n\t\treturn TieConstants.CELL_ADDR_PRE_FIX + columnLetter + TieConstants.CELL_ADDR_PRE_FIX + rowIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellUtility.java'}, {'Syntax': 'CellUtility.getCellIndexLetterKey(rightCol, 0)', 'FunctionName': 'getCellIndexLetterKey', 'ArgsCount': 2, 'MethodBody': 'public static String getCellIndexLetterKey(final String columnLetter, final int rowIndex) {\r\n\t\treturn TieConstants.CELL_ADDR_PRE_FIX + columnLetter + TieConstants.CELL_ADDR_PRE_FIX + rowIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellUtility.java'}, {'Syntax': 'CellUtility.getCellIndexLetterKey(leftCol,\r\n\t\t\t\t\tfcommand.getTopRow() + fcommand.calcHeaderLength() + fcommand.calcBodyLength())', 'FunctionName': 'getCellIndexLetterKey', 'ArgsCount': 2, 'MethodBody': 'public static String getCellIndexLetterKey(final String columnLetter, final int rowIndex) {\r\n\t\treturn TieConstants.CELL_ADDR_PRE_FIX + columnLetter + TieConstants.CELL_ADDR_PRE_FIX + rowIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellUtility.java'}, {'Syntax': 'fcommand.getTopRow()', 'FunctionName': 'getTopRow', 'ArgsCount': 0, 'MethodBody': 'int getTopRow();', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/Command.java'}, {'Syntax': 'fcommand.calcHeaderLength()', 'FunctionName': 'calcHeaderLength', 'ArgsCount': 0, 'MethodBody': 'public final int calcHeaderLength() {\r\n\t\treturn calcLength(this.getHeaderLength());\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/FormCommand.java'}, {'Syntax': 'fcommand.calcBodyLength()', 'FunctionName': 'calcBodyLength', 'ArgsCount': 0, 'MethodBody': 'public final int calcBodyLength() {\r\n\t\treturn calcLength(this.getLength()) - calcHeaderLength()\r\n\t\t\t\t- calcFooterLength();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/FormCommand.java'}, {'Syntax': 'CellUtility.getCellIndexLetterKey(rightCol, fcommand.getTopRow() + fcommand.calcHeaderLength())', 'FunctionName': 'getCellIndexLetterKey', 'ArgsCount': 2, 'MethodBody': 'public static String getCellIndexLetterKey(final String columnLetter, final int rowIndex) {\r\n\t\treturn TieConstants.CELL_ADDR_PRE_FIX + columnLetter + TieConstants.CELL_ADDR_PRE_FIX + rowIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellUtility.java'}, {'Syntax': 'fcommand.getTopRow()', 'FunctionName': 'getTopRow', 'ArgsCount': 0, 'MethodBody': 'int getTopRow();', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/Command.java'}, {'Syntax': 'fcommand.calcHeaderLength()', 'FunctionName': 'calcHeaderLength', 'ArgsCount': 0, 'MethodBody': 'public final int calcHeaderLength() {\r\n\t\treturn calcLength(this.getHeaderLength());\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/FormCommand.java'}, {'Syntax': 'sheetConfig.setFormFooterRange(tempStr)', 'FunctionName': 'setFormFooterRange', 'ArgsCount': 1, 'MethodBody': 'public final void setFormFooterRange(final String pformFooterRange) {\r\n\t\tthis.formFooterRange = pformFooterRange;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}, {'Syntax': 'sheetConfig.setFooterCellRange(new CellRange(tempStr))', 'FunctionName': 'setFooterCellRange', 'ArgsCount': 1, 'MethodBody': 'public final void setFooterCellRange(final CellRange pfooterCellRange) {\r\n\t\tthis.footerCellRange = pfooterCellRange;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}]"
6621cd84cda9bd4817b10fa6,apache/parquet-mr,"private static GroupType convertArrayType(final String name, final ListTypeInfo typeInfo) {
    final TypeInfo subType = typeInfo.getListElementTypeInfo();
    return listWrapper(name, listType(), new GroupType(Repetition.REPEATED,
        ParquetHiveSerDe.ARRAY.toString(), convertType(""array_element"", subType)));
  }",1 anonymous element array_element,parquet-hive/parquet-hive-storage-handler/src/main/java/org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter.java,"[{'Syntax': 'listType()', 'FunctionName': 'listType', 'ArgsCount': 0, 'MethodBody': 'public static ListLogicalTypeAnnotation listType() {\n    return ListLogicalTypeAnnotation.INSTANCE;\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/schema/LogicalTypeAnnotation.java'}, {'Syntax': 'ParquetHiveSerDe.ARRAY.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n      return MoreObjects.toStringHelper(this)\n          .add(""type"", type)\n          .add(""value"", value)\n          .add(""children"", children)\n          .toString();\n    }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/util/Expressions.java'}]"
6621cd84cda9bd4817b10fa7,cglib/cglib,"void emit_field(int opcode, Type ctype, String name, Type ftype) {
        mv.visitFieldInsn(opcode,
                          ctype.getInternalName(),
                          name,
                          ftype.getDescriptor());
    }",package - protected for EmitUtils try to fix,cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java,"[{'Syntax': 'mv.visitFieldInsn(opcode,\n                          ctype.getInternalName(),\n                          name,\n                          ftype.getDescriptor())', 'FunctionName': 'visitFieldInsn', 'ArgsCount': 4, 'MethodBody': 'public void visitFieldInsn(int opcode, String owner, String name, String desc) {\n        mv1.visitFieldInsn(opcode, owner, name, desc);\n        mv2.visitFieldInsn(opcode, owner, name, desc);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/transform/MethodVisitorTee.java'}, {'Syntax': 'ftype.getDescriptor()', 'FunctionName': 'getDescriptor', 'ArgsCount': 0, 'MethodBody': 'public String getDescriptor() {\n        return desc;\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/Signature.java'}]"
6621cd84cda9bd4817b10fa8,jboss/jboss-common-core,"public boolean addVertex(Vertex<T> v)
   {
      if( verticies.containsValue(v) == false )
      {
         verticies.put(v.getName(), v);
         return true;
      }
      return false;
   }",Add a vertex to the graph,src/main/java/org/jboss/util/graph/Graph.java,"[{'Syntax': 'verticies.containsValue(v)', 'FunctionName': 'containsValue', 'ArgsCount': 1, 'MethodBody': 'public boolean containsValue(Object value)\n   {\n      for (Entry<K, V> e : table)\n         if (e != null && eq(value, e.value))\n            return true;\n\n      return false;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}, {'Syntax': 'verticies.put(v.getName(), v)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public V put(K key, V value)\n   {\n      key = maskNull(key);\n\n      Entry<K, V>[] table = this.table;\n      int hash = hash(key);\n      int length = table.length;\n      int index = index(hash, length);\n\n      for (int start = index; ;)\n      {\n         Entry<K, V> e = table[index];\n         if (e == null)\n            break;\n\n         if (e.hash == hash && eq(key, e.key))\n         {\n            table[index] = new Entry<K, V>(e.key, e.hash, value);\n            return e.value;\n         }\n\n         index = nextIndex(index, length);\n         if (index == start)\n            throw new IllegalStateException(""Table is full!"");\n      }\n\n      modCount++;\n      table[index] = new Entry<K, V>(key, hash, value);\n      if (++size >= threshold)\n         resize(length);\n\n      return null;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}, {'Syntax': 'v.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName()\n   {\n      return name;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/state/State.java'}]"
6621cd84cda9bd4817b10fa9,wildfly/wildfly,"public static boolean isEmpty(final Name name) {
        return name.isEmpty() || (name.size() == 1 && """".equals(name.get(0)));
    }",Determine if a name is empty or if ot contains only one component which is the empty string .,naming/src/main/java/org/jboss/as/naming/util/NamingUtils.java,"[{'Syntax': 'name.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': 'public boolean isEmpty() {\n        final Segment<K,V>[] segments = this.segments;\n        /*\n         * We keep track of per-segment modCounts to avoid ABA\n         * problems in which an element in one segment was added and\n         * in another removed during traversal, in which case the\n         * table was never actually empty at any point. Note the\n         * similar use of modCounts in the size() and containsValue()\n         * methods, which are the only other methods also susceptible\n         * to ABA problems.\n         */\n        int[] mc = new int[segments.length];\n        int mcsum = 0;\n        for (int i = 0; i < segments.length; ++i) {\n            if (segments[i].count != 0)\n                return false;\n            else\n                mcsum += mc[i] = segments[i].modCount;\n        }\n        // If mcsum happens to be zero, then we know we got a snapshot\n        // before any modifications at all were made.  This is\n        // probably common enough to bother tracking.\n        if (mcsum != 0) {\n            for (int i = 0; i < segments.length; ++i) {\n                if (segments[i].count != 0 ||\n                    mc[i] != segments[i].modCount)\n                    return false;\n            }\n        }\n        return true;\n    }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'name.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n        final Segment<K,V>[] segments = this.segments;\n        long sum = 0;\n        long check = 0;\n        int[] mc = new int[segments.length];\n        // Try a few times to get accurate count. On failure due to\n        // continuous async changes in table, resort to locking.\n        for (int k = 0; k < RETRIES_BEFORE_LOCK; ++k) {\n            check = 0;\n            sum = 0;\n            int mcsum = 0;\n            for (int i = 0; i < segments.length; ++i) {\n                sum += segments[i].count;\n                mcsum += mc[i] = segments[i].modCount;\n            }\n            if (mcsum != 0) {\n                for (int i = 0; i < segments.length; ++i) {\n                    check += segments[i].count;\n                    if (mc[i] != segments[i].modCount) {\n                        check = -1; // force retry\n                        break;\n                    }\n                }\n            }\n            if (check == sum)\n                break;\n        }\n        if (check != sum) { // Resort to locking all segments\n            sum = 0;\n            for (int i = 0; i < segments.length; ++i)\n                segments[i].lock();\n            for (int i = 0; i < segments.length; ++i)\n                sum += segments[i].count;\n            for (int i = 0; i < segments.length; ++i)\n                segments[i].unlock();\n        }\n        if (sum > Integer.MAX_VALUE)\n            return Integer.MAX_VALUE;\n        else\n            return (int)sum;\n    }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': '"""".equals(name.get(0))', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        MetricID metricID = (MetricID) o;\n        return metricName.equals(metricID.metricName) &&\n                tags.equals(metricID.tags);\n    }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricID.java'}, {'Syntax': 'name.get(0)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Booking get(String bookingId) throws NotFoundException {\n        if (!bookings.containsKey(bookingId))\n            throw new NotFoundException(Response.status(404).entity(""Invalid bookingId id: "" + bookingId).build());\n\n        return bookings.get(bookingId);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/lra/participant/smoke/hotel/HotelService.java'}]"
6621cd84cda9bd4817b10faa,google/guice,"private static boolean hasScope(Class<? extends Interceptor> interceptorClass) {
    for (Annotation annotation : interceptorClass.getAnnotations()) {
      if (Annotations.isScopeAnnotation(annotation.annotationType())) {
        return true;
      }
    }
    return false;
  }",Returns true if the given class has a scope annotation .,extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java,"[{'Syntax': 'Annotations.isScopeAnnotation(annotation.annotationType())', 'FunctionName': 'isScopeAnnotation', 'ArgsCount': 1, 'MethodBody': 'public static boolean isScopeAnnotation(Class<? extends Annotation> annotationType) {\n    return scopeChecker.hasAnnotations(annotationType);\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/Annotations.java'}, {'Syntax': 'annotation.annotationType()', 'FunctionName': 'annotationType', 'ArgsCount': 0, 'MethodBody': '@Override\n        public Class<? extends Annotation> annotationType() {\n          return Assisted.class;\n        }', 'FileName': '/google/guice/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java'}]"
6621cd84cda9bd4817b10fab,rupertlssmith/lojix,"public int getIndexOf(Object key)
    {
        // Get the index from the map
        Integer index = keyToIndex.get(key);

        // Check that the key is in the map and return -1 if it is not.
        if (index == null)
        {
            return -1;
        }

        return index;
    }",Returns the index to which this map maps the specified key .,base/common/src/main/com/thesett/common/util/maps/HashArray.java,"[{'Syntax': 'keyToIndex.get(key)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name)\n    {\n        return pageContext.getAttribute(name, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}]"
6621cd84cda9bd4817b10fac,rest-assured/rest-assured,"public static Filter logResponseToIfMatches(PrintStream stream, Matcher<Integer> matcher) {
        return new ResponseLoggingFilter(stream, matcher);
    }",Create a new logging filter without using the new operator . Will make the DSL look nicer .,rest-assured/src/main/java/io/restassured/filter/log/ResponseLoggingFilter.java,[]
6621cd84cda9bd4817b10fad,streamsets/datacollector,"public <T> T deserialize(File file, TypeRef returnType) throws ApiException {
    JavaType javaType = mapper.constructType(returnType.getType());
    try {
      return mapper.readValue(file, javaType);
    } catch (IOException e) {
      throw new ApiException(500, e.getMessage(), null, ""File to read file"");
    }
  }",Deserialize the given File to Java object .,client-api/src/main/java/com/streamsets/datacollector/client/JSON.java,[]
6621cd84cda9bd4817b10fae,ngageoint/geopackage-android,"public GeometryMetadata populate(long geoPackageId, String tableName, long geomId, GeometryEnvelope envelope) {

        GeometryMetadata metadata = new GeometryMetadata();
        metadata.setGeoPackageId(geoPackageId);
        metadata.setTableName(tableName);
        metadata.setId(geomId);
        metadata.setMinX(envelope.getMinX());
        metadata.setMaxX(envelope.getMaxX());
        metadata.setMinY(envelope.getMinY());
        metadata.setMaxY(envelope.getMaxY());
        if (envelope.hasZ()) {
            metadata.setMinZ(envelope.getMinZ());
            metadata.setMaxZ(envelope.getMaxZ());
        }
        if (envelope.hasM()) {
            metadata.setMinM(envelope.getMinM());
            metadata.setMaxM(envelope.getMaxM());
        }
        return metadata;
    }",Populate a new geometry metadata from an envelope,geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadataDataSource.java,"[{'Syntax': 'metadata.setGeoPackageId(geoPackageId)', 'FunctionName': 'setGeoPackageId', 'ArgsCount': 1, 'MethodBody': 'public void setGeoPackageId(long geoPackageId) {\n        this.geoPackageId = geoPackageId;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'metadata.setTableName(tableName)', 'FunctionName': 'setTableName', 'ArgsCount': 1, 'MethodBody': 'public void setTableName(String tableName) {\n        this.tableName = tableName;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'metadata.setId(geomId)', 'FunctionName': 'setId', 'ArgsCount': 1, 'MethodBody': 'public void setId(long id) {\n        this.id = id;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadata.java'}, {'Syntax': 'metadata.setMinX(envelope.getMinX())', 'FunctionName': 'setMinX', 'ArgsCount': 1, 'MethodBody': 'public void setMinX(double minX) {\n        this.minX = minX;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMinX()', 'FunctionName': 'getMinX', 'ArgsCount': 0, 'MethodBody': 'public double getMinX() {\n        return ((Number) getValue(getColumnIndex(RTreeIndexExtension.COLUMN_MIN_X)))\n                .doubleValue();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/rtree/RTreeIndexTableRow.java'}, {'Syntax': 'metadata.setMaxX(envelope.getMaxX())', 'FunctionName': 'setMaxX', 'ArgsCount': 1, 'MethodBody': 'public void setMaxX(double maxX) {\n        this.maxX = maxX;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMaxX()', 'FunctionName': 'getMaxX', 'ArgsCount': 0, 'MethodBody': 'public double getMaxX() {\n        return ((Number) getValue(getColumnIndex(RTreeIndexExtension.COLUMN_MAX_X)))\n                .doubleValue();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/rtree/RTreeIndexTableRow.java'}, {'Syntax': 'metadata.setMinY(envelope.getMinY())', 'FunctionName': 'setMinY', 'ArgsCount': 1, 'MethodBody': 'public void setMinY(double minY) {\n        this.minY = minY;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMinY()', 'FunctionName': 'getMinY', 'ArgsCount': 0, 'MethodBody': 'public double getMinY() {\n        return ((Number) getValue(getColumnIndex(RTreeIndexExtension.COLUMN_MIN_Y)))\n                .doubleValue();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/rtree/RTreeIndexTableRow.java'}, {'Syntax': 'metadata.setMaxY(envelope.getMaxY())', 'FunctionName': 'setMaxY', 'ArgsCount': 1, 'MethodBody': 'public void setMaxY(double maxY) {\n        this.maxY = maxY;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMaxY()', 'FunctionName': 'getMaxY', 'ArgsCount': 0, 'MethodBody': 'public double getMaxY() {\n        return ((Number) getValue(getColumnIndex(RTreeIndexExtension.COLUMN_MAX_Y)))\n                .doubleValue();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/rtree/RTreeIndexTableRow.java'}, {'Syntax': 'metadata.setMinZ(envelope.getMinZ())', 'FunctionName': 'setMinZ', 'ArgsCount': 1, 'MethodBody': 'public void setMinZ(Double minZ) {\n        this.minZ = minZ;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMinZ()', 'FunctionName': 'getMinZ', 'ArgsCount': 0, 'MethodBody': 'public Double getMinZ() {\n        return minZ;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'metadata.setMaxZ(envelope.getMaxZ())', 'FunctionName': 'setMaxZ', 'ArgsCount': 1, 'MethodBody': 'public void setMaxZ(Double maxZ) {\n        this.maxZ = maxZ;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMaxZ()', 'FunctionName': 'getMaxZ', 'ArgsCount': 0, 'MethodBody': 'public Double getMaxZ() {\n        return maxZ;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'metadata.setMinM(envelope.getMinM())', 'FunctionName': 'setMinM', 'ArgsCount': 1, 'MethodBody': 'public void setMinM(Double minM) {\n        this.minM = minM;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMinM()', 'FunctionName': 'getMinM', 'ArgsCount': 0, 'MethodBody': 'public Double getMinM() {\n        return minM;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'metadata.setMaxM(envelope.getMaxM())', 'FunctionName': 'setMaxM', 'ArgsCount': 1, 'MethodBody': 'public void setMaxM(Double maxM) {\n        this.maxM = maxM;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}, {'Syntax': 'envelope.getMaxM()', 'FunctionName': 'getMaxM', 'ArgsCount': 0, 'MethodBody': 'public Double getMaxM() {\n        return maxM;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadata.java'}]"
6621cd84cda9bd4817b10faf,oblac/jodd,"protected Collection<T> convertToSingleElementCollection(final Object value) {
		Collection<T> collection = createCollection(0);

		//noinspection unchecked
		collection.add((T) value);

		return collection;
	}",Creates a collection with single element .,jodd-bean/src/main/java/jodd/typeconverter/impl/CollectionConverter.java,"[{'Syntax': 'collection.add((T) value)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cd84cda9bd4817b10fb0,streamsets/datacollector,"public void commit(String offset) {
    batchCommitted = true;
    LOG.trace(""Last committed offset '{}', attempting to commit '{}'"", lastCommittedOffset, offset);
    Utils.checkState(null != lastCommittedOffset, ""Last committed offset cannot be null"");
    controlChannel.consumerCommit(offset);
    lastCommittedOffset = offset;
  }",Commit the offset . Required after take has returned a non - null value .,cluster-common/src/main/java/com/streamsets/pipeline/cluster/Consumer.java,[]
6621cd84cda9bd4817b10fb1,TooTallNate/Java-WebSocket,"private void doAdditionalRead() throws InterruptedException, IOException {
		WebSocketImpl conn;
		while ( !iqueue.isEmpty() ) {
			conn = iqueue.remove( 0 );
			WrappedByteChannel c = ( (WrappedByteChannel) conn.getChannel() );
			ByteBuffer buf = takeBuffer();
			try {
				if( SocketChannelIOHelper.readMore( buf, conn, c ) )
					iqueue.add( conn );
				if( buf.hasRemaining() ) {
					conn.inQueue.put( buf );
					queue( conn );
				} else {
					pushBuffer( buf );
				}
			} catch ( IOException e ) {
				pushBuffer( buf );
				throw e;
			}
		}
	}",Do an additional read,src/main/java/org/java_websocket/server/WebSocketServer.java,"[{'Syntax': 'conn.getChannel()', 'FunctionName': 'getChannel', 'ArgsCount': 0, 'MethodBody': 'public ByteChannel getChannel() {\n    return channel;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'takeBuffer()', 'FunctionName': 'takeBuffer', 'ArgsCount': 0, 'MethodBody': 'private ByteBuffer takeBuffer() throws InterruptedException {\n    return buffers.take();\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}, {'Syntax': 'SocketChannelIOHelper.readMore( buf, conn, c )', 'FunctionName': 'readMore', 'ArgsCount': 3, 'MethodBody': 'public static boolean readMore(final ByteBuffer buf, WebSocketImpl ws, WrappedByteChannel channel)\n      throws IOException {\n    buf.clear();\n    int read = channel.readMore(buf);\n    buf.flip();\n\n    if (read == -1) {\n      ws.eot();\n      return false;\n    }\n    return channel.isNeedRead();\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/SocketChannelIOHelper.java'}, {'Syntax': 'conn.inQueue.put( buf )', 'FunctionName': 'put', 'ArgsCount': 1, 'MethodBody': 'public void put(WebSocketImpl ws) throws InterruptedException {\n      iqueue.put(ws);\n    }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}, {'Syntax': 'queue( conn )', 'FunctionName': 'queue', 'ArgsCount': 1, 'MethodBody': 'protected void queue(WebSocketImpl ws) throws InterruptedException {\n    if (ws.getWorkerThread() == null) {\n      ws.setWorkerThread(decoders.get(queueinvokes % decoders.size()));\n      queueinvokes++;\n    }\n    ws.getWorkerThread().put(ws);\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}, {'Syntax': 'pushBuffer( buf )', 'FunctionName': 'pushBuffer', 'ArgsCount': 1, 'MethodBody': 'private void pushBuffer(ByteBuffer buf) throws InterruptedException {\n    if (buffers.size() > queuesize.intValue()) {\n      return;\n    }\n    buffers.put(buf);\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}, {'Syntax': 'pushBuffer( buf )', 'FunctionName': 'pushBuffer', 'ArgsCount': 1, 'MethodBody': 'private void pushBuffer(ByteBuffer buf) throws InterruptedException {\n    if (buffers.size() > queuesize.intValue()) {\n      return;\n    }\n    buffers.put(buf);\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}]"
6621cd84cda9bd4817b10fb2,RestComm/jain-slee,"public void fireAddOrUpdatedEventIfNeeded() {
		
		if (state == ProfileObjectState.READY) {
			if (profileEntity.isDirty()) {
				// check the table fires events and the object is not assigned to a default profile
				if (profileTable.doesFireEvents() && profileEntity.getProfileName() != null && profileTable.getSleeContainer().getSleeState() == SleeState.RUNNING) {
					// Fire a Profile Added or Updated Event
					ActivityContext ac = profileTable.getActivityContext();
					AbstractProfileEvent event = null;
					if (profileEntity.isCreate()) {
						if (persisted) {
							event = new ProfileAddedEventImpl(profileEntity,profileTable.getProfileManagement());
							persisted = false;
							if (logger.isTraceEnabled()) {
								logger.trace(""firing profile added event for profile named ""+profileEntity);
							}
						}
						else {
							return;
						}
					}
					else {
						event = new ProfileUpdatedEventImpl(profileEntitySnapshot,profileEntity,profileTable.getProfileManagement());		
						if (logger.isTraceEnabled()) {
							logger.trace(""firing profile updated event for profile named ""+profileEntity);
						}
					}
					ac.fireEvent(event.getEventTypeID(), event,
							event.getProfileAddress(), null, null,null,null);
				}
			}
		}
		
	}",Fires a profile added or updated event if the profile object state is ready and the persistent state is dirty,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectImpl.java,"[{'Syntax': 'profileEntity.isDirty()', 'FunctionName': 'isDirty', 'ArgsCount': 0, 'MethodBody': 'public boolean isDirty() {\n\t\treturn dirty;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/profile/entity/ProfileEntity.java'}, {'Syntax': 'profileTable.doesFireEvents()', 'FunctionName': 'doesFireEvents', 'ArgsCount': 0, 'MethodBody': 'public boolean doesFireEvents() {\n\t\treturn fireEvents;\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'profileEntity.getProfileName()', 'FunctionName': 'getProfileName', 'ArgsCount': 0, 'MethodBody': 'public final String getProfileName() {\n        return profileName;\n    }', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/profile/ProfileID.java'}, {'Syntax': 'profileTable.getSleeContainer().getSleeState()', 'FunctionName': 'getSleeState', 'ArgsCount': 0, 'MethodBody': 'public SleeState getSleeState() {\n\t\treturn this.sleeState;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'profileTable.getSleeContainer()', 'FunctionName': 'getSleeContainer', 'ArgsCount': 0, 'MethodBody': 'public SleeContainer getSleeContainer() {\n\t\treturn sleeContainer;\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'profileTable.getActivityContext()', 'FunctionName': 'getActivityContext', 'ArgsCount': 0, 'MethodBody': 'public ActivityContext getActivityContext() {\n\t\treturn aciImpl.getActivityContext();\n\t}', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbActivityContextInterfaceImpl.java'}, {'Syntax': 'profileEntity.isCreate()', 'FunctionName': 'isCreate', 'ArgsCount': 0, 'MethodBody': 'public boolean isCreate() {\n\t\treturn create;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/profile/entity/ProfileEntity.java'}, {'Syntax': 'profileTable.getProfileManagement()', 'FunctionName': 'getProfileManagement', 'ArgsCount': 0, 'MethodBody': 'public ProfileManagementImpl getProfileManagement() {\n\t\treturn profileManagement;\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'profileTable.getProfileManagement()', 'FunctionName': 'getProfileManagement', 'ArgsCount': 0, 'MethodBody': 'public ProfileManagementImpl getProfileManagement() {\n\t\treturn profileManagement;\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'ac.fireEvent(event.getEventTypeID(), event,\n\t\t\t\t\t\t\tevent.getProfileAddress(), null, null,null,null)', 'FunctionName': 'fireEvent', 'ArgsCount': 7, 'MethodBody': 'private void fireEvent(ActivityHandle handle, FireableEventType eventType,\n\t\t\tObject event, Address address, ReceivableService receivableService,\n\t\t\tint eventFlags, boolean checkHandleRef)\n\t\t\tthrows NullPointerException, UnrecognizedActivityHandleException,\n\t\t\tIllegalEventException, ActivityIsEndingException,\n\t\t\tFireEventException, SLEEException {\n\n\t\tif (doTraceLogs) {\n\t\t\tlogger.trace(""fireEvent( handle = "" + handle + "" , eventType = ""\n\t\t\t\t\t+ eventType + "" , event = "" + event + "" , address = ""\n\t\t\t\t\t+ address + "" , service = "" + receivableService\n\t\t\t\t\t+ "" , flags = "" + eventFlags + "" )"");\n\t\t}\n\n\t\tcheckFireEventPreconditions(handle, eventType, event);\n\n\t\t// get ref handle if we are in cluster and the handle is to be not\n\t\t// replicated\n\t\tfinal ActivityHandle refHandle = checkHandleRef\n\t\t\t\t&& raEntity.getHandleReferenceFactory() != null ? raEntity\n\t\t\t\t.getHandleReferenceFactory().getReference(handle) : handle;\n\n\t\tfireEventNotTransactedExecutor.execute(handle, refHandle, eventType,\n\t\t\t\tevent, address, receivableService, eventFlags);\n\t}', 'FileName': '/RestComm/jain-slee/container/resource/src/main/java/org/mobicents/slee/resource/SleeEndpointImpl.java'}, {'Syntax': 'event.getEventTypeID()', 'FunctionName': 'getEventTypeID', 'ArgsCount': 0, 'MethodBody': 'public EventTypeID getEventTypeID() {\r\n\t\treturn descriptor.getEventTypeID();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'event.getProfileAddress()', 'FunctionName': 'getProfileAddress', 'ArgsCount': 0, 'MethodBody': 'public Address getProfileAddress();', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/profile/ProfileAddedEvent.java'}]"
6621cd84cda9bd4817b10fb3,Unidata/thredds,"public int findIdx(int want) {
    if (isConstant) return (want == start)  ? 0 : -1;
    if (isSequential) return want - start;
    if (isSorted) {
      return Arrays.binarySearch(raw, want);
    }
    // linear search
    for (int i=0; i<raw.length; i++)
      if (raw[i] == want) return i;
    return -1;
  }",Find which index holds the value want,cdm/src/main/java/ucar/nc2/util/cache/SmartArrayInt.java,[]
6621cd84cda9bd4817b10fb4,jryans/jless,"boolean pushVariableReference(String name) {
        if (!isParserTranslationEnabled()) {
            return push(new SimpleNode(name));
        }

        // Walk down the stack, looking for a scope node that knows about a given variable
        for (Node node : getContext().getValueStack()) {
            if (!(node instanceof ScopeNode)) {
                continue;
            }

            // Ensure that the variable exists
            ScopeNode scope = (ScopeNode) node;
            if (!scope.isVariableDefined(name)) {
                continue;
            }

            return push(new VariableReferenceNode(name));
        }

        // Record error location
        throw new UndefinedVariableException(name);
    }",Looks for a variable definition that matches the reference in the scope nodes on the stack . If found a reference node that can repeat this lookup later is placed on the stack not the current value itself . This is done because the value may change if the variable reference is inside a mixin .,src/main/java/com/bazaarvoice/jless/parser/Parser.java,"[{'Syntax': 'isParserTranslationEnabled()', 'FunctionName': 'isParserTranslationEnabled', 'ArgsCount': 0, 'MethodBody': 'protected boolean isParserTranslationEnabled() {\n        return _parserTranslationEnabled;\n    }', 'FileName': '/jryans/jless/src/main/java/com/bazaarvoice/jless/parser/Parser.java'}, {'Syntax': 'scope.isVariableDefined(name)', 'FunctionName': 'isVariableDefined', 'ArgsCount': 1, 'MethodBody': 'public boolean isVariableDefined(String name) {\n        return _variableNameToValueMap.containsKey(name);\n    }', 'FileName': '/jryans/jless/src/main/java/com/bazaarvoice/jless/ast/node/ScopeNode.java'}]"
6621cd84cda9bd4817b10fb5,oblac/jodd,"int addConstantNameAndType(final String name, final String descriptor) {
    final int tag = Symbol.CONSTANT_NAME_AND_TYPE_TAG;
    int hashCode = hash(tag, name, descriptor);
    Entry entry = get(hashCode);
    while (entry != null) {
      if (entry.tag == tag
          && entry.hashCode == hashCode
          && entry.name.equals(name)
          && entry.value.equals(descriptor)) {
        return entry.index;
      }
      entry = entry.next;
    }
    constantPool.put122(tag, addConstantUtf8(name), addConstantUtf8(descriptor));
    return put(new Entry(constantPoolCount++, tag, name, descriptor, hashCode)).index;
  }",Adds a CONSTANT_NameAndType_info to the constant pool of this symbol table . Does nothing if the constant pool already contains a similar item .,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,"[{'Syntax': 'get(hashCode)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'entry.name.equals(name)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'entry.value.equals(descriptor)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'put(new Entry(constantPoolCount++, tag, name, descriptor, hashCode))', 'FunctionName': 'put', 'ArgsCount': 1, 'MethodBody': '@RestAction(""{iban}"")\n\t@RenderWith(Book2ActionResult.class)\n\tpublic Book put(@In long iban) {\n\t\tBook book = new Book();\n\n\t\tbook.setIban(iban);\n\t\tbook.setName(""Songs of Distant Earth"");\n\n\t\t// Book2ActionResult will render a book\n\t\treturn book;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/test/java/jodd/madvoc/action/BookAction.java'}]"
6621cd84cda9bd4817b10fb6,Unidata/thredds,"int readTop(ucar.unidata.io.RandomAccessFile raf) throws IOException {
        int pos = 0;

        // long     actualSize = 0;
        raf.seek(pos);

        int readLen = 35;

        // Read in the contents of the NEXRAD Level III product head
        byte[] b = new byte[readLen];

        int rc = raf.read(b);

        if (rc != readLen) {
            return 0;
        }

        // check
        if ((convertunsignedByte2Short(b[0]) != 0x00) || (convertunsignedByte2Short(b[1]) != 0xF0)
                || (convertunsignedByte2Short(b[2]) != 0x09)) {
            return 0;
        }

        String pidd  = new String(b, 15, 5, CDM.utf8Charset);

        if (pidd.contains(""NOWRA"") || pidd.contains(""USRAD"") || pidd.contains(""NEX"")) {
            return 1;
        } else {
            return 0;
        }
    }",read the header of input file and parsing the NOWRAD part,cdm/src/main/java/ucar/nc2/iosp/nowrad/NOWRadheader.java,[]
6621cd84cda9bd4817b10fb7,wavesplatform/WavesJ,"public static byte[] decode(String input) throws IllegalArgumentException {
        if (input.startsWith(""base58:"")) input = input.substring(7);
        if (input.length() == 0) return new byte[0];

        // Convert the base58-encoded ASCII chars to a base58 byte sequence (base58 digits).
        byte[] input58 = new byte[input.length()];
        for (int i = 0; i < input.length(); ++i) {
            char c = input.charAt(i);
            int digit = c < 128 ? INDEXES[c] : -1;
            if (digit < 0) {
                throw new IllegalArgumentException(""Illegal character "" + c + "" at position "" + i);
            }
            input58[i] = (byte) digit;
        }
        // Count leading zeros.
        int zeros = 0;
        while (zeros < input58.length && input58[zeros] == 0) {
            ++zeros;
        }
        // Convert base-58 digits to base-256 digits.
        byte[] decoded = new byte[input.length()];
        int outputStart = decoded.length;
        for (int inputStart = zeros; inputStart < input58.length; ) {
            decoded[--outputStart] = divmod(input58, inputStart, 58, 256);
            if (input58[inputStart] == 0) {
                ++inputStart; // optimization - skip leading zeros
            }
        }
        // Ignore extra leading zeroes that were added during the calculation.
        while (outputStart < decoded.length && decoded[outputStart] == 0) {
            ++outputStart;
        }
        // Return decoded data (including original number of leading zeros).
        return Arrays.copyOfRange(decoded, outputStart - zeros, decoded.length);
    }",Decodes the given base58 string into the original data bytes .,src/main/java/com/wavesplatform/wavesj/Base58.java,[]
6621cd84cda9bd4817b10fb8,spring-projects/spring-security,"public String getPrincipal() {
		Authentication authentication = SecurityContextHolder.getContext()
				.getAuthentication();

		if (authentication == null) {
			log.warn(""No Authentication object set in SecurityContext - returning empty String as Principal"");
			return """";
		}

		Object principal = authentication.getPrincipal();

		if (principal instanceof LdapUserDetails) {
			LdapUserDetails details = (LdapUserDetails) principal;
			return details.getDn();
		}
		else if (authentication instanceof AnonymousAuthenticationToken) {
			if (log.isDebugEnabled()) {
				log.debug(""Anonymous Authentication, returning empty String as Principal"");
			}
			return """";
		}
		else {
			throw new IllegalArgumentException(
					""The principal property of the authentication object""
							+ ""needs to be an LdapUserDetails."");
		}
	}",Get the principals of the logged in user in this case the distinguished name .,ldap/src/main/java/org/springframework/security/ldap/authentication/SpringSecurityAuthenticationSource.java,"[{'Syntax': 'SecurityContextHolder.getContext()\n\t\t\t\t.getAuthentication()', 'FunctionName': 'getAuthentication', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic Authentication getAuthentication() {\n\t\t\treturn this.authentication;\n\t\t}', 'FileName': '/spring-projects/spring-security/messaging/src/test/java/org/springframework/security/messaging/handler/invocation/reactive/CurrentSecurityContextArgumentResolverTests.java'}, {'Syntax': 'SecurityContextHolder.getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'Context getContext() {\n\t\tif (this.next == null) {\n\t\t\treturn this.context;\n\t\t}\n\t\treturn this.next.getContext();\n\t}', 'FileName': '/spring-projects/spring-security/rsocket/src/main/java/org/springframework/security/rsocket/core/ContextPayloadInterceptorChain.java'}, {'Syntax': 'authentication.getPrincipal()', 'FunctionName': 'getPrincipal', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic Object getPrincipal() {\n\t\treturn this.principal;\n\t}', 'FileName': '/spring-projects/spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/authentication/Saml2Authentication.java'}, {'Syntax': 'details.getDn()', 'FunctionName': 'getDn', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String getDn() {\n\t\treturn this.dn;\n\t}', 'FileName': '/spring-projects/spring-security/ldap/src/main/java/org/springframework/security/ldap/userdetails/LdapUserDetailsImpl.java'}, {'Syntax': 'log.debug(""Anonymous Authentication, returning empty String as Principal"")', 'FunctionName': 'debug', 'ArgsCount': 1, 'MethodBody': 'public WebSecurity debug(boolean debugEnabled) {\n\t\tthis.debugEnabled = debugEnabled;\n\t\treturn this;\n\t}', 'FileName': '/spring-projects/spring-security/config/src/main/java/org/springframework/security/config/annotation/web/builders/WebSecurity.java'}]"
6621cd84cda9bd4817b10fb9,robeio/robe,"private String generateTokenString() throws Exception {
        //Renew age
        //Stringify token data
        StringBuilder dataString = new StringBuilder();
        dataString
                .append(getUserId())
                .append(SEPARATOR)
                .append(getUsername())
                .append(SEPARATOR)
                .append(getExpirationDate().getTime())
                .append(SEPARATOR)
                .append(attributesHash);

        // Encrypt token data string
        String newTokenString = encryptor.encrypt(dataString.toString());
        newTokenString = BaseEncoding.base16().encode(newTokenString.getBytes());
        tokenString = newTokenString;
        return newTokenString;
    }",Generates a tokenString with a new expiration date and assigns it .,robe-auth/src/main/java/io/robe/auth/token/BasicToken.java,"[{'Syntax': 'getUserId()', 'FunctionName': 'getUserId', 'ArgsCount': 0, 'MethodBody': 'String getUserId();', 'FileName': '/robeio/robe/robe-auth/src/main/java/io/robe/auth/Credentials.java'}, {'Syntax': 'getUsername()', 'FunctionName': 'getUsername', 'ArgsCount': 0, 'MethodBody': 'String getUsername();', 'FileName': '/robeio/robe/robe-auth/src/main/java/io/robe/auth/Credentials.java'}, {'Syntax': 'getExpirationDate()', 'FunctionName': 'getExpirationDate', 'ArgsCount': 0, 'MethodBody': 'public Date getExpirationDate() {\n        return expireAt.toDate();\n    }', 'FileName': '/robeio/robe/robe-auth/src/main/java/io/robe/auth/token/BasicToken.java'}, {'Syntax': 'dataString.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n        final StringBuilder sb = new StringBuilder(""SamplePojo{"");\n        sb.append(""id="").append(id);\n        sb.append("", name=\'"").append(name).append(\'\\\'\');\n        sb.append("", surname=\'"").append(surname).append(\'\\\'\');\n        sb.append("", longid="").append(longid);\n        sb.append("", doubleid="").append(doubleid);\n        sb.append("", big="").append(big);\n        sb.append("", date2="").append(date2);\n        sb.append("", sampleEnum="").append(sampleEnum);\n        sb.append(\'}\');\n        return sb.toString();\n    }', 'FileName': '/robeio/robe/robe-convert/src/test/java/io/robe/convert/SamplePojo.java'}]"
6621cd84cda9bd4817b10fba,deeplearning4j/nd4j,"public static String[] getStrings(String str, String delim){
        Collection<String> values = getStringCollection(str, delim);
        if(values.size() == 0) {
            return null;
        }
        return values.toArray(new String[values.size()]);
    }",Returns an arraylist of strings .,nd4j-common/src/main/java/org/nd4j/util/StringUtils.java,[]
6621cd85cda9bd4817b10fbb,objectify/objectify,"public static ForwardPath of(Path path) {
		ForwardPath next = new ForwardPath(path);
		if (path.getPrevious() == Path.root())
			return next;
		
		ForwardPath previous = of(path.getPrevious());
		previous.next = next;
		
		return previous;
	}",Recursive method which reverses the path into a ForwardPath .,src/main/java/com/googlecode/objectify/impl/ForwardPath.java,"[{'Syntax': 'path.getPrevious()', 'FunctionName': 'getPrevious', 'ArgsCount': 0, 'MethodBody': 'public Path getPrevious() {\n\t\treturn previous;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/Path.java'}, {'Syntax': 'Path.root()', 'FunctionName': 'root', 'ArgsCount': 0, 'MethodBody': 'public static Path root() {\n\t\treturn ROOT;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/Path.java'}, {'Syntax': 'of(path.getPrevious())', 'FunctionName': 'of', 'ArgsCount': 1, 'MethodBody': 'public static ForwardPath of(Path path) {\n\t\tForwardPath next = new ForwardPath(path);\n\t\tif (path.getPrevious() == Path.root())\n\t\t\treturn next;\n\t\t\n\t\tForwardPath previous = of(path.getPrevious());\n\t\tprevious.next = next;\n\t\t\n\t\treturn previous;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/ForwardPath.java'}, {'Syntax': 'path.getPrevious()', 'FunctionName': 'getPrevious', 'ArgsCount': 0, 'MethodBody': 'public Path getPrevious() {\n\t\treturn previous;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/Path.java'}]"
6621cd85cda9bd4817b10fbc,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:50:55+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setZimmertyp(Zimmer.Zimmertyp value) {
        this.zimmertyp = value;
    }",Sets the value of the zimmertyp property .,ImmoXML/src/main/jaxb/org/openestate/io/immoxml/xml/Zimmer.java,[]
6621cd85cda9bd4817b10fbd,kiegroup/droolsjbpm-tools,"public ILocator newLocator(String resourceURL, String label) {
        return locatorFactory.newLocator(resourceURL, label);
    }",Answer a new resource locator that identifies a particular server resource by it s URL and label .,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/WebDAVFactory.java,"[{'Syntax': 'locatorFactory.newLocator(resourceURL, label)', 'FunctionName': 'newLocator', 'ArgsCount': 2, 'MethodBody': 'public ILocator newLocator(String requestURL, String label);', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/ILocatorFactory.java'}]"
6621cd85cda9bd4817b10fbe,deeplearning4j/nd4j,"public static String getStackTrace(Thread t) {
        final StackTraceElement[] stackTrace = t.getStackTrace();
        StringBuilder str = new StringBuilder();
        for (StackTraceElement e : stackTrace) {
            str.append(e.toString() + ""\n"");
        }
        return str.toString();
    }",Get stack trace for a given thread .,nd4j-common/src/main/java/org/nd4j/util/StringUtils.java,[]
6621cd85cda9bd4817b10fbf,fabric8io/fabric8-maven-plugin,"private Date getBuildReferenceDate() throws MojoExecutionException {
        // Pick up an existing build date created by fabric8:build previously
        File tsFile = new File(project.getBuild().getDirectory(), AbstractDockerMojo.DOCKER_BUILD_TIMESTAMP);
        if (!tsFile.exists()) {
            return new Date();
        }
        try {
            return EnvUtil.loadTimestamp(tsFile);
        } catch (IOException e) {
            throw new MojoExecutionException(""Cannot read timestamp from "" + tsFile, e);
        }
    }",get a reference date,plugin/src/main/java/io/fabric8/maven/plugin/mojo/build/ResourceMojo.java,"[{'Syntax': 'project.getBuild().getDirectory()', 'FunctionName': 'getDirectory', 'ArgsCount': 0, 'MethodBody': '@Mock\n        public String getDirectory() {\n            return ""/the/directory"";\n        }', 'FileName': '/fabric8io/fabric8-maven-plugin/generator/java-exec/src/test/java/io/fabric8/maven/generator/javaexec/JavaExecGeneratorMainClassDeterminationTest.java'}, {'Syntax': 'project.getBuild()', 'FunctionName': 'getBuild', 'ArgsCount': 0, 'MethodBody': '@Mock\n        public Build getBuild() {\n\n            return new Build();\n        }', 'FileName': '/fabric8io/fabric8-maven-plugin/generator/java-exec/src/test/java/io/fabric8/maven/generator/javaexec/JavaExecGeneratorMainClassDeterminationTest.java'}]"
6621cd85cda9bd4817b10fc0,oblac/jodd,"public Object newBeanInstance() {
		if (beanDefinition.ctor == CtorInjectionPoint.EMPTY) {
			throw new PetiteException(""No constructor (annotated, single or default) founded as injection point for: "" + beanDefinition.type.getName());
		}

		int paramNo = beanDefinition.ctor.references.length;
		Object[] args = new Object[paramNo];

		// wiring
		if (beanDefinition.wiringMode != WiringMode.NONE) {
			for (int i = 0; i < paramNo; i++) {
				args[i] = pc.getBean(beanDefinition.ctor.references[i]);
				if (args[i] == null) {
					if ((beanDefinition.wiringMode == WiringMode.STRICT)) {
						throw new PetiteException(
							""Wiring constructor failed. References '"" + beanDefinition.ctor.references[i] +
								""' not found for constructor: "" + beanDefinition.ctor.constructor);
					}
				}
			}
		}

		// create instance
		final Object bean;
		try {
			bean = beanDefinition.ctor.constructor.newInstance(args);
		} catch (Exception ex) {
			throw new PetiteException(""Failed to create new bean instance '"" + beanDefinition.type.getName() + ""' using constructor: "" + beanDefinition.ctor.constructor, ex);
		}

		return bean;
	}",Creates a new instance .,jodd-petite/src/main/java/jodd/petite/BeanData.java,"[{'Syntax': 'beanDefinition.type.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'beanDefinition.type.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}]"
6621cd85cda9bd4817b10fc1,orientechnologies/orientdb,"private static Set<ORecord> mergeSet(Set<ORecord> target, Set<ORecord> source) {
    if (source != null) {
      if (target == null) {
        return source;
      } else {
        if (target.size() > source.size()) {
          target.addAll(source);
          return target;
        } else {
          source.addAll(target);
          return source;
        }
      }
    } else {
      return target;
    }
  }",Merge the two set try to use the optimum case,core/src/main/java/com/orientechnologies/orient/core/record/impl/ODirtyManager.java,"[{'Syntax': 'target.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'source.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'target.addAll(source)', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean addAll(\n      Collection<? extends OTransactionIndexChangesPerKey.OTransactionIndexEntry> c) {\n    boolean result = false;\n\n    for (OTransactionIndexChangesPerKey.OTransactionIndexEntry item : c) {\n      result = result || add(item);\n    }\n    return result;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTxIndexChangesList.java'}, {'Syntax': 'source.addAll(target)', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean addAll(\n      Collection<? extends OTransactionIndexChangesPerKey.OTransactionIndexEntry> c) {\n    boolean result = false;\n\n    for (OTransactionIndexChangesPerKey.OTransactionIndexEntry item : c) {\n      result = result || add(item);\n    }\n    return result;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTxIndexChangesList.java'}]"
6621cd85cda9bd4817b10fc2,orientechnologies/orientdb,"private void readParameters(final OContextConfiguration iServerConfig, final OServerParameterConfiguration[] iParameters) {
    configuration = new OContextConfiguration(iServerConfig);

    // SET PARAMETERS
    if (iParameters != null && iParameters.length > 0) {
      // CONVERT PARAMETERS IN MAP TO INTIALIZE THE CONTEXT-CONFIGURATION
      for (OServerParameterConfiguration param : iParameters)
        configuration.setValue(param.name, param.value);
    }

    socketBufferSize = configuration.getValueAsInteger(OGlobalConfiguration.NETWORK_SOCKET_BUFFER_SIZE);
  }",Initializes connection parameters by the reading XML configuration . If not specified get the parameters defined as global configuration .,server/src/main/java/com/orientechnologies/orient/server/network/OServerNetworkListener.java,"[{'Syntax': 'configuration.setValue(param.name, param.value)', 'FunctionName': 'setValue', 'ArgsCount': 2, 'MethodBody': 'public Object setValue(final OGlobalConfiguration iConfig, final Object iValue) {\n    if (iValue == null) return config.remove(iConfig.getKey());\n\n    return config.put(iConfig.getKey(), iValue);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/config/OContextConfiguration.java'}, {'Syntax': 'configuration.getValueAsInteger(OGlobalConfiguration.NETWORK_SOCKET_BUFFER_SIZE)', 'FunctionName': 'getValueAsInteger', 'ArgsCount': 1, 'MethodBody': 'public int getValueAsInteger(final OGlobalConfiguration iConfig) {\n    final Object v = getValue(iConfig);\n    if (v == null) return 0;\n    return v instanceof Integer ? ((Integer) v).intValue() : Integer.parseInt(v.toString());\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/config/OContextConfiguration.java'}]"
6621cd85cda9bd4817b10fc3,orientechnologies/orientdb,"public OrientGraph getTx() {
    final OrientGraph g;
    if (pool == null) {
      g = (OrientGraph) getTxGraphImplFactory().getGraph(getDatabase(), user, password, settings);
    } else {
      // USE THE POOL
      g = (OrientGraph) getTxGraphImplFactory().getGraph(pool, settings);
    }

    initGraph(g);
    return g;
  }",Gets transactional graph with the database from pool if pool is configured . Otherwise creates a graph with new db instance . The Graph instance inherits the factory s configuration .,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraphFactory.java,"[{'Syntax': 'getTxGraphImplFactory().getGraph(getDatabase(), user, password, settings)', 'FunctionName': 'getGraph', 'ArgsCount': 4, 'MethodBody': 'OrientBaseGraph getGraph(\n        ODatabaseDocumentInternal database, String user, String password, Settings settings);', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraphFactory.java'}, {'Syntax': 'getTxGraphImplFactory()', 'FunctionName': 'getTxGraphImplFactory', 'ArgsCount': 0, 'MethodBody': 'public static OrientGraphImplFactory getTxGraphImplFactory() {\n    return graphTxImplFactory;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraphFactory.java'}, {'Syntax': 'getDatabase()', 'FunctionName': 'getDatabase', 'ArgsCount': 0, 'MethodBody': 'ODatabaseDocumentInternal getDatabase();', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTransactionInternal.java'}, {'Syntax': 'getTxGraphImplFactory().getGraph(pool, settings)', 'FunctionName': 'getGraph', 'ArgsCount': 2, 'MethodBody': 'public static OrientGraph getGraph(\n      final boolean autoStartTx, OModifiableBoolean shouldBeShutDown) {\n    final ODatabaseDocumentInternal database = ODatabaseRecordThreadLocal.instance().get();\n\n    final OrientBaseGraph result = OrientBaseGraph.getActiveGraph();\n\n    if (result != null && (result instanceof OrientGraph)) {\n      final ODatabaseDocumentInternal graphDb = (ODatabaseDocumentInternal) result.getRawGraph();\n\n      // CHECK IF THE DATABASE + USER IN TL IS THE SAME IN ORDER TO USE IT\n      if (canReuseActiveGraph(graphDb, database)) {\n\n        if (!graphDb.isClosed()) {\n          ODatabaseRecordThreadLocal.instance().set(graphDb);\n          if (autoStartTx && autoTxStartRequired(graphDb)) ((OrientGraph) result).begin();\n\n          shouldBeShutDown.setValue(false);\n          return (OrientGraph) result;\n        }\n      }\n    }\n    // Set it again on ThreadLocal because the getRawGraph() may have set a closed db in the\n    // thread-local\n    ODatabaseRecordThreadLocal.instance().set(database);\n    shouldBeShutDown.setValue(true);\n\n    final OrientGraph g =\n        (OrientGraph) OrientGraphFactory.getTxGraphImplFactory().getGraph(database, false);\n    if (autoStartTx && autoTxStartRequired(database)) g.begin();\n    return g;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/orientechnologies/orient/graph/sql/OGraphCommandExecutorSQLFactory.java'}, {'Syntax': 'getTxGraphImplFactory()', 'FunctionName': 'getTxGraphImplFactory', 'ArgsCount': 0, 'MethodBody': 'public static OrientGraphImplFactory getTxGraphImplFactory() {\n    return graphTxImplFactory;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraphFactory.java'}, {'Syntax': 'initGraph(g)', 'FunctionName': 'initGraph', 'ArgsCount': 1, 'MethodBody': 'protected void initGraph(final OrientBaseGraph g) {\n    if (used.compareAndSet(false, true)) {\n      // EXECUTE ONLY ONCE\n      final ODatabaseDocument db = g.getRawGraph();\n      boolean txActive = db.getTransaction().isActive();\n\n      if (txActive)\n        // COMMIT TX BEFORE ANY SCHEMA CHANGES\n        db.commit();\n\n      if (txActive) {\n        // REOPEN IT AGAIN\n        db.begin();\n        db.getTransaction().setUsingLog(settings.isUseLog());\n      }\n    }\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraphFactory.java'}]"
6621cd85cda9bd4817b10fc4,eclipse/packagedrone,"private void invokePlugin(Node.CustomTag n) {
	TagPlugin tagPlugin = tagPlugins.get(n.getTagHandlerClass().getName());
	if (tagPlugin == null) {
	    return;
	}

	TagPluginContext tagPluginContext = new TagPluginContextImpl(n, pageInfo);
	n.setTagPluginContext(tagPluginContext);
	tagPlugin.doTag(tagPluginContext);
    }",Invoke tag plugin for the given custom tag if a plugin exists for the custom tag s tag handler .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagPluginManager.java,"[{'Syntax': 'tagPlugins.get(n.getTagHandlerClass().getName())', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'protected void get ( final String url )\n    {\n        System.out.println ( ""Getting: "" + url );\n        this.context.getResolved ( url );\n    }', 'FileName': '/eclipse/packagedrone/testing/server-test/src/test/java/org/eclipse/packagedrone/testing/server/channel/ChannelTester.java'}, {'Syntax': 'n.getTagHandlerClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public default String getName ()\n    {\n        return getId ();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.adapter.p2/src/org/eclipse/packagedrone/repo/adapter/p2/internal/aspect/Processor.java'}, {'Syntax': 'n.getTagHandlerClass()', 'FunctionName': 'getTagHandlerClass', 'ArgsCount': 0, 'MethodBody': 'public Class getTagHandlerClass() {\n            return tagHandlerClass;\n        }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Generator.java'}, {'Syntax': 'n.setTagPluginContext(tagPluginContext)', 'FunctionName': 'setTagPluginContext', 'ArgsCount': 1, 'MethodBody': 'public void setTagPluginContext(TagPluginContext tagPluginContext) {\n\t    this.tagPluginContext = tagPluginContext;\n\t}', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Node.java'}, {'Syntax': 'tagPlugin.doTag(tagPluginContext)', 'FunctionName': 'doTag', 'ArgsCount': 1, 'MethodBody': 'public void doTag(TagPluginContext ctxt) {\n\n\tString index = null;\n\n\tboolean hasVarStatus = ctxt.isAttributeSpecified(""varStatus"");\n\tif (hasVarStatus) {\n\t    ctxt.dontUseTagPlugin();\n\t    return;\n\t}\n\n\thasVar = ctxt.isAttributeSpecified(""var"");\n\thasBegin = ctxt.isAttributeSpecified(""begin"");\n\thasEnd = ctxt.isAttributeSpecified(""end"");\n\thasStep = ctxt.isAttributeSpecified(""step"");\n\n\tboolean hasItems = ctxt.isAttributeSpecified(""items"");\n\tif (hasItems) {\n\t    doCollection(ctxt);\n\t    return;\n\t}\n\n\t// We must have a begin and end attributes\n\tindex = ctxt.getTemporaryVariableName();\n\tctxt.generateJavaSource(""for (int "" + index + "" = "");\n\tctxt.generateAttribute(""begin"");\n\tctxt.generateJavaSource(""; "" + index + "" <= "");\n\tctxt.generateAttribute(""end"");\n\tif (hasStep) {\n\t    ctxt.generateJavaSource(""; "" + index + ""+="");\n\t    ctxt.generateAttribute(""step"");\n\t    ctxt.generateJavaSource("") {"");\n\t}\n\telse {\n\t    ctxt.generateJavaSource(""; "" + index + ""++) {"");\n\t}\n\n\t// If var is specified and the body contains an EL, then sycn\n\t// the var attribute\n\tif (hasVar /* && ctxt.hasEL() */) {\n\t    ctxt.generateJavaSource(""_jspx_page_context.setAttribute("");\n\t    ctxt.generateAttribute(""var"");\n\t    ctxt.generateJavaSource("", String.valueOf("" + index + ""));"");\n\t}\n\tctxt.generateBody();\n\tctxt.generateJavaSource(""}"");\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/tagplugins/jstl/ForEach.java'}]"
6621cd85cda9bd4817b10fc5,stanfy/enroscar,"protected static void writeInputStreamToOutput(final Context context, final InputStream source, final OutputStream output) throws IOException {
    BuffersPool pool = BeansManager.get(context).getContainer().getBean(BuffersPool.class);
    IoUtils.transfer(source, output, pool);
  }",Utility method for transferring input stream to output .,net/src/main/java/com/stanfy/enroscar/rest/request/binary/BinaryData.java,"[{'Syntax': 'BeansManager.get(context)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public byte[] get(final int minCapacity) {\r\n    synchronized (lock) {\r\n      usedBuffersCount++;\r\n\r\n      final SortedMap<Integer, List<Object>> map = buffers.tailMap(minCapacity);\r\n      if (map.isEmpty()) {\r\n        allocatedBuffersCount++;\r\n        return allocate(minCapacity);\r\n      }\r\n\r\n      final List<Object> bList = map.get(map.firstKey());\r\n      if (bList == null || bList.isEmpty()) {\r\n        allocatedBuffersCount++;\r\n        return allocate(minCapacity);\r\n      }\r\n\r\n      return (byte[])bList.remove(0);\r\n    }\r\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/BuffersPool.java'}, {'Syntax': 'IoUtils.transfer(source, output, pool)', 'FunctionName': 'transfer', 'ArgsCount': 3, 'MethodBody': 'public static void transfer(final InputStream input, final OutputStream output, final BuffersPool buffersPool) throws IOException {\n    final InputStream in = buffersPool == null\n        ? new BufferedInputStream(input, BUFFER_SIZE_8K)\n        : new PoolableBufferedInputStream(input, BUFFER_SIZE_8K, buffersPool);\n\n    final byte[] buffer = buffersPool == null\n        ? new byte[BUFFER_SIZE_8K]\n        : buffersPool.get(BUFFER_SIZE_8K);\n\n    try {\n      int cnt;\n      while ((cnt = in.read(buffer)) != EOF) {\n        output.write(buffer, 0, cnt);\n      }\n      output.flush();\n    } finally {\n      closeQuietly(in);\n\n      if (buffersPool != null) {\n        buffersPool.release(buffer);\n      }\n    }\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/IoUtils.java'}]"
6621cd85cda9bd4817b10fc6,intellimate/IzouSDK,"public void setPresence(boolean present) {
        if (this.present == present)
            return;
        this.present = present;
        updateVague();
        if (present) {
            firePresence(true);
        } else {
            fireLeaving();
        }
    }",sets the presence,src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/template/PresenceConstant.java,"[{'Syntax': 'updateVague()', 'FunctionName': 'updateVague', 'ArgsCount': 0, 'MethodBody': 'private void updateVague() {\n        generateResource(PresenceResource.ID)\n            .orElse(CompletableFuture.completedFuture(new ArrayList<>()))\n            .thenAccept(list -> mostVague.set(list.stream()\n                            .map(Presence::importPresence)\n                            .filter(Optional::isPresent)\n                            .map(Optional::get)\n                            .map(Presence::getLevel)\n                            .noneMatch(level -> level.compareTo(getLevel()) > 0))\n            );\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/template/PresenceConstant.java'}, {'Syntax': 'firePresence(true)', 'FunctionName': 'firePresence', 'ArgsCount': 1, 'MethodBody': 'default void firePresence(boolean known) {\n        firePresence(new ArrayList<>(), known);\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/PresenceHelper.java'}, {'Syntax': 'fireLeaving()', 'FunctionName': 'fireLeaving', 'ArgsCount': 0, 'MethodBody': 'default void fireLeaving() {\n        Optional<LeavingEvent> startEvent = IdentificationManagerM.getInstance().getIdentification(this)\n                .flatMap(id -> LeavingEvent.createLeavingEvent(id, isStrict(), new ArrayList<>()));\n        if (!startEvent.isPresent()) {\n            getContext().getLogger().error(""unable to fire startEvent"");\n        } else {\n            fire(startEvent.get(), 5);\n        }\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/PresenceHelper.java'}]"
6621cd85cda9bd4817b10fc7,tiefaces/TieFaces,"private static void setCellValueNumber(final Cell c, final String value) {
		double val = Double.parseDouble(value.replace(Character.toString(','), """"));
		c.setCellType(CellType.NUMERIC);
		c.setCellValue(val);
	}",Sets the cell value number .,src/org/tiefaces/components/websheet/utility/CellUtility.java,"[{'Syntax': 'c.setCellValue(val)', 'FunctionName': 'setCellValue', 'ArgsCount': 1, 'MethodBody': 'public final void setCellValue(final String pcellValue) {\r\n\t\tthis.cellValue = pcellValue;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/HeaderCell.java'}]"
6621cd85cda9bd4817b10fc8,oblac/jodd,"protected void cacheResultSetEntities(final Object[] result) {
		if (entitiesCache == null) {
			entitiesCache = new HashMap<>();
		}

		for (int i = 0; i < result.length; i++) {
			Object object = result[i];

			if (object == null) {
				continue;
			}

			DbEntityDescriptor ded = cachedDbEntityDescriptors[i];

			if (ded == null) {	// not a type, continue
				continue;
			}

			// calculate key
			Object key;
			if (ded.hasIdColumn()) {
				//noinspection unchecked
				key = ded.getKeyValue(object);
			} else {
				key = object;
			}

			Object cachedObject = entitiesCache.get(key);

			if (cachedObject == null) {
				// object is not in the cache, add it
				entitiesCache.put(key, object);
			} else {
				// object is in the cache, replace it
				result[i] = cachedObject;
			}
		}
	}",Caches returned entities . Replaces new instances with existing ones .,jodd-db/src/main/java/jodd/db/oom/mapper/DefaultResultSetMapper.java,"[{'Syntax': 'entitiesCache.get(key)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'entitiesCache.put(key, object)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void put(final K key, final V object) {\n\t\tput(key, object, timeout);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cd85cda9bd4817b10fc9,kiegroup/droolsjbpm-tools,"private int calcNumberOfColumns() {
		int result = 0;
		if (fields != null) {
			Iterator<FieldEditor> e = fields.iterator();
			while (e.hasNext()) {
				FieldEditor pe = e.next();
				result = Math.max(result, pe.getNumberOfControls());
			}
		}
		return result;
	}",Calculates the number of columns needed to host all field editors .,drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/preferences/FieldEditorPropertyPage.java,"[{'Syntax': 'fields.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': 'public Iterator<?> iterator() {\n            return (new ArrayList<Object>()).iterator();\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/menu/RuleHelperActionDelegate.java'}, {'Syntax': 'e.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic boolean hasNext() {\n\t\t\tif (!hasChildren())\n\t\t\t\treturn false;\n\t\t\t\n\t\t\tif (iteratorIndex==-1) {\n\t\t\t\titeratorIndex = 0;\n\t\t\t\titerators = new ArrayList<Iterator<T>>();\n\t\t\t\tfor (T child : children) {\n\t\t\t\t\titerators.add(((Iterable<T>)child).iterator());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn iteratorIndex<iterators.size() || childIndex<children.size();\n\t\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/view/utils/SimpleTreeIterator.java'}, {'Syntax': 'e.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic T next() {\n\t\t\tif (!hasChildren())\n\t\t\t\treturn null;\n\t\t\twhile (iteratorIndex<iterators.size()) {\n\t\t\t\tIterator<T> iter = iterators.get(iteratorIndex);\n\t\t\t\tif (iter.hasNext())\n\t\t\t\t\treturn iter.next();\n\t\t\t\t++iteratorIndex;\n\t\t\t}\n\t\t\tif (childIndex<children.size()) {\n\t\t\t\tT child = children.get(childIndex);\n\t\t\t\t++childIndex;\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\treturn null;\n\t\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/view/utils/SimpleTreeIterator.java'}, {'Syntax': 'pe.getNumberOfControls()', 'FunctionName': 'getNumberOfControls', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic int getNumberOfControls() {\n        return 2;\n\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/preferences/ReadonlyStringFieldEditor.java'}]"
6621cd85cda9bd4817b10fca,alipay/sofa-bolt,"public static String parseRemoteIP(final Channel channel) {
        if (null == channel) {
            return StringUtils.EMPTY;
        }
        final InetSocketAddress remote = (InetSocketAddress) channel.remoteAddress();
        if (remote != null) {
            return remote.getAddress().getHostAddress();
        }
        return StringUtils.EMPTY;
    }",Parse the remote host ip of the channel .,src/main/java/com/alipay/remoting/util/RemotingUtil.java,"[{'Syntax': 'channel.remoteAddress()', 'FunctionName': 'remoteAddress', 'ArgsCount': 0, 'MethodBody': '@Override\n        public SocketAddress remoteAddress() {\n            return null;\n        }', 'FileName': '/alipay/sofa-bolt/src/test/java/com/alipay/remoting/codec/ProtocolCodeBasedDecoderTest.java'}]"
6621cd85cda9bd4817b10fcb,stanfy/enroscar,"private synchronized File ensureWorkingDirectory() throws IOException {
    File directory = getWorkingDirectory();
    if (!directory.exists()) {
      if (!directory.mkdirs()) {
        throw new IOException(""Working directory "" + directory + "" cannot be created"");
      }
    } else {
      if (!directory.isDirectory()) {
        if (!directory.delete()) {
          throw new IOException(directory + "" is not a directory and cannot be deleted"");
        }
        if (!directory.mkdirs()) {
          throw new IOException(""Working directory "" + directory + "" cannot be recreated"");
        }
      }
    }
    return directory;
  }",this method is synchronized in order to avoid concurrent calls to mkdir,net/src/main/java/com/stanfy/enroscar/net/cache/BaseFileResponseCache.java,"[{'Syntax': 'getWorkingDirectory()', 'FunctionName': 'getWorkingDirectory', 'ArgsCount': 0, 'MethodBody': 'public File getWorkingDirectory() { return workingDirectory; }', 'FileName': '/stanfy/enroscar/net/src/main/java/com/stanfy/enroscar/net/cache/BaseSizeRestrictedCache.java'}, {'Syntax': 'directory.delete()', 'FunctionName': 'delete', 'ArgsCount': 0, 'MethodBody': 'public void delete() throws IOException {\n    if (DEBUG) { Log.d(TAG, ""Delete cache workingDirectory="" + diskCache.getDirectory()); }\n    diskCache.delete();\n  }', 'FileName': '/stanfy/enroscar/net/src/main/java/com/stanfy/enroscar/net/cache/BaseFileResponseCache.java'}]"
6621cd85cda9bd4817b10fcc,jboss/jboss-common-core,"public boolean hasEdge(Edge<T> e)
   {
      if (e.getFrom() == this)
         return outgoingEdges.contains(e);
      else if (e.getTo() == this)
         return incomingEdges.contains(e);
      else 
         return false;
   }",Check the vertex for either an incoming or outgoing edge mathcing e .,src/main/java/org/jboss/util/graph/Vertex.java,"[{'Syntax': 'e.getFrom()', 'FunctionName': 'getFrom', 'ArgsCount': 0, 'MethodBody': 'public Vertex<T> getFrom()\n   {\n      return from;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/graph/Edge.java'}, {'Syntax': 'outgoingEdges.contains(e)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(Object o)\n      {\n         return containsKey(o);\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}, {'Syntax': 'e.getTo()', 'FunctionName': 'getTo', 'ArgsCount': 0, 'MethodBody': 'public Vertex<T> getTo()\n   {\n      return to;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/graph/Edge.java'}, {'Syntax': 'incomingEdges.contains(e)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(Object o)\n      {\n         return containsKey(o);\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}]"
6621cd85cda9bd4817b10fcd,oblac/jodd,"protected void addPropertyInjectionPoint(final PropertyInjectionPoint pip) {
		if (properties == null) {
			properties = new PropertyInjectionPoint[1];
			properties[0] = pip;
		} else {
			properties = ArraysUtil.append(properties, pip);
		}
	}",Adds property injection point .,jodd-petite/src/main/java/jodd/petite/BeanDefinition.java,[]
6621cd85cda9bd4817b10fce,Netflix/hollow,"public static int hashTableSize(int numElements) throws IllegalArgumentException {
        if (numElements < 0) {
            throw new IllegalArgumentException(""cannot be negative; numElements=""+numElements);
        } else if (numElements > HASH_TABLE_MAX_SIZE) {
            throw new IllegalArgumentException(""exceeds maximum number of buckets; numElements=""+numElements);
        }

        if (numElements == 0)
            return 1;
        if (numElements < 3)
            return numElements * 2;

        // Apply load factor to number of elements and determine next
        // largest power of 2 that fits in an int
        int sizeAfterLoadFactor = (int)((long)numElements * 10 / 7);
        int bits = 32 - Integer.numberOfLeadingZeros(sizeAfterLoadFactor - 1);
        return 1 << bits;
    }",Determine size of hash table capable of storing the specified number of elements with a load factor applied .,hollow/src/main/java/com/netflix/hollow/core/memory/encoding/HashCodes.java,[]
6621cd85cda9bd4817b10fcf,Unidata/thredds,"void addParentJoin(Cursor cursor) throws IOException {
    int level = cursor.currentIndex;
    Table t = getTable(level);
    if (t.extraJoins != null) {
      List<StructureData> sdata = new ArrayList<>(3);
      sdata.add(cursor.tableData[level]);
      for (Join j : t.extraJoins) {
        sdata.add(j.getJoinData(cursor));
      }
      cursor.tableData[level] = StructureDataFactory.make(sdata.toArray(new StructureData[sdata.size()]));  // LOOK should try to consolidate
    }
  }",add table join to this cursor level,cdm/src/main/java/ucar/nc2/ft/point/standard/NestedTable.java,[]
6621cd85cda9bd4817b10fd0,wildfly/wildfly,"static String getActiveMQServerName(Map<String, String> properties) {
        return properties.getOrDefault(SERVER, DEFAULT);
    }",The JMS connection factory can specify another server to deploy its destinations by passing a property server = &lt ; name of the server > . Otherwise default is used by default .,messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/JMSConnectionFactoryDefinitionInjectionSource.java,[]
6621cd86cda9bd4817b10fd1,rupertlssmith/lojix,"protected void createArrayProperties()
    {
        // Scan through all defined properties.
        for (Object o : keySet())
        {
            String key = (String) o;
            String value = super.getProperty(key);

            // Split the property key into everything before the last '.' and after it.
            int lastDotIndex = key.lastIndexOf('.');
            String keyEnding = key.substring(lastDotIndex + 1, key.length());
            String keyStart = key.substring(0, (lastDotIndex == -1) ? 0 : lastDotIndex);

            // Check if the property key ends in an integer, in which case it is an array property.
            int index = 0;

            try
            {
                index = Integer.parseInt(keyEnding);
            }
            catch (NumberFormatException e)
            {
                // The ending is not an integer so its not an array.
                // Exception can be ignored as it means this property is not an array.
                e = null;

                continue;
            }

            // Check if an array property already exists for this base name and create one if not.
            ArrayList propArray = (ArrayList) arrayProperties.get(keyStart);

            if (propArray == null)
            {
                propArray = new ArrayList();
                arrayProperties.put(keyStart, propArray);
            }

            // Add the new property value to the array property for the index.
            propArray.set(index, value);
        }
    }",Scans all the properties in the parent Properties object and creates arrays for any array property definitions .,base/common/src/main/com/thesett/common/properties/ContextualProperties.java,"[{'Syntax': 'keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': 'public Set keySet()\n    {\n        // Synchronize on the cache to ensure its integrity in a multi-threaded environment.\n        synchronized (cache)\n        {\n            return cache.keySet();\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/TimeoutMap.java'}, {'Syntax': 'super.getProperty(key)', 'FunctionName': 'getProperty', 'ArgsCount': 1, 'MethodBody': 'public String getProperty(String key)\n    {\n        // Try to get the callers class name and method name by examing the stack.\n        String className = null;\n        String methodName = null;\n\n        // Java 1.4 onwards only.\n        /*try\n        {\n            throw new Exception();\n        }\n        catch (Exception e)\n        {\n            StackTraceElement[] stack = e.getStackTrace();\n\n            // Check that the stack trace contains at least two elements, one for this method and one for the caller.\n            if (stack.length >= 2)\n            {\n                className = stack[1].getClassName();\n                methodName = stack[1].getMethodName();\n            }\n        }*/\n\n        // Java 1.5 onwards only.\n        StackTraceElement[] stack = Thread.currentThread().getStackTrace();\n\n        // Check that the stack trace contains at least two elements, one for this method and one for the caller.\n        if (stack.length >= 2)\n        {\n            className = stack[1].getClassName();\n            methodName = stack[1].getMethodName();\n        }\n\n        // Java 1.3 and before? Not sure, some horrible thing that parses the text spat out by printStackTrace?\n\n        return getProperty(className, methodName, key);\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}, {'Syntax': 'key.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length()\n    {\n        return length;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/ASCIIByteBufferString.java'}, {'Syntax': 'arrayProperties.get(keyStart)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name)\n    {\n        return pageContext.getAttribute(name, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}, {'Syntax': 'arrayProperties.put(keyStart, propArray)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(String name, Object value)\n    {\n        pageContext.setAttribute(name, value, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}, {'Syntax': 'propArray.set(index, value)', 'FunctionName': 'set', 'ArgsCount': 2, 'MethodBody': 'public V set(int index, V value) throws IndexOutOfBoundsException\n    {\n        // Check if the index does not already exist\n        if (index >= data.size())\n        {\n            throw new IndexOutOfBoundsException();\n        }\n\n        return data.set(index, value);\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/maps/HashArray.java'}]"
6621cd86cda9bd4817b10fd2,Unidata/thredds,"private DataType getCoordinateType() {
    List<Dataset> nestedDatasets = getDatasets();
    DatasetOuterDimension first = (DatasetOuterDimension) nestedDatasets.get(0);
    return first.isStringValued ? DataType.STRING : DataType.DOUBLE;
  }",What is the data type of the aggregation coordinate ?,cdm/src/main/java/ucar/nc2/ncml/AggregationNew.java,[]
6621cd86cda9bd4817b10fd3,objectify/objectify,"@SneakyThrows
	public static com.google.cloud.datastore.Key fromUrlSafe(final String urlSafeKey) {
		if (urlSafeKey.startsWith(""a"")) {
			return KeyFormat.INSTANCE.parseOldStyleAppEngineKey(urlSafeKey);
		} else {
			return com.google.cloud.datastore.Key.fromUrlSafe(urlSafeKey);
		}
	}",Understands both the legacy format ag1zfnZvb2Rvb2R5bmUwcgcLEgFCGAEM and new format providing the key either way .,src/main/java/com/googlecode/objectify/impl/Keys.java,"[{'Syntax': 'KeyFormat.INSTANCE.parseOldStyleAppEngineKey(urlSafeKey)', 'FunctionName': 'parseOldStyleAppEngineKey', 'ArgsCount': 1, 'MethodBody': 'public Key parseOldStyleAppEngineKey(final String urlsafeKey) throws InvalidProtocolBufferException {\n        final Descriptors.Descriptor referenceDescriptor = keyDescriptor.findMessageTypeByName(""Reference"");\n        byte[] userKey = BaseEncoding.base64Url().decode(urlsafeKey);\n        final DynamicMessage userKeyMessage = DynamicMessage.newBuilder(referenceDescriptor).mergeFrom(userKey).build();\n        String app = (String) userKeyMessage.getField(referenceDescriptor.findFieldByName(""app""));\n        if (app.startsWith(""s~"")) {\n            app = app.substring(2);\n        }\n        final String namespace = (String) userKeyMessage.getField(referenceDescriptor.findFieldByName(""name_space""));\n        final DynamicMessage path = (DynamicMessage) userKeyMessage.getField(referenceDescriptor.findFieldByName(""path""));\n        final Descriptors.Descriptor pathDescriptor = keyDescriptor.findMessageTypeByName(""Path"");\n        final Descriptors.Descriptor elementDescriptor = keyDescriptor.findMessageTypeByName(""Element"");\n\n        final Descriptors.FieldDescriptor elementFieldDescriptor = pathDescriptor.findFieldByName(""Element"");\n        final int elementCount = path.getRepeatedFieldCount(elementFieldDescriptor);\n\n        Key.Builder keyBuilder = null;\n        for (int i = 0; i < elementCount; i++) {\n            final DynamicMessage element = (DynamicMessage) path.getRepeatedField(elementFieldDescriptor, i);\n            final String type = (String) element.getField(elementDescriptor.findFieldByName(""type""));\n            final Long id = (Long) element.getField(elementDescriptor.findFieldByName(""id""));\n            final String name = (String) element.getField(elementDescriptor.findFieldByName(""name""));\n            if (keyBuilder == null) {\n                if (name != null && !"""".equals(name)) {\n                    keyBuilder = Key.newBuilder(app, type, name);\n                } else {\n                    keyBuilder = Key.newBuilder(app, type, id);\n                }\n            } else {\n                if (name != null && !"""".equals(name)) {\n                    keyBuilder = Key.newBuilder(keyBuilder.build(), type, name);\n                } else {\n                    keyBuilder = Key.newBuilder(keyBuilder.build(), type, id);\n                }\n            }\n        }\n\n        if (keyBuilder != null) {\n            if (namespace != null) {\n                keyBuilder.setNamespace(namespace);\n            }\n            return keyBuilder.build();\n        } else {\n            return null;\n        }\n    }', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/util/KeyFormat.java'}, {'Syntax': 'com.google.cloud.datastore.Key.fromUrlSafe(urlSafeKey)', 'FunctionName': 'fromUrlSafe', 'ArgsCount': 1, 'MethodBody': '@SneakyThrows\n\tpublic static com.google.cloud.datastore.Key fromUrlSafe(final String urlSafeKey) {\n\t\tif (urlSafeKey.startsWith(""a"")) {\n\t\t\treturn KeyFormat.INSTANCE.parseOldStyleAppEngineKey(urlSafeKey);\n\t\t} else {\n\t\t\treturn com.google.cloud.datastore.Key.fromUrlSafe(urlSafeKey);\n\t\t}\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/Keys.java'}]"
6621cd86cda9bd4817b10fd4,Unidata/thredds,"private void convertMemberInfo(StructureMembers wrapperSm) {
    for (StructureMembers.Member m : wrapperSm.getMembers()) {
      Variable v = findVariable(m.getName());
      if ((v == null) && (orgVar != null)) // may have been renamed
        v = (Variable) findVariableFromOrgName(m.getName());

      if (v != null) { // a section will have missing variables LOOK wrapperSm probably wrong in that case
        //  log.error(""Cant find "" + m.getName());
        //else
        m.setVariableInfo(v.getShortName(), v.getDescription(), v.getUnitsString(), v.getDataType());
      }

      // nested structures
      if (v instanceof StructureDS) {
        StructureDS innerStruct = (StructureDS) v;
        innerStruct.convertMemberInfo(m.getStructureMembers());
      }

    }
  }",the wrapper StructureMembers must be converted to correspond to the wrapper Structure,cdm/src/main/java/ucar/nc2/dataset/StructureDS.java,[]
6621cd86cda9bd4817b10fd5,rupertlssmith/lojix,"public static MultiTypeData getMultiTypeData(boolean b)
    {
        // Convert the value to a String and return the set of types that that String can be converted to.
        MultiTypeData result = getMultiTypeData(Boolean.toString(b));
        result.nativeType = BOOLEAN;

        return result;
    }",Converts a boolean into a multi type data object .,base/common/src/main/com/thesett/common/util/TypeConverter.java,"[{'Syntax': 'getMultiTypeData(Boolean.toString(b))', 'FunctionName': 'getMultiTypeData', 'ArgsCount': 1, 'MethodBody': 'public static MultiTypeData getMultiTypeData(boolean b)\n    {\n        // Convert the value to a String and return the set of types that that String can be converted to.\n        MultiTypeData result = getMultiTypeData(Boolean.toString(b));\n        result.nativeType = BOOLEAN;\n\n        return result;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/TypeConverter.java'}, {'Syntax': 'Boolean.toString(b)', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'public String toString(WAMInstruction instruction)\n            {\n                return toStringReg1Fn(pretty, instruction);\n            }', 'FileName': '/rupertlssmith/lojix/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/compiler/WAMInstruction.java'}]"
6621cd86cda9bd4817b10fd6,oblac/jodd,"protected String lookupAlias(final String alias) {
		String value = actionsManager.lookupPathAlias(alias);
		if (value == null) {
			ActionRuntime cfg = actionsManager.lookup(alias);
			if (cfg != null) {
				value = cfg.getActionPath();
			}
		}
		return value;
	}",Lookups value as an alias and if not found as a default alias .,jodd-madvoc/src/main/java/jodd/madvoc/component/ResultMapper.java,"[{'Syntax': 'actionsManager.lookupPathAlias(alias)', 'FunctionName': 'lookupPathAlias', 'ArgsCount': 1, 'MethodBody': 'public String lookupPathAlias(final String alias) {\n\t\treturn pathAliases.get(alias);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionsManager.java'}, {'Syntax': 'actionsManager.lookup(alias)', 'FunctionName': 'lookup', 'ArgsCount': 1, 'MethodBody': 'public ActionConfig lookup(final Class actionTypeOrAnnotationType) {\n\t\tfinal ActionConfig actionConfig = actionConfigs.get(actionTypeOrAnnotationType);\n\n\t\tif (actionConfig == null) {\n\t\t\tthrow new MadvocException(""ActionConfiguration not registered:"" + actionTypeOrAnnotationType.getName());\n\t\t}\n\t\treturn actionConfig;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionConfigManager.java'}, {'Syntax': 'cfg.getActionPath()', 'FunctionName': 'getActionPath', 'ArgsCount': 0, 'MethodBody': 'public String getActionPath() {\n\t\treturn actionPath;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}]"
6621cd86cda9bd4817b10fd7,real-logic/aeron,"public static void applyDefaultHeader(
        final UnsafeBuffer metadataBuffer, final UnsafeBuffer termBuffer, final int termOffset)
    {
        termBuffer.putBytes(termOffset, metadataBuffer, LOG_DEFAULT_FRAME_HEADER_OFFSET, HEADER_LENGTH);
    }",Apply the default header for a message in a term .,aeron-client/src/main/java/io/aeron/logbuffer/LogBufferDescriptor.java,[]
6621cd86cda9bd4817b10fd8,oblac/jodd,"public List<V> getAll(final String name) {
		LinkedList<V> values = new LinkedList<>();

		int h = hash(name);
		int i = index(h);
		MapEntry<V> e = entries[i];
		while (e != null) {
			if (e.hash == h && eq(name, e.key)) {
				values.addFirst(e.getValue());
			}
			e = e.next;
		}
		return values;
	}",Returns all values associated with the name .,jodd-http/src/main/java/jodd/http/HttpMultiMap.java,"[{'Syntax': 'hash(name)', 'FunctionName': 'hash', 'ArgsCount': 1, 'MethodBody': 'public HashCode_withInstance hash(final int anInt) {\n\t\t\thashcode = (prime * hashcode) + anInt;\n\t\t\treturn this;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/jmh/java/jodd/util/HashCodeBenchmark.java'}, {'Syntax': 'e.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public int getValue() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/LoopIterator.java'}]"
6621cd86cda9bd4817b10fd9,TypedRest/TypedRest-Java,"@Subscribe
    public void handle(ElementEvent<TEntity> message) {
        if (message.getEndpoint().getEntityType() == this.endpoint.getEntityType()) {
            refresh();
        }
    }",Refresh when child elements are created or updated,vaadin/src/main/java/net/typedrest/vaadin/views/AbstractCollectionView.java,"[{'Syntax': 'message.getEndpoint().getEntityType()', 'FunctionName': 'getEntityType', 'ArgsCount': 0, 'MethodBody': 'Class<TEntity> getEntityType();', 'FileName': '/TypedRest/TypedRest-Java/core/src/main/java/net/typedrest/ConsumerEndpoint.java'}, {'Syntax': 'this.endpoint.getEntityType()', 'FunctionName': 'getEntityType', 'ArgsCount': 0, 'MethodBody': 'Class<TEntity> getEntityType();', 'FileName': '/TypedRest/TypedRest-Java/core/src/main/java/net/typedrest/ConsumerEndpoint.java'}, {'Syntax': 'refresh()', 'FunctionName': 'refresh', 'ArgsCount': 0, 'MethodBody': 'public void refresh() {\n        try {\n            onLoad();\n        } catch (IOException | IllegalArgumentException | IllegalAccessException | IllegalStateException ex) {\n            onError(ex);\n        }\n    }', 'FileName': '/TypedRest/TypedRest-Java/vaadin/src/main/java/net/typedrest/vaadin/views/AbstractEndpointView.java'}]"
6621cd86cda9bd4817b10fda,DigitalPebble/storm-crawler,"public void extractMetaTags(DocumentFragment doc)
            throws XPathExpressionException {
        NodeList nodes = (NodeList) expression.evaluate(doc,
                XPathConstants.NODESET);
        if (nodes == null)
            return;
        int numNodes = nodes.getLength();
        for (int i = 0; i < numNodes; i++) {
            Node n = (Node) nodes.item(i);
            // iterate on the attributes
            // and check that it has name=robots and content
            // whatever the case is
            boolean isRobots = false;
            String content = null;
            NamedNodeMap attrs = n.getAttributes();
            for (int att = 0; att < attrs.getLength(); att++) {
                Node keyval = attrs.item(att);
                if (""name"".equalsIgnoreCase(keyval.getNodeName())
                        && ""robots"".equalsIgnoreCase(keyval.getNodeValue())) {
                    isRobots = true;
                    continue;
                }
                if (""content"".equalsIgnoreCase(keyval.getNodeName())) {
                    content = keyval.getNodeValue();
                    continue;
                }
            }

            if (isRobots && content != null) {
                // got a value - split it
                String[] vals = content.split("" *, *"");
                parseValues(vals);
                return;
            }
        }
    }",called by the parser bolts,core/src/main/java/com/digitalpebble/stormcrawler/util/RobotsTags.java,"[{'Syntax': 'parseValues(vals)', 'FunctionName': 'parseValues', 'ArgsCount': 1, 'MethodBody': 'private void parseValues(String[] values) {\n        for (String v : values) {\n            v = v.trim();\n            if (""noindex"".equalsIgnoreCase(v)) {\n                noIndex = true;\n            } else if (""nofollow"".equalsIgnoreCase(v)) {\n                noFollow = true;\n            } else if (""noarchive"".equalsIgnoreCase(v)) {\n                noCache = true;\n            } else if (""none"".equalsIgnoreCase(v)) {\n                noIndex = true;\n                noFollow = true;\n                noCache = true;\n            }\n        }\n    }', 'FileName': '/DigitalPebble/storm-crawler/core/src/main/java/org/apache/stormcrawler/util/RobotsTags.java'}]"
6621cd86cda9bd4817b10fdb,rupertlssmith/lojix,"public static <E> Queue<E> getTransactionalQueue(java.util.Queue<E> queue)
    {
        return new WrapperQueue<E>(queue, new LinkedList<E>(), true, false, false);
    }",Provides a transactional queue that delays all queue manipulation operations until the transaction is committed or erases them if it is rolled back .,base/common/src/main/com/thesett/common/util/queues/Queues.java,[]
6621cd86cda9bd4817b10fdc,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:42:33+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<ValueListsType.VALUELIST> getVALUELIST() {
        if (valuelist == null) {
            valuelist = new ArrayList<ValueListsType.VALUELIST>();
        }
        return this.valuelist;
    }",Gets the value of the valuelist property .,Filemaker/src/main/jaxb/org/openestate/io/filemaker/xml/layout/ValueListsType.java,[]
6621cd86cda9bd4817b10fdd,turbomanage/storm-gen,"public void restoreAllTablesFromCsv(Context ctx, SQLiteDatabase db, String suffix) {
		for (TableHelper table : getTableHelpers()) {
			table.restore(db, ctx, suffix);
		}
	}",Restore all tables from CSV files one per table,storm-apt/api/src/main/java/com/turbomanage/storm/DatabaseHelper.java,"[{'Syntax': 'getTableHelpers()', 'FunctionName': 'getTableHelpers', 'ArgsCount': 0, 'MethodBody': 'protected TableHelper[] getTableHelpers() {\n\t\treturn getDbFactory().getTableHelpers();\n\t}', 'FileName': '/turbomanage/storm-gen/storm-apt/api/src/main/java/com/turbomanage/storm/DatabaseHelper.java'}, {'Syntax': 'table.restore(db, ctx, suffix)', 'FunctionName': 'restore', 'ArgsCount': 3, 'MethodBody': 'public void restore(SQLiteDatabase db, Context ctx, String suffix) {\n\t\tnew CsvTableReader(this).importFromCsv(ctx, db, suffix);\n\t}', 'FileName': '/turbomanage/storm-gen/storm-apt/api/src/main/java/com/turbomanage/storm/TableHelper.java'}]"
6621cd86cda9bd4817b10fde,oaqa/baseqa,"public FSList getOccurrences() {
    if (CandidateAnswerVariant_Type.featOkTst && ((CandidateAnswerVariant_Type)jcasType).casFeat_occurrences == null)
      jcasType.jcas.throwFeatMissing(""occurrences"", ""edu.cmu.lti.oaqa.type.answer.CandidateAnswerVariant"");
    return (FSList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((CandidateAnswerVariant_Type)jcasType).casFeatCode_occurrences)));}",getter for occurrences - gets The occurrences of this variant .,src/main/java/edu/cmu/lti/oaqa/type/answer/CandidateAnswerVariant.java,[]
6621cd86cda9bd4817b10fdf,Microsoft/thrifty,"private void writeJsonInteger(long num) throws IOException {
        context.write();
        String str = Long.toString(num);
        boolean escapeNum = context.escapeNum();
        if (escapeNum) {
            transport.write(QUOTE);
        }
        try {
            byte[] buf = str.getBytes(""UTF-8"");
            transport.write(buf);
        } catch (UnsupportedEncodingException e) {
            throw new AssertionError(e);
        }
        if (escapeNum) {
            transport.write(QUOTE);
        }
    }",wrapped in quotes to output as a Json string .,thrifty-runtime/src/main/java/com/microsoft/thrifty/protocol/JsonProtocol.java,"[{'Syntax': 'transport.write(QUOTE)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n    scheme(oprot).write(oprot, this);\n  }', 'FileName': '/Microsoft/thrifty/thrifty-test-server/src/main/java/com/microsoft/thrifty/test/gen/EmptyStruct.java'}, {'Syntax': 'transport.write(buf)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n    scheme(oprot).write(oprot, this);\n  }', 'FileName': '/Microsoft/thrifty/thrifty-test-server/src/main/java/com/microsoft/thrifty/test/gen/EmptyStruct.java'}, {'Syntax': 'transport.write(QUOTE)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n    scheme(oprot).write(oprot, this);\n  }', 'FileName': '/Microsoft/thrifty/thrifty-test-server/src/main/java/com/microsoft/thrifty/test/gen/EmptyStruct.java'}]"
6621cd86cda9bd4817b10fe0,basis-technology-corp/tcl-regex-java,"void freestate(State s) {
        assert s != null;
        assert s.nins == 0;
        assert s.nouts == 0;
        if (s.next != null) {
            s.next.prev = s.prev;
        } else {
            assert s == slast;
            slast = s.prev;
        }
        if (s.prev != null) {
            s.prev.next = s.next;
        } else {
            assert s == states;
            states = s.next;
        }
    }",Unwire a state from the NFA .,src/main/java/com/basistech/tclre/Nfa.java,[]
6621cd86cda9bd4817b10fe1,Unidata/thredds,"public void calcElementSize() {
    int total = 0;
    for (Variable v : members) {
      total += v.getElementSize() * v.getSize();
    }
    elementSize = total;
  }",Force recalculation of size of one element of this structure - equals the sum of sizes of its members . This is used only by low level classes like IOSPs .,cdm/src/main/java/ucar/nc2/Structure.java,[]
6621cd86cda9bd4817b10fe2,streamsets/datacollector,"public List<String> groupNames() {
        if (groupNames == null) {
            groupNames = new ArrayList<String>(groupInfo.keySet());
        }
        return groupNames;
    }",Gets the names of all capture groups,common/src/main/java/com/streamsets/pipeline/lib/parser/shaded/com/google/code/regexp/Pattern.java,[]
6621cd86cda9bd4817b10fe3,PistoiaHELM/HELMNotationParser,"@JsonIgnore
  public List<String> getPolymerAndGroupingIDs() {
    List<String> listOfIDs = new ArrayList<String>();
    for (PolymerNotation polymer : listOfPolymers) {
      listOfIDs.add(polymer.getPolymerID().getId());
    }

    for (GroupingNotation grouping : listOfGroupings) {
      listOfIDs.add(grouping.getGroupID().getId());
    }
    return listOfIDs;
  }",method to get the ID s from all polymers and groups,src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java,"[{'Syntax': 'polymer.getPolymerID().getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': 'public String getId() {\r\n    return id;\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/polymer/HELMEntity.java'}, {'Syntax': 'polymer.getPolymerID()', 'FunctionName': 'getPolymerID', 'ArgsCount': 0, 'MethodBody': 'public PolymerEntity getPolymerID() {\r\n    return this.polymerID;\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/polymer/PolymerNotation.java'}, {'Syntax': 'grouping.getGroupID().getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': 'public String getId() {\r\n    return id;\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/polymer/HELMEntity.java'}, {'Syntax': 'grouping.getGroupID()', 'FunctionName': 'getGroupID', 'ArgsCount': 0, 'MethodBody': 'public GroupEntity getGroupID() {\r\n    return groupID;\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/grouping/GroupingNotation.java'}]"
6621cd86cda9bd4817b10fe4,deeplearning4j/nd4j,"public static int findNext(String str, char separator, char escapeChar,
                               int start, StringBuilder split) {
        int numPreEscapes = 0;
        for (int i = start; i < str.length(); i++) {
            char curChar = str.charAt(i);
            if (numPreEscapes == 0 && curChar == separator) { // separator
                return i;
            } else {
                split.append(curChar);
                numPreEscapes = (curChar == escapeChar)
                        ? (++numPreEscapes) % 2
                        : 0;
            }
        }
        return -1;
    }",Finds the first occurrence of the separator character ignoring the escaped separators starting from the index . Note the substring between the index and the position of the separator is passed .,nd4j-common/src/main/java/org/nd4j/util/StringUtils.java,[]
6621cd86cda9bd4817b10fe5,real-logic/aeron,"public static boolean haveVotersReachedPosition(
        final ClusterMember[] clusterMembers, final long position, final long leadershipTermId)
    {
        for (final ClusterMember member : clusterMembers)
        {
            if (member.vote != null && (member.logPosition < position || member.leadershipTermId != leadershipTermId))
            {
                return false;
            }
        }

        return true;
    }",Has the members of the cluster the voted reached the provided position in their log .,aeron-cluster/src/main/java/io/aeron/cluster/ClusterMember.java,[]
6621cd87cda9bd4817b10fe6,alipay/sofa-bolt,"private static String detailErrMsg(String clientErrMsg, ResponseCommand responseCommand) {
        RpcResponseCommand resp = (RpcResponseCommand) responseCommand;
        if (StringUtils.isNotBlank(resp.getErrorMsg())) {
            return String.format(""%s, ServerErrorMsg:%s"", clientErrMsg, resp.getErrorMsg());
        } else {
            return String.format(""%s, ServerErrorMsg:null"", clientErrMsg);
        }
    }",Detail your error msg with the error msg returned from response command,src/main/java/com/alipay/remoting/rpc/RpcResponseResolver.java,"[{'Syntax': 'StringUtils.isNotBlank(resp.getErrorMsg())', 'FunctionName': 'isNotBlank', 'ArgsCount': 1, 'MethodBody': 'public static boolean isNotBlank(CharSequence cs) {\n        return !StringUtils.isBlank(cs);\n    }', 'FileName': '/alipay/sofa-bolt/src/main/java/com/alipay/remoting/util/StringUtils.java'}, {'Syntax': 'resp.getErrorMsg()', 'FunctionName': 'getErrorMsg', 'ArgsCount': 0, 'MethodBody': 'public String getErrorMsg() {\n        return errorMsg;\n    }', 'FileName': '/alipay/sofa-bolt/src/main/java/com/alipay/remoting/rpc/protocol/RpcResponseCommand.java'}, {'Syntax': 'resp.getErrorMsg()', 'FunctionName': 'getErrorMsg', 'ArgsCount': 0, 'MethodBody': 'public String getErrorMsg() {\n        return errorMsg;\n    }', 'FileName': '/alipay/sofa-bolt/src/main/java/com/alipay/remoting/rpc/protocol/RpcResponseCommand.java'}]"
6621cd87cda9bd4817b10fe7,jboss/jboss-common-core,"protected String resolveExternalSystem(String systemId, String resolver)
	throws MalformedURLException, IOException {
	Resolver r = queryResolver(resolver, ""i2l"", systemId, null);
	if (r != null) {
	    return r.resolveSystem(systemId);
	} else {
	    return null;
	}
    }",Query an external RFC2483 resolver for a system identifier .,src/main/java/org/jboss/util/xml/catalog/Resolver.java,"[{'Syntax': 'queryResolver(resolver, ""i2l"", systemId, null)', 'FunctionName': 'queryResolver', 'ArgsCount': 4, 'MethodBody': 'protected Resolver queryResolver(String resolver,\n\t\t\t\t     String command,\n\t\t\t\t     String arg1,\n\t\t\t\t     String arg2) {\n\tString RFC2483 = resolver + ""?command="" + command \n\t    + ""&format=tr9401&uri="" + arg1 \n\t    + ""&uri2="" + arg2;\n\n\ttry {\n\t    URL url = new URL(RFC2483);\n\n\t    URLConnection urlCon = url.openConnection();\n\n\t    urlCon.setUseCaches(false);\n\n\t    Resolver r = (Resolver) newCatalog();\n\n\t    String cType = urlCon.getContentType();\n\n\t    // I don\'t care about the character set or subtype\n\t    if (cType.indexOf("";"") > 0) {\n\t\tcType = cType.substring(0, cType.indexOf("";""));\n\t    }\n\n\t    r.parseCatalog(cType, urlCon.getInputStream());\n\n\t    return r;\n\t} catch (CatalogException cex) {\n\t  if (cex.getExceptionType() == CatalogException.UNPARSEABLE) {\n\t    catalogManager.debug.message(1, ""Unparseable catalog: "" + RFC2483);\n\t  } else if (cex.getExceptionType()\n\t\t     == CatalogException.UNKNOWN_FORMAT) {\n\t    catalogManager.debug.message(1, ""Unknown catalog format: "" + RFC2483);\n\t  }\n\t  return null;\n\t} catch (MalformedURLException mue) {\n\t    catalogManager.debug.message(1, ""Malformed resolver URL: "" + RFC2483);\n\t    return null;\n\t} catch (IOException ie) {\n\t    catalogManager.debug.message(1, ""I/O Exception opening resolver: "" + RFC2483);\n\t    return null;\n\t}\n    }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/Resolver.java'}, {'Syntax': 'r.resolveSystem(systemId)', 'FunctionName': 'resolveSystem', 'ArgsCount': 1, 'MethodBody': 'public String resolveSystem(String systemId)\n    throws MalformedURLException, IOException {\n\n    catalogManager.debug.message(3, ""resolveSystem(""+systemId+"")"");\n\n    systemId = normalizeURI(systemId);\n\n    if (systemId != null && systemId.startsWith(""urn:publicid:"")) {\n      systemId = PublicId.decodeURN(systemId);\n      return resolvePublic(systemId, null);\n    }\n\n    // If there\'s a SYSTEM entry in this catalog, use it\n    if (systemId != null) {\n      String resolved = resolveLocalSystem(systemId);\n      if (resolved != null) {\n\treturn resolved;\n      }\n    }\n\n    // Otherwise, look in the subordinate catalogs\n    return resolveSubordinateCatalogs(SYSTEM,\n\t\t\t\t      null,\n\t\t\t\t      null,\n\t\t\t\t      systemId);\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/Catalog.java'}]"
6621cd87cda9bd4817b10fe8,oblac/jodd,"public void forEachBeanType(final Class type, final Consumer<String> beanNameConsumer) {
		forEachBean(bd -> {
			if (ClassUtil.isTypeOf(bd.type, type)) {
				beanNameConsumer.accept(bd.name);
			}
		});
	}",Iterates all beans that are of given type .,jodd-petite/src/main/java/jodd/petite/PetiteBeans.java,"[{'Syntax': 'beanNameConsumer.accept(bd.name)', 'FunctionName': 'accept', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic void accept(final String... args) {\n\t\tassertConfigurationIsValid();\n\n\t\tboolean dontParseOptionsAnyMore = false;\n\t\tint i;\n\t\tint paramsIndex = 0;\n\n\t\tfor (i = 0; i < args.length; i++) {\n\t\t\tfinal String arg = args[i];\n\t\t\tif (arg.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfinal String value = (i + 1 < args.length) ? args[i + 1] : null;\n\n\t\t\tif (arg.equals(""--"")) {\n\t\t\t\tdontParseOptionsAnyMore = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!dontParseOptionsAnyMore) {\n\t\t\t\t// long names\n\t\t\t\tif (arg.startsWith(""--"")) {\n\t\t\t\t\tfinal String argLongName = arg.substring(2);\n\n\t\t\t\t\tconsumeOptionWithLongName(argLongName, value);\n\n\t\t\t\t\targs[i] = null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// short names\n\t\t\t\tif (arg.startsWith(""-"")) {\n\t\t\t\t\tfinal String argShortName = arg.substring(1);\n\n\t\t\t\t\tif (argShortName.length() > 1 && argShortName.charAt(1) != \'=\') {\n\t\t\t\t\t\t// compressed options\n\t\t\t\t\t\tfinal char[] allShortNames = argShortName.toCharArray();\n\t\t\t\t\t\tfor (final char c : allShortNames) {\n\t\t\t\t\t\t\tfinal String argName = String.valueOf(c);\n\t\t\t\t\t\t\tconsumeOptionWithShortNameAndNoArguments(argName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\targs[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfinal boolean valueConsumed = consumeOptionWithShortName(argShortName, value);\n\n\t\t\t\t\t// mark argument as consumed\n\t\t\t\t\targs[i] = null;\n\t\t\t\t\tif (valueConsumed) {\n\t\t\t\t\t\t// mark value as consumed, too\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\targs[i] = null;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// params\n\n\t\t\tif (paramsIndex == params.size()) {\n\t\t\t\t// we are done here\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfinal Param param = params.get(paramsIndex++);\n\n\t\t\tfinal List<String> paramArguments = new ArrayList<>();\n\n\t\t\tint from = 0;\n\t\t\tfinal int to = param.required + param.optional;\n\n\t\t\tfor (; from < to; from++, i++) {\n\t\t\t\tfinal String paramValue = (i < args.length) ? args[i] : null;\n\t\t\t\tif (paramValue == null) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparamArguments.add(paramValue);\n\t\t\t}\n\t\t\ti--;\n\n\t\t\tif (paramArguments.size() < param.required) {\n\t\t\t\tthrow new CliException(""Parameter required: "" + param.label);\n\t\t\t}\n\n\t\t\tif (paramArguments.isEmpty()) {\n\t\t\t\t// parameter not found\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tparam.consumer.accept(paramArguments.toArray(new String[0]));\n\t\t}\n\n\t\t// must check if remaining parameters are not satisfied\n\t\twhile (paramsIndex < params.size()) {\n\t\t\tfinal Param param = params.get(paramsIndex++);\n\t\t\tif (param.required > 0) {\n\t\t\t\tthrow new CliException(""Parameter required: "" + param.label);\n\t\t\t}\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cli/Cli.java'}]"
6621cd87cda9bd4817b10fe9,ngageoint/geopackage-android,"public UserCustomCursor query(BoundingBox boundingBox,
                                  Projection projection) {
        BoundingBox featureBoundingBox = projectBoundingBox(boundingBox,
                projection);
        return query(featureBoundingBox);
    }",Query for rows within the bounding box in the provided projection,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/RTreeIndexTableDao.java,"[{'Syntax': 'query(featureBoundingBox)', 'FunctionName': 'query', 'ArgsCount': 1, 'MethodBody': 'public TResult query(TResult previousResult) {\n        return query(previousResult.getQuery());\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserConnection.java'}]"
6621cd87cda9bd4817b10fea,oblac/jodd,"public JsonArray addAll(final JsonArray array) {
		Objects.requireNonNull(array);
		list.addAll(array.list);
		return this;
	}",Appends all of the elements in the specified array to the end of this JSON array .,jodd-json/src/main/java/jodd/json/JsonArray.java,"[{'Syntax': 'list.addAll(array.list)', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> addAll(final Consumer<T>... consumers) {\n\t\tCollections.addAll(consumerList, consumers);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cd87cda9bd4817b10feb,leanix/leanix-sdk-java,"public FactSheetListResponse getFactSheets(String type, String relationTypes, Integer pageSize, String cursor, Boolean permissions) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = ""/factSheets"".replaceAll(""\\{format\\}"",""json"");

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""type"", type));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""relationTypes"", relationTypes));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""pageSize"", pageSize));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""cursor"", cursor));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""permissions"", permissions));

    
    
    final String[] localVarAccepts = {
      ""application/json""
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      ""application/json""
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { ""token"" };

    GenericType<FactSheetListResponse> localVarReturnType = new GenericType<FactSheetListResponse>() {};
    return apiClient.invokeAPI(localVarPath, ""GET"", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }",getFactSheets Retrieves all Fact Sheets,src/main/java/net/leanix/api/FactSheetsApi.java,[]
6621cd87cda9bd4817b10fec,RestComm/jain-slee,"public Object lookupName(String name) {
		final Node childNode = getNode().getChild(name);
		if (childNode == null) {
			return null;
		} else {
			return childNode.get(CACHE_NODE_MAP_KEY);
		}
	}",Lookup of the activity context id bound to the specified aci name,container/common/src/main/java/org/mobicents/slee/runtime/facilities/ActivityContextNamingFacilityCacheData.java,"[{'Syntax': 'getNode().getChild(name)', 'FunctionName': 'getChild', 'ArgsCount': 1, 'MethodBody': 'public FQDNNode getChild(String name) {\r\n    return (FQDNNode) this.childNodes.get(name);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/log/FQDNNode.java'}, {'Syntax': 'childNode.get(CACHE_NODE_MAP_KEY)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public ComponentID get(String key) throws ManagementConsoleException {\r\n    ComponentID id = map.get(key);\r\n    if (id == null)\r\n      throw new ManagementConsoleException(""Component "" + key + "" not found"");\r\n    return id;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/server/src/main/java/org/mobicents/slee/container/management/console/server/components/ComponentIDMap.java'}]"
6621cd87cda9bd4817b10fed,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setErdwaerme(JAXBElement<Object> value) {
        this.erdwaerme = value;
    }",Sets the value of the erdwaerme property .,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/BefeuerungsArtTyp.java,[]
6621cd87cda9bd4817b10fee,dschulten/hydra-java,"public String getVocab(MixinSource mixinSource, Object bean, Class<?> mixInClass) {
        if (proxyUnwrapper != null) {
            bean = proxyUnwrapper.unwrapProxy(bean);
        }

        // determine vocab in context
        String classVocab = bean == null ? null : vocabFromClassOrPackage(bean.getClass());

        final Vocab mixinVocab = findAnnotation(mixInClass, Vocab.class);

        Object nestedContextProviderFromMixin = getNestedContextProviderFromMixin(mixinSource, bean, mixInClass);
        String contextProviderVocab = null;
        if (nestedContextProviderFromMixin != null) {
            contextProviderVocab = getVocab(mixinSource, nestedContextProviderFromMixin, null);
        }

        String vocab;
        if (mixinVocab != null) {
            vocab = mixinVocab.value(); // wins over class
        } else if (classVocab != null) {
            vocab = classVocab; // wins over context provider
        } else if (contextProviderVocab != null) {
            vocab = contextProviderVocab; // wins over last resort
        } else {
            vocab = HTTP_SCHEMA_ORG;
        }
        return vocab;
    }",Gets vocab for given bean .,hydra-jsonld/src/main/java/de/escalon/hypermedia/hydra/serialize/LdContextFactory.java,"[{'Syntax': 'proxyUnwrapper.unwrapProxy(bean)', 'FunctionName': 'unwrapProxy', 'ArgsCount': 1, 'MethodBody': 'Object unwrapProxy(Object possibleProxy);', 'FileName': '/dschulten/hydra-java/hydra-jsonld/src/main/java/de/escalon/hypermedia/hydra/serialize/ProxyUnwrapper.java'}, {'Syntax': 'vocabFromClassOrPackage(bean.getClass())', 'FunctionName': 'vocabFromClassOrPackage', 'ArgsCount': 1, 'MethodBody': 'public String vocabFromClassOrPackage(Class<?> clazz) {\n        // vocab and terms of defining class: class and package\n        final Vocab packageVocab = findAnnotation(clazz\n                .getPackage(), Vocab.class);\n        final Vocab classVocab = findAnnotation(clazz, Vocab.class);\n\n        String vocab;\n        if (classVocab != null) {\n            vocab = classVocab.value(); // wins over package\n        } else if (packageVocab != null) {\n            vocab = packageVocab.value(); // wins over context provider\n        } else {\n            vocab = null;\n        }\n        return vocab;\n    }', 'FileName': '/dschulten/hydra-java/hydra-jsonld/src/main/java/de/escalon/hypermedia/hydra/serialize/LdContextFactory.java'}, {'Syntax': 'findAnnotation(mixInClass, Vocab.class)', 'FunctionName': 'findAnnotation', 'ArgsCount': 2, 'MethodBody': 'public static <T extends Annotation> T findAnnotation(AnnotatedElement annotated, Class<T> annotationClass) {\n        T ret;\n        if (annotated == null) {\n            ret = null;\n        } else {\n            ret = annotated.getAnnotation(annotationClass);\n        }\n        return ret;\n    }', 'FileName': '/dschulten/hydra-java/hydra-commons/src/main/java/de/escalon/hypermedia/AnnotationUtils.java'}, {'Syntax': 'getNestedContextProviderFromMixin(mixinSource, bean, mixInClass)', 'FunctionName': 'getNestedContextProviderFromMixin', 'ArgsCount': 3, 'MethodBody': 'private Object getNestedContextProviderFromMixin(MixinSource mixinSource, Object bean, Class<?> mixinClass) {\n        // TODO does not consider Collection<Resource> or Collection<PersistentEntityResource> to find mixin of\n        // object wrapped in resource\n        // TODO does not consider package of object wrapped in resource\n        // TODO: we do not know Resources here\n        if (mixinClass == null) {\n            return null;\n        }\n        try {\n            Method mixinContextProvider = getContextProvider(mixinClass);\n            if (mixinContextProvider == null) {\n                return null;\n            }\n            Class<?> beanClass = bean.getClass();\n            Object contextual = beanClass.getMethod(mixinContextProvider.getName())\n                    .invoke(bean);\n            Object ret = null;\n            if (contextual instanceof Collection) {\n                Collection collection = (Collection) contextual;\n                if (!collection.isEmpty()) {\n                    Object item = collection.iterator()\n                            .next();\n                    final Class<?> mixInClass = mixinSource.findMixInClassFor(item.getClass());\n                    if (mixInClass == null) {\n                        ret = item;\n                    } else {\n                        ret = getNestedContextProviderFromMixin(mixinSource, item, mixInClass);\n                    }\n                }\n            } else if (contextual instanceof Map) {\n                Map map = (Map) contextual;\n                if (!map.isEmpty()) {\n                    Object item = map.values()\n                            .iterator()\n                            .next();\n                    final Class<?> mixInClass = mixinSource.findMixInClassFor(item.getClass());\n                    if (mixInClass == null) {\n                        ret = item;\n                    } else {\n                        ret = getNestedContextProviderFromMixin(mixinSource, item, mixInClass);\n                    }\n                }\n            } else {\n                ret = contextual;\n            }\n            return ret;\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }', 'FileName': '/dschulten/hydra-java/hydra-jsonld/src/main/java/de/escalon/hypermedia/hydra/serialize/LdContextFactory.java'}, {'Syntax': 'getVocab(mixinSource, nestedContextProviderFromMixin, null)', 'FunctionName': 'getVocab', 'ArgsCount': 3, 'MethodBody': 'public String getVocab(MixinSource mixinSource, Object bean, Class<?> mixInClass) {\n        if (proxyUnwrapper != null) {\n            bean = proxyUnwrapper.unwrapProxy(bean);\n        }\n\n        // determine vocab in context\n        String classVocab = bean == null ? null : vocabFromClassOrPackage(bean.getClass());\n\n        final Vocab mixinVocab = findAnnotation(mixInClass, Vocab.class);\n\n        Object nestedContextProviderFromMixin = getNestedContextProviderFromMixin(mixinSource, bean, mixInClass);\n        String contextProviderVocab = null;\n        if (nestedContextProviderFromMixin != null) {\n            contextProviderVocab = getVocab(mixinSource, nestedContextProviderFromMixin, null);\n        }\n\n        String vocab;\n        if (mixinVocab != null) {\n            vocab = mixinVocab.value(); // wins over class\n        } else if (classVocab != null) {\n            vocab = classVocab; // wins over context provider\n        } else if (contextProviderVocab != null) {\n            vocab = contextProviderVocab; // wins over last resort\n        } else {\n            vocab = HTTP_SCHEMA_ORG;\n        }\n        return vocab;\n    }', 'FileName': '/dschulten/hydra-java/hydra-jsonld/src/main/java/de/escalon/hypermedia/hydra/serialize/LdContextFactory.java'}]"
6621cd87cda9bd4817b10fef,fabric8io/fabric8-maven-plugin,"private String getDefaultIconRef() {
        ProjectClassLoaders cls = getContext().getProjectClassLoaders();
        if (cls.isClassInCompileClasspath(false, ""io.fabric8.funktion.runtime.Main"") ||
            getContext().hasDependency( ""io.fabric8.funktion"", null)) {
            return ""funktion"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.apache.camel.CamelContext"")) {
            return ""camel"";
        }
        if (getContext().hasPlugin(null, SpringBootConfigurationHelper.SPRING_BOOT_MAVEN_PLUGIN_ARTIFACT_ID)  ||
            cls.isClassInCompileClasspath(false, ""org.springframework.boot.SpringApplication"")) {
            return ""spring-boot"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.springframework.core.Constants"")) {
            return ""spring"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.vertx.java.core.Handler"", ""io.vertx.core.Handler"")) {
            return ""vertx"";
        }

        if (getContext().hasPlugin(""org.wildfly.swarm"", ""wildfly-swarm-plugin"") ||
            getContext().hasDependency( ""org.wildfly.swarm"", null)) {
            return ""wildfly-swarm"";
        }
        if (getContext().hasPlugin( ""io.thorntail"", ""thorntail-maven-plugin"") ||
            getContext().hasDependency( ""io.thorntail"", null)) {
            // use the WildFly Swarm icon until there's a dedicated Thorntail icon
            // Thorntail is a new name of WildFly Swarm
            return ""wildfly-swarm"";
        }

        return null;
    }",Lets use the project and its classpath to try figure out what default icon to use,enricher/deprecated/src/main/java/io/fabric8/maven/enricher/deprecated/IconEnricher.java,"[{'Syntax': 'getContext().getProjectClassLoaders()', 'FunctionName': 'getProjectClassLoaders', 'ArgsCount': 0, 'MethodBody': 'ProjectClassLoaders getProjectClassLoaders();', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/api/src/main/java/io/fabric8/maven/enricher/api/EnricherContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'public WatcherContext getContext() {\n        return context;\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/watcher/api/src/main/java/io/fabric8/maven/watcher/api/BaseWatcher.java'}, {'Syntax': 'cls.isClassInCompileClasspath(false, ""io.fabric8.funktion.runtime.Main"")', 'FunctionName': 'isClassInCompileClasspath', 'ArgsCount': 2, 'MethodBody': '@Override\n                public boolean isClassInCompileClasspath(boolean all, String... clazz) {\n                    return true;\n                }', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/fabric8/src/test/java/io/fabric8/maven/enricher/fabric8/AbstractSpringBootHealthCheckEnricherTestSupport.java'}, {'Syntax': 'getContext().hasDependency( ""io.fabric8.funktion"", null)', 'FunctionName': 'hasDependency', 'ArgsCount': 2, 'MethodBody': 'default boolean hasDependency(String groupId, String artifactId) {\n        return getDependencyVersion(groupId, artifactId).isPresent();\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/api/src/main/java/io/fabric8/maven/enricher/api/EnricherContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'public WatcherContext getContext() {\n        return context;\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/watcher/api/src/main/java/io/fabric8/maven/watcher/api/BaseWatcher.java'}, {'Syntax': 'cls.isClassInCompileClasspath(false, ""org.apache.camel.CamelContext"")', 'FunctionName': 'isClassInCompileClasspath', 'ArgsCount': 2, 'MethodBody': '@Override\n                public boolean isClassInCompileClasspath(boolean all, String... clazz) {\n                    return true;\n                }', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/fabric8/src/test/java/io/fabric8/maven/enricher/fabric8/AbstractSpringBootHealthCheckEnricherTestSupport.java'}, {'Syntax': 'getContext().hasPlugin(null, SpringBootConfigurationHelper.SPRING_BOOT_MAVEN_PLUGIN_ARTIFACT_ID)', 'FunctionName': 'hasPlugin', 'ArgsCount': 2, 'MethodBody': 'boolean hasPlugin(String groupId, String artifactId);', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/api/src/main/java/io/fabric8/maven/enricher/api/EnricherContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'public WatcherContext getContext() {\n        return context;\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/watcher/api/src/main/java/io/fabric8/maven/watcher/api/BaseWatcher.java'}, {'Syntax': 'cls.isClassInCompileClasspath(false, ""org.springframework.boot.SpringApplication"")', 'FunctionName': 'isClassInCompileClasspath', 'ArgsCount': 2, 'MethodBody': '@Override\n                public boolean isClassInCompileClasspath(boolean all, String... clazz) {\n                    return true;\n                }', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/fabric8/src/test/java/io/fabric8/maven/enricher/fabric8/AbstractSpringBootHealthCheckEnricherTestSupport.java'}, {'Syntax': 'cls.isClassInCompileClasspath(false, ""org.springframework.core.Constants"")', 'FunctionName': 'isClassInCompileClasspath', 'ArgsCount': 2, 'MethodBody': '@Override\n                public boolean isClassInCompileClasspath(boolean all, String... clazz) {\n                    return true;\n                }', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/fabric8/src/test/java/io/fabric8/maven/enricher/fabric8/AbstractSpringBootHealthCheckEnricherTestSupport.java'}, {'Syntax': 'getContext().hasPlugin(""org.wildfly.swarm"", ""wildfly-swarm-plugin"")', 'FunctionName': 'hasPlugin', 'ArgsCount': 2, 'MethodBody': 'boolean hasPlugin(String groupId, String artifactId);', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/api/src/main/java/io/fabric8/maven/enricher/api/EnricherContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'public WatcherContext getContext() {\n        return context;\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/watcher/api/src/main/java/io/fabric8/maven/watcher/api/BaseWatcher.java'}, {'Syntax': 'getContext().hasDependency( ""org.wildfly.swarm"", null)', 'FunctionName': 'hasDependency', 'ArgsCount': 2, 'MethodBody': 'default boolean hasDependency(String groupId, String artifactId) {\n        return getDependencyVersion(groupId, artifactId).isPresent();\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/api/src/main/java/io/fabric8/maven/enricher/api/EnricherContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'public WatcherContext getContext() {\n        return context;\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/watcher/api/src/main/java/io/fabric8/maven/watcher/api/BaseWatcher.java'}, {'Syntax': 'getContext().hasPlugin( ""io.thorntail"", ""thorntail-maven-plugin"")', 'FunctionName': 'hasPlugin', 'ArgsCount': 2, 'MethodBody': 'boolean hasPlugin(String groupId, String artifactId);', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/api/src/main/java/io/fabric8/maven/enricher/api/EnricherContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'public WatcherContext getContext() {\n        return context;\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/watcher/api/src/main/java/io/fabric8/maven/watcher/api/BaseWatcher.java'}, {'Syntax': 'getContext().hasDependency( ""io.thorntail"", null)', 'FunctionName': 'hasDependency', 'ArgsCount': 2, 'MethodBody': 'default boolean hasDependency(String groupId, String artifactId) {\n        return getDependencyVersion(groupId, artifactId).isPresent();\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/enricher/api/src/main/java/io/fabric8/maven/enricher/api/EnricherContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'public WatcherContext getContext() {\n        return context;\n    }', 'FileName': '/fabric8io/fabric8-maven-plugin/watcher/api/src/main/java/io/fabric8/maven/watcher/api/BaseWatcher.java'}]"
6621cd87cda9bd4817b10ff0,kiegroup/droolsjbpm-tools,"public void addConditionFactor(ConditionFactor factor) throws WebDAVException {
        if (conditionFactors.contains(factor))
            throw new WebDAVException(IResponse.SC_BAD_REQUEST, Policy.bind(""error.parseDuplicateEntry"")); //$NON-NLS-1$
        conditionFactors.addElement(factor);
    }",Add a ConditionFactor to a ConditionTerm .,drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/ConditionTerm.java,"[{'Syntax': 'conditionFactors.contains(factor)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(final BaseVertex vertex) {\n        return this.vertices.contains( vertex );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/Row.java'}, {'Syntax': 'Policy.bind(""error.parseDuplicateEntry"")', 'FunctionName': 'bind', 'ArgsCount': 1, 'MethodBody': 'public static String bind(String id) {\n        return bind(id, (String[]) null);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/Policy.java'}, {'Syntax': 'conditionFactors.addElement(factor)', 'FunctionName': 'addElement', 'ArgsCount': 1, 'MethodBody': 'public void addElement(ElementWrapper element) {\n        internalAddElement(element);\n        //id is set in methode above\n        localAddElement(element);\n        notifyListeners(CHANGE_ELEMENTS);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/flow/common/editor/core/ProcessWrapper.java'}]"
6621cd87cda9bd4817b10ff1,eclipse/packagedrone,"public long getSize ( final String fileName )
    {
        final Long result = this.sizes.get ( fileName );

        if ( result == null )
        {
            throw new IllegalStateException ( String.format ( ""Stream '%s' not closed or was not added"", fileName ) );
        }

        return result;
    }",Get the size of a closed file,bundles/org.eclipse.packagedrone.utils/src/org/eclipse/packagedrone/utils/io/OutputSpooler.java,"[{'Syntax': 'this.sizes.get ( fileName )', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'protected void get ( final String url )\n    {\n        System.out.println ( ""Getting: "" + url );\n        this.context.getResolved ( url );\n    }', 'FileName': '/eclipse/packagedrone/testing/server-test/src/test/java/org/eclipse/packagedrone/testing/server/channel/ChannelTester.java'}, {'Syntax': 'String.format ( ""Stream \'%s\' not closed or was not added"", fileName )', 'FunctionName': 'format', 'ArgsCount': 2, 'MethodBody': 'public String format ( final String key, final String value )\n    {\n        final StringBuilder sb = new StringBuilder ();\n        try\n        {\n            append ( key, value, sb );\n        }\n        catch ( final IOException e )\n        {\n            // this should never ever happen\n        }\n        return sb.toString ();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.utils.deb/src/org/eclipse/packagedrone/utils/deb/FieldFormatter.java'}]"
6621cd87cda9bd4817b10ff2,wavesplatform/WavesJ,"public List<Transaction> getAddressTransactions(String address, int limit) throws IOException {
        return getAddressTransactions(address, limit, null);
    }",Returns transactions by address with limit .,src/main/java/com/wavesplatform/wavesj/Node.java,[]
6621cd87cda9bd4817b10ff3,RestComm/jain-slee,"public static Class checkInterfaces(Class classOrInterfaceWithInterfaces, String interfaceSearched) {
		Class returnValue = null;

		if (classOrInterfaceWithInterfaces.getName().compareTo(interfaceSearched) == 0) {
			return classOrInterfaceWithInterfaces;

		}
		// we do check only on get interfaces
		for (Class iface : classOrInterfaceWithInterfaces.getInterfaces()) {
			if (iface.getName().compareTo(interfaceSearched) == 0) {
				returnValue = iface;

			} else {
				returnValue = checkInterfaces(iface, interfaceSearched);
			}

			if (returnValue != null)
				break;
		}

		if (!classOrInterfaceWithInterfaces.isInterface() && returnValue == null) {
			Class superClass = classOrInterfaceWithInterfaces.getSuperclass();
			if (superClass != null) {
				returnValue = checkInterfaces(superClass, interfaceSearched);
			}
		}

		return returnValue;
	}",Searches for provided interface in passed Class object - it can be class or interface . If it finds it return instance of it .,container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java,"[{'Syntax': 'classOrInterfaceWithInterfaces.getName().compareTo(interfaceSearched)', 'FunctionName': 'compareTo', 'ArgsCount': 1, 'MethodBody': 'public abstract int compareTo(Object obj);', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/ComponentID.java'}, {'Syntax': 'classOrInterfaceWithInterfaces.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'iface.getName().compareTo(interfaceSearched)', 'FunctionName': 'compareTo', 'ArgsCount': 1, 'MethodBody': 'public abstract int compareTo(Object obj);', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/ComponentID.java'}, {'Syntax': 'iface.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'checkInterfaces(iface, interfaceSearched)', 'FunctionName': 'checkInterfaces', 'ArgsCount': 2, 'MethodBody': 'public static Class checkInterfaces(Class classOrInterfaceWithInterfaces, String interfaceSearched) {\n\t\tClass returnValue = null;\n\n\t\tif (classOrInterfaceWithInterfaces.getName().compareTo(interfaceSearched) == 0) {\n\t\t\treturn classOrInterfaceWithInterfaces;\n\n\t\t}\n\t\t// we do check only on get interfaces\n\t\tfor (Class iface : classOrInterfaceWithInterfaces.getInterfaces()) {\n\t\t\tif (iface.getName().compareTo(interfaceSearched) == 0) {\n\t\t\t\treturnValue = iface;\n\n\t\t\t} else {\n\t\t\t\treturnValue = checkInterfaces(iface, interfaceSearched);\n\t\t\t}\n\n\t\t\tif (returnValue != null)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!classOrInterfaceWithInterfaces.isInterface() && returnValue == null) {\n\t\t\tClass superClass = classOrInterfaceWithInterfaces.getSuperclass();\n\t\t\tif (superClass != null) {\n\t\t\t\treturnValue = checkInterfaces(superClass, interfaceSearched);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java'}, {'Syntax': 'checkInterfaces(superClass, interfaceSearched)', 'FunctionName': 'checkInterfaces', 'ArgsCount': 2, 'MethodBody': 'public static Class checkInterfaces(Class classOrInterfaceWithInterfaces, String interfaceSearched) {\n\t\tClass returnValue = null;\n\n\t\tif (classOrInterfaceWithInterfaces.getName().compareTo(interfaceSearched) == 0) {\n\t\t\treturn classOrInterfaceWithInterfaces;\n\n\t\t}\n\t\t// we do check only on get interfaces\n\t\tfor (Class iface : classOrInterfaceWithInterfaces.getInterfaces()) {\n\t\t\tif (iface.getName().compareTo(interfaceSearched) == 0) {\n\t\t\t\treturnValue = iface;\n\n\t\t\t} else {\n\t\t\t\treturnValue = checkInterfaces(iface, interfaceSearched);\n\t\t\t}\n\n\t\t\tif (returnValue != null)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!classOrInterfaceWithInterfaces.isInterface() && returnValue == null) {\n\t\t\tClass superClass = classOrInterfaceWithInterfaces.getSuperclass();\n\t\t\tif (superClass != null) {\n\t\t\t\treturnValue = checkInterfaces(superClass, interfaceSearched);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java'}]"
6621cd87cda9bd4817b10ff4,wildfly/wildfly,"private void postParseSteps(
        final VirtualFile persistence_xml,
        final PersistenceUnitMetadataHolder puHolder,
        final DeploymentUnit deploymentUnit ) {

        for (PersistenceUnitMetadata pu : puHolder.getPersistenceUnits()) {
            // set URLs
            List<URL> jarfilesUrls = new ArrayList<URL>();
            if (pu.getJarFiles() != null) {
                for (String jar : pu.getJarFiles()) {
                    jarfilesUrls.add(getRelativeURL(persistence_xml, jar));
                }
            }
            pu.setJarFileUrls(jarfilesUrls);
            URL url = getPersistenceUnitURL(persistence_xml);
            pu.setPersistenceUnitRootUrl(url);
            String scopedPersistenceUnitName;

            /**
             * WFLY-5478 allow custom scoped persistence unit name hint in persistence unit definition.
             * Specified scoped persistence unit name needs to be unique across application server deployments.
             * Application is responsible for picking a unique name.
             * Currently, a non-unique name will result in a DuplicateServiceException deployment failure:
             *   org.jboss.msc.service.DuplicateServiceException: Service jboss.persistenceunit.my2lccustom#test_pu.__FIRST_PHASE__ is already registered
             */
            scopedPersistenceUnitName = Configuration.getScopedPersistenceUnitName(pu);
            if (scopedPersistenceUnitName == null) {
                scopedPersistenceUnitName = createBeanName(deploymentUnit, pu.getPersistenceUnitName());
            } else {
                ROOT_LOGGER.tracef(""persistence unit '%s' specified a custom scoped persistence unit name hint "" +
                        ""(jboss.as.jpa.scopedname=%s).  The specified name *must* be unique across all application server deployments."",
                        pu.getPersistenceUnitName(),
                        scopedPersistenceUnitName);
                if (scopedPersistenceUnitName.indexOf('/') != -1) {
                    throw JpaLogger.ROOT_LOGGER.invalidScopedName(scopedPersistenceUnitName, '/');
                }
            }

            pu.setScopedPersistenceUnitName(scopedPersistenceUnitName);
        }
    }",Some of this might need to move to the install phase,jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitParseProcessor.java,"[{'Syntax': 'puHolder.getPersistenceUnits()', 'FunctionName': 'getPersistenceUnits', 'ArgsCount': 0, 'MethodBody': 'public List<PersistenceUnitMetadata> getPersistenceUnits() {\n        return persistenceUnits;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataHolder.java'}, {'Syntax': 'pu.getJarFiles()', 'FunctionName': 'getJarFiles', 'ArgsCount': 0, 'MethodBody': '@Override\n    public List<String> getJarFiles() {\n        return jarFiles;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'pu.getJarFiles()', 'FunctionName': 'getJarFiles', 'ArgsCount': 0, 'MethodBody': '@Override\n    public List<String> getJarFiles() {\n        return jarFiles;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'jarfilesUrls.add(getRelativeURL(persistence_xml, jar))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Consumer<Supplier<Node>> add(ServiceName name) {\n        return this.registry.add(name);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/NodeServiceExecutorRegistry.java'}, {'Syntax': 'getRelativeURL(persistence_xml, jar)', 'FunctionName': 'getRelativeURL', 'ArgsCount': 2, 'MethodBody': 'private static URL getRelativeURL(VirtualFile persistence_xml, String jar) {\n        try {\n            return new URL(jar);\n        } catch (MalformedURLException e) {\n            try {\n                VirtualFile deploymentUnitFile = persistence_xml;\n                //we need the parent 3 units up, 1 is META-INF, 2nd is the actual jar, 3rd is the jar files parent\n                VirtualFile parent = deploymentUnitFile.getParent().getParent().getParent();\n                VirtualFile baseDir = (parent != null ? parent : deploymentUnitFile);\n                VirtualFile jarFile = baseDir.getChild(jar);\n                if (jarFile == null)\n                    throw JpaLogger.ROOT_LOGGER.childNotFound(jar, baseDir);\n                return jarFile.toURL();\n            } catch (Exception e1) {\n                throw JpaLogger.ROOT_LOGGER.relativePathNotFound(e1, jar);\n            }\n        }\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitParseProcessor.java'}, {'Syntax': 'pu.setJarFileUrls(jarfilesUrls)', 'FunctionName': 'setJarFileUrls', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void setJarFileUrls(List<URL> jarFilesUrls) {\n        this.jarFilesUrls = jarFilesUrls;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'getPersistenceUnitURL(persistence_xml)', 'FunctionName': 'getPersistenceUnitURL', 'ArgsCount': 1, 'MethodBody': 'private URL getPersistenceUnitURL(VirtualFile persistence_xml) {\n        try {\n            VirtualFile metaData = persistence_xml;// di.getMetaDataFile(""persistence.xml"");\n            return metaData.getParent().getParent().toURL();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitParseProcessor.java'}, {'Syntax': 'pu.setPersistenceUnitRootUrl(url)', 'FunctionName': 'setPersistenceUnitRootUrl', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void setPersistenceUnitRootUrl(URL persistenceUnitRootUrl) {\n        this.persistenceUnitRootUrl = persistenceUnitRootUrl;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'Configuration.getScopedPersistenceUnitName(pu)', 'FunctionName': 'getScopedPersistenceUnitName', 'ArgsCount': 1, 'MethodBody': 'public static String getScopedPersistenceUnitName(PersistenceUnitMetadata pu) {\n\n        Object name = pu.getProperties().get(JPA_SCOPED_PERSISTENCE_UNIT_NAME);\n        if (name instanceof String) {\n            return (String)name;\n        }\n        return null;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/Configuration.java'}, {'Syntax': 'createBeanName(deploymentUnit, pu.getPersistenceUnitName())', 'FunctionName': 'createBeanName', 'ArgsCount': 2, 'MethodBody': 'public static String createBeanName(DeploymentUnit deploymentUnit, String persistenceUnitName) {\n        // persistenceUnitName must be a simple name\n        if (persistenceUnitName.indexOf(\'/\') != -1) {\n            throw JpaLogger.ROOT_LOGGER.invalidPersistenceUnitName(persistenceUnitName, \'/\');\n        }\n        if (persistenceUnitName.indexOf(\'#\') != -1) {\n            throw JpaLogger.ROOT_LOGGER.invalidPersistenceUnitName(persistenceUnitName, \'#\');\n        }\n\n        String unitName = getScopedDeploymentUnitPath(deploymentUnit) + ""#"" + persistenceUnitName;\n        return unitName;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitParseProcessor.java'}, {'Syntax': 'pu.getPersistenceUnitName()', 'FunctionName': 'getPersistenceUnitName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getPersistenceUnitName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'pu.getPersistenceUnitName()', 'FunctionName': 'getPersistenceUnitName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getPersistenceUnitName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': ""JpaLogger.ROOT_LOGGER.invalidScopedName(scopedPersistenceUnitName, '/')"", 'FunctionName': 'invalidScopedName', 'ArgsCount': 2, 'MethodBody': '@Message(id = 44, value = ""jboss.as.jpa.scopedname hint (%s) contains illegal \'%s\' character"")\n    IllegalArgumentException invalidScopedName(String persistenceUnitName, char c);', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/messages/JpaLogger.java'}, {'Syntax': 'pu.setScopedPersistenceUnitName(scopedPersistenceUnitName)', 'FunctionName': 'setScopedPersistenceUnitName', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void setScopedPersistenceUnitName(String scopedName) {\n        this.scopedName = scopedName;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}]"
6621cd87cda9bd4817b10ff5,streamsets/datacollector,"public PipelineConfiguration upgradeIfNecessary(
      StageLibraryTask library,
      PipelineConfiguration pipelineConf,
      List<Issue> issues
  ) {
    Preconditions.checkArgument(issues.isEmpty(), ""Given list of issues must be empty."");
    boolean upgrade;

    // Firstly upgrading schema if needed, then data
    upgrade = needsSchemaUpgrade(pipelineConf, issues);
    if(upgrade && issues.isEmpty()) {
      pipelineConf = upgradeSchema(library, pipelineConf, issues);
    }

    // Something went wrong with the schema upgrade
    if(!issues.isEmpty()) {
      return null;
    }

    // Upgrading data if needed
    upgrade = needsUpgrade(library, pipelineConf, issues);
    if (upgrade && issues.isEmpty()) {
      //we try to upgrade only if we have all defs for the pipelineConf
      pipelineConf = upgrade(library, pipelineConf, issues);
    }
    return (issues.isEmpty()) ? pipelineConf : null;
  }",Upgrade whole pipeline at once and return updated variant .,container/src/main/java/com/streamsets/datacollector/configupgrade/PipelineConfigurationUpgrader.java,[]
6621cd87cda9bd4817b10ff6,deeplearning4j/nd4j,"protected void sweepTail() {
        Integer deviceId = allocator.getDeviceId();
        int cnt = 0;

        // we get number of issued commands for specific device
        long lastCommandId = deviceClocks.get(deviceId).get();

        for (int l = 0; l < configuration.getCommandLanesNumber(); l++) {
            Queue<cudaEvent_t> queue = eventsBarrier.get(deviceId).get(l);

            if (queue.size() >= MAX_EXECUTION_QUEUE
                            || laneClocks.get(deviceId).get(l).get() < lastCommandId - MAX_EXECUTION_QUEUE) {
                cudaEvent_t event = queue.poll();
                if (event != null && !event.isDestroyed()) {
                    event.synchronize();
                    event.destroy();
                    cnt++;
                }
            }

        }

        deviceClocks.get(deviceId).incrementAndGet();

        //  log.info(""Events sweeped: [{}]"", cnt);
    }",This method ensures the events in the beginning of FIFO queues are finished,nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/flow/impl/AsynchronousFlowController.java,[]
6621cd87cda9bd4817b10ff7,js-lib-com/tiny-container,"public void attach(HttpServletRequest httpRequest, HttpServletResponse httpResponse) {
		// takes care to not override request URL, locale and request path values if set by request pre-processor
		if (requestURL == null) {
			requestURL = httpRequest.getRequestURI();
		}
		if (locale == null) {
			locale = httpRequest.getLocale();
		}
		if (requestPath == null) {
			// request URI and context path cannot ever be null
			requestPath = httpRequest.getRequestURI().substring(httpRequest.getContextPath().length());
		}

		this.httpRequest = httpRequest;
		this.httpResponse = httpResponse;
		this.attached = true;
	}",Attach this instance to HTTP servlet request . Load this instance state from HTTP servlet request and mark it as attached .,src/main/java/js/servlet/RequestContext.java,"[{'Syntax': 'httpRequest.getRequestURI()', 'FunctionName': 'getRequestURI', 'ArgsCount': 0, 'MethodBody': 'public String getRequestURI() {\n\t\treturn httpRequest.getRequestURI();\n\t}', 'FileName': '/js-lib-com/tiny-container/tiny-servlet/src/main/java/com/jslib/container/servlet/RequestContext.java'}, {'Syntax': 'httpRequest.getLocale()', 'FunctionName': 'getLocale', 'ArgsCount': 0, 'MethodBody': 'public Locale getLocale() {\n\t\treturn locale;\n\t}', 'FileName': '/js-lib-com/tiny-container/tiny-servlet/src/main/java/com/jslib/container/servlet/RequestContext.java'}, {'Syntax': 'httpRequest.getRequestURI()', 'FunctionName': 'getRequestURI', 'ArgsCount': 0, 'MethodBody': 'public String getRequestURI() {\n\t\treturn httpRequest.getRequestURI();\n\t}', 'FileName': '/js-lib-com/tiny-container/tiny-servlet/src/main/java/com/jslib/container/servlet/RequestContext.java'}, {'Syntax': 'httpRequest.getContextPath().length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public static int length() {\n\t\treturn values().length;\n\t}', 'FileName': '/js-lib-com/tiny-container/tiny-timer/src/main/java/com/jslib/container/timer/CalendarUnit.java'}]"
6621cd87cda9bd4817b10ff8,Netflix/hollow,"public RecordPrimaryKey extractPrimaryKey(Object o) {
        HollowObjectTypeMapper typeMapper = (HollowObjectTypeMapper) getTypeMapper(o.getClass(), null, null);
        return new RecordPrimaryKey(typeMapper.getTypeName(), typeMapper.extractPrimaryKey(o));
    }",Extracts the primary key from the specified POJO .,hollow/src/main/java/com/netflix/hollow/core/write/objectmapper/HollowObjectMapper.java,"[{'Syntax': 'getTypeMapper(o.getClass(), null, null)', 'FunctionName': 'getTypeMapper', 'ArgsCount': 3, 'MethodBody': 'HollowTypeMapper getTypeMapper(Type type, String declaredName, String[] hashKeyFieldPaths) {\n        return getTypeMapper(type, declaredName, hashKeyFieldPaths, -1, null);\n    }', 'FileName': '/Netflix/hollow/hollow/src/main/java/com/netflix/hollow/core/write/objectmapper/HollowObjectMapper.java'}, {'Syntax': 'typeMapper.getTypeName()', 'FunctionName': 'getTypeName', 'ArgsCount': 0, 'MethodBody': 'public String getTypeName() {\n        return typeName;\n    }', 'FileName': '/Netflix/hollow/hollow-diff-ui/src/main/java/com/netflix/hollow/diff/ui/model/HollowDiffOverviewTypeEntry.java'}, {'Syntax': 'typeMapper.extractPrimaryKey(o)', 'FunctionName': 'extractPrimaryKey', 'ArgsCount': 1, 'MethodBody': 'Object[] extractPrimaryKey(Object obj) {\n        int[][] primaryKeyFieldPathIdx = this.primaryKeyFieldPathIdx;\n        \n        if(primaryKeyFieldPathIdx == null) {\n            primaryKeyFieldPathIdx = calculatePrimaryKeyFieldPathIdx(primaryKeyFieldPathIdx);\n            this.primaryKeyFieldPathIdx = primaryKeyFieldPathIdx;\n        }\n        \n        Object key[] = new Object[primaryKeyFieldPathIdx.length];\n        \n        for(int i=0;i<key.length;i++) {\n            key[i] = retrieveFieldValue(obj, primaryKeyFieldPathIdx[i], 0);\n        }\n        \n        return key;\n    }', 'FileName': '/Netflix/hollow/hollow/src/main/java/com/netflix/hollow/core/write/objectmapper/HollowObjectTypeMapper.java'}]"
6621cd87cda9bd4817b10ff9,rupertlssmith/lojix,"public void removePropertyChangeListener(String p, PropertyChangeListener l)
    {
        if (listeners == null)
        {
            return;
        }

        synchronized (listeners)
        {
            listeners.remove(l);
        }
    }",Removes the specified property change listener from the list of active listeners .,base/common/src/main/com/thesett/common/state/BaseState.java,"[{'Syntax': 'listeners.remove(l)', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': 'public E remove(Object key)\n        {\n            return table.remove((K) key, field);\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/unittests/com/thesett/common/util/doublemaps/SymbolTableTestBase.java'}]"
6621cd87cda9bd4817b10ffa,vigna/fastutil,"@Override
	public long skip(final long n) throws IOException {
		if (n <= avail) {
			final int m = (int)n;
			pos += m;
			avail -= m;
			readBytes += n;
			return n;
		}

		long toSkip = n - avail, result = 0;
		avail = 0;

		while (toSkip != 0 && (result = is == System.in ? skipByReading(toSkip) : is.skip(toSkip)) < toSkip) {
			if (result == 0) {
				if (is.read() == -1) break;
				toSkip--;
			}
			else toSkip -= result;
		}

		final long t = n - (toSkip - result);
		readBytes += t;
		return t;
	}",Skips over and discards the given number of bytes of data from this fast buffered input stream .,src/it/unimi/dsi/fastutil/io/FastBufferedInputStream.java,"[{'Syntax': 'skipByReading(toSkip)', 'FunctionName': 'skipByReading', 'ArgsCount': 1, 'MethodBody': 'private long skipByReading(final long n) throws IOException {\n\t\tlong toSkip = n;\n\t\tint len;\n\t\twhile(toSkip > 0) {\n\t\t\tlen = is.read(buffer, 0, (int)Math.min(buffer.length, toSkip));\n\t\t\tif (len > 0) toSkip -= len;\n\t\t\telse break;\n\t\t}\n\n\t\treturn n - toSkip;\n\t}', 'FileName': '/vigna/fastutil/src/it/unimi/dsi/fastutil/io/FastBufferedInputStream.java'}, {'Syntax': 'is.skip(toSkip)', 'FunctionName': 'skip', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic long skip(final long n) {\n\t\t\tfinal int k = r.nextInt(2);\n\t\t\treturn super.skip(n < k ? n : k);\n\t\t}', 'FileName': '/vigna/fastutil/test/it/unimi/dsi/fastutil/io/FastBufferedInputStreamTest.java'}, {'Syntax': 'is.read()', 'FunctionName': 'read', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic int read() throws IOException {\n\t\tensureOpen();\n\t\tif (position == length()) return -1; // Nothing to read\n\t\tif (position < inspectable) return buffer[(int)position++] & 0xFF;\n\t\tfileChannel.position(position - inspectable);\n\t\tposition++;\n\t\treturn randomAccessFile.read();\n\t}', 'FileName': '/vigna/fastutil/src/it/unimi/dsi/fastutil/io/InspectableFileCachedInputStream.java'}]"
6621cd87cda9bd4817b10ffb,tiefaces/TieFaces,"public static void convertCell(final SheetConfiguration sheetConfig, final FacesCell fcell, final Cell poiCell,
			final Map<String, CellRangeAddress> cellRangeMap, final int originRowIndex,
			final CellAttributesMap cellAttributesMap, final String saveAttrs) {
		CellRangeAddress caddress;
		String key = getCellIndexNumberKey(poiCell);
		caddress = cellRangeMap.get(key);
		if (caddress != null) {
			// has col or row span
			fcell.setColspan(caddress.getLastColumn() - caddress.getFirstColumn() + 1);
			fcell.setRowspan(caddress.getLastRow() - caddress.getFirstRow() + 1);
		}

		CellControlsUtility.setupControlAttributes(originRowIndex, fcell, poiCell, sheetConfig, cellAttributesMap);
		fcell.setHasSaveAttr(SaveAttrsUtility.isHasSaveAttr(poiCell, saveAttrs));

	}",set up facesCell s attribute from poiCell and others .,src/org/tiefaces/components/websheet/utility/CellUtility.java,"[{'Syntax': 'getCellIndexNumberKey(poiCell)', 'FunctionName': 'getCellIndexNumberKey', 'ArgsCount': 1, 'MethodBody': 'public static String getCellIndexNumberKey(final Cell cell) {\r\n\t\tif (cell != null) {\r\n\t\t\treturn TieConstants.CELL_ADDR_PRE_FIX + cell.getColumnIndex() + TieConstants.CELL_ADDR_PRE_FIX\r\n\t\t\t\t\t+ cell.getRowIndex();\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellUtility.java'}, {'Syntax': 'cellRangeMap.get(key)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'fcell.setColspan(caddress.getLastColumn() - caddress.getFirstColumn() + 1)', 'FunctionName': 'setColspan', 'ArgsCount': 1, 'MethodBody': 'public final void setColspan(final String pcolspan) {\r\n\t\tthis.colspan = pcolspan;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/HeaderCell.java'}, {'Syntax': 'fcell.setRowspan(caddress.getLastRow() - caddress.getFirstRow() + 1)', 'FunctionName': 'setRowspan', 'ArgsCount': 1, 'MethodBody': 'public final void setRowspan(final String prowspan) {\r\n\t\tthis.rowspan = prowspan;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/HeaderCell.java'}, {'Syntax': 'caddress.getLastRow()', 'FunctionName': 'getLastRow', 'ArgsCount': 0, 'MethodBody': 'int getLastRow();', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/Command.java'}, {'Syntax': 'CellControlsUtility.setupControlAttributes(originRowIndex, fcell, poiCell, sheetConfig, cellAttributesMap)', 'FunctionName': 'setupControlAttributes', 'ArgsCount': 5, 'MethodBody': 'public static void setupControlAttributes(final int originRowIndex,\r\n\t\t\tfinal FacesCell fcell, final Cell poiCell,\r\n\t\t\tfinal SheetConfiguration sheetConfig,\r\n\t\t\tfinal CellAttributesMap cellAttributesMap) {\r\n\t\tint rowIndex = originRowIndex;\r\n\t\tif (rowIndex < 0) {\r\n\t\t\trowIndex = poiCell.getRowIndex();\r\n\t\t}\r\n\r\n\t\tString skey = poiCell.getSheet().getSheetName() + ""!"" + CellUtility\r\n\t\t\t\t.getCellIndexNumberKey(poiCell.getColumnIndex(), rowIndex);\r\n\r\n\t\tMap<String, String> commentMap = cellAttributesMap\r\n\t\t\t\t.getTemplateCommentMap().get(""$$"");\r\n\t\tif (commentMap != null) {\r\n\t\t\tString comment = commentMap.get(skey);\r\n\t\t\tif (comment != null) {\r\n\t\t\t\tCommandUtility.createCellComment(poiCell, comment,\r\n\t\t\t\t\t\tsheetConfig.getFinalCommentMap());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tString widgetType = cellAttributesMap.getCellInputType().get(skey);\r\n\t\tif (widgetType != null) {\r\n\t\t\tfcell.setControl(widgetType.toLowerCase());\r\n\r\n\t\t\tfcell.setInputAttrs(\r\n\t\t\t\t\tcellAttributesMap.getCellInputAttributes().get(skey));\r\n\t\t\tfcell.setSelectItemAttrs(cellAttributesMap\r\n\t\t\t\t\t.getCellSelectItemsAttributes().get(skey));\r\n\t\t\tfcell.setDatePattern(\r\n\t\t\t\t\tcellAttributesMap.getCellDatePattern().get(skey));\r\n\t\t}\r\n\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellControlsUtility.java'}, {'Syntax': 'fcell.setHasSaveAttr(SaveAttrsUtility.isHasSaveAttr(poiCell, saveAttrs))', 'FunctionName': 'setHasSaveAttr', 'ArgsCount': 1, 'MethodBody': 'public final void setHasSaveAttr(final boolean phasSaveAttr) {\r\n\t\tthis.hasSaveAttr = phasSaveAttr;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/FacesCell.java'}, {'Syntax': 'SaveAttrsUtility.isHasSaveAttr(poiCell, saveAttrs)', 'FunctionName': 'isHasSaveAttr', 'ArgsCount': 2, 'MethodBody': 'public static boolean isHasSaveAttr(final Cell cell, final String saveAttrs) {\r\n\r\n\t\tif (cell != null) {\r\n\t\t\tint columnIndex = cell.getColumnIndex();\r\n\t\t\tString str = TieConstants.CELL_ADDR_PRE_FIX + columnIndex + ""="";\r\n\t\t\tif ((saveAttrs != null) && (saveAttrs.indexOf(str) >= 0)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/SaveAttrsUtility.java'}]"
6621cd88cda9bd4817b10ffc,boonproject/boon,"public static int roundUpToPowerOf2( int number ) {
        int rounded = number >= 1_000
                ? 1_000
                : ( rounded = Integer.highestOneBit( number ) ) != 0
                ? ( Integer.bitCount( number ) > 1 ) ? rounded << 1 : rounded
                : 1;

        return rounded;
    }",Round up to the nearest power of 2,boon/src/main/java/org/boon/primitive/Int.java,[]
6621cd88cda9bd4817b10ffd,wildfly/wildfly,"public void registerResourceAdapterDeployment(ResourceAdapterDeployment deployment) {
        if (deployment == null)
            throw new IllegalArgumentException(ConnectorLogger.ROOT_LOGGER.nullVar(""Deployment""));

        DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER.tracef(""Adding deployment: %s"", deployment);

        deployments.add(deployment);
    }",Register a resource adapter deployment,connector/src/main/java/org/jboss/as/connector/services/resourceadapters/deployment/registry/ResourceAdapterDeploymentRegistryImpl.java,"[{'Syntax': 'ConnectorLogger.ROOT_LOGGER.nullVar(""Deployment"")', 'FunctionName': 'nullVar', 'ArgsCount': 1, 'MethodBody': '@Message(id = 9, value = ""%s is null"")\n    IllegalArgumentException nullVar(String name);', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/logging/SarLogger.java'}, {'Syntax': 'DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER.tracef(""Adding deployment: %s"", deployment)', 'FunctionName': 'tracef', 'ArgsCount': 2, 'MethodBody': 'private static void tracef(final String format, final Object... params) {\n        if (EjbLogger.EJB3_INVOCATION_LOGGER.isTraceEnabled())\n            EjbLogger.EJB3_INVOCATION_LOGGER.tracef(format, params);\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/iiop/stub/DynamicIIOPStub.java'}, {'Syntax': 'deployments.add(deployment)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Consumer<Supplier<Node>> add(ServiceName name) {\n        return this.registry.add(name);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/NodeServiceExecutorRegistry.java'}]"
6621cd88cda9bd4817b10ffe,vigna/fastutil,"protected boolean noMoreCharacters() throws IOException {
		if (avail == 0) {
			avail = is.read(buffer);
			if (avail <= 0) {
				avail = 0;
				return true;
			}
			pos = 0;
		}
		return false;
	}",Checks whether no more bytes will be returned .,src/it/unimi/dsi/fastutil/io/FastBufferedInputStream.java,"[{'Syntax': 'is.read(buffer)', 'FunctionName': 'read', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic int read(final byte[] b) throws IOException {\n\t\treturn read(b, 0, b.length);\n\t}', 'FileName': '/vigna/fastutil/src/it/unimi/dsi/fastutil/io/InspectableFileCachedInputStream.java'}]"
6621cd88cda9bd4817b10fff,Unidata/thredds,"static public Variable findVariableWithAttributeValue(Structure struct, String attName, String attValue) {
    for (Variable v : struct.getVariables()) {
      Attribute att = v.findAttributeIgnoreCase(attName);
      if ((att != null) && att.getStringValue().equals(attValue))
        return v;
    }
    return null;
  }",Find first member variable in this struct with given attribute name and value,cdm/src/main/java/ucar/nc2/ft/point/standard/Evaluator.java,[]
6621cd88cda9bd4817b11000,RestComm/jain-slee,"private TreeItem doTree(FQDNNode localRoot) {

    TreeItem localLeaf = new TreeItem();

    LogTreeNode logTreeNode = new LogTreeNode(browseContainer, localRoot.getShortName(), localRoot.getFqdName(), localRoot.isWasLeaf(), this);

    localLeaf.setWidget(logTreeNode);

    if (localRoot.getChildren().size() > 0) {

      Tree t = new Tree();

      ArrayList names = new ArrayList(localRoot.getChildrenNames());
      Collections.sort(names);
      Iterator it = names.iterator();
      while (it.hasNext()) {
        t.addItem(doTree(localRoot.getChild((String) it.next())));
      }
      localLeaf.addItem(t);
    }

    return localLeaf;

  }",TMP DEV METHODS,tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/log/LogStructureTreePanel.java,"[{'Syntax': 'localRoot.getShortName()', 'FunctionName': 'getShortName', 'ArgsCount': 0, 'MethodBody': 'public String getShortName() {\r\n    return shortName;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/log/FQDNNode.java'}, {'Syntax': 'localRoot.getFqdName()', 'FunctionName': 'getFqdName', 'ArgsCount': 0, 'MethodBody': 'public String getFqdName() {\r\n    return fqdName;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/log/FQDNNode.java'}, {'Syntax': 'localRoot.isWasLeaf()', 'FunctionName': 'isWasLeaf', 'ArgsCount': 0, 'MethodBody': 'public boolean isWasLeaf() {\r\n    return wasLeaf;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/log/FQDNNode.java'}, {'Syntax': 'localRoot.getChildren().size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n        return sbbEntity.cacheData.getChildRelationSbbEntities(getChildRelationMethod.getChildRelationMethodName()).size();\n    }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}, {'Syntax': 'localRoot.getChildren()', 'FunctionName': 'getChildren', 'ArgsCount': 0, 'MethodBody': 'public Collection<FQDNNode> getChildren() {\r\n    return this.childNodes.values();\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/log/FQDNNode.java'}, {'Syntax': 'localRoot.getChildrenNames()', 'FunctionName': 'getChildrenNames', 'ArgsCount': 0, 'MethodBody': 'public Set<String> getChildrenNames() {\r\n    return this.childNodes.keySet();\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/log/FQDNNode.java'}, {'Syntax': 'names.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@SuppressWarnings(""rawtypes"")\n\tpublic Iterator iterator() {\n        return new ChildRelationIterator();\n    }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}, {'Syntax': 'it.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': 'public boolean hasNext() {\n            return myIterator.hasNext();\n        }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}, {'Syntax': 'doTree(localRoot.getChild((String) it.next()))', 'FunctionName': 'doTree', 'ArgsCount': 1, 'MethodBody': 'private TreeItem doTree(FQDNNode localRoot) {\r\n\r\n    TreeItem localLeaf = new TreeItem();\r\n\r\n    LogTreeNode logTreeNode = new LogTreeNode(browseContainer, localRoot.getShortName(), localRoot.getFqdName(), localRoot.isWasLeaf(), this);\r\n\r\n    localLeaf.setWidget(logTreeNode);\r\n\r\n    if (localRoot.getChildren().size() > 0) {\r\n\r\n      Tree t = new Tree();\r\n\r\n      ArrayList names = new ArrayList(localRoot.getChildrenNames());\r\n      Collections.sort(names);\r\n      Iterator it = names.iterator();\r\n      while (it.hasNext()) {\r\n        t.addItem(doTree(localRoot.getChild((String) it.next())));\r\n      }\r\n      localLeaf.addItem(t);\r\n    }\r\n\r\n    return localLeaf;\r\n\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/log/LogStructureTreePanel.java'}, {'Syntax': 'localRoot.getChild((String) it.next())', 'FunctionName': 'getChild', 'ArgsCount': 1, 'MethodBody': 'public FQDNNode getChild(String name) {\r\n    return (FQDNNode) this.childNodes.get(name);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/log/FQDNNode.java'}, {'Syntax': 'it.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public Object next() {\n            nextEntity = myIterator.next();\n            SbbEntity childSbbEntity = sleeContainer.getSbbEntityFactory().getSbbEntity(nextEntity, false);\n            if (childSbbEntity != null) {\n            \tthis.nextSbbLocalObject =  childSbbEntity.getSbbLocalObject();\n            \tsbbEntity.addChildWithSbbObject(childSbbEntity);\n            \treturn nextSbbLocalObject;\n            }\n            else {\n            \treturn next();\n            }            \n        }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}]"
6621cd88cda9bd4817b11001,jboss/jboss-common-core,"public static Object convertValue(String text, String typeName)
         throws ClassNotFoundException, IntrospectionException
   {
      // see if it is a primitive type first
      Class<?> typeClass = Classes.getPrimitiveTypeForName(typeName);
      if (typeClass == null)
      {
         ClassLoader loader = Thread.currentThread().getContextClassLoader();
         typeClass = loader.loadClass(typeName);
      }

      PropertyEditor editor = PropertyEditorManager.findEditor(typeClass);
      if (editor == null)
      {
         throw new IntrospectionException
               (""No property editor for type="" + typeClass);
      }

      editor.setAsText(text);
      return editor.getValue();
   }",Convert a string value into the true value for typeName using the PropertyEditor associated with typeName .,src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java,"[{'Syntax': 'Classes.getPrimitiveTypeForName(typeName)', 'FunctionName': 'getPrimitiveTypeForName', 'ArgsCount': 1, 'MethodBody': 'public static Class getPrimitiveTypeForName(final String name)\n   {\n      return (Class) PRIMITIVE_NAME_TYPE_MAP.get(name);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Classes.java'}, {'Syntax': 'Thread.currentThread().getContextClassLoader()', 'FunctionName': 'getContextClassLoader', 'ArgsCount': 0, 'MethodBody': 'public ClassLoader getContextClassLoader()\n   {\n      return getContextClassLoader(Thread.currentThread());\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/loading/ContextClassLoader.java'}, {'Syntax': 'loader.loadClass(typeName)', 'FunctionName': 'loadClass', 'ArgsCount': 1, 'MethodBody': 'public static Class loadClass(String className) throws ClassNotFoundException\n   {\n      return loadClass(className, Thread.currentThread().getContextClassLoader());\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Classes.java'}, {'Syntax': 'PropertyEditorManager.findEditor(typeClass)', 'FunctionName': 'findEditor', 'ArgsCount': 1, 'MethodBody': 'public static PropertyEditor findEditor(final Class<?> type)\n   {\n      return PropertyEditorManager.findEditor(type);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java'}, {'Syntax': 'editor.setAsText(text)', 'FunctionName': 'setAsText', 'ArgsCount': 1, 'MethodBody': 'public void setAsText(final String text) throws IllegalArgumentException\n   {\n      ClassLoader loader = Thread.currentThread().getContextClassLoader();\n      StringTokenizer tokenizer = new StringTokenizer(text, "", \\t\\r\\n"");\n      ArrayList<Class<?>> classes = new ArrayList<Class<?>>();\n      while( tokenizer.hasMoreTokens() == true )\n      {\n         String name = tokenizer.nextToken();\n         try\n         {\n            Class<?> c = loader.loadClass(name);\n            classes.add(c);\n         }\n         catch(ClassNotFoundException e)\n         {\n            throw new IllegalArgumentException(""Failed to find class: ""+name);\n         }\n      }\n\n      Class<?>[] theValue = new Class[classes.size()];\n      classes.toArray(theValue);\n      setValue(theValue);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/propertyeditor/ClassArrayEditor.java'}, {'Syntax': 'editor.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public Object getValue();', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}]"
6621cd88cda9bd4817b11002,boonproject/boon,"public void init() {
        /* If the parent and name are equal to null,
         * use the classname to load listFromClassLoader.
    	 * */
        if ( name == null && parent == null ) {
            this.setDetailMessage( ""{"" + this.getClass().getName() + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + this.getClass().getName() + SUMMARY_KEY + ""}"" );
        /* If the parent is null and the name is not,
         * use the name to load listFromClassLoader.
         */
        } else if ( name != null && parent == null ) {
            this.setDetailMessage( ""{"" + ""message."" + getName() + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + ""message."" + getName() + SUMMARY_KEY + ""}"" );
        /* If the parent is present, initialize the message keys
         * with the parent name.
         */
        } else if ( parent != null ) {
            this.setDetailMessage( ""{"" + ""message."" + parent + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + ""message."" + parent + SUMMARY_KEY + ""}"" );
        }
    }",The init method tries to generate the message keys . You should only call the init method if you don t inject values into the detailMessage and summaryMessage .,boon/src/main/java/org/boon/messages/MessageSpecification.java,"[{'Syntax': 'this.setDetailMessage( ""{"" + this.getClass().getName() + DETAIL_KEY + ""}"" )', 'FunctionName': 'setDetailMessage', 'ArgsCount': 1, 'MethodBody': 'public void setDetailMessage( String detailKey ) {\n        this.detailMessage = detailKey;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/messages/MessageSpecification.java'}, {'Syntax': 'this.getClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-core/src/main/java/org/boon/slumberdb/config/Config.java'}, {'Syntax': 'this.setSummaryMessage( ""{"" + this.getClass().getName() + SUMMARY_KEY + ""}"" )', 'FunctionName': 'setSummaryMessage', 'ArgsCount': 1, 'MethodBody': 'public void setSummaryMessage( String summaryKey ) {\n        this.summaryMessage = summaryKey;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/messages/MessageSpecification.java'}, {'Syntax': 'this.getClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-core/src/main/java/org/boon/slumberdb/config/Config.java'}, {'Syntax': 'this.setDetailMessage( ""{"" + ""message."" + getName() + DETAIL_KEY + ""}"" )', 'FunctionName': 'setDetailMessage', 'ArgsCount': 1, 'MethodBody': 'public void setDetailMessage( String detailKey ) {\n        this.detailMessage = detailKey;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/messages/MessageSpecification.java'}, {'Syntax': 'getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-core/src/main/java/org/boon/slumberdb/config/Config.java'}, {'Syntax': 'this.setSummaryMessage( ""{"" + ""message."" + getName() + SUMMARY_KEY + ""}"" )', 'FunctionName': 'setSummaryMessage', 'ArgsCount': 1, 'MethodBody': 'public void setSummaryMessage( String summaryKey ) {\n        this.summaryMessage = summaryKey;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/messages/MessageSpecification.java'}, {'Syntax': 'getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-core/src/main/java/org/boon/slumberdb/config/Config.java'}, {'Syntax': 'this.setDetailMessage( ""{"" + ""message."" + parent + DETAIL_KEY + ""}"" )', 'FunctionName': 'setDetailMessage', 'ArgsCount': 1, 'MethodBody': 'public void setDetailMessage( String detailKey ) {\n        this.detailMessage = detailKey;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/messages/MessageSpecification.java'}, {'Syntax': 'this.setSummaryMessage( ""{"" + ""message."" + parent + SUMMARY_KEY + ""}"" )', 'FunctionName': 'setSummaryMessage', 'ArgsCount': 1, 'MethodBody': 'public void setSummaryMessage( String summaryKey ) {\n        this.summaryMessage = summaryKey;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/messages/MessageSpecification.java'}]"
6621cd88cda9bd4817b11003,deeplearning4j/nd4j,"@Override
    public IComplexNDArray putColumn(int column, INDArray toPut) {
        assert toPut.isVector() && toPut.length() == rows() : ""Illegal length for row "" + toPut.length()
                        + "" should have been "" + columns();
        IComplexNDArray r = getColumn(column);
        if (toPut instanceof IComplexNDArray) {
            IComplexNDArray putComplex = (IComplexNDArray) toPut;
            for (int i = 0; i < r.length(); i++) {
                IComplexNumber n = putComplex.getComplex(i);
                r.putScalar(i, n);
            }
        } else {
            for (int i = 0; i < r.length(); i++)
                r.putScalar(i, Nd4j.createDouble(toPut.getDouble(i), 0));

        }

        return this;
    }",Insert a column in to this array Will throw an exception if this ndarray is not a matrix,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/complex/BaseComplexNDArray.java,[]
6621cd88cda9bd4817b11004,jboss/jboss-common-core,"public static void add(int type, Throwable t) {
      // don't add null throwables
      if (t == null) return;

      try {
         fireOnThrowable(type, t);
      }
      catch (Throwable bad) {
         // don't let these propagate, that could introduce unwanted side-effects
         System.err.println(""Unable to handle throwable: "" + t + "" because of:"");
         bad.printStackTrace();
      }
   }",Add a throwable that is to be handled .,src/main/java/org/jboss/util/ThrowableHandler.java,"[{'Syntax': 'fireOnThrowable(type, t)', 'FunctionName': 'fireOnThrowable', 'ArgsCount': 2, 'MethodBody': 'protected static void fireOnThrowable(int type, Throwable t) {\n      Object[] list = listeners.toArray();\n\n      for (int i=0; i<list.length; i++) {\n         ((ThrowableListener)list[i]).onThrowable(type, t);\n      }\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/ThrowableHandler.java'}, {'Syntax': 'bad.printStackTrace()', 'FunctionName': 'printStackTrace', 'ArgsCount': 0, 'MethodBody': 'public void printStackTrace() {\n      printStackTrace(System.err);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/NestedRuntimeException.java'}]"
6621cd88cda9bd4817b11005,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<String> getVermarktungsart() {
        if (vermarktungsart == null) {
            vermarktungsart = new ArrayList<String>();
        }
        return this.vermarktungsart;
    }",Gets the value of the vermarktungsart property .,OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Objekt.java,[]
6621cd88cda9bd4817b11006,wro4j/wro4j,"public static ResourceChangeHandler create(final WroManagerFactory managerFactory, final Log log) {
    notNull(managerFactory, ""WroManagerFactory was not set"");
    notNull(log, ""Log was not set"");
    return new ResourceChangeHandler().setManagerFactory(managerFactory).setLog(log);
  }",Factory method which requires all mandatory fields .,wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/support/ResourceChangeHandler.java,"[{'Syntax': 'new ResourceChangeHandler().setManagerFactory(managerFactory).setLog(log)', 'FunctionName': 'setLog', 'ArgsCount': 1, 'MethodBody': 'public ResourceChangeHandler setLog(final Log log) {\n    this.log = log;\n    return this;\n  }', 'FileName': '/wro4j/wro4j/wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/support/ResourceChangeHandler.java'}, {'Syntax': 'new ResourceChangeHandler().setManagerFactory(managerFactory)', 'FunctionName': 'setManagerFactory', 'ArgsCount': 1, 'MethodBody': 'public ResourceChangeHandler setManagerFactory(final WroManagerFactory wroManagerFactory) {\n    this.managerFactory = wroManagerFactory;\n    return this;\n  }', 'FileName': '/wro4j/wro4j/wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/support/ResourceChangeHandler.java'}]"
6621cd88cda9bd4817b11007,Unidata/thredds,"public static RegExpAndDurationTimeCoverageEnhancer
  getInstanceToMatchOnDatasetPath( String matchPattern,
                                   String substitutionPattern,
                                   String duration )
  {
    return new RegExpAndDurationTimeCoverageEnhancer(
            matchPattern, substitutionPattern,
            duration, MatchTarget.DATASET_PATH );
  }",Factory method that returns a RegExpAndDurationTimeCoverageEnhancer instance that will apply the match pattern to the dataset path .,legacy/src/main/java/thredds/cataloggen/datasetenhancer/RegExpAndDurationTimeCoverageEnhancer.java,[]
6621cd88cda9bd4817b11008,Unidata/thredds,"public DataIterator getDataIterator(ucar.unidata.geoloc.Station s, Date start, Date end) throws IOException {
    return new StationDateDataIterator(s, start, end);
  }",Get data for this Station within the specified date range .,legacy/src/main/java/ucar/nc2/dt/point/StationDatasetCollection.java,[]
6621cd88cda9bd4817b11009,oblac/jodd,"public List<File> findAll() {
		List<File> allFiles = new ArrayList<>();
		File file;
		while ((file = nextFile()) != null) {
			allFiles.add(file);
		}
		return allFiles;
	}",Finds all files and returns list of founded files .,jodd-core/src/main/java/jodd/io/findfile/FindFile.java,"[{'Syntax': 'nextFile()', 'FunctionName': 'nextFile', 'ArgsCount': 0, 'MethodBody': 'protected File nextFile() {\n\t\t\twhile (index < files.length) {\n\t\t\t\tfinal File file = files[index];\n\n\t\t\t\tif (file == null) {\n\t\t\t\t\tindex++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfiles[index] = null;\n\t\t\t\tindex++;\n\n\t\t\t\tif (file.isFile()) {\n\t\t\t\t\tif (!includeFiles) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!acceptFile(file)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn file;\n\t\t\t}\n\t\t\treturn null;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'allFiles.add(file)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cd88cda9bd4817b1100a,orientechnologies/orientdb,"private static boolean checkChangesFilledUpTo(final FileChanges changesContainer, final long pageIndex) {
    if (changesContainer == null) {
      return true;
    } else if (changesContainer.isNew || changesContainer.maxNewPageIndex > -2) {
      return pageIndex < changesContainer.maxNewPageIndex + 1;
    } else
      return !changesContainer.truncate;
  }",This check if a file was trimmed or trunked in the current atomic operation .,core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/paginated/atomicoperations/OAtomicOperation.java,[]
6621cd88cda9bd4817b1100b,ReactiveX/RxJava,"@CheckReturnValue
    @BackpressureSupport(BackpressureKind.FULL)
    @SchedulerSupport(SchedulerSupport.NONE)
    public final <U> Flowable<U> concatMapIterable(Function<? super T, ? extends Iterable<? extends U>> mapper) {
        return concatMapIterable(mapper, 2);
    }",Returns a Flowable that concatenate each item emitted by the source Publisher with the values in an Iterable corresponding to that item that is generated by a selector .,src/main/java/io/reactivex/Flowable.java,"[{'Syntax': 'concatMapIterable(mapper, 2)', 'FunctionName': 'concatMapIterable', 'ArgsCount': 2, 'MethodBody': '@CheckReturnValue\n    @NonNull\n    @BackpressureSupport(BackpressureKind.FULL)\n    @SchedulerSupport(SchedulerSupport.NONE)\n    public final <@NonNull U> Flowable<U> concatMapIterable(@NonNull Function<? super T, @NonNull ? extends Iterable<? extends U>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, ""mapper is null"");\n        ObjectHelper.verifyPositive(prefetch, ""prefetch"");\n        return RxJavaPlugins.onAssembly(new FlowableFlattenIterable<>(this, mapper, prefetch));\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/core/Flowable.java'}]"
6621cd88cda9bd4817b1100c,TooTallNate/Java-WebSocket,"private void sendHandshake() throws InvalidHandshakeException {
		String path;
		String part1 = uri.getRawPath();
		String part2 = uri.getRawQuery();
		if( part1 == null || part1.length() == 0 )
			path = ""/"";
		else
			path = part1;
		if( part2 != null )
			path += '?' + part2;
		int port = getPort();
		String host = uri.getHost() + ( 
			(port != WebSocketImpl.DEFAULT_PORT && port != WebSocketImpl.DEFAULT_WSS_PORT)
			? "":"" + port 
			: """" );

		HandshakeImpl1Client handshake = new HandshakeImpl1Client();
		handshake.setResourceDescriptor( path );
		handshake.put( ""Host"", host );
		if( headers != null ) {
			for( Map.Entry<String,String> kv : headers.entrySet() ) {
				handshake.put( kv.getKey(), kv.getValue() );
			}
		}
		engine.startHandshake( handshake );
	}",Create and send the handshake to the other endpoint,src/main/java/org/java_websocket/client/WebSocketClient.java,"[{'Syntax': 'getPort()', 'FunctionName': 'getPort', 'ArgsCount': 0, 'MethodBody': 'private int getPort() {\n    int port = uri.getPort();\n    String scheme = uri.getScheme();\n    if (""wss"".equals(scheme)) {\n      return port == -1 ? WebSocketImpl.DEFAULT_WSS_PORT : port;\n    } else if (""ws"".equals(scheme)) {\n      return port == -1 ? WebSocketImpl.DEFAULT_PORT : port;\n    } else {\n      throw new IllegalArgumentException(""unknown scheme: "" + scheme);\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/client/WebSocketClient.java'}, {'Syntax': 'handshake.setResourceDescriptor( path )', 'FunctionName': 'setResourceDescriptor', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void setResourceDescriptor(String resourceDescriptor) {\n    if (resourceDescriptor == null) {\n      throw new IllegalArgumentException(""http resource descriptor must not be null"");\n    }\n    this.resourceDescriptor = resourceDescriptor;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/handshake/HandshakeImpl1Client.java'}, {'Syntax': 'handshake.put( ""Host"", host )', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(String name, String value);', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/handshake/HandshakeBuilder.java'}, {'Syntax': 'handshake.put( kv.getKey(), kv.getValue() )', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(String name, String value);', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/handshake/HandshakeBuilder.java'}, {'Syntax': 'engine.startHandshake( handshake )', 'FunctionName': 'startHandshake', 'ArgsCount': 1, 'MethodBody': 'public void startHandshake(ClientHandshakeBuilder handshakedata)\n      throws InvalidHandshakeException {\n    // Store the Handshake Request we are about to send\n    this.handshakerequest = draft.postProcessHandshakeRequestAsClient(handshakedata);\n\n    resourceDescriptor = handshakedata.getResourceDescriptor();\n    assert (resourceDescriptor != null);\n\n    // Notify Listener\n    try {\n      wsl.onWebsocketHandshakeSentAsClient(this, this.handshakerequest);\n    } catch (InvalidDataException e) {\n      // Stop if the client code throws an exception\n      throw new InvalidHandshakeException(""Handshake data rejected by client."");\n    } catch (RuntimeException e) {\n      log.error(""Exception in startHandshake"", e);\n      wsl.onWebsocketError(this, e);\n      throw new InvalidHandshakeException(""rejected because of "" + e);\n    }\n\n    // Send\n    write(draft.createHandshake(this.handshakerequest));\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}]"
6621cd88cda9bd4817b1100d,orientechnologies/orientdb,"public OQueryAbstract setFetchPlan(final String fetchPlan) {
    OFetchHelper.checkFetchPlanValid(fetchPlan);
    if (fetchPlan != null && fetchPlan.length() == 0)
      this.fetchPlan = null;
    else
      this.fetchPlan = fetchPlan;
    return this;
  }",Sets the fetch plan to use .,core/src/main/java/com/orientechnologies/orient/core/query/OQueryAbstract.java,"[{'Syntax': 'OFetchHelper.checkFetchPlanValid(fetchPlan)', 'FunctionName': 'checkFetchPlanValid', 'ArgsCount': 1, 'MethodBody': 'public static void checkFetchPlanValid(final String iFetchPlan) {\n\n    if (iFetchPlan != null && !iFetchPlan.isEmpty()) {\n      // CHECK IF THERE IS SOME FETCH-DEPTH\n      final List<String> planParts = OStringSerializerHelper.split(iFetchPlan, \' \');\n      if (!planParts.isEmpty()) {\n        for (String planPart : planParts) {\n          final List<String> parts = OStringSerializerHelper.split(planPart, \':\');\n          if (parts.size() != 2) {\n            throw new IllegalArgumentException(""Fetch plan \'"" + iFetchPlan + ""\' is invalid"");\n          }\n        }\n      } else {\n        throw new IllegalArgumentException(""Fetch plan \'"" + iFetchPlan + ""\' is invalid"");\n      }\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/fetch/OFetchHelper.java'}, {'Syntax': 'fetchPlan.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public long length() throws SQLException {\n    return this.length;\n  }', 'FileName': '/orientechnologies/orientdb/jdbc/src/main/java/com/orientechnologies/orient/jdbc/OrientBlob.java'}]"
6621cd88cda9bd4817b1100e,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:48:12+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setCity(LocationStructure.City value) {
        this.city = value;
    }",Sets the value of the city property .,ImmobiliareIT/src/main/jaxb/org/openestate/io/immobiliare_it/xml/LocationStructure.java,[]
6621cd88cda9bd4817b1100f,Unidata/thredds,"@Override
  public void addAll(Iterable<Attribute> atts) {
    for (Attribute att : atts) addAttribute(att);
  }",Add all ; replace old if has same name,cdm/src/main/java/ucar/nc2/AttributeContainerHelper.java,[]
6621cd88cda9bd4817b11010,eclipse/packagedrone,"private InputStream getResourceAsStream(String uri) 
        throws JasperException
    {
        try {
            // see if file exists on the filesystem first
            String real = ctxt.getRealPath(uri);
            if (real == null) {
                return ctxt.getResourceAsStream(uri);
            } else {
                return new FileInputStream(real);
            }
        }
        catch (FileNotFoundException ex) {
            // if file not found on filesystem, get the resource through
            // the context
            return ctxt.getResourceAsStream(uri);
        }
       
    }",the following is a workaround until these problems are resolved .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagLibraryInfoImpl.java,"[{'Syntax': 'ctxt.getRealPath(uri)', 'FunctionName': 'getRealPath', 'ArgsCount': 1, 'MethodBody': 'public String getRealPath(String path) {\n        if (context != null) {\n            return context.getRealPath(path);\n        }\n        return path;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'ctxt.getResourceAsStream(uri)', 'FunctionName': 'getResourceAsStream', 'ArgsCount': 1, 'MethodBody': 'public java.io.InputStream getResourceAsStream(String res)\n           throws JasperException {\n        return context.getResourceAsStream(canonicalURI(res));\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'ctxt.getResourceAsStream(uri)', 'FunctionName': 'getResourceAsStream', 'ArgsCount': 1, 'MethodBody': 'public java.io.InputStream getResourceAsStream(String res)\n           throws JasperException {\n        return context.getResourceAsStream(canonicalURI(res));\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}]"
6621cd89cda9bd4817b11011,Unidata/thredds,"static public String replace(String s, char out, String in) {
    if (s.indexOf(out) < 0) {
      return s;
    }

    // gotta do it
    StringBuilder sb = new StringBuilder(s);
    replace(sb, out, in);
    return sb.toString();
  }",Replace any char out in s with in .,cdm/src/main/java/ucar/unidata/util/StringUtil2.java,[]
6621cd89cda9bd4817b11012,oaqa/baseqa,"public String getDepLabel() {
    if (Token_Type.featOkTst && ((Token_Type)jcasType).casFeat_depLabel == null)
      jcasType.jcas.throwFeatMissing(""depLabel"", ""edu.cmu.lti.oaqa.type.nlp.Token"");
    return jcasType.ll_cas.ll_getStringValue(addr, ((Token_Type)jcasType).casFeatCode_depLabel);}",getter for depLabel - gets The dependency label of the token with respect to its head .,src/main/java/edu/cmu/lti/oaqa/type/nlp/Token.java,[]
6621cd89cda9bd4817b11013,intellimate/IzouSDK,"public void registerEventID(String description, String key, String value) {
        BufferedWriter bufferedWriter;
        FileOutputStream out = null;
        try {
            out = new FileOutputStream(eventPropertiesPath, true);
            bufferedWriter = new BufferedWriter(new OutputStreamWriter(out));
            doWithLock(out.getChannel(), lock -> {
                unlockedReloadFile();
                if (getEventID(key) != null) {
                    return;
                }
                try {
                    bufferedWriter.write(""\n\n"" + key + ""_DESCRIPTION = "" + description + ""\n"" + key + "" = "" + value);
                    bufferedWriter.flush();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            });
        } catch (FileNotFoundException e) {
            error(""Unable find file"", e);
        } finally {
            try {
                if (out != null) {
                    out.close();
                }
            } catch (IOException e) {
                error(""Unable to close lock"", e);
            }
        }
    }",Registers or adds an event to the local_events . properties file,src/main/java/org/intellimate/izou/sdk/properties/EventPropertiesAssistant.java,"[{'Syntax': 'doWithLock(out.getChannel(), lock -> {\n                unlockedReloadFile();\n                if (getEventID(key) != null) {\n                    return;\n                }\n                try {\n                    bufferedWriter.write(""\\n\\n"" + key + ""_DESCRIPTION = "" + description + ""\\n"" + key + "" = "" + value);\n                    bufferedWriter.flush();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            })', 'FunctionName': 'doWithLock', 'ArgsCount': 2, 'MethodBody': 'private void doWithLock(FileChannel channel, Consumer<FileLock> consumer) {\n        FileLock lock = null;\n        try {\n            while (lock == null) {\n                try {\n                    lock = channel.tryLock();\n                } catch (OverlappingFileLockException e) {\n                    Thread.sleep(500);\n                }\n            }\n            consumer.accept(lock);\n        } catch (IOException | InterruptedException e) {\n            error(""Unable to write"", e);\n        } finally {\n            try {\n                if (lock != null) {\n                    lock.release();\n                }\n            } catch (IOException e) {\n                error(""Unable to close lock"", e);\n            }\n        }\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/properties/EventPropertiesAssistant.java'}, {'Syntax': 'unlockedReloadFile()', 'FunctionName': 'unlockedReloadFile', 'ArgsCount': 0, 'MethodBody': 'private void unlockedReloadFile() {\n        Properties tmpProperties = new Properties();\n        BufferedReader in = null;\n        try {\n            File eventFile = new File(eventPropertiesPath);\n            FileInputStream fileInputStream = new FileInputStream(eventFile);\n            in = new BufferedReader(new InputStreamReader(fileInputStream, ""UTF8""));\n            tmpProperties.load(in);\n            this.properties = tmpProperties;\n        } catch(IOException e) {\n            error(""Error while trying to load local_events.properties"", e);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                    error(""Unable to close input stream"", e);\n                }\n            }\n        }\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/properties/EventPropertiesAssistant.java'}, {'Syntax': 'getEventID(key)', 'FunctionName': 'getEventID', 'ArgsCount': 1, 'MethodBody': 'public String getEventID(String key) {\n        return (String) properties.get(key);\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/properties/EventPropertiesAssistant.java'}, {'Syntax': 'error(""Unable find file"", e)', 'FunctionName': 'error', 'ArgsCount': 2, 'MethodBody': 'void error(String msg, Throwable e);', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/util/ContextProvider.java'}, {'Syntax': 'error(""Unable to close lock"", e)', 'FunctionName': 'error', 'ArgsCount': 2, 'MethodBody': 'void error(String msg, Throwable e);', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/util/ContextProvider.java'}]"
6621cd89cda9bd4817b11014,oblac/jodd,"private void addConstantLongOrDouble(final int index, final int tag, final long value) {
    add(new Entry(index, tag, value, hash(tag, value)));
  }",Adds a new CONSTANT_Long_info or CONSTANT_Double_info to the constant pool of this symbol table .,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,"[{'Syntax': 'add(new Entry(index, tag, value, hash(tag, value)))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}, {'Syntax': 'hash(tag, value)', 'FunctionName': 'hash', 'ArgsCount': 2, 'MethodBody': 'public static int hash(final int seed, final int anInt) {\n\t\t\treturn (PRIME * seed) + anInt;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/jmh/java/jodd/util/HashCodeBenchmark.java'}]"
6621cd89cda9bd4817b11015,rupertlssmith/lojix,"public void initializeLookups(DecisionTree thisNode)
    {
        // Scan over all the decision trees children at this point inserting them into the lookup table depending
        // on the ordinal of the attribute value that matches them.
        for (Iterator<Tree<DecisionTreeElement>> i = thisNode.getChildIterator(); i.hasNext();)
        {
            DecisionTree nextChildTree = (DecisionTree) i.next();

            // Get the matching attribute value from the childs decision tree element.
            OrdinalAttribute matchingValue = nextChildTree.getElement().getAttributeValue();

            // Insert the matching sub-tree into the lookup table.
            decisions[matchingValue.ordinal()] = nextChildTree;
        }
    }",Initializes the lookup table for this decision node . The specified decision tree that corresponds to this node is used to extract all the possible outcomes for this decision and these are stored in a lookup table so that future decisions made with this tree will run faster .,lojix/learning/src/main/com/thesett/aima/learning/decisiontree/prototype/Decision.java,"[{'Syntax': 'thisNode.getChildIterator()', 'FunctionName': 'getChildIterator', 'ArgsCount': 0, 'MethodBody': 'Iterator<Tree<E>> getChildIterator();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/Tree.java'}, {'Syntax': 'i.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': 'public boolean hasNext()\n                {\n                    return (useDefaults ? ((i < ORDER.length) && (ORDER[i] > ENVIRONMENT_DEFAULTS_CUTOFF))\n                                        : (i < ORDER.length));\n                }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}, {'Syntax': 'i.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public Object next()\n                {\n                    // Check that there is a next element and return null if not.\n                    if (!hasNext())\n                    {\n                        return null;\n                    }\n\n                    // Get the next ordering count.\n                    int o = ORDER[i];\n\n                    // Do bit matching on the count to choose which elements to include in the key.\n                    String result =\n                        (((o & E) != 0) ? (environment + ""."") : """") + (((o & B) != 0) ? (base + ""."") : """") +\n                        (((o & M) != 0) ? (modifier + ""."") : """") + key;\n\n                    // Increment the iterator to get the next key on the next call.\n                    i++;\n\n                    return result;\n                }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}, {'Syntax': 'nextChildTree.getElement().getAttributeValue()', 'FunctionName': 'getAttributeValue', 'ArgsCount': 0, 'MethodBody': 'public OrdinalAttribute getAttributeValue()\n    {\n        return attributeValue;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/learning/src/main/com/thesett/aima/learning/decisiontree/prototype/DecisionTreeElement.java'}, {'Syntax': 'nextChildTree.getElement()', 'FunctionName': 'getElement', 'ArgsCount': 0, 'MethodBody': 'E getElement();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/Tree.java'}, {'Syntax': 'matchingValue.ordinal()', 'FunctionName': 'ordinal', 'ArgsCount': 0, 'MethodBody': 'public int ordinal() throws InfiniteValuesException\n    {\n        return value;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/power_model/src/main/com/thesett/aima/attribute/impl/IdAttribute.java'}]"
6621cd89cda9bd4817b11016,wro4j/wro4j,"public Object evaluate(final Reader reader, final String sourceName)
    throws IOException {
    notNull(reader);
    try {
      return evaluate(IOUtils.toString(reader), sourceName);
    } finally {
      reader.close();
    }
  }",Evaluates a script from a reader .,wro4j-extensions/src/main/java/ro/isdc/wro/extensions/script/RhinoScriptBuilder.java,"[{'Syntax': 'evaluate(IOUtils.toString(reader), sourceName)', 'FunctionName': 'evaluate', 'ArgsCount': 2, 'MethodBody': 'public Object evaluate(final Reader reader, final String sourceName) throws IOException {\r\n\t\tnotNull(reader);\r\n\t\ttry {\r\n\t\t\treturn evaluate(IOUtils.toString(reader), sourceName);\r\n\t\t} finally {\r\n\t\t\treader.close();\r\n\t\t}\r\n\t}', 'FileName': '/wro4j/wro4j/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/script/RhinoScriptBuilder.java'}, {'Syntax': 'reader.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n      public void close() {\n        // make reader uncloseable\n      }', 'FileName': '/wro4j/wro4j/wro4j-extensions/src/test/java/ro/isdc/wro/extensions/processor/TestPathPatternProcessorDecorator.java'}]"
6621cd89cda9bd4817b11017,eclipse/packagedrone,"protected static void write ( final StringWriter writer, final String fieldName, final String value )
    {
        writer.write ( fieldName + "": "" + value + ""\n"" );
    }",Write a field,bundles/org.eclipse.packagedrone.repo.adapter.deb/src/org/eclipse/packagedrone/repo/adapter/deb/aspect/internal/RepoBuilder.java,"[{'Syntax': 'writer.write ( fieldName + "": "" + value + ""\\n"" )', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'public void write ( final OutputStream stream ) throws IOException\n    {\n        if ( this.compressed )\n        {\n            final ZipOutputStream zos = new ZipOutputStream ( stream );\n            zos.putNextEntry ( new ZipEntry ( this.basename + "".xml"" ) );\n            writeAll ( zos );\n            zos.closeEntry ();\n            zos.finish ();\n        }\n        else\n        {\n            writeAll ( stream );\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.adapter.p2/src/org/eclipse/packagedrone/repo/adapter/p2/internal/aspect/AbstractWriter.java'}]"
6621cd89cda9bd4817b11018,lessthanoptimal/GeoRegression,"public static boolean contained( Box3D_I32 boxA , Box3D_I32 boxB ) {
		return( boxA.p0.x <= boxB.p0.x && boxA.p1.x >= boxB.p1.x &&
				boxA.p0.y <= boxB.p0.y && boxA.p1.y >= boxB.p1.y &&
				boxA.p0.z <= boxB.p0.z && boxA.p1.z >= boxB.p1.z );
	}",Returns true if boxB is contained inside of or is identical to boxA .,main/src/georegression/metric/Intersection3D_I32.java,[]
6621cd89cda9bd4817b11019,wildfly/wildfly,"private void migrateGenericTransport(ModelNode addOperation) {
        String factoryClass = addOperation.get(FACTORY_CLASS.getName()).asString();
        final String newFactoryClass;
        switch (factoryClass) {
            case HORNETQ_NETTY_ACCEPTOR_FACTORY:
                newFactoryClass = ARTEMIS_NETTY_ACCEPTOR_FACTORY;
                break;
            case HORNETQ_NETTY_CONNECTOR_FACTORY:
                newFactoryClass = ARTEMIS_NETTY_CONNECTOR_FACTORY;
                break;
            default:
                newFactoryClass = factoryClass;
        }
        addOperation.get(FACTORY_CLASS.getName()).set(newFactoryClass);
    }",For generic acceptor and connectors migrate their factory - class attribute if they are using the default Netty ones .,legacy/messaging/src/main/java/org/jboss/as/messaging/MigrateOperation.java,"[{'Syntax': 'addOperation.get(FACTORY_CLASS.getName()).asString()', 'FunctionName': 'asString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String asString() {\n        StringBuilder sb = new StringBuilder(""match-rules=[{"");\n        if (authenticationConfiguration != null && !authenticationConfiguration.isEmpty()) {\n            sb.append(String.format(""authentication-configuration=\\""%s\\"", "", authenticationConfiguration));\n        }\n        if (matchAbstractType != null && !matchAbstractType.isEmpty()) {\n            sb.append(String.format(""match-abstract-type=\\""%s\\"", "", matchAbstractType));\n        }\n        if (matchAbstractTypeAuthority != null && !matchAbstractTypeAuthority.isEmpty()) {\n            sb.append(String.format(""match-abstract-type-authority=\\""%s\\"", "", matchAbstractTypeAuthority));\n        }\n        if (matchHost != null && !matchHost.isEmpty()) {\n            sb.append(String.format(""match-host=\\""%s\\"", "", matchHost));\n        }\n        if (matchLocalSecurityDomain != null && !matchLocalSecurityDomain.isEmpty()) {\n            sb.append(String.format(""match-local-security-domain=\\""%s\\"", "", matchLocalSecurityDomain));\n        }\n        if (matchNoUser != null) {\n            sb.append(String.format(""match-no-user=\\""%s\\"", "", matchNoUser.toString()));\n        }\n        if (matchPath != null && !matchPath.isEmpty()) {\n            sb.append(String.format(""match-path=\\""%s\\"", "", matchPath));\n        }\n        if (matchPort != null && !matchPort.isEmpty()) {\n            sb.append(String.format(""match-port=\\""%s\\"", "", matchPort));\n        }\n        if (matchProtocol != null && !matchProtocol.isEmpty()) {\n            sb.append(String.format(""match-protocol=\\""%s\\"", "", matchProtocol));\n        }\n        if (matchPurpose != null && !matchPurpose.isEmpty()) {\n            sb.append(String.format(""match-purpose=\\""%s\\"", "", matchPurpose));\n        }\n        if (matchUrn != null && !matchUrn.isEmpty()) {\n            sb.append(String.format(""match-urn=\\""%s\\"", "", matchUrn));\n        }\n        if (matchUser != null && !matchUser.isEmpty()) {\n            sb.append(String.format(""match-user=\\""%s\\"", "", matchUser));\n        }\n        if (sslContext != null && !sslContext.isEmpty()) {\n            sb.append(String.format(""ssl-context=\\""%s\\"", "", sslContext));\n        }\n        sb.append(""}], "");\n        return sb.toString();\n    }', 'FileName': '/wildfly/wildfly/testsuite/shared/src/main/java/org/wildfly/test/security/common/elytron/MatchRules.java'}, {'Syntax': 'addOperation.get(FACTORY_CLASS.getName())', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Booking get(String bookingId) throws NotFoundException {\n        if (!bookings.containsKey(bookingId))\n            throw new NotFoundException(Response.status(404).entity(""Invalid bookingId id: "" + bookingId).build());\n\n        return bookings.get(bookingId);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/lra/participant/smoke/hotel/HotelService.java'}, {'Syntax': 'FACTORY_CLASS.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'addOperation.get(FACTORY_CLASS.getName()).set(newFactoryClass)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'public void set(final Supplier<T> delegate) {\n        this.delegate = delegate;\n    }', 'FileName': '/wildfly/wildfly/ee/src/main/java/org/jboss/as/ee/concurrent/service/DelegatingSupplier.java'}, {'Syntax': 'addOperation.get(FACTORY_CLASS.getName())', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Booking get(String bookingId) throws NotFoundException {\n        if (!bookings.containsKey(bookingId))\n            throw new NotFoundException(Response.status(404).entity(""Invalid bookingId id: "" + bookingId).build());\n\n        return bookings.get(bookingId);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/lra/participant/smoke/hotel/HotelService.java'}, {'Syntax': 'FACTORY_CLASS.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}]"
6621cd89cda9bd4817b1101a,Unidata/thredds,"private void analyze(FeatureType wantFeatureType) throws IOException {
    // for netcdf-3 files, convert record dimension to structure
    // LOOK may be problems when served via opendap
    boolean structAdded = (Boolean) ds.sendIospMessage(NetcdfFile.IOSP_MESSAGE_ADD_RECORD_STRUCTURE);

    if (tc == null) {
      makeTablesDefault(structAdded);
      makeNestedTables();

    } else {
      configResult = tc.getConfig(wantFeatureType, ds, errlog);
      if (configResult != null)
        addTableRecurse( configResult); // kinda stupid
      else { // use default
        makeTablesDefault(structAdded);
        makeNestedTables();
      }
    }

    // find the leaves
    for (TableConfig config : tableSet) {
      if (config.children == null) { // its a leaf
        NestedTable flatTable = new NestedTable(ds, config, errlog);
        leaves.add(flatTable);
      }
    }

    if (PointDatasetStandardFactory.showTables)
      getDetailInfo( new Formatter( System.out));
  }",Make a NestedTable object for the dataset .,cdm/src/main/java/ucar/nc2/ft/point/standard/TableAnalyzer.java,[]
6621cd89cda9bd4817b1101b,Koekiebox-PTY-LTD/Fluid,"private ResponseHandler<String> getJsonResponseHandler(final String urlCalledParam) {
		// Create a custom response handler
		ResponseHandler<String> responseHandler = new ResponseHandler<String>() {

			/**
			 * Process the {@code responseParam} and return text if valid.
			 *
			 * @param responseParam The HTTP response from the server.
			 * @return Text response.
			 * @throws IOException If there are any communication or I/O problems.
			 */
			public String handleResponse(final HttpResponse responseParam) throws IOException {

				int status = responseParam.getStatusLine().getStatusCode();
				if (status == 404) {
					throw new FluidClientException(
							""Endpoint for Service not found. URL [""+
									urlCalledParam+""]."",
							FluidClientException.ErrorCode.CONNECT_ERROR);
				} else if (status >= 200 && status < 300) {
					HttpEntity entity = responseParam.getEntity();

					String responseJsonString = (entity == null) ? null:
							EntityUtils.toString(entity);

					return responseJsonString;
				} else if (status == 400) {
					//Bad Request... Server Side Error meant for client...
					HttpEntity entity = responseParam.getEntity();

					String responseJsonString = (entity == null) ? null :
							EntityUtils.toString(entity);

					return responseJsonString;
				} else {
					HttpEntity entity = responseParam.getEntity();

					String responseString = (entity != null) ?
							EntityUtils.toString(entity) : null;

					throw new FluidClientException(
							""Unexpected response status: "" + status+"". ""
							+responseParam.getStatusLine().getReasonPhrase()+"". \nResponse Text [""+
									responseString+""]"",
							FluidClientException.ErrorCode.IO_ERROR);
				}
			}
		};

		return responseHandler;
	}",Get a text based response handler used mainly for JSON .,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/ABaseClientWS.java,[]
6621cd89cda9bd4817b1101c,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public GaragenKategorieTyp getObjektKategorie2() {
        if (objektKategorie2 == null) {
            return GaragenKategorieTyp.KEINE_ANGABE;
        } else {
            return objektKategorie2;
        }
    }",Gets the value of the objektKategorie2 property .,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/GarageTyp.java,[]
6621cd89cda9bd4817b1101d,PistoiaHELM/HELMNotationParser,"public boolean checkGroupId(String d) {
	  Pattern p = Pattern.compile(""G[1-9][0-9]*"", Pattern.CASE_INSENSITIVE);
	  Matcher m = p.matcher(d);
    LOG.debug(""Validation of groupID:"");
    if (m.matches()) {
      LOG.debug(""GroupID is valid:"");
      return true;
    }
    LOG.debug(""GroupID is not valid:"");
    return false;
  }",method to validate the group id,src/main/java/org/helm/notation2/parser/StateMachineParser.java,[]
6621cd89cda9bd4817b1101e,ReactiveX/RxJava,"@SuppressWarnings(""unchecked"")
    public static <T, R> boolean tryScalarXMapSubscribe(ObservableSource<T> source,
            Observer<? super R> observer,
            Function<? super T, ? extends ObservableSource<? extends R>> mapper) {
        if (source instanceof Callable) {
            T t;

            try {
                t = ((Callable<T>)source).call();
            } catch (Throwable ex) {
                Exceptions.throwIfFatal(ex);
                EmptyDisposable.error(ex, observer);
                return true;
            }

            if (t == null) {
                EmptyDisposable.complete(observer);
                return true;
            }

            ObservableSource<? extends R> r;

            try {
                r = ObjectHelper.requireNonNull(mapper.apply(t), ""The mapper returned a null ObservableSource"");
            } catch (Throwable ex) {
                Exceptions.throwIfFatal(ex);
                EmptyDisposable.error(ex, observer);
                return true;
            }

            if (r instanceof Callable) {
                R u;

                try {
                    u = ((Callable<R>)r).call();
                } catch (Throwable ex) {
                    Exceptions.throwIfFatal(ex);
                    EmptyDisposable.error(ex, observer);
                    return true;
                }

                if (u == null) {
                    EmptyDisposable.complete(observer);
                    return true;
                }
                ScalarDisposable<R> sd = new ScalarDisposable<R>(observer, u);
                observer.onSubscribe(sd);
                sd.run();
            } else {
                r.subscribe(observer);
            }

            return true;
        }
        return false;
    }",Tries to subscribe to a possibly Callable source s mapped ObservableSource .,src/main/java/io/reactivex/internal/operators/observable/ObservableScalarXMap.java,"[{'Syntax': '((Callable<T>)source).call()', 'FunctionName': 'call', 'ArgsCount': 0, 'MethodBody': '@Override\n            public Long call() throws Exception {\n                return 1L;\n            }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/FromFutureTckTest.java'}, {'Syntax': 'Exceptions.throwIfFatal(ex)', 'FunctionName': 'throwIfFatal', 'ArgsCount': 1, 'MethodBody': 'public static void throwIfFatal(@NonNull Throwable t) {\n        // values here derived from https://github.com/ReactiveX/RxJava/issues/748#issuecomment-32471495\n        if (t instanceof VirtualMachineError) {\n            throw (VirtualMachineError) t;\n        } else if (t instanceof ThreadDeath) {\n            throw (ThreadDeath) t;\n        } else if (t instanceof LinkageError) {\n            throw (LinkageError) t;\n        }\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/exceptions/Exceptions.java'}, {'Syntax': 'EmptyDisposable.error(ex, observer)', 'FunctionName': 'error', 'ArgsCount': 2, 'MethodBody': 'void error(ZipSubscriber<T, R> inner, Throwable e) {\n            if (errors.tryAddThrowableOrReport(e)) {\n                inner.done = true;\n                drain();\n            }\n        }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableZip.java'}, {'Syntax': 'EmptyDisposable.complete(observer)', 'FunctionName': 'complete', 'ArgsCount': 1, 'MethodBody': 'protected final void complete(R n) {\n        long p = produced;\n        if (p != 0) {\n            BackpressureHelper.produced(this, p);\n        }\n\n        for (;;) {\n            long r = get();\n            if ((r & COMPLETE_MASK) != 0) {\n                onDrop(n);\n                return;\n            }\n            if ((r & REQUEST_MASK) != 0) {\n                lazySet(COMPLETE_MASK + 1);\n                downstream.onNext(n);\n                downstream.onComplete();\n                return;\n            }\n            value = n;\n            if (compareAndSet(0, COMPLETE_MASK)) {\n                return;\n            }\n            value = null;\n        }\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber.java'}, {'Syntax': 'mapper.apply(t)', 'FunctionName': 'apply', 'ArgsCount': 1, 'MethodBody': '@Override\n                    public Publisher<Integer> apply(Integer v) throws Exception {\n                        return Flowable.just(v);\n                    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/ConcatMapTckTest.java'}, {'Syntax': 'Exceptions.throwIfFatal(ex)', 'FunctionName': 'throwIfFatal', 'ArgsCount': 1, 'MethodBody': 'public static void throwIfFatal(@NonNull Throwable t) {\n        // values here derived from https://github.com/ReactiveX/RxJava/issues/748#issuecomment-32471495\n        if (t instanceof VirtualMachineError) {\n            throw (VirtualMachineError) t;\n        } else if (t instanceof ThreadDeath) {\n            throw (ThreadDeath) t;\n        } else if (t instanceof LinkageError) {\n            throw (LinkageError) t;\n        }\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/exceptions/Exceptions.java'}, {'Syntax': 'EmptyDisposable.error(ex, observer)', 'FunctionName': 'error', 'ArgsCount': 2, 'MethodBody': 'void error(ZipSubscriber<T, R> inner, Throwable e) {\n            if (errors.tryAddThrowableOrReport(e)) {\n                inner.done = true;\n                drain();\n            }\n        }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableZip.java'}, {'Syntax': '((Callable<R>)r).call()', 'FunctionName': 'call', 'ArgsCount': 0, 'MethodBody': '@Override\n            public Long call() throws Exception {\n                return 1L;\n            }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/FromFutureTckTest.java'}, {'Syntax': 'Exceptions.throwIfFatal(ex)', 'FunctionName': 'throwIfFatal', 'ArgsCount': 1, 'MethodBody': 'public static void throwIfFatal(@NonNull Throwable t) {\n        // values here derived from https://github.com/ReactiveX/RxJava/issues/748#issuecomment-32471495\n        if (t instanceof VirtualMachineError) {\n            throw (VirtualMachineError) t;\n        } else if (t instanceof ThreadDeath) {\n            throw (ThreadDeath) t;\n        } else if (t instanceof LinkageError) {\n            throw (LinkageError) t;\n        }\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/exceptions/Exceptions.java'}, {'Syntax': 'EmptyDisposable.error(ex, observer)', 'FunctionName': 'error', 'ArgsCount': 2, 'MethodBody': 'void error(ZipSubscriber<T, R> inner, Throwable e) {\n            if (errors.tryAddThrowableOrReport(e)) {\n                inner.done = true;\n                drain();\n            }\n        }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableZip.java'}, {'Syntax': 'EmptyDisposable.complete(observer)', 'FunctionName': 'complete', 'ArgsCount': 1, 'MethodBody': 'protected final void complete(R n) {\n        long p = produced;\n        if (p != 0) {\n            BackpressureHelper.produced(this, p);\n        }\n\n        for (;;) {\n            long r = get();\n            if ((r & COMPLETE_MASK) != 0) {\n                onDrop(n);\n                return;\n            }\n            if ((r & REQUEST_MASK) != 0) {\n                lazySet(COMPLETE_MASK + 1);\n                downstream.onNext(n);\n                downstream.onComplete();\n                return;\n            }\n            value = n;\n            if (compareAndSet(0, COMPLETE_MASK)) {\n                return;\n            }\n            value = null;\n        }\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/subscribers/SinglePostCompleteSubscriber.java'}, {'Syntax': 'observer.onSubscribe(sd)', 'FunctionName': 'onSubscribe', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void onSubscribe(Subscription s) {\n        if (SubscriptionHelper.setOnce(upstream, s)) {\n            actual.onSubscribe(this);\n        }\n    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/RefCountProcessor.java'}, {'Syntax': 'sd.run()', 'FunctionName': 'run', 'ArgsCount': 0, 'MethodBody': '@Override\n            public void run() {\n                long start = System.currentTimeMillis();\n                while (!pp.hasSubscribers()) {\n                    try {\n                        Thread.sleep(1);\n                    } catch (InterruptedException ex) {\n                        return;\n                    }\n\n                    if (System.currentTimeMillis() - start > 200) {\n                        return;\n                    }\n                }\n\n                for (int i = 0; i < elements; i++) {\n                    pp.onNext(i);\n                }\n                pp.onComplete();\n            }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/ReplayProcessorTimeBoundAsPublisherTckTest.java'}, {'Syntax': 'r.subscribe(observer)', 'FunctionName': 'subscribe', 'ArgsCount': 1, 'MethodBody': '@Override\n                public void subscribe(FlowableEmitter<Long> e) throws Exception {\n                    for (long i = 0; i < elements && !e.isCancelled(); i++) {\n                        e.onNext(i);\n                    }\n                    e.onComplete();\n                }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/CreateTckTest.java'}]"
6621cd89cda9bd4817b1101f,stanfy/enroscar,"private InputStream newBodyInputStream(final DiskLruCache.Snapshot snapshot) {
    return new FilterInputStream(snapshot.getInputStream(ENTRY_BODY)) {
      @Override public void close() throws IOException {
        snapshot.close();
        super.close();
      }
    };
  }",Returns an input stream that reads the body of a snapshot closing the snapshot when the stream is closed .,net/src/main/java/com/stanfy/enroscar/net/cache/BaseFileResponseCache.java,"[{'Syntax': 'snapshot.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n      public void close() throws IOException {\n        if (closed) {\n          throw new IOException(""already closed"");\n        }\n        super.close();\n        closed = true;\n      }', 'FileName': '/stanfy/enroscar/io/src/test/java/com/stanfy/enroscar/io/IoUtilsTest.java'}, {'Syntax': 'super.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n      public void close() throws IOException {\n        if (closed) {\n          throw new IOException(""already closed"");\n        }\n        super.close();\n        closed = true;\n      }', 'FileName': '/stanfy/enroscar/io/src/test/java/com/stanfy/enroscar/io/IoUtilsTest.java'}]"
6621cd89cda9bd4817b11020,wildfly/wildfly,"protected void retryTimeout(TimerImpl timer) throws Exception {
        boolean callTimeout = false;

        timer.lock();
        try {
            if (timer.isActive()) {
                EJB3_TIMER_LOGGER.retryingTimeout(timer);
                timer.setTimerState(TimerState.RETRY_TIMEOUT, Thread.currentThread());
                timerService.persistTimer(timer, false);
                callTimeout = true;
            } else {
                EJB3_TIMER_LOGGER.timerNotActive(timer);
            }
        } finally {
            timer.unlock();
        }
        if(callTimeout) {
            this.callTimeout(timer);
        }
    }",After a timeout failed the timer need to retried . The method must lock the timer for state check and update but not during callTimeout run .,ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerTask.java,"[{'Syntax': 'timer.lock()', 'FunctionName': 'lock', 'ArgsCount': 0, 'MethodBody': '@Override\n        public void lock() {\n            delegate.readLock().lock();\n            incReadLockCount();\n        }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/component/singleton/EJBReadWriteLock.java'}, {'Syntax': 'timer.isActive()', 'FunctionName': 'isActive', 'ArgsCount': 0, 'MethodBody': '@Override\n    public boolean isActive() {\n        return timerService.isStarted() && !isCanceled() && !isExpired() && (timerState == TimerState.CREATED || timerService.isScheduled(getId()));\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerImpl.java'}, {'Syntax': 'EJB3_TIMER_LOGGER.retryingTimeout(timer)', 'FunctionName': 'retryingTimeout', 'ArgsCount': 1, 'MethodBody': '@LogMessage(level = INFO)\n    @Message(id = 23, value = ""Retrying timeout for timer: %s"")\n    void retryingTimeout(Timer timer);', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/logging/EjbLogger.java'}, {'Syntax': 'timer.setTimerState(TimerState.RETRY_TIMEOUT, Thread.currentThread())', 'FunctionName': 'setTimerState', 'ArgsCount': 2, 'MethodBody': 'public void setTimerState(TimerState state, Thread thread) {\n        assert ((state == TimerState.IN_TIMEOUT || state == TimerState.RETRY_TIMEOUT) && thread != null) || thread == null : ""Invalid to set timer state "" + state + "" with executing Thread "" + thread;\n        this.timerState = state;\n        this.executingThread = thread;\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerImpl.java'}, {'Syntax': 'Thread.currentThread()', 'FunctionName': 'currentThread', 'ArgsCount': 0, 'MethodBody': 'private static String currentThread() {\n        return Thread.currentThread().getName();\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/transaction/TransactionUtil.java'}, {'Syntax': 'timerService.persistTimer(timer, false)', 'FunctionName': 'persistTimer', 'ArgsCount': 2, 'MethodBody': 'public void persistTimer(final TimerImpl timer, boolean newTimer) {\n        if (timer == null) {\n            return;\n        }\n        if (timer.persistent) {\n            try {\n                if (this.persistence == null) {\n                    EJB3_TIMER_LOGGER.timerPersistenceNotEnable();\n                    return;\n                }\n                final ContextTransactionManager transactionManager = ContextTransactionManager.getInstance();\n                Transaction clientTX = transactionManager.getTransaction();\n                if (newTimer || timer.isCanceled()) {\n                    if (clientTX == null) {\n                        transactionManager.begin();\n                    }\n                    try {\n                        if (newTimer) this.persistence.addTimer(timer);\n                        else this.persistence.persistTimer(timer);\n                        if (clientTX == null) transactionManager.commit();\n                    } catch (Exception e) {\n                        if (clientTX == null) {\n                            try {\n                                transactionManager.rollback();\n                            } catch (Exception ee) {\n                                EjbLogger.EJB3_TIMER_LOGGER.timerUpdateFailedAndRollbackNotPossible(ee);\n                            }\n                        }\n                        throw e;\n                    }\n                } else {\n                    new TaskPostPersist(timer).persistTimer();\n                }\n\n            } catch (Throwable t) {\n                this.setRollbackOnly();\n                throw new RuntimeException(t);\n            }\n        }\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerServiceImpl.java'}, {'Syntax': 'EJB3_TIMER_LOGGER.timerNotActive(timer)', 'FunctionName': 'timerNotActive', 'ArgsCount': 1, 'MethodBody': '@LogMessage(level = INFO)\n    @Message(id = 24, value = ""Timer is not active, skipping retry of timer: %s"")\n    void timerNotActive(Timer timer);', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/logging/EjbLogger.java'}, {'Syntax': 'timer.unlock()', 'FunctionName': 'unlock', 'ArgsCount': 0, 'MethodBody': 'void unlock();', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricRegistry.java'}, {'Syntax': 'this.callTimeout(timer)', 'FunctionName': 'callTimeout', 'ArgsCount': 1, 'MethodBody': '@Override\n    protected void callTimeout(TimerImpl timer) throws Exception {\n        // if we have any more schedules remaining, then schedule a new task\n        if (timer.getNextExpiration() != null && !timer.isInRetry()) {\n            timer.scheduleTimeout(false);\n        }\n        invokeBeanMethod(timer);\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/CalendarTimerTask.java'}]"
6621cd89cda9bd4817b11021,oblac/jodd,"private void setHeaders(final Email emailWithData, final MimeMessage msgToSet) throws MessagingException {
		final Map<String, String> headers = emailWithData.headers();
		if (headers != null) {
			for (final Map.Entry<String, String> entry : headers.entrySet()) {
				msgToSet.setHeader(entry.getKey(), entry.getValue());
			}
		}
	}",Sets headers in msgToSet with headers from emailWithData .,jodd-mail/src/main/java/jodd/mail/SendMailSession.java,"[{'Syntax': 'msgToSet.setHeader(entry.getKey(), entry.getValue())', 'FunctionName': 'setHeader', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void setHeader(final String name, final String value) {\n\t\tif (name.equalsIgnoreCase(CONTENT_TYPE)) {\n\t\t\tsetContentType(value);\n\t\t} else {\n\t\t\tsuper.setHeader(name, value);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/MadvocResponseWrapper.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public int getValue() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/LoopIterator.java'}]"
6621cd89cda9bd4817b11022,apache/parquet-mr,"public void writeDataPage(
      int valueCount, int uncompressedPageSize,
      BytesInput bytes,
      Statistics statistics,
      long rowCount,
      Encoding rlEncoding,
      Encoding dlEncoding,
      Encoding valuesEncoding) throws IOException {
    long beforeHeader = out.getPos();
    innerWriteDataPage(valueCount, uncompressedPageSize, bytes, statistics, rlEncoding, dlEncoding, valuesEncoding);

    offsetIndexBuilder.add((int) (out.getPos() - beforeHeader), rowCount);
  }",Writes a single page,parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java,"[{'Syntax': 'out.getPos()', 'FunctionName': 'getPos', 'ArgsCount': 0, 'MethodBody': 'public long getPos() throws IOException {\n      return delegate.getPos();\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/hadoop/DeprecatedInputFormatTest.java'}, {'Syntax': 'offsetIndexBuilder.add((int) (out.getPos() - beforeHeader), rowCount)', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': 'public void add(String field, int value) {\n    add(getType().getFieldIndex(field), value);\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/example/data/Group.java'}, {'Syntax': 'out.getPos()', 'FunctionName': 'getPos', 'ArgsCount': 0, 'MethodBody': 'public long getPos() throws IOException {\n      return delegate.getPos();\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/hadoop/DeprecatedInputFormatTest.java'}]"
6621cd89cda9bd4817b11023,ebourgeois/protobuf-serializer,"public static final String getPojoSetter(ProtobufAttribute protobufAttribute, Field field)
  {
    final String fieldName = field.getName();
    final String upperClassName = field.getDeclaringClass().getCanonicalName();
    // Look at the cache first
    Map<String, String> map = CLASS_TO_FIELD_SETTERS_MAP_CACHE.get(upperClassName);
    if (map != null)
    {
      if (!map.isEmpty() && map.containsKey(fieldName))
      {
        return map.get(fieldName);
      }
    }
    else
    {
      map = new ConcurrentHashMap<>();
    }

    final String upperCaseFirstFieldName = JStringUtils.upperCaseFirst(field.getName());
    String setter = ""set"" + upperCaseFirstFieldName;

    if (!protobufAttribute.pojoSetter().isEmpty())
    {
      return protobufAttribute.pojoSetter();
    }

    map.put(fieldName, setter);
    CLASS_TO_FIELD_SETTERS_MAP_CACHE.put(upperClassName, map);

    return setter;
  }",Retrieve the setter on the POJO class ; default is to is set plus upper case first character of the field name .,src/main/java/ca/jeb/protobuf/internal/ProtobufSerializerUtils.java,"[{'Syntax': 'field.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName()\n  {\n    return name;\n  }', 'FileName': '/ebourgeois/protobuf-serializer/src/test/java/ca/jeb/protobuf/datamodel/Person.java'}, {'Syntax': 'field.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName()\n  {\n    return name;\n  }', 'FileName': '/ebourgeois/protobuf-serializer/src/test/java/ca/jeb/protobuf/datamodel/Person.java'}]"
6621cd89cda9bd4817b11024,streamsets/datacollector,"private Record parseResponse(InputStream response) throws StageException {
    Record record = null;
    if (conf.httpMethod == HttpMethod.HEAD) {
      // Head will have no body so can't be parsed.   Return an empty record.
      record = getContext().createRecord("""");
      record.set(Field.create(new HashMap()));

    } else if (response != null) {
      try (DataParser parser = parserFactory.getParser("""", response, ""0"")) {
        // A response may only contain a single record, so we only parse it once.
        record = parser.parse();
        if (conf.dataFormat == DataFormat.TEXT) {
          // Output is placed in a field ""/text"" so we remove it here.
          record.set(record.get(""/text""));
        }
      } catch (IOException | DataParserException e) {
        errorRecordHandler.onError(Errors.HTTP_00, e.toString(), e);
      }
    }
    return record;
  }",Parses the HTTP response text from a request into SDC Records,basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/http/HttpProcessor.java,[]
6621cd89cda9bd4817b11025,subchen/jetbrick-all-1x,"public static InputStream getResourceAsStream(String name, ClassLoader classLoader) throws IOException {
        URL url = getResource(name, classLoader);
        if (url != null) {
            return url.openStream();
        }
        return null;
    }",Returns an input stream for reading the specified resource .,jetbrick-commons/src/main/java/jetbrick/beans/ClassLoaderUtils.java,"[{'Syntax': 'getResource(name, classLoader)', 'FunctionName': 'getResource', 'ArgsCount': 2, 'MethodBody': 'public static URL getResource(String name, ClassLoader classLoader) {\n        Validate.notNull(name, ""resourceName must be not null"");\n\n        if (name.startsWith(""/"")) {\n            name = name.substring(1);\n        }\n        if (classLoader != null) {\n            URL url = classLoader.getResource(name);\n            if (url != null) {\n                return url;\n            }\n        }\n        ClassLoader loader = Thread.currentThread().getContextClassLoader();\n        if (loader != null && loader != classLoader) {\n            URL url = loader.getResource(name);\n            if (url != null) {\n                return url;\n            }\n        }\n\n        return ClassLoader.getSystemResource(name);\n    }', 'FileName': '/subchen/jetbrick-all-1x/jetbrick-commons/src/main/java/jetbrick/beans/ClassLoaderUtils.java'}, {'Syntax': 'url.openStream()', 'FunctionName': 'openStream', 'ArgsCount': 0, 'MethodBody': 'public InputStream openStream() {\n        if (!available()) {\n            throw new IllegalStateException(MESSAGE_FILE_MOVED);\n        }\n        try {\n            return new FileInputStream(diskFile);\n        } catch (FileNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n    }', 'FileName': '/subchen/jetbrick-all-1x/jetbrick-webmvc/src/main/java/jetbrick/web/mvc/multipart/FilePart.java'}]"
6621cd89cda9bd4817b11026,intellimate/IzouSDK,"public HashMap<String, Object> export() {
        HashMap<String, Object> data = new HashMap<>();
        for (int i = 0; i < queue.size(); i++) {
            data.put(QUEUE_DESCRIPTOR+i, queue.get(i).export());
        }
        for (int i = 0; i < playbackModes.size(); i++) {
            data.put(PLAYBACK_MODE_DESCRIPTOR+i, playbackModes.get(i).name());
        }
        data.put(NAME_DESCRIPTOR, name);
        data.put(POSITION_DESCRIPTOR, position);
        data.put(DATA_DESCRIPTOR, this.data);
        return data;
    }",exports the Playlist to a HashMap,src/main/java/org/intellimate/izou/sdk/frameworks/music/player/Playlist.java,"[{'Syntax': 'queue.get(i).export()', 'FunctionName': 'export', 'ArgsCount': 0, 'MethodBody': 'public HashMap<String, Long> export() {\n        HashMap<String, Long> data = new HashMap<>();\n        data.put(lengthDescriptor, length);\n        data.put(knownPositionDescriptor, knownPosition);\n        data.put(knownMillisTimeStampDescriptor, knownMillisTimeStamp);\n        return data;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/Progress.java'}]"
6621cd89cda9bd4817b11027,oblac/jodd,"@Override
	protected void renderView(final ActionRequest actionRequest, final String target) throws Exception {
		HttpServletRequest request = actionRequest.getHttpServletRequest();
		HttpServletResponse response = actionRequest.getHttpServletResponse();

		RequestDispatcher dispatcher = request.getRequestDispatcher(target);
		if (dispatcher == null) {
			response.sendError(SC_NOT_FOUND, ""Result not found: "" + target);	// should never happened
			return;
		}

		// If we're included, then include the view, otherwise do forward.
		// This allow the page to, for example, set content type.

		if (DispatcherUtil.isPageIncluded(request, response)) {
			dispatcher.include(request, response);
		} else {
			dispatcher.forward(request, response);
		}
	}",Renders the view by dispatching to the target JSP .,jodd-madvoc/src/main/java/jodd/madvoc/result/ServletDispatcherActionResult.java,"[{'Syntax': 'actionRequest.getHttpServletRequest()', 'FunctionName': 'getHttpServletRequest', 'ArgsCount': 0, 'MethodBody': 'public HttpServletRequest getHttpServletRequest() {\n\t\treturn servletRequest;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'actionRequest.getHttpServletResponse()', 'FunctionName': 'getHttpServletResponse', 'ArgsCount': 0, 'MethodBody': 'public HttpServletResponse getHttpServletResponse() {\n\t\treturn servletResponse;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'response.sendError(SC_NOT_FOUND, ""Result not found: "" + target)', 'FunctionName': 'sendError', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void sendError(final int statusCode, final String reason) throws IOException {\n\t\tstopBufferingForStatusCode(statusCode);\n\t\tsuper.sendError(statusCode, reason);\n\t}', 'FileName': '/oblac/jodd/jodd-servlet/src/main/java/jodd/servlet/wrapper/BufferResponseWrapper.java'}, {'Syntax': 'DispatcherUtil.isPageIncluded(request, response)', 'FunctionName': 'isPageIncluded', 'ArgsCount': 2, 'MethodBody': 'public static boolean isPageIncluded(final HttpServletRequest request, final HttpServletResponse response) {\n\t\treturn (response.isCommitted() || (getIncludeServletPath(request) != null));\n\t}', 'FileName': '/oblac/jodd/jodd-servlet/src/main/java/jodd/servlet/DispatcherUtil.java'}]"
6621cd8acda9bd4817b11028,wildfly/wildfly,"private static PersistenceProviderAdaptor savePerDeploymentSharedPersistenceProviderAdaptor(DeploymentUnit deploymentUnit, String adaptorModule, PersistenceProviderAdaptor adaptor, PersistenceProvider provider) {
        if (deploymentUnit.getParent() != null) {
            deploymentUnit = deploymentUnit.getParent();
        }
        synchronized (deploymentUnit) {
            Map<String,PersistenceProviderAdaptor> map = deploymentUnit.getAttachment(providerAdaptorMapKey);
            String key;

            if (adaptorModule != null) {
                key = adaptorModule;  // handle legacy adapter module
            }
            else {
                key = provider.getClass().getName();
            }
            PersistenceProviderAdaptor current = map.get(key);

            // saved if not already set by another thread
            if (current == null) {
                map.put(key, adaptor);
                current = adaptor;
            }
            return current;
        }
    }",Will save the PersistenceProviderAdaptor at the top level application deployment unit level for sharing with other persistence units,jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java,"[{'Syntax': 'deploymentUnit.getParent()', 'FunctionName': 'getParent', 'ArgsCount': 0, 'MethodBody': 'SFSBInjectedXPCs getParent() {\n        return parent;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/container/SFSBInjectedXPCs.java'}, {'Syntax': 'deploymentUnit.getParent()', 'FunctionName': 'getParent', 'ArgsCount': 0, 'MethodBody': 'SFSBInjectedXPCs getParent() {\n        return parent;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/container/SFSBInjectedXPCs.java'}, {'Syntax': 'provider.getClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'map.get(key)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Booking get(String bookingId) throws NotFoundException {\n        if (!bookings.containsKey(bookingId))\n            throw new NotFoundException(Response.status(404).entity(""Invalid bookingId id: "" + bookingId).build());\n\n        return bookings.get(bookingId);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/lra/participant/smoke/hotel/HotelService.java'}, {'Syntax': 'map.put(key, adaptor)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n    public String put(String key, String value) {\n        Value old = this.get().put(new Key(key), new Value(value));\n        return (old != null) ? old.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/infinispan/bean/CacheBean.java'}]"
6621cd8acda9bd4817b11029,orientechnologies/orientdb,"@Override public <T> T removeProperty(final String key) {
    if (checkDeletedInTx())
      throw new IllegalStateException(""The vertex "" + getIdentity() + "" has been deleted"");

    final OrientBaseGraph graph = getGraph();

    if (graph != null)
      graph.autoStartTransaction();

    final Object oldValue = getRecord().removeField(key);
    if (graph != null)
      save();
    return (T) oldValue;
  }",Removes a Property .,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientElement.java,"[{'Syntax': 'checkDeletedInTx()', 'FunctionName': 'checkDeletedInTx', 'ArgsCount': 0, 'MethodBody': 'protected boolean checkDeletedInTx() {\n    OrientBaseGraph curGraph = getGraph();\n    if (curGraph == null) return false;\n\n    ORID id;\n    if (getRecord() != null) id = getRecord().getIdentity();\n    else return false;\n\n    final ORecordOperation oper = curGraph.getRawGraph().getTransaction().getRecordEntry(id);\n    if (oper == null) return id.isTemporary();\n    else return oper.type == ORecordOperation.DELETED;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientElement.java'}, {'Syntax': 'getIdentity()', 'FunctionName': 'getIdentity', 'ArgsCount': 0, 'MethodBody': 'public ORID getIdentity() {\n    return identity;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordRequest.java'}, {'Syntax': 'getGraph()', 'FunctionName': 'getGraph', 'ArgsCount': 0, 'MethodBody': 'protected OrientBaseGraph getGraph() {\n    OGlobalConfiguration.SQL_GRAPH_CONSISTENCY_MODE.setValue(""notx_sync_repair"");\n    return new OrientGraphNoTx(URL);\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/test/java/com/orientechnologies/orient/graph/blueprints/BlueprintsConcurrentGraphChangesNoTxTest.java'}, {'Syntax': 'graph.autoStartTransaction()', 'FunctionName': 'autoStartTransaction', 'ArgsCount': 0, 'MethodBody': 'protected void autoStartTransaction() {}', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'getRecord().removeField(key)', 'FunctionName': 'removeField', 'ArgsCount': 1, 'MethodBody': 'public Object removeField(String iFieldName);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/ORecordSchemaAware.java'}, {'Syntax': 'getRecord()', 'FunctionName': 'getRecord', 'ArgsCount': 0, 'MethodBody': 'public byte[] getRecord() {\n    return record;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordResponse.java'}, {'Syntax': 'save()', 'FunctionName': 'save', 'ArgsCount': 0, 'MethodBody': 'public ORecordAbstract save() {\n    return save(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/ORecordAbstract.java'}]"
6621cd8acda9bd4817b1102a,Unidata/thredds,"public static String getRequest(HttpServletRequest req) {
    String query = req.getQueryString();
    return getRequestBase(req) + (query == null ? """" : ""?"" + query);
  }",The entire request including query string,tds/src/main/java/thredds/servlet/ServletUtil.java,[]
6621cd8acda9bd4817b1102b,rupertlssmith/lojix,"public static MultiTypeData getMultiTypeData(char c)
    {
        // Convert the value to a String and return the set of types that that String can be converted to.
        MultiTypeData result = getMultiTypeData(Character.toString(c));
        result.nativeType = CHAR;

        return result;
    }",Converts a char into a multi type data object .,base/common/src/main/com/thesett/common/util/TypeConverter.java,"[{'Syntax': 'getMultiTypeData(Character.toString(c))', 'FunctionName': 'getMultiTypeData', 'ArgsCount': 1, 'MethodBody': 'public static MultiTypeData getMultiTypeData(boolean b)\n    {\n        // Convert the value to a String and return the set of types that that String can be converted to.\n        MultiTypeData result = getMultiTypeData(Boolean.toString(b));\n        result.nativeType = BOOLEAN;\n\n        return result;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/TypeConverter.java'}, {'Syntax': 'Character.toString(c)', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'public String toString(WAMInstruction instruction)\n            {\n                return toStringReg1Fn(pretty, instruction);\n            }', 'FileName': '/rupertlssmith/lojix/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/compiler/WAMInstruction.java'}]"
6621cd8acda9bd4817b1102c,apache/parquet-mr,"private static Object makeValue(String string, Schema schema) {
    if (string == null) {
      return null;
    }

    try {
      switch (schema.getType()) {
        case BOOLEAN:
          return Boolean.valueOf(string);
        case STRING:
          return string;
        case FLOAT:
          return Float.valueOf(string);
        case DOUBLE:
          return Double.valueOf(string);
        case INT:
          return Integer.valueOf(string);
        case LONG:
          return Long.valueOf(string);
        case ENUM:
          // TODO: translate to enum class
          if (schema.hasEnumSymbol(string)) {
            return string;
          } else {
            try {
              return schema.getEnumSymbols().get(Integer.parseInt(string));
            } catch (IndexOutOfBoundsException ex) {
              return null;
            }
          }
        case UNION:
          Object value = null;
          for (Schema possible : schema.getTypes()) {
            value = makeValue(string, possible);
            if (value != null) {
              return value;
            }
          }
          return null;
        case NULL:
          return null;
        default:
          // FIXED, BYTES, MAP, ARRAY, RECORD are not supported
          throw new RecordException(
              ""Unsupported field type:"" + schema.getType());
      }
    } catch (NumberFormatException e) {
      // empty string is considered null for numeric types
      if (string.isEmpty()) {
        return null;
      } else {
        throw e;
      }
    }
  }",Returns a the value as the first matching schema type or null .,parquet-cli/src/main/java/org/apache/parquet/cli/csv/RecordBuilder.java,"[{'Syntax': 'schema.getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': '@Deprecated\n  public PrimitiveTypeName getType() {\n    return type.getPrimitiveTypeName();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkProperties.java'}, {'Syntax': 'schema.getEnumSymbols().get(Integer.parseInt(string))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'makeValue(string, possible)', 'FunctionName': 'makeValue', 'ArgsCount': 2, 'MethodBody': 'private static Object makeValue(String string, Schema.Field field) {\n    try {\n      Object value = makeValue(string, field.schema());\n      if (value != null || Schemas.nullOk(field.schema())) {\n        return value;\n      } else {\n        // this will fail if there is no default value\n        return ReflectData.get().getDefaultValue(field);\n      }\n    } catch (RecordException e) {\n      // add the field name to the error message\n      throw new RecordException(String.format(""Cannot convert field %s"", field.name()), e);\n    } catch (NumberFormatException e) {\n      throw new RecordException(\n          String.format(""Field %s: value not a %s: \'%s\'"", field.name(), field.schema(), string), e);\n    } catch (AvroRuntimeException e) {\n      throw new RecordException(\n          String.format(""Field %s: cannot make %s value: \'%s\'"", field.name(), field.schema(), string), e);\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/csv/RecordBuilder.java'}, {'Syntax': 'schema.getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': '@Deprecated\n  public PrimitiveTypeName getType() {\n    return type.getPrimitiveTypeName();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkProperties.java'}, {'Syntax': 'string.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': 'public boolean isEmpty() {\n    return !hasNonNullValue && !isNumNullsSet();\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/statistics/Statistics.java'}]"
6621cd8acda9bd4817b1102d,rackerlabs/blueflood,"protected Set<Locator> getLocators(RollupExecutionContext executionContext,
                                       boolean isReroll,
                                       Granularity delayedMetricsRerollGranularity,
                                       Granularity delayedMetricsStorageGranularity) {
        Set<Locator> locators = new HashSet<Locator>();

        //if delayed metric tracking is enabled, if its re-roll, if slot granularity is no coarser than
        // DELAYED_METRICS_REROLL_GRANULARITY, get delayed locators
        if (RECORD_DELAYED_METRICS &&
                isReroll &&
                !getGranularity().isCoarser(delayedMetricsRerollGranularity)) {

            if (getGranularity().isCoarser(delayedMetricsStorageGranularity)) {

                // For example, if we are re-rolling a 60m slot, and we store delayed metrics at 20m, we need to
                // grab delayed metrics for 3 * 20m slots corresponding to the 60m slot.
                for (SlotKey slotKey: parentSlotKey.getChildrenKeys(delayedMetricsStorageGranularity)) {
                    locators.addAll(getDelayedLocators(executionContext, slotKey));
                }

            } else {
                locators = getDelayedLocators(executionContext,
                        parentSlotKey.extrapolate(delayedMetricsStorageGranularity));
            }

        } else {
            locators = getLocators(executionContext);
        }
        return locators;
    }",This methods gets locators to rollup a slot .,blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/LocatorFetchRunnable.java,"[{'Syntax': 'getGranularity().isCoarser(delayedMetricsRerollGranularity)', 'FunctionName': 'isCoarser', 'ArgsCount': 1, 'MethodBody': 'public boolean isCoarser(Granularity other) {\n        return indexOf(this) > indexOf(other);\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java'}, {'Syntax': 'getGranularity()', 'FunctionName': 'getGranularity', 'ArgsCount': 0, 'MethodBody': 'public Granularity getGranularity() {\n        return granularity;\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/SlotKey.java'}, {'Syntax': 'getGranularity().isCoarser(delayedMetricsStorageGranularity)', 'FunctionName': 'isCoarser', 'ArgsCount': 1, 'MethodBody': 'public boolean isCoarser(Granularity other) {\n        return indexOf(this) > indexOf(other);\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java'}, {'Syntax': 'getGranularity()', 'FunctionName': 'getGranularity', 'ArgsCount': 0, 'MethodBody': 'public Granularity getGranularity() {\n        return granularity;\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/SlotKey.java'}, {'Syntax': 'parentSlotKey.getChildrenKeys(delayedMetricsStorageGranularity)', 'FunctionName': 'getChildrenKeys', 'ArgsCount': 1, 'MethodBody': 'public Collection<SlotKey> getChildrenKeys(Granularity destGranularity) {\n\n        if (!getGranularity().isCoarser(destGranularity)) {\n            throw new IllegalArgumentException(String.format(""Current granularity [%s] must be coarser than the destination granularity [%s]"", getGranularity(), destGranularity));\n        }\n\n        List<SlotKey> result = new ArrayList<SlotKey>();\n        for(SlotKey slotKey: this.getChildrenKeys()) {\n            if (slotKey.getGranularity().equals(destGranularity)) {\n                result.add(slotKey);\n            }\n        }\n\n        return Collections.unmodifiableList(result);\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/SlotKey.java'}, {'Syntax': 'getDelayedLocators(executionContext, slotKey)', 'FunctionName': 'getDelayedLocators', 'ArgsCount': 2, 'MethodBody': 'public Set<Locator> getDelayedLocators(RollupExecutionContext executionContext, SlotKey slotkey) {\n        Set<Locator> locators = new HashSet<Locator>();\n\n        try {\n            // get a list of all delayed locators to rollup for a slot key.\n            locators.addAll(IOContainer.fromConfig().getDelayedLocatorIO().getLocators(slotkey));\n            locatorsPerShardForReroll.update(locators.size());\n        } catch (Throwable e) {\n            log.error(""Failed reading delayed locators for slot: "" + getParentSlot(), e);\n            executionContext.markUnsuccessful(e);\n        }\n\n        return locators;\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/LocatorFetchRunnable.java'}, {'Syntax': 'getDelayedLocators(executionContext,\n                        parentSlotKey.extrapolate(delayedMetricsStorageGranularity))', 'FunctionName': 'getDelayedLocators', 'ArgsCount': 2, 'MethodBody': 'public Set<Locator> getDelayedLocators(RollupExecutionContext executionContext, SlotKey slotkey) {\n        Set<Locator> locators = new HashSet<Locator>();\n\n        try {\n            // get a list of all delayed locators to rollup for a slot key.\n            locators.addAll(IOContainer.fromConfig().getDelayedLocatorIO().getLocators(slotkey));\n            locatorsPerShardForReroll.update(locators.size());\n        } catch (Throwable e) {\n            log.error(""Failed reading delayed locators for slot: "" + getParentSlot(), e);\n            executionContext.markUnsuccessful(e);\n        }\n\n        return locators;\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/LocatorFetchRunnable.java'}, {'Syntax': 'parentSlotKey.extrapolate(delayedMetricsStorageGranularity)', 'FunctionName': 'extrapolate', 'ArgsCount': 1, 'MethodBody': 'public SlotKey extrapolate(Granularity destGranularity) {\n\n        if (destGranularity.equals(this.getGranularity())) {\n            return this;\n        }\n        if (!destGranularity.isCoarser(getGranularity())) {\n            throw new IllegalArgumentException(""Destination granularity must be coarser than the current granularity"");\n        }\n\n        int factor = getGranularity().numSlots() / destGranularity.numSlots();\n        int parentSlot = getSlot() / factor;\n\n        return SlotKey.of(destGranularity, parentSlot, getShard());\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/SlotKey.java'}, {'Syntax': 'getLocators(executionContext)', 'FunctionName': 'getLocators', 'ArgsCount': 1, 'MethodBody': 'public Collection<Locator> getLocators(long shard) throws IOException;', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/io/LocatorIO.java'}]"
6621cd8acda9bd4817b1102e,workplacesystems/utilsj,"@Override
    public void putAll(Map<? extends K, ? extends V> m)
    {
        int numKeysToBeAdded = m.size();
        if (numKeysToBeAdded == 0)
            return;
        
        /*
         * Expand the map if the map if the number of mappings to be added
         * is greater than or equal to threshold.  This is conservative; the
         * obvious condition is (m.size() + size) >= threshold, but this
         * condition could result in a map with twice the appropriate capacity,
         * if the keys to be added overlap with the keys already in this map.
         * By using the conservative calculation, we subject ourself
         * to at most one extra resize.
         */
        if (numKeysToBeAdded > threshold)
        {
            int targetCapacity = (int)(numKeysToBeAdded / loadFactor + 1);
            if (targetCapacity > MAXIMUM_CAPACITY)
                targetCapacity = MAXIMUM_CAPACITY;
            int newCapacity = table.length;
            while (newCapacity < targetCapacity)
                newCapacity <<= 1;
            if (newCapacity > table.length)
                resize(newCapacity);
        }
        
        for (Iterator<? extends Map.Entry<? extends K, ? extends V>> i = m.entrySet().iterator(); i.hasNext(); )
        {
            Map.Entry<? extends K, ? extends V> e = i.next();
            put(e.getKey(), e.getValue());
        }
    }",Copies all of the mappings from the specified map to this map These mappings will replace any mappings that this map had for any of the keys currently in the specified map .,src/main/java/com/workplacesystems/utilsj/collections/TransactionalHashMap.java,"[{'Syntax': 'm.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\r\n            public int size() {\r\n                int size = 0;\r\n                for (Iterator<E> i = iterator(); i.hasNext(); )\r\n                {\r\n                    i.next();\r\n                    size++;\r\n                }\r\n                return size;\r\n            }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/FilterableArrayList.java'}, {'Syntax': 'resize(newCapacity)', 'FunctionName': 'resize', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings(""unchecked"")\r\n    void resize(int newCapacity)\r\n    {\r\n        Entry<K,V>[] oldTable = table;\r\n        int oldCapacity = oldTable.length;\r\n        if (oldCapacity == MAXIMUM_CAPACITY)\r\n        {\r\n            threshold = Integer.MAX_VALUE;\r\n            return;\r\n        }\r\n        \r\n        Entry<K,V>[] newTable = new Entry[newCapacity];\r\n        transfer(newTable);\r\n        table = newTable;\r\n        threshold = (int)(newCapacity * loadFactor);\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalHashMap.java'}, {'Syntax': 'm.entrySet().iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\r\n            public Iterator<E> iterator() {\r\n\r\n                return new FilterableArrayIterator(filter);\r\n            }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/FilterableArrayList.java'}, {'Syntax': 'm.entrySet()', 'FunctionName': 'entrySet', 'ArgsCount': 0, 'MethodBody': '@Override\r\n    public Set<Entry<K,V>> entrySet() {\r\n\r\n        if (setOfEntriesByKey == null) {\r\n            setOfEntriesByKey = new AbstractFilterableSet<Entry<K,V>>() {\r\n\r\n                @Override\r\n                public Iterator<Entry<K,V>> iterator() {\r\n\r\n                    return new TransactionalBidiTreeMapIterator<Entry<K,V>>(KEY) {\r\n\r\n                        @Override\r\n                        protected Entry<K,V> doGetNext() {\r\n                            return lastReturnedNode;\r\n                        }\r\n                    };\r\n                }\r\n\r\n                @Override\r\n                public boolean contains(Object o) {\r\n\r\n                    if (!(o instanceof Map.Entry)) {\r\n                        return false;\r\n                    }\r\n\r\n                    Map.Entry<K,V> entry = (Map.Entry<K,V>) o;\r\n                    V              value = entry.getValue();\r\n                    Node<K,V>      node  = lookupValid(entry.getKey(), KEY, getCurrentThreadId());\r\n\r\n                    return (node!=null)\r\n                           && node.getData(VALUE).equals(value);\r\n                }\r\n\r\n                @Override\r\n                public boolean remove(Object o) {\r\n\r\n                    if (!(o instanceof Map.Entry)) {\r\n                        return false;\r\n                    }\r\n\r\n                    String thread_id = getCurrentThreadId();\r\n\r\n                    Map.Entry<K,V> entry = (Map.Entry<K,V>) o;\r\n                    V              value = entry.getValue();\r\n                    Node<K,V>      node  = lookupValid(entry.getKey(), KEY, thread_id);\r\n\r\n                    if ((node!=null) && node.getData(VALUE).equals(value)) {\r\n                        if (auto_commit || node.is(Node.ADDED, thread_id))\r\n                            doRedBlackDelete(node);\r\n                        else\r\n                            node.setStatus(Node.DELETED, thread_id);\r\n\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                @Override\r\n                public int size() {\r\n                    return TransactionalBidiTreeMap.this.size();\r\n                }\r\n\r\n                @Override\r\n                public void clear() {\r\n                    TransactionalBidiTreeMap.this.clear();\r\n                }\r\n            };\r\n        }\r\n\r\n        return setOfEntriesByKey;\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}, {'Syntax': 'i.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': 'public boolean hasNext() {\r\n                    return nextObject != null;\r\n                }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/FilterableArrayList.java'}, {'Syntax': 'i.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public E next()\r\n                        throws NoSuchElementException {\r\n\r\n                    if (nextObject == null) {\r\n                        throw new NoSuchElementException();\r\n                    }\r\n\r\n                    lastReturnedObject = nextObject;\r\n                    nextObject = getNextValidObject();\r\n                    return lastReturnedObject;\r\n                }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/FilterableArrayList.java'}, {'Syntax': 'put(e.getKey(), e.getValue())', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public MapBuilder<K,V> put(K key, V value)\r\n    {\r\n        map.put(key, value);\r\n        return this;\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/MapBuilder.java'}, {'Syntax': 'e.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': 'public String getKey() { return key; }', 'FileName': '/workplacesystems/utilsj/src/test/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMapTest.java'}, {'Syntax': 'e.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'Comparable getValue() {\n        return value;\n    }', 'FileName': '/workplacesystems/utilsj/src/test/java/com/workplacesystems/utilsj/collections/LocalTestNode.java'}]"
6621cd8acda9bd4817b1102f,oblac/jodd,"private void addConstantDynamicOrInvokeDynamicReference(
      final int tag,
      final int index,
      final String name,
      final String descriptor,
      final int bootstrapMethodIndex) {
    int hashCode = hash(tag, name, descriptor, bootstrapMethodIndex);
    add(new Entry(index, tag, null, name, descriptor, bootstrapMethodIndex, hashCode));
  }",Adds a new CONSTANT_Dynamic_info or CONSTANT_InvokeDynamic_info to the constant pool of this symbol table .,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,"[{'Syntax': 'add(new Entry(index, tag, null, name, descriptor, bootstrapMethodIndex, hashCode))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cd8acda9bd4817b11030,wildfly/wildfly,"public static void addCacheDependencies(Classification cacheType, Properties properties) {
        for(EventListener eventListener: eventListeners) {
            eventListener.addCacheDependencies(cacheType, properties);
        }
    }",add cache dependencies,jpa/spi/src/main/java/org/jipijapa/event/impl/internal/Notification.java,"[{'Syntax': 'eventListener.addCacheDependencies(cacheType, properties)', 'FunctionName': 'addCacheDependencies', 'ArgsCount': 2, 'MethodBody': '@Override\n    public void addCacheDependencies(Classification classification, Properties properties) {\n        if(ROOT_LOGGER.isTraceEnabled()) {\n            ROOT_LOGGER.tracef(""add second level cache dependencies with properties \'%s\'"", properties.toString());\n        }\n        delegates.get(classification.getLocalName()).addCacheDependencies(classification, properties);\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/secondlevelcache/CacheDeploymentListener.java'}]"
6621cd8acda9bd4817b11031,lightcouch/LightCouch,"public List<Response> bulk(List<?> objects, boolean newEdits) {
		assertNotEmpty(objects, ""objects"");
		HttpResponse response = null;
		try { 
			final String newEditsVal = newEdits ? ""\""new_edits\"": true, "" : ""\""new_edits\"": false, "";
			final String json = String.format(""{%s%s%s}"", newEditsVal, ""\""docs\"": "", getGson().toJson(objects));
			final URI uri = buildUri(getDBUri()).path(""_bulk_docs"").build();
			response = post(uri, json);
			return getResponseList(response);
		} finally {
			close(response);
		}
	}",Performs bulk documents create and update request .,src/main/java/org/lightcouch/CouchDbClientBase.java,"[{'Syntax': 'assertNotEmpty(objects, ""objects"")', 'FunctionName': 'assertNotEmpty', 'ArgsCount': 2, 'MethodBody': 'public static void assertNotEmpty(Object object, String prefix) throws IllegalArgumentException {\n\t\tif(object == null) {\n\t\t\tthrow new IllegalArgumentException(format(""%s may not be null."", prefix));\n\t\t} else if(object instanceof String && ((String)object).length() == 0) {\n\t\t\tthrow new IllegalArgumentException(format(""%s may not be empty."", prefix));\n\t\t} \n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbUtil.java'}, {'Syntax': 'getGson()', 'FunctionName': 'getGson', 'ArgsCount': 0, 'MethodBody': 'public Gson getGson() {\n\t\treturn gson;\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'buildUri(getDBUri()).path(""_bulk_docs"").build()', 'FunctionName': 'build', 'ArgsCount': 0, 'MethodBody': 'public URI build() {\n\t\tfinal StringBuilder query = new StringBuilder();\n\t\t\n\t\tfor (int i = 0; i < params.size(); i++) {\n\t\t\tString amp = (i != params.size() - 1) ? ""&"" : """";\n\t\t\tquery.append(params.get(i) + amp);\n\t\t}\n\t\t\n\t\tString q = (query.length() == 0) ? """" : ""?"" + query;\n\t\tString uri = String.format(""%s://%s:%s%s%s"", new Object[] { scheme, host, port, path, q });\n\t\t\n\t\ttry {\n\t\t\treturn new URI(uri);\n\t\t} catch (URISyntaxException e) {\n\t\t\tthrow new IllegalArgumentException(e);\n\t\t}\n\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/URIBuilder.java'}, {'Syntax': 'buildUri(getDBUri()).path(""_bulk_docs"")', 'FunctionName': 'path', 'ArgsCount': 1, 'MethodBody': 'public URIBuilder path(String path) {\n\t\tthis.path += path;\n\t\treturn this;\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/URIBuilder.java'}, {'Syntax': 'buildUri(getDBUri())', 'FunctionName': 'buildUri', 'ArgsCount': 1, 'MethodBody': 'public static URIBuilder buildUri(URI uri) {\n\t\tURIBuilder builder = URIBuilder.buildUri().scheme(uri.getScheme()).\n\t\t\t\thost(uri.getHost()).port(uri.getPort()).path(uri.getPath());\n\t\treturn builder;\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/URIBuilder.java'}, {'Syntax': 'getDBUri()', 'FunctionName': 'getDBUri', 'ArgsCount': 0, 'MethodBody': 'public URI getDBUri() {\n\t\treturn dbURI;\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'post(uri, json)', 'FunctionName': 'post', 'ArgsCount': 2, 'MethodBody': 'HttpResponse post(URI uri, String json) {\n\t\tHttpPost post = new HttpPost(uri);\n\t\tsetEntity(post, json);\n\t\treturn executeRequest(post);\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'getResponseList(response)', 'FunctionName': 'getResponseList', 'ArgsCount': 1, 'MethodBody': 'private List<Response> getResponseList(HttpResponse response) throws CouchDbException {\n\t\tInputStream instream = getStream(response);\n\t\tReader reader = new InputStreamReader(instream, Charsets.UTF_8);\n\t\treturn getGson().fromJson(reader, new TypeToken<List<Response>>(){}.getType());\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'close(response)', 'FunctionName': 'close', 'ArgsCount': 1, 'MethodBody': 'public static void close(HttpResponse response) {\n\t\ttry {\n\t\t\tclose(response.getEntity().getContent());\n\t\t} catch (Exception e) {}\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbUtil.java'}]"
6621cd8acda9bd4817b11032,phax/ph-math,"public static int [] factorsOf (final int pn)
  {
    int n = pn;
    final boolean isPrime[] = primeSieve (n); // primes <= n
    final ICommonsList <Integer> v = new CommonsArrayList<> ();

    // Loop to try prime divisors.
    for (int factor = 2; n > 1; ++factor)
    {
      if (isPrime[factor] && (n % factor == 0))
      {

        // Prime divisor found.
        v.add (Integer.valueOf (factor));

        // Factor out multiples of the divisor.
        do
        {
          n /= factor;
        } while (n % factor == 0);
      }
    }

    // Create an array of the distinct prime factors.
    final int factors[] = new int [v.size ()];
    for (int i = 0; i < v.size (); ++i)
    {
      factors[i] = v.get (i).intValue ();
    }
    return factors;
  }",Compute the prime factors of an integer value .,ph-math/src/main/java/com/helger/numbercruncher/mathutils/PrimeFactors.java,"[{'Syntax': 'primeSieve (n)', 'FunctionName': 'primeSieve', 'ArgsCount': 1, 'MethodBody': 'public static boolean [] primeSieve (final int n)\n  {\n    final int halfN = (n + 1) >> 1;\n    final boolean sieve[] = new boolean [n + 1];\n\n    // Initialize every integer from 2 onwards to prime.\n    for (int i = 2; i <= n; ++i)\n      sieve[i] = true;\n\n    int prime = 2; // first prime number\n\n    // Loop to create the sieve.\n    while (prime < halfN)\n    {\n\n      // Mark as composites multiples of the prime.\n      for (int composite = prime << 1; composite <= n; composite += prime)\n        sieve[composite] = false;\n\n      // Skip over composites to the next prime.\n      while ((++prime < halfN) && (!sieve[prime]))\n      {}\n    }\n\n    return sieve;\n  }', 'FileName': '/phax/ph-math/ph-math/src/main/java/com/helger/numbercruncher/mathutils/PrimeFactors.java'}, {'Syntax': 'v.add (Integer.valueOf (factor))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add (final float addend)\n  {\n    // Correct the addend value and add it to the running sum.\n    m_fCorrectedAddend = addend + m_fCorrection;\n    final float tempSum = m_fSum + m_fCorrectedAddend;\n\n    // Compute the next correction and set the running sum.\n    // The parentheses are necessary to compute the high-order\n    // bits of the addend.\n    m_fCorrection = m_fCorrectedAddend - (tempSum - m_fSum);\n    m_fSum = tempSum;\n  }', 'FileName': '/phax/ph-math/ph-math/src/main/java/com/helger/numbercruncher/mathutils/KahanSummation.java'}, {'Syntax': 'v.size ()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size ()\n  {\n    return m_nCols;\n  }', 'FileName': '/phax/ph-math/ph-math/src/main/java/com/helger/numbercruncher/matrix/RowVector.java'}, {'Syntax': 'v.size ()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size ()\n  {\n    return m_nCols;\n  }', 'FileName': '/phax/ph-math/ph-math/src/main/java/com/helger/numbercruncher/matrix/RowVector.java'}, {'Syntax': 'v.get (i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public int get (final int i)\n  {\n    return m_aCounters[i];\n  }', 'FileName': '/phax/ph-math/ph-math/src/main/java/com/helger/numbercruncher/randomutils/Buckets.java'}]"
6621cd8acda9bd4817b11033,wildfly/wildfly,"synchronized void addListener(final String target, final int scope, final NamingListener namingListener) {
        final TargetScope targetScope = new TargetScope(target, scope);
        // Do we have a holder for this listener
        ListenerHolder holder = holdersByListener.get(namingListener);
        if (holder == null) {
            holder = new ListenerHolder(namingListener, targetScope);
            final Map<NamingListener, ListenerHolder> byListenerCopy = new FastCopyHashMap<NamingListener, ListenerHolder>(holdersByListener);
            byListenerCopy.put(namingListener, holder);
            holdersByListener = byListenerCopy;
        } else {
            holder.addTarget(targetScope);
        }

        List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope);
        if (holdersForTarget == null) {
            holdersForTarget = new CopyOnWriteArrayList<ListenerHolder>();
            final Map<TargetScope, List<ListenerHolder>> byTargetCopy = new FastCopyHashMap<TargetScope, List<ListenerHolder>>(holdersByTarget);
            byTargetCopy.put(targetScope, holdersForTarget);
            holdersByTarget = byTargetCopy;
        }
        holdersForTarget.add(holder);
    }",Add a listener to the coordinator with a given target name and event scope . This information is used when an event is fired to determine whether or not to fire this listener .,naming/src/main/java/org/jboss/as/naming/NamingEventCoordinator.java,"[{'Syntax': 'holdersByListener.get(namingListener)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Booking get(String bookingId) throws NotFoundException {\n        if (!bookings.containsKey(bookingId))\n            throw new NotFoundException(Response.status(404).entity(""Invalid bookingId id: "" + bookingId).build());\n\n        return bookings.get(bookingId);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/lra/participant/smoke/hotel/HotelService.java'}, {'Syntax': 'byListenerCopy.put(namingListener, holder)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n    public String put(String key, String value) {\n        Value old = this.get().put(new Key(key), new Value(value));\n        return (old != null) ? old.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/infinispan/bean/CacheBean.java'}, {'Syntax': 'holder.addTarget(targetScope)', 'FunctionName': 'addTarget', 'ArgsCount': 1, 'MethodBody': 'private synchronized void addTarget(final TargetScope targetScope) {\n            targets.add(targetScope);\n        }', 'FileName': '/wildfly/wildfly/naming/src/main/java/org/jboss/as/naming/NamingEventCoordinator.java'}, {'Syntax': 'holdersByTarget.get(targetScope)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Booking get(String bookingId) throws NotFoundException {\n        if (!bookings.containsKey(bookingId))\n            throw new NotFoundException(Response.status(404).entity(""Invalid bookingId id: "" + bookingId).build());\n\n        return bookings.get(bookingId);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/lra/participant/smoke/hotel/HotelService.java'}, {'Syntax': 'byTargetCopy.put(targetScope, holdersForTarget)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n    public String put(String key, String value) {\n        Value old = this.get().put(new Key(key), new Value(value));\n        return (old != null) ? old.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/infinispan/bean/CacheBean.java'}, {'Syntax': 'holdersForTarget.add(holder)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Consumer<Supplier<Node>> add(ServiceName name) {\n        return this.registry.add(name);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/NodeServiceExecutorRegistry.java'}]"
6621cd8acda9bd4817b11034,oblac/jodd,"public void schedulePrune(final long delay) {
		if (pruneTimer != null) {
			pruneTimer.cancel();
		}
		pruneTimer = new Timer();
		pruneTimer.schedule(
				new TimerTask() {
					@Override
					public void run() {
						prune();
					}
				}, delay, delay
		);
	}",Schedules prune .,jodd-core/src/main/java/jodd/cache/TimedCache.java,"[{'Syntax': 'prune()', 'FunctionName': 'prune', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic final int prune() {\n\t\tfinal long stamp = lock.writeLock();\n\t\ttry {\n\t\t\treturn pruneCache();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlockWrite(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cd8acda9bd4817b11035,PistoiaHELM/HELMNotationParser,"public void setCount(String str) {
    isDefault = false;
    if (str.equals(""1"")) {
      isDefault = true;
    }

    count = str;
  }",method to change the default count of one to the user - defined,src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotation.java,[]
6621cd8acda9bd4817b11036,Unidata/thredds,"public void setNetcdfFile(NetcdfFile ncf) {
        this.ncfile = ncf;
        this.filename = ncf.getLocation();

        final GetDataRunnable runner = new GetDataRunnable() {
            public void run(Object o) throws IOException {
                final StringWriter sw = new StringWriter(50000);
                NCdumpW.print(ncfile, command, sw, task);
                result = sw.toString();
            }
        };
        task = new GetDataTask(runner, filename, null);
        stopButton.startProgressMonitorTask(task);
    }",allow calling from outside,ui/src/main/java/ucar/nc2/ui/op/NCdumpPanel.java,[]
6621cd8acda9bd4817b11037,RestComm/jain-slee,"public boolean attachTimer(TimerID timerID) {
		if (cacheData.attachTimer(timerID)) {
			if (acReferencesHandler != null) {
				acReferencesHandler.timerReferenceCreated();
			}
			return true;
		} else {
			return false;
		}
	}",attach the given timer to the current activity context .,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java,"[{'Syntax': 'cacheData.attachTimer(timerID)', 'FunctionName': 'attachTimer', 'ArgsCount': 1, 'MethodBody': 'public boolean attachTimer(TimerID timerID) {\n\t\tfinal Node node = getAttachedTimersNode(true);\n\t\tif (!node.hasChild(timerID)) {\n\t\t\tnode.addChild(Fqn.fromElements(timerID));\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java'}, {'Syntax': 'acReferencesHandler.timerReferenceCreated()', 'FunctionName': 'timerReferenceCreated', 'ArgsCount': 0, 'MethodBody': 'public void timerReferenceCreated() {\n\t\tif (txContext == null) {\n\t\t\t// cancel any task queued to check if ac is unreferenced\n\t\t\tac.getLocalActivityContext().setActivityReferencesCheck(null);\n\t\t}\n\t\telse {\n\t\t\t// we have tx, just increment tx ref counter\n\t\t\ttxRefCounter.timerRefs++; \n\t\t}\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextReferencesHandler.java'}]"
6621cd8acda9bd4817b11038,hawkular/hawkular-metrics,"public void verifyAndCreateTempTables() {
        ZonedDateTime currentBlock = ZonedDateTime.ofInstant(Instant.ofEpochMilli(DateTimeService.now.get().getMillis()), UTC)
                .with(DateTimeService.startOfPreviousEvenHour());

        ZonedDateTime lastStartupBlock = currentBlock.plus(6, ChronoUnit.HOURS);
        verifyAndCreateTempTables(currentBlock, lastStartupBlock).await();
    }",Intended to be used at the startup of the MetricsServiceImpl to ensure we have enough tables for processing,core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/MetricsServiceImpl.java,"[{'Syntax': 'DateTimeService.startOfPreviousEvenHour()', 'FunctionName': 'startOfPreviousEvenHour', 'ArgsCount': 0, 'MethodBody': 'public static TemporalAdjuster startOfPreviousEvenHour() {\n        return temporal -> {\n            int currentHour = temporal.get(ChronoField.HOUR_OF_DAY);\n            return temporal.minus((currentHour % 2 == 0) ? 0 : 1, ChronoUnit.HOURS)\n                    .with(ChronoField.MINUTE_OF_HOUR, 0)\n                    .with(ChronoField.SECOND_OF_MINUTE, 0)\n                    .with(ChronoField.NANO_OF_SECOND, 0);\n        };\n    }', 'FileName': '/hawkular/hawkular-metrics/core/datetime-service/src/main/java/org/hawkular/metrics/datetime/DateTimeService.java'}, {'Syntax': 'verifyAndCreateTempTables(currentBlock, lastStartupBlock)', 'FunctionName': 'verifyAndCreateTempTables', 'ArgsCount': 2, 'MethodBody': 'Completable verifyAndCreateTempTables(ZonedDateTime startTime, ZonedDateTime endTime);', 'FileName': '/hawkular/hawkular-metrics/core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/MetricsService.java'}]"
6621cd8acda9bd4817b11039,wildfly/wildfly,"static RunAs popRunAsIdentity(final SecurityContext sc) {
        if (WildFlySecurityManager.isChecking()) {
            return AccessController.doPrivileged(new PrivilegedAction<RunAs>() {
                @Override
                public RunAs run() {
                    if (sc == null) {
                        throw UndertowLogger.ROOT_LOGGER.noSecurityContext();
                    }
                    RunAs principal = sc.getOutgoingRunAs();
                    sc.setOutgoingRunAs(null);
                    return principal;
                }
            });
        } else {
            if (sc == null) {
                throw UndertowLogger.ROOT_LOGGER.noSecurityContext();
            }
            RunAs principal = sc.getOutgoingRunAs();
            sc.setOutgoingRunAs(null);
            return principal;
        }
    }",Removes the run as identity,undertow/src/main/java/org/wildfly/extension/undertow/security/SecurityActions.java,[]
6621cd8acda9bd4817b1103a,oblac/jodd,"public String applyToColumnName(final String columnName) {
		String propertyName = convertColumnNameToPropertyName(columnName);

		return convertPropertyNameToColumnName(propertyName);
	}",Applies column naming strategy to given column name hint . Returns full column name .,jodd-db/src/main/java/jodd/db/oom/naming/ColumnNamingStrategy.java,[]
6621cd8acda9bd4817b1103b,blademainer/common_utils,"private String consumeCommentTokens(String line) {
        if (line.indexOf(START_COMMENT) == -1 && line.indexOf(END_COMMENT) == -1) {
            return line;
        }
        while ((line = consume(line)) != null) {
            if (!this.inComment && !line.trim().startsWith(START_COMMENT)) {
                return line;
            }
        }
        return line;
    }",Consumes all the leading comment data in the given String and returns the remaining content which may be empty since the supplied content might be all comment data . For our purposes it is only important to strip leading comment content on a line since the first piece of non comment content will be either the DOCTYPE declaration or the root element of the document .,common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java,"[{'Syntax': 'line.indexOf(START_COMMENT)', 'FunctionName': 'indexOf', 'ArgsCount': 1, 'MethodBody': '@Override\n    public int indexOf(Object o) {\n        return this.backingList.indexOf(o);\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/AutoPopulatingList.java'}, {'Syntax': 'line.indexOf(END_COMMENT)', 'FunctionName': 'indexOf', 'ArgsCount': 1, 'MethodBody': '@Override\n    public int indexOf(Object o) {\n        return this.backingList.indexOf(o);\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/AutoPopulatingList.java'}, {'Syntax': 'consume(line)', 'FunctionName': 'consume', 'ArgsCount': 1, 'MethodBody': 'private String consume(String line) {\n        int index = (this.inComment ? endComment(line) : startComment(line));\n        return (index == -1 ? null : line.substring(index));\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java'}]"
6621cd8acda9bd4817b1103c,RestComm/jain-slee,"public static void createInheritanceLink(CtClass concreteClass,
			CtClass superClass) {
		if (superClass == null)
			return;
		try {
			concreteClass.setSuperclass(superClass);
			logger.trace(concreteClass.getName() + "" Inheritance link with ""
					+ superClass.getName() + "" class created"");
		} catch (CannotCompileException cce) {
			cce.printStackTrace();
		}
	}",Create the inheritance link with the sbb absract class provided by the sbb developer,container/common/src/main/java/org/mobicents/slee/container/deployment/ConcreteClassGeneratorUtils.java,"[{'Syntax': 'concreteClass.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'superClass.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}]"
6621cd8acda9bd4817b1103d,artclarke/humble-video,"public java.util.Collection<Codec.ID> getSupportedCodecs()
   {
     final java.util.List<Codec.ID> retval =
       new java.util.LinkedList<Codec.ID>();
     final java.util.Set<Codec.ID> uniqueSet =
       new java.util.HashSet<Codec.ID>();
     
     int numCodecs = getNumSupportedCodecs();
     for(int i = 0; i < numCodecs; i++)
     {
       Codec.ID id = getSupportedCodecId(i);
       // remove duplicate IDs
       if (id != Codec.ID.CODEC_ID_NONE && !uniqueSet.contains(id))
         retval.add(id);
       uniqueSet.add(id);
     }    
     return retval;
   }",Returns a list of all codecs supported for this Object .,humble-video-noarch/src/main/java/io/humble/video/ContainerFormat.java,"[{'Syntax': 'getNumSupportedCodecs()', 'FunctionName': 'getNumSupportedCodecs', 'ArgsCount': 0, 'MethodBody': 'protected int getNumSupportedCodecs() {\n    return VideoJNI.MuxerFormat_getNumSupportedCodecs(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MuxerFormat.java'}, {'Syntax': 'getSupportedCodecId(i)', 'FunctionName': 'getSupportedCodecId', 'ArgsCount': 1, 'MethodBody': 'protected Codec.ID getSupportedCodecId(int n) {\n    return Codec.ID.swigToEnum(VideoJNI.MuxerFormat_getSupportedCodecId(swigCPtr, this, n));\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MuxerFormat.java'}, {'Syntax': 'retval.add(id)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Rational add(Rational arg) {\n    long cPtr = VideoJNI.Rational_add(swigCPtr, this, Rational.getCPtr(arg), arg);\n    return (cPtr == 0) ? null : new Rational(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Rational.java'}, {'Syntax': 'uniqueSet.add(id)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Rational add(Rational arg) {\n    long cPtr = VideoJNI.Rational_add(swigCPtr, this, Rational.getCPtr(arg), arg);\n    return (cPtr == 0) ? null : new Rational(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Rational.java'}]"
6621cd8bcda9bd4817b1103e,PistoiaHELM/HELMNotationParser,"public String toHELM2() {
    String output = """";
    /* first section: simple polymer section */
    output += polymerToHELM2() + ""$"";

    /* second section: connection section */
    output += connectionToHELM2() + ""$"";

    /* third section: grouping section */
    output += groupingToHELM2() + ""$"";

    /* fourth section: annotation section */
    output += annotationToHELM2() + ""$"";

    /* add version number */
    output += ""V2.0"";

    return output;
  }",method to generate for all sections a HELM2 string,src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java,"[{'Syntax': 'polymerToHELM2()', 'FunctionName': 'polymerToHELM2', 'ArgsCount': 0, 'MethodBody': 'public String polymerToHELM2() {\r\n    StringBuilder notation = new StringBuilder();\r\n    for (int i = 0; i < listOfPolymers.size(); i++) {\r\n      if (listOfPolymers.get(i).isAnnotationHere()) {\r\n        notation.append(listOfPolymers.get(i).getPolymerID() + ""{"" + listOfPolymers.get(i).toHELM2() + ""}\\""""\r\n            + listOfPolymers.get(i).getAnnotation() + ""\\""|"");\r\n      } else {\r\n        notation.append(listOfPolymers.get(i).getPolymerID() + ""{"" + listOfPolymers.get(i).toHELM2() + ""}"" + ""|"");\r\n      }\r\n    }\r\n\r\n    notation.setLength(notation.length() - 1);\r\n    return notation.toString();\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java'}, {'Syntax': 'connectionToHELM2()', 'FunctionName': 'connectionToHELM2', 'ArgsCount': 0, 'MethodBody': 'public String connectionToHELM2() {\r\n    if (listOfConnections.size() == 0) {\r\n      return """";\r\n    }\r\n    StringBuilder notation = new StringBuilder();\r\n    for (int i = 0; i < listOfConnections.size(); i++) {\r\n      notation.append(listOfConnections.get(i).toHELM2() + ""|"");\r\n    }\r\n\r\n    notation.setLength(notation.length() - 1);\r\n    return notation.toString();\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java'}, {'Syntax': 'groupingToHELM2()', 'FunctionName': 'groupingToHELM2', 'ArgsCount': 0, 'MethodBody': 'public String groupingToHELM2() {\r\n    if (listOfGroupings.size() == 0) {\r\n      return """";\r\n    }\r\n    StringBuilder notation = new StringBuilder();\r\n    for (int i = 0; i < listOfGroupings.size(); i++) {\r\n      notation.append(listOfGroupings.get(i).toHELM2() + ""|"");\r\n    }\r\n\r\n    notation.setLength(notation.length() - 1);\r\n    return notation.toString();\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java'}, {'Syntax': 'annotationToHELM2()', 'FunctionName': 'annotationToHELM2', 'ArgsCount': 0, 'MethodBody': 'public String annotationToHELM2() {\r\n    if (!(annotationSection.isEmpty())) {\r\n      StringBuilder sb = new StringBuilder();\r\n      for (int i = 0; i < annotationSection.size(); i++) {\r\n        sb.append(annotationSection.get(i).toHELM2() + ""|"");\r\n      }\r\n\r\n      sb.setLength(sb.length() - 1);\r\n      return sb.toString();\r\n    }\r\n    return """";\r\n  }', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java'}]"
6621cd8bcda9bd4817b1103f,GojaFramework/goja,"public static <T extends Comparable> BinarySearch<T> forList(final List<T> list) {
        return new BinarySearch<T>() {
            @Override
            @SuppressWarnings({""unchecked""})
            protected int compare(int index, T element) {
                return list.get(index).compareTo(element);
            }

            @Override
            protected int getLastIndex() {
                return list.size() - 1;
            }
        };
    }",Creates binary search wrapper over a list of comparable elements .,goja-core/src/main/java/goja/core/kits/lang/BinarySearch.java,"[{'Syntax': 'list.get(index).compareTo(element)', 'FunctionName': 'compareTo', 'ArgsCount': 1, 'MethodBody': '@Override\n    public int compareTo(Size other) {\n        if (unit == other.unit) {\n            return Long.compare(count, other.count);\n        }\n\n        return Long.compare(toBytes(), other.toBytes());\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/Size.java'}, {'Syntax': 'list.get(index)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public static Object get(String key) {\n        return configProps.get(key);\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/app/GojaConfig.java'}, {'Syntax': 'list.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n    public int size() {\n        int size = 0;\n        for (Segment segment : this.segments) {\n            size += segment.getCount();\n        }\n        return size;\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/collection/ConcurrentReferenceHashMap.java'}]"
6621cd8bcda9bd4817b11040,jboss/jboss-common-core,"public void create()
   {
      if( threadSafe )
         entryMap = Collections.synchronizedMap(new HashMap());
      else
         entryMap = new HashMap();
      now = System.currentTimeMillis();
   }",Initializes the cache for use . Prior to this the cache has no store .,src/main/java/org/jboss/util/TimedCachePolicy.java,"[{'Syntax': 'System.currentTimeMillis()', 'FunctionName': 'currentTimeMillis', 'ArgsCount': 0, 'MethodBody': 'public long currentTimeMillis()\n   {\n      return now;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}]"
6621cd8bcda9bd4817b11041,oblac/jodd,"public void printUsage(final String commandName) {
		final StringBuilder usage = new StringBuilder(commandName);

		for (final Option option : options) {
			if (option.shortName != null) {
				usage.append("" [-"").append(option.shortName).append(""]"");
			} else if (option.longName != null) {
				usage.append("" [--"").append(option.longName).append(""]"");
			}
		}

		for (final Param param : params) {
			usage.append("" "").append(param.label);
		}

		System.out.println(usage);
	}",Prints the usage line .,jodd-core/src/main/java/jodd/cli/Cli.java,"[{'Syntax': 'usage.append("" [-"").append(option.shortName).append(""]"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'usage.append("" [-"").append(option.shortName)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'usage.append("" [-"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'usage.append("" [--"").append(option.longName).append(""]"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'usage.append("" [--"").append(option.longName)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'usage.append("" [--"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'usage.append("" "").append(param.label)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'usage.append("" "")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'System.out.println(usage)', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public void println(final String string) {\n\t\tSystem.out.println(on(string));\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}]"
6621cd8bcda9bd4817b11042,Unidata/thredds,"public void clear() {
   for (int y=0; y<countY; y++)
     for (int x=0; x<countX; x++)
       gridArray[y][x].used = false;
  }",clear all the grid cells,ui/src/main/java/ucar/nc2/ui/gis/SpatialGrid.java,[]
6621cd8bcda9bd4817b11043,eclipse/packagedrone,"private static String uencode(String prefix) {
        if (prefix != null && prefix.startsWith(""file:"")) {
            StringTokenizer tokens = new StringTokenizer(prefix, ""/\\:"", true);
            StringBuilder stringBuilder = new StringBuilder();
            while (tokens.hasMoreElements()) {
                String token = tokens.nextToken();
                if (""/"".equals(token) || ""\\"".equals(token) || "":"".equals(token)) {
                    stringBuilder.append(token);
                } else {
                    try {
                        stringBuilder.append(URLEncoder.encode(token, ""UTF-8""));
                    } catch(java.io.UnsupportedEncodingException ex) {
                    }
                }
            }
            
            return stringBuilder.toString();
        } else {
            return prefix;
        }
    }",END PWC 6386258,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/xmlparser/ParserUtils.java,"[{'Syntax': 'tokens.hasMoreElements()', 'FunctionName': 'hasMoreElements', 'ArgsCount': 0, 'MethodBody': 'public boolean hasMoreElements() {\n\t\t\t\t\treturn false;\n\t\t\t\t}', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.equinox.jsp.jasper/src/org/eclipse/equinox/internal/jsp/jasper/JspClassLoader.java'}, {'Syntax': 'tokens.nextToken()', 'FunctionName': 'nextToken', 'ArgsCount': 0, 'MethodBody': 'private Token nextToken() {\n\tskipSpaces();\n\tif (hasNextChar()) {\n            prevToken = curToken;\n\t    char ch = nextChar();\n\t    if (Character.isJavaIdentifierStart(ch)) {\n\t\tStringBuilder buf = new StringBuilder();\n\t\tbuf.append(ch);\n\t\twhile (peekChar() != -1 &&\n                        Character.isJavaIdentifierPart(ch=(char)peekChar())) {\n\t\t    buf.append(ch);\n\t\t    nextChar();\n\t\t}\n\t\treturn (curToken = new Id(buf.toString()));\n\t    }\n\n\t    if (ch == \'\\\'\' || ch == \'""\') {\n\t\treturn curToken = parseQuotedChars(ch);\n\t    } else {\n\t\t// For now...\n\t\treturn curToken = new Char(ch);\n\t    }\n\t}\n\treturn curToken = null;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ELParser.java'}, {'Syntax': '""/"".equals(token)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals ( final Object obj )\n    {\n        if ( this == obj )\n        {\n            return true;\n        }\n        if ( obj == null )\n        {\n            return false;\n        }\n        if ( this.getClass() != obj.getClass() )\n        {\n            return false;\n        }\n        final GeneratorInformation other = (GeneratorInformation)obj;\n        if ( this.id == null )\n        {\n            if ( other.id != null )\n            {\n                return false;\n            }\n        }\n        else if ( !this.id.equals ( other.id ) )\n        {\n            return false;\n        }\n        return true;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.generator/src/org/eclipse/packagedrone/repo/generator/GeneratorInformation.java'}, {'Syntax': '""\\\\"".equals(token)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals ( final Object obj )\n    {\n        if ( this == obj )\n        {\n            return true;\n        }\n        if ( obj == null )\n        {\n            return false;\n        }\n        if ( this.getClass() != obj.getClass() )\n        {\n            return false;\n        }\n        final GeneratorInformation other = (GeneratorInformation)obj;\n        if ( this.id == null )\n        {\n            if ( other.id != null )\n            {\n                return false;\n            }\n        }\n        else if ( !this.id.equals ( other.id ) )\n        {\n            return false;\n        }\n        return true;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.generator/src/org/eclipse/packagedrone/repo/generator/GeneratorInformation.java'}, {'Syntax': '"":"".equals(token)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals ( final Object obj )\n    {\n        if ( this == obj )\n        {\n            return true;\n        }\n        if ( obj == null )\n        {\n            return false;\n        }\n        if ( this.getClass() != obj.getClass() )\n        {\n            return false;\n        }\n        final GeneratorInformation other = (GeneratorInformation)obj;\n        if ( this.id == null )\n        {\n            if ( other.id != null )\n            {\n                return false;\n            }\n        }\n        else if ( !this.id.equals ( other.id ) )\n        {\n            return false;\n        }\n        return true;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.generator/src/org/eclipse/packagedrone/repo/generator/GeneratorInformation.java'}, {'Syntax': 'stringBuilder.append(token)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(char c) {\n        if (this.length + 1 > this.ch.length) {\n                    int newLength = this.ch.length*2;\n                    if (newLength < this.ch.length + DEFAULT_SIZE)\n                        newLength = this.ch.length + DEFAULT_SIZE;\n                    char[] newch = new char[newLength];\n                    System.arraycopy(this.ch, 0, newch, 0, this.length);\n                    this.ch = newch;\n        }\n        this.ch[this.length] = c;\n        this.length++;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/xmlparser/XMLStringBuffer.java'}, {'Syntax': 'stringBuilder.append(URLEncoder.encode(token, ""UTF-8""))', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(char c) {\n        if (this.length + 1 > this.ch.length) {\n                    int newLength = this.ch.length*2;\n                    if (newLength < this.ch.length + DEFAULT_SIZE)\n                        newLength = this.ch.length + DEFAULT_SIZE;\n                    char[] newch = new char[newLength];\n                    System.arraycopy(this.ch, 0, newch, 0, this.length);\n                    this.ch = newch;\n        }\n        this.ch[this.length] = c;\n        this.length++;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/xmlparser/XMLStringBuffer.java'}, {'Syntax': 'URLEncoder.encode(token, ""UTF-8"")', 'FunctionName': 'encode', 'ArgsCount': 2, 'MethodBody': 'void encode(int len, int posState) throws IOException {\n            len -= MATCH_LEN_MIN;\n\n            if (len < LOW_SYMBOLS) {\n                rc.encodeBit(choice, 0, 0);\n                rc.encodeBitTree(low[posState], len);\n            } else {\n                rc.encodeBit(choice, 0, 1);\n                len -= LOW_SYMBOLS;\n\n                if (len < MID_SYMBOLS) {\n                    rc.encodeBit(choice, 1, 0);\n                    rc.encodeBitTree(mid[posState], len);\n                } else {\n                    rc.encodeBit(choice, 1, 1);\n                    rc.encodeBitTree(high, len - MID_SYMBOLS);\n                }\n            }\n\n            --counters[posState];\n        }', 'FileName': '/eclipse/packagedrone/bundles/org.tukani.xz/src/org/tukaani/xz/lzma/LZMAEncoder.java'}, {'Syntax': 'stringBuilder.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': ""@Override\n    public String toString ()\n    {\n        final StringBuilder sb = new StringBuilder ();\n\n        this.epoch.ifPresent ( v -> sb.append ( v ).append ( ':' ) );\n\n        sb.append ( this.version );\n\n        if ( this.release.isPresent () && !this.release.get ().isEmpty () )\n        {\n            sb.append ( '-' ).append ( this.release.get () );\n        }\n\n        return sb.toString ();\n    }"", 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.utils.rpm/src/org/eclipse/packagedrone/utils/rpm/RpmVersion.java'}]"
6621cd8bcda9bd4817b11044,lessthanoptimal/GeoRegression,"public static void transform( Se2_F64 se, Point2D_F64 points[], int length ) {

		double tranX = se.getX();
		double tranY = se.getY();

		final double c = se.getCosineYaw();
		final double s = se.getSineYaw();

		for( int i = 0; i < length; i++ ) {
			Point2D_F64 pt = points[i];

			double x = pt.x;
			double y = pt.y;

			pt.x = tranX + x * c - y * s;
			pt.y = tranY + x * s + y * c;
		}
	}",Applies a 2D special euclidean transform to an array of points .,main/src/georegression/transform/se/SePointOps_F64.java,"[{'Syntax': 'se.getX()', 'FunctionName': 'getX', 'ArgsCount': 0, 'MethodBody': 'public double getX() {\n\t\treturn T.getX();\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/se/Se2_F64.java'}, {'Syntax': 'se.getY()', 'FunctionName': 'getY', 'ArgsCount': 0, 'MethodBody': 'public double getY() {\n\t\treturn T.getY();\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/se/Se2_F64.java'}, {'Syntax': 'se.getCosineYaw()', 'FunctionName': 'getCosineYaw', 'ArgsCount': 0, 'MethodBody': 'public double getCosineYaw() {\n\t\treturn c;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/se/Se2_F64.java'}, {'Syntax': 'se.getSineYaw()', 'FunctionName': 'getSineYaw', 'ArgsCount': 0, 'MethodBody': 'public double getSineYaw() {\n\t\treturn s;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/se/Se2_F64.java'}]"
6621cd8bcda9bd4817b11045,oblac/jodd,"public List<Violation> validate(final ValidationContext ctx, final Object target, final String targetName) {
		for (Map.Entry<String, List<Check>> entry : ctx.map.entrySet()) {
			String name = entry.getKey();
			Object value = BeanUtil.declaredSilent.getProperty(target, name);
			String valueName = targetName != null ? (targetName + '.' + name) : name;		// move up
			ValidationConstraintContext vcc = new ValidationConstraintContext(this, target, valueName);
			
			for (Check check : entry.getValue()) {
				String[] checkProfiles = check.getProfiles();
				if (!matchProfiles(checkProfiles)) {
					continue;
				}
				if (check.getSeverity() < severity) {
					continue;
				}
				ValidationConstraint constraint = check.getConstraint();
				if (!constraint.isValid(vcc, value)) {
					addViolation(new Violation(valueName, target, value, check));
				}
			}
		}

		return getViolations();
	}",Performs validation of provided validation context and appends violations .,jodd-vtor/src/main/java/jodd/vtor/Vtor.java,"[{'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public int getValue() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/LoopIterator.java'}, {'Syntax': 'check.getProfiles()', 'FunctionName': 'getProfiles', 'ArgsCount': 0, 'MethodBody': 'public String[] getProfiles() {\n\t\treturn profiles;\n\t}', 'FileName': '/oblac/jodd/jodd-vtor/src/main/java/jodd/vtor/Check.java'}, {'Syntax': 'matchProfiles(checkProfiles)', 'FunctionName': 'matchProfiles', 'ArgsCount': 1, 'MethodBody': ""protected boolean matchProfiles(final String[] checkProfiles) {\n\t\t// test for all profiles\n\t\tif ((checkProfiles != null) && (checkProfiles.length == 1) && checkProfiles[0].equals(ALL_PROFILES)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (enabledProfiles == null || enabledProfiles.isEmpty()) {\n\t\t\tif (validateAllProfilesByDefault) {\n\t\t\t\treturn true;\t// all profiles are considered as enabled\n\t\t\t}\n\t\t\t// only default profile is enabled\n\t\t\tif ((checkProfiles == null) || (checkProfiles.length == 0)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor (String profile : checkProfiles) {\n\t\t\t\tif (StringUtil.isEmpty(profile)) {\n\t\t\t\t\treturn true;\t// default profile\n\t\t\t\t}\n\t\t\t\tif (profile.equals(DEFAULT_PROFILE)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t// there are enabled profiles\n\t\tif ((checkProfiles == null) || (checkProfiles.length == 0)) {\n\t\t\treturn enabledProfiles.contains(DEFAULT_PROFILE);\n\t\t}\n\t\tboolean result = false;\n\t\tfor (String profile : checkProfiles) {\n\t\t\tboolean b = true;\n\t\t\tboolean must = false;\n\t\t\tif (StringUtil.isEmpty(profile)) {\n\t\t\t\tprofile = DEFAULT_PROFILE;\n\t\t\t} else if (profile.charAt(0) == '-') {\n\t\t\t\tprofile = profile.substring(1);\n\t\t\t\tb = false;\n\t\t\t} else if (profile.charAt(0) == '+') {\n\t\t\t\tprofile = profile.substring(1);\n\t\t\t\tmust = true;\n\t\t\t}\n\n\t\t\tif (enabledProfiles.contains(profile)) {\n\t\t\t\tif (!b) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tresult = true;\n\t\t\t} else {\n\t\t\t\tif (must) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}"", 'FileName': '/oblac/jodd/jodd-vtor/src/main/java/jodd/vtor/Vtor.java'}, {'Syntax': 'check.getSeverity()', 'FunctionName': 'getSeverity', 'ArgsCount': 0, 'MethodBody': 'public int getSeverity() {\n\t\treturn severity;\n\t}', 'FileName': '/oblac/jodd/jodd-vtor/src/main/java/jodd/vtor/Check.java'}, {'Syntax': 'check.getConstraint()', 'FunctionName': 'getConstraint', 'ArgsCount': 0, 'MethodBody': 'public ValidationConstraint getConstraint() {\n\t\treturn constraint;\n\t}', 'FileName': '/oblac/jodd/jodd-vtor/src/main/java/jodd/vtor/Check.java'}, {'Syntax': 'constraint.isValid(vcc, value)', 'FunctionName': 'isValid', 'ArgsCount': 2, 'MethodBody': '@Override\n        public boolean isValid(ValidationConstraintContext vcc, Object value) {\n            return false;\n        }', 'FileName': '/oblac/jodd/jodd-vtor/src/test/java/jodd/vtor/ViolationTest.java'}, {'Syntax': 'addViolation(new Violation(valueName, target, value, check))', 'FunctionName': 'addViolation', 'ArgsCount': 1, 'MethodBody': 'public void addViolation(final Violation v) {\n\t\tif (v == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (violations == null) {\n\t\t\tviolations = new ArrayList<>();\n\t\t}\n\t\tviolations.add(v);\n\t}', 'FileName': '/oblac/jodd/jodd-vtor/src/main/java/jodd/vtor/Vtor.java'}, {'Syntax': 'getViolations()', 'FunctionName': 'getViolations', 'ArgsCount': 0, 'MethodBody': 'public List<Violation> getViolations() {\n\t\treturn violations;\n\t}', 'FileName': '/oblac/jodd/jodd-vtor/src/main/java/jodd/vtor/Vtor.java'}]"
6621cd8bcda9bd4817b11046,cologneintelligence/FitGoodies,"public String abs2rel(final String basePath, final String absPath) {
		if (!isAbsolutePath(absPath)) {
			return absPath;
		}

		if (isWindowsDrive(absPath) && isWindowsDrive(basePath) && absPath.charAt(0) != basePath.charAt(0)) {
			return absPath;
		}

		StringBuilder result = new StringBuilder();
		String[] baseParts = getParts(basePath);
		String[] absParts = getParts(absPath);

		// extract common prefix
		int start = 0;
		for (int i = 0; i < Math.min(baseParts.length, absParts.length); ++i) {
			if (baseParts[i].equals(absParts[i])) {
				start = i + 1;
			}
		}

		for (int i = start; i < baseParts.length; ++i) {
			if (result.length() > 0) {
				result.append(File.separator);
			}
			result.append("".."");
		}

		for (int i = start; i < absParts.length; ++i) {
			if (result.length() > 0) {
				result.append(File.separator);
			}
			result.append(absParts[i]);
		}

		return result.toString();
	}",Converts an absolute path into a relative one .,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java,"[{'Syntax': 'isAbsolutePath(absPath)', 'FunctionName': 'isAbsolutePath', 'ArgsCount': 1, 'MethodBody': 'private boolean isAbsolutePath(String path) {\n\t\treturn isWindowsDrive(path) || path.startsWith(""\\\\"") || path.startsWith(""/"");\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java'}, {'Syntax': 'isWindowsDrive(absPath)', 'FunctionName': 'isWindowsDrive', 'ArgsCount': 1, 'MethodBody': ""private boolean isWindowsDrive(final String pathElement) {\n\t\treturn pathElement.length() > 1 && pathElement.charAt(1) == ':';\n\t}"", 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java'}, {'Syntax': 'isWindowsDrive(basePath)', 'FunctionName': 'isWindowsDrive', 'ArgsCount': 1, 'MethodBody': ""private boolean isWindowsDrive(final String pathElement) {\n\t\treturn pathElement.length() > 1 && pathElement.charAt(1) == ':';\n\t}"", 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java'}, {'Syntax': 'getParts(basePath)', 'FunctionName': 'getParts', 'ArgsCount': 1, 'MethodBody': 'private String[] getParts(final String path) {\n\t\tString newPath = path;\n\t\tif (newPath.startsWith(""/"") || newPath.startsWith(""\\\\"")) {\n\t\t\tnewPath = newPath.substring(1);\n\t\t}\n\n\t\tif (newPath.endsWith(""/"") || newPath.endsWith(""\\\\"")) {\n\t\t\tnewPath = newPath.substring(0, newPath.length() - 1);\n\t\t}\n\n\t\treturn newPath.split(""[/\\\\\\\\]"");\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java'}, {'Syntax': 'getParts(absPath)', 'FunctionName': 'getParts', 'ArgsCount': 1, 'MethodBody': 'private String[] getParts(final String path) {\n\t\tString newPath = path;\n\t\tif (newPath.startsWith(""/"") || newPath.startsWith(""\\\\"")) {\n\t\t\tnewPath = newPath.substring(1);\n\t\t}\n\n\t\tif (newPath.endsWith(""/"") || newPath.endsWith(""\\\\"")) {\n\t\t\tnewPath = newPath.substring(0, newPath.length() - 1);\n\t\t}\n\n\t\treturn newPath.split(""[/\\\\\\\\]"");\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java'}, {'Syntax': 'baseParts[i].equals(absParts[i])', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\r\n    public boolean equals(final Object other) {\r\n        if (other == null) {\r\n            return false;\r\n        } else if (!(other instanceof ISBN)) {\r\n            return false;\r\n        } else {\r\n            return stripped().equals(((ISBN) other).stripped());\r\n        }\r\n    }', 'FileName': '/cologneintelligence/FitGoodies/archetype-fitgoodies-quickstart/src/main/resources/archetype-resources/src/main/java/ISBN.java'}, {'Syntax': 'result.append(File.separator)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': '@Override\n\tprotected void append(final LoggingEvent arg0) {\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/test/java/de/cologneintelligence/fitgoodies/log4j/DummyAppender.java'}, {'Syntax': 'result.append("".."")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': '@Override\n\tprotected void append(final LoggingEvent arg0) {\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/test/java/de/cologneintelligence/fitgoodies/log4j/DummyAppender.java'}, {'Syntax': 'result.append(File.separator)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': '@Override\n\tprotected void append(final LoggingEvent arg0) {\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/test/java/de/cologneintelligence/fitgoodies/log4j/DummyAppender.java'}, {'Syntax': 'result.append(absParts[i])', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': '@Override\n\tprotected void append(final LoggingEvent arg0) {\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/test/java/de/cologneintelligence/fitgoodies/log4j/DummyAppender.java'}, {'Syntax': 'result.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString() {\n\t\treturn\n\t\t\t\tright + "" right, "" +\n\t\t\t\t\t\twrong + "" wrong, "" +\n\t\t\t\t\t\tignores + "" ignored, "" +\n\t\t\t\t\t\texceptions + "" exceptions"";\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/Counts.java'}]"
6621cd8bcda9bd4817b11047,jcodec/jcodec,"public ByteBuffer encodePFrame(Picture pic, ByteBuffer _out) {
        frameNumber++;
        return doEncodeFrame(pic, _out, true, frameNumber, SliceType.P);
    }",Encode this picture as a P - frame . P - frame is an frame predicted from one or more of the previosly decoded frame and is usually 10x less in size then the IDR frame .,src/main/java/org/jcodec/codecs/h264/H264Encoder.java,"[{'Syntax': 'doEncodeFrame(pic, _out, true, frameNumber, SliceType.P)', 'FunctionName': 'doEncodeFrame', 'ArgsCount': 5, 'MethodBody': 'public ByteBuffer doEncodeFrame(Picture pic, ByteBuffer _out, boolean idr, int frameNumber, SliceType frameType) {\n        ByteBuffer dup = _out.duplicate();\n        int maxSize = Math.min(dup.remaining(), pic.getWidth() * pic.getHeight());\n        maxSize -= (maxSize >>> 6); // 1.5% to account for escaping\n        int qp = rc.startPicture(pic.getSize(), maxSize, frameType);\n\n        if (idr) {\n            sps = initSPS(new Size(pic.getCroppedWidth(), pic.getCroppedHeight()));\n            pps = initPPS();\n\n            maxPOC = 1 << (sps.log2MaxPicOrderCntLsbMinus4 + 4);\n            maxFrameNumber = 1 << (sps.log2MaxFrameNumMinus4 + 4);\n        }\n\n        if (idr) {\n            dup.putInt(0x1);\n            new NALUnit(NALUnitType.SPS, 3).write(dup);\n            writeSPS(dup, sps);\n\n            dup.putInt(0x1);\n            new NALUnit(NALUnitType.PPS, 3).write(dup);\n            writePPS(dup, pps);\n        }\n\n        int mbWidth = sps.picWidthInMbsMinus1 + 1;\n        int mbHeight = sps.picHeightInMapUnitsMinus1 + 1;\n\n        context = new EncodingContext(mbWidth, mbHeight);\n\n        picOut = Picture.create(mbWidth << 4, mbHeight << 4, ColorSpace.YUV420J);\n\n        topEncoded = new EncodedMB[mbWidth];\n\n        encodeSlice(sps, pps, pic, dup, idr, frameNumber, frameType, qp);\n\n        putLastMBLine();\n\n        ref = picOut;\n\n        dup.flip();\n        return dup;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/codecs/h264/H264Encoder.java'}]"
6621cd8bcda9bd4817b11048,Unidata/thredds,"public Attribute deleteGlobalAttribute(String attName) {
    if (!defineMode) throw new UnsupportedOperationException(""not in define mode"");
    Attribute att = findGlobalAttribute(attName);
    if (null == att) return null;

    rootGroup.remove(att);
    return att;
  }",Delete a global Attribute . Must be in define mode .,legacy/src/main/java/ucar/nc2/NetcdfFileWriteable.java,[]
6621cd8bcda9bd4817b11049,real-logic/aeron,"public RecoveryPlan createRecoveryPlan(final AeronArchive archive, final int serviceCount)
    {
        final ArrayList<Snapshot> snapshots = new ArrayList<>();
        final ArrayList<Log> logs = new ArrayList<>();
        planRecovery(snapshots, logs, entries, archive, serviceCount);

        long lastLeadershipTermId = NULL_VALUE;
        long lastTermBaseLogPosition = 0;
        long committedLogPosition = -1;
        long appendedLogPosition = 0;

        final int snapshotStepsSize = snapshots.size();
        if (snapshotStepsSize > 0)
        {
            final Snapshot snapshot = snapshots.get(0);

            lastLeadershipTermId = snapshot.leadershipTermId;
            lastTermBaseLogPosition = snapshot.termBaseLogPosition;
            appendedLogPosition = snapshot.logPosition;
            committedLogPosition = snapshot.logPosition;
        }

        if (!logs.isEmpty())
        {
            final Log log = logs.get(0);

            lastLeadershipTermId = log.leadershipTermId;
            lastTermBaseLogPosition = log.termBaseLogPosition;
            appendedLogPosition = log.stopPosition;
            committedLogPosition = log.logPosition;
        }

        return new RecoveryPlan(
            lastLeadershipTermId,
            lastTermBaseLogPosition,
            appendedLogPosition,
            committedLogPosition,
            snapshots,
            logs);
    }",Create a recovery plan for the cluster that when the steps are replayed will bring the cluster back to the latest stable state .,aeron-cluster/src/main/java/io/aeron/cluster/RecordingLog.java,"[{'Syntax': 'snapshots.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size()\n    {\n        return count;\n    }', 'FileName': '/real-logic/aeron/aeron-archive/src/main/java/io/aeron/archive/CatalogIndex.java'}, {'Syntax': 'snapshots.get(0)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public String get(final String key)\n    {\n        return params.get(key);\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUri.java'}, {'Syntax': 'logs.get(0)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public String get(final String key)\n    {\n        return params.get(key);\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUri.java'}]"
6621cd8bcda9bd4817b1104a,wildfly/wildfly,"protected ComponentView getComponentView() {
        ComponentView cv = componentView;
        // we need to check both, otherwise it is possible for
        // componentView to be initialized before reference
        if (cv == null) {
            synchronized (this) {
                cv = componentView;
                if (cv == null) {
                    cv = getMSCService(componentViewName, ComponentView.class);
                    if (cv == null) {
                        throw WSLogger.ROOT_LOGGER.cannotFindComponentView(componentViewName);
                    }
                    if (reference == null) {
                        try {
                            reference = cv.createInstance();
                        } catch (Exception e) {
                            throw new RuntimeException(e);
                        }
                    }
                    componentView = cv;
                }
            }
        }
        return cv;
    }",Gets endpoint container lazily .,webservices/server-integration/src/main/java/org/jboss/as/webservices/invocation/AbstractInvocationHandler.java,"[{'Syntax': 'getMSCService(componentViewName, ComponentView.class)', 'FunctionName': 'getMSCService', 'ArgsCount': 2, 'MethodBody': '@SuppressWarnings(""unchecked"")\n    public static <T> T getMSCService(final ServiceName serviceName, final Class<T> clazz) {\n        ServiceController<T> service = (ServiceController<T>) CurrentServiceContainer.getServiceContainer().getService(serviceName);\n        return service != null ? service.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/webservices/server-integration/src/main/java/org/jboss/as/webservices/util/ASHelper.java'}, {'Syntax': 'WSLogger.ROOT_LOGGER.cannotFindComponentView(componentViewName)', 'FunctionName': 'cannotFindComponentView', 'ArgsCount': 1, 'MethodBody': '@Message(id = 38, value = ""Cannot find component view: %s"")\n    IllegalStateException cannotFindComponentView(ServiceName viewName);', 'FileName': '/wildfly/wildfly/webservices/server-integration/src/main/java/org/jboss/as/webservices/logging/WSLogger.java'}, {'Syntax': 'cv.createInstance()', 'FunctionName': 'createInstance', 'ArgsCount': 0, 'MethodBody': 'ManagedReference createInstance() throws Exception;', 'FileName': '/wildfly/wildfly/ee/src/main/java/org/jboss/as/ee/component/ComponentView.java'}]"
6621cd8bcda9bd4817b1104b,jboss/jboss-common-core,"public static Element parse(InputSource source) throws IOException
    {
        try
        {
            Document doc = getDocumentBuilder().parse(source);
            Element root = doc.getDocumentElement();
            return root;
        }
        catch (SAXException e)
        {
            throw new IOException(e.toString());
        }
    }",Parse the given input source and return the root Element,src/main/java/org/jboss/util/xml/DOMUtils.java,"[{'Syntax': 'getDocumentBuilder().parse(source)', 'FunctionName': 'parse', 'ArgsCount': 1, 'MethodBody': 'public static Element parse(String xmlString) throws IOException\n    {\n        try\n        {\n            return parse(new ByteArrayInputStream(xmlString.getBytes(""UTF-8"")));\n        }\n        catch (IOException e)\n        {\n            log.error(""Cannot parse: "" + xmlString);\n            throw e;\n        }\n    }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/DOMUtils.java'}, {'Syntax': 'getDocumentBuilder()', 'FunctionName': 'getDocumentBuilder', 'ArgsCount': 0, 'MethodBody': 'public static DocumentBuilder getDocumentBuilder()\n    {\n        DocumentBuilder builder = (DocumentBuilder)builderThreadLocal.get();\n        return builder;\n    }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/DOMUtils.java'}, {'Syntax': 'e.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString() {\n      return super.toString() + ""{ "" + delegateConnection + "" }"";\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/protocol/DelegatingURLConnection.java'}]"
6621cd8bcda9bd4817b1104c,GleasonK/android-webrtc-api,"public static PnSignalingParams defaultInstance() {
        MediaConstraints pcConstraints    = PnSignalingParams.defaultPcConstraints();
        MediaConstraints videoConstraints = PnSignalingParams.defaultVideoConstraints();
        MediaConstraints audioConstraints = PnSignalingParams.defaultAudioConstraints();
        List<PeerConnection.IceServer> iceServers = PnSignalingParams.defaultIceServers();
        return new PnSignalingParams(iceServers, pcConstraints, videoConstraints, audioConstraints);
    }",The default parameters for media constraints . Might have to tweak in future .,pnwebrtc/src/main/java/me/kevingleason/pnwebrtc/PnSignalingParams.java,"[{'Syntax': 'PnSignalingParams.defaultPcConstraints()', 'FunctionName': 'defaultPcConstraints', 'ArgsCount': 0, 'MethodBody': 'private static MediaConstraints defaultPcConstraints(){\n        MediaConstraints pcConstraints = new MediaConstraints();\n        pcConstraints.optional.add(new MediaConstraints.KeyValuePair(""DtlsSrtpKeyAgreement"", ""true""));\n        pcConstraints.mandatory.add(new MediaConstraints.KeyValuePair(""OfferToReceiveAudio"", ""true""));\n        pcConstraints.mandatory.add(new MediaConstraints.KeyValuePair(""OfferToReceiveVideo"", ""true""));\n        return pcConstraints;\n    }', 'FileName': '/GleasonK/android-webrtc-api/pnwebrtc/src/main/java/me/kevingleason/pnwebrtc/PnSignalingParams.java'}, {'Syntax': 'PnSignalingParams.defaultVideoConstraints()', 'FunctionName': 'defaultVideoConstraints', 'ArgsCount': 0, 'MethodBody': 'private static MediaConstraints defaultVideoConstraints(){\n        MediaConstraints videoConstraints = new MediaConstraints();\n        videoConstraints.mandatory.add(new MediaConstraints.KeyValuePair(""maxWidth"",""1280""));\n        videoConstraints.mandatory.add(new MediaConstraints.KeyValuePair(""maxHeight"",""720""));\n        videoConstraints.mandatory.add(new MediaConstraints.KeyValuePair(""minWidth"", ""640""));\n        videoConstraints.mandatory.add(new MediaConstraints.KeyValuePair(""minHeight"",""480""));\n        return videoConstraints;\n    }', 'FileName': '/GleasonK/android-webrtc-api/pnwebrtc/src/main/java/me/kevingleason/pnwebrtc/PnSignalingParams.java'}, {'Syntax': 'PnSignalingParams.defaultAudioConstraints()', 'FunctionName': 'defaultAudioConstraints', 'ArgsCount': 0, 'MethodBody': 'private static MediaConstraints defaultAudioConstraints(){\n        MediaConstraints audioConstraints = new MediaConstraints();\n        return audioConstraints;\n    }', 'FileName': '/GleasonK/android-webrtc-api/pnwebrtc/src/main/java/me/kevingleason/pnwebrtc/PnSignalingParams.java'}, {'Syntax': 'PnSignalingParams.defaultIceServers()', 'FunctionName': 'defaultIceServers', 'ArgsCount': 0, 'MethodBody': 'public static List<PeerConnection.IceServer> defaultIceServers(){\n        List<PeerConnection.IceServer> iceServers = new ArrayList<PeerConnection.IceServer>(25);\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.l.google.com:19302""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.services.mozilla.com""));\n        iceServers.add(new PeerConnection.IceServer(""turn:turn.bistri.com:80"", ""homeo"", ""homeo""));\n        iceServers.add(new PeerConnection.IceServer(""turn:turn.anyfirewall.com:443?transport=tcp"", ""webrtc"", ""webrtc""));\n\n        // Extra Defaults - 19 STUN servers + 4 initial = 23 severs (+2 padding) = Array cap 25\n        iceServers.add(new PeerConnection.IceServer(""stun:stun1.l.google.com:19302""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun2.l.google.com:19302""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun3.l.google.com:19302""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun4.l.google.com:19302""));\n        iceServers.add(new PeerConnection.IceServer(""stun:23.21.150.121""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun01.sipphone.com""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.ekiga.net""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.fwdnet.net""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.ideasip.com""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.iptel.org""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.rixtelecom.se""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.schlund.de""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stunserver.org""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.softjoys.com""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.voiparound.com""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.voipbuster.com""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.voipstunt.com""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.voxgratia.org""));\n        iceServers.add(new PeerConnection.IceServer(""stun:stun.xten.com""));\n\n        return iceServers;\n    }', 'FileName': '/GleasonK/android-webrtc-api/pnwebrtc/src/main/java/me/kevingleason/pnwebrtc/PnSignalingParams.java'}]"
6621cd8bcda9bd4817b1104d,Unidata/thredds,"public float[] getAzimuths() {
    if (azimuths == null) {
      azimuths = new float[nRays];
      for (int r = 0; r < nRays; r++) {
        azimuths[r] = myRYIBs[r].getAzimuth();
      }
    }
    return azimuths;
  }",Get the array of azimuths for this sweep .,cdm/src/main/java/ucar/atd/dorade/DoradeSWIB.java,[]
6621cd8bcda9bd4817b1104e,hawkular/hawkular-metrics,"@Override
    public Observable<Observable<Row>> findAllDataFromBucket(long timestamp, int pageSize, int maxConcurrency) {
        PreparedStatement ts =
                getTempStatement(MetricType.UNDEFINED, TempStatement.SCAN_WITH_TOKEN_RANGES, timestamp);

        // The table does not exists - case such as when starting Hawkular-Metrics for the first time just before
        // compression kicks in.
        if(ts == null || prepMap.floorKey(timestamp) == 0L) {
            return Observable.empty();
        }

        return Observable.from(getTokenRanges())
                .map(tr -> rxSession.executeAndFetch(
                        ts
                                .bind()
                                .setToken(0, tr.getStart())
                                .setToken(1, tr.getEnd())
                                .setFetchSize(pageSize)));
    }",Fetch all the data from a temporary table for the compression job . Using TokenRanges avoids fetching first all the metrics partition keys and then requesting them .,core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/DataAccessImpl.java,"[{'Syntax': 'getTempStatement(MetricType.UNDEFINED, TempStatement.SCAN_WITH_TOKEN_RANGES, timestamp)', 'FunctionName': 'getTempStatement', 'ArgsCount': 3, 'MethodBody': 'PreparedStatement getTempStatement(MetricType type, TempStatement ts, long timestamp) {\n        Map.Entry<Long, Map<Integer, PreparedStatement>> floorEntry = prepMap\n                .floorEntry(timestamp);\n\n        if(floorEntry != null) {\n                return floorEntry.getValue()\n                    .get(getMapKey(type, ts));\n        }\n        return null;\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/DataAccessImpl.java'}, {'Syntax': 'getTokenRanges()', 'FunctionName': 'getTokenRanges', 'ArgsCount': 0, 'MethodBody': 'private Set<TokenRange> getTokenRanges() {\n        Set<TokenRange> tokenRanges = new HashSet<>();\n        for (TokenRange tokenRange : session.getCluster().getMetadata().getTokenRanges()) {\n            tokenRanges.addAll(tokenRange.unwrap());\n        }\n        return tokenRanges;\n    }', 'FileName': '/hawkular/hawkular-metrics/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/org/hawkular/openshift/namespace/NamespaceOverrideMapper.java'}, {'Syntax': 'rxSession.executeAndFetch(\n                        ts\n                                .bind()\n                                .setToken(0, tr.getStart())\n                                .setToken(1, tr.getEnd())\n                                .setFetchSize(pageSize))', 'FunctionName': 'executeAndFetch', 'ArgsCount': 1, 'MethodBody': 'Observable<Row> executeAndFetch(String query);', 'FileName': '/hawkular/hawkular-metrics/core/rx-java-driver/src/main/java/org/hawkular/rx/cassandra/driver/RxSession.java'}, {'Syntax': 'tr.getStart()', 'FunctionName': 'getStart', 'ArgsCount': 0, 'MethodBody': 'public String getStart() {\n        return start;\n    }', 'FileName': '/hawkular/hawkular-metrics/api/metrics-api-jaxrs/src/main/java/org/hawkular/metrics/api/jaxrs/StatsQueryRequest.java'}, {'Syntax': 'tr.getEnd()', 'FunctionName': 'getEnd', 'ArgsCount': 0, 'MethodBody': 'public String getEnd() {\n        return end;\n    }', 'FileName': '/hawkular/hawkular-metrics/api/metrics-api-jaxrs/src/main/java/org/hawkular/metrics/api/jaxrs/StatsQueryRequest.java'}]"
6621cd8bcda9bd4817b1104f,jboss/jboss-common-core,"public static Iterator names()
   {
      SecurityManager sm = System.getSecurityManager();
      if (sm != null)
         sm.checkPropertiesAccess();
      return props.names();
   }",Return an iterator over all contained property names .,src/main/java/org/jboss/util/property/PropertyManager.java,"[{'Syntax': 'props.names()', 'FunctionName': 'names', 'ArgsCount': 0, 'MethodBody': 'public static Iterator names()\n   {\n      SecurityManager sm = System.getSecurityManager();\n      if (sm != null)\n         sm.checkPropertiesAccess();\n      return props.names();\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/property/PropertyManager.java'}]"
6621cd8bcda9bd4817b11050,oblac/jodd,"protected void onDecoraTag(final Tag tag) {
		String tagName = tag.getName().toString();

		if (tag.getType() == TagType.SELF_CLOSING) {
			checkNestedDecoraTags();
			decoraTagName = tagName.substring(7);
			decoraTagStart = tag.getTagPosition();
			decoraTagEnd = tag.getTagPosition() + tag.getTagLength();
			defineDecoraTag();
			return;
		}

		if (tag.getType() == TagType.START) {
			checkNestedDecoraTags();
			decoraTagName = tagName.substring(7);
			decoraTagStart = tag.getTagPosition();
			decoraTagDefaultValueStart = tag.getTagPosition() + tag.getTagLength();
			return;
		}

		// closed tag type
		decoraTagEnd = tag.getTagPosition() + tag.getTagLength();
		decoraTagDefaultValueEnd = tag.getTagPosition();
		defineDecoraTag();
	}",Handle Decora tags .,jodd-decora/src/main/java/jodd/decora/parser/DecoratorTagVisitor.java,"[{'Syntax': 'tag.getName().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String toString() {\n\t\tString out = """";\n\t\tif (shortName != null) {\n\t\t\tout += ""-"" + shortName;\n\t\t}\n\t\tif (longName != null) {\n\t\t\tif (!out.isEmpty()) {\n\t\t\t\tout += "" | "";\n\t\t\t}\n\t\t\tout += ""--"" + longName;\n\t\t}\n\t\treturn out;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cli/Option.java'}, {'Syntax': 'tag.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'checkNestedDecoraTags()', 'FunctionName': 'checkNestedDecoraTags', 'ArgsCount': 0, 'MethodBody': 'protected void checkNestedDecoraTags() {\n\t\tif (decoraTagName != null) {\n\t\t\tthrow new DecoraException(""Nested Decora tags not allowed"");\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoratorTagVisitor.java'}, {'Syntax': 'defineDecoraTag()', 'FunctionName': 'defineDecoraTag', 'ArgsCount': 0, 'MethodBody': 'protected void defineDecoraTag() {\n\t\tDecoraTag decoraTag =\n\t\t\t\tdecoraTagDefaultValueStart == 0 ?\n\t\t\t\t\tnew DecoraTag(decoraTagName, decoraIdName, decoraTagStart, decoraTagEnd) :\n\t\t\t\t\tnew DecoraTag(\n\t\t\t\t\t\t\tdecoraTagName, decoraIdName,\n\t\t\t\t\t\t\tdecoraTagStart, decoraTagEnd,\n\t\t\t\t\t\t\tdecoraTagDefaultValueStart, decoraTagDefaultValueEnd - decoraTagDefaultValueStart);\n\n\t\tdecoraTags.add(decoraTag);\n\t\tdecoraTagName = null;\n\t\tdecoraIdName = null;\n\t\tclosingTagName = null;\n\t\tdecoraTagDefaultValueStart = 0;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoratorTagVisitor.java'}, {'Syntax': 'checkNestedDecoraTags()', 'FunctionName': 'checkNestedDecoraTags', 'ArgsCount': 0, 'MethodBody': 'protected void checkNestedDecoraTags() {\n\t\tif (decoraTagName != null) {\n\t\t\tthrow new DecoraException(""Nested Decora tags not allowed"");\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoratorTagVisitor.java'}, {'Syntax': 'defineDecoraTag()', 'FunctionName': 'defineDecoraTag', 'ArgsCount': 0, 'MethodBody': 'protected void defineDecoraTag() {\n\t\tDecoraTag decoraTag =\n\t\t\t\tdecoraTagDefaultValueStart == 0 ?\n\t\t\t\t\tnew DecoraTag(decoraTagName, decoraIdName, decoraTagStart, decoraTagEnd) :\n\t\t\t\t\tnew DecoraTag(\n\t\t\t\t\t\t\tdecoraTagName, decoraIdName,\n\t\t\t\t\t\t\tdecoraTagStart, decoraTagEnd,\n\t\t\t\t\t\t\tdecoraTagDefaultValueStart, decoraTagDefaultValueEnd - decoraTagDefaultValueStart);\n\n\t\tdecoraTags.add(decoraTag);\n\t\tdecoraTagName = null;\n\t\tdecoraIdName = null;\n\t\tclosingTagName = null;\n\t\tdecoraTagDefaultValueStart = 0;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoratorTagVisitor.java'}]"
6621cd8bcda9bd4817b11051,WASdev/ci.common,"public static String extractSymbolicName(File jar) throws PluginExecutionException {
        JarFile jarFile = null;
        try {
            jarFile = new JarFile(jar);
            return jarFile.getManifest().getMainAttributes().getValue(""Bundle-SymbolicName"");
        } catch (IOException e) {
            throw new PluginExecutionException(""Could not load the jar "" + jar.getAbsolutePath(), e);
        } finally {
            if (jarFile != null) {
                try {
                    jarFile.close();
                } catch (IOException e) {
                    // nothing to do here
                }
            }
        }
    }",Extracts the bundle symbolic name from the jar manifest .,src/main/java/net/wasdev/wlp/common/plugins/util/InstallFeatureUtil.java,[]
6621cd8bcda9bd4817b11052,oblac/jodd,"public String hostUrl() {
		StringBand url = new StringBand(8);

		if (protocol != null) {
			url.append(protocol);
			url.append(""://"");
		}

		if (host != null) {
			url.append(host);
		}

		if (port != Defaults.DEFAULT_PORT) {
			url.append(':');
			url.append(port);
		}

		return url.toString();
	}",Returns just host url without path and query .,jodd-http/src/main/java/jodd/http/HttpRequest.java,"[{'Syntax': 'url.append(protocol)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'url.append(""://"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'url.append(host)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""url.append(':')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'url.append(port)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'url.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String toString() {\n\t\tString out = """";\n\t\tif (shortName != null) {\n\t\t\tout += ""-"" + shortName;\n\t\t}\n\t\tif (longName != null) {\n\t\t\tif (!out.isEmpty()) {\n\t\t\t\tout += "" | "";\n\t\t\t}\n\t\t\tout += ""--"" + longName;\n\t\t}\n\t\treturn out;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cli/Option.java'}]"
6621cd8bcda9bd4817b11053,RestComm/jain-slee,"private void writeMode() throws SLEEException, ManagementException {
        if (!isProfileWriteable()) {
            if (logger.isDebugEnabled()) {
                logger.debug(""Changing state to read-write, for profile mbean with name "" + profileName + "", from table with name "" + this.profileTable.getProfileTableName());
            }
            // get object & make it writable
            ProfileObjectImpl profileObject = profileTable.getProfile(profileName);
            profileObject.getProfileEntity().setReadOnly(false);
            // change state
            state = State.write;
        } else {
            if (logger.isDebugEnabled()) {
                logger.debug(""Already in write state, for profile mbean with name "" + profileName + "", from table with name "" + this.profileTable.getProfileTableName());
            }
        }
    }",Moves to the write mode using specified object . The current java transaction will be suspended .,container/profiles/src/main/java/org/mobicents/slee/container/profile/AbstractProfileMBeanImpl.java,"[{'Syntax': 'isProfileWriteable()', 'FunctionName': 'isProfileWriteable', 'ArgsCount': 0, 'MethodBody': 'public boolean isProfileWriteable()\n        throws ManagementException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/profile/ProfileMBean.java'}, {'Syntax': 'this.profileTable.getProfileTableName()', 'FunctionName': 'getProfileTableName', 'ArgsCount': 0, 'MethodBody': 'public String getProfileTableName()\n        throws ManagementException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ProfileTableUsageMBean.java'}, {'Syntax': 'profileTable.getProfile(profileName)', 'FunctionName': 'getProfile', 'ArgsCount': 1, 'MethodBody': 'public ProfileObjectImpl getProfile(String profileName)\n\t\t\tthrows TransactionRequiredLocalException, SLEEException {\n\t\t\n\t\treturn transactionView.getProfile(profileName);\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'profileObject.getProfileEntity().setReadOnly(false)', 'FunctionName': 'setReadOnly', 'ArgsCount': 1, 'MethodBody': 'public void setReadOnly(String value) {\n        this.readOnly = value;\n    }', 'FileName': '/RestComm/jain-slee/container/components/descriptors/src/main/java/org/mobicents/slee/container/component/deployment/jaxb/slee11/profile/QueryOptions.java'}, {'Syntax': 'profileObject.getProfileEntity()', 'FunctionName': 'getProfileEntity', 'ArgsCount': 0, 'MethodBody': 'public ProfileEntity getProfileEntity() {\n\t\treturn profileEntity;\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectImpl.java'}, {'Syntax': 'this.profileTable.getProfileTableName()', 'FunctionName': 'getProfileTableName', 'ArgsCount': 0, 'MethodBody': 'public String getProfileTableName()\n        throws ManagementException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ProfileTableUsageMBean.java'}]"
6621cd8bcda9bd4817b11054,oblac/jodd,"public synchronized void reset() {
		if (strategy == Strategy.ACTION_MANAGED) {
			actionBundles.clear();
			mirrors.clear();
		}

		final FindFile ff = new FindFile();
		ff.includeDirs(false);
		ff.searchPath(new File(bundleFolder, staplerPath));

		File f;
		int count = 0;
		while ((f = ff.nextFile()) != null) {
			f.delete();
			count++;
		}
		if (log.isInfoEnabled()) {
			log.info(""reset: "" + count + "" bundle files deleted."");
		}
	}",Clears all settings and removes all created bundle files from file system .,jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerBundlesManager.java,"[{'Syntax': 'actionBundles.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic void clear() {\n\t\tfinal long stamp = lock.writeLock();\n\t\ttry {\n\t\t\tcacheMap.clear();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlockWrite(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'mirrors.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic void clear() {\n\t\tfinal long stamp = lock.writeLock();\n\t\ttry {\n\t\t\tcacheMap.clear();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlockWrite(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'ff.includeDirs(false)', 'FunctionName': 'includeDirs', 'ArgsCount': 1, 'MethodBody': 'public FindFile includeDirs(final boolean includeDirs) {\n\t\tthis.includeDirs = includeDirs;\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'ff.searchPath(new File(bundleFolder, staplerPath))', 'FunctionName': 'searchPath', 'ArgsCount': 1, 'MethodBody': 'public FindFile searchPath(final File searchPath) {\n\t\taddPath(searchPath);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'ff.nextFile()', 'FunctionName': 'nextFile', 'ArgsCount': 0, 'MethodBody': 'protected File nextFile() {\n\t\t\twhile (index < files.length) {\n\t\t\t\tfinal File file = files[index];\n\n\t\t\t\tif (file == null) {\n\t\t\t\t\tindex++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfiles[index] = null;\n\t\t\t\tindex++;\n\n\t\t\t\tif (file.isFile()) {\n\t\t\t\t\tif (!includeFiles) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!acceptFile(file)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn file;\n\t\t\t}\n\t\t\treturn null;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'f.delete()', 'FunctionName': 'delete', 'ArgsCount': 0, 'MethodBody': '@RestAction(""delete/{id}"")\n\t@GET\n\tpublic TextResult delete() {\n\t\ttag = loadTagById(id);\n\t\treturn TextResult.of(""delete-"" + tag);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/test/java/jodd/madvoc/action/tag/TagAction.java'}]"
6621cd8ccda9bd4817b11055,rupertlssmith/lojix,"public void put(String name, Object value)
    {
        pageContext.setAttribute(name, value, scope);
    }",Inserts an object into the scope .,base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java,[]
6621cd8ccda9bd4817b11056,RestComm/jain-slee,"public static void writeObject(ObjectOutputStream out, Object vendorData) throws IOException {
        // write non-transient fields
        out.defaultWriteObject();
        // check if should we serialize vendor data?
        if (vendorData != null) {
            // serialize the vendor data
            out.writeBoolean(true);
            // write the vendor data in a marshalled object so deserialization can be deferred
            out.writeObject(new MarshalledObject(vendorData));
        }
        else out.writeBoolean(false);
    }",Write the current object and vendor - specific data to the output stream .,api/jar/src/main/java/javax/slee/management/VendorExtensionUtils.java,"[{'Syntax': 'out.writeObject(new MarshalledObject(vendorData))', 'FunctionName': 'writeObject', 'ArgsCount': 1, 'MethodBody': 'private void writeObject(ObjectOutputStream out) throws IOException {\n        VendorExtensionUtils.writeObject(out, vendorDataSerializationEnabled ? vendorData : null);\n\n        if (cause != null) {\n            out.writeBoolean(true);\n            // serialize the cause inside a marshalled object to isolate\n            // the serialized data for it in the stream\n            out.writeObject(new MarshalledObject(cause));\n\n            // serialize a text form of the stack trace\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            cause.printStackTrace(pw);\n            pw.flush();\n            out.writeUTF(sw.getBuffer().toString());\n        }\n        else {\n            out.writeBoolean(false);\n        }\n    }', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/Alarm.java'}]"
6621cd8ccda9bd4817b11057,ReactiveX/RxJava,"@CheckReturnValue
    @NonNull
    public static <T> UnicastProcessor<T> create(int capacityHint, Runnable onCancelled) {
        ObjectHelper.requireNonNull(onCancelled, ""onTerminate"");
        return new UnicastProcessor<T>(capacityHint, onCancelled);
    }",Creates an UnicastProcessor with the given internal buffer capacity hint and a callback for the case when the single Subscriber cancels its subscription .,src/main/java/io/reactivex/processors/UnicastProcessor.java,[]
6621cd8ccda9bd4817b11058,Unidata/thredds,"public CoordinateTransform findCoordinateTransform(String name) {
    if (name == null) return null;
    for (CoordinateTransform v : coordTransforms) {
      if (name.equals(v.getName()))
        return v;
    }
    return null;
  }",Retrieve the CoordinateTransform with the specified name .,cdm/src/main/java/ucar/nc2/dataset/NetcdfDataset.java,[]
6621cd8ccda9bd4817b11059,liveontologies/elk-reasoner,"private void enlarge() {
		int oldCapacity = keys.length;
		if (oldCapacity == LinearProbing.MAXIMUM_CAPACITY)
			throw new IllegalArgumentException(
					""Map cannot grow beyond capacity: ""
							+ LinearProbing.MAXIMUM_CAPACITY);
		K oldKeys[] = keys;
		V oldValues[] = values;
		int newCapacity = oldCapacity << 1;
		@SuppressWarnings(""unchecked"")
		K newKeys[] = (K[]) new Object[newCapacity];
		@SuppressWarnings(""unchecked"")
		V newValues[] = (V[]) new Object[newCapacity];
		for (int i = 0; i < oldCapacity; i++) {
			K key = oldKeys[i];
			if (key != null)
				putKeyValue(newKeys, newValues, key, oldValues[i]);
		}
		this.keys = newKeys;
		this.values = newValues;
	}",Increasing the capacity of the map,elk-util-parent/elk-util-collections/src/main/java/org/semanticweb/elk/util/collections/ArrayHashMap.java,"[{'Syntax': 'putKeyValue(newKeys, newValues, key, oldValues[i])', 'FunctionName': 'putKeyValue', 'ArgsCount': 4, 'MethodBody': 'private static <K, V> V putKeyValue(K[] keys, V[] values, K key, V value) {\n\t\tint pos = LinearProbing.getPosition(keys, key);\n\t\tif (keys[pos] == null) {\n\t\t\tkeys[pos] = key;\n\t\t\tvalues[pos] = value;\n\t\t\treturn null;\n\t\t}\n\t\t// else\n\t\tV oldValue = values[pos];\n\t\tvalues[pos] = value;\n\t\treturn oldValue;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-collections/src/main/java/org/semanticweb/elk/util/collections/ArrayHashMap.java'}]"
6621cd8ccda9bd4817b1105a,google/guice,"private static boolean hasSameVersionOfCglib(ClassLoader classLoader) {
    Class<?> fc = net.sf.cglib.reflect.FastClass.class;
    try {
      return classLoader.loadClass(fc.getName()) == fc;
    } catch (ClassNotFoundException e) {
      return false;
    }
  }",Returns true if the types classloader has the same version of cglib that BytecodeGen has . This only returns false in strange OSGI situations but it prevents us from using FastClass for non public members .,core/src/com/google/inject/internal/BytecodeGen.java,"[{'Syntax': 'classLoader.loadClass(fc.getName())', 'FunctionName': 'loadClass', 'ArgsCount': 1, 'MethodBody': '@Override\n        public Class<?> loadClass(String name) throws ClassNotFoundException {\n          // This means for every class besides cls we delegate to our parent (so things like\n          // @Singleton and Object are well defined), but for this one class we load a new one in\n          // this loader.\n          if (name.equals(cls.getName())) {\n            Class<?> c = findLoadedClass(name);\n            if (c == null) {\n              return super.findClass(name);\n            }\n            return c;\n          }\n          return super.loadClass(name);\n        }', 'FileName': '/google/guice/core/test/com/google/inject/EagerSingletonTest.java'}, {'Syntax': 'fc.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getName() {\n      return name;\n    }', 'FileName': '/google/guice/extensions/assistedinject/test/com/google/inject/assistedinject/ManyConstructorsTest.java'}]"
6621cd8ccda9bd4817b1105b,lightcouch/LightCouch,"Response delete(URI uri) {
		HttpResponse response = null;
		try {
			HttpDelete delete = new HttpDelete(uri);
			response = executeRequest(delete); 
			return getResponse(response);
		} finally {
			close(response);
		}
	}",Performs a HTTP DELETE request .,src/main/java/org/lightcouch/CouchDbClientBase.java,"[{'Syntax': 'executeRequest(delete)', 'FunctionName': 'executeRequest', 'ArgsCount': 1, 'MethodBody': 'public HttpResponse executeRequest(HttpRequestBase request) {\n\t\ttry {\n\t\t\treturn  httpClient.execute(host, request, createContext());\n\t\t} catch (IOException e) {\n\t\t\trequest.abort();\n\t\t\tthrow new CouchDbException(""Error executing request. "", e);\n\t\t} \n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'getResponse(response)', 'FunctionName': 'getResponse', 'ArgsCount': 1, 'MethodBody': 'private Response getResponse(HttpResponse response) throws CouchDbException {\n\t\tInputStreamReader reader = new InputStreamReader(getStream(response), Charsets.UTF_8);\n\t\treturn getGson().fromJson(reader, Response.class);\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'close(response)', 'FunctionName': 'close', 'ArgsCount': 1, 'MethodBody': 'public static void close(HttpResponse response) {\n\t\ttry {\n\t\t\tclose(response.getEntity().getContent());\n\t\t} catch (Exception e) {}\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbUtil.java'}]"
6621cd8ccda9bd4817b1105c,khennig/jpql-querybuilder,"public static String join(final List<String> list) {

		// zero, empty or one element
		if (list == null) {
			return null;
		} else if (list.size() == 0) {
			return """";
		} else if (list.size() == 1) {
			return list.get(0);
		}

		// two or more elements
		final StringBuilder builder = new StringBuilder();
		for (String item : list) {
			if (builder.length() > 0) {
				builder.append("", "");
			}
			builder.append(item);
		}
		return builder.toString();

	}",Joins items of a text list separating items by comma .,src/main/java/com/tri/persistence/jpql/utils/StringUtils.java,[]
6621cd8ccda9bd4817b1105d,arnohaase/a-foundation,"private boolean awaitWork(WorkQueue w, int r) {
        if (w == null || w.qlock < 0)                 // w is terminating
            return false;
        for (int pred = w.stackPred, spins = SPINS, ss;;) {
            if ((ss = w.scanState) >= 0)
                break;
            else if (spins > 0) {
                r ^= r << 6; r ^= r >>> 21; r ^= r << 7;
                if (r >= 0 && --spins == 0) {         // randomize spins
                    WorkQueue v; WorkQueue[] ws; int s, j; AtomicLong sc;
                    if (pred != 0 && (ws = workQueues) != null &&
                        (j = pred & SMASK) < ws.length &&
                        (v = ws[j]) != null &&        // see if pred parking
                        (v.parker == null || v.scanState >= 0))
                        spins = SPINS;                // continue spinning
                }
            }
            else if (w.qlock < 0)                     // recheck after spins
                return false;
            else if (!Thread.interrupted()) {
                long c, prevctl, parkTime, deadline;
                int ac = (int)((c = ctl) >> AC_SHIFT) + (config & SMASK);
                if ((ac <= 0 && tryTerminate(false, false)) ||
                    (runState & STOP) != 0)           // pool terminating
                    return false;
                if (ac <= 0 && ss == (int)c) {        // is last waiter
                    prevctl = (UC_MASK & (c + AC_UNIT)) | (SP_MASK & pred);
                    int t = (short)(c >>> TC_SHIFT);  // shrink excess spares
                    if (t > 2 && U.compareAndSwapLong(this, CTL, c, prevctl))
                        return false;                 // else use timed wait
                    parkTime = IDLE_TIMEOUT * ((t >= 0) ? 1 : 1 - t);
                    deadline = System.nanoTime() + parkTime - TIMEOUT_SLOP;
                }
                else
                    prevctl = parkTime = deadline = 0L;
                Thread wt = Thread.currentThread();
                U.putObject(wt, PARKBLOCKER, this);   // emulate LockSupport
                w.parker = wt;
                if (w.scanState < 0 && ctl == c)      // recheck before park
                    U.park(false, parkTime);
                U.putOrderedObject(w, QPARKER, null);
                U.putObject(wt, PARKBLOCKER, null);
                if (w.scanState >= 0)
                    break;
                if (parkTime != 0L && ctl == c &&
                    deadline - System.nanoTime() <= 0L &&
                    U.compareAndSwapLong(this, CTL, c, prevctl))
                    return false;                     // shrink pool
            }
        }
        return true;
    }",Possibly blocks worker w waiting for a task to steal or returns false if the worker should terminate . If inactivating w has caused the pool to become quiescent checks for pool termination and so long as this is not the only worker waits for up to a given duration . On timeout if ctl has not changed terminates the worker which will in turn wake up another worker to possibly repeat this process .,a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java,"[{'Syntax': 'tryTerminate(false, false)', 'FunctionName': 'tryTerminate', 'ArgsCount': 2, 'MethodBody': ""private boolean tryTerminate(boolean now, boolean enable) {\n        int rs;\n        if (this == common)                       // cannot shut down\n            return false;\n        if ((rs = runState) >= 0) {\n            if (!enable)\n                return false;\n            rs = lockRunState();                  // enter SHUTDOWN phase\n            unlockRunState(rs, (rs & ~RSLOCK) | SHUTDOWN);\n        }\n\n        if ((rs & STOP) == 0) {\n            if (!now) {                           // check quiescence\n                for (long oldSum = 0L;;) {        // repeat until stable\n                    WorkQueue[] ws; WorkQueue w; int m, b; long c;\n                    long checkSum = ctl;\n                    if ((int)(checkSum >> AC_SHIFT) + (config & SMASK) > 0)\n                        return false;             // still active workers\n                    if ((ws = workQueues) == null || (m = ws.length - 1) <= 0)\n                        break;                    // check queues\n                    for (int i = 0; i <= m; ++i) {\n                        if ((w = ws[i]) != null) {\n                            if ((b = w.base) != w.top || w.scanState >= 0 ||\n                                w.currentSteal != null) {\n                                tryRelease(c = ctl, ws[m & (int)c], AC_UNIT);\n                                return false;     // arrange for recheck\n                            }\n                            checkSum += b;\n                            if ((i & 1) == 0)\n                                w.qlock = -1;     // try to disable external\n                        }\n                    }\n                    if (oldSum == (oldSum = checkSum))\n                        break;\n                }\n            }\n            if ((runState & STOP) == 0) {\n                rs = lockRunState();              // enter STOP phase\n                unlockRunState(rs, (rs & ~RSLOCK) | STOP);\n            }\n        }\n\n        int pass = 0;                             // 3 passes to help terminate\n        for (long oldSum = 0L;;) {                // or until done or stable\n            WorkQueue[] ws; WorkQueue w; ForkJoinWorkerThread wt; int m;\n            long checkSum = ctl;\n            if ((short)(checkSum >>> TC_SHIFT) + (config & SMASK) <= 0 ||\n                (ws = workQueues) == null || (m = ws.length - 1) <= 0) {\n                if ((runState & TERMINATED) == 0) {\n                    rs = lockRunState();          // done\n                    unlockRunState(rs, (rs & ~RSLOCK) | TERMINATED);\n                    synchronized (this) { notifyAll(); } // for awaitTermination\n                }\n                break;\n            }\n            for (int i = 0; i <= m; ++i) {\n                if ((w = ws[i]) != null) {\n                    checkSum += w.base;\n                    w.qlock = -1;                 // try to disable\n                    if (pass > 0) {\n                        w.cancelAll();            // clear queue\n                        if (pass > 1 && (wt = w.owner) != null) {\n                            if (!wt.isInterrupted()) {\n                                try {             // unblock join\n                                    wt.interrupt();\n                                } catch (Throwable ignore) {\n                                }\n                            }\n                            if (w.scanState < 0)\n                                U.unpark(wt);     // wake up\n                        }\n                    }\n                }\n            }\n            if (checkSum != oldSum) {             // unstable\n                oldSum = checkSum;\n                pass = 0;\n            }\n            else if (pass > 3 && pass > m)        // can't further help\n                break;\n            else if (++pass > 1) {                // try to dequeue\n                long c; int j = 0, sp;            // bound attempts\n                while (j++ <= m && (sp = (int)(c = ctl)) != 0)\n                    tryRelease(c, ws[sp & m], AC_UNIT);\n            }\n        }\n        return true;\n    }"", 'FileName': '/arnohaase/a-foundation/a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java'}]"
6621cd8ccda9bd4817b1105e,Unidata/thredds,"static public SimpleUnit factory(String name) {
    try {
      return factoryWithExceptions(name);
    } catch (Exception e) {
      if (debugParse) System.out.println(""Parse "" + name + "" got Exception "" + e);
      return null;
    }
  }",Create a SimpleUnit from the given name catch Exceptions .,cdm/src/main/java/ucar/nc2/units/SimpleUnit.java,[]
6621cd8ccda9bd4817b1105f,tiefaces/TieFaces,"private static Ptg[] convertPtg(final Ptg[] ptgs, final int position,
			final ShiftFormulaRef shiftFormulaRef, final Object ptg) {

		byte originalOperandClass = -1;

		if (!((Ptg) ptg).isBaseToken()) {
			originalOperandClass = ((Ptg) ptg).getPtgClass();
		}

		int currentRow;
		currentRow = getFirstSupportedRowNumFromPtg(ptg);
		if ((currentRow >= 0)
				&& shiftFormulaRef.getWatchList().contains(currentRow)) {
			return convertPtgForWatchList(ptgs, position, shiftFormulaRef,
					ptg, originalOperandClass, currentRow);

		}
		// no need change ptg
		if ((ptg instanceof AttrPtg)
				&& (shiftFormulaRef.getFormulaChanged() > 1)) {
			AttrPtg newPtg = (AttrPtg) ptg;
			if (newPtg.isSum()) {
				FuncVarPtg fptg = FuncVarPtg.create(""sum"",
						shiftFormulaRef.getFormulaChanged());
				return singlePtg(fptg, fptg.getPtgClass(),
						shiftFormulaRef.getFormulaChanged());
			}
		}
		return singlePtg(ptg, originalOperandClass,
				shiftFormulaRef.getFormulaChanged());

	}",Convert ptg .,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,"[{'Syntax': 'getFirstSupportedRowNumFromPtg(ptg)', 'FunctionName': 'getFirstSupportedRowNumFromPtg', 'ArgsCount': 1, 'MethodBody': 'public static int getFirstSupportedRowNumFromPtg(final Object ptg) {\r\n\r\n\t\tint rCode = -1;\r\n\t\tif (ptg instanceof RefPtgBase) {\r\n\t\t\tif (!(ptg instanceof Ref3DPxg) && !(ptg instanceof Ref3DPtg)) {\r\n\t\t\t\trCode = ((RefPtgBase) ptg).getRow();\r\n\t\t\t}\r\n\t\t} else if (ptg instanceof AreaPtgBase && !(ptg instanceof Area3DPxg)\r\n\t\t\t\t&& !(ptg instanceof Area3DPtg)) {\r\n\t\t\trCode = ((AreaPtgBase) ptg).getFirstRow();\r\n\r\n\t\t}\r\n\r\n\t\treturn rCode;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java'}, {'Syntax': 'shiftFormulaRef.getWatchList()', 'FunctionName': 'getWatchList', 'ArgsCount': 0, 'MethodBody': 'public final List<Integer> getWatchList() {\r\n\t\treturn watchList;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigBuildRef.java'}, {'Syntax': 'convertPtgForWatchList(ptgs, position, shiftFormulaRef,\r\n\t\t\t\t\tptg, originalOperandClass, currentRow)', 'FunctionName': 'convertPtgForWatchList', 'ArgsCount': 6, 'MethodBody': 'private static Ptg[] convertPtgForWatchList(final Ptg[] ptgs,\r\n\t\t\tfinal int position, final ShiftFormulaRef shiftFormulaRef,\r\n\t\t\tfinal Object ptg, final byte originalOperandClass,\r\n\t\t\tfinal int currentRow) {\r\n\t\tList<SerialRow> rowlist = getRowsList(currentRow,\r\n\t\t\t\tshiftFormulaRef.getCurrentRowsMappingList());\r\n\t\tif ((rowlist == null) || (rowlist.isEmpty())) {\r\n\t\t\t// no need change ptg\r\n\t\t\treturn singlePtg(ptg, originalOperandClass, -1);\r\n\t\t}\r\n\t\tshiftFormulaRef.setFormulaChanged(1);\r\n\t\t// one to one or has no round brackets\r\n\t\tif ((rowlist.size() == 1) || ((position + 1) >= ptgs.length)\r\n\t\t\t\t|| !(ptgs[position + 1] instanceof ParenthesisPtg)) {\r\n\t\t\t// change ptg one to one\r\n\t\t\t// return changed ptg\r\n\t\t\treturn singlePtg(\r\n\t\t\t\t\tfixupRefRelativeRowOneToOne(ptg,\r\n\t\t\t\t\t\t\trowlist.get(0).getRow()),\r\n\t\t\t\t\toriginalOperandClass, -1);\r\n\t\t}\r\n\t\tshiftFormulaRef.setFormulaChanged(rowlist.size());\r\n\t\treturn fixupRefRelativeRowOneToMany(ptg, originalOperandClass,\r\n\t\t\t\trowlist, ptgs, position);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java'}, {'Syntax': 'shiftFormulaRef.getFormulaChanged()', 'FunctionName': 'getFormulaChanged', 'ArgsCount': 0, 'MethodBody': 'public final int getFormulaChanged() {\r\n\t\treturn formulaChanged;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ShiftFormulaRef.java'}, {'Syntax': 'shiftFormulaRef.getFormulaChanged()', 'FunctionName': 'getFormulaChanged', 'ArgsCount': 0, 'MethodBody': 'public final int getFormulaChanged() {\r\n\t\treturn formulaChanged;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ShiftFormulaRef.java'}, {'Syntax': 'singlePtg(fptg, fptg.getPtgClass(),\r\n\t\t\t\t\t\tshiftFormulaRef.getFormulaChanged())', 'FunctionName': 'singlePtg', 'ArgsCount': 3, 'MethodBody': 'private static Ptg[] singlePtg(final Object ptg,\r\n\t\t\tfinal byte originalOperandClass, final int formulaChanged) {\r\n\t\tPtg[] newPtg = new Ptg[1];\r\n\t\tif (originalOperandClass != (-1)) {\r\n\t\t\t((Ptg) ptg).setClass(originalOperandClass);\r\n\t\t}\r\n\t\tObject ptgAfter = ptg;\r\n\t\tif (ptg instanceof FuncVarPtg) {\r\n\t\t\tFuncVarPtg fptg = (FuncVarPtg) ptg;\r\n\t\t\tif ((formulaChanged > 0)\r\n\t\t\t\t\t&& (fptg.getNumberOfOperands() != formulaChanged)) {\r\n\t\t\t\tptgAfter = FuncVarPtg.create(((FuncVarPtg) ptg).getName(),\r\n\t\t\t\t\t\tformulaChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnewPtg[0] = (Ptg) ptgAfter;\r\n\t\treturn newPtg;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java'}, {'Syntax': 'shiftFormulaRef.getFormulaChanged()', 'FunctionName': 'getFormulaChanged', 'ArgsCount': 0, 'MethodBody': 'public final int getFormulaChanged() {\r\n\t\treturn formulaChanged;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ShiftFormulaRef.java'}, {'Syntax': 'singlePtg(ptg, originalOperandClass,\r\n\t\t\t\tshiftFormulaRef.getFormulaChanged())', 'FunctionName': 'singlePtg', 'ArgsCount': 3, 'MethodBody': 'private static Ptg[] singlePtg(final Object ptg,\r\n\t\t\tfinal byte originalOperandClass, final int formulaChanged) {\r\n\t\tPtg[] newPtg = new Ptg[1];\r\n\t\tif (originalOperandClass != (-1)) {\r\n\t\t\t((Ptg) ptg).setClass(originalOperandClass);\r\n\t\t}\r\n\t\tObject ptgAfter = ptg;\r\n\t\tif (ptg instanceof FuncVarPtg) {\r\n\t\t\tFuncVarPtg fptg = (FuncVarPtg) ptg;\r\n\t\t\tif ((formulaChanged > 0)\r\n\t\t\t\t\t&& (fptg.getNumberOfOperands() != formulaChanged)) {\r\n\t\t\t\tptgAfter = FuncVarPtg.create(((FuncVarPtg) ptg).getName(),\r\n\t\t\t\t\t\tformulaChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t\tnewPtg[0] = (Ptg) ptgAfter;\r\n\t\treturn newPtg;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java'}, {'Syntax': 'shiftFormulaRef.getFormulaChanged()', 'FunctionName': 'getFormulaChanged', 'ArgsCount': 0, 'MethodBody': 'public final int getFormulaChanged() {\r\n\t\treturn formulaChanged;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ShiftFormulaRef.java'}]"
6621cd8ccda9bd4817b11060,tiefaces/TieFaces,"private boolean checkErrorMessageFromObjectInContext(final int formRow, final int formCol, final FacesCell cell,
			final Cell poiCell, final String value, final SheetConfiguration sheetConfig, boolean updateGui) {

		@SuppressWarnings(""unchecked"")
		HashMap<String, TieCell> tieCells = (HashMap<String, TieCell>) parent.getSerialDataContext().getDataContext()
				.get(""tiecells"");

		if (tieCells != null) {

			TieCell tieCell = tieCells.get(CellUtility.getSkeyFromPoiCell(poiCell));

			if (tieCell != null && tieCell.getContextObject() != null) {

				String errorMethod = tieCell.getMethodStr() + parent.getConfigAdvancedContext().getErrorSuffix();

				String errorMessage = CellControlsUtility.getObjectPropertyValue(tieCell.getContextObject(),
						errorMethod, true);

				if (errorMessage != null && !errorMessage.isEmpty()) {
					cell.setErrormsg(errorMessage);
					LOG.log(Level.INFO, ""Validation failed for sheet {0} row {1} column {2} : {3}"",
							new Object[] { poiCell.getSheet().getSheetName(), poiCell.getRowIndex(),
									poiCell.getColumnIndex(), errorMessage });
					refreshAfterStatusChanged(false, true, formRow, formCol, cell, updateGui);
					return false;
				}

			}
		}

		return true;

	}",Check error message from object in context .,src/org/tiefaces/components/websheet/service/ValidationHandler.java,"[{'Syntax': 'parent.getSerialDataContext().getDataContext()\r\n\t\t\t\t.get(""tiecells"")', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'parent.getSerialDataContext().getDataContext()', 'FunctionName': 'getDataContext', 'ArgsCount': 0, 'MethodBody': 'public final Map<String, Object> getDataContext() {\r\n\t\treturn dataContext;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialDataContext.java'}, {'Syntax': 'parent.getSerialDataContext()', 'FunctionName': 'getSerialDataContext', 'ArgsCount': 0, 'MethodBody': 'public SerialDataContext getSerialDataContext() {\r\n\t\tif (serialDataContext == null) {\r\n\t\t\tserialDataContext = new SerialDataContext();\r\n\t\t}\r\n\t\treturn serialDataContext;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'tieCells.get(CellUtility.getSkeyFromPoiCell(poiCell))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'CellUtility.getSkeyFromPoiCell(poiCell)', 'FunctionName': 'getSkeyFromPoiCell', 'ArgsCount': 1, 'MethodBody': 'public static String getSkeyFromPoiCell(final Cell poiCell) {\r\n\t\treturn poiCell.getSheet().getSheetName() + ""!""\r\n\t\t\t\t+ CellUtility.getCellIndexNumberKey(poiCell.getColumnIndex(), poiCell.getRowIndex());\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellUtility.java'}, {'Syntax': 'tieCell.getContextObject()', 'FunctionName': 'getContextObject', 'ArgsCount': 0, 'MethodBody': 'public Object getContextObject() {\n\treturn contextObject;\n    }', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/TieCell.java'}, {'Syntax': 'tieCell.getMethodStr()', 'FunctionName': 'getMethodStr', 'ArgsCount': 0, 'MethodBody': 'public String getMethodStr() {\n\treturn methodStr;\n    }', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/TieCell.java'}, {'Syntax': 'parent.getConfigAdvancedContext().getErrorSuffix()', 'FunctionName': 'getErrorSuffix', 'ArgsCount': 0, 'MethodBody': 'public String getErrorSuffix() {\n\treturn errorSuffix;\n    }', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigAdvancedContext.java'}, {'Syntax': 'parent.getConfigAdvancedContext()', 'FunctionName': 'getConfigAdvancedContext', 'ArgsCount': 0, 'MethodBody': 'public ConfigAdvancedContext getConfigAdvancedContext() {\r\n\t\treturn configAdvancedContext;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'CellControlsUtility.getObjectPropertyValue(tieCell.getContextObject(),\r\n\t\t\t\t\t\terrorMethod, true)', 'FunctionName': 'getObjectPropertyValue', 'ArgsCount': 3, 'MethodBody': 'public static String getObjectPropertyValue(final Object obj,\r\n\t\t\tfinal String propertyName, final boolean ignoreNonExisting) {\r\n\t\ttry {\r\n\t\t\tMethod method = obj.getClass()\r\n\t\t\t\t\t.getMethod(""get""\r\n\t\t\t\t\t\t\t+ Character.toUpperCase(propertyName.charAt(0))\r\n\t\t\t\t\t\t\t+ propertyName.substring(1));\r\n\t\t\treturn (String) method.invoke(obj);\r\n\t\t} catch (Exception e) {\r\n\t\t\tString msg = ""failed to get property \'"" + propertyName\r\n\t\t\t\t\t+ ""\' for object "" + obj;\r\n\t\t\tif (ignoreNonExisting) {\r\n\t\t\t\tLOG.log(Level.FINE, msg, e);\r\n\t\t\t} else {\r\n\t\t\t\tLOG.warning(msg);\r\n\t\t\t\tthrow new IllegalArgumentException(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellControlsUtility.java'}, {'Syntax': 'tieCell.getContextObject()', 'FunctionName': 'getContextObject', 'ArgsCount': 0, 'MethodBody': 'public Object getContextObject() {\n\treturn contextObject;\n    }', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/TieCell.java'}, {'Syntax': 'errorMessage.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final boolean isEmpty() {\r\n\t\treturn false;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'cell.setErrormsg(errorMessage)', 'FunctionName': 'setErrormsg', 'ArgsCount': 1, 'MethodBody': 'public final void setErrormsg(final String perrormsg) {\r\n\t\tthis.errormsg = perrormsg;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/FacesCell.java'}, {'Syntax': 'poiCell.getSheet().getSheetName()', 'FunctionName': 'getSheetName', 'ArgsCount': 0, 'MethodBody': 'public final String getSheetName() {\r\n\t\treturn sheetName;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}, {'Syntax': 'poiCell.getSheet()', 'FunctionName': 'getSheet', 'ArgsCount': 0, 'MethodBody': 'public final Sheet getSheet() {\r\n\t\treturn sheet;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigBuildRef.java'}, {'Syntax': 'poiCell.getRowIndex()', 'FunctionName': 'getRowIndex', 'ArgsCount': 0, 'MethodBody': 'public final int getRowIndex() {\r\n\t\treturn rowIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialRow.java'}, {'Syntax': 'poiCell.getColumnIndex()', 'FunctionName': 'getColumnIndex', 'ArgsCount': 0, 'MethodBody': 'public final int getColumnIndex() {\r\n\t\treturn columnIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/FacesCell.java'}, {'Syntax': 'refreshAfterStatusChanged(false, true, formRow, formCol, cell, updateGui)', 'FunctionName': 'refreshAfterStatusChanged', 'ArgsCount': 6, 'MethodBody': 'private void refreshAfterStatusChanged(final boolean oldStatus, final boolean newStatus, final int formRow,\r\n\t\t\tfinal int formCol, final FacesCell cell, final boolean updateGui) {\r\n\r\n\t\tif (!newStatus) {\r\n\t\t\tcell.setErrormsg("""");\r\n\t\t}\r\n\t\tcell.setInvalid(newStatus);\r\n\t\tif (updateGui && (oldStatus != newStatus) && (parent.getWebFormClientId() != null)) {\r\n\t\t\tRequestContext.getCurrentInstance()\r\n\t\t\t\t\t.update(parent.getWebFormClientId() + "":"" + (formRow) + "":group"" + (formCol));\r\n\t\t}\r\n\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/service/ValidationHandler.java'}]"
6621cd8ccda9bd4817b11061,RestComm/jain-slee,"public void removeObjectPool(final ProfileTableImpl profileTable,
			final SleeTransactionManager sleeTransactionManager) {

		
		TransactionalAction action = new TransactionalAction() {
			public void execute() {
				if (logger.isTraceEnabled()) {
		            logger.trace(""Removing Pool for "" + profileTable);
				}

				removeObjectPool(profileTable);
			}
		};
		
		if (sleeTransactionManager != null) {
			sleeTransactionManager.getTransactionContext().getAfterCommitActions().add(action);			
		}
		else {
			action.execute();
		}
	}",Removes the object pool for the specified profile table . If a transaction manager is used then the removal is only after the tx commit .,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectPoolManagement.java,"[{'Syntax': 'removeObjectPool(profileTable)', 'FunctionName': 'removeObjectPool', 'ArgsCount': 1, 'MethodBody': 'private void removeObjectPool(final ProfileTableImpl profileTable) {\n\t\tfinal ProfileObjectPool objectPool = pools.remove(profileTable.getProfileTableName());\n\t\tif (objectPool != null) {\n\t\t\ttry {\n\t\t\t\tobjectPool.close();\n\t\t\t} catch (Exception e) {\n\t\t\t\tlogger.error(""failed to close pool"",e);\n\t\t\t}\n\t\t}\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(""Removed Pool for "" + profileTable);\n\t\t}\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectPoolManagement.java'}, {'Syntax': 'sleeTransactionManager.getTransactionContext().getAfterCommitActions().add(action)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(Button button) {\r\n    rootPanel.add(button);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/common/ToolBar.java'}, {'Syntax': 'sleeTransactionManager.getTransactionContext().getAfterCommitActions()', 'FunctionName': 'getAfterCommitActions', 'ArgsCount': 0, 'MethodBody': 'public List<TransactionalAction> getAfterCommitActions() {\r\n\t\tif (afterCommitActions == null) {\r\n\t\t\tafterCommitActions = new ArrayList<TransactionalAction>();\r\n\t\t}\r\n\t\treturn afterCommitActions;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/TransactionContextImpl.java'}, {'Syntax': 'sleeTransactionManager.getTransactionContext()', 'FunctionName': 'getTransactionContext', 'ArgsCount': 0, 'MethodBody': 'public TransactionContext getTransactionContext() {\n\t\tTransactionContext txContext = TransactionContextThreadLocal.getTransactionContext();\n\t\tif (txContext == null) {\n\t\t\ttry {\n\t\t\t\tfinal Transaction tx = transactionManager.getTransaction();\n\t\t\t\tif (tx != null && tx.getStatus() == Status.STATUS_ACTIVE) {\n\t\t\t\t\t// a tx was started with the real tx manager, lets try to hook the sync handler and a new tx context\n\t\t\t\t\ttxContext = bindToTransaction(tx);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Throwable e) {\n\t\t\t\tthrow new SLEEException(e.getMessage(), e);\n\t\t\t}\n\t\t}\n\t\treturn txContext;\n\t}', 'FileName': '/RestComm/jain-slee/container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/SleeTransactionManagerImpl.java'}, {'Syntax': 'action.execute()', 'FunctionName': 'execute', 'ArgsCount': 0, 'MethodBody': 'public void execute() {\r\n              select(fq);\r\n            }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/common/BrowseContainer.java'}]"
6621cd8ccda9bd4817b11062,TooTallNate/Java-WebSocket,"private void doAccept(SelectionKey key, Iterator<SelectionKey> i) throws IOException, InterruptedException {
		if( !onConnect( key ) ) {
			key.cancel();
			return;
		}

		SocketChannel channel = server.accept();
		if(channel==null){
			return;
		}
		channel.configureBlocking( false );
		Socket socket = channel.socket();
		socket.setTcpNoDelay( isTcpNoDelay() );
		socket.setKeepAlive( true );
		WebSocketImpl w = wsf.createWebSocket( this, drafts );
		w.setSelectionKey(channel.register( selector, SelectionKey.OP_READ, w ));
		try {
			w.setChannel( wsf.wrapChannel( channel, w.getSelectionKey() ));
			i.remove();
			allocateBuffers( w );
		} catch (IOException ex) {
			if( w.getSelectionKey() != null )
				w.getSelectionKey().cancel();

			handleIOException( w.getSelectionKey(), null, ex );
		}
	}",Execute a accept operation,src/main/java/org/java_websocket/server/WebSocketServer.java,"[{'Syntax': 'onConnect( key )', 'FunctionName': 'onConnect', 'ArgsCount': 1, 'MethodBody': 'protected boolean onConnect(SelectionKey key) {\n    return true;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}, {'Syntax': 'channel.configureBlocking( false )', 'FunctionName': 'configureBlocking', 'ArgsCount': 1, 'MethodBody': 'public SelectableChannel configureBlocking(boolean b) throws IOException {\n    return socketChannel.configureBlocking(b);\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/SSLSocketChannel2.java'}, {'Syntax': 'channel.socket()', 'FunctionName': 'socket', 'ArgsCount': 0, 'MethodBody': 'public Socket socket() {\n    return socketChannel.socket();\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/SSLSocketChannel2.java'}, {'Syntax': 'socket.setTcpNoDelay( isTcpNoDelay() )', 'FunctionName': 'setTcpNoDelay', 'ArgsCount': 1, 'MethodBody': 'public void setTcpNoDelay(boolean tcpNoDelay) {\n    this.tcpNoDelay = tcpNoDelay;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/AbstractWebSocket.java'}, {'Syntax': 'isTcpNoDelay()', 'FunctionName': 'isTcpNoDelay', 'ArgsCount': 0, 'MethodBody': 'public boolean isTcpNoDelay() {\n    return tcpNoDelay;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/AbstractWebSocket.java'}, {'Syntax': 'wsf.createWebSocket( this, drafts )', 'FunctionName': 'createWebSocket', 'ArgsCount': 2, 'MethodBody': '@Override\n    public WebSocketImpl createWebSocket(WebSocketAdapter a, Draft d) {\n      return null;\n    }', 'FileName': '/TooTallNate/Java-WebSocket/src/test/java/org/java_websocket/issues/Issue765Test.java'}, {'Syntax': 'w.setSelectionKey(channel.register( selector, SelectionKey.OP_READ, w ))', 'FunctionName': 'setSelectionKey', 'ArgsCount': 1, 'MethodBody': 'public void setSelectionKey(SelectionKey key) {\n    this.key = key;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'w.setChannel( wsf.wrapChannel( channel, w.getSelectionKey() ))', 'FunctionName': 'setChannel', 'ArgsCount': 1, 'MethodBody': 'public void setChannel(ByteChannel channel) {\n    this.channel = channel;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'wsf.wrapChannel( channel, w.getSelectionKey() )', 'FunctionName': 'wrapChannel', 'ArgsCount': 2, 'MethodBody': '@Override\n    public ByteChannel wrapChannel(SocketChannel channel, SelectionKey key) throws IOException {\n      return null;\n    }', 'FileName': '/TooTallNate/Java-WebSocket/src/test/java/org/java_websocket/issues/Issue765Test.java'}, {'Syntax': 'w.getSelectionKey()', 'FunctionName': 'getSelectionKey', 'ArgsCount': 0, 'MethodBody': 'public SelectionKey getSelectionKey() {\n    return key;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'allocateBuffers( w )', 'FunctionName': 'allocateBuffers', 'ArgsCount': 1, 'MethodBody': 'protected void allocateBuffers(WebSocket c) throws InterruptedException {\n    if (queuesize.get() >= 2 * decoders.size() + 1) {\n      return;\n    }\n    queuesize.incrementAndGet();\n    buffers.put(createBuffer());\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}, {'Syntax': 'w.getSelectionKey()', 'FunctionName': 'getSelectionKey', 'ArgsCount': 0, 'MethodBody': 'public SelectionKey getSelectionKey() {\n    return key;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'w.getSelectionKey()', 'FunctionName': 'getSelectionKey', 'ArgsCount': 0, 'MethodBody': 'public SelectionKey getSelectionKey() {\n    return key;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'handleIOException( w.getSelectionKey(), null, ex )', 'FunctionName': 'handleIOException', 'ArgsCount': 3, 'MethodBody': 'private void handleIOException(SelectionKey key, WebSocket conn, IOException ex) {\n    // onWebsocketError( conn, ex );// conn may be null here\n    if (key != null) {\n      key.cancel();\n    }\n    if (conn != null) {\n      conn.closeConnection(CloseFrame.ABNORMAL_CLOSE, ex.getMessage());\n    } else if (key != null) {\n      SelectableChannel channel = key.channel();\n      if (channel != null && channel\n          .isOpen()) { // this could be the case if the IOException ex is a SSLException\n        try {\n          channel.close();\n        } catch (IOException e) {\n          // there is nothing that must be done here\n        }\n        log.trace(""Connection closed because of exception"", ex);\n      }\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}, {'Syntax': 'w.getSelectionKey()', 'FunctionName': 'getSelectionKey', 'ArgsCount': 0, 'MethodBody': 'public SelectionKey getSelectionKey() {\n    return key;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}]"
6621cd8ccda9bd4817b11063,wildfly/wildfly,"public void addPostActivateInterceptor(InterceptorFactory interceptorFactory, int priority) {
        postActivateInterceptors.add(Collections.singletonList(interceptorFactory), priority);
    }",Adds a post activate interceptor,ee/src/main/java/org/jboss/as/ee/component/ComponentConfiguration.java,"[{'Syntax': 'postActivateInterceptors.add(Collections.singletonList(interceptorFactory), priority)', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': 'public void add(final T item, int priority) {\n        if(sortedItems != null) {\n            throw EeLogger.ROOT_LOGGER.cannotAddMoreItems();\n        }\n        if(item == null) {\n            throw EeLogger.ROOT_LOGGER.nullVar(""item"");\n        }\n        final T current = items.get(priority);\n        if (current != null) {\n            throw EeLogger.ROOT_LOGGER.priorityAlreadyExists(item, toHexString(priority), current);\n        }\n        items.put(priority, item);\n    }', 'FileName': '/wildfly/wildfly/ee/src/main/java/org/jboss/as/ee/component/interceptors/OrderedItemContainer.java'}]"
6621cd8ccda9bd4817b11064,spring-projects/spring-security,"Serializable identifierFrom(Serializable identifier, ResultSet resultSet) throws SQLException {
		if (isString(identifier) && hasValidClassIdType(resultSet)
			&& canConvertFromStringTo(classIdTypeFrom(resultSet))) {

			identifier = convertFromStringTo((String) identifier, classIdTypeFrom(resultSet));
		} else {
			// Assume it should be a Long type
			identifier = convertToLong(identifier);
		}

		return identifier;
	}",Converts the raw type from the database into the right Java type . For most applications the raw type will be Long for some applications it could be String .,acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java,"[{'Syntax': 'isString(identifier)', 'FunctionName': 'isString', 'ArgsCount': 1, 'MethodBody': 'private boolean isString(Serializable object) {\n\t\treturn object.getClass().isAssignableFrom(String.class);\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java'}, {'Syntax': 'hasValidClassIdType(resultSet)', 'FunctionName': 'hasValidClassIdType', 'ArgsCount': 1, 'MethodBody': 'private boolean hasValidClassIdType(ResultSet resultSet) {\n\t\ttry {\n\t\t\treturn classIdTypeFrom(resultSet) != null;\n\t\t}\n\t\tcatch (SQLException ex) {\n\t\t\tlog.debug(""Unable to obtain the class id type"", ex);\n\t\t\treturn false;\n\t\t}\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java'}, {'Syntax': 'canConvertFromStringTo(classIdTypeFrom(resultSet))', 'FunctionName': 'canConvertFromStringTo', 'ArgsCount': 1, 'MethodBody': 'private <T> boolean canConvertFromStringTo(Class<T> targetType) {\n\t\treturn this.conversionService.canConvert(String.class, targetType);\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java'}, {'Syntax': 'classIdTypeFrom(resultSet)', 'FunctionName': 'classIdTypeFrom', 'ArgsCount': 1, 'MethodBody': 'private <T extends Serializable> Class<T> classIdTypeFrom(ResultSet resultSet) throws SQLException {\n\t\treturn classIdTypeFrom(resultSet.getString(DEFAULT_CLASS_ID_TYPE_COLUMN_NAME));\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java'}, {'Syntax': 'convertFromStringTo((String) identifier, classIdTypeFrom(resultSet))', 'FunctionName': 'convertFromStringTo', 'ArgsCount': 2, 'MethodBody': 'private <T extends Serializable> T convertFromStringTo(String identifier, Class<T> targetType) {\n\t\treturn this.conversionService.convert(identifier, targetType);\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java'}, {'Syntax': 'classIdTypeFrom(resultSet)', 'FunctionName': 'classIdTypeFrom', 'ArgsCount': 1, 'MethodBody': 'private <T extends Serializable> Class<T> classIdTypeFrom(ResultSet resultSet) throws SQLException {\n\t\treturn classIdTypeFrom(resultSet.getString(DEFAULT_CLASS_ID_TYPE_COLUMN_NAME));\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java'}, {'Syntax': 'convertToLong(identifier)', 'FunctionName': 'convertToLong', 'ArgsCount': 1, 'MethodBody': 'private Long convertToLong(Serializable identifier) {\n\t\tif (this.conversionService.canConvert(identifier.getClass(), Long.class)) {\n\t\t\treturn this.conversionService.convert(identifier, Long.class);\n\t\t}\n\t\treturn Long.valueOf(identifier.toString());\n\t}', 'FileName': '/spring-projects/spring-security/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java'}]"
6621cd8ccda9bd4817b11065,real-logic/aeron,"public ChannelUriStringBuilder clear()
    {
        prefix = null;
        media = null;
        endpoint = null;
        networkInterface = null;
        controlEndpoint = null;
        controlMode = null;
        tags = null;
        alias = null;
        reliable = null;
        ttl = null;
        mtu = null;
        termLength = null;
        initialTermId = null;
        termId = null;
        termOffset = null;
        sessionId = null;
        linger = null;
        sparse = null;
        eos = null;
        tether = null;
        isSessionIdTagged = false;

        return this;
    }",Clear out all the values thus setting back to the initial state .,aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java,[]
6621cd8ccda9bd4817b11066,rupertlssmith/lojix,"public void execute() throws MojoExecutionException, MojoFailureException
    {
        //log.debug(""public void execute() throws MojoExecutionException: called"");

        // Turn each of the test runner command lines into a script.
        for (String commandName : commands.keySet())
        {
            if (scriptOutDirectory != null)
            {
                writeUnixScript(commandName, scriptOutDirectory);
                writeWindowsScript(commandName, scriptOutDirectory);
            }
        }
    }",Implementation of the script goal .,base/run-plugin/src/main/com/thesett/maven/run/ScriptGenMojo.java,"[{'Syntax': 'commands.keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': 'public Set keySet()\n    {\n        // Synchronize on the cache to ensure its integrity in a multi-threaded environment.\n        synchronized (cache)\n        {\n            return cache.keySet();\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/TimeoutMap.java'}, {'Syntax': 'writeUnixScript(commandName, scriptOutDirectory)', 'FunctionName': 'writeUnixScript', 'ArgsCount': 2, 'MethodBody': 'protected void writeUnixScript(String commandName, String outputDirectory)\n    {\n        String testOptions = commands.get(commandName);\n        String commandLine = ""java "";\n\n        String logdir = null;\n\n        if (systemproperties != null)\n        {\n            for (Object key : systemproperties.keySet())\n            {\n                String keyString = (String) key;\n                String value = systemproperties.getProperty(keyString);\n\n                if (keyString.equals(""logdir""))\n                {\n                    logdir = value;\n                }\n                else\n                {\n                    if (keyString.startsWith(""-X""))\n                    {\n                        commandLine += keyString + value + "" "";\n                    }\n                    else\n                    {\n                        commandLine += ""-D"" + keyString + ""="" + value + "" "";\n                    }\n                }\n            }\n        }\n\n        commandLine += ""${JAVA_OPTS} -cp "";\n        commandLine = appendClasspath(commandLine, true);\n        commandLine += "" "" + ((testOptions != null) ? testOptions : """") + "" ${ARGS}"";\n\n        log.info(""Generating Script for command: "" + commandName);\n        // log.debug(commandLine);\n\n        // Ensure that the output directory for the script exists.\n        boolean madeDirectory = new File(outputDirectory).mkdir();\n\n        String fileName = outputDirectory + ""/"" + commandName;\n\n        try\n        {\n            File scriptFile = new File(fileName);\n            Writer scriptWriter = new FileWriter(scriptFile);\n            scriptWriter.write(UNIX_SCRIPT_LANGUAGE);\n            scriptWriter.write(UNIX_OPT_PARSER);\n\n            if (logdir != null)\n            {\n                scriptWriter.write(""mkdir -p "" + logdir + ""\\n"");\n            }\n\n            scriptWriter.write(commandLine);\n            scriptWriter.flush();\n            scriptWriter.close();\n        }\n        catch (IOException e)\n        {\n            getLog().error(""Failed to write: "" + fileName);\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/run-plugin/src/main/com/thesett/maven/run/ScriptGenMojo.java'}, {'Syntax': 'writeWindowsScript(commandName, scriptOutDirectory)', 'FunctionName': 'writeWindowsScript', 'ArgsCount': 2, 'MethodBody': 'protected void writeWindowsScript(String commandName, String outputDirectory)\n    {\n        String testOptions = commands.get(commandName);\n        String commandLine = new String();\n\n        if (winStart)\n        {\n            commandLine += ""start "";\n        }\n\n        if (winJavaw)\n        {\n            commandLine += ""javaw "";\n        }\n        else\n        {\n            commandLine += ""java "";\n        }\n\n        String logdir = null;\n\n        if (systemproperties != null)\n        {\n            for (Object key : systemproperties.keySet())\n            {\n                String keyString = (String) key;\n                String value = systemproperties.getProperty(keyString);\n\n                if (keyString.equals(""logdir""))\n                {\n                    logdir = value;\n                }\n                else\n                {\n                    if (keyString.startsWith(""-X""))\n                    {\n                        commandLine += keyString + value + "" "";\n                    }\n                    else\n                    {\n                        commandLine += ""-D"" + keyString + ""="" + value + "" "";\n                    }\n                }\n            }\n        }\n\n        commandLine += ""-cp "";\n        commandLine = appendClasspath(commandLine, false);\n        commandLine += "" "" + ((testOptions != null) ? testOptions : """") + "" %*"";\n\n        log.info(""Generating Script for command: "" + commandName);\n        // log.debug(commandLine);\n\n        // Ensure that the output directory for the script exists.\n        boolean madeDirectory = new File(outputDirectory).mkdir();\n\n        String fileName = outputDirectory + ""/"" + commandName + "".bat"";\n\n        try\n        {\n            File scriptFile = new File(fileName);\n            Writer scriptWriter = new FileWriter(scriptFile);\n\n            if (logdir != null)\n            {\n                scriptWriter.write(""mkdir -p "" + logdir + ""\\n"");\n            }\n\n            scriptWriter.write(commandLine);\n            scriptWriter.flush();\n            scriptWriter.close();\n        }\n        catch (IOException e)\n        {\n            getLog().error(""Failed to write: "" + fileName);\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/run-plugin/src/main/com/thesett/maven/run/ScriptGenMojo.java'}]"
6621cd8ccda9bd4817b11067,jboss/jboss-common-core,"protected Object replaceObject(Object obj) throws IOException
   {
      if( (obj instanceof Remote) && !(obj instanceof RemoteStub) )
      {
         Remote remote = (Remote) obj;
         try
         {
            obj = RemoteObject.toStub(remote);
         }
         catch(IOException ignore)
         {
            // Let the Serialization layer try with the orignal obj
         }
      }
      return obj;
   }",Override replaceObject to check for Remote objects that are not RemoteStubs .,src/main/java/org/jboss/util/stream/MarshalledValueOutputStream.java,[]
6621cd8ccda9bd4817b11068,jboss/jboss-common-core,"public static Object copy(final Serializable obj)
      throws IOException, ClassNotFoundException
   {
      ObjectOutputStream out = null;
      ObjectInputStream in = null;
      Object copy = null;
      
      try {
         // write the object
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
         out = new ObjectOutputStream(baos);
         out.writeObject(obj);
         out.flush();

         // read in the copy
         byte data[] = baos.toByteArray();
         ByteArrayInputStream bais = new ByteArrayInputStream(data);
         in = new ObjectInputStream(bais);
         copy = in.readObject();
      }
      finally {
         Streams.close(out);
         Streams.close(in);
      }

      return copy;
   }",Copy an serializable object deeply .,src/main/java/org/jboss/util/Objects.java,"[{'Syntax': 'out.writeObject(obj)', 'FunctionName': 'writeObject', 'ArgsCount': 1, 'MethodBody': 'private void writeObject(java.io.ObjectOutputStream s) throws IOException\n   {\n      s.defaultWriteObject();\n      s.writeInt(size);\n\n      for (Entry<K, V> e : table)\n      {\n         if (e != null)\n         {\n            s.writeObject(unmaskNull(e.key));\n            s.writeObject(e.value);\n         }\n      }\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}, {'Syntax': 'out.flush()', 'FunctionName': 'flush', 'ArgsCount': 0, 'MethodBody': 'protected void flush() throws Exception\n      {\n         // Empty the queue of the posted jobs and exit\n         while (m_currentJob != null) \n         {\n            m_currentJob.m_job.execute();\n            m_currentJob = m_currentJob.m_next;\n         }\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/WorkerQueue.java'}, {'Syntax': 'Streams.close(out)', 'FunctionName': 'close', 'ArgsCount': 1, 'MethodBody': 'public static boolean close(final InputStream stream) {\n      // do not attempt to close null stream, but return sucess\n      if (stream == null) {\n         return true;\n      }\n      \n      boolean success = true;\n\n      try {\n         stream.close();\n      }\n      catch (IOException e) {\n         success = false;\n      }\n\n      return success;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/stream/Streams.java'}, {'Syntax': 'Streams.close(in)', 'FunctionName': 'close', 'ArgsCount': 1, 'MethodBody': 'public static boolean close(final InputStream stream) {\n      // do not attempt to close null stream, but return sucess\n      if (stream == null) {\n         return true;\n      }\n      \n      boolean success = true;\n\n      try {\n         stream.close();\n      }\n      catch (IOException e) {\n         success = false;\n      }\n\n      return success;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/stream/Streams.java'}]"
6621cd8ccda9bd4817b11069,liveontologies/elk-reasoner,"private static boolean updateIfSmaller(AtomicInteger counter, int value) {
		for (;;) {
			int snapshotCoutner = counter.get();
			if (snapshotCoutner >= value)
				return false;
			if (counter.compareAndSet(snapshotCoutner, value))
				return true;
		}
	}",Update the counter to the value provided it is greater . Regardless of the returned value it is guaranteed that the value of the counter after execution will be at least the input value .,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/saturation/ClassExpressionSaturationFactory.java,"[{'Syntax': 'counter.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public boolean get() {\n\t\treturn value_;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-common/src/main/java/org/semanticweb/elk/MutableBoolean.java'}]"
6621cd8ccda9bd4817b1106a,Unidata/thredds,"public void setDim(int dim, int value) {
    if (value < 0 || value >= shape[dim])  // check index here
      throw new ArrayIndexOutOfBoundsException();
    if (shape[dim] >= 0) //!vlen
      current[dim] = value;
  }",set current element at dimension dim to v,cdm/src/main/java/ucar/ma2/Index.java,[]
6621cd8dcda9bd4817b1106b,Unidata/thredds,"public Attribute addAttribute(Group parent, String name, String value) {
    if (immutable) throw new IllegalStateException(""Cant modify"");
    if (value == null) return null;
    if (parent == null) parent = rootGroup;
    Attribute att = new Attribute(name, value);
    parent.addAttribute(att);
    return att;
  }",Add optional String attribute to a group .,cdm/src/main/java/ucar/nc2/NetcdfFile.java,[]
6621cd8dcda9bd4817b1106c,lessthanoptimal/GeoRegression,"public static double distance( Polygon2D_F64 poly , Point2D_F64 p ) {
		return Math.sqrt(distanceSq(poly, p, null));
	}",Returns the Euclidean distance of the closest point on the Polygon to the provided point .,main/src/georegression/metric/Distance2D_F64.java,"[{'Syntax': 'distanceSq(poly, p, null)', 'FunctionName': 'distanceSq', 'ArgsCount': 3, 'MethodBody': 'public static double distanceSq( LineParametric2D_F64 line, double x, double y ) {\n\t\tdouble scale = Math.max(Math.abs(line.slope.x), Math.abs(line.slope.y));\n\n\t\tdouble t = ClosestPoint2D_F64.closestPointT(line, x, y, scale);\n\n\t\tdouble a = (line.slope.x/scale)*t + line.p.x;\n\t\tdouble b = (line.slope.y/scale)*t + line.p.y;\n\n\t\tdouble dx = x - a;\n\t\tdouble dy = y - b;\n\n\t\treturn dx*dx + dy*dy;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/metric/Distance2D_F64.java'}]"
6621cd8dcda9bd4817b1106d,kiegroup/droolsjbpm-tools,"public String getFieldName() {
        AlphaNodeFieldConstraint constraint = this.node.getConstraint();
        if (constraint instanceof MvelConstraint) {
        	MvelConstraint mvelConstraint = (MvelConstraint) constraint;
            InternalReadAccessor accessor = mvelConstraint.getFieldExtractor();
            if (accessor instanceof ClassFieldReader) {
                return ((ClassFieldReader) accessor).getFieldName();
            }
        }
        return null;
    }",Constraint has field extractor and this method is returning fieldName it .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/reteoo/AlphaNodeVertex.java,"[{'Syntax': 'this.node.getConstraint()', 'FunctionName': 'getConstraint', 'ArgsCount': 0, 'MethodBody': 'public Constraint getConstraint() {\n        return this.node.getConstraint();\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/reteoo/AlphaNodeVertex.java'}, {'Syntax': '((ClassFieldReader) accessor).getFieldName()', 'FunctionName': 'getFieldName', 'ArgsCount': 0, 'MethodBody': 'public String getFieldName() {\n        AlphaNodeFieldConstraint constraint = this.node.getConstraint();\n        if (constraint instanceof MVELConstraint) {\n            MVELConstraint mvelConstraint = (MVELConstraint) constraint;\n            InternalReadAccessor accessor = mvelConstraint.getFieldExtractor();\n            if (accessor instanceof ClassFieldReader) {\n                return ((ClassFieldReader) accessor).getFieldName();\n            }\n        }\n        return null;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/reteoo/AlphaNodeVertex.java'}]"
6621cd8dcda9bd4817b1106e,tiefaces/TieFaces,"public static void reBuildUpperLevelFormula(
			final ConfigBuildRef configBuildRef,
			final String actionFullName) {
		Map<Cell, String> cachedMap = configBuildRef.getCachedCells();
		Map<String, List<RowsMapping>> rowsMap = new HashMap<>();
		for (Map.Entry<Cell, String> entry : cachedMap.entrySet()) {
			Cell cell = entry.getKey();
			String originFormula = entry.getValue();
			if (originFormula != null) {
				setupUpperLevelFormula(cell, originFormula, actionFullName,
						rowsMap, configBuildRef);
			}
		}

	}",Re build upper level formula .,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,"[{'Syntax': 'configBuildRef.getCachedCells()', 'FunctionName': 'getCachedCells', 'ArgsCount': 0, 'MethodBody': 'public CachedCells getCachedCells() {\r\n\t\tif (cachedCells == null) {\r\n\t\t\tcachedCells = new CachedCells(this);\r\n\t\t}\r\n\t\treturn cachedCells;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'cachedMap.entrySet()', 'FunctionName': 'entrySet', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final Set entrySet() {\r\n\t\treturn emptySet;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'entry.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': 'public SerialCellAddress getKey() {\r\n\t\treturn key;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\r\n\t\treturn value;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'setupUpperLevelFormula(cell, originFormula, actionFullName,\r\n\t\t\t\t\t\trowsMap, configBuildRef)', 'FunctionName': 'setupUpperLevelFormula', 'ArgsCount': 5, 'MethodBody': 'private static void setupUpperLevelFormula(final Cell cell,\r\n\t\t\tfinal String originFormula, final String actionFullName,\r\n\t\t\tfinal Map<String, List<RowsMapping>> rowsMap,\r\n\t\t\tfinal ConfigBuildRef configBuildRef) {\r\n\t\tString fullName = getFullNameFromRow(cell.getRow());\r\n\t\t// check wither it\'s upper level\r\n\t\tif (actionFullName.startsWith(fullName + "":"")) {\r\n\t\t\t// get rows mapping for upper level row\r\n\t\t\tList<RowsMapping> currentRowsMappingList = rowsMap\r\n\t\t\t\t\t.get(fullName);\r\n\t\t\tif (currentRowsMappingList == null) {\r\n\t\t\t\tcurrentRowsMappingList = gatherRowsMappingByFullName(\r\n\t\t\t\t\t\tconfigBuildRef, fullName);\r\n\t\t\t\trowsMap.put(fullName, currentRowsMappingList);\r\n\t\t\t}\r\n\t\t\tShiftFormulaRef shiftFormulaRef = new ShiftFormulaRef(\r\n\t\t\t\t\tconfigBuildRef.getWatchList(), currentRowsMappingList);\r\n\t\t\tshiftFormulaRef.setFormulaChanged(0);\r\n\t\t\tbuildCellFormulaForShiftedRows(configBuildRef.getSheet(),\r\n\t\t\t\t\tconfigBuildRef.getWbWrapper(), shiftFormulaRef, cell,\r\n\t\t\t\t\toriginFormula);\r\n\t\t\tif (shiftFormulaRef.getFormulaChanged() > 0) {\r\n\t\t\t\tconfigBuildRef.getCachedCells().put(cell, originFormula);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java'}]"
6621cd8dcda9bd4817b1106f,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setAnbieter(ImmobilienTransferTyp.Anbieter value) {
        this.anbieter = value;
    }",Sets the value of the anbieter property .,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/ImmobilienTransferTyp.java,[]
6621cd8dcda9bd4817b11070,jcodec/jcodec,"public static void joinNALUnitsToBuffer(List<ByteBuffer> nalUnits, ByteBuffer out) {
        for (ByteBuffer nal : nalUnits) {
            out.putInt(1);
            out.put(nal.duplicate());
        }
    }",Joins buffers containing individual NAL units into a single AnnexB delimited buffer . Each NAL unit will be separated with 00 00 00 01 markers .,src/main/java/org/jcodec/codecs/h264/H264Utils.java,"[{'Syntax': 'out.putInt(1)', 'FunctionName': 'putInt', 'ArgsCount': 1, 'MethodBody': 'private final void putInt(int i) {\n        buf.put((byte) (i >>> 24));\n        buf.put((byte) (i >> 16));\n        buf.put((byte) (i >> 8));\n        buf.put((byte) i);\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/io/BitWriter.java'}, {'Syntax': 'out.put(nal.duplicate())', 'FunctionName': 'put', 'ArgsCount': 1, 'MethodBody': 'public void put(ByteBuffer bb) throws IOException {\n            super.put(bb);\n            ByteOrder old = (ByteOrder) bb.order();\n            bb.order(ByteOrder.LITTLE_ENDIAN);\n            bb.putShort(cbSize);\n            bb.putShort(bitsPerCodedSample);\n            bb.putInt(channelLayout);\n            bb.putInt(guid);\n            bb.order(old);\n        }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/codecs/wav/WavHeader.java'}]"
6621cd8dcda9bd4817b11071,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:50:55+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setHallenTyp(HallenLagerProd.HallenTyp value) {
        this.hallenTyp = value;
    }",Sets the value of the hallenTyp property .,ImmoXML/src/main/jaxb/org/openestate/io/immoxml/xml/HallenLagerProd.java,[]
6621cd8dcda9bd4817b11072,oblac/jodd,"protected void printRoutes(final int width) {
		final ActionsManager actionsManager = webApp.madvocContainer().lookupComponent(ActionsManager.class);
		final List<ActionRuntime> actions = actionsManager.getAllActionRuntimes();
		final Map<String, String> aliases = actionsManager.getAllAliases();

		if (actions.isEmpty()) {
			return;
		}

		final Print print = new Print();

		print.line(""Routes"", width);

		actions.stream()
			.sorted(Comparator.comparing(
				actionRuntime -> actionRuntime.getActionPath() + ' ' + actionRuntime.getActionMethod()))
			.forEach(ar -> {

				final String actionMethod = ar.getActionMethod();

				print.out(Chalk256.chalk().yellow(), actionMethod == null ? ""*"" : actionMethod, 7);
				print.space();

				final String signature =
					ClassUtil.getShortClassName(
						ProxettaUtil.resolveTargetClass(ar.getActionClass()), 2)
						+ '#' + ar.getActionClassMethod().getName();

				print.outLeftRightNewLine(
					Chalk256.chalk().green(), ar.getActionPath(),
					Chalk256.chalk().blue(), signature,
					width - 7 - 1
				);
			});

		if (!aliases.isEmpty()) {

			print.line(""Aliases"", width);

			actions.stream()
				.sorted(Comparator.comparing(
					actionRuntime -> actionRuntime.getActionPath() + ' ' + actionRuntime.getActionMethod()))
				.forEach(ar -> {

					final String actionPath = ar.getActionPath();

					for (final Map.Entry<String, String> entry : aliases.entrySet()) {
						if (entry.getValue().equals(actionPath)) {
							print.space(8);

							print.outLeftRightNewLine(
								Chalk256.chalk().green(), entry.getValue(),
								Chalk256.chalk().blue(), entry.getKey(),
								width - 8
							);
						}
					}
				});
		}

		print.line(width);
	}",Prints routes to console .,jodd-joy/src/main/java/jodd/joy/JoyMadvoc.java,"[{'Syntax': 'webApp.madvocContainer().lookupComponent(ActionsManager.class)', 'FunctionName': 'lookupComponent', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings({""unchecked""})\n\tpublic <T> T lookupComponent(final Class<T> component) {\n\t\tfinal String name = resolveBaseComponentName(component);\n\t\treturn (T) madpc.getBean(name);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/MadvocContainer.java'}, {'Syntax': 'webApp.madvocContainer()', 'FunctionName': 'madvocContainer', 'ArgsCount': 0, 'MethodBody': 'public MadvocContainer madvocContainer() {\n\t\treturn madvocContainer;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java'}, {'Syntax': 'actionsManager.getAllActionRuntimes()', 'FunctionName': 'getAllActionRuntimes', 'ArgsCount': 0, 'MethodBody': 'public List<ActionRuntime> getAllActionRuntimes() {\n\t\treturn new ArrayList<>(runtimes.values());\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionsManager.java'}, {'Syntax': 'actionsManager.getAllAliases()', 'FunctionName': 'getAllAliases', 'ArgsCount': 0, 'MethodBody': 'public Map<String, String> getAllAliases() {\n\t\treturn new HashMap<>(pathAliases);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionsManager.java'}, {'Syntax': 'actions.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic boolean isEmpty() {\n\t\treturn size() == 0;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'print.line(""Routes"", width)', 'FunctionName': 'line', 'ArgsCount': 2, 'MethodBody': ""public void line(final String name, final int width) {\n\t\tfinal int len = name.length() + 2;\n\t\tSystem.out.print(StringUtil.repeat('-', 1));\n\t\tSystem.out.print('[');\n\t\tSystem.out.print(Chalk256.chalk().bold().on(name));\n\t\tSystem.out.print(']');\n\t\tSystem.out.println(StringUtil.repeat('-', width - len - 1));\n\t}"", 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}, {'Syntax': 'actionRuntime.getActionPath()', 'FunctionName': 'getActionPath', 'ArgsCount': 0, 'MethodBody': 'public String getActionPath() {\n\t\treturn actionPath;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'actionRuntime.getActionMethod()', 'FunctionName': 'getActionMethod', 'ArgsCount': 0, 'MethodBody': 'public String getActionMethod() {\n\t\treturn actionMethod;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/ActionRuntime.java'}, {'Syntax': 'ar.getActionMethod()', 'FunctionName': 'getActionMethod', 'ArgsCount': 0, 'MethodBody': 'public String getActionMethod() {\n\t\treturn actionMethod;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/ActionRuntime.java'}, {'Syntax': 'print.out(Chalk256.chalk().yellow(), actionMethod == null ? ""*"" : actionMethod, 7)', 'FunctionName': 'out', 'ArgsCount': 3, 'MethodBody': 'public void out(final Chalk256 chalk256, final String string, final int maxLen) {\n\t\tSystem.out.print(chalk256.on(alignLeftAndPad(string, maxLen)));\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}, {'Syntax': 'Chalk256.chalk().yellow()', 'FunctionName': 'yellow', 'ArgsCount': 0, 'MethodBody': 'public T yellow() {\n\t\tstartSequence(YELLOW);\n\t\tendSequence(COLOR_RESET);\n\t\treturn _this();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}, {'Syntax': 'Chalk256.chalk()', 'FunctionName': 'chalk', 'ArgsCount': 0, 'MethodBody': 'public static Chalk256 chalk() {\n\t\treturn new Chalk256();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk256.java'}, {'Syntax': 'print.space()', 'FunctionName': 'space', 'ArgsCount': 0, 'MethodBody': ""public void space() {\n\t\tSystem.out.print(' ');\n\t}"", 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}, {'Syntax': 'ar.getActionClass()', 'FunctionName': 'getActionClass', 'ArgsCount': 0, 'MethodBody': 'public Class getActionClass() {\n\t\treturn actionClass;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/ActionRuntime.java'}, {'Syntax': 'ar.getActionClassMethod().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'ar.getActionClassMethod()', 'FunctionName': 'getActionClassMethod', 'ArgsCount': 0, 'MethodBody': 'public Method getActionClassMethod() {\n\t\treturn actionClassMethod;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/ActionRuntime.java'}, {'Syntax': 'print.outLeftRightNewLine(\n\t\t\t\t\tChalk256.chalk().green(), ar.getActionPath(),\n\t\t\t\t\tChalk256.chalk().blue(), signature,\n\t\t\t\t\twidth - 7 - 1\n\t\t\t\t)', 'FunctionName': 'outLeftRightNewLine', 'ArgsCount': 5, 'MethodBody': 'public void outLeftRightNewLine(\n\t\t\tfinal Chalk256 chalk256Left,\n\t\t\tfinal String stringLeft,\n\t\t\tfinal Chalk256 chalk256Right,\n\t\t\tString stringRight,\n\t\t\tfinal int width) {\n\n\t\tfinal int leftLen = stringLeft.length();\n\t\tfinal int rightLen = stringRight.length();\n\t\tfinal int availWidth = width - 1;     // space delimiter\n\n\t\tint delta = leftLen + rightLen - availWidth;\n\n\t\tif (delta > 0) {\n\t\t\t// cut the right side\n\t\t\tif (stringRight.length() >= delta + 3) {\n\t\t\t\tstringRight = stringRight.substring(delta + 3);\n\t\t\t\tstringRight = ""..."" + stringRight;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstringRight = """";\n\t\t\t}\n\t\t}\n\n\t\tout(chalk256Left, stringLeft);\n\t\tspace();\n\t\twhile (delta++ < 0) {\n\t\t\tspace();\n\t\t}\n\t\tout(chalk256Right, stringRight);\n\t\tnewLine();\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}, {'Syntax': 'Chalk256.chalk().green()', 'FunctionName': 'green', 'ArgsCount': 0, 'MethodBody': 'public T green() {\n\t\tstartSequence(GREEN);\n\t\tendSequence(COLOR_RESET);\n\t\treturn _this();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}, {'Syntax': 'Chalk256.chalk()', 'FunctionName': 'chalk', 'ArgsCount': 0, 'MethodBody': 'public static Chalk256 chalk() {\n\t\treturn new Chalk256();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk256.java'}, {'Syntax': 'ar.getActionPath()', 'FunctionName': 'getActionPath', 'ArgsCount': 0, 'MethodBody': 'public String getActionPath() {\n\t\treturn actionPath;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'Chalk256.chalk().blue()', 'FunctionName': 'blue', 'ArgsCount': 0, 'MethodBody': 'public T blue() {\n\t\tstartSequence(BLUE);\n\t\tendSequence(COLOR_RESET);\n\t\treturn _this();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}, {'Syntax': 'Chalk256.chalk()', 'FunctionName': 'chalk', 'ArgsCount': 0, 'MethodBody': 'public static Chalk256 chalk() {\n\t\treturn new Chalk256();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk256.java'}, {'Syntax': 'aliases.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic boolean isEmpty() {\n\t\treturn size() == 0;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'print.line(""Aliases"", width)', 'FunctionName': 'line', 'ArgsCount': 2, 'MethodBody': ""public void line(final String name, final int width) {\n\t\tfinal int len = name.length() + 2;\n\t\tSystem.out.print(StringUtil.repeat('-', 1));\n\t\tSystem.out.print('[');\n\t\tSystem.out.print(Chalk256.chalk().bold().on(name));\n\t\tSystem.out.print(']');\n\t\tSystem.out.println(StringUtil.repeat('-', width - len - 1));\n\t}"", 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}, {'Syntax': 'actionRuntime.getActionPath()', 'FunctionName': 'getActionPath', 'ArgsCount': 0, 'MethodBody': 'public String getActionPath() {\n\t\treturn actionPath;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'actionRuntime.getActionMethod()', 'FunctionName': 'getActionMethod', 'ArgsCount': 0, 'MethodBody': 'public String getActionMethod() {\n\t\treturn actionMethod;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/ActionRuntime.java'}, {'Syntax': 'ar.getActionPath()', 'FunctionName': 'getActionPath', 'ArgsCount': 0, 'MethodBody': 'public String getActionPath() {\n\t\treturn actionPath;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'entry.getValue().equals(actionPath)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public int getValue() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/LoopIterator.java'}, {'Syntax': 'print.space(8)', 'FunctionName': 'space', 'ArgsCount': 1, 'MethodBody': ""public void space(int count) {\n\t\twhile (count-- > 0) {\n\t\t\tSystem.out.print(' ');\n\t\t}\n\t}"", 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}, {'Syntax': 'print.outLeftRightNewLine(\n\t\t\t\t\t\t\t\tChalk256.chalk().green(), entry.getValue(),\n\t\t\t\t\t\t\t\tChalk256.chalk().blue(), entry.getKey(),\n\t\t\t\t\t\t\t\twidth - 8\n\t\t\t\t\t\t\t)', 'FunctionName': 'outLeftRightNewLine', 'ArgsCount': 5, 'MethodBody': 'public void outLeftRightNewLine(\n\t\t\tfinal Chalk256 chalk256Left,\n\t\t\tfinal String stringLeft,\n\t\t\tfinal Chalk256 chalk256Right,\n\t\t\tString stringRight,\n\t\t\tfinal int width) {\n\n\t\tfinal int leftLen = stringLeft.length();\n\t\tfinal int rightLen = stringRight.length();\n\t\tfinal int availWidth = width - 1;     // space delimiter\n\n\t\tint delta = leftLen + rightLen - availWidth;\n\n\t\tif (delta > 0) {\n\t\t\t// cut the right side\n\t\t\tif (stringRight.length() >= delta + 3) {\n\t\t\t\tstringRight = stringRight.substring(delta + 3);\n\t\t\t\tstringRight = ""..."" + stringRight;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstringRight = """";\n\t\t\t}\n\t\t}\n\n\t\tout(chalk256Left, stringLeft);\n\t\tspace();\n\t\twhile (delta++ < 0) {\n\t\t\tspace();\n\t\t}\n\t\tout(chalk256Right, stringRight);\n\t\tnewLine();\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}, {'Syntax': 'Chalk256.chalk().green()', 'FunctionName': 'green', 'ArgsCount': 0, 'MethodBody': 'public T green() {\n\t\tstartSequence(GREEN);\n\t\tendSequence(COLOR_RESET);\n\t\treturn _this();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}, {'Syntax': 'Chalk256.chalk()', 'FunctionName': 'chalk', 'ArgsCount': 0, 'MethodBody': 'public static Chalk256 chalk() {\n\t\treturn new Chalk256();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk256.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public int getValue() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/LoopIterator.java'}, {'Syntax': 'Chalk256.chalk().blue()', 'FunctionName': 'blue', 'ArgsCount': 0, 'MethodBody': 'public T blue() {\n\t\tstartSequence(BLUE);\n\t\tendSequence(COLOR_RESET);\n\t\treturn _this();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}, {'Syntax': 'Chalk256.chalk()', 'FunctionName': 'chalk', 'ArgsCount': 0, 'MethodBody': 'public static Chalk256 chalk() {\n\t\treturn new Chalk256();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk256.java'}, {'Syntax': 'print.line(width)', 'FunctionName': 'line', 'ArgsCount': 1, 'MethodBody': ""public void line(final int width) {\n\t\tSystem.out.println(StringUtil.repeat('-', width));\n\t}"", 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/Print.java'}]"
6621cd8dcda9bd4817b11073,RestComm/jain-slee,"public Object getFieldValue(String fieldName, Class<?> returnType) {

		String realFieldName = getRealFieldName(fieldName);

		Object value = aciImpl.getActivityContext().getDataAttribute(
				realFieldName);

		if (value == null) {
			if (returnType.isPrimitive()) {
				if (returnType.equals(Integer.TYPE)) {
					return Integer.valueOf(0);
				} else if (returnType.equals(Boolean.TYPE)) {
					return Boolean.FALSE;
				} else if (returnType.equals(Long.TYPE)) {
					return Long.valueOf(0);
				} else if (returnType.equals(Double.TYPE)) {
					return Double.valueOf(0);
				} else if (returnType.equals(Float.TYPE)) {
					return Float.valueOf(0);
				}
			}
		}

		return value;
	}",Retrieves an sbb aci data field value,container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbActivityContextInterfaceImpl.java,"[{'Syntax': 'getRealFieldName(fieldName)', 'FunctionName': 'getRealFieldName', 'ArgsCount': 1, 'MethodBody': 'private String getRealFieldName(String fieldName) {\n\t\tString realFieldName = sbbComponent.getDescriptor()\n\t\t\t\t.getActivityContextAttributeAliases().get(fieldName);\n\t\tif (realFieldName == null) {\n\t\t\t// not there then it has no alias, lets set one based on sbb id\n\t\t\trealFieldName = sbbComponent.getSbbID().toString() + "".""\n\t\t\t\t\t+ fieldName;\n\t\t\tfinal Map<String, String> aliases = sbbComponent.getDescriptor()\n\t\t\t\t\t.getActivityContextAttributeAliases();\n\t\t\tsynchronized (aliases) {\n\t\t\t\taliases.put(fieldName, realFieldName);\n\t\t\t}\n\t\t}\n\t\treturn realFieldName;\n\t}', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbActivityContextInterfaceImpl.java'}, {'Syntax': 'aciImpl.getActivityContext().getDataAttribute(\n\t\t\t\trealFieldName)', 'FunctionName': 'getDataAttribute', 'ArgsCount': 1, 'MethodBody': 'public Object getDataAttribute(String key) {\n\t\treturn cacheData.getCmpAttribute(key);\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java'}, {'Syntax': 'aciImpl.getActivityContext()', 'FunctionName': 'getActivityContext', 'ArgsCount': 0, 'MethodBody': 'public ActivityContext getActivityContext() {\n\t\treturn aciImpl.getActivityContext();\n\t}', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbActivityContextInterfaceImpl.java'}, {'Syntax': 'returnType.isPrimitive()', 'FunctionName': 'isPrimitive', 'ArgsCount': 0, 'MethodBody': 'public boolean isPrimitive() {\n\t\treturn getType() != getNonPrimitiveType();\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/profile/ProfileAttributeImpl.java'}, {'Syntax': 'returnType.equals(Integer.TYPE)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'returnType.equals(Boolean.TYPE)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'returnType.equals(Long.TYPE)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'returnType.equals(Double.TYPE)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'returnType.equals(Float.TYPE)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}]"
6621cd8dcda9bd4817b11074,Unidata/thredds,"public static String unescapeURL(String url) {
    String newurl;
    newurl = urlDecode(url);
    return newurl;
  }",Decode all of the parts of the url including query and fragment,cdm/src/main/java/ucar/nc2/util/EscapeStrings.java,[]
6621cd8dcda9bd4817b11075,RestComm/jain-slee,"public static Map<String, Method> getAllInterfacesMethods(Class xInterfaceClass, Set<String> ignore) {
		HashMap<String, Method> abstractMethods = new HashMap<String, Method>();
		Method[] methods = null;
		Class[] superInterfaces;

		superInterfaces = xInterfaceClass.getInterfaces();

		for (Class superInterface : superInterfaces) {
			if (!ignore.contains(superInterface.getName()))
				abstractMethods.putAll(getAllInterfacesMethods(superInterface, ignore));
		}

		methods = xInterfaceClass.getDeclaredMethods();
		for (int i = 0; i < methods.length; i++) {
			abstractMethods.put(getMethodKey(methods[i]), methods[i]);
		}

		return abstractMethods;
	}",Returns methods of this interface and all super interfaces,container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java,"[{'Syntax': 'ignore.contains(superInterface.getName())', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(Object object) {\n        \n    \tif (!(object instanceof SbbLocalObject))\n            return false;\n        \n    \tfinal SbbLocalObjectImpl sbblocal = (SbbLocalObjectImpl) object;\n        final SbbEntityID sbbEntityId = sbblocal.getSbbEntityId();\n        if(!idBelongsToChildRelation(sbbEntityId)) {\n        \treturn false;\n        }\n        \n        return new SbbEntityCacheData(sbbEntityId,sleeContainer.getCluster().getMobicentsCache()).exists();\n    }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}, {'Syntax': 'superInterface.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'getAllInterfacesMethods(superInterface, ignore)', 'FunctionName': 'getAllInterfacesMethods', 'ArgsCount': 2, 'MethodBody': 'public static Map<String, Method> getAllInterfacesMethods(Class xInterfaceClass, Set<String> ignore) {\n\t\tHashMap<String, Method> abstractMethods = new HashMap<String, Method>();\n\t\tMethod[] methods = null;\n\t\tClass[] superInterfaces;\n\n\t\tsuperInterfaces = xInterfaceClass.getInterfaces();\n\n\t\tfor (Class superInterface : superInterfaces) {\n\t\t\tif (!ignore.contains(superInterface.getName()))\n\t\t\t\tabstractMethods.putAll(getAllInterfacesMethods(superInterface, ignore));\n\t\t}\n\n\t\tmethods = xInterfaceClass.getDeclaredMethods();\n\t\tfor (int i = 0; i < methods.length; i++) {\n\t\t\tabstractMethods.put(getMethodKey(methods[i]), methods[i]);\n\t\t}\n\n\t\treturn abstractMethods;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java'}, {'Syntax': 'abstractMethods.put(getMethodKey(methods[i]), methods[i])', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public boolean put(K key, V value);', 'FileName': '/RestComm/jain-slee/container/fault-tolerant-ra/api/src/main/java/org/mobicents/slee/resource/cluster/ReplicatedData.java'}, {'Syntax': 'getMethodKey(methods[i])', 'FunctionName': 'getMethodKey', 'ArgsCount': 1, 'MethodBody': 'public static String getMethodKey(Method method) {\n\t\treturn method.getName() + Arrays.toString(method.getParameterTypes());\n\t\t// //System.err.println(""KEY: ""+ret);\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java'}]"
6621cd8dcda9bd4817b11076,oblac/jodd,"public FieldVisitor visitField(
      final int access,
      final String name,
      final String descriptor,
      final String signature,
      final Object value) {
    if (cv != null) {
      return cv.visitField(access, name, descriptor, signature, value);
    }
    return null;
  }",Visits a field of the class .,jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java,[]
6621cd8dcda9bd4817b11077,playframework/playframework,"public String get(play.api.i18n.Lang lang, List<String> keys, Object... args) {
    Buffer<String> keyArgs = scala.collection.JavaConverters.asScalaBufferConverter(keys).asScala();
    Seq<Object> scalaArgs = convertArgsToScalaBuffer(args);
    return messages.apply(keyArgs.toSeq(), scalaArgs, lang);
  }",Translates the first defined message .,core/play/src/main/java/play/i18n/MessagesApi.java,"[{'Syntax': 'scala.collection.JavaConverters.asScalaBufferConverter(keys).asScala()', 'FunctionName': 'asScala', 'ArgsCount': 0, 'MethodBody': '@Override\n      public play.api.libs.ws.WSClient asScala() {\n        return new play.api.libs.ws.ahc.AhcWSClient(\n            new play.api.libs.ws.ahc.StandaloneAhcWSClient(asyncHttpClient, materializer));\n      }', 'FileName': '/playframework/playframework/transport/client/play-ahc-ws/src/main/java/play/test/WSTestClient.java'}, {'Syntax': 'convertArgsToScalaBuffer(args)', 'FunctionName': 'convertArgsToScalaBuffer', 'ArgsCount': 1, 'MethodBody': 'private static Seq<Object> convertArgsToScalaBuffer(final Object... args) {\n    return scala.jdk.javaapi.CollectionConverters.asScala(wrapArgsToListIfNeeded(args)).toList();\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/i18n/MessagesApi.java'}, {'Syntax': 'messages.apply(keyArgs.toSeq(), scalaArgs, lang)', 'FunctionName': 'apply', 'ArgsCount': 3, 'MethodBody': 'R apply(A a, B b, C c) throws Throwable;', 'FileName': '/playframework/playframework/core/play/src/main/java/play/libs/F.java'}]"
6621cd8dcda9bd4817b11078,GojaFramework/goja,"public static Record findOne(SqlSelect sqlSelect) {
        Preconditions.checkNotNull(sqlSelect, ""The Query SqlNode is must be not null."");
        return Db.findFirst(sqlSelect.toString(), sqlSelect.getParams().toArray());
    }",Query a data record .,goja-core/src/main/java/goja/core/db/Dao.java,"[{'Syntax': 'Db.findFirst(sqlSelect.toString(), sqlSelect.getParams().toArray())', 'FunctionName': 'findFirst', 'ArgsCount': 2, 'MethodBody': 'public int findFirst(E o, int low) {\n        return findFirst(o, low, getLastIndex());\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/lang/BinarySearch.java'}, {'Syntax': 'sqlSelect.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder(shortSummary());\n        if (this.keepTaskList) {\n            for (TaskInfo task : getTaskInfo()) {\n                sb.append(""; ["").append(task.getTaskName()).append(""] took "").append(task.getTimeMillis());\n                long percent = Math.round((100.0 * task.getTimeSeconds()) / getTotalTimeSeconds());\n                sb.append("" = "").append(percent).append(""%"");\n            }\n        }\n        else {\n            sb.append(""; no task info kept"");\n        }\n        return sb.toString();\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/StopWatch.java'}, {'Syntax': 'sqlSelect.getParams().toArray()', 'FunctionName': 'toArray', 'ArgsCount': 0, 'MethodBody': 'public byte[] toArray() {\n        int pos = 0;\n        byte[] array = new byte[size];\n\n        if (currentBufferIndex == -1) {\n            return array;\n        }\n\n        for (int i = 0; i < currentBufferIndex; i++) {\n            int len = buffers[i].length;\n            System.arraycopy(buffers[i], 0, array, pos, len);\n            pos += len;\n        }\n\n        System.arraycopy(buffers[currentBufferIndex], 0, array, pos, offset);\n\n        return array;\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/stream/FastByteBuffer.java'}, {'Syntax': 'sqlSelect.getParams()', 'FunctionName': 'getParams', 'ArgsCount': 0, 'MethodBody': 'public List<Object> getParams() {\n            return parent.getParams();\n        }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/db/SqlSelect.java'}]"
6621cd8dcda9bd4817b11079,cologneintelligence/FitGoodies,"protected String[] extractColumnParameters(FitRow row) {
        final List<String> result = new ArrayList<>();

        for (FitCell cell : row.cells()) {
            result.add(FitUtils.extractCellParameter(cell));
        }

        return result.toArray(new String[result.size()]);
    }",extracts and removes parameters from a row .,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/Fixture.java,"[{'Syntax': 'row.cells()', 'FunctionName': 'cells', 'ArgsCount': 0, 'MethodBody': 'public List<FitCell> cells() {\n\t\treturn Collections.unmodifiableList(cells);\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/htmlparser/FitRow.java'}, {'Syntax': 'FitUtils.extractCellParameter(cell)', 'FunctionName': 'extractCellParameter', 'ArgsCount': 1, 'MethodBody': 'public static String extractCellParameter(FitCell cell) {\n\t\tfinal Matcher matcher = PARAMETER_PATTERN.matcher(cell.getFitValue());\n\t\tif (matcher.matches()) {\n\t\t\tcell.setFitValue(matcher.group(1));\n\t\t\treturn matcher.group(2);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/util/FitUtils.java'}, {'Syntax': 'result.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n        return cells.size();\n    }', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/htmlparser/FitRow.java'}]"
6621cd8dcda9bd4817b1107a,leanix/leanix-sdk-java,"public BookmarkListResponse getBookmarks(String bookmarkType, String groupKey, String sharingType) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'bookmarkType' is set
    if (bookmarkType == null) {
      throw new ApiException(400, ""Missing the required parameter 'bookmarkType' when calling getBookmarks"");
    }
    
    // create path and map variables
    String localVarPath = ""/bookmarks"".replaceAll(""\\{format\\}"",""json"");

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""bookmarkType"", bookmarkType));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""groupKey"", groupKey));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""sharingType"", sharingType));

    
    
    final String[] localVarAccepts = {
      ""application/json""
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      ""application/json""
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { ""token"" };

    GenericType<BookmarkListResponse> localVarReturnType = new GenericType<BookmarkListResponse>() {};
    return apiClient.invokeAPI(localVarPath, ""GET"", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }",getBookmarks Retrieves all stored bookmarks a user can read .,src/main/java/net/leanix/api/BookmarksApi.java,[]
6621cd8dcda9bd4817b1107b,RestComm/jain-slee,"@SuppressWarnings(""unchecked"")
	public void unsetFaultTolerantResourceAdaptorContext()
			throws IllegalArgumentException {

		if (doTraceLogs) {
			logger.trace(""unsetFaultTolerantResourceAdaptorContext()"");
		}

		if (isFaultTolerant()) {
			((FaultTolerantResourceAdaptor<Serializable, Serializable>) this.object)
					.unsetFaultTolerantResourceAdaptorContext();
		} else {
			throw new IllegalArgumentException(
					""RA Object is not fault tolerant!"");
		}
	}",Unsets the ft context of the ra object .,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java,"[{'Syntax': 'isFaultTolerant()', 'FunctionName': 'isFaultTolerant', 'ArgsCount': 0, 'MethodBody': 'public boolean isFaultTolerant() {\n\t\treturn this.object instanceof FaultTolerantResourceAdaptor;\n\t}', 'FileName': '/RestComm/jain-slee/container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java'}, {'Syntax': '((FaultTolerantResourceAdaptor<Serializable, Serializable>) this.object)\n\t\t\t\t\t.unsetFaultTolerantResourceAdaptorContext()', 'FunctionName': 'unsetFaultTolerantResourceAdaptorContext', 'ArgsCount': 0, 'MethodBody': 'public void unsetFaultTolerantResourceAdaptorContext();', 'FileName': '/RestComm/jain-slee/container/fault-tolerant-ra/api/src/main/java/org/mobicents/slee/resource/cluster/FaultTolerantResourceAdaptor.java'}]"
6621cd8dcda9bd4817b1107c,orientechnologies/orientdb,"@Override
  public void remove() {
    checkClass();

    final OrientBaseGraph graph = checkIfAttached();

    graph.setCurrentGraphInThreadLocal();
    graph.autoStartTransaction();

    final ODocument doc = getRecord();
    if (doc == null)
      throw ExceptionFactory.vertexWithIdDoesNotExist(this.getId());

    Map<String, List<ODocument>> treeRidbagEdgesToRemove = new HashMap<String, List<ODocument>>();

    if (!graph.getRawGraph().getTransaction().isActive()) {
      for (String fieldName : doc.fieldNames()) {
        final OPair<Direction, String> connection = getConnection(Direction.BOTH, fieldName);
        if (connection == null)
          // SKIP THIS FIELD
          continue;
        Object fv = doc.field(fieldName);
        if (fv instanceof ORidBag && !((ORidBag) fv).isEmbedded()) {
          List<ODocument> docs = new ArrayList<ODocument>();
          for (OIdentifiable id : (ORidBag) fv)
            docs.add(OrientBaseGraph.getDocument(id, true));
          treeRidbagEdgesToRemove.put(fieldName, docs);
        }
      }
    }

    // REMOVE THE VERTEX RECORD FIRST TO CATCH CME BEFORE EDGES ARE REMOVED
    super.removeRecord();

    // REMOVE THE VERTEX FROM MANUAL INDEXES
    final Iterator<Index<? extends Element>> it = graph.getIndices().iterator();
    if (it.hasNext()) {
      final Set<Edge> allEdges = new HashSet<Edge>();
      for (Edge e : getEdges(Direction.BOTH))
        allEdges.add(e);

      while (it.hasNext()) {
        final Index<? extends Element> index = it.next();

        if (Vertex.class.isAssignableFrom(index.getIndexClass())) {
          OrientIndex<OrientVertex> idx = (OrientIndex<OrientVertex>) index;
          idx.removeElement(this);
        }

        if (Edge.class.isAssignableFrom(index.getIndexClass())) {
          OrientIndex<OrientEdge> idx = (OrientIndex<OrientEdge>) index;
          for (Edge e : allEdges)
            idx.removeElement((OrientEdge) e);
        }
      }
    }

    for (Map.Entry<String, List<ODocument>> entry : treeRidbagEdgesToRemove.entrySet()) {
      doc.removeField(entry.getKey());
      Iterator<ODocument> iter = entry.getValue().iterator();
      while (iter.hasNext()) {
        ODocument docEdge = iter.next();
        OrientBaseGraph.deleteEdgeIfAny(docEdge, false);
      }
    }

    graph.removeEdgesInternal(this, doc, null, true, settings.isUseVertexFieldsForEdgeLabels(), settings.isAutoScaleEdgeType());
  }",Removes the current Vertex from the Graph . all the incoming and outgoing edges are automatically removed too .,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientVertex.java,"[{'Syntax': 'checkClass()', 'FunctionName': 'checkClass', 'ArgsCount': 0, 'MethodBody': 'protected void checkClass() {\n    // FORCE EARLY UNMARSHALLING\n    final ODocument doc = getRecord();\n    doc.deserializeFields();\n\n    final OClass cls = ODocumentInternal.getImmutableSchemaClass(doc);\n\n    if (cls == null || !cls.isSubClassOf(getBaseClassName()))\n      throw new IllegalArgumentException(\n          ""The document received is not a "" + getElementType() + "". Found class \'"" + cls + ""\'"");\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientElement.java'}, {'Syntax': 'checkIfAttached()', 'FunctionName': 'checkIfAttached', 'ArgsCount': 0, 'MethodBody': 'protected OrientBaseGraph checkIfAttached() {\n    final OrientBaseGraph graph = getGraph();\n    if (graph == null)\n      throw new IllegalStateException(\n          ""There is no active graph instance for current element. Please either open connection to""\n              + "" your storage, or use detach/attach methods instead."");\n    return graph;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientElement.java'}, {'Syntax': 'graph.setCurrentGraphInThreadLocal()', 'FunctionName': 'setCurrentGraphInThreadLocal', 'ArgsCount': 0, 'MethodBody': 'protected void setCurrentGraphInThreadLocal() {\n    if (getThreadMode() == THREAD_MODE.MANUAL) return;\n\n    final ODatabaseDocument tlDb = ODatabaseRecordThreadLocal.instance().getIfDefined();\n    if (getThreadMode() == THREAD_MODE.ALWAYS_AUTOSET || tlDb == null) {\n      if (getDatabase() != null && tlDb != getDatabase())\n        // SET IT\n        ODatabaseRecordThreadLocal.instance().set(getDatabase());\n    }\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'graph.autoStartTransaction()', 'FunctionName': 'autoStartTransaction', 'ArgsCount': 0, 'MethodBody': 'protected void autoStartTransaction() {}', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'getRecord()', 'FunctionName': 'getRecord', 'ArgsCount': 0, 'MethodBody': 'public byte[] getRecord() {\n    return record;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordResponse.java'}, {'Syntax': 'this.getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': 'public int getId() {\n    return id;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OClusterRemote.java'}, {'Syntax': 'graph.getRawGraph().getTransaction().isActive()', 'FunctionName': 'isActive', 'ArgsCount': 0, 'MethodBody': 'public boolean isActive() {\n    return active;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}, {'Syntax': 'graph.getRawGraph().getTransaction()', 'FunctionName': 'getTransaction', 'ArgsCount': 0, 'MethodBody': 'public OTransaction getTransaction() {\n    return database.getTransaction();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/script/OScriptDocumentDatabaseWrapper.java'}, {'Syntax': 'graph.getRawGraph()', 'FunctionName': 'getRawGraph', 'ArgsCount': 0, 'MethodBody': 'public ODatabaseDocument getRawGraph() {\n    return graph.getRawGraph();\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/orientechnologies/orient/graph/script/OScriptGraphWrapper.java'}, {'Syntax': 'doc.fieldNames()', 'FunctionName': 'fieldNames', 'ArgsCount': 0, 'MethodBody': 'public String[] fieldNames();', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/ORecordSchemaAware.java'}, {'Syntax': 'getConnection(Direction.BOTH, fieldName)', 'FunctionName': 'getConnection', 'ArgsCount': 2, 'MethodBody': '@Override\n  public Connection getConnection(String username, String password) throws SQLException {\n\n    if (orientDB == null) {\n\n      Properties info = new Properties(this.info);\n      info.put(""user"", username);\n      info.put(""password"", password);\n\n      final String serverUsername = info.getProperty(""serverUser"", """");\n      final String serverPassword = info.getProperty(""serverPassword"", """");\n\n      String orientDbUrl = dbUrl.replace(""jdbc:orient:"", """");\n\n      OURLConnection connUrl = OURLHelper.parseNew(orientDbUrl);\n      OrientDBConfig settings =\n          OrientDBConfig.builder()\n              .addConfig(\n                  OGlobalConfiguration.DB_POOL_MIN,\n                  Integer.valueOf(info.getProperty(""db.pool.min"", ""1"")))\n              .addConfig(\n                  OGlobalConfiguration.DB_POOL_MAX,\n                  Integer.valueOf(info.getProperty(""db.pool.max"", ""10"")))\n              .build();\n\n      orientDB =\n          new OrientDB(\n              connUrl.getType() + "":"" + connUrl.getPath(),\n              serverUsername,\n              serverPassword,\n              settings);\n\n      if (!serverUsername.isEmpty() && !serverPassword.isEmpty()) {\n        orientDB.execute(\n            ""create database ? ""\n                + connUrl.getDbType().orElse(ODatabaseType.MEMORY)\n                + "" if not exists users (? identified by ? role admin)"",\n            connUrl.getDbName(),\n            username,\n            password);\n      }\n\n      pool = new ODatabasePool(orientDB, connUrl.getDbName(), username, password);\n    } else if (pool == null) {\n      pool = new ODatabasePool(orientDB, this.dbName, username, password);\n    }\n\n    return new OrientJdbcConnection(\n        pool.acquire(), orientDB, info == null ? new Properties() : info);\n  }', 'FileName': '/orientechnologies/orientdb/jdbc/src/main/java/com/orientechnologies/orient/jdbc/OrientDataSource.java'}, {'Syntax': 'doc.field(fieldName)', 'FunctionName': 'field', 'ArgsCount': 1, 'MethodBody': 'public <RET> RET field(String iFieldName);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/ORecordSchemaAware.java'}, {'Syntax': '((ORidBag) fv).isEmbedded()', 'FunctionName': 'isEmbedded', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean isEmbedded() {\n    return false;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OrientDBRemote.java'}, {'Syntax': 'docs.add(OrientBaseGraph.getDocument(id, true))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}, {'Syntax': 'OrientBaseGraph.getDocument(id, true)', 'FunctionName': 'getDocument', 'ArgsCount': 2, 'MethodBody': 'protected static ODocument getDocument(final OIdentifiable id, final boolean forceReload) {\n    if (id == null) return null;\n\n    final ODocument doc = id.getRecord();\n\n    if (doc != null && forceReload) {\n      try {\n        doc.reload();\n      } catch (ORecordNotFoundException e) {\n        // IGNORE IT AND RETURN NULL\n      }\n    }\n\n    return doc;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'treeRidbagEdgesToRemove.put(fieldName, docs)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(final String iKey, final Object iValue) {\n    index.put(iKey, (OIdentifiable) iValue);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/dictionary/ODictionary.java'}, {'Syntax': 'super.removeRecord()', 'FunctionName': 'removeRecord', 'ArgsCount': 0, 'MethodBody': 'void removeRecord() {\n    checkIfAttached();\n\n    final OrientBaseGraph graph = getGraph();\n    graph.setCurrentGraphInThreadLocal();\n    graph.autoStartTransaction();\n\n    if (checkDeletedInTx())\n      graph.throwRecordNotFoundException(\n          getIdentity(), ""The graph element with id "" + getIdentity() + "" not found"");\n\n    try {\n      getRecord().load();\n    } catch (ORecordNotFoundException e) {\n      graph.throwRecordNotFoundException(getIdentity(), e.getMessage());\n    }\n    getRecord().delete();\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientElement.java'}, {'Syntax': 'graph.getIndices().iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Iterator<T> iterator() {\n    return values.iterator();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/sql/method/misc/TestIterable.java'}, {'Syntax': 'graph.getIndices()', 'FunctionName': 'getIndices', 'ArgsCount': 0, 'MethodBody': 'public Iterable<Index<? extends Element>> getIndices() {\n    return graph.getIndices();\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/orientechnologies/orient/graph/script/OScriptGraphWrapper.java'}, {'Syntax': 'it.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean hasNext() {\n    return current < items;\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/test/java/com/orientechnologies/orient/etl/OETLStubRandomExtractor.java'}, {'Syntax': 'getEdges(Direction.BOTH)', 'FunctionName': 'getEdges', 'ArgsCount': 1, 'MethodBody': 'Iterable<OEdge> getEdges(ODirection direction);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/OVertex.java'}, {'Syntax': 'allEdges.add(e)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}, {'Syntax': 'it.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean hasNext() {\n    return current < items;\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/test/java/com/orientechnologies/orient/etl/OETLStubRandomExtractor.java'}, {'Syntax': 'it.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Move the current record stream to the next one in result set"")\n  public void next() {\n    setCurrentRecord(currentRecordIdx + 1);\n    dumpRecordDetails();\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'index.getIndexClass()', 'FunctionName': 'getIndexClass', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Class<T> getIndexClass() {\n    //noinspection unchecked\n    return (Class<T>) indexClass;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientIndexAuto.java'}, {'Syntax': 'idx.removeElement(this)', 'FunctionName': 'removeElement', 'ArgsCount': 1, 'MethodBody': 'void removeElement(final T element);', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientIndex.java'}, {'Syntax': 'index.getIndexClass()', 'FunctionName': 'getIndexClass', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Class<T> getIndexClass() {\n    //noinspection unchecked\n    return (Class<T>) indexClass;\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientIndexAuto.java'}, {'Syntax': 'idx.removeElement((OrientEdge) e)', 'FunctionName': 'removeElement', 'ArgsCount': 1, 'MethodBody': 'void removeElement(final T element);', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientIndex.java'}, {'Syntax': 'treeRidbagEdgesToRemove.entrySet()', 'FunctionName': 'entrySet', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Set<Entry<String, Object>> entrySet() {\n    return null;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/script/OPolyglotScriptBinding.java'}, {'Syntax': 'doc.removeField(entry.getKey())', 'FunctionName': 'removeField', 'ArgsCount': 1, 'MethodBody': 'public Object removeField(String iFieldName);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/ORecordSchemaAware.java'}, {'Syntax': 'entry.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'entry.getValue().iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Iterator<T> iterator() {\n    return values.iterator();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/sql/method/misc/TestIterable.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EV getValue() {\n    return value;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'iter.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean hasNext() {\n    return current < items;\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/test/java/com/orientechnologies/orient/etl/OETLStubRandomExtractor.java'}, {'Syntax': 'iter.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Move the current record stream to the next one in result set"")\n  public void next() {\n    setCurrentRecord(currentRecordIdx + 1);\n    dumpRecordDetails();\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'OrientBaseGraph.deleteEdgeIfAny(docEdge, false)', 'FunctionName': 'deleteEdgeIfAny', 'ArgsCount': 2, 'MethodBody': 'protected static void deleteEdgeIfAny(final OIdentifiable iRecord, boolean forceReload) {\n    if (iRecord != null) {\n      final ODocument doc = getDocument(iRecord, forceReload);\n      if (doc != null) {\n        final OImmutableClass clazz = ODocumentInternal.getImmutableSchemaClass(doc);\n        if (clazz != null && clazz.isEdgeType())\n          // DELETE THE EDGE RECORD TOO\n          doc.delete();\n      }\n    }\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'graph.removeEdgesInternal(this, doc, null, true, settings.isUseVertexFieldsForEdgeLabels(), settings.isAutoScaleEdgeType())', 'FunctionName': 'removeEdgesInternal', 'ArgsCount': 6, 'MethodBody': '@Override\n  void removeEdgesInternal(\n      OrientVertex vertex,\n      ODocument iVertex,\n      OIdentifiable iVertexToRemove,\n      boolean iAlsoInverse,\n      boolean useVertexFieldsForEdgeLabels,\n      boolean autoScaleEdgeType) {\n\n    for (String fieldName : iVertex.fieldNames()) {\n      final OPair<Direction, String> connection = vertex.getConnection(Direction.BOTH, fieldName);\n      if (connection == null)\n        // SKIP THIS FIELD\n        continue;\n\n      removeEdges(\n          this,\n          iVertex,\n          fieldName,\n          iVertexToRemove,\n          iAlsoInverse,\n          useVertexFieldsForEdgeLabels,\n          autoScaleEdgeType,\n          false);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraph.java'}, {'Syntax': 'settings.isUseVertexFieldsForEdgeLabels()', 'FunctionName': 'isUseVertexFieldsForEdgeLabels', 'ArgsCount': 0, 'MethodBody': 'public boolean isUseVertexFieldsForEdgeLabels() {\n    return graph.isUseVertexFieldsForEdgeLabels();\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/orientechnologies/orient/graph/script/OScriptGraphWrapper.java'}, {'Syntax': 'settings.isAutoScaleEdgeType()', 'FunctionName': 'isAutoScaleEdgeType', 'ArgsCount': 0, 'MethodBody': 'public boolean isAutoScaleEdgeType() {\n      if (autoScaleEdgeType == null) {\n        return AUTO_SCALE_EDGE_TYPE_DEFAULT;\n      }\n\n      return autoScaleEdgeType;\n    }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientConfigurableGraph.java'}]"
6621cd8dcda9bd4817b1107d,orientechnologies/orientdb,"public static int indexOf(final int[] array, final int object) {
    for (int i = 0; i < array.length; ++i) {
      if (array[i] == object)
        // FOUND
        return i;
    }
    return -1;
  }",This method is used to find a number in an array .,core/src/main/java/com/orientechnologies/common/util/OCollections.java,[]
6621cd8dcda9bd4817b1107e,boonproject/boon,"private  static <T> double reduceByR( final double[] array, T object ) {
        try {

            Method method = Invoker.invokeReducerLongIntReturnLongMethod(object);


            double sum = 0;
            for ( double v : array ) {
                sum = (double) method.invoke(object, sum, v);

            }
            return sum;

        } catch (Throwable throwable) {
            return handle(Long.class, throwable, ""Unable to perform reduceBy"");
        }

    }",Fallback to reflection if the call - site will not work or did not work,boon/src/main/java/org/boon/primitive/Dbl.java,"[{'Syntax': 'Invoker.invokeReducerLongIntReturnLongMethod(object)', 'FunctionName': 'invokeReducerLongIntReturnLongMethod', 'ArgsCount': 1, 'MethodBody': 'public Method invokeReducerLongIntReturnLongMethod(Object object) {\n        MethodAccess methodAccess;\n        if (methods.size()==1) {\n            methodAccess = methods.get(0);\n        } else  {\n            methodAccess = methodMap.get(""reduce"");\n        }\n        return methodAccess.method();\n     }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/ClassMeta.java'}, {'Syntax': 'method.invoke(object, sum, v)', 'FunctionName': 'invoke', 'ArgsCount': 3, 'MethodBody': 'Object invoke( String objectName, String methodName, Object args);', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/di/Context.java'}, {'Syntax': 'handle(Long.class, throwable, ""Unable to perform reduceBy"")', 'FunctionName': 'handle', 'ArgsCount': 3, 'MethodBody': 'public static <T> T handle( Class<T> clazz, String message, Throwable e ) {\n\n        throw new SoftenedException( message, e );\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/Exceptions.java'}]"
6621cd8dcda9bd4817b1107f,tony19/logback-android,"public String getDiscriminatingValue(ILoggingEvent event) {
    String contextName = event.getLoggerContextVO().getName();

    if (contextName == null) {
      return defaultValue;
    } else {
      return contextName;
    }
  }",Return the name of the current context name as found in the logging event .,logback-android/src/main/java/ch/qos/logback/classic/sift/ContextBasedDiscriminator.java,"[{'Syntax': 'event.getLoggerContextVO().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n    return name;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/joran/replay/Fruit.java'}, {'Syntax': 'event.getLoggerContextVO()', 'FunctionName': 'getLoggerContextVO', 'ArgsCount': 0, 'MethodBody': 'public LoggerContextVO getLoggerContextVO() {\n    return loggerContextVO;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/classic/spi/PubLoggingEventVO.java'}]"
6621cd8dcda9bd4817b11080,Unidata/thredds,"private double readScaledInt(ByteBuffer buf) {
    // Get the first two bytes
    short s1 = buf.getShort();

    // And the last one as unsigned
    short s2 = DataType.unsignedByteToShort(buf.get());

    // Get the sign bit, converting from 0 or 2 to +/- 1.
    int posneg = 1 - ((s1 & 0x8000) >> 14);

    // Combine the first two bytes (without sign bit) with the last byte.
    // Multiply by proper factor for +/-
    int nn = (((s1 & 0x7FFF) << 8) | s2) * posneg;
    return (double) nn / 10000.0;
  }",Read a scaled 3 - byte integer from file and convert to double,clcommon/src/main/java/ucar/nc2/iosp/gini/Giniheader.java,[]
6621cd8ecda9bd4817b11081,kiegroup/droolsjbpm-tools,"public static void refreshRepositoryView() {
        IWorkbenchWindow activeWindow = Activator.getDefault().
                                            getWorkbench().getActiveWorkbenchWindow();
        // If there is no active workbench window, then there can be no Repository view
        if (activeWindow == null) {
            return;
        }
        // If there is no active workbench page, then there can be no Repository view
        IWorkbenchPage page = activeWindow.getActivePage();
        if (page == null) {
            return;
        }
        RepositoryView view = (RepositoryView)page.findView(IGuvnorConstants.REPVIEW_ID);
        if (view != null) {
            view.refresh();
        }
    }",Causes the Repository view to refresh if it is open .,drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/utils/PlatformUtils.java,"[{'Syntax': 'Activator.getDefault()', 'FunctionName': 'getDefault', 'ArgsCount': 0, 'MethodBody': 'public static DroolsEclipsePlugin getDefault() {\n        return plugin;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsEclipsePlugin.java'}, {'Syntax': 'view.refresh()', 'FunctionName': 'refresh', 'ArgsCount': 0, 'MethodBody': '@SuppressWarnings(""unchecked"")\n    public void refresh() {\n        drools4 = false;\n        boolean reteoo = false;\n        if (logFileName == null) {\n            getViewer().setInput(null);\n            return;\n        }\n        List<LogEvent> eventList = new ArrayList<LogEvent>();\n        try {\n            XStream xstream = new XStream();\n            String[] voidDeny = {""void.class"", ""Void.class""};\n            xstream.denyTypes(voidDeny);\n            ObjectInputStream in = xstream.createObjectInputStream( new FileReader(logFileName) );\n            try {\n                while (true) {\n                \tObject object = in.readObject();\n                    if (object instanceof WorkingMemoryLog) {\n                    \tWorkingMemoryLog log = (WorkingMemoryLog) object;\n                    \teventList.addAll(log.getEvents());\n                        // TODO check drools version based on the content of the xml file\n                        // instead of using the actual runtime class.\n                        reteoo |= isReteoo( log );\n                    } else if (object instanceof LogEvent) {\n                        eventList.add((LogEvent) object);\n                    } else if (object instanceof List) {\n                        drools4 = true;\n                        eventList.addAll((List<LogEvent>) object);\n                    } else {\n                        throw new IllegalArgumentException(""Unexpected element in log: "" + object);\n                    }\n                }\n            } catch (StreamException e) {\n                if (!(e.getCause() instanceof EOFException)) {\n                    throw e;\n                }\n            } catch (EOFException e) {\n                // do nothing\n            }\n        } catch (FileNotFoundException e) {\n            setLogFile(null);\n        } catch (Throwable t) {\n            DroolsEclipsePlugin.log(t);\n        }\n        if (reteoo) {\n            getViewer().setInput(createEventList(eventList));\n        } else if (drools4) {\n            getViewer().setInput(createDrools4EventList(eventList));\n        } else {\n            getViewer().setInput(createPhreakEventList(eventList));\n        }\n        // TODO: this is necessary because otherwise, the show cause action\n        // cannot find the cause event if it hasn\'t been shown yet\n        ((TreeViewer) getViewer()).expandAll();\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AuditView.java'}]"
6621cd8ecda9bd4817b11082,Unidata/thredds,"DataDescriptor makeAssociatedField(int bitWidth) {
    DataDescriptor assDD = new DataDescriptor();
    assDD.name = name + ""_associated_field"";
    assDD.units = """";
    assDD.refVal = 0;
    assDD.scale = 0;
    assDD.bitWidth = bitWidth;
    assDD.type = 0;

    assDD.f = 0;
    assDD.x = 31;
    assDD.y = 22;
    assDD.fxy =  (short) ((f << 14) + (x << 8) + (y));

    return assDD;
  }",for associated fields,bufr/src/main/java/ucar/nc2/iosp/bufr/DataDescriptor.java,[]
6621cd8ecda9bd4817b11083,ngageoint/geopackage-android,"protected List<Point> simplifyPoints(double simplifyTolerance,
                                         List<Point> points) {

        List<Point> simplifiedPoints = null;
        if (simplifyGeometries) {

            // Reproject to web mercator if not in meters
            if (projection != null && !projection.isUnit(Units.METRES)) {
                ProjectionTransform toWebMercator = projection
                        .getTransformation(WEB_MERCATOR_PROJECTION);
                points = toWebMercator.transform(points);
            }

            // Simplify the points
            simplifiedPoints = GeometryUtils.simplifyPoints(points,
                    simplifyTolerance);

            // Reproject back to the original projection
            if (projection != null && !projection.isUnit(Units.METRES)) {
                ProjectionTransform fromWebMercator = WEB_MERCATOR_PROJECTION
                        .getTransformation(projection);
                simplifiedPoints = fromWebMercator.transform(simplifiedPoints);
            }
        } else {
            simplifiedPoints = points;
        }

        return simplifiedPoints;
    }",When the simplify tolerance is set simplify the points to a similar curve with fewer points .,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java,"[{'Syntax': 'GeometryUtils.simplifyPoints(points,\n                    simplifyTolerance)', 'FunctionName': 'simplifyPoints', 'ArgsCount': 2, 'MethodBody': 'protected List<Point> simplifyPoints(double simplifyTolerance,\n                                         List<Point> points) {\n\n        List<Point> simplifiedPoints = null;\n        if (simplifyGeometries) {\n\n            // Reproject to web mercator if not in meters\n            if (projection != null && !projection.isUnit(Units.METRES)) {\n                GeometryTransform toWebMercator = GeometryTransform.create(\n                        projection, WEB_MERCATOR_PROJECTION);\n                points = toWebMercator.transform(points);\n            }\n\n            // Simplify the points\n            simplifiedPoints = GeometryUtils.simplifyPoints(points,\n                    simplifyTolerance);\n\n            // Reproject back to the original projection\n            if (projection != null && !projection.isUnit(Units.METRES)) {\n                GeometryTransform fromWebMercator = GeometryTransform.create(\n                        WEB_MERCATOR_PROJECTION, projection);\n                simplifiedPoints = fromWebMercator.transform(simplifiedPoints);\n            }\n        } else {\n            simplifiedPoints = points;\n        }\n\n        return simplifiedPoints;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java'}]"
6621cd8ecda9bd4817b11084,Unidata/thredds,"static public FeatureDataset open(FeatureType wantFeatureType, String location, ucar.nc2.util.CancelTask task, Formatter errlog) throws IOException {

    // special processing for thredds: datasets
    if (location.startsWith(DataFactory.SCHEME)) {
      DataFactory.Result result = new DataFactory().openFeatureDataset(wantFeatureType, location, task);
      errlog.format(""%s"", result.errLog);
      if (!featureTypeOk(wantFeatureType, result.featureType)) {
        errlog.format(""wanted %s but dataset is of type %s%n"", wantFeatureType, result.featureType);
        result.close();
        return null;
      }
      return result.featureDataset;

      // special processing for cdmrFeature: datasets
    } else if (location.startsWith(CdmrFeatureDataset.SCHEME)) {
      Optional<FeatureDataset> opt = CdmrFeatureDataset.factory(wantFeatureType, location);
      if (opt.isPresent()) return opt.get();
      errlog.format(""%s"", opt.getErrorMessage());
      return null;

      // special processing for collection: datasets
    } else if (location.startsWith(ucar.nc2.ft.point.collection.CompositeDatasetFactory.SCHEME)) {
      String spec = location.substring(CompositeDatasetFactory.SCHEME.length());
      MFileCollectionManager dcm = MFileCollectionManager.open(spec, spec, null, errlog); // LOOK we dont have a name
      return CompositeDatasetFactory.factory(location, wantFeatureType, dcm, errlog);
    }

    DatasetUrl durl = DatasetUrl.findDatasetUrl(location); // Cache ServiceType so we don't have to keep figuring it out
    if (durl.serviceType == null) { // skip GRIB check for anything not a plain ole file
      // check if its GRIB, may not have to go through NetcdfDataset
      Optional<FeatureDatasetCoverage> opt = CoverageDatasetFactory.openGrib(location);
      if (opt.isPresent()) { // its a GRIB file
        return opt.get();

      } else if (!opt.getErrorMessage().startsWith(CoverageDatasetFactory.NOT_GRIB_FILE) &&
              !opt.getErrorMessage().startsWith(CoverageDatasetFactory.NO_GRIB_CLASS)) {
        errlog.format(""%s%n"", opt.getErrorMessage()); // its a GRIB file with an error
        return null;
      }
    }

    // otherwise open as NetcdfDataset and run it through the FeatureDatasetFactories
    NetcdfDataset ncd = NetcdfDataset.acquireDataset(durl, true, task);
    FeatureDataset fd = wrap(wantFeatureType, ncd, task, errlog);
    if (fd == null)
      ncd.close();
    return fd;
  }",Open a dataset as a FeatureDataset .,cdm/src/main/java/ucar/nc2/ft/FeatureDatasetFactoryManager.java,[]
6621cd8ecda9bd4817b11085,RestComm/jain-slee,"private static void addMemberValuesToAnnotation(Annotation annotation, ConstPool cp, LinkedHashMap<String, Object> memberValues)
  {
    // Get the member value object
    for(String mvName : memberValues.keySet())
    {
      Object mvValue = memberValues.get(mvName);
      MemberValue mv = getMemberValue(mvValue, cp);
      annotation.addMemberValue( mvName, mv );
    }
  }",Private method to add member values to annotation,container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/ClassGeneratorUtils.java,"[{'Syntax': 'memberValues.get(mvName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public ComponentID get(String key) throws ManagementConsoleException {\r\n    ComponentID id = map.get(key);\r\n    if (id == null)\r\n      throw new ManagementConsoleException(""Component "" + key + "" not found"");\r\n    return id;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/server/src/main/java/org/mobicents/slee/container/management/console/server/components/ComponentIDMap.java'}, {'Syntax': 'getMemberValue(mvValue, cp)', 'FunctionName': 'getMemberValue', 'ArgsCount': 2, 'MethodBody': 'private static MemberValue getMemberValue(Object mvValue,ConstPool cp) {\n\t  \n\t  MemberValue mv = null;\n      \n\t  if(mvValue instanceof MemberValue){\n\t\t  mv = (MemberValue) mvValue;\n\t  }\n\t  else if(mvValue instanceof String)\n      {\n        mv = new StringMemberValue((String)mvValue, cp);\n      } \n      else if(mvValue instanceof Annotation)\n      {\n        mv = new AnnotationMemberValue((Annotation)mvValue, cp);\n      } \n      else if(mvValue instanceof Boolean)\n      {\n        mv = new BooleanMemberValue((Boolean)mvValue, cp);\n      } \n      else if(mvValue instanceof Byte)\n      {\n        mv = new ByteMemberValue((Byte)mvValue, cp);\n      } \n      else if(mvValue instanceof Character)\n      {\n        mv = new CharMemberValue((Character)mvValue, cp);\n      } \n      else if(mvValue instanceof Class)\n      {\n        mv = new ClassMemberValue(((Class<?>)mvValue).getName(), cp);\n      } \n      else if(mvValue instanceof Double)\n      {\n        mv = new DoubleMemberValue((Double)mvValue, cp);\n      } \n      else if(mvValue instanceof Enum)\n      {\n        EnumMemberValue emv = new EnumMemberValue(cp);\n    \temv.setType(((Enum<?>)mvValue).getClass().getName());\n    \temv.setValue(((Enum<?>)mvValue).name());\n        mv = emv;        \n      } \n      else if(mvValue instanceof Float)\n      {\n        mv = new FloatMemberValue((Float)mvValue, cp);\n      } \n      else if(mvValue instanceof Integer)\n      {\n        IntegerMemberValue imv = new IntegerMemberValue(cp);\n        imv.setValue(((Integer)mvValue).intValue());\n        mv = imv;\n      } \n      else if(mvValue instanceof Long)\n      {\n        mv = new LongMemberValue((Long)mvValue, null);\n      } \n      else if(mvValue instanceof Short)\n      {\n        mv = new ShortMemberValue((Short)mvValue, null);\n      } \n      else if(mvValue.getClass().isArray() ) {    \t  \n    \t  ArrayMemberValue amv = new ArrayMemberValue(cp);\n    \t  MemberValue[] elements = new MemberValue[Array.getLength(mvValue)];\n    \t  for(int i=0;i<elements.length;i++) {\n    \t\t  elements[i] = getMemberValue(Array.get(mvValue, i), cp); \n    \t  }\n    \t  amv.setValue(elements);\n    \t  mv = amv;\n      }\n      else\n      {\n        throw new UnsupportedOperationException(""Unknown object type: "" + mvValue.getClass());\n      }\n\n\t  return mv;\n  }', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/ClassGeneratorUtils.java'}]"
6621cd8ecda9bd4817b11086,streamsets/datacollector,"String getDirPath(Date date, Record record) throws StageException {
    if(dirPathTemplateInHeader) {
      // We're not validating if the header exists as that job is already done
      return record.getHeader().getAttribute(HdfsTarget.TARGET_DIRECTORY_HEADER);
    }
    return pathResolver.resolvePath(date, record);
  }",Returns directory path for given record and date .,hdfs-protolib/src/main/java/com/streamsets/pipeline/stage/destination/hdfs/writer/RecordWriterManager.java,[]
6621cd8ecda9bd4817b11087,orientechnologies/orientdb,"public Set<String> getServers(Collection<String> iClusterNames) {
    if (iClusterNames == null || iClusterNames.isEmpty())
      return getAllConfiguredServers();

    final Set<String> partitions = new HashSet<String>(iClusterNames.size());
    for (String p : iClusterNames) {
      final List<String> serverList = getClusterConfiguration(p).field(SERVERS);
      if (serverList != null) {
        for (String s : serverList)
          if (!s.equals(NEW_NODE_TAG))
            partitions.add(s);
      }
    }
    return partitions;
  }",Returns the set of server names involved on the passed cluster collection .,server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java,"[{'Syntax': 'iClusterNames.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': 'public boolean isEmpty() {\n    return entries == null || entries.isEmpty();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTransactionIndexChangesPerKey.java'}, {'Syntax': 'getAllConfiguredServers()', 'FunctionName': 'getAllConfiguredServers', 'ArgsCount': 0, 'MethodBody': 'public Set<String> getAllConfiguredServers() {\n\n    final Set<String> servers = new HashSet<String>();\n\n    for (String p : getClusterNames()) {\n      final List<String> serverList = getClusterConfiguration(p).field(SERVERS);\n      if (serverList != null) {\n        for (String s : serverList) if (!s.equals(NEW_NODE_TAG)) servers.add(s);\n      }\n    }\n    return servers;\n  }', 'FileName': '/orientechnologies/orientdb/server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java'}, {'Syntax': 'iClusterNames.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'getClusterConfiguration(p).field(SERVERS)', 'FunctionName': 'field', 'ArgsCount': 1, 'MethodBody': 'public <RET> RET field(String iFieldName);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/ORecordSchemaAware.java'}, {'Syntax': 'getClusterConfiguration(p)', 'FunctionName': 'getClusterConfiguration', 'ArgsCount': 1, 'MethodBody': 'protected ODocument getClusterConfiguration(String iClusterName) {\n    final ODocument clusters = getConfiguredClusters();\n\n    if (iClusterName == null) iClusterName = ALL_WILDCARD;\n\n    final ODocument cfg;\n    if (!clusters.containsField(iClusterName))\n      // NO CLUSTER IN CFG: GET THE DEFAULT ONE\n      cfg = clusters.field(ALL_WILDCARD);\n    else\n      // GET THE CLUSTER CFG\n      cfg = clusters.field(iClusterName);\n\n    if (cfg == null) return new ODocument();\n\n    return cfg;\n  }', 'FileName': '/orientechnologies/orientdb/server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java'}, {'Syntax': 's.equals(NEW_NODE_TAG)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'partitions.add(s)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}]"
6621cd8ecda9bd4817b11088,oblac/jodd,"public void visitInnerClass(
      final String name, final String outerName, final String innerName, final int access) {
    if (cv != null) {
      cv.visitInnerClass(name, outerName, innerName, access);
    }
  }",Visits information about an inner class . This inner class is not necessarily a member of the class being visited .,jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java,[]
6621cd8ecda9bd4817b11089,Unidata/thredds,"private synchronized float[] unpackData(int iiword, int nword,
                                          int ipktyp, int kxky, int nbits,
                                          float ref, float scale,
                                          boolean miss, float difmin,
                                          int kx, int decimalScale)
          throws IOException {
    if (ipktyp == MDGGRB) {
      if (!useDP) {
        return unpackGrib1Data(iiword, nword, kxky, nbits, ref,
                scale, miss, decimalScale);
      } else {
        if (nword * 32 < kxky * nbits) { // to account for badly written files
          nword++;
        }
        int[] ksgrid = new int[nword];
        DM_RINT(iiword, ksgrid);
        return DP_UGRB(ksgrid, kxky, nbits, ref, scale, miss,
                decimalScale);
      }
    } else if (ipktyp == MDGNMC) {
      return null;
    } else if (ipktyp == MDGDIF) {
      return null;
    }
    return null;
  }",Read packed data,visad/src/main/java/ucar/nc2/iosp/gempak/GempakGridReader.java,[]
6621cd8ecda9bd4817b1108a,Unidata/thredds,"public void crawlDirectDatasets(InvDataset ds, CancelTask task, PrintWriter out, Object context, boolean release) {
    boolean isCatRef = (ds instanceof InvCatalogRef);
    if (filter != null && filter.skipAll(ds)) {
      if (isCatRef && release) ((InvCatalogRef) ds).release();
      return;
    }

    if (isCatRef) {
      InvCatalogRef catref = (InvCatalogRef) ds;
      if (out != null)
        out.println("" **CATREF "" + catref.getURI() + "" ("" + ds.getName() + "") "");
      countCatrefs++;
      
      if (!listen.getCatalogRef( catref, context)) {
        if (release) catref.release();
        return;
      }
    }

    // get datasets with data access (""leaves"")
    List<InvDataset> dlist = ds.getDatasets();
    List<InvDataset> leaves = new ArrayList<InvDataset>();
    for (InvDataset dds : dlist) {
      if (dds.hasAccess())
        leaves.add(dds);
    }

    if (leaves.size() > 0) {
      if (type == Type.first_direct) {
        InvDataset dds = leaves.get(0);
        listen.getDataset(dds, context);

      } else if (type == Type.random_direct) {
        listen.getDataset(chooseRandom(leaves), context);

      } else if (type == Type.random_direct_middle) {
        listen.getDataset(chooseRandomNotFirstOrLast(leaves), context);

      } else { // do all of them
        for (InvDataset dds : leaves) {
          listen.getDataset(dds, context);
          if ((task != null) && task.isCancel()) break;
        }
      }
    }

    // recurse
      for (InvDataset dds : dlist) {
        if (dds.hasNestedDatasets())
          crawlDirectDatasets(dds, task, out, context, release);
        if ((task != null) && task.isCancel())
          break;
      }

    /* if (out != null) {
     int took = (int) (System.currentTimeMillis() - start);
     out.println("" ** "" + ds.getName() + "" took "" + took + "" msecs\n"");
   } */

    if (ds instanceof InvCatalogRef && release) {
      InvCatalogRef catref = (InvCatalogRef) ds;
      catref.release();
    }

  }",Crawl this dataset recursively . Only send back direct datasets,legacy/src/main/java/thredds/catalog/crawl/CatalogCrawler.java,[]
6621cd8ecda9bd4817b1108b,Unidata/thredds,"public static boolean isSubset(Collection<Dimension> subset, Collection<Dimension> set) {
    for (Dimension d : subset) {
      if (!(set.contains(d)))
        return false;
    }
    return true;
  }",Test if all the Dimensions in subset are in set,cdm/src/main/java/ucar/nc2/dataset/CoordinateSystem.java,[]
6621cd8ecda9bd4817b1108c,rupertlssmith/lojix,"public static boolean classExistsAndIsLoadable(String className)
    {
        try
        {
            Class.forName(className);

            return true;
        }
        catch (ClassNotFoundException e)
        {
            // Exception noted and ignored.
            e = null;

            return false;
        }
    }",Checks if the named class exists and is loadable .,base/common/src/main/com/thesett/common/util/ReflectionUtils.java,"[{'Syntax': 'Class.forName(className)', 'FunctionName': 'forName', 'ArgsCount': 1, 'MethodBody': 'public static Class<?> forName(String className)\n    {\n        try\n        {\n            return Class.forName(className);\n        }\n        catch (ClassNotFoundException e)\n        {\n            throw new ReflectionUtilsException(""ClassNotFoundException whilst finding class: "" + className + ""."", e);\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/ReflectionUtils.java'}]"
6621cd8ecda9bd4817b1108d,Jasig/NotificationPortlet,"private NotificationResponse notificationError(String errorMsg) {
        NotificationError error = new NotificationError();
        error.setError(errorMsg);
        error.setSource(getClass().getSimpleName());

        NotificationResponse notification = new NotificationResponse();
        notification.setErrors(Arrays.asList(error));
        return notification;
    }",Error handler .,notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/service/ssp/SSPTaskNotificationService.java,"[{'Syntax': 'error.setError(errorMsg)', 'FunctionName': 'setError', 'ArgsCount': 1, 'MethodBody': 'public void setError(String error) {\n        this.error = error;\n        updateKey(source, error);\n    }', 'FileName': '/Jasig/NotificationPortlet/notification-portlet-api/src/main/java/org/jasig/portlet/notice/NotificationError.java'}, {'Syntax': 'error.setSource(getClass().getSimpleName())', 'FunctionName': 'setSource', 'ArgsCount': 1, 'MethodBody': 'public void setSource(String source) {\n        this.source = source;\n    }', 'FileName': '/Jasig/NotificationPortlet/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/service/jpa/JpaEntry.java'}, {'Syntax': 'notification.setErrors(Arrays.asList(error))', 'FunctionName': 'setErrors', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void setErrors(List<NotificationError> errors) {\n            throw new UnsupportedOperationException(""NotificationResponse.EMPTY_RESPONSE is and must be immutable"");\n        }', 'FileName': '/Jasig/NotificationPortlet/notification-portlet-api/src/main/java/org/jasig/portlet/notice/NotificationResponse.java'}]"
6621cd8ecda9bd4817b1108e,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:48:12+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<TerrainType> getTerrain() {
        if (terrain == null) {
            terrain = new ArrayList<TerrainType>();
        }
        return this.terrain;
    }",Gets the value of the terrain property .,ImmobiliareIT/src/main/jaxb/org/openestate/io/immobiliare_it/xml/Terrains.java,[]
6621cd8ecda9bd4817b1108f,ReactiveX/RxJava,"public static List<Throwable> flatten(Throwable t) {
        List<Throwable> list = new ArrayList<Throwable>();
        ArrayDeque<Throwable> deque = new ArrayDeque<Throwable>();
        deque.offer(t);

        while (!deque.isEmpty()) {
            Throwable e = deque.removeFirst();
            if (e instanceof CompositeException) {
                CompositeException ce = (CompositeException) e;
                List<Throwable> exceptions = ce.getExceptions();
                for (int i = exceptions.size() - 1; i >= 0; i--) {
                    deque.offerFirst(exceptions.get(i));
                }
            } else {
                list.add(e);
            }
        }

        return list;
    }",Returns a flattened list of Throwables from tree - like CompositeException chain .,src/main/java/io/reactivex/internal/util/ExceptionHelper.java,"[{'Syntax': 'deque.offer(t)', 'FunctionName': 'offer', 'ArgsCount': 1, 'MethodBody': '@Override\n                    public boolean offer(T value) {\n                        throw new IllegalStateException();\n                    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/testsupport/TestHelper.java'}, {'Syntax': 'deque.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\n                    public boolean isEmpty() {\n                        return true;\n                    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/testsupport/TestHelper.java'}, {'Syntax': 'deque.removeFirst()', 'FunctionName': 'removeFirst', 'ArgsCount': 0, 'MethodBody': 'final void removeFirst() {\n            Node head = get();\n            Node next = head.get();\n            if (next == null) {\n                throw new IllegalStateException(""Empty list!"");\n            }\n            size--;\n            // can\'t just move the head because it would retain the very first value\n            // can\'t null out the head\'s value because of late replayers would see null\n            setFirst(next);\n        }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay.java'}, {'Syntax': 'ce.getExceptions()', 'FunctionName': 'getExceptions', 'ArgsCount': 0, 'MethodBody': '@NonNull\n    public List<Throwable> getExceptions() {\n        return exceptions;\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/exceptions/CompositeException.java'}, {'Syntax': 'exceptions.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n        public int size() {\n            return map.size();\n        }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupByTest.java'}, {'Syntax': 'exceptions.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n        public V get(Object key) {\n            return map.get(key);\n        }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupByTest.java'}, {'Syntax': 'list.add(e)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'boolean add(RefCountSubscriber<T> rcs) {\n        for (;;) {\n            RefCountSubscriber<T>[] a = subscribers.get();\n            if (a == TERMINATED) {\n                return false;\n            }\n            int n = a.length;\n            @SuppressWarnings(""unchecked"")\n            RefCountSubscriber<T>[] b = new RefCountSubscriber[n + 1];\n            System.arraycopy(a, 0, b, 0, n);\n            b[n] = rcs;\n            if (subscribers.compareAndSet(a, b)) {\n                return true;\n            }\n        }\n    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/RefCountProcessor.java'}]"
6621cd8ecda9bd4817b11090,Unidata/thredds,"static synchronized public String
  find(String key, String url) {
    if (key == null) return null;
    if (!initialized) RC.initialize();
    Triple t = dfaltRC.lookup(key, url);
    return (t == null ? null : t.value);
  }",Allow users to search the default rc,cdm/src/main/java/ucar/nc2/util/rc/RC.java,[]
6621cd8ecda9bd4817b11091,rupertlssmith/lojix,"private SizeableList<WAMInstruction> optimize(List<WAMInstruction> instructions)
    {
        StateMachine optimizeConstants = new OptimizeInstructions(symbolTable, interner);
        Iterable<WAMInstruction> matcher =
            new Matcher<WAMInstruction, WAMInstruction>(instructions.iterator(), optimizeConstants);

        SizeableList<WAMInstruction> result = new SizeableLinkedList<WAMInstruction>();

        for (WAMInstruction instruction : matcher)
        {
            result.add(instruction);
        }

        return result;
    }",Performs an optimization pass for specialized instructions .,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/optimizer/WAMOptimizer.java,"[{'Syntax': 'instructions.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': 'public abstract Iterator<E> iterator();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}, {'Syntax': 'result.add(instruction)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public boolean add(E o)\n    {\n        if (offer(o))\n        {\n            return true;\n        }\n        else\n        {\n            throw new IllegalStateException(""Heap full"");\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}]"
6621cd8ecda9bd4817b11092,streamsets/datacollector,"public StageLibraryDelegate create(
    StageLibraryTask stageLib,
    String stageLibraryName,
    Class exportedInterface
  ) {
    StageLibraryDelegateDefinitition def = stageLib.getStageLibraryDelegateDefinition(stageLibraryName, exportedInterface);
    if(def == null) {
      return null;
    }

    return createInstance(def);
  }",Create new instance of the delegator from given stage library .,container/src/main/java/com/streamsets/datacollector/creation/StageLibraryDelegateCreator.java,[]
6621cd8ecda9bd4817b11093,1337joe/cubesensors-for-java,"private <T> T parseQuery(final String response, final Class<T> responseClass) {
		T queryResponse;
		try {
			/*
			 * Possible exceptions:
			 *
			 * IOException - if the underlying input source has problems during parsing
			 *
			 * JsonParseException - if parser has problems parsing content
			 *
			 * JsonMappingException - if the parser does not have any more content to map (note: Json ""null"" value is considered content; enf-of-stream not)
			 */
			queryResponse = MAPPER.readValue(response, responseClass);
		} catch (JsonParseException | JsonMappingException e) {
			try {
				final ErrorResponse error = MAPPER.readValue(response, ErrorResponse.class);

				LOGGER.error(""Query returned an error: {}"", error);
				return null;
			} catch (final IOException e1) {
				LOGGER.error(""Failed to read error response."", e1);
			}
			LOGGER.error(""Error reading response."", e);
			return null;
		} catch (final IOException e) {
			LOGGER.error(""Error reading response."", e);
			return null;
		}

		return queryResponse;
	}",Parses the results of a query and handles any errors .,src/main/java/com/w3asel/cubesensors/api/v1/CubeSensorsApiV1.java,[]
6621cd8ecda9bd4817b11094,eclipse/packagedrone,"private void moveWindow() {
        // Align the move to a multiple of 16 bytes. LZMA2 needs this
        // because it uses the lowest bits from readPos to get the
        // alignment of the uncompressed data.
        int moveOffset = (readPos + 1 - keepSizeBefore) & ~15;
        int moveSize = writePos - moveOffset;
        System.arraycopy(buf, moveOffset, buf, 0, moveSize);

        readPos -= moveOffset;
        readLimit -= moveOffset;
        writePos -= moveOffset;
    }",Moves data from the end of the buffer to the beginning discarding old data and making space for new input .,bundles/org.tukani.xz/src/org/tukaani/xz/lz/LZEncoder.java,[]
6621cd8ecda9bd4817b11095,orientechnologies/orientdb,"public void clear() {
    for (OPointer pointer : pointersPool) {
      allocator.deallocate(pointer);
    }

    pointersPool.clear();
    pointersPoolSize.set(0);

    for (OPointer pointer : pointerMapping.keySet()) {
      allocator.deallocate(pointer);
    }

    pointerMapping.clear();
  }",Clears pool and dealocates memory .,core/src/main/java/com/orientechnologies/common/directmemory/OByteBufferPool.java,"[{'Syntax': 'allocator.deallocate(pointer)', 'FunctionName': 'deallocate', 'ArgsCount': 1, 'MethodBody': 'public void deallocate(OPointer pointer) {\n    if (pointer == null) {\n      throw new IllegalArgumentException(""Null value is passed"");\n    }\n\n    final long ptr = pointer.getNativePointer();\n    if (ptr > 0) {\n\n      if (unsafe != null) {\n        unsafe.freeMemory(ptr);\n      } else {\n        MemoryIO.getInstance().freeMemory(ptr);\n      }\n\n      memoryConsumption.add(-pointer.getSize());\n\n      if (PROFILE_MEMORY) {\n        final EnumMap<Intention, OModifiableLong> consumptionMap =\n            memoryConsumptionByIntention.get();\n\n        final boolean wasEmpty = consumptionMap.isEmpty();\n\n        accumulateEvictedConsumptionMaps(consumptionMap);\n\n        consumptionMap.compute(\n            pointer.getIntention(),\n            (k, v) -> {\n              if (v == null) {\n                return new OModifiableLong(-pointer.getSize());\n              }\n\n              v.value -= pointer.getSize();\n              return v;\n            });\n\n        if (wasEmpty) {\n          consumptionMaps.add(\n              new ConsumptionMapEvictionIndicator(\n                  Thread.currentThread(), consumptionMapEvictionQueue, consumptionMap));\n        }\n      }\n\n      untrack(pointer);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/directmemory/ODirectMemoryAllocator.java'}, {'Syntax': 'pointersPool.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'public void clear() {}', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'pointersPoolSize.set(0)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': '@Override\n      public void set(\n          OTransactionIndexChangesPerKey.OTransactionIndexEntry oTransactionIndexEntry) {\n        throw new UnsupportedOperationException();\n      }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTxIndexChangesList.java'}, {'Syntax': 'pointerMapping.keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Set<String> keySet() {\n    return context.getMemberKeys();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/script/OPolyglotScriptBinding.java'}, {'Syntax': 'allocator.deallocate(pointer)', 'FunctionName': 'deallocate', 'ArgsCount': 1, 'MethodBody': 'public void deallocate(OPointer pointer) {\n    if (pointer == null) {\n      throw new IllegalArgumentException(""Null value is passed"");\n    }\n\n    final long ptr = pointer.getNativePointer();\n    if (ptr > 0) {\n\n      if (unsafe != null) {\n        unsafe.freeMemory(ptr);\n      } else {\n        MemoryIO.getInstance().freeMemory(ptr);\n      }\n\n      memoryConsumption.add(-pointer.getSize());\n\n      if (PROFILE_MEMORY) {\n        final EnumMap<Intention, OModifiableLong> consumptionMap =\n            memoryConsumptionByIntention.get();\n\n        final boolean wasEmpty = consumptionMap.isEmpty();\n\n        accumulateEvictedConsumptionMaps(consumptionMap);\n\n        consumptionMap.compute(\n            pointer.getIntention(),\n            (k, v) -> {\n              if (v == null) {\n                return new OModifiableLong(-pointer.getSize());\n              }\n\n              v.value -= pointer.getSize();\n              return v;\n            });\n\n        if (wasEmpty) {\n          consumptionMaps.add(\n              new ConsumptionMapEvictionIndicator(\n                  Thread.currentThread(), consumptionMapEvictionQueue, consumptionMap));\n        }\n      }\n\n      untrack(pointer);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/directmemory/ODirectMemoryAllocator.java'}, {'Syntax': 'pointerMapping.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'public void clear() {}', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}]"
6621cd8ecda9bd4817b11096,Unidata/thredds,"public URI getStandardUri() {
    try {
      InvCatalog cat = dataset.getParentCatalog();
      if (cat == null)
        return new URI(getUnresolvedUrlName());

      return cat.resolveUri(getUnresolvedUrlName());

    } catch (java.net.URISyntaxException e) {
      logger.warn(""Error parsing URL= "" + getUnresolvedUrlName());
      return null;
    }
  }",Construct the standard THREDDS access URI for this dataset access method resolve if the URI is relative .,legacy/src/main/java/thredds/catalog/InvAccess.java,[]
6621cd8ecda9bd4817b11097,kiegroup/droolsjbpm-tools,"protected void markParseErrors(List<DroolsBuildMarker> markers,
                                   List<BaseKnowledgeBuilderResultImpl> parserErrors) {
        for ( Iterator<BaseKnowledgeBuilderResultImpl> iter = parserErrors.iterator(); iter.hasNext(); ) {
            Object error = iter.next();
            if ( error instanceof ParserError ) {
                ParserError err = (ParserError) error;
                markers.add( new DroolsBuildMarker( err.getMessage(),
                                                    err.getRow() ) );
            } else if ( error instanceof KnowledgeBuilderResult) {
                KnowledgeBuilderResult res = (KnowledgeBuilderResult) error;
                int[] errorLines = res.getLines();
                markers.add( new DroolsBuildMarker( res.getMessage(),
                                                    errorLines != null && errorLines.length > 0 ? errorLines[0] : -1 ) );
            } else if ( error instanceof ExpanderException ) {
                ExpanderException exc = (ExpanderException) error;
                // TODO line mapping is incorrect
                markers.add( new DroolsBuildMarker( exc.getMessage(),
                                                    -1 ) );
            } else {
                markers.add( new DroolsBuildMarker( error.toString() ) );
            }
        }
    }",This will create markers for parse errors . Parse errors mean that antlr has picked up some major typos in the input source .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/builder/DroolsBuilder.java,"[{'Syntax': 'parserErrors.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': 'public Iterator<?> iterator() {\n            return (new ArrayList<Object>()).iterator();\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/menu/RuleHelperActionDelegate.java'}, {'Syntax': 'iter.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic boolean hasNext() {\n\t\t\tif (!hasChildren())\n\t\t\t\treturn false;\n\t\t\t\n\t\t\tif (iteratorIndex==-1) {\n\t\t\t\titeratorIndex = 0;\n\t\t\t\titerators = new ArrayList<Iterator<T>>();\n\t\t\t\tfor (T child : children) {\n\t\t\t\t\titerators.add(((Iterable<T>)child).iterator());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn iteratorIndex<iterators.size() || childIndex<children.size();\n\t\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/view/utils/SimpleTreeIterator.java'}, {'Syntax': 'iter.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic T next() {\n\t\t\tif (!hasChildren())\n\t\t\t\treturn null;\n\t\t\twhile (iteratorIndex<iterators.size()) {\n\t\t\t\tIterator<T> iter = iterators.get(iteratorIndex);\n\t\t\t\tif (iter.hasNext())\n\t\t\t\t\treturn iter.next();\n\t\t\t\t++iteratorIndex;\n\t\t\t}\n\t\t\tif (childIndex<children.size()) {\n\t\t\t\tT child = children.get(childIndex);\n\t\t\t\t++childIndex;\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\treturn null;\n\t\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/view/utils/SimpleTreeIterator.java'}, {'Syntax': 'markers.add( new DroolsBuildMarker( err.getMessage(),\n                                                    err.getRow() ) )', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(final BaseVertex vertex) {\n        this.vertices.add( vertex );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/Row.java'}, {'Syntax': 'err.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\n        return message;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Status.java'}, {'Syntax': 'markers.add( new DroolsBuildMarker( res.getMessage(),\n                                                    errorLines != null && errorLines.length > 0 ? errorLines[0] : -1 ) )', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(final BaseVertex vertex) {\n        this.vertices.add( vertex );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/Row.java'}, {'Syntax': 'res.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\n        return message;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Status.java'}, {'Syntax': 'markers.add( new DroolsBuildMarker( exc.getMessage(),\n                                                    -1 ) )', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(final BaseVertex vertex) {\n        this.vertices.add( vertex );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/Row.java'}, {'Syntax': 'exc.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\n        return message;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Status.java'}, {'Syntax': 'markers.add( new DroolsBuildMarker( error.toString() ) )', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(final BaseVertex vertex) {\n        this.vertices.add( vertex );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/Row.java'}, {'Syntax': 'error.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString() {\n        \treturn ruleDescr.toString();\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DRLInfo.java'}]"
6621cd8ecda9bd4817b11098,rest-assured/rest-assured,"static HttpRequestBase createHttpRequest(URI uri, String httpMethod, boolean hasBody) {
        String method = notNull(upperCase(trimToNull(httpMethod)), ""Http method"");
        Class<? extends HttpRequestBase> type = HTTP_METHOD_TO_HTTP_REQUEST_TYPE.get(method);
        final HttpRequestBase httpRequest;
        // If we are sending HTTP method that does not allow body (like GET) then HTTP library prevents
        // us from including it, however we chose to allow deviations from standard if user wants so,
        // so it needs custom handling - hence the second condition below.
        // Otherwise we should use standard implementation found in the map
        if (type == null || (!(type.isInstance(HttpEntityEnclosingRequest.class)) && hasBody)) {
            httpRequest = new CustomHttpMethod(method, uri);
        } else {
            try {
                httpRequest = type.newInstance();
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
            httpRequest.setURI(uri);
        }
        return httpRequest;
    }",Get the HttpRequest class that represents this request type .,rest-assured/src/main/java/io/restassured/internal/http/HttpRequestFactory.java,"[{'Syntax': 'HTTP_METHOD_TO_HTTP_REQUEST_TYPE.get(method)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public static Response get(URI uri) {\n        return given().get(uri);\n    }', 'FileName': '/rest-assured/rest-assured/rest-assured/src/main/java/io/restassured/RestAssured.java'}]"
6621cd8fcda9bd4817b11099,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:41:42+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setPropertyStatus(OverseasSaleAdType.PropertyStatus value) {
        this.propertyStatus = value;
    }",Sets the value of the propertyStatus property .,DaftIE/src/main/jaxb/org/openestate/io/daft_ie/xml/OverseasSaleAdType.java,[]
6621cd8fcda9bd4817b1109a,TypedRest/TypedRest-Java,"protected void handleBodyLinks(JsonNode jsonBody, Map<String, Map<URI, String>> links, Map<String, String> linkTemplates) {
        if (jsonBody.getNodeType() != JsonNodeType.OBJECT) {
            return;
        }

        JsonNode linksNode = jsonBody.get(""_links"");
        if (linksNode == null) {
            linksNode = jsonBody.get(""links"");
        }
        if (linksNode == null) {
            return;
        }

        linksNode.fields().forEachRemaining(x -> {
            String rel = x.getKey();
            Map<URI, String> linksForRel = getOrAdd(links, rel);

            switch (x.getValue().getNodeType()) {
                case ARRAY:
                    x.getValue().forEach(subobj -> {
                        if (subobj.getNodeType() == JsonNodeType.OBJECT) {
                            parseLinkObject(rel, (ObjectNode) subobj, linksForRel, linkTemplates);
                        }
                    });
                    break;
                case OBJECT:
                    parseLinkObject(rel, (ObjectNode) x.getValue(), linksForRel, linkTemplates);
                    break;
            }
        });
    }",Handles links embedded in JSON response bodies .,core/src/main/java/net/typedrest/AbstractEndpoint.java,"[{'Syntax': 'jsonBody.get(""_links"")', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n    public TElementEndpoint get(String id) {\n        if (id == null) {\n            throw new IllegalArgumentException(""id"");\n        }\n\n        return buildElementEndpoint(linkTemplate(""child"", ""id"", id));\n    }', 'FileName': '/TypedRest/TypedRest-Java/core/src/main/java/net/typedrest/AbstractCollectionEndpoint.java'}, {'Syntax': 'jsonBody.get(""links"")', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n    public TElementEndpoint get(String id) {\n        if (id == null) {\n            throw new IllegalArgumentException(""id"");\n        }\n\n        return buildElementEndpoint(linkTemplate(""child"", ""id"", id));\n    }', 'FileName': '/TypedRest/TypedRest-Java/core/src/main/java/net/typedrest/AbstractCollectionEndpoint.java'}, {'Syntax': 'getOrAdd(links, rel)', 'FunctionName': 'getOrAdd', 'ArgsCount': 2, 'MethodBody': 'private static Map<URI, String> getOrAdd(Map<String, Map<URI, String>> map, String key) {\n        Map<URI, String> value = map.get(key);\n        if (value == null) {\n            map.put(key, value = new HashMap<>());\n        }\n        return value;\n    }', 'FileName': '/TypedRest/TypedRest-Java/core/src/main/java/net/typedrest/AbstractEndpoint.java'}, {'Syntax': 'parseLinkObject(rel, (ObjectNode) subobj, linksForRel, linkTemplates)', 'FunctionName': 'parseLinkObject', 'ArgsCount': 4, 'MethodBody': 'private void parseLinkObject(String rel, ObjectNode obj, Map<URI, String> linksForRel, Map<String, String> linkTemplates) {\n        JsonNode href = obj.findValue(""href"");\n        if (href == null) {\n            return;\n        }\n\n        JsonNode templated = obj.findValue(""templated"");\n        if (templated != null && templated.isBoolean() && templated.asBoolean()) {\n            linkTemplates.put(rel, href.asText());\n        } else {\n            JsonNode title = obj.findValue(""title"");\n            linksForRel.put(\n                    uri.resolve(href.asText()),\n                    (title != null && title.getNodeType() == JsonNodeType.STRING) ? title.asText() : null);\n        }\n    }', 'FileName': '/TypedRest/TypedRest-Java/core/src/main/java/net/typedrest/AbstractEndpoint.java'}, {'Syntax': 'parseLinkObject(rel, (ObjectNode) x.getValue(), linksForRel, linkTemplates)', 'FunctionName': 'parseLinkObject', 'ArgsCount': 4, 'MethodBody': 'private void parseLinkObject(String rel, ObjectNode obj, Map<URI, String> linksForRel, Map<String, String> linkTemplates) {\n        JsonNode href = obj.findValue(""href"");\n        if (href == null) {\n            return;\n        }\n\n        JsonNode templated = obj.findValue(""templated"");\n        if (templated != null && templated.isBoolean() && templated.asBoolean()) {\n            linkTemplates.put(rel, href.asText());\n        } else {\n            JsonNode title = obj.findValue(""title"");\n            linksForRel.put(\n                    uri.resolve(href.asText()),\n                    (title != null && title.getNodeType() == JsonNodeType.STRING) ? title.asText() : null);\n        }\n    }', 'FileName': '/TypedRest/TypedRest-Java/core/src/main/java/net/typedrest/AbstractEndpoint.java'}]"
6621cd8fcda9bd4817b1109b,1gravity/Android-RTEditor,"@Subscribe(threadMode = ThreadMode.MAIN)
    public void onEventMainThread(LinkEvent event) {
        final String fragmentTag = event.getFragmentTag();
        mRTApi.removeFragment(fragmentTag);

        if (!event.wasCancelled() && ID_01_LINK_FRAGMENT.equals(fragmentTag)) {

            RTEditText editor = getActiveEditor();
            if (editor != null) {

                Link link = event.getLink();
                String url = null;
                if (link != null && link.isValid()) {

                    // the mLinkSelection.end() <= editor.length() check is necessary since
                    // the editor text can change when the link fragment is open
                    Selection selection = mLinkSelection != null && mLinkSelection.end() <= editor.length() ? mLinkSelection : new Selection(editor);

                    String linkText = link.getLinkText();

                    // if no text is selected this inserts the entered link text
                    // if text is selected we replace it by the link text
                    Editable str = editor.getText();
                    str.replace(selection.start(), selection.end(), linkText);
                    editor.setSelection(selection.start(), selection.start() + linkText.length());

                    url = link.getUrl();

                }
                editor.applyEffect(Effects.LINK, url);    // if url == null -> remove the link

            }

        }
    }",LinkFragment has closed - > process the result .,RTEditor/src/main/java/com/onegravity/rteditor/RTManager.java,"[{'Syntax': 'event.getFragmentTag()', 'FunctionName': 'getFragmentTag', 'ArgsCount': 0, 'MethodBody': 'public String getFragmentTag() {\n            return mFragmentTag;\n        }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/LinkFragment.java'}, {'Syntax': 'mRTApi.removeFragment(fragmentTag)', 'FunctionName': 'removeFragment', 'ArgsCount': 1, 'MethodBody': 'public void removeFragment(String fragmentTag);', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/api/RTProxy.java'}, {'Syntax': 'event.wasCancelled()', 'FunctionName': 'wasCancelled', 'ArgsCount': 0, 'MethodBody': 'public boolean wasCancelled() {\n            return mWasCancelled;\n        }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/LinkFragment.java'}, {'Syntax': 'ID_01_LINK_FRAGMENT.equals(fragmentTag)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object object) {\n        if (! (object instanceof RTTypeface)) {\n            return false;\n        }\n        String name = ((RTTypeface)object).getName();\n        return mName.equalsIgnoreCase(name);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/fonts/RTTypeface.java'}, {'Syntax': 'getActiveEditor()', 'FunctionName': 'getActiveEditor', 'ArgsCount': 0, 'MethodBody': 'private RTEditText getActiveEditor() {\n        for (RTEditText editor : mEditors.values()) {\n            if (editor.hasFocus()) {\n                return editor;\n            }\n        }\n        return null;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/RTManager.java'}, {'Syntax': 'event.getLink()', 'FunctionName': 'getLink', 'ArgsCount': 0, 'MethodBody': 'public Link getLink() {\n            return mLink;\n        }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/LinkFragment.java'}, {'Syntax': 'link.isValid()', 'FunctionName': 'isValid', 'ArgsCount': 0, 'MethodBody': 'public boolean isValid() {\n            return mUrl != null && mUrl.length() > 0 && mLinkText != null && mLinkText.length() > 0;\n        }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/LinkFragment.java'}, {'Syntax': 'mLinkSelection.end()', 'FunctionName': 'end', 'ArgsCount': 0, 'MethodBody': 'public int end() {\n        return mEnd;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/utils/Selection.java'}, {'Syntax': 'link.getLinkText()', 'FunctionName': 'getLinkText', 'ArgsCount': 0, 'MethodBody': 'public String getLinkText() {\n            return mLinkText;\n        }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/LinkFragment.java'}, {'Syntax': 'editor.getText()', 'FunctionName': 'getText', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getText() {\n        CharSequence text = super.getText();\n        return text != null ? text.toString() : """";\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/api/format/RTHtml.java'}, {'Syntax': 'selection.start()', 'FunctionName': 'start', 'ArgsCount': 0, 'MethodBody': 'public int start() {\n        return mStart;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/utils/Selection.java'}, {'Syntax': 'selection.end()', 'FunctionName': 'end', 'ArgsCount': 0, 'MethodBody': 'public int end() {\n        return mEnd;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/utils/Selection.java'}, {'Syntax': 'selection.start()', 'FunctionName': 'start', 'ArgsCount': 0, 'MethodBody': 'public int start() {\n        return mStart;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/utils/Selection.java'}, {'Syntax': 'selection.start()', 'FunctionName': 'start', 'ArgsCount': 0, 'MethodBody': 'public int start() {\n        return mStart;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/utils/Selection.java'}, {'Syntax': 'link.getUrl()', 'FunctionName': 'getUrl', 'ArgsCount': 0, 'MethodBody': 'public String getUrl() {\n            return mUrl;\n        }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/LinkFragment.java'}, {'Syntax': 'editor.applyEffect(Effects.LINK, url)', 'FunctionName': 'applyEffect', 'ArgsCount': 2, 'MethodBody': 'public <V extends Object, C extends RTSpan<V>> void applyEffect(Effect<V, C> effect, V value) {\n        if (mUseRTFormatting && !mIsSelectionChanging && !mIsSaving) {\n            Spannable oldSpannable = mIgnoreTextChanges ? null : cloneSpannable();\n\n            effect.applyToSelection(this, value);\n\n            synchronized (this) {\n                if (mListener != null && !mIgnoreTextChanges) {\n                    Spannable newSpannable = cloneSpannable();\n                    mListener.onTextChanged(this, oldSpannable, newSpannable, getSelectionStart(), getSelectionEnd(),\n                                            getSelectionStart(), getSelectionEnd());\n                }\n                mLayoutChanged = true;\n            }\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/RTEditText.java'}]"
6621cd8fcda9bd4817b1109c,phax/ph-math,"public ColumnVector getColumn (final int c) throws MatrixException
  {
    if ((c < 0) || (c >= m_nCols))
    {
      throw new MatrixException (MatrixException.INVALID_INDEX);
    }

    final ColumnVector cv = new ColumnVector (m_nRows);
    for (int r = 0; r < m_nRows; ++r)
    {
      cv.m_aValues[r][0] = m_aValues[r][c];
    }

    return cv;
  }",Get a column of this matrix .,ph-math/src/main/java/com/helger/numbercruncher/matrix/Matrix.java,[]
6621cd8fcda9bd4817b1109d,artclarke/humble-video,"public BitStreamFilterType getType() {
    long cPtr = VideoJNI.BitStreamFilter_getType(swigCPtr, this);
    return (cPtr == 0) ? null : new BitStreamFilterType(cPtr, false);
  }",Get the type of this filter .,humble-video-noarch/src/main/java/io/humble/video/BitStreamFilter.java,"[{'Syntax': 'VideoJNI.BitStreamFilter_getType(swigCPtr, this)', 'FunctionName': 'BitStreamFilter_getType', 'ArgsCount': 2, 'MethodBody': 'public final static native long BitStreamFilter_getType(long jarg1, BitStreamFilter jarg1_);', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/VideoJNI.java'}]"
6621cd8fcda9bd4817b1109e,spring-projects/spring-security,"public Set<GrantedAuthority> mapAuthorities(
			Collection<? extends GrantedAuthority> authorities) {
		HashSet<GrantedAuthority> mapped = new HashSet<>(
				authorities.size());
		for (GrantedAuthority authority : authorities) {
			mapped.add(mapAuthority(authority.getAuthority()));
		}

		if (defaultAuthority != null) {
			mapped.add(defaultAuthority);
		}

		return mapped;
	}",Creates a mapping of the supplied authorities based on the case - conversion and prefix settings . The mapping will be one - to - one unless duplicates are produced during the conversion . If a default authority has been set this will also be assigned to each mapping .,core/src/main/java/org/springframework/security/core/authority/mapping/SimpleAuthorityMapper.java,"[{'Syntax': 'authorities.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic int size() {\n\t\t\treturn this.loaders.size();\n\t\t}', 'FileName': '/spring-projects/spring-security/config/src/main/java/org/springframework/security/config/annotation/web/configuration/SecurityReactorContextConfiguration.java'}, {'Syntax': 'mapped.add(mapAuthority(authority.getAuthority()))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public PayloadExchangeMatcherReactiveAuthorizationManager.Builder add(\n\t\t\t\tPayloadExchangeMatcherEntry<ReactiveAuthorizationManager<PayloadExchangeAuthorizationContext>> entry) {\n\t\t\tthis.mappings.add(entry);\n\t\t\treturn this;\n\t\t}', 'FileName': '/spring-projects/spring-security/rsocket/src/main/java/org/springframework/security/rsocket/authorization/PayloadExchangeMatcherReactiveAuthorizationManager.java'}, {'Syntax': 'mapAuthority(authority.getAuthority())', 'FunctionName': 'mapAuthority', 'ArgsCount': 1, 'MethodBody': 'private GrantedAuthority mapAuthority(String name) {\n\t\tif (this.convertToUpperCase) {\n\t\t\tname = name.toUpperCase();\n\t\t}\n\t\telse if (this.convertToLowerCase) {\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\tif (this.prefix.length() > 0 && !name.startsWith(this.prefix)) {\n\t\t\tname = this.prefix + name;\n\t\t}\n\t\treturn new SimpleGrantedAuthority(name);\n\t}', 'FileName': '/spring-projects/spring-security/core/src/main/java/org/springframework/security/core/authority/mapping/SimpleAuthorityMapper.java'}, {'Syntax': 'authority.getAuthority()', 'FunctionName': 'getAuthority', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String getAuthority() {\n\t\treturn this.authority;\n\t}', 'FileName': '/spring-projects/spring-security/oauth2/oauth2-core/src/main/java/org/springframework/security/oauth2/core/user/OAuth2UserAuthority.java'}, {'Syntax': 'mapped.add(defaultAuthority)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public PayloadExchangeMatcherReactiveAuthorizationManager.Builder add(\n\t\t\t\tPayloadExchangeMatcherEntry<ReactiveAuthorizationManager<PayloadExchangeAuthorizationContext>> entry) {\n\t\t\tthis.mappings.add(entry);\n\t\t\treturn this;\n\t\t}', 'FileName': '/spring-projects/spring-security/rsocket/src/main/java/org/springframework/security/rsocket/authorization/PayloadExchangeMatcherReactiveAuthorizationManager.java'}]"
6621cd8fcda9bd4817b1109f,nyla-solutions/gedi-geode,"@SuppressWarnings({ ""unchecked"", ""rawtypes"" })
	@Override
	public void execute(FunctionContext functionContext) 
	{
		Cache cache = CacheFactory.getAnyInstance();	
		
		try
		{
			//Function must be executed on REgion
			if(!(functionContext instanceof RegionFunctionContext))
			{	
				throw new FunctionException(""Execute on a region"");
			}
			
			Object args = functionContext.getArguments();
			
			if (args == null)
				throw new FunctionException(""arguments is required"");
			
			TextPageCriteria criteria = null;
			
			if(args instanceof PdxInstance)
			{
				PdxInstance  pdxInstance = (PdxInstance)args;
				
				try
				{
					criteria = (TextPageCriteria)(pdxInstance.getObject());
				}
				catch (PdxSerializationException e)
				{
					throw new FunctionException(e.getMessage()+"" JSON:""+JSONFormatter.toJSON(pdxInstance));
				}
			}
			else 
			{
				criteria = (TextPageCriteria)args;
			}
			
				
			Region<String, Collection<Object>> pagingRegion = cache.getRegion(criteria.getPageRegionName());
			
			Region<?,?> region = cache.getRegion(criteria.getRegionName());
			
			GeodePagination pagination = new GeodePagination();
			
			TextPolicySearchStrategy geodeSearch = new TextPolicySearchStrategy(cache);
			
			//Collection<String> keys =  (Collection<String>)checkCachedKeysByCriteria(criteria,searchRequest,pagination,pagingRegion);
				
				
				
				
			geodeSearch.saveSearchResultsWithPageKeys(criteria, criteria.getQuery(),null, (Region<String,Collection<Object>>)pagingRegion);
			
			//build results
			Collection<Object> collection = pagination.readResultsByPageValues(criteria.getId(),criteria.getSortField(), 
			criteria.isSortDescending(),
					criteria.getBeginIndex(), 
					(Region<Object,Object>)region, (Region)pagingRegion);
			
			if(collection == null)
			{
				functionContext.getResultSender().lastResult(null);
				return;
				
			}
			
			
			PagingCollection<Object> pageCollection = new PagingCollection<Object>(collection, criteria);
			

			functionContext.getResultSender().lastResult(pageCollection);
		}
		catch (RuntimeException e)
		{
			Logger logger =  LogManager.getLogger(LuceneSearchFunction.class);
			logger.error(Debugger.stackTrace(e));
			
			throw e;
		}
	}",Execute the search on Region,gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/function/LuceneSearchFunction.java,"[{'Syntax': 'functionContext.getArguments()', 'FunctionName': 'getArguments', 'ArgsCount': 0, 'MethodBody': 'public Object getArguments()\r\n\t{\r\n\t\treturn this.arguments;\r\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/functions/JvmRegionFunctionContext.java'}, {'Syntax': 'e.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage()\n\t{\n\t\treturn message;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-rest-app/src/main/java/gedi/solutions/geode/rest/app/exception/DataError.java'}, {'Syntax': 'cache.getRegion(criteria.getPageRegionName())', 'FunctionName': 'getRegion', 'ArgsCount': 1, 'MethodBody': 'public <K, V> Region<K, V> getRegion(String name)\r\n\t{\r\n\t\tClientCache cache = ClientCacheFactory.getAnyInstance();\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\treturn cache.getRegion(name);\r\n\t\t\r\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/functions/ClientRegionDictionary.java'}, {'Syntax': 'criteria.getPageRegionName()', 'FunctionName': 'getPageRegionName', 'ArgsCount': 0, 'MethodBody': 'public String getPageRegionName()\n\t{\n\t\treturn pageRegionName;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/TextPageCriteria.java'}, {'Syntax': 'cache.getRegion(criteria.getRegionName())', 'FunctionName': 'getRegion', 'ArgsCount': 1, 'MethodBody': 'public <K, V> Region<K, V> getRegion(String name)\r\n\t{\r\n\t\tClientCache cache = ClientCacheFactory.getAnyInstance();\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\treturn cache.getRegion(name);\r\n\t\t\r\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/functions/ClientRegionDictionary.java'}, {'Syntax': 'criteria.getRegionName()', 'FunctionName': 'getRegionName', 'ArgsCount': 0, 'MethodBody': 'public String getRegionName()\n\t{\n\t\treturn regionName;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/TextPageCriteria.java'}, {'Syntax': 'geodeSearch.saveSearchResultsWithPageKeys(criteria, criteria.getQuery(),null, (Region<String,Collection<Object>>)pagingRegion)', 'FunctionName': 'saveSearchResultsWithPageKeys', 'ArgsCount': 4, 'MethodBody': 'public <K, V> Collection<String>  saveSearchResultsWithPageKeys(TextPageCriteria criteria,LuceneQueryProvider queryProvider, Predicate<LuceneResultStruct<K, V>> filter, Region<String,Collection<K>> pageKeysRegion)\n\t\t{\n\t\t\treturn saveSearchResultsWithPageKeys(criteria,queryProvider.toString(),filter, pageKeysRegion);\n\t\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/TextPolicySearchStrategy.java'}, {'Syntax': 'criteria.getQuery()', 'FunctionName': 'getQuery', 'ArgsCount': 0, 'MethodBody': 'public String getQuery()\n\t{\n\t\treturn query;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/TextPageCriteria.java'}, {'Syntax': 'pagination.readResultsByPageValues(criteria.getId(),criteria.getSortField(), \n\t\t\tcriteria.isSortDescending(),\n\t\t\t\t\tcriteria.getBeginIndex(), \n\t\t\t\t\t(Region<Object,Object>)region, (Region)pagingRegion)', 'FunctionName': 'readResultsByPageValues', 'ArgsCount': 6, 'MethodBody': '@SuppressWarnings(""unchecked"")\n\tpublic <K,V> Collection<V> readResultsByPageValues(String criteriaId, String sortField, boolean desc,int pageNumber, Region<K,V> region, Region<String,Collection<?>> pageRegion)\n\t{\n\t\tif(pageRegion == null )\n\t\t\treturn null;\n\t\t\n\t\tCollection<K> regionKeys = (Collection<K>)pageRegion.get(criteriaId+""-""+pageNumber);\n\t\t\n\t\tif(regionKeys == null|| regionKeys.isEmpty())\n\t\t\treturn null;\n\t\t\n\t\tif(sortField != null)\n\t\t{\n\t\t\tString field = sortField.replace(""entry."", """");\n\t\t\tBeanComparator c = new BeanComparator(field,desc);\n\t\t\t\n\t\t\tTreeSet<V> set = new TreeSet<V>(c);\n\t\t\t\n\t\t\tfor (K key : regionKeys)\n\t\t\t{\n\t\t\t\tset.add(region.get(key));\n\t\t\t}\n\t\t\t\n\t\t\treturn set;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\n\t\t\tArrayList<V> list = new ArrayList<V>();\n\t\t\tfor (K key : regionKeys)\n\t\t\t{\n\t\t\t\tlist.add(region.get(key));\n\t\t\t}\n\t\t\t\n\t\t\treturn list;\n\t\t\t\n\t\t}\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/GeodePagination.java'}, {'Syntax': 'criteria.getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': 'public String getId()\n\t{\n\t\treturn id;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-int-test/src/demo/java/solutions/gedi/demo/data/DummyDeal.java'}, {'Syntax': 'criteria.getSortField()', 'FunctionName': 'getSortField', 'ArgsCount': 0, 'MethodBody': 'public String getSortField()\n\t{\n\t\treturn sortField;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/TextPageCriteria.java'}, {'Syntax': 'criteria.isSortDescending()', 'FunctionName': 'isSortDescending', 'ArgsCount': 0, 'MethodBody': 'public boolean isSortDescending()\n\t{\n\t\treturn sortDescending;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/TextPageCriteria.java'}, {'Syntax': 'functionContext.getResultSender().lastResult(null)', 'FunctionName': 'lastResult', 'ArgsCount': 1, 'MethodBody': 'public void lastResult(T result)\r\n\t{\r\n\t\tresults.add(result);\r\n\t\t\r\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/functions/JvmResultsSender.java'}, {'Syntax': 'functionContext.getResultSender()', 'FunctionName': 'getResultSender', 'ArgsCount': 0, 'MethodBody': 'public ResultSender<T> getResultSender()\r\n\t{\r\n\t\treturn this.resultSender;\r\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/functions/JvmRegionFunctionContext.java'}, {'Syntax': 'functionContext.getResultSender().lastResult(pageCollection)', 'FunctionName': 'lastResult', 'ArgsCount': 1, 'MethodBody': 'public void lastResult(T result)\r\n\t{\r\n\t\tresults.add(result);\r\n\t\t\r\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/functions/JvmResultsSender.java'}, {'Syntax': 'functionContext.getResultSender()', 'FunctionName': 'getResultSender', 'ArgsCount': 0, 'MethodBody': 'public ResultSender<T> getResultSender()\r\n\t{\r\n\t\treturn this.resultSender;\r\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/functions/JvmRegionFunctionContext.java'}]"
6621cd8fcda9bd4817b110a0,cglib/cglib,"public static void getMethods(Class superclass, Class[] interfaces, List methods)
    {
        getMethods(superclass, interfaces, methods, null, null);
    }",Finds all of the methods that will be extended by an Enhancer - generated class using the specified superclass and interfaces . This can be useful in building a list of Callback objects . The methods are added to the end of the given list . Due to the subclassing nature of the classes generated by Enhancer the methods are guaranteed to be non - static non - final and non - private . Each method signature will only occur once even if it occurs in multiple classes .,cglib/src/main/java/net/sf/cglib/proxy/Enhancer.java,"[{'Syntax': 'getMethods(superclass, interfaces, methods, null, null)', 'FunctionName': 'getMethods', 'ArgsCount': 5, 'MethodBody': 'private static void getMethods(Class superclass, Class[] interfaces, List methods, List interfaceMethods, Set forcePublic)\n    {\n        ReflectUtils.addAllMethods(superclass, methods);\n        List target = (interfaceMethods != null) ? interfaceMethods : methods;\n        if (interfaces != null) {\n            for (int i = 0; i < interfaces.length; i++) {\n                if (interfaces[i] != Factory.class) {\n                    ReflectUtils.addAllMethods(interfaces[i], target);\n                }\n            }\n        }\n        if (interfaceMethods != null) {\n            if (forcePublic != null) {\n                forcePublic.addAll(MethodWrapper.createSet(interfaceMethods));\n            }\n            methods.addAll(interfaceMethods);\n        }\n        CollectionUtils.filter(methods, new RejectModifierPredicate(Constants.ACC_STATIC));\n        CollectionUtils.filter(methods, new VisibilityPredicate(superclass, true));\n        CollectionUtils.filter(methods, new DuplicatesPredicate(methods));\n        CollectionUtils.filter(methods, new RejectModifierPredicate(Constants.ACC_FINAL));\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/proxy/Enhancer.java'}]"
6621cd8fcda9bd4817b110a1,dbmdz/iiif-apis,"@JsonCreator
  public static RegionRequest fromString(String str) throws ResolvingException {
    if (str.equals(""full"")) {
      return new RegionRequest();
    }
    if (str.equals(""square"")) {
      return new RegionRequest(true);
    }
    Matcher matcher = PARSE_PAT.matcher(str);
    if (!matcher.matches()) {
      throw new ResolvingException(""Bad format: "" + str);
    }
    if (matcher.group(1) == null) {
      return new RegionRequest(
          Integer.valueOf(matcher.group(2)),
          Integer.valueOf(matcher.group(3)),
          Integer.valueOf(matcher.group(4)),
          Integer.valueOf(matcher.group(5)));
    } else {
      return new RegionRequest(
          new BigDecimal(matcher.group(2)),
          new BigDecimal(matcher.group(3)),
          new BigDecimal(matcher.group(4)),
          new BigDecimal(matcher.group(5)));
    }
  }",Parse an IIIF Image API compliant region request string,src/main/java/de/digitalcollections/iiif/model/image/RegionRequest.java,"[{'Syntax': 'str.equals(""full"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean equals(Object other) {\n    return (other instanceof Motivation && other.toString().equals(this.motivation));\n  }', 'FileName': '/dbmdz/iiif-apis/src/main/java/de/digitalcollections/iiif/model/Motivation.java'}, {'Syntax': 'str.equals(""square"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean equals(Object other) {\n    return (other instanceof Motivation && other.toString().equals(this.motivation));\n  }', 'FileName': '/dbmdz/iiif-apis/src/main/java/de/digitalcollections/iiif/model/Motivation.java'}]"
6621cd8fcda9bd4817b110a2,playframework/playframework,"public GuiceApplicationBuilder load(play.api.inject.Binding<?>... bindings) {
    return load(Guiceable.bindings(bindings));
  }",Override the module loader with the given Play bindings .,core/play-guice/src/main/java/play/inject/guice/GuiceApplicationBuilder.java,"[{'Syntax': 'load(Guiceable.bindings(bindings))', 'FunctionName': 'load', 'ArgsCount': 1, 'MethodBody': '@Override\n  public final Application load(ApplicationLoader.Context context) {\n    return builder(context).build();\n  }', 'FileName': '/playframework/playframework/core/play-guice/src/main/java/play/inject/guice/GuiceApplicationLoader.java'}, {'Syntax': 'Guiceable.bindings(bindings)', 'FunctionName': 'bindings', 'ArgsCount': 1, 'MethodBody': 'public static GuiceableModule bindings(play.api.inject.Binding... bindings) {\n    return GuiceableModule$.MODULE$.fromPlayBindings(Scala.toSeq(bindings));\n  }', 'FileName': '/playframework/playframework/core/play-guice/src/main/java/play/inject/guice/Guiceable.java'}]"
6621cd8fcda9bd4817b110a3,Unidata/thredds,"public void setup(HttpServletRequest req, HttpServletResponse resp)
            throws SendError
    {
        this.req = req;
        this.res = resp;
        if(!once)
            doonce(req);

        // Parse any query parameters
        try {
            this.params = new DownloadParameters(req);
        } catch (IOException ioe) {
            throw new SendError(res.SC_BAD_REQUEST, ioe);
        }
    }",Setup for each request,tds/src/main/java/thredds/server/reify/DownloadController.java,[]
6621cd8fcda9bd4817b110a4,NanoHttpd/nanohttpd,"public Response handle(IHTTPSession session) {
        for (IHandler<IHTTPSession, Response> interceptor : interceptors) {
            Response response = interceptor.handle(session);
            if (response != null)
                return response;
        }
        return httpHandler.handle(session);
    }",This is the master method that delegates requests to handlers and makes sure there is a response to every request . You are not supposed to call or override this method in any circumstances . But no one will stop you if you do . I m a Javadoc not Code Police .,core/src/main/java/org/nanohttpd/protocols/http/NanoHTTPD.java,"[{'Syntax': 'interceptor.handle(session)', 'FunctionName': 'handle', 'ArgsCount': 1, 'MethodBody': '@Override\n            public Response handle(IHTTPSession input) {\n                return NanoHTTPD.this.serve(input);\n            }', 'FileName': '/NanoHttpd/nanohttpd/core/src/main/java/org/nanohttpd/protocols/http/NanoHTTPD.java'}, {'Syntax': 'httpHandler.handle(session)', 'FunctionName': 'handle', 'ArgsCount': 1, 'MethodBody': '@Override\n            public Response handle(IHTTPSession input) {\n                return NanoHTTPD.this.serve(input);\n            }', 'FileName': '/NanoHttpd/nanohttpd/core/src/main/java/org/nanohttpd/protocols/http/NanoHTTPD.java'}]"
6621cd8fcda9bd4817b110a5,TooTallNate/Java-WebSocket,"public void broadcast(String text, Collection<WebSocket> clients) {
		if (text == null || clients == null) {
			throw new IllegalArgumentException();
		}
		doBroadcast(text, clients);
	}",Send a text to a specific collection of websocket connections,src/main/java/org/java_websocket/server/WebSocketServer.java,"[{'Syntax': 'doBroadcast(text, clients)', 'FunctionName': 'doBroadcast', 'ArgsCount': 2, 'MethodBody': 'private void doBroadcast(Object data, Collection<WebSocket> clients) {\n    String strData = null;\n    if (data instanceof String) {\n      strData = (String) data;\n    }\n    ByteBuffer byteData = null;\n    if (data instanceof ByteBuffer) {\n      byteData = (ByteBuffer) data;\n    }\n    if (strData == null && byteData == null) {\n      return;\n    }\n    Map<Draft, List<Framedata>> draftFrames = new HashMap<>();\n    List<WebSocket> clientCopy;\n    synchronized (clients) {\n      clientCopy = new ArrayList<>(clients);\n    }\n    for (WebSocket client : clientCopy) {\n      if (client != null) {\n        Draft draft = client.getDraft();\n        fillFrames(draft, draftFrames, strData, byteData);\n        try {\n          client.sendFrame(draftFrames.get(draft));\n        } catch (WebsocketNotConnectedException e) {\n          //Ignore this exception in this case\n        }\n      }\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/server/WebSocketServer.java'}]"
6621cd8fcda9bd4817b110a6,tiefaces/TieFaces,"public static List<RowsMapping> findChildRowsMappingFromShiftMap(
			final String fullName,
			final NavigableMap<String, ConfigRangeAttrs> shiftMap) {

		List<RowsMapping> rowsMappingList = new ArrayList<>();
		NavigableMap<String, ConfigRangeAttrs> tailmap = shiftMap
				.tailMap(fullName, false);
		for (Map.Entry<String, ConfigRangeAttrs> entry : tailmap
				.entrySet()) {
			String key = entry.getKey();
			// check it's children
			if (key.startsWith(fullName)) {
				rowsMappingList.add(entry.getValue().getUnitRowsMapping());
			} else {
				break;
			}
		}
		return rowsMappingList;
	}",Find child rows mapping from shift map .,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,"[{'Syntax': 'tailmap\r\n\t\t\t\t.entrySet()', 'FunctionName': 'entrySet', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final Set entrySet() {\r\n\t\treturn emptySet;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'entry.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': 'public SerialCellAddress getKey() {\r\n\t\treturn key;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'entry.getValue().getUnitRowsMapping()', 'FunctionName': 'getUnitRowsMapping', 'ArgsCount': 0, 'MethodBody': 'public final RowsMapping getUnitRowsMapping() {\r\n\t\treturn unitRowsMapping;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigRangeAttrs.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\r\n\t\treturn value;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}]"
6621cd8fcda9bd4817b110a7,jcodec/jcodec,"public static final void finish(int block[]) {
        for (int i = 0; i < 64; i += 4) {
            block[i] = div(block[i]);
            block[i + 1] = div(block[i + 1]);
            block[i + 2] = div(block[i + 2]);
            block[i + 3] = div(block[i + 3]);
        }
    }",Finalizes DCT calculation,src/main/java/org/jcodec/common/dct/SparseIDCT.java,"[{'Syntax': 'div(block[i])', 'FunctionName': 'div', 'ArgsCount': 1, 'MethodBody': 'private final static int div(int x) {\n        int m = x >> 31;\n        int n = x >>> 31;\n        return ((((x ^ m) + n) >> PRECISION) ^ m) + n;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/dct/SparseIDCT.java'}, {'Syntax': 'div(block[i + 1])', 'FunctionName': 'div', 'ArgsCount': 1, 'MethodBody': 'private final static int div(int x) {\n        int m = x >> 31;\n        int n = x >>> 31;\n        return ((((x ^ m) + n) >> PRECISION) ^ m) + n;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/dct/SparseIDCT.java'}, {'Syntax': 'div(block[i + 2])', 'FunctionName': 'div', 'ArgsCount': 1, 'MethodBody': 'private final static int div(int x) {\n        int m = x >> 31;\n        int n = x >>> 31;\n        return ((((x ^ m) + n) >> PRECISION) ^ m) + n;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/dct/SparseIDCT.java'}, {'Syntax': 'div(block[i + 3])', 'FunctionName': 'div', 'ArgsCount': 1, 'MethodBody': 'private final static int div(int x) {\n        int m = x >> 31;\n        int n = x >>> 31;\n        return ((((x ^ m) + n) >> PRECISION) ^ m) + n;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/dct/SparseIDCT.java'}]"
6621cd8fcda9bd4817b110a8,oblac/jodd,"public SqlType lookup(final Class clazz) {
		SqlType sqlType;
		for (Class x = clazz; x != null; x = x.getSuperclass()) {
			sqlType = types.get(clazz);
			if (sqlType != null) {
				return sqlType;
			}
			Class[] interfaces = x.getInterfaces();
			for (Class i : interfaces) {
				sqlType = types.get(i);
				if (sqlType != null) {
					return sqlType;
				}
			}
		}
		return null;
	}",Retrieves SQL type for provided type . All subclasses and interfaces are examined for matching sql type .,jodd-db/src/main/java/jodd/db/type/SqlTypeManager.java,"[{'Syntax': 'types.get(clazz)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'types.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cd8fcda9bd4817b110a9,Unidata/thredds,"static public String
    locateFile(String filename, String abspath, boolean wantdir)
    {
        Deque<String> q = new ArrayDeque<String>();
        // clean up the path and filename
        filename = filename.trim().replace('\\', '/');
        abspath = abspath.trim().replace('\\', '/');
        if(filename.charAt(0) == '/') filename = filename.substring(1);
        if(filename.endsWith(""/"")) filename = filename.substring(0, filename.length() - 1);
        if(abspath.endsWith(""/"")) abspath = abspath.substring(0, abspath.length() - 1);
        q.addFirst(abspath);  // prime the search queue

        for(; ; ) {  // breadth first search
            String currentpath = q.poll();
            if(currentpath == null) break; // done searching
            File current = new File(currentpath);
            File[] contents = current.listFiles();
            if(contents != null) {
                for(File subfile : contents) {
                    if(!subfile.getName().equals(filename)) continue;
                    if((wantdir && subfile.isDirectory())
                            || (!wantdir && subfile.isFile())) {
                        // Assume this is it
                        return DapUtil.canonicalpath(subfile.getAbsolutePath());
                    }
                }
                for(File subfile : contents) {
                    if(subfile.isDirectory())
                        q.addFirst(currentpath + ""/"" + subfile.getName());
                }
            }
        }
        return null;
    }",Walk the specified subtree dir tree to try to locate file|dir named filename . Use breadth first search .,dap4/d4core/src/main/java/dap4/core/util/DapUtil.java,[]
6621cd8fcda9bd4817b110aa,Unidata/thredds,"public BoolFunction getBoolFunction(String name)
            throws NoSuchFunctionException {

        if (!boolFunctions.containsKey(name)) {
            loadNewFunction(name);
        }
        return (BoolFunction) boolFunctions.get(name);
    }",Retrieves a boolean function from the library . If the function is not found the library will attempt to load it using the mechanism described in the class documentation .,opendap/src/main/java/opendap/servers/FunctionLibrary.java,[]
6621cd8fcda9bd4817b110ab,orientechnologies/orientdb,"public OIndexInternal<?> create(final OIndexDefinition indexDefinition, final String clusterIndexName,
      final Set<String> clustersToIndex, boolean rebuild, final OProgressListener progressListener,
      final OBinarySerializer valueSerializer) {
    acquireExclusiveLock();
    try {
      configuration = indexConfigurationInstance(new ODocument().setTrackingChanges(false));

      this.indexDefinition = indexDefinition;

      if (clustersToIndex != null)
        this.clustersToIndex = new HashSet<>(clustersToIndex);
      else
        this.clustersToIndex = new HashSet<>();

      // do not remove this, it is needed to remove index garbage if such one exists
      try {
        if (apiVersion == 0) {
          removeValuesContainer();
        }
      } catch (Exception e) {
        OLogManager.instance().error(this, ""Error during deletion of index '%s'"", e, name);
      }

      indexId = storage.addIndexEngine(name, algorithm, type, indexDefinition, valueSerializer, isAutomatic(), true, version, 1,
          this instanceof OIndexMultiValues, getEngineProperties(), clustersToIndex, metadata);
      apiVersion = OAbstractPaginatedStorage.extractEngineAPIVersion(indexId);

      assert indexId >= 0;
      assert apiVersion >= 0;

      onIndexEngineChange(indexId);

      if (rebuild)
        fillIndex(progressListener, false);

      updateConfiguration();
    } catch (Exception e) {
      OLogManager.instance().error(this, ""Exception during index '%s' creation"", e, name);

      while (true)
        try {
          if (indexId >= 0)
            storage.deleteIndexEngine(indexId);
          break;
        } catch (OInvalidIndexEngineIdException ignore) {
          doReloadIndexEngine();
        } catch (Exception ex) {
          OLogManager.instance().error(this, ""Exception during index '%s' deletion"", ex, name);
        }

      if (e instanceof OIndexException)
        throw (OIndexException) e;

      throw OException.wrapException(new OIndexException(""Cannot create the index '"" + name + ""'""), e);

    } finally {
      releaseExclusiveLock();
    }

    return this;
  }",Creates the index .,core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java,"[{'Syntax': 'acquireExclusiveLock()', 'FunctionName': 'acquireExclusiveLock', 'ArgsCount': 0, 'MethodBody': 'protected void acquireExclusiveLock() {\n    internalAcquireExclusiveLock();\n    writeLockNesting.incrementAndGet();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexManagerShared.java'}, {'Syntax': 'new ODocument().setTrackingChanges(false)', 'FunctionName': 'setTrackingChanges', 'ArgsCount': 1, 'MethodBody': 'public ODocument setTrackingChanges(final boolean iTrackingChanges) {\n    this.trackingChanges = iTrackingChanges;\n    if (!iTrackingChanges && fields != null) {\n      // FREE RESOURCES\n      Iterator<Entry<String, ODocumentEntry>> iter = fields.entrySet().iterator();\n      while (iter.hasNext()) {\n        Entry<String, ODocumentEntry> cur = iter.next();\n        if (!cur.getValue().exists()) {\n          iter.remove();\n        } else {\n          cur.getValue().clear();\n        }\n      }\n      removeAllCollectionChangeListeners();\n    } else {\n      addAllMultiValueChangeListeners();\n    }\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/impl/ODocument.java'}, {'Syntax': 'removeValuesContainer()', 'FunctionName': 'removeValuesContainer', 'ArgsCount': 0, 'MethodBody': 'private void removeValuesContainer() {\n    if (im.getAlgorithm().equals(ODefaultIndexFactory.SBTREE_BONSAI_VALUE_CONTAINER)) {\n\n      final OAtomicOperation atomicOperation =\n          storage.getAtomicOperationsManager().getCurrentOperation();\n\n      final OReadCache readCache = storage.getReadCache();\n      final OWriteCache writeCache = storage.getWriteCache();\n\n      if (atomicOperation == null) {\n        try {\n          final String fileName = im.getName() + OIndexRIDContainer.INDEX_FILE_EXTENSION;\n          if (writeCache.exists(fileName)) {\n            final long fileId = writeCache.loadFile(fileName);\n            readCache.deleteFile(fileId, writeCache);\n          }\n        } catch (IOException e) {\n          OLogManager.instance().error(this, ""Cannot delete file for value containers"", e);\n        }\n      } else {\n        try {\n          final String fileName = im.getName() + OIndexRIDContainer.INDEX_FILE_EXTENSION;\n          if (atomicOperation.isFileExists(fileName)) {\n            final long fileId = atomicOperation.loadFile(fileName);\n            atomicOperation.deleteFile(fileId);\n          }\n        } catch (IOException e) {\n          OLogManager.instance().error(this, ""Cannot delete file for value containers"", e);\n        }\n      }\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java'}, {'Syntax': 'OLogManager.instance().error(this, ""Error during deletion of index \'%s\'"", e, name)', 'FunctionName': 'error', 'ArgsCount': 4, 'MethodBody': 'public void error(\n      final Object iRequester,\n      final String iMessage,\n      final Throwable iException,\n      final Object... iAdditionalArgs) {\n    if (isErrorEnabled())\n      log(iRequester, Level.SEVERE, iMessage, iException, true, null, iAdditionalArgs);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/log/OLogManager.java'}, {'Syntax': 'OLogManager.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}, {'Syntax': 'isAutomatic()', 'FunctionName': 'isAutomatic', 'ArgsCount': 0, 'MethodBody': 'public boolean isAutomatic() {\n    return isAutomatic;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/config/IndexEngineData.java'}, {'Syntax': 'getEngineProperties()', 'FunctionName': 'getEngineProperties', 'ArgsCount': 0, 'MethodBody': 'public Map<String, String> getEngineProperties() {\n    if (engineProperties == null) return null;\n\n    return Collections.unmodifiableMap(engineProperties);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/config/IndexEngineData.java'}, {'Syntax': 'OAbstractPaginatedStorage.extractEngineAPIVersion(indexId)', 'FunctionName': 'extractEngineAPIVersion', 'ArgsCount': 1, 'MethodBody': 'public static int extractEngineAPIVersion(final int externalId) {\n    return externalId >>> (OIntegerSerializer.INT_SIZE * 8 - 5);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/OAbstractPaginatedStorage.java'}, {'Syntax': 'onIndexEngineChange(indexId)', 'FunctionName': 'onIndexEngineChange', 'ArgsCount': 1, 'MethodBody': 'protected void onIndexEngineChange(final int indexId) {\n    while (true)\n      try {\n        storage.callIndexEngine(\n            false,\n            indexId,\n            engine -> {\n              engine.init(im);\n              return null;\n            });\n        break;\n      } catch (OInvalidIndexEngineIdException ignore) {\n        doReloadIndexEngine();\n      }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java'}, {'Syntax': 'fillIndex(progressListener, false)', 'FunctionName': 'fillIndex', 'ArgsCount': 2, 'MethodBody': 'private long fillIndex(final OProgressListener iProgressListener, final boolean rebuild) {\n    long documentIndexed = 0;\n    try {\n      long documentNum = 0;\n      long documentTotal = 0;\n\n      for (final String cluster : clustersToIndex)\n        documentTotal += storage.count(storage.getClusterIdByName(cluster));\n\n      if (iProgressListener != null) iProgressListener.onBegin(this, documentTotal, rebuild);\n\n      // INDEX ALL CLUSTERS\n      for (final String clusterName : clustersToIndex) {\n        final long[] metrics =\n            indexCluster(\n                clusterName, iProgressListener, documentNum, documentIndexed, documentTotal);\n        documentNum = metrics[0];\n        documentIndexed = metrics[1];\n      }\n\n      if (iProgressListener != null) iProgressListener.onCompletition(this, true);\n    } catch (final RuntimeException e) {\n      if (iProgressListener != null) iProgressListener.onCompletition(this, false);\n      throw e;\n    }\n    return documentIndexed;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java'}, {'Syntax': 'updateConfiguration()', 'FunctionName': 'updateConfiguration', 'ArgsCount': 0, 'MethodBody': 'ODocument updateConfiguration();', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexInternal.java'}, {'Syntax': 'OLogManager.instance().error(this, ""Exception during index \'%s\' creation"", e, name)', 'FunctionName': 'error', 'ArgsCount': 4, 'MethodBody': 'public void error(\n      final Object iRequester,\n      final String iMessage,\n      final Throwable iException,\n      final Object... iAdditionalArgs) {\n    if (isErrorEnabled())\n      log(iRequester, Level.SEVERE, iMessage, iException, true, null, iAdditionalArgs);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/log/OLogManager.java'}, {'Syntax': 'OLogManager.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}, {'Syntax': 'storage.deleteIndexEngine(indexId)', 'FunctionName': 'deleteIndexEngine', 'ArgsCount': 1, 'MethodBody': 'public void deleteIndexEngine(String name) {\n    lock.writeLock().lock();\n    try {\n      indexEngines.remove(name);\n      update();\n    } finally {\n      lock.writeLock().unlock();\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/config/OStorageConfigurationImpl.java'}, {'Syntax': 'doReloadIndexEngine()', 'FunctionName': 'doReloadIndexEngine', 'ArgsCount': 0, 'MethodBody': 'protected void doReloadIndexEngine() {\n    indexId = storage.loadIndexEngine(im.getName());\n    apiVersion = OAbstractPaginatedStorage.extractEngineAPIVersion(indexId);\n\n    if (indexId < 0) {\n      throw new IllegalStateException(""Index "" + im.getName() + "" can not be loaded"");\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java'}, {'Syntax': 'OLogManager.instance().error(this, ""Exception during index \'%s\' deletion"", ex, name)', 'FunctionName': 'error', 'ArgsCount': 4, 'MethodBody': 'public void error(\n      final Object iRequester,\n      final String iMessage,\n      final Throwable iException,\n      final Object... iAdditionalArgs) {\n    if (isErrorEnabled())\n      log(iRequester, Level.SEVERE, iMessage, iException, true, null, iAdditionalArgs);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/log/OLogManager.java'}, {'Syntax': 'OLogManager.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}, {'Syntax': 'OException.wrapException(new OIndexException(""Cannot create the index \'"" + name + ""\'""), e)', 'FunctionName': 'wrapException', 'ArgsCount': 2, 'MethodBody': 'public static OException wrapException(final OException exception, final Throwable cause) {\n    if (cause instanceof OHighLevelException) return (OException) cause;\n\n    exception.initCause(cause);\n    return exception;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/exception/OException.java'}, {'Syntax': 'releaseExclusiveLock()', 'FunctionName': 'releaseExclusiveLock', 'ArgsCount': 0, 'MethodBody': 'protected void releaseExclusiveLock() {\n    releaseExclusiveLock(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexManagerShared.java'}]"
6621cd8fcda9bd4817b110ac,ngageoint/geopackage-android,"public StyleDao getStyleDao() {
        StyleDao styleDao = null;
        if (geoPackage.isTable(StyleTable.TABLE_NAME)) {
            AttributesDao attributesDao = getGeoPackage().getAttributesDao(
                    StyleTable.TABLE_NAME);
            styleDao = new StyleDao(attributesDao);
            relatedTables.setContents(styleDao.getTable());
        }
        return styleDao;
    }",Get a style DAO,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,"[{'Syntax': 'getGeoPackage().getAttributesDao(\n                    StyleTable.TABLE_NAME)', 'FunctionName': 'getAttributesDao', 'ArgsCount': 1, 'MethodBody': '@Override\n    public AttributesDao getAttributesDao(Contents contents) {\n\n        if (contents == null) {\n            throw new GeoPackageException(""Non null ""\n                    + Contents.class.getSimpleName()\n                    + "" is required to create ""\n                    + AttributesDao.class.getSimpleName());\n        }\n        if (!contents.isAttributesTypeOrUnknown()) {\n            throw new GeoPackageException(Contents.class.getSimpleName()\n                    + "" is required to be of type ""\n                    + ContentsDataType.ATTRIBUTES + "". Actual: ""\n                    + contents.getDataTypeName());\n        }\n\n        // Read the existing table and create the dao\n        AttributesTableReader tableReader = new AttributesTableReader(\n                contents.getTableName());\n        final AttributesTable attributesTable = tableReader.readTable(database);\n        attributesTable.setContents(contents);\n        AttributesDao dao = new AttributesDao(getName(), database,\n                attributesTable);\n\n        // Register the table name (with and without quotes) to wrap cursors with the attributes cursor\n        registerCursorWrapper(attributesTable.getTableName(),\n                new GeoPackageCursorWrapper() {\n\n                    @Override\n                    public Cursor wrapCursor(Cursor cursor) {\n                        return new AttributesCursor(attributesTable, cursor);\n                    }\n                });\n\n        return dao;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/GeoPackageImpl.java'}, {'Syntax': 'getGeoPackage()', 'FunctionName': 'getGeoPackage', 'ArgsCount': 0, 'MethodBody': '@Override\n\tprotected GeoPackage getGeoPackage() throws Exception {\n\t\treturn TestSetupTeardown.setUpImport(activity, testContext);\n\t}', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/androidTest/java/mil/nga/geopackage/ImportGeoPackageTestCase.java'}, {'Syntax': 'styleDao.getTable()', 'FunctionName': 'getTable', 'ArgsCount': 0, 'MethodBody': 'public TTable getTable() {\n        return table;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserConnection.java'}]"
6621cd8fcda9bd4817b110ad,orientechnologies/orientdb,"public OClientConnection getConnection(final int iChannelId, ONetworkProtocol protocol) {
    // SEARCH THE CONNECTION BY ID
    OClientConnection connection = connections.get(iChannelId);
    if (connection != null)
      connection.setProtocol(protocol);

    return connection;
  }",Retrieves the connection by id .,server/src/main/java/com/orientechnologies/orient/server/OClientConnectionManager.java,"[{'Syntax': 'connections.get(iChannelId)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@ConsoleCommand(description = ""Return the value of a property"")\n  public void get(\n      @ConsoleParameter(name = ""property-name"", description = ""Name of the property"")\n          final String iPropertyName) {\n    Object value = properties.get(iPropertyName);\n\n    out.println();\n\n    if (value == null) message(""\\nProperty \'"" + iPropertyName + ""\' is not setted"");\n    else out.println(iPropertyName + "" = "" + value);\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'connection.setProtocol(protocol)', 'FunctionName': 'setProtocol', 'ArgsCount': 1, 'MethodBody': 'public void setProtocol(ONetworkProtocol protocol) {\n    this.protocol = protocol;\n  }', 'FileName': '/orientechnologies/orientdb/server/src/main/java/com/orientechnologies/orient/server/OClientConnection.java'}]"
6621cd8fcda9bd4817b110ae,orientechnologies/orientdb,"@SuppressWarnings(""unchecked"")
  public <T> OBinarySerializer<T> getObjectSerializer(final OType type) {
    return (OBinarySerializer<T>) serializerTypeMap.get(type);
  }",Obtain OBinarySerializer realization for the OType,core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/binary/OBinarySerializerFactory.java,"[{'Syntax': 'serializerTypeMap.get(type)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@ConsoleCommand(description = ""Return the value of a property"")\n  public void get(\n      @ConsoleParameter(name = ""property-name"", description = ""Name of the property"")\n          final String iPropertyName) {\n    Object value = properties.get(iPropertyName);\n\n    out.println();\n\n    if (value == null) message(""\\nProperty \'"" + iPropertyName + ""\' is not setted"");\n    else out.println(iPropertyName + "" = "" + value);\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}]"
6621cd90cda9bd4817b110af,wildfly/wildfly,"public static ServiceName jobOperatorServiceName(final String deploymentRuntimeName, final String subdeploymentName) {
        return Services.deploymentUnitName(deploymentRuntimeName, subdeploymentName).append(""batch"").append(""job-operator"");
    }",Creates the service name used for the job operator registered for the deployment .,batch-jberet/src/main/java/org/wildfly/extension/batch/jberet/BatchServiceNames.java,"[{'Syntax': 'Services.deploymentUnitName(deploymentRuntimeName, subdeploymentName).append(""batch"").append(""job-operator"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(String m) {\n        message += m;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/interceptor/aroundconstruct/nocreate/AroundConstructSLSB.java'}, {'Syntax': 'Services.deploymentUnitName(deploymentRuntimeName, subdeploymentName).append(""batch"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(String m) {\n        message += m;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/interceptor/aroundconstruct/nocreate/AroundConstructSLSB.java'}]"
6621cd90cda9bd4817b110b0,marklogic/marklogic-jena,"public void writePermissions(Node graphName, GraphPermissions permissions) {
        checkIsOpen();
        client.writeGraphPermissions(graphName.getURI(), permissions);
    }",Sets the permissions on a graph .,marklogic-jena/src/main/java/com/marklogic/semantics/jena/MarkLogicDatasetGraph.java,"[{'Syntax': 'checkIsOpen()', 'FunctionName': 'checkIsOpen', 'ArgsCount': 0, 'MethodBody': 'private void checkIsOpen() {\n        if (client == null) {\n            throw new MarkLogicJenaException(""DatabaseGraph is closed"");\n        }\n    }', 'FileName': '/marklogic/marklogic-jena/marklogic-jena/src/main/java/com/marklogic/semantics/jena/MarkLogicDatasetGraph.java'}, {'Syntax': 'client.writeGraphPermissions(graphName.getURI(), permissions)', 'FunctionName': 'writeGraphPermissions', 'ArgsCount': 2, 'MethodBody': 'public void writeGraphPermissions(String uri, GraphPermissions permissions) {\n        this.graphManager\n                .writePermissions(uri, permissions, currentTransaction);\n    }', 'FileName': '/marklogic/marklogic-jena/marklogic-jena/src/main/java/com/marklogic/semantics/jena/client/JenaDatabaseClient.java'}]"
6621cd90cda9bd4817b110b1,Unidata/thredds,"public String getUserHead() {
    return new StringBuilder()
            .append(""<table width='100%'><tr><td>\n"")
            .append(""  <img src='"").append(this.htmlConfig.prepareUrlStringForHtml(this.htmlConfig.getHostInstLogoUrl()))
            .append(""'\n"")
            .append(""       alt='"").append(this.htmlConfig.getHostInstLogoAlt()).append(""'\n"")
            .append(""       align='left' valign='top'\n"")
            .append(""       hspace='10' vspace='2'>\n"")
            .append(""  <h3><strong>"").append(this.tdsContext.getWebappDisplayName()).append(""</strong></h3>\n"")
            .append(""</td></tr></table>\n"")
            .toString();
  }",public static final String UNIDATA_HEAD,tds/src/main/java/thredds/core/ConfigCatalogHtmlWriter.java,[]
6621cd90cda9bd4817b110b2,rackerlabs/blueflood,"private void createContainer() {
        String containerName = CONTAINER_DATE_FORMAT.format(new Date());
        blobStore.createContainerInLocation(null, containerName);
        lastContainerCreated = containerName;
    }",idempotent other than when the month changes between two calls,blueflood-cloudfiles/src/main/java/com/rackspacecloud/blueflood/outputs/cloudfiles/CloudFilesPublisher.java,[]
6621cd90cda9bd4817b110b3,cologneintelligence/FitGoodies,"public void addCaptureToLogger(final AppenderAttachable logger,
	                               final String appenderName) {
		Appender currentAppender = logger.getAppender(appenderName);
		Appender captureAppender = CaptureAppender.newAppenderFrom(currentAppender);
		logger.addAppender(captureAppender);
	}",Adds a new CaptureAppender to an existing logger .,fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/LogHelper.java,"[{'Syntax': 'logger.getAppender(appenderName)', 'FunctionName': 'getAppender', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic Appender getAppender(final String name) {\n\t\t\tif (CaptureAppender.getAppenderNameFor(""R"").equals(name)) {\n\t\t\t\treturn app1;\n\t\t\t} else if (CaptureAppender.getAppenderNameFor(""stderr"").equals(name)) {\n\t\t\t\treturn app2;\n\t\t\t} else {\n\t\t\t\treturn baseAppender;\n\t\t\t}\n\t\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/test/java/de/cologneintelligence/fitgoodies/log4j/LogHelperTest.java'}, {'Syntax': 'CaptureAppender.newAppenderFrom(currentAppender)', 'FunctionName': 'newAppenderFrom', 'ArgsCount': 1, 'MethodBody': 'public static CaptureAppender newAppenderFrom(final Appender parentAppender) {\n\t\treturn new CaptureAppender(parentAppender);\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/CaptureAppender.java'}, {'Syntax': 'logger.addAppender(captureAppender)', 'FunctionName': 'addAppender', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic void addAppender(final Appender appender) {\n\t\t\tif (app1 == null) {\n\t\t\t\tapp1 = appender;\n\t\t\t} else {\n\t\t\t\tapp2 = appender;\n\t\t\t}\n\t\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/test/java/de/cologneintelligence/fitgoodies/log4j/LogHelperTest.java'}]"
6621cd90cda9bd4817b110b4,Unidata/thredds,"public StationTimeSeriesFeature makeStation(StructureData stationData, int recnum) {
    StationFeature s = ft.makeStation(stationData);
    if (s == null) return null;
    return new StandardStationFeatureImpl(s, timeUnit, stationData, recnum);
  }",Make a Station from the station data structure .,cdm/src/main/java/ucar/nc2/ft/point/standard/StandardStationCollectionImpl.java,[]
6621cd90cda9bd4817b110b5,real-logic/aeron,"public static long quorumPosition(final ClusterMember[] members, final long[] rankedPositions)
    {
        final int length = rankedPositions.length;
        for (int i = 0; i < length; i++)
        {
            rankedPositions[i] = 0;
        }

        for (final ClusterMember member : members)
        {
            long newPosition = member.logPosition;

            for (int i = 0; i < length; i++)
            {
                final long rankedPosition = rankedPositions[i];

                if (newPosition > rankedPosition)
                {
                    rankedPositions[i] = newPosition;
                    newPosition = rankedPosition;
                }
            }
        }

        return rankedPositions[length - 1];
    }",Calculate the position reached by a quorum of cluster members .,aeron-cluster/src/main/java/io/aeron/cluster/ClusterMember.java,[]
6621cd90cda9bd4817b110b6,google/guice,"public static <T> TypeLiteral<T> canonicalizeForKey(TypeLiteral<T> typeLiteral) {
    Type type = typeLiteral.getType();
    if (!isFullySpecified(type)) {
      Errors errors = new Errors().keyNotFullySpecified(typeLiteral);
      throw new ConfigurationException(errors.getMessages());
    }

    if (typeLiteral.getRawType() == javax.inject.Provider.class) {
      ParameterizedType parameterizedType = (ParameterizedType) type;

      // the following casts are generally unsafe, but com.google.inject.Provider extends
      // javax.inject.Provider and is covariant
      @SuppressWarnings(""unchecked"")
      TypeLiteral<T> guiceProviderType =
          (TypeLiteral<T>)
              TypeLiteral.get(Types.providerOf(parameterizedType.getActualTypeArguments()[0]));
      return guiceProviderType;
    }

    @SuppressWarnings(""unchecked"")
    TypeLiteral<T> wrappedPrimitives = (TypeLiteral<T>) PRIMITIVE_TO_WRAPPER.get(typeLiteral);
    if (wrappedPrimitives != null) {
      return wrappedPrimitives;
    }

    // If we know this isn't a subclass, return as-is.
    if (typeLiteral.getClass() == TypeLiteral.class) {
      return typeLiteral;
    }

    // recreate the TypeLiteral to avoid anonymous TypeLiterals from holding refs to their
    // surrounding classes.
    @SuppressWarnings(""unchecked"")
    TypeLiteral<T> recreated = (TypeLiteral<T>) TypeLiteral.get(typeLiteral.getType());
    return recreated;
  }",Returns an type that s appropriate for use in a key .,core/src/com/google/inject/internal/MoreTypes.java,"[{'Syntax': 'typeLiteral.getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': 'public Type getType() {\n    return type;\n  }', 'FileName': '/google/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java'}, {'Syntax': 'isFullySpecified(type)', 'FunctionName': 'isFullySpecified', 'ArgsCount': 1, 'MethodBody': 'private static boolean isFullySpecified(Type type) {\n    if (type instanceof Class) {\n      return true;\n\n    } else if (type instanceof CompositeType) {\n      return ((CompositeType) type).isFullySpecified();\n\n    } else if (type instanceof TypeVariable) {\n      return false;\n\n    } else {\n      return ((CompositeType) canonicalize(type)).isFullySpecified();\n    }\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/MoreTypes.java'}, {'Syntax': 'new Errors().keyNotFullySpecified(typeLiteral)', 'FunctionName': 'keyNotFullySpecified', 'ArgsCount': 1, 'MethodBody': 'public Errors keyNotFullySpecified(TypeLiteral<?> typeLiteral) {\n    return addMessage(\n        ErrorId.KEY_NOT_FULLY_SPECIFIED,\n        ""%s cannot be used as a key; It is not fully specified."",\n        typeLiteral);\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/Errors.java'}, {'Syntax': 'errors.getMessages()', 'FunctionName': 'getMessages', 'ArgsCount': 0, 'MethodBody': 'public List<Message> getMessages() {\n    if (root.errors == null) {\n      return ImmutableList.of();\n    }\n\n    return new Ordering<Message>() {\n      @Override\n      public int compare(Message a, Message b) {\n        return a.getSource().compareTo(b.getSource());\n      }\n    }.sortedCopy(root.errors);\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/Errors.java'}, {'Syntax': 'typeLiteral.getRawType()', 'FunctionName': 'getRawType', 'ArgsCount': 0, 'MethodBody': 'public final Class<? super T> getRawType() {\n    return rawType;\n  }', 'FileName': '/google/guice/core/src/com/google/inject/TypeLiteral.java'}, {'Syntax': 'TypeLiteral.get(Types.providerOf(parameterizedType.getActualTypeArguments()[0]))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'T get(T defaultValue) throws RemoteException;', 'FileName': '/google/guice/extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java'}, {'Syntax': 'Types.providerOf(parameterizedType.getActualTypeArguments()[0])', 'FunctionName': 'providerOf', 'ArgsCount': 1, 'MethodBody': 'public static ParameterizedType providerOf(Type providedType) {\n    return newParameterizedType(Provider.class, providedType);\n  }', 'FileName': '/google/guice/core/src/com/google/inject/util/Types.java'}, {'Syntax': 'parameterizedType.getActualTypeArguments()', 'FunctionName': 'getActualTypeArguments', 'ArgsCount': 0, 'MethodBody': '@Override\n    public Type[] getActualTypeArguments() {\n      return typeArguments.clone();\n    }', 'FileName': '/google/guice/core/src/com/google/inject/internal/MoreTypes.java'}, {'Syntax': 'PRIMITIVE_TO_WRAPPER.get(typeLiteral)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'T get(T defaultValue) throws RemoteException;', 'FileName': '/google/guice/extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java'}, {'Syntax': 'TypeLiteral.get(typeLiteral.getType())', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'T get(T defaultValue) throws RemoteException;', 'FileName': '/google/guice/extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java'}, {'Syntax': 'typeLiteral.getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': 'public Type getType() {\n    return type;\n  }', 'FileName': '/google/guice/extensions/grapher/src/com/google/inject/grapher/BindingEdge.java'}]"
6621cd90cda9bd4817b110b7,oblac/jodd,"protected void createFirstChainDelegate_Continue(final TargetMethodData tmd) {
		methodVisitor.visitCode();

		if (tmd.msign.isStatic) {
			loadStaticMethodArguments(methodVisitor, tmd.msign);
			methodVisitor.visitMethodInsn(
				INVOKESTATIC,
				wd.thisReference,
				tmd.firstMethodName(),
				tmd.msign.getDescription(),
				false);
		} else {
			loadSpecialMethodArguments(methodVisitor, tmd.msign);
			methodVisitor.visitMethodInsn(
				INVOKESPECIAL,
				wd.thisReference,
				tmd.firstMethodName(),
				tmd.msign.getDescription(),
				false);
		}

		visitReturn(methodVisitor, tmd.msign, false);

		methodVisitor.visitMaxs(0, 0);
		methodVisitor.visitEnd();
	}",Continues the creation of the very first method in calling chain that simply delegates invocation to the first proxy method . This method mirrors the target method .,jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxettaMethodBuilder.java,[]
6621cd90cda9bd4817b110b8,streamsets/datacollector,"@Override public boolean add(E e) {
    checkNotNull(e);  // check before removing
    if (maxSize == 0) {
      return true;
    }
    if (size() == maxSize) {
      delegate.remove();
    }
    delegate.add(e);
    return true;
  }",Adds the given element to this queue . If the queue is currently full the element at the head of the queue is evicted to make room .,common/src/main/java/com/streamsets/pipeline/lib/queue/XEvictingQueue.java,[]
6621cd90cda9bd4817b110b9,oblac/jodd,"public void registerPetiteMethodInjectionPoint(final String beanName, final String methodName, final Class[] arguments, final String[] references) {
		BeanDefinition beanDefinition = lookupExistingBeanDefinition(beanName);

		ClassDescriptor cd = ClassIntrospector.get().lookup(beanDefinition.type);

		Method method = null;
		if (arguments == null) {
			MethodDescriptor[] methods = cd.getAllMethodDescriptors(methodName);

			if (methods != null && methods.length > 0) {
				if (methods.length > 1) {
					throw new PetiteException(methods.length + "" suitable methods found as injection points for: "" + beanDefinition.type.getName() + '#' + methodName);
				}
				method = methods[0].getMethod();
			}
		} else {
			MethodDescriptor md = cd.getMethodDescriptor(methodName, arguments, true);
			if (md != null) {
				method = md.getMethod();
			}
		}
		if (method == null) {
			throw new PetiteException(""Method not found: "" + beanDefinition.type.getName() + '#' + methodName);
		}

		BeanReferences[] ref = referencesResolver.resolveReferenceFromValues(method, references);

		MethodInjectionPoint mip = new MethodInjectionPoint(method, ref);

		beanDefinition.addMethodInjectionPoint(mip);
	}",Registers method injection point .,jodd-petite/src/main/java/jodd/petite/PetiteBeans.java,"[{'Syntax': 'ClassIntrospector.get().lookup(beanDefinition.type)', 'FunctionName': 'lookup', 'ArgsCount': 1, 'MethodBody': 'public ActionConfig lookup(final Class actionTypeOrAnnotationType) {\n\t\tfinal ActionConfig actionConfig = actionConfigs.get(actionTypeOrAnnotationType);\n\n\t\tif (actionConfig == null) {\n\t\t\tthrow new MadvocException(""ActionConfiguration not registered:"" + actionTypeOrAnnotationType.getName());\n\t\t}\n\t\treturn actionConfig;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionConfigManager.java'}, {'Syntax': 'ClassIntrospector.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public boolean get() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}, {'Syntax': 'beanDefinition.type.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'beanDefinition.type.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}]"
6621cd90cda9bd4817b110ba,RestComm/jain-slee,"private void buildProfileAttributeMap() throws DeploymentException {
		 HashMap<String, ProfileAttribute> map = new HashMap<String, ProfileAttribute>();
		 Class<?> cmpInterface = getProfileCmpInterfaceClass();
		 String attributeGetterMethodPrefix = ""get"";
		 for (Method method : cmpInterface.getMethods()) {
			 if (!method.getDeclaringClass().equals(Object.class) && method.getName().startsWith(attributeGetterMethodPrefix)) {
				 String attributeName = method.getName().substring(attributeGetterMethodPrefix.length());
				 switch (attributeName.length()) {
				 case 0:
					throw new DeploymentException(""the profile cmp interface class has an invalid attribute getter method name > ""+method.getName());					
				 case 1:
					attributeName = attributeName.toLowerCase();
					break;					
				 default:
					attributeName = attributeName.substring(0, 1).toLowerCase() + attributeName.substring(1);
				 	break;
				 }			
				 ProfileAttributeImpl profileAttribute = null;
				 try {
					profileAttribute = new ProfileAttributeImpl(attributeName,method.getReturnType());
				 } catch (Throwable e) {
					throw new DeploymentException(""Invalid profile cmp interface attribute getter method definition ( name = ""+attributeName+"" , type = ""+method.getReturnType()+"" )"",e);
				 }
				 if (isSlee11()) {
					 for (ProfileCMPFieldDescriptor cmpField : getDescriptor().getProfileCMPInterface().getCmpFields()) {
						 if (cmpField.getCmpFieldName().equals(attributeName)) {
							 // TODO add index hints ?
							 profileAttribute.setUnique(cmpField.isUnique());
						 }
					 }
				 }
				 else {
					 for (ProfileIndexDescriptor profileIndex : getDescriptor().getIndexedAttributes()) {
						 if (profileIndex.getName().equals(attributeName)) {
							 profileAttribute.setIndex(true);
							 profileAttribute.setUnique(profileIndex.getUnique());
						 }
					 }
				 }
				 map.put(attributeName, profileAttribute);
			 }
		 }
		 profileAttributeMap = Collections.unmodifiableMap(map);		
	}",Builds the profile attribute map using the cmp interface class,container/components/components/src/main/java/org/mobicents/slee/container/component/ProfileSpecificationComponentImpl.java,"[{'Syntax': 'getProfileCmpInterfaceClass()', 'FunctionName': 'getProfileCmpInterfaceClass', 'ArgsCount': 0, 'MethodBody': 'public Class<?> getProfileCmpInterfaceClass() {\r\n\t\treturn profileCmpInterfaceClass;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/ProfileSpecificationComponentImpl.java'}, {'Syntax': 'method.getDeclaringClass().equals(Object.class)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'method.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'method.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'method.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'isSlee11()', 'FunctionName': 'isSlee11', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic boolean isSlee11() {\r\n\t\treturn descriptor.isSlee11();\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'getDescriptor().getProfileCMPInterface().getCmpFields()', 'FunctionName': 'getCmpFields', 'ArgsCount': 0, 'MethodBody': 'public Map<String, CMPFieldDescriptor> getCmpFields() {\r\n\t\treturn cmpFields;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/jaxb/descriptors/SbbDescriptorImpl.java'}, {'Syntax': 'getDescriptor().getProfileCMPInterface()', 'FunctionName': 'getProfileCMPInterface', 'ArgsCount': 0, 'MethodBody': 'public ProfileCMPInterfaceDescriptor getProfileCMPInterface() {\n\t\treturn profileCMPInterface;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/jaxb/descriptors/ProfileSpecificationDescriptorImpl.java'}, {'Syntax': 'getDescriptor()', 'FunctionName': 'getDescriptor', 'ArgsCount': 0, 'MethodBody': 'public EventTypeDescriptorImpl getDescriptor() {\r\n\t\treturn descriptor;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'cmpField.getCmpFieldName().equals(attributeName)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'cmpField.getCmpFieldName()', 'FunctionName': 'getCmpFieldName', 'ArgsCount': 0, 'MethodBody': 'public String getCmpFieldName() {\r\n    return cmpFieldName;\r\n  }', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/jaxb/descriptors/profile/MCMPField.java'}, {'Syntax': 'profileAttribute.setUnique(cmpField.isUnique())', 'FunctionName': 'setUnique', 'ArgsCount': 1, 'MethodBody': 'public void setUnique(boolean unique) {\n\t\tthis.unique = unique;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/profile/ProfileAttributeImpl.java'}, {'Syntax': 'cmpField.isUnique()', 'FunctionName': 'isUnique', 'ArgsCount': 0, 'MethodBody': 'public boolean isUnique() {\n\t\treturn unique;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/profile/ProfileAttributeImpl.java'}, {'Syntax': 'getDescriptor().getIndexedAttributes()', 'FunctionName': 'getIndexedAttributes', 'ArgsCount': 0, 'MethodBody': 'public List<MProfileIndex> getIndexedAttributes() {\n\t\treturn indexedAttributes;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/jaxb/descriptors/ProfileSpecificationDescriptorImpl.java'}, {'Syntax': 'getDescriptor()', 'FunctionName': 'getDescriptor', 'ArgsCount': 0, 'MethodBody': 'public EventTypeDescriptorImpl getDescriptor() {\r\n\t\treturn descriptor;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/EventTypeComponentImpl.java'}, {'Syntax': 'profileIndex.getName().equals(attributeName)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj == this) return true;\n            if (!(obj instanceof Property)) return false;\n\n            Property that = (Property)obj;\n            return this.name.equals(that.name)\n                && this.type.equals(that.type)\n                && this.value == null ? that.value == null : this.value.equals(that.value);\n        }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'profileIndex.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'profileAttribute.setIndex(true)', 'FunctionName': 'setIndex', 'ArgsCount': 1, 'MethodBody': 'public void setIndex(boolean index) {\n\t\tthis.index = index;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/profile/ProfileAttributeImpl.java'}, {'Syntax': 'profileAttribute.setUnique(profileIndex.getUnique())', 'FunctionName': 'setUnique', 'ArgsCount': 1, 'MethodBody': 'public void setUnique(boolean unique) {\n\t\tthis.unique = unique;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/profile/ProfileAttributeImpl.java'}, {'Syntax': 'profileIndex.getUnique()', 'FunctionName': 'getUnique', 'ArgsCount': 0, 'MethodBody': 'public boolean getUnique() {\r\n\t\treturn unique;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/jaxb/descriptors/profile/MProfileIndex.java'}, {'Syntax': 'map.put(attributeName, profileAttribute)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public boolean put(K key, V value);', 'FileName': '/RestComm/jain-slee/container/fault-tolerant-ra/api/src/main/java/org/mobicents/slee/resource/cluster/ReplicatedData.java'}]"
6621cd90cda9bd4817b110bb,lessthanoptimal/GeoRegression,"public static Se3_F64 planeToWorld( PlaneGeneral3D_F64 plane , Se3_F64 planeToWorld ) {
		if( planeToWorld == null )
			planeToWorld = new Se3_F64();

		Vector3D_F64 axisZ = new Vector3D_F64(plane.A,plane.B,plane.C);

		axisZ.normalize();
		Vector3D_F64 axisX = new Vector3D_F64();
		Vector3D_F64 axisY = new Vector3D_F64();
		UtilPlane3D_F64.selectAxis2D(axisZ,axisX,axisY);

		return planeToWorld(plane,axisX,axisY,axisZ,planeToWorld);
	}",Creates a transform from the plane s reference frame into world s reference frame . The z - axis is set to the plane s normal and the x - axis and y - axis are arbitrarily choosen . Points which lie along the plane will lie along its x - y plane .,main/src/georegression/geometry/UtilPlane3D_F64.java,"[{'Syntax': 'axisZ.normalize()', 'FunctionName': 'normalize', 'ArgsCount': 0, 'MethodBody': '@Test\n\tvoid normalize() {\n\t\tVector3D_F64 a = new Vector3D_F64( 3, 3, 4 );\n\n\t\tUtilVector3D_F64.normalize( a );\n\n\t\tassertEquals( 1, a.norm(), GrlConstants.TEST_F64);\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/test/georegression/geometry/TestUtilVector3D_F64.java'}, {'Syntax': 'UtilPlane3D_F64.selectAxis2D(axisZ,axisX,axisY)', 'FunctionName': 'selectAxis2D', 'ArgsCount': 3, 'MethodBody': 'public static void selectAxis2D( Vector3D_F64 normal , Vector3D_F64 axisX , Vector3D_F64 axisY ) {\n\t\tUtilVector3D_F64.perpendicularCanonical(normal,axisX);\n\t\taxisX.normalize();\n\t\taxisY.crossSetTo(normal,axisX);\n\t\taxisY.normalize();\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/geometry/UtilPlane3D_F64.java'}, {'Syntax': 'planeToWorld(plane,axisX,axisY,axisZ,planeToWorld)', 'FunctionName': 'planeToWorld', 'ArgsCount': 5, 'MethodBody': 'public static Se3_F64 planeToWorld( PlaneGeneral3D_F64 plane ,\n\t\t\t\t\t\t\t\t\t\tVector3D_F64 axisX , Vector3D_F64 axisY,Vector3D_F64 axisZ,\n\t\t\t\t\t\t\t\t\t\t@Nullable Se3_F64 planeToWorld ) {\n\t\tif( planeToWorld == null )\n\t\t\tplaneToWorld = new Se3_F64();\n\n\t\tDMatrixRMaj R = planeToWorld.R;\n\t\tR.data[0] = axisX.x; R.data[1] = axisY.x; R.data[2] = axisZ.x;\n\t\tR.data[3] = axisX.y; R.data[4] = axisY.y; R.data[5] = axisZ.y;\n\t\tR.data[6] = axisX.z; R.data[7] = axisY.z; R.data[8] = axisZ.z;\n\n\t\tPoint3D_F64 cp = ClosestPoint3D_F64.closestPointOrigin(plane,null);\n\t\tplaneToWorld.getT().setTo(cp.x,cp.y,cp.z);\n\n\t\treturn planeToWorld;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/geometry/UtilPlane3D_F64.java'}]"
6621cd90cda9bd4817b110bc,Unidata/thredds,"public Iterable<? extends CatalogExt> getCatalogs() {
    if (catalogs == null) readCatalogs();

    List<CatalogExt> result = new ArrayList<>();
    for (CatalogExt ext : catalogs.values())
      result.add(ext);
    Collections.sort(result, (o1, o2) -> o1.getCatRelLocation().compareTo(o2.getCatRelLocation()));    // java 8 lambda, baby
    return result;
  }",return sorted catalogs,tdcommon/src/main/java/thredds/server/catalog/tracker/CatalogTracker.java,[]
6621cd90cda9bd4817b110bd,jcodec/jcodec,"static int[] rewindReverse64(int hi, int lo, int len) {
    	int[] i = new int[2];
    	if(len<=32) {
    		i[0] = 0;
    		i[1] = rewindReverse32(lo, len);
    	}
    	else {
    		lo = ((lo>>S[0])&B[0])|((lo<<S[0])&~B[0]);
    		hi = ((hi>>S[0])&B[0])|((hi<<S[0])&~B[0]);
    		lo = ((lo>>S[1])&B[1])|((lo<<S[1])&~B[1]);
    		hi = ((hi>>S[1])&B[1])|((hi<<S[1])&~B[1]);
    		lo = ((lo>>S[2])&B[2])|((lo<<S[2])&~B[2]);
    		hi = ((hi>>S[2])&B[2])|((hi<<S[2])&~B[2]);
    		lo = ((lo>>S[3])&B[3])|((lo<<S[3])&~B[3]);
    		hi = ((hi>>S[3])&B[3])|((hi<<S[3])&~B[3]);
    		lo = ((lo>>S[4])&B[4])|((lo<<S[4])&~B[4]);
    		hi = ((hi>>S[4])&B[4])|((hi<<S[4])&~B[4]);
    
    		//shift off low bits
    		i[1] = (hi>>(64-len))|(lo<<(len-32));
    		i[1] = lo>>(64-len);
    	}
    	return i;
    }",64 bit rewind and reverse,src/main/java/net/sourceforge/jaad/aac/error/BitsBuffer.java,"[{'Syntax': 'rewindReverse32(lo, len)', 'FunctionName': 'rewindReverse32', 'ArgsCount': 2, 'MethodBody': 'static int rewindReverse32(int v, int len) {\n        v = ((v >> S[0]) & B[0]) | ((v << S[0]) & ~B[0]);\n        v = ((v >> S[1]) & B[1]) | ((v << S[1]) & ~B[1]);\n        v = ((v >> S[2]) & B[2]) | ((v << S[2]) & ~B[2]);\n        v = ((v >> S[3]) & B[3]) | ((v << S[3]) & ~B[3]);\n        v = ((v >> S[4]) & B[4]) | ((v << S[4]) & ~B[4]);\n\n        // shift off low bits\n        v >>= (32 - len);\n\n        return v;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/net/sourceforge/jaad/aac/error/BitsBuffer.java'}]"
6621cd90cda9bd4817b110be,wildfly/wildfly,"public static List<PersistenceProvider> loadProviderModuleByName(String moduleName) throws ModuleLoadException {
        final ModuleLoader moduleLoader = Module.getBootModuleLoader();
        Module module = moduleLoader.loadModule(ModuleIdentifier.fromString(moduleName));
        final ServiceLoader<PersistenceProvider> serviceLoader =
            module.loadService(PersistenceProvider.class);
        List<PersistenceProvider> result = new ArrayList<>();
        if (serviceLoader != null) {
            for (PersistenceProvider provider1 : serviceLoader) {
                // persistence provider jar may contain multiple provider service implementations
                // save each provider
                PersistenceProviderResolverImpl.getInstance().addPersistenceProvider(provider1);
                result.add(provider1);
            }
        }
        return result;
    }",Loads the specified JPA persistence provider module,jpa/subsystem/src/main/java/org/jboss/as/jpa/persistenceprovider/PersistenceProviderLoader.java,"[{'Syntax': 'moduleLoader.loadModule(ModuleIdentifier.fromString(moduleName))', 'FunctionName': 'loadModule', 'ArgsCount': 1, 'MethodBody': 'Module loadModule(ModuleIdentifier identifier);', 'FileName': '/wildfly/wildfly/pojo/src/main/java/org/jboss/as/pojo/descriptor/ConfigVisitor.java'}, {'Syntax': 'ModuleIdentifier.fromString(moduleName)', 'FunctionName': 'fromString', 'ArgsCount': 1, 'MethodBody': 'private static JsonObject fromString(String string) {\n        try (JsonReader reader = Json.createReader(new StringReader(string))) {\n            return reader.readObject();\n        }\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/messaging/mgmt/JMSQueueManagementTestCase.java'}, {'Syntax': 'PersistenceProviderResolverImpl.getInstance().addPersistenceProvider(provider1)', 'FunctionName': 'addPersistenceProvider', 'ArgsCount': 1, 'MethodBody': 'public void addPersistenceProvider(PersistenceProvider persistenceProvider) {\n        providers.add(persistenceProvider.getClass());\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/persistenceprovider/PersistenceProviderResolverImpl.java'}, {'Syntax': 'PersistenceProviderResolverImpl.getInstance()', 'FunctionName': 'getInstance', 'ArgsCount': 0, 'MethodBody': '@Override\n            public Object getInstance() {\n                return componentInstance.getInstance();\n            }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/component/ServiceComponentInstantiator.java'}, {'Syntax': 'result.add(provider1)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Consumer<Supplier<Node>> add(ServiceName name) {\n        return this.registry.add(name);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/NodeServiceExecutorRegistry.java'}]"
6621cd90cda9bd4817b110bf,vigna/fastutil,"@Override
	public void position(final long newPosition) throws IOException {
		flush();
		if (repositionableStream != null) repositionableStream.position(newPosition);
		else if (fileChannel != null) fileChannel.position(newPosition);
		else throw new UnsupportedOperationException(""position() can only be called if the underlying byte stream implements the RepositionableStream interface or if the getChannel() method of the underlying byte stream exists and returns a FileChannel"");
	}",Repositions the stream .,src/it/unimi/dsi/fastutil/io/FastBufferedOutputStream.java,"[{'Syntax': 'flush()', 'FunctionName': 'flush', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic void flush() throws IOException {\n\t\tdumpBuffer(false);\n\t\tos.flush();\n\t}', 'FileName': '/vigna/fastutil/src/it/unimi/dsi/fastutil/io/FastBufferedOutputStream.java'}, {'Syntax': 'repositionableStream.position(newPosition)', 'FunctionName': 'position', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic void position(final long position) throws IOException {\n\t\tthis.position = Math.min(position, length());\n\t}', 'FileName': '/vigna/fastutil/src/it/unimi/dsi/fastutil/io/InspectableFileCachedInputStream.java'}, {'Syntax': 'fileChannel.position(newPosition)', 'FunctionName': 'position', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic void position(final long position) throws IOException {\n\t\tthis.position = Math.min(position, length());\n\t}', 'FileName': '/vigna/fastutil/src/it/unimi/dsi/fastutil/io/InspectableFileCachedInputStream.java'}]"
6621cd90cda9bd4817b110c0,jcodec/jcodec,"public boolean modify(File file, MP4Edit edit) throws IOException {
        SeekableByteChannel fi = null;
        try {
            fi = NIOUtils.rwChannel(file);

            List<Tuple._2<Atom, ByteBuffer>> fragments = doTheFix(fi, edit);
            if (fragments == null)
                return false;

            // If everything is clean, only then actually writing stuff to the
            // file
            for (Tuple._2<Atom, ByteBuffer> fragment : fragments) {
                replaceBox(fi, fragment.v0, fragment.v1);
            }

            return true;
        } finally {
            NIOUtils.closeQuietly(fi);
        }
    }",Tries to modify movie header in place according to what s implemented in the edit the file gets pysically modified if the operation is successful . No temporary file is created .,src/main/java/org/jcodec/movtool/InplaceMP4Editor.java,"[{'Syntax': 'NIOUtils.rwChannel(file)', 'FunctionName': 'rwChannel', 'ArgsCount': 1, 'MethodBody': 'public static FileChannelWrapper rwChannel(File file) throws FileNotFoundException {\n        return new FileChannelWrapper(new RandomAccessFile(file, ""rw"").getChannel());\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/io/NIOUtils.java'}, {'Syntax': 'doTheFix(fi, edit)', 'FunctionName': 'doTheFix', 'ArgsCount': 2, 'MethodBody': 'private List<Tuple._2<Atom, ByteBuffer>> doTheFix(SeekableByteChannel fi, MP4Edit edit) throws IOException {\n        Atom moovAtom = getMoov(fi);\n        checkNotNull(moovAtom);\n\n        ByteBuffer moovBuffer = fetchBox(fi, moovAtom);\n        MovieBox moovBox = (MovieBox) parseBox(moovBuffer);\n\n        List<Tuple._2<Atom, ByteBuffer>> fragments = new LinkedList<Tuple._2<Atom, ByteBuffer>>();\n        if (BoxUtil.containsBox(moovBox, ""mvex"")) {\n            List<Tuple._2<ByteBuffer, MovieFragmentBox>> temp = new LinkedList<Tuple._2<ByteBuffer, MovieFragmentBox>>();\n            for (Atom fragAtom : getFragments(fi)) {\n                ByteBuffer fragBuffer = fetchBox(fi, fragAtom);\n                fragments.add(Tuple.pair(fragAtom, fragBuffer));\n                MovieFragmentBox fragBox = (MovieFragmentBox) parseBox(fragBuffer);\n                fragBox.setMovie(moovBox);\n                temp.add(Tuple.pair(fragBuffer, fragBox));\n            }\n\n            edit.applyToFragment(moovBox, Tuple._2_project1(temp).toArray(new MovieFragmentBox[0]));\n\n            for (Tuple._2<ByteBuffer, ? extends Box> frag : temp) {\n                if (!rewriteBox(frag.v0, frag.v1))\n                    return null;\n            }\n        } else\n            edit.apply(moovBox);\n\n        if (!rewriteBox(moovBuffer, moovBox))\n            return null;\n        fragments.add(Tuple.pair(moovAtom, moovBuffer));\n        return fragments;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/movtool/InplaceMP4Editor.java'}, {'Syntax': 'replaceBox(fi, fragment.v0, fragment.v1)', 'FunctionName': 'replaceBox', 'ArgsCount': 3, 'MethodBody': 'private void replaceBox(SeekableByteChannel fi, Atom atom, ByteBuffer buffer) throws IOException {\n        fi.setPosition(atom.getOffset());\n        fi.write(buffer);\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/movtool/InplaceMP4Editor.java'}, {'Syntax': 'NIOUtils.closeQuietly(fi)', 'FunctionName': 'closeQuietly', 'ArgsCount': 1, 'MethodBody': 'public static void closeQuietly(Closeable channel) {\n        if (channel == null)\n            return;\n        try {\n            channel.close();\n        } catch (IOException e) {\n        }\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/io/NIOUtils.java'}]"
6621cd90cda9bd4817b110c1,orientechnologies/orientdb,"private IndexSearchDescriptor buildIndexSearchDescriptorForFulltext(OCommandContext ctx, OIndex<?> index, OAndBlock block, OClass clazz) {
    List<String> indexFields = index.getDefinition().getFields();
    OBinaryCondition keyCondition = new OBinaryCondition(-1);
    OIdentifier key = new OIdentifier(""key"");
    keyCondition.setLeft(new OExpression(key));
    boolean found = false;

    OAndBlock blockCopy = block.copy();
    Iterator<OBooleanExpression> blockIterator;

    OAndBlock indexKeyValue = new OAndBlock(-1);
    IndexSearchDescriptor result = new IndexSearchDescriptor();
    result.idx = index;
    result.keyCondition = indexKeyValue;
    for (String indexField : indexFields) {
      blockIterator = blockCopy.getSubBlocks().iterator();
      boolean breakHere = false;
      boolean indexFieldFound = false;
      while (blockIterator.hasNext()) {
        OBooleanExpression singleExp = blockIterator.next();
        if (singleExp instanceof OContainsTextCondition) {
          OExpression left = ((OContainsTextCondition) singleExp).getLeft();
          if (left.isBaseIdentifier()) {
            String fieldName = left.getDefaultAlias().getStringValue();
            if (indexField.equals(fieldName)) {
              found = true;
              indexFieldFound = true;
              OContainsTextCondition condition = new OContainsTextCondition(-1);
              condition.setLeft(left);
              condition.setRight(((OContainsTextCondition) singleExp).getRight().copy());
              indexKeyValue.getSubBlocks().add(condition);
              blockIterator.remove();
              break;
            }
          }
        }
      }
      if (breakHere || !indexFieldFound) {
        break;
      }
    }

    if (result.keyCondition.getSubBlocks().size() < index.getDefinition().getFields().size() && !index
        .supportsOrderedIterations()) {
      //hash indexes do not support partial key match
      return null;
    }

    if (found) {
      result.remainingCondition = blockCopy;
      return result;
    }
    return null;
  }",given a full text index and a flat AND block returns a descriptor on how to process it with an index ( index index key and additional filters to apply after index fetch,core/src/main/java/com/orientechnologies/orient/core/sql/executor/OSelectExecutionPlanner.java,"[{'Syntax': 'index.getDefinition().getFields()', 'FunctionName': 'getFields', 'ArgsCount': 0, 'MethodBody': 'public List<Object> getFields() {\n    return fields;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/traverse/OTraverse.java'}, {'Syntax': 'index.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': 'public OIndexDefinition getDefinition() {\n    return im.getIndexDefinition();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java'}, {'Syntax': 'keyCondition.setLeft(new OExpression(key))', 'FunctionName': 'setLeft', 'ArgsCount': 1, 'MethodBody': 'public void setLeft(final Object iValue) {\n    left = iValue;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/filter/OSQLFilterCondition.java'}, {'Syntax': 'block.copy()', 'FunctionName': 'copy', 'ArgsCount': 0, 'MethodBody': '@Override\n  public ODatabaseDocumentInternal copy() {\n    return (ODatabaseDocumentInternal) pool.acquire();\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/ODatabaseDocumentRemotePooled.java'}, {'Syntax': 'blockCopy.getSubBlocks().iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Iterator<T> iterator() {\n    return values.iterator();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/sql/method/misc/TestIterable.java'}, {'Syntax': 'blockCopy.getSubBlocks()', 'FunctionName': 'getSubBlocks', 'ArgsCount': 0, 'MethodBody': 'private List<OBooleanExpression> getSubBlocks() {\n    if (keyCondition instanceof OAndBlock) {\n      return ((OAndBlock) keyCondition).getSubBlocks();\n    } else {\n      return Collections.singletonList(keyCondition);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/executor/IndexSearchDescriptor.java'}, {'Syntax': 'blockIterator.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean hasNext() {\n    return current < items;\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/test/java/com/orientechnologies/orient/etl/OETLStubRandomExtractor.java'}, {'Syntax': 'blockIterator.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Move the current record stream to the next one in result set"")\n  public void next() {\n    setCurrentRecord(currentRecordIdx + 1);\n    dumpRecordDetails();\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': '((OContainsTextCondition) singleExp).getLeft()', 'FunctionName': 'getLeft', 'ArgsCount': 0, 'MethodBody': 'public Object getLeft() {\n    return left;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/filter/OSQLFilterCondition.java'}, {'Syntax': 'left.isBaseIdentifier()', 'FunctionName': 'isBaseIdentifier', 'ArgsCount': 0, 'MethodBody': 'public boolean isBaseIdentifier() {\n    if (mathExpression != null) {\n      return mathExpression.isBaseIdentifier();\n    }\n    if (value instanceof OMathExpression) { // only backward stuff, remote it\n      return ((OMathExpression) value).isBaseIdentifier();\n    }\n\n    return false;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OExpression.java'}, {'Syntax': 'left.getDefaultAlias().getStringValue()', 'FunctionName': 'getStringValue', 'ArgsCount': 0, 'MethodBody': 'public String getStringValue() {\n    return stringValue;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OFloatingPoint.java'}, {'Syntax': 'left.getDefaultAlias()', 'FunctionName': 'getDefaultAlias', 'ArgsCount': 0, 'MethodBody': 'public OIdentifier getDefaultAlias() {\n    OIdentifier identifier;\n    if (isBaseIdentifier()) {\n      identifier =\n          new OIdentifier(\n              ((OBaseExpression) mathExpression)\n                  .getIdentifier()\n                  .getSuffix()\n                  .getIdentifier()\n                  .getStringValue());\n    } else {\n      identifier = new OIdentifier(this.toString());\n    }\n    return identifier;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OExpression.java'}, {'Syntax': 'indexField.equals(fieldName)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'condition.setLeft(left)', 'FunctionName': 'setLeft', 'ArgsCount': 1, 'MethodBody': 'public void setLeft(final Object iValue) {\n    left = iValue;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/filter/OSQLFilterCondition.java'}, {'Syntax': 'condition.setRight(((OContainsTextCondition) singleExp).getRight().copy())', 'FunctionName': 'setRight', 'ArgsCount': 1, 'MethodBody': 'public void setRight(final Object iValue) {\n    right = iValue;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/filter/OSQLFilterCondition.java'}, {'Syntax': '((OContainsTextCondition) singleExp).getRight().copy()', 'FunctionName': 'copy', 'ArgsCount': 0, 'MethodBody': '@Override\n  public ODatabaseDocumentInternal copy() {\n    return (ODatabaseDocumentInternal) pool.acquire();\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/ODatabaseDocumentRemotePooled.java'}, {'Syntax': '((OContainsTextCondition) singleExp).getRight()', 'FunctionName': 'getRight', 'ArgsCount': 0, 'MethodBody': 'public Object getRight() {\n    return right;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/filter/OSQLFilterCondition.java'}, {'Syntax': 'indexKeyValue.getSubBlocks().add(condition)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}, {'Syntax': 'indexKeyValue.getSubBlocks()', 'FunctionName': 'getSubBlocks', 'ArgsCount': 0, 'MethodBody': 'private List<OBooleanExpression> getSubBlocks() {\n    if (keyCondition instanceof OAndBlock) {\n      return ((OAndBlock) keyCondition).getSubBlocks();\n    } else {\n      return Collections.singletonList(keyCondition);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/executor/IndexSearchDescriptor.java'}, {'Syntax': 'blockIterator.remove()', 'FunctionName': 'remove', 'ArgsCount': 0, 'MethodBody': '@Override\n  public void remove() {\n    throw new UnsupportedOperationException(""remove()"");\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/main/java/com/orientechnologies/orient/etl/extractor/OETLAbstractExtractor.java'}, {'Syntax': 'result.keyCondition.getSubBlocks().size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'result.keyCondition.getSubBlocks()', 'FunctionName': 'getSubBlocks', 'ArgsCount': 0, 'MethodBody': 'private List<OBooleanExpression> getSubBlocks() {\n    if (keyCondition instanceof OAndBlock) {\n      return ((OAndBlock) keyCondition).getSubBlocks();\n    } else {\n      return Collections.singletonList(keyCondition);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/executor/IndexSearchDescriptor.java'}, {'Syntax': 'index.getDefinition().getFields().size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'index.getDefinition().getFields()', 'FunctionName': 'getFields', 'ArgsCount': 0, 'MethodBody': 'public List<Object> getFields() {\n    return fields;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/traverse/OTraverse.java'}, {'Syntax': 'index.getDefinition()', 'FunctionName': 'getDefinition', 'ArgsCount': 0, 'MethodBody': 'public OIndexDefinition getDefinition() {\n    return im.getIndexDefinition();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java'}, {'Syntax': 'index\n        .supportsOrderedIterations()', 'FunctionName': 'supportsOrderedIterations', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean supportsOrderedIterations() {\n    return false;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexRemoteOneValue.java'}]"
6621cd90cda9bd4817b110c2,RestComm/jain-slee,"public void nameBound(String name) {
		final Node node = getNamesBoundNode(true);
		if (!node.hasChild(name)) {
			node.addChild(Fqn.fromElements(name));
		}
	}",Adds the specified name to the set of names bound to the ac,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java,"[{'Syntax': 'getNamesBoundNode(true)', 'FunctionName': 'getNamesBoundNode', 'ArgsCount': 1, 'MethodBody': 'private Node getNamesBoundNode(boolean createIfNotExists) {\n\t\tif (_namesBoundNode == null) {\n\t\t\tfinal Node node = getNode();\n\t\t\t_namesBoundNode = node.getChild(NAMES_BOUND_NODE_NAME);\n\t\t\tif (_namesBoundNode == null && createIfNotExists) {\n\t\t\t\t_namesBoundNode = node.addChild(NAMES_BOUND_FQN);\n\t\t\t}\n\t\t}\n\t\treturn _namesBoundNode;\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java'}]"
6621cd90cda9bd4817b110c3,Unidata/thredds,"@Override
  public boolean release(FileCacheable ncfile) throws IOException {
    if (ncfile == null) return false;

    if (disabled.get()) {
      ncfile.setFileCache(null); // prevent infinite loops
      ncfile.close();
      return false;
    }

    // find it in the file cache
    CacheElement.CacheFile file = files.get(ncfile); // using hashCode of the FileCacheable
    if (file != null) {
      if (!file.isLocked.get()) {
        cacheLog.warn(""FileCache "" + name + "" release "" + ncfile.getLocation() + "" not locked; hash= ""+ncfile.hashCode());
      }
      file.lastAccessed = System.currentTimeMillis();
      file.countAccessed++;
      file.isLocked.set(false);
      file.ncfile.release();

      if (cacheLog.isDebugEnabled()) cacheLog.debug(""FileCache "" + name + "" release "" + ncfile.getLocation()+""; hash= ""+ncfile.hashCode());
      if (debugPrint) System.out.printf(""  FileCache %s release %s lock=%s count=%d%n"", name, ncfile.getLocation(), file.isLocked.get(), countLocked());
      return true;
    }
    return false;
    // throw new IOException(""FileCache "" + name + "" release does not have file in cache = "" + ncfile.getLocation());
  }",Release the file . This unlocks it updates its lastAccessed date . Normally applications need not call this just close the file as usual . The FileCacheable has to do tricky stuff .,cdm/src/main/java/ucar/nc2/util/cache/FileCache.java,[]
6621cd90cda9bd4817b110c4,jboss/jboss-common-core,"private Vector resolveAllLocalSystem(String systemId) {
	Vector map = new Vector();
	String osname = System.getProperty(""os.name"");
	boolean windows = (osname.indexOf(""Windows"") >= 0);
	Enumeration enumt = catalogEntries.elements();
	while (enumt.hasMoreElements()) {
	    CatalogEntry e = (CatalogEntry) enumt.nextElement();
	    if (e.getEntryType() == SYSTEM
		&& (e.getEntryArg(0).equals(systemId)
		    || (windows
			&& e.getEntryArg(0).equalsIgnoreCase(systemId)))) {
		map.addElement(e.getEntryArg(1));
	    }
	}
	if (map.size() == 0) {
	    return null;
	} else {
	    return map;
	}
    }",Return all applicable SYSTEM system identifiers in this catalog .,src/main/java/org/jboss/util/xml/catalog/Resolver.java,"[{'Syntax': 'System.getProperty(""os.name"")', 'FunctionName': 'getProperty', 'ArgsCount': 1, 'MethodBody': 'public static String getProperty(final String name)\n   {\n      SecurityManager sm = System.getSecurityManager();\n      if (sm != null)\n         sm.checkPropertyAccess(name);\n      return props.getProperty(name);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/property/PropertyManager.java'}, {'Syntax': 'osname.indexOf(""Windows"")', 'FunctionName': 'indexOf', 'ArgsCount': 1, 'MethodBody': 'public int indexOf(String string)\n   {\n      return indexOf(string, 0);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'catalogEntries.elements()', 'FunctionName': 'elements', 'ArgsCount': 0, 'MethodBody': 'public Enumeration<V> elements() {\n        return new ValueIterator();\n    }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/ConcurrentReferenceHashMap.java'}, {'Syntax': 'enumt.hasMoreElements()', 'FunctionName': 'hasMoreElements', 'ArgsCount': 0, 'MethodBody': 'public boolean hasMoreElements() {\n         return iter.hasNext();\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/Iterators.java'}, {'Syntax': 'enumt.nextElement()', 'FunctionName': 'nextElement', 'ArgsCount': 0, 'MethodBody': 'public Object nextElement() {\n         return iter.next();\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/Iterators.java'}, {'Syntax': 'e.getEntryType()', 'FunctionName': 'getEntryType', 'ArgsCount': 0, 'MethodBody': 'public int getEntryType() {\n    return entryType;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/CatalogEntry.java'}, {'Syntax': 'e.getEntryArg(0).equals(systemId)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj)\n   {\n      return obj instanceof TimeoutClientSocketFactory;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/sockets/TimeoutClientSocketFactory.java'}, {'Syntax': 'e.getEntryArg(0)', 'FunctionName': 'getEntryArg', 'ArgsCount': 1, 'MethodBody': 'public String getEntryArg(int argNum) {\n    try {\n      String arg = (String) args.get(argNum);\n      return arg;\n    } catch (ArrayIndexOutOfBoundsException e) {\n      return null;\n    }\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/CatalogEntry.java'}, {'Syntax': 'e.getEntryArg(0)', 'FunctionName': 'getEntryArg', 'ArgsCount': 1, 'MethodBody': 'public String getEntryArg(int argNum) {\n    try {\n      String arg = (String) args.get(argNum);\n      return arg;\n    } catch (ArrayIndexOutOfBoundsException e) {\n      return null;\n    }\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/CatalogEntry.java'}, {'Syntax': 'e.getEntryArg(1)', 'FunctionName': 'getEntryArg', 'ArgsCount': 1, 'MethodBody': 'public String getEntryArg(int argNum) {\n    try {\n      String arg = (String) args.get(argNum);\n      return arg;\n    } catch (ArrayIndexOutOfBoundsException e) {\n      return null;\n    }\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/CatalogEntry.java'}, {'Syntax': 'map.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size()\n   {\n      return entryMap.size();\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}]"
6621cd90cda9bd4817b110c5,lessthanoptimal/GeoRegression,"public static boolean identicalSign( double xa , double ya , double xb , double yb , double tol ) {
		double dx0 = xb-xa;
		double dy0 = yb-ya;
		double dx1 = xb+xa;
		double dy1 = yb+ya;


		double error0 = dx0*dx0 + dy0*dy0;
		double error1 = dx1*dx1 + dy1*dy1;

		if( error0 < error1 ) {
			return error0 <= tol*tol;
		} else {
			return error1 <= tol*tol;
		}

	}",Tests to see if the two vectors are identical up to a sign difference,main/src/georegression/geometry/UtilVector2D_F64.java,[]
6621cd91cda9bd4817b110c6,tiefaces/TieFaces,"private static void removeSingleRowInSheet(final Sheet sheet,
			final int rowIndexStart) {
		Row removingRow = sheet.getRow(rowIndexStart);
		if (removingRow != null) {
			sheet.removeRow(removingRow);
		}
	}",Removes the single row in sheet .,src/org/tiefaces/components/websheet/utility/CommandUtility.java,[]
6621cd91cda9bd4817b110c7,signalfx/appd-integration,"protected Map<String, Object> getQueryString() {
        Map<String, Object> qs = new HashMap<>();
        if (timeParams != null) {
            qs.put(""time-range-type"", timeParams.type);
            if (timeParams.duration > 0) {
                qs.put(""duration-in-mins"", timeParams.duration);
            }
            if (timeParams.startTime > 0) {
                qs.put(""start-time"", timeParams.startTime);
            }
            if (timeParams.endTime > 0) {
                qs.put(""end-time"", timeParams.endTime);
            }
        }
        qs.put(""rollup"", false);
        if (metricPath != null) {
            qs.put(""metric-path"", metricPath);
        }
        return qs;
    }",Generate querystring for the request .,appd-client/src/main/java/com/signalfx/appd/client/MetricDataRequest.java,[]
6621cd91cda9bd4817b110c8,stanfy/enroscar,"protected final void unbind() {
    if (streamingPlayback != null) { dropListener(); }
    try {
      context.unbindService(serviceConnection);
    } catch (final RuntimeException e) {
      if (DEBUG) { Log.w(TAG, ""Cannot unbind radio"", e); }
    }
    bindRequested = false;
  }",Unbind from the streaming service .,extras/audio/src/main/java/com/stanfy/enroscar/audio/audio/StreamingPlaybackController.java,"[{'Syntax': 'dropListener()', 'FunctionName': 'dropListener', 'ArgsCount': 0, 'MethodBody': 'protected final void dropListener() {\n    if (DEBUG) { Log.v(TAG, ""Drop listener""); }\n    if (streamingPlayback != null) {\n      try {\n        streamingPlayback.removeListener();\n      } catch (final RemoteException e) {\n        Log.e(TAG, ""Cannot remove listener"", e);\n      }\n      bindRequested = false;\n    }\n  }', 'FileName': '/stanfy/enroscar/extras/audio/src/main/java/com/stanfy/enroscar/audio/audio/StreamingPlaybackController.java'}]"
6621cd91cda9bd4817b110c9,tiefaces/TieFaces,"public final void prepareWorkShee(final String tabName) {

		int tabIndex = findTabIndexWithName(tabName);
		if (parent.getWebFormTabView() != null) {
			parent.getWebFormTabView().setActiveIndex(tabIndex);
		}
		parent.getCurrent().setCurrentTabName(tabName);
		String sheetName = parent.getSheetConfigMap().get(tabName).getSheetName();
		Sheet sheet1 = parent.getWb().getSheet(sheetName);
		parent.getWb().setActiveSheet(parent.getWb().getSheetIndex(sheet1));

		SheetConfiguration sheetConfig = parent.getSheetConfigMap().get(tabName);

		parent.setMaxRowsPerPage(parent.getSheetConfigMap().get(tabName).getMaxRowPerPage());
		parent.setBodyAllowAddRows(parent.getSheetConfigMap().get(tabName).isBodyAllowAddRows());

		// populate repeat rows before setup cell range map

		Map<String, CellRangeAddress> cellRangeMap = ConfigurationUtility.indexMergedRegion(sheet1);
		List<String> skippedRegionCells = ConfigurationUtility.skippedRegionCells(sheet1);
		loadHeaderRows(sheetConfig, cellRangeMap, skippedRegionCells);
		loadBodyRows(sheetConfig, cellRangeMap, skippedRegionCells);
	}",prepare worksheet for loading . this only load at backend without refresh gui .,src/org/tiefaces/components/websheet/service/WebSheetLoader.java,"[{'Syntax': 'findTabIndexWithName(tabName)', 'FunctionName': 'findTabIndexWithName', 'ArgsCount': 1, 'MethodBody': 'public final int findTabIndexWithName(final String tabname) {\r\n\r\n\t\tfor (int i = 0; i < parent.getTabs().size(); i++) {\r\n\t\t\tif (parent.getTabs().get(i).getTitle().equalsIgnoreCase(tabname)) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/service/WebSheetLoader.java'}, {'Syntax': 'parent.getWebFormTabView()', 'FunctionName': 'getWebFormTabView', 'ArgsCount': 0, 'MethodBody': 'public TabView getWebFormTabView() {\r\n\t\treturn webFormTabView;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'parent.getWebFormTabView()', 'FunctionName': 'getWebFormTabView', 'ArgsCount': 0, 'MethodBody': 'public TabView getWebFormTabView() {\r\n\t\treturn webFormTabView;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'parent.getCurrent().setCurrentTabName(tabName)', 'FunctionName': 'setCurrentTabName', 'ArgsCount': 1, 'MethodBody': 'public final void setCurrentTabName(final String pcurrentTabName) {\r\n\t\tthis.currentTabName = pcurrentTabName;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBeanCurrent.java'}, {'Syntax': 'parent.getCurrent()', 'FunctionName': 'getCurrent', 'ArgsCount': 0, 'MethodBody': 'public TieWebSheetBeanCurrent getCurrent() {\r\n\t\tif (current == null) {\r\n\t\t\tcurrent = new TieWebSheetBeanCurrent();\r\n\t\t}\r\n\t\treturn current;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'parent.getSheetConfigMap().get(tabName).getSheetName()', 'FunctionName': 'getSheetName', 'ArgsCount': 0, 'MethodBody': 'public final String getSheetName() {\r\n\t\treturn sheetName;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}, {'Syntax': 'parent.getSheetConfigMap().get(tabName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'parent.getSheetConfigMap()', 'FunctionName': 'getSheetConfigMap', 'ArgsCount': 0, 'MethodBody': 'public Map<String, SheetConfiguration> getSheetConfigMap() {\r\n\t\treturn this.getSerialWb().getSheetConfigMap();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'parent.getWb()', 'FunctionName': 'getWb', 'ArgsCount': 0, 'MethodBody': 'public Workbook getWb() {\r\n\t\treturn this.getSerialWb().getWb();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'parent.getWb()', 'FunctionName': 'getWb', 'ArgsCount': 0, 'MethodBody': 'public Workbook getWb() {\r\n\t\treturn this.getSerialWb().getWb();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'parent.getWb()', 'FunctionName': 'getWb', 'ArgsCount': 0, 'MethodBody': 'public Workbook getWb() {\r\n\t\treturn this.getSerialWb().getWb();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'parent.getSheetConfigMap().get(tabName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'parent.getSheetConfigMap()', 'FunctionName': 'getSheetConfigMap', 'ArgsCount': 0, 'MethodBody': 'public Map<String, SheetConfiguration> getSheetConfigMap() {\r\n\t\treturn this.getSerialWb().getSheetConfigMap();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'parent.setMaxRowsPerPage(parent.getSheetConfigMap().get(tabName).getMaxRowPerPage())', 'FunctionName': 'setMaxRowsPerPage', 'ArgsCount': 1, 'MethodBody': 'public void setMaxRowsPerPage(final Integer pmaxRowsPerPage) {\r\n\t\tthis.maxRowsPerPage = pmaxRowsPerPage;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'parent.getSheetConfigMap().get(tabName).getMaxRowPerPage()', 'FunctionName': 'getMaxRowPerPage', 'ArgsCount': 0, 'MethodBody': 'public final int getMaxRowPerPage() {\r\n\t\treturn maxRowPerPage;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}, {'Syntax': 'parent.getSheetConfigMap().get(tabName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'parent.getSheetConfigMap()', 'FunctionName': 'getSheetConfigMap', 'ArgsCount': 0, 'MethodBody': 'public Map<String, SheetConfiguration> getSheetConfigMap() {\r\n\t\treturn this.getSerialWb().getSheetConfigMap();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'parent.setBodyAllowAddRows(parent.getSheetConfigMap().get(tabName).isBodyAllowAddRows())', 'FunctionName': 'setBodyAllowAddRows', 'ArgsCount': 1, 'MethodBody': 'public void setBodyAllowAddRows(final boolean pbodyAllowAddRows) {\r\n\t\tthis.bodyAllowAddRows = pbodyAllowAddRows;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'parent.getSheetConfigMap().get(tabName).isBodyAllowAddRows()', 'FunctionName': 'isBodyAllowAddRows', 'ArgsCount': 0, 'MethodBody': 'public boolean isBodyAllowAddRows() {\r\n\t\treturn bodyAllowAddRows;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'parent.getSheetConfigMap().get(tabName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'parent.getSheetConfigMap()', 'FunctionName': 'getSheetConfigMap', 'ArgsCount': 0, 'MethodBody': 'public Map<String, SheetConfiguration> getSheetConfigMap() {\r\n\t\treturn this.getSerialWb().getSheetConfigMap();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetBean.java'}, {'Syntax': 'ConfigurationUtility.indexMergedRegion(sheet1)', 'FunctionName': 'indexMergedRegion', 'ArgsCount': 1, 'MethodBody': 'public static Map<String, CellRangeAddress> indexMergedRegion(\r\n\t\t\tfinal Sheet sheet1) {\r\n\r\n\t\tint numRegions = sheet1.getNumMergedRegions();\r\n\t\tMap<String, CellRangeAddress> cellRangeMap = new HashMap<>();\r\n\t\tfor (int i = 0; i < numRegions; i++) {\r\n\r\n\t\t\tCellRangeAddress caddress = sheet1.getMergedRegion(i);\r\n\t\t\tif (caddress != null) {\r\n\t\t\t\tcellRangeMap.put(CellUtility.getCellIndexNumberKey(\r\n\t\t\t\t\t\tcaddress.getFirstColumn(), caddress.getFirstRow()),\r\n\t\t\t\t\t\tcaddress);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cellRangeMap;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java'}, {'Syntax': 'ConfigurationUtility.skippedRegionCells(sheet1)', 'FunctionName': 'skippedRegionCells', 'ArgsCount': 1, 'MethodBody': 'public static List<String> skippedRegionCells(final Sheet sheet1) {\r\n\t\tint numRegions = sheet1.getNumMergedRegions();\r\n\t\tList<String> skipCellList = new ArrayList<>();\r\n\t\tfor (int i = 0; i < numRegions; i++) {\r\n\r\n\t\t\tCellRangeAddress caddress = sheet1.getMergedRegion(i);\r\n\t\t\tif (caddress != null) {\r\n\t\t\t\taddSkipCellToListInTheRegion(skipCellList, caddress);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn skipCellList;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java'}, {'Syntax': 'loadHeaderRows(sheetConfig, cellRangeMap, skippedRegionCells)', 'FunctionName': 'loadHeaderRows', 'ArgsCount': 3, 'MethodBody': 'private void loadHeaderRows(final SheetConfiguration sheetConfig, final Map<String, CellRangeAddress> cellRangeMap,\r\n\t\t\tfinal List<String> skippedRegionCells) {\r\n\r\n\t\tint top = sheetConfig.getHeaderCellRange().getTopRow();\r\n\t\tint bottom = sheetConfig.getHeaderCellRange().getBottomRow();\r\n\t\tint left = sheetConfig.getHeaderCellRange().getLeftCol();\r\n\t\tint right = sheetConfig.getHeaderCellRange().getRightCol();\r\n\r\n\t\tString sheetName = sheetConfig.getSheetName();\r\n\t\tSheet sheet1 = parent.getWb().getSheet(sheetName);\r\n\r\n\t\tint totalWidth = CellStyleUtility.calcTotalWidth(sheet1, left, right,\r\n\t\t\t\tWebSheetUtility.pixel2WidthUnits(parent.getLineNumberColumnWidth() + parent.getAddRowColumnWidth()));\r\n\r\n\t\tRangeBuildRef rangeBuildRef = new RangeBuildRef(left, right, totalWidth, sheet1);\r\n\r\n\t\tif (sheetConfig.isFixedWidthStyle()) {\r\n\t\t\tparent.setTableWidthStyle(\r\n\t\t\t\t\t""table-layout: fixed; width:"" + WebSheetUtility.widthUnits2Pixel(totalWidth) + ""px;"");\r\n\t\t}\r\n\r\n\t\tparent.setLineNumberColumnWidthStyle(\r\n\t\t\t\tgetWidthStyle(WebSheetUtility.pixel2WidthUnits(parent.getLineNumberColumnWidth()), totalWidth));\r\n\t\tparent.setAddRowColumnWidthStyle(""width:"" + parent.getAddRowColumnWidth() + ""px;"");\r\n\r\n\t\tparent.getHeaderRows().clear();\r\n\r\n\t\tif (top < 0) {\r\n\t\t\t// this is blank configuration. set column letter as header\r\n\t\t\tparent.getHeaderRows().add(loadHeaderRowWithoutConfigurationTab(rangeBuildRef, true));\r\n\t\t\t// set showlinenumber to true as default\r\n\t\t\tparent.setShowLineNumber(true);\r\n\t\t} else {\r\n\t\t\tparent.getHeaderRows().add(loadHeaderRowWithoutConfigurationTab(rangeBuildRef, false));\r\n\t\t\tfor (int i = top; i <= bottom; i++) {\r\n\t\t\t\tparent.getHeaderRows().add(loadHeaderRowWithConfigurationTab(sheetConfig, rangeBuildRef, i,\r\n\t\t\t\t\t\tcellRangeMap, skippedRegionCells));\r\n\r\n\t\t\t}\r\n\t\t\t// set showlinenumber to false as default\r\n\t\t\tparent.setShowLineNumber(false);\r\n\r\n\t\t}\r\n\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/service/WebSheetLoader.java'}, {'Syntax': 'loadBodyRows(sheetConfig, cellRangeMap, skippedRegionCells)', 'FunctionName': 'loadBodyRows', 'ArgsCount': 3, 'MethodBody': 'private void loadBodyRows(final SheetConfiguration sheetConfig, final Map<String, CellRangeAddress> cellRangeMap,\r\n\t\t\tfinal List<String> skippedRegionCells) {\r\n\r\n\t\tint top = sheetConfig.getBodyCellRange().getTopRow();\r\n\t\tint bottom = CellUtility.getBodyBottomFromConfig(sheetConfig);\r\n\t\tint left = sheetConfig.getBodyCellRange().getLeftCol();\r\n\t\tint right = sheetConfig.getBodyCellRange().getRightCol();\r\n\r\n\t\tString sheetName = sheetConfig.getSheetName();\r\n\t\tSheet sheet1 = parent.getWb().getSheet(sheetName);\r\n\r\n\t\tparent.getBodyRows().clear();\r\n\t\tclearCache();\r\n\r\n\t\tfor (int i = top; i <= bottom; i++) {\r\n\r\n\t\t\tparent.getBodyRows()\r\n\t\t\t\t\t.add(assembleFacesBodyRow(i, sheet1, left, right, sheetConfig, cellRangeMap, skippedRegionCells));\r\n\r\n\t\t}\r\n\t\tsheetConfig.setBodyPopulated(true);\r\n\t\tparent.getCurrent().setCurrentTopRow(top);\r\n\t\tparent.getCurrent().setCurrentLeftColumn(left);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/service/WebSheetLoader.java'}]"
6621cd91cda9bd4817b110ca,intellimate/IzouSDK,"public static BroadcasterPlaylist createPlaylistRequest(Identification provider, String playlistName) {
        HashMap<String, Object> hashMap = new HashMap<>();
        hashMap.put(RESOURCE_ID, playlistName);
        return new BroadcasterPlaylist(provider, hashMap);
    }",creates the Playlist - Request,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/BroadcasterPlaylist.java,[]
6621cd91cda9bd4817b110cb,boonproject/boon,"public static <K, V> boolean valueIn( V value, Map<K, V> map ) {
        return map.containsValue( value );
    }",End universal methods .,boon/src/main/java/org/boon/Maps.java,"[{'Syntax': 'map.containsValue( value )', 'FunctionName': 'containsValue', 'ArgsCount': 1, 'MethodBody': '@Override\n        public boolean containsValue(Object value) {\n            return false;\n        }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/collections/CollectionConstants.java'}]"
6621cd91cda9bd4817b110cc,jcodec/jcodec,"public void concatBits(BitsBuffer a) {
		if(a.len==0) return;
		int al = a.bufa;
		int ah = a.bufb;

		int bl, bh;
		if(len>32) {
			//mask off superfluous high b bits
			bl = bufa;
			bh = bufb&((1<<(len-32))-1);
			//left shift a len bits
			ah = al<<(len-32);
			al = 0;
		}
		else {
			bl = bufa&((1<<(len))-1);
			bh = 0;
			ah = (ah<<(len))|(al>>(32-len));
			al = al<<len;
		}

		//merge
		bufa = bl|al;
		bufb = bh|ah;

		len += a.len;
	}",merge bits of a to b,src/main/java/net/sourceforge/jaad/aac/error/BitsBuffer.java,[]
6621cd91cda9bd4817b110cd,real-logic/aeron,"public static void frameTermId(final UnsafeBuffer buffer, final int termOffset, final int termId)
    {
        buffer.putInt(termIdOffset(termOffset), termId, LITTLE_ENDIAN);
    }",Write the term id field for a frame .,aeron-client/src/main/java/io/aeron/logbuffer/FrameDescriptor.java,"[{'Syntax': 'termIdOffset(termOffset)', 'FunctionName': 'termIdOffset', 'ArgsCount': 1, 'MethodBody': 'public static int termIdOffset(final int termOffset)\n    {\n        return termOffset + TERM_ID_OFFSET;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/logbuffer/FrameDescriptor.java'}]"
6621cd91cda9bd4817b110ce,jcodec/jcodec,"public static int qtPlayerFrameNo(MovieBox movie, int mediaFrameNo) {
        TrakBox videoTrack = movie.getVideoTrack();

        long editedTv = mediaToEdited(videoTrack, frameToTimevalue(videoTrack, mediaFrameNo), movie.getTimescale());

        return tv2QTFrameNo(movie, editedTv);
    }",Calculates frame number as it shows in quicktime player,src/main/java/org/jcodec/containers/mp4/QTTimeUtil.java,"[{'Syntax': 'movie.getVideoTrack()', 'FunctionName': 'getVideoTrack', 'ArgsCount': 0, 'MethodBody': 'public HttpPacketSource getVideoTrack() {\n        return videoTrack;\n    }', 'FileName': '/jcodec/jcodec/jplayer/src/main/java/org/jcodec/player/filters/http/HttpMedia.java'}, {'Syntax': 'mediaToEdited(videoTrack, frameToTimevalue(videoTrack, mediaFrameNo), movie.getTimescale())', 'FunctionName': 'mediaToEdited', 'ArgsCount': 3, 'MethodBody': 'public static long mediaToEdited(TrakBox trak, long mediaTv, int movieTimescale) {\n        if (trak.getEdits() == null || trak.getEdits().isEmpty())\n            return mediaTv;\n        long accum = 0;\n        for (Edit edit : trak.getEdits()) {\n            if (mediaTv < edit.getMediaTime())\n                return accum;\n            long duration = trak.rescale(edit.getDuration(), movieTimescale);\n            if (edit.getMediaTime() != -1\n                    && (mediaTv >= edit.getMediaTime() && mediaTv < edit.getMediaTime() + duration)) {\n                accum += mediaTv - edit.getMediaTime();\n                break;\n            }\n            accum += duration;\n        }\n\n        return accum;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/containers/mp4/QTTimeUtil.java'}, {'Syntax': 'frameToTimevalue(videoTrack, mediaFrameNo)', 'FunctionName': 'frameToTimevalue', 'ArgsCount': 2, 'MethodBody': 'public static long frameToTimevalue(TrakBox trak, int frameNumber) {\n        TimeToSampleBox stts = NodeBox.findFirstPath(trak, TimeToSampleBox.class, Box.path(""mdia.minf.stbl.stts""));\n        TimeToSampleEntry[] timeToSamples = stts.getEntries();\n        long pts = 0;\n        int sttsInd = 0, sttsSubInd = frameNumber;\n        while (sttsSubInd >= timeToSamples[sttsInd].getSampleCount()) {\n            sttsSubInd -= timeToSamples[sttsInd].getSampleCount();\n            pts += timeToSamples[sttsInd].getSampleCount() * timeToSamples[sttsInd].getSampleDuration();\n            sttsInd++;\n        }\n\n        return pts + timeToSamples[sttsInd].getSampleDuration() * sttsSubInd;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/containers/mp4/QTTimeUtil.java'}, {'Syntax': 'movie.getTimescale()', 'FunctionName': 'getTimescale', 'ArgsCount': 0, 'MethodBody': 'public int getTimescale() {\n        return timescale;\n    }', 'FileName': '/jcodec/jcodec/jplayer/src/main/java/org/jcodec/player/filters/MediaInfo.java'}, {'Syntax': 'tv2QTFrameNo(movie, editedTv)', 'FunctionName': 'tv2QTFrameNo', 'ArgsCount': 2, 'MethodBody': 'public static int tv2QTFrameNo(MovieBox movie, long tv) {\n        TrakBox videoTrack = movie.getVideoTrack();\n        TrakBox timecodeTrack = movie.getTimecodeTrack();\n        \n        if (timecodeTrack != null && BoxUtil.containsBox2(videoTrack, ""tref"", ""tmcd"")) {\n            return timevalueToTimecodeFrame(timecodeTrack, new RationalLarge(tv, videoTrack.getTimescale()),\n                    movie.getTimescale());\n        } else {\n            return timevalueToFrame(videoTrack, tv);\n        }\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/containers/mp4/QTTimeUtil.java'}]"
6621cd91cda9bd4817b110cf,rackerlabs/blueflood,"public String getRemoteName() {
        Date time = new Date(timestamp);
        String formattedTime = new SimpleDateFormat(""yyyyMMdd_"").format(time);
        return formattedTime + System.currentTimeMillis() + ""_"" + Configuration.getInstance().getStringProperty(CloudfilesConfig.CLOUDFILES_HOST_UNIQUE_IDENTIFIER);
    }",Get the remote file name .,blueflood-cloudfiles/src/main/java/com/rackspacecloud/blueflood/outputs/cloudfiles/RollupFile.java,"[{'Syntax': 'Configuration.getInstance().getStringProperty(CloudfilesConfig.CLOUDFILES_HOST_UNIQUE_IDENTIFIER)', 'FunctionName': 'getStringProperty', 'ArgsCount': 1, 'MethodBody': 'public String getStringProperty(Enum<? extends ConfigDefaults> name) {\n        return getStringProperty(name.toString());\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/Configuration.java'}, {'Syntax': 'Configuration.getInstance()', 'FunctionName': 'getInstance', 'ArgsCount': 0, 'MethodBody': 'public static final ElasticsearchTestServer getInstance() {\n        return INSTANCE;\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-integration-tests/src/integration-test/java/com/rackspacecloud/blueflood/utils/ElasticsearchTestServer.java'}]"
6621cd91cda9bd4817b110d0,streamsets/datacollector,"private Object extractAsRuntime(Field field, String valueStr) {
     if (field.getType() == Byte.TYPE || field.getType() == Byte.class ||
         field.getType() == Short.TYPE || field.getType() == Short.class ||
         field.getType() == Integer.TYPE || field.getType() == Integer.class ||
         field.getType() == Long.TYPE || field.getType() == Long.class ||
         field.getType() == Float.TYPE || field.getType() == Float.class ||
         field.getType() == Double.TYPE || field.getType() == Double.class) {
       return extractAsNumber(field, valueStr);
    } else if (String.class.isAssignableFrom(field.getType())) {
       return valueStr;
    }

    throw new IllegalArgumentException(Utils.format(""Invalid type for RUNTIME type: {}"", field.getType()));
  }",RUNTIME supports only Numeric types and String at the moment,container/src/main/java/com/streamsets/datacollector/definition/ConfigValueExtractor.java,[]
6621cd91cda9bd4817b110d1,oblac/jodd,"public static String typeToTyperef(final Class type) {
		if (!type.isArray()) {
			if (!type.isPrimitive()) {
				return 'L' + typeToSignature(type) + ';';
			}
			if (type == int.class) {
				return ""I"";
			}
			if (type == long.class) {
				return ""J"";
			}
			if (type == boolean.class) {
				return ""Z"";
			}
			if (type == double.class) {
				return ""D"";
			}
			if (type == float.class) {
				return ""F"";
			}
			if (type == short.class) {
				return ""S"";
			}
			if (type == void.class) {
				return ""V"";
			}
			if (type == byte.class) {
				return ""B"";
			}
			if (type == char.class) {
				return ""C"";
			}
		}

		return type.getName();
	}",Converts type to byteccode type ref .,jodd-proxetta/src/main/java/jodd/asm/AsmUtil.java,"[{'Syntax': 'type.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}]"
6621cd91cda9bd4817b110d2,intellimate/IzouSDK,"public static boolean verifyCommand(String command) {
        return command.equals(PLAY) ||
                command.equals(PAUSE) ||
                command.equals(STOP) ||
                command.equals(SELECT_TRACK) ||
                command.equals(NEXT) ||
                command.equals(PREVIOUS) ||
                command.equals(CHANGE_PLAYBACK) ||
                command.equals(CHANGE_VOLUME);
    }",verifies that an command is not malformed,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java,"[{'Syntax': 'command.equals(PLAY)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}, {'Syntax': 'command.equals(PAUSE)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}, {'Syntax': 'command.equals(STOP)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}, {'Syntax': 'command.equals(SELECT_TRACK)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}, {'Syntax': 'command.equals(NEXT)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}, {'Syntax': 'command.equals(PREVIOUS)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}, {'Syntax': 'command.equals(CHANGE_PLAYBACK)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}, {'Syntax': 'command.equals(CHANGE_VOLUME)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof TrackInfo)) return false;\n\n        TrackInfo trackInfo = (TrackInfo) o;\n\n        if (name != null ? !name.equals(trackInfo.name) : trackInfo.name != null) return false;\n        if (artist != null ? !artist.equals(trackInfo.artist) : trackInfo.artist != null) return false;\n        if (album != null ? !album.equals(trackInfo.album) : trackInfo.album != null) return false;\n        if (year != null ? !year.equals(trackInfo.year) : trackInfo.year != null) return false;\n        if (genre != null ? !genre.equals(trackInfo.genre) : trackInfo.genre != null) return false;\n        if (bmp != null ? !bmp.equals(trackInfo.bmp) : trackInfo.bmp != null) return false;\n        return !(duration > 0l ? duration != trackInfo.duration : trackInfo.duration < 0);\n\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/TrackInfo.java'}]"
6621cd91cda9bd4817b110d3,tiefaces/TieFaces,"private static void buildDynamicRowForAreaPtgBase(final Object ptg,
			final byte originalOperandClass, final List<SerialRow> rowList,
			final Ptg[] newPtg) {
		AreaPtgBase areaPtg = (AreaPtgBase) ptg;
		int originFirstRow = areaPtg.getFirstRow();
		int originLastRow = areaPtg.getLastRow();
		int unitSize = 2;
		for (int i = 0; i < rowList.size(); i++) {
			Row row = rowList.get(i).getRow();
			int shiftRow = row.getRowNum() - originFirstRow;
			if (ptg instanceof Area3DPxg) {
				Area3DPxg area3dPxg = (Area3DPxg) ptg;
				Area3DPxg new3dpxg = new Area3DPxg(
						area3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(area3dPxg.getSheetName(),
										false)),
						area3dPxg.format2DRefAsString());
				new3dpxg.setClass(originalOperandClass);
				new3dpxg.setFirstColRelative(
						area3dPxg.isFirstColRelative());
				new3dpxg.setLastColRelative(area3dPxg.isLastColRelative());
				new3dpxg.setFirstRow(originFirstRow + shiftRow);
				new3dpxg.setLastRow(originLastRow + shiftRow);
				new3dpxg.setFirstRowRelative(
						area3dPxg.isFirstRowRelative());
				new3dpxg.setLastRowRelative(area3dPxg.isLastRowRelative());
				new3dpxg.setLastSheetName(area3dPxg.getLastSheetName());
				newPtg[i * unitSize] = new3dpxg;
			} else {
				AreaPtgBase areaPtgBase = (AreaPtgBase) ptg;
				newPtg[i * unitSize] = new AreaPtg(
						originFirstRow + shiftRow, originLastRow + shiftRow,
						areaPtgBase.getFirstColumn(),
						areaPtgBase.getLastColumn(),
						areaPtgBase.isFirstRowRelative(),
						areaPtgBase.isLastRowRelative(),
						areaPtgBase.isFirstColRelative(),
						areaPtgBase.isLastColRelative());

			}
			if (i < (rowList.size() - 1)) {
				newPtg[i * unitSize + 1] = ParenthesisPtg.instance;
			}
		}
	}",Builds the dynamic row for area ptg base .,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,"[{'Syntax': 'areaPtg.getLastRow()', 'FunctionName': 'getLastRow', 'ArgsCount': 0, 'MethodBody': 'int getLastRow();', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/Command.java'}, {'Syntax': 'rowList.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final int size() {\r\n\t\treturn 0;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'rowList.get(i).getRow()', 'FunctionName': 'getRow', 'ArgsCount': 0, 'MethodBody': 'public final int getRow() {\r\n\t\treturn row;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialCellAddress.java'}, {'Syntax': 'rowList.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'area3dPxg.getSheetName()', 'FunctionName': 'getSheetName', 'ArgsCount': 0, 'MethodBody': 'public final String getSheetName() {\r\n\t\treturn sheetName;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}, {'Syntax': 'rowList.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final int size() {\r\n\t\treturn 0;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}]"
6621cd91cda9bd4817b110d4,RestComm/jain-slee,"protected boolean beforeGetCmpField() throws ManagementException {

        if (logger.isDebugEnabled()) {
            logger.debug(""beforeGetCmpField() on profile with name "" + profileName + "" of table "" + profileTable.getProfileTableName());
        }

        return beforeNonSetCmpField();
    }",Logic to execute before invoking a cmp getter method on the mbean,container/profiles/src/main/java/org/mobicents/slee/container/profile/AbstractProfileMBeanImpl.java,"[{'Syntax': 'profileTable.getProfileTableName()', 'FunctionName': 'getProfileTableName', 'ArgsCount': 0, 'MethodBody': 'public String getProfileTableName()\n        throws ManagementException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ProfileTableUsageMBean.java'}, {'Syntax': 'beforeNonSetCmpField()', 'FunctionName': 'beforeNonSetCmpField', 'ArgsCount': 0, 'MethodBody': 'private boolean beforeNonSetCmpField() throws ManagementException {\n\n        if (logger.isDebugEnabled()) {\n            logger.debug(""beforeNonSetCmpField() on profile with name "" + profileName + "" of table "" + profileTable.getProfileTableName());\n        }\n\n        if (isProfileWriteable()) {\n            try {\n                sleeContainer.getTransactionManager().resume(transaction);\n            } catch (Throwable e) {\n                throw new ManagementException(e.getMessage(), e);\n            }\n            return true;\n        } else {\n            // not in write mode, create transaction just for this invocation\n            try {\n                sleeContainer.getTransactionManager().begin();\n                return true;\n            } catch (Throwable e) {\n                throw new ManagementException(e.getMessage(), e);\n            }\n        }\n    }', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/AbstractProfileMBeanImpl.java'}]"
6621cd91cda9bd4817b110d5,rupertlssmith/lojix,"protected WAMCallPoint setCodeAddress(int functorName, int offset, int length)
    {
        WAMCallPoint entry = new WAMCallPoint(offset, length, functorName);
        symbolTable.put(functorName, SYMKEY_CALLPOINTS, entry);

        // Keep a reverse lookup from address to functor name.
        reverseTable.put(offset, functorName);

        return entry;
    }",Records the offset of the start of the code for the named functor .,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/machine/WAMBaseMachine.java,"[{'Syntax': 'symbolTable.put(functorName, SYMKEY_CALLPOINTS, entry)', 'FunctionName': 'put', 'ArgsCount': 3, 'MethodBody': 'public E put(Long x, Long y, E value)\n    {\n        // Check that the value is not null as this data structure does not allow nulls\n        if (value == null)\n        {\n            throw new IllegalArgumentException(""Null values not allowed in HashMapXY data structure."");\n        }\n\n        // Extract the region containing the coordinates from the hash table\n        Bucket<E> region = (Bucket<E>) regions.get(new Coordinates(div(x, bucketSize), div(y, bucketSize)));\n\n        // Check if the region does not exist yet and create it if so\n        if (region == null)\n        {\n            region = new Bucket<E>(bucketSize);\n            regions.put(new Coordinates(div(x, bucketSize), div(y, bucketSize)), region);\n        }\n\n        // Take a reference to the old value if there is one\n        E old = region.array[mod(x, bucketSize)][mod(y, bucketSize)];\n\n        // Insert the new value into the bucket\n        region.array[mod(x, bucketSize)][mod(y, bucketSize)] = value;\n\n        // Increment the bucket and whole data structure item counts to reflect the true size\n        size++;\n        region.itemCount++;\n\n        // Return the replaced value\n        return old;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/doublemaps/HashMapXY.java'}, {'Syntax': 'reverseTable.put(offset, functorName)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(String name, Object value)\n    {\n        pageContext.setAttribute(name, value, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}]"
6621cd91cda9bd4817b110d6,Unidata/thredds,"static protected HTTPMethod makemethod(HTTPSession.Methods m, HTTPSession session, String url)
            throws HTTPException
    {
        HTTPMethod meth = null;
        if(MOCKMETHODCLASS == null) { // do the normal case
            meth = new HTTPMethod(m, session, url);
        } else {//(MOCKMETHODCLASS != null)
            java.lang.Class methodcl = MOCKMETHODCLASS;
            Constructor<HTTPMethod> cons = null;
            try {
                cons = methodcl.getConstructor(HTTPSession.Methods.class, HTTPSession.class, String.class);
            } catch (Exception e) {
                throw new HTTPException(""HTTPFactory: no proper HTTPMethod constructor available"", e);
            }
            try {
                meth = cons.newInstance(m, session, url);
            } catch (Exception e) {
                throw new HTTPException(""HTTPFactory: HTTPMethod constructor failed"", e);
            }
        }
        return meth;
    }",Common method creation code so we can isolate mocking,httpservices/src/main/java/ucar/httpservices/HTTPFactory.java,[]
6621cd91cda9bd4817b110d7,tony19/logback-android,"private String getAbsoluteFilePath(String filename) {
    // In Android, relative paths created with File() are relative
    // to root, so fix it by prefixing the path to the app's ""files""
    // directory.
    // This transformation is rather expensive, since it involves loading the
    // Android manifest from the APK (which is a ZIP file), and parsing it to
    // retrieve the application package name. This should be avoided if
    // possible as it may perceptibly delay the app launch time.
    if (EnvUtil.isAndroidOS() && !new File(filename).isAbsolute()) {
      String dataDir = context.getProperty(CoreConstants.DATA_DIR_KEY);
      filename = FileUtil.prefixRelativePath(dataDir, filename);
    }
    return filename;
  }",Gets the absolute path to the filename starting from the app s files directory if it is not already an absolute path,logback-android/src/main/java/ch/qos/logback/core/FileAppender.java,"[{'Syntax': 'context.getProperty(CoreConstants.DATA_DIR_KEY)', 'FunctionName': 'getProperty', 'ArgsCount': 1, 'MethodBody': 'public String getProperty(String key) {\n    if (CONTEXT_NAME_KEY.equals(key))\n      return getName();\n\n    return (String) this.propertyMap.get(key);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/ContextBase.java'}, {'Syntax': 'FileUtil.prefixRelativePath(dataDir, filename)', 'FunctionName': 'prefixRelativePath', 'ArgsCount': 2, 'MethodBody': 'public static String prefixRelativePath(String prefix, String path) {\n    if (prefix != null && !OptionHelper.isEmpty(prefix.trim()) && !new File(path).isAbsolute()) {\n      path = prefix + ""/"" + path;\n    }\n    return path;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/util/FileUtil.java'}]"
6621cd91cda9bd4817b110d8,jboss/jboss-common-core,"private static void jar(File src, String prefix, JarInfo info)
      throws IOException
   {
      
      JarOutputStream jout = info.out;
      if (src.isDirectory())
      {
         // create / init the zip entry
         prefix = prefix + src.getName() + ""/"";
         ZipEntry entry = new ZipEntry(prefix);
         entry.setTime(src.lastModified());
         entry.setMethod(JarOutputStream.STORED);
         entry.setSize(0L);
         entry.setCrc(0L);
         jout.putNextEntry(entry);
         jout.closeEntry();
         
         // process the sub-directories
         File[] files = src.listFiles(info.filter);
         for (int i = 0; i < files.length; i++)
         {
            jar(files[i], prefix, info);
         }
      } 
      else if (src.isFile())
      {
         // get the required info objects
         byte[] buffer = info.buffer;
         
         // create / init the zip entry
         ZipEntry entry = new ZipEntry(prefix + src.getName());
         entry.setTime(src.lastModified());
         jout.putNextEntry(entry);
         
         // dump the file
         FileInputStream in = new FileInputStream(src);
         int len;
         while ((len = in.read(buffer, 0, buffer.length)) != -1)
         {
            jout.write(buffer, 0, len);
         }
         in.close();
         jout.closeEntry();
      }
   }",This recursive method writes all matching files and directories to the jar output stream .,src/main/java/org/jboss/util/file/JarUtils.java,"[{'Syntax': 'src.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName()\n   {\n      return name;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/state/State.java'}, {'Syntax': 'jar(files[i], prefix, info)', 'FunctionName': 'jar', 'ArgsCount': 3, 'MethodBody': 'public static void jar(OutputStream out, File[] src, FileFilter filter)\n      throws IOException\n   {\n      jar(out, src, filter, null, null);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/file/JarUtils.java'}, {'Syntax': 'src.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName()\n   {\n      return name;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/state/State.java'}, {'Syntax': 'in.read(buffer, 0, buffer.length)', 'FunctionName': 'read', 'ArgsCount': 3, 'MethodBody': 'public int read(byte[] b, int off, int len) throws IOException\n   {\n      return internalRead(b, off, len);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/sockets/InterruptableInputStream.java'}, {'Syntax': 'jout.write(buffer, 0, len)', 'FunctionName': 'write', 'ArgsCount': 3, 'MethodBody': 'public void write(byte[] theBytes, int off, int len) throws java.io.IOException\n      {\n         // Encoding suspended?\n         if (suspendEncoding)\n         {\n            super.out.write(theBytes, off, len);\n            return;\n         } // end if: supsended\n\n         for (int i = 0; i < len; i++)\n         {\n            write(theBytes[off + i]);\n         } // end for: each byte written\n\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Base64.java'}, {'Syntax': 'in.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'public synchronized void close() throws IOException\n   {\n      s.close();\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/sockets/TimeoutSocket.java'}]"
6621cd91cda9bd4817b110d9,rupertlssmith/lojix,"public static void write24BitIntToByteArray(byte[] buf, int offset, int value)
    {
        buf[offset++] = (byte) (value & 0x000000ff);
        buf[offset++] = (byte) ((value & 0x0000ff00) >> 8);
        buf[offset] = (byte) ((value & 0x00ff0000) >> 16);
    }",Outputs an int into a byte array copying only the bottom 24 bits of the integer . The top sign bit is lost by this operation so this only works on positive ints below 2^24 .,base/common/src/main/com/thesett/common/util/ByteBufferUtils.java,[]
6621cd91cda9bd4817b110da,orientechnologies/orientdb,"final public OStatement parse() throws ParseException {
 /*@bgen(jjtree) parse */
 Oparse jjtn000 = new Oparse(JJTPARSE);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
 jjtn000.jjtSetFirstToken(getToken(1));OStatement result;
    try {
      result = Statement();
      jj_consume_token(0);
    jjtree.closeNodeScope(jjtn000, true);
    jjtc000 = false;
    jjtn000.jjtSetLastToken(getToken(0));
    {if (true) return result;}
    } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      {if (true) throw (RuntimeException)jjte000;}
    }
    if (jjte000 instanceof ParseException) {
      {if (true) throw (ParseException)jjte000;}
    }
    {if (true) throw (Error)jjte000;}
    } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
    }
    throw new Error(""Missing return statement in function"");
  }",Root productions .,core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java,"[{'Syntax': 'jjtree.openNodeScope(jjtn000)', 'FunctionName': 'openNodeScope', 'ArgsCount': 1, 'MethodBody': 'public void openNodeScope(Node n) {\n    marks.add(mk);\n    mk = sp;\n    n.jjtOpen();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/JJTOrientSqlState.java'}, {'Syntax': 'jjtn000.jjtSetFirstToken(getToken(1))', 'FunctionName': 'jjtSetFirstToken', 'ArgsCount': 1, 'MethodBody': 'public void jjtSetFirstToken(Token token) {\n    this.firstToken = token;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/SimpleNode.java'}, {'Syntax': 'getToken(1)', 'FunctionName': 'getToken', 'ArgsCount': 1, 'MethodBody': 'public final Token getToken(int index) {\n    Token t = token;\n    for (int i = 0; i < index; i++) {\n      if (t.next != null) t = t.next;\n      else t = t.next = token_source.getNextToken();\n    }\n    return t;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java'}, {'Syntax': 'Statement()', 'FunctionName': 'Statement', 'ArgsCount': 0, 'MethodBody': 'public final OStatement Statement() throws ParseException {\n    /*@bgen(jjtree) Statement */\n    OStatement jjtn000 = new OStatement(JJTSTATEMENT);\n    boolean jjtc000 = true;\n    jjtree.openNodeScope(jjtn000);\n    jjtn000.jjtSetFirstToken(getToken(1));\n    OStatement result = null;\n    try {\n      result = StatementInternal();\n      switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {\n        case SEMICOLON:\n          jj_consume_token(SEMICOLON);\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n      }\n      jjtree.closeNodeScope(jjtn000, true);\n      jjtc000 = false;\n      jjtn000.jjtSetLastToken(getToken(0));\n      {\n        if (true) return result;\n      }\n    } catch (Throwable jjte000) {\n      if (jjtc000) {\n        jjtree.clearNodeScope(jjtn000);\n        jjtc000 = false;\n      } else {\n        jjtree.popNode();\n      }\n      if (jjte000 instanceof RuntimeException) {\n        {\n          if (true) throw (RuntimeException) jjte000;\n        }\n      }\n      if (jjte000 instanceof ParseException) {\n        {\n          if (true) throw (ParseException) jjte000;\n        }\n      }\n      {\n        if (true) throw (Error) jjte000;\n      }\n    } finally {\n      if (jjtc000) {\n        jjtree.closeNodeScope(jjtn000, true);\n        jjtn000.jjtSetLastToken(getToken(0));\n      }\n    }\n    throw new Error(""Missing return statement in function"");\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java'}, {'Syntax': 'jj_consume_token(0)', 'FunctionName': 'jj_consume_token', 'ArgsCount': 1, 'MethodBody': 'private Token jj_consume_token(int kind) throws ParseException {\n    Token oldToken;\n    if ((oldToken = token).next != null) token = token.next;\n    else token = token.next = token_source.getNextToken();\n    jj_ntk = -1;\n    if (token.kind == kind) {\n      jj_gen++;\n      if (++jj_gc > 100) {\n        jj_gc = 0;\n        for (int i = 0; i < jj_2_rtns.length; i++) {\n          JJCalls c = jj_2_rtns[i];\n          while (c != null) {\n            if (c.gen < jj_gen) c.first = null;\n            c = c.next;\n          }\n        }\n      }\n      return token;\n    }\n    token = oldToken;\n    jj_kind = kind;\n    throw generateParseException();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java'}, {'Syntax': 'jjtree.closeNodeScope(jjtn000, true)', 'FunctionName': 'closeNodeScope', 'ArgsCount': 2, 'MethodBody': 'public void closeNodeScope(Node n, int num) {\n    mk = marks.remove(marks.size() - 1);\n    while (num-- > 0) {\n      Node c = popNode();\n      c.jjtSetParent(n);\n      n.jjtAddChild(c, num);\n    }\n    n.jjtClose();\n    pushNode(n);\n    node_created = true;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/JJTOrientSqlState.java'}, {'Syntax': 'jjtn000.jjtSetLastToken(getToken(0))', 'FunctionName': 'jjtSetLastToken', 'ArgsCount': 1, 'MethodBody': 'public void jjtSetLastToken(Token token) {\n    this.lastToken = token;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/SimpleNode.java'}, {'Syntax': 'getToken(0)', 'FunctionName': 'getToken', 'ArgsCount': 1, 'MethodBody': 'public final Token getToken(int index) {\n    Token t = token;\n    for (int i = 0; i < index; i++) {\n      if (t.next != null) t = t.next;\n      else t = t.next = token_source.getNextToken();\n    }\n    return t;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java'}, {'Syntax': 'jjtree.clearNodeScope(jjtn000)', 'FunctionName': 'clearNodeScope', 'ArgsCount': 1, 'MethodBody': 'public void clearNodeScope(Node n) {\n    while (sp > mk) {\n      popNode();\n    }\n    mk = marks.remove(marks.size() - 1);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/JJTOrientSqlState.java'}, {'Syntax': 'jjtree.popNode()', 'FunctionName': 'popNode', 'ArgsCount': 0, 'MethodBody': 'public Node popNode() {\n    if (--sp < mk) {\n      mk = marks.remove(marks.size() - 1);\n    }\n    return nodes.remove(nodes.size() - 1);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/JJTOrientSqlState.java'}, {'Syntax': 'jjtree.closeNodeScope(jjtn000, true)', 'FunctionName': 'closeNodeScope', 'ArgsCount': 2, 'MethodBody': 'public void closeNodeScope(Node n, int num) {\n    mk = marks.remove(marks.size() - 1);\n    while (num-- > 0) {\n      Node c = popNode();\n      c.jjtSetParent(n);\n      n.jjtAddChild(c, num);\n    }\n    n.jjtClose();\n    pushNode(n);\n    node_created = true;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/JJTOrientSqlState.java'}, {'Syntax': 'jjtn000.jjtSetLastToken(getToken(0))', 'FunctionName': 'jjtSetLastToken', 'ArgsCount': 1, 'MethodBody': 'public void jjtSetLastToken(Token token) {\n    this.lastToken = token;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/SimpleNode.java'}, {'Syntax': 'getToken(0)', 'FunctionName': 'getToken', 'ArgsCount': 1, 'MethodBody': 'public final Token getToken(int index) {\n    Token t = token;\n    for (int i = 0; i < index; i++) {\n      if (t.next != null) t = t.next;\n      else t = t.next = token_source.getNextToken();\n    }\n    return t;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java'}]"
6621cd92cda9bd4817b110db,oblac/jodd,"protected void closeTx() {
		txActive = false;
		try {
			connection.setAutoCommit(true);
		} catch (SQLException sex) {
			throw new DbSqlException(""Close TX failed"", sex);
		}
	}",Closes current transaction .,jodd-db/src/main/java/jodd/db/DbSession.java,[]
6621cd92cda9bd4817b110dc,nidi3/graphviz-java,"public static Label html(String value) {
        return new Label(value, true, false, false, false, null, null);
    }",Create a HTML label .,graphviz-java/src/main/java/guru/nidi/graphviz/attribute/Label.java,[]
6621cd92cda9bd4817b110dd,deeplearning4j/nd4j,"@Override
    public Pointer getPointer(DataBuffer buffer, CudaContext context) {
        return memoryHandler.getDevicePointer(buffer, context);
    }",This method returns actual device pointer valid for current object,nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/allocator/impl/AtomicAllocator.java,[]
6621cd92cda9bd4817b110de,wildfly/wildfly,"protected void calculateOperationAnalysisMap() {
        operationAnalysisMap = new HashMap();
        OperationAnalysis oa;

        // Map the operations
        for (int i = 0; i < operations.length; ++i) {
            oa = operations[i];
            operationAnalysisMap.put(oa.getIDLName(), oa);
        }

        // Map the attributes
        for (int i = 0; i < attributes.length; ++i) {
            AttributeAnalysis attr = attributes[i];

            oa = attr.getAccessorAnalysis();

            // Not having an accessor analysis means that
            // the attribute is not in a remote interface
            if (oa != null) {
                operationAnalysisMap.put(oa.getIDLName(), oa);

                oa = attr.getMutatorAnalysis();
                if (oa != null)
                    operationAnalysisMap.put(oa.getIDLName(), oa);
            }
        }
    }",Calculate the map that maps IDL operation names to operation analyses . Besides mapped operations this map also contains the attribute accessor and mutator operations .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/InterfaceAnalysis.java,"[{'Syntax': 'operationAnalysisMap.put(oa.getIDLName(), oa)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n    public String put(String key, String value) {\n        Value old = this.get().put(new Key(key), new Value(value));\n        return (old != null) ? old.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/infinispan/bean/CacheBean.java'}, {'Syntax': 'oa.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'attr.getAccessorAnalysis()', 'FunctionName': 'getAccessorAnalysis', 'ArgsCount': 0, 'MethodBody': 'public OperationAnalysis getAccessorAnalysis() {\n        return accessorAnalysis;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AttributeAnalysis.java'}, {'Syntax': 'operationAnalysisMap.put(oa.getIDLName(), oa)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n    public String put(String key, String value) {\n        Value old = this.get().put(new Key(key), new Value(value));\n        return (old != null) ? old.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/infinispan/bean/CacheBean.java'}, {'Syntax': 'oa.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'attr.getMutatorAnalysis()', 'FunctionName': 'getMutatorAnalysis', 'ArgsCount': 0, 'MethodBody': 'public OperationAnalysis getMutatorAnalysis() {\n        return mutatorAnalysis;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AttributeAnalysis.java'}, {'Syntax': 'operationAnalysisMap.put(oa.getIDLName(), oa)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n    public String put(String key, String value) {\n        Value old = this.get().put(new Key(key), new Value(value));\n        return (old != null) ? old.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/infinispan/bean/CacheBean.java'}, {'Syntax': 'oa.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}]"
6621cd92cda9bd4817b110df,Unidata/thredds,"public float[] getLongitudes() {
    if (myASIBs == null)
      return null;
    float[] lons = new float[nRays];
    for (int i = 0; i < nRays; i++)
      lons[i] = myASIBs[i].getLongitude();
    return lons;
  }",Get the array of per - ray longitudes . If we do not have per - ray position information null is returned .,cdm/src/main/java/ucar/atd/dorade/DoradeSWIB.java,[]
6621cd92cda9bd4817b110e0,rest-assured/rest-assured,"public static AuthenticationScheme ntlm(String userName, String password, String workstation, String domain) {
        final NTLMAuthScheme scheme = new NTLMAuthScheme();
        scheme.setUserName(userName);
        scheme.setPassword(password);
        scheme.setWorkstation(workstation);
        scheme.setDomain(domain);
        return scheme;
    }",Create a NTLM authentication scheme .,rest-assured/src/main/java/io/restassured/RestAssured.java,"[{'Syntax': 'scheme.setDomain(domain)', 'FunctionName': 'setDomain', 'ArgsCount': 1, 'MethodBody': 'public Builder setDomain(String domain) {\n            notNull(domain, ""Cookie domain"");\n            this.domain = domain;\n            return this;\n        }', 'FileName': '/rest-assured/rest-assured/rest-assured/src/main/java/io/restassured/http/Cookie.java'}]"
6621cd92cda9bd4817b110e1,Unidata/thredds,"public void doOneDataset( InvDataset ds) {
    if (debug) System.out.println(""doDataset ""+ds.getName());

    if (isDatasetUseable( ds, messBuffer)) {
      String id = StringUtil2.replace(ds.getID(), ""/"", ""-"");
      String fileOutName = fileDir+""/""+id+"".dif.xml"";
      try {
        OutputStream out = new BufferedOutputStream(new FileOutputStream( fileOutName));
        // writeOneEntry(ds, System.out, mess);
        writeOneEntry(ds, out, messBuffer);
        out.close();
        messBuffer.append("" OK on Write\n"");
      } catch (IOException ioe) {
        messBuffer.append(""DIFWriter failed on write "" + ioe.getMessage() + ""\n"");
        log.error(""DIFWriter failed on write ""+ioe.getMessage(), ioe);
      }
    }
  }",Write a DIF record for a specific dataset,legacy/src/main/java/thredds/catalog/dl/DIFWriter.java,[]
6621cd92cda9bd4817b110e2,Unidata/thredds,"public void resetShape() {
    // if (immutable) throw new IllegalStateException(""Cant modify"");  LOOK allow this for unlimited dimension updating
    this.shape = new int[dimensions.size()];
    for (int i = 0; i < dimensions.size(); i++) {
      Dimension dim = dimensions.get(i);
      shape[i] = dim.getLength();
      //shape[i] = Math.max(dim.getLength(), 0); // LOOK
      // if (dim.isUnlimited() && (i != 0)) // LOOK only true for Netcdf-3
      //   throw new IllegalArgumentException(""Unlimited dimension must be outermost"");
      if (dim.isVariableLength()) {
        //if (dimensions.size() != 1)
        //  throw new IllegalArgumentException(""Unknown dimension can only be used in 1 dim array"");
        //else
        isVariableLength = true;
      }
    }
    this.shapeAsSection = null; // recalc next time its asked for
  }",Use when dimensions have changed to recalculate the shape .,cdm/src/main/java/ucar/nc2/Variable.java,[]
6621cd92cda9bd4817b110e3,streamsets/datacollector,"private void upgradeV1toV2(List<Config> configs) {
    configs.removeIf(config -> (config.getName().equals(IMPLICIT_FIELD_MAPPING_CONFIG) ||
        config.getName().equals(BIG_QUERY_IMPLICIT_FIELD_MAPPING_CONFIG)));
    configs.add(new Config(MAX_CACHE_SIZE, -1));
  }",Remove implicit field mapping,google-cloud-lib/src/main/java/com/streamsets/pipeline/stage/bigquery/destination/BigQueryTargetUpgrader.java,[]
6621cd92cda9bd4817b110e4,jcodec/jcodec,"public Size compSize(Size size, int comp) {
        if (compWidth[comp] == 0 && compHeight[comp] == 0)
            return size;
        return new Size(size.getWidth() >> compWidth[comp], size.getHeight() >> compHeight[comp]);
    }",Calculates the component size based on the fullt size and color subsampling of the given component index .,src/main/java/org/jcodec/common/model/ColorSpace.java,"[{'Syntax': 'size.getWidth()', 'FunctionName': 'getWidth', 'ArgsCount': 0, 'MethodBody': 'public int getWidth() {\n        return width;\n    }', 'FileName': '/jcodec/jcodec/jplayer/src/main/java/org/jcodec/player/ui/Image.java'}, {'Syntax': 'size.getHeight()', 'FunctionName': 'getHeight', 'ArgsCount': 0, 'MethodBody': 'public int getHeight() {\n        return height;\n    }', 'FileName': '/jcodec/jcodec/jplayer/src/main/java/org/jcodec/player/ui/Image.java'}]"
6621cd92cda9bd4817b110e5,jkuhnert/ognl,"public static String getClassPackageName(Class c)
    {
        String s = c.getName();
        int i = s.lastIndexOf('.');

        return (i < 0) ? null : s.substring(0, i);
    }",Returns the package name of the class given .,src/main/java/ognl/OgnlRuntime.java,"[{'Syntax': 'c.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n            return ""name"";\n        }', 'FileName': '/jkuhnert/ognl/src/test/java/ognl/TestOgnlRuntime.java'}]"
6621cd92cda9bd4817b110e6,Unidata/thredds,"public boolean isTopLevel()
    {
        return parent == null
                || parent.getSort() == DapSort.DATASET
                || parent.getSort() == DapSort.GROUP;
    }",Misc . Methods,dap4/d4core/src/main/java/dap4/core/dmr/DapNode.java,[]
6621cd92cda9bd4817b110e7,GojaFramework/goja,"public static void copy(Reader input, OutputStream output) throws IOException {
        copy(input, output, Const.DEFAULT_ENCODING);
    }",Copies reader to output stream using buffer .,goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java,"[{'Syntax': 'copy(input, output, Const.DEFAULT_ENCODING)', 'FunctionName': 'copy', 'ArgsCount': 3, 'MethodBody': 'public static int copy(InputStream input, OutputStream output, int byteCount) throws IOException {\n        byte buffer[] = new byte[ioBufferSize];\n        int count = 0;\n        int read;\n        while (byteCount > 0) {\n            if (byteCount < ioBufferSize) {\n                read = input.read(buffer, 0, byteCount);\n            } else {\n                read = input.read(buffer, 0, ioBufferSize);\n            }\n            if (read == -1) {\n                break;\n            }\n            byteCount -= read;\n            count += read;\n            output.write(buffer, 0, read);\n        }\n        return count;\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java'}]"
6621cd92cda9bd4817b110e8,CAFapi/caf-common,"public static ReferencedData getWrappedData(final String ref, final byte[] data)
    {
        return new ReferencedData(Objects.requireNonNull(ref), data);
    }",Create a ReferencedData instance that wraps data but also has a reference .,util-ref/src/main/java/com/hpe/caf/util/ref/ReferencedData.java,[]
6621cd92cda9bd4817b110e9,real-logic/aeron,"public final void abort()
    {
        int frameLength = buffer.capacity();
        if (ByteOrder.nativeOrder() != LITTLE_ENDIAN)
        {
            frameLength = Integer.reverseBytes(frameLength);
        }

        buffer.putShort(TYPE_FIELD_OFFSET, (short)HDR_TYPE_PAD, LITTLE_ENDIAN);
        buffer.putIntOrdered(FRAME_LENGTH_FIELD_OFFSET, frameLength);
    }",Abort a claim of the message space to the log buffer so that the log can progress by ignoring this claim .,aeron-client/src/main/java/io/aeron/logbuffer/BufferClaim.java,"[{'Syntax': 'buffer.capacity()', 'FunctionName': 'capacity', 'ArgsCount': 0, 'MethodBody': 'public int capacity()\n    {\n        return buffer.capacity();\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/BufferBuilder.java'}]"
6621cd92cda9bd4817b110ea,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setPelletheizung(JAXBElement<Object> value) {
        this.pelletheizung = value;
    }",Sets the value of the pelletheizung property .,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/BefeuerungsArtTyp.java,[]
6621cd92cda9bd4817b110eb,alipay/sofa-bolt,"public void closeConnection(String addr) {
        Url url = this.addressParser.parse(addr);
        this.connectionManager.remove(url.getUniqueKey());
    }",Close all connections of a address,src/main/java/com/alipay/remoting/rpc/RpcClient.java,"[{'Syntax': 'this.addressParser.parse(addr)', 'FunctionName': 'parse', 'ArgsCount': 1, 'MethodBody': 'Url parse(String url);', 'FileName': '/alipay/sofa-bolt/src/main/java/com/alipay/remoting/RemotingAddressParser.java'}, {'Syntax': 'this.connectionManager.remove(url.getUniqueKey())', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void remove(Connection connection) {\n        if (null == connection) {\n            return;\n        }\n        Set<String> poolKeys = connection.getPoolKeys();\n        if (null == poolKeys || poolKeys.isEmpty()) {\n            connection.close();\n            logger.warn(""Remove and close a standalone connection."");\n        } else {\n            for (String poolKey : poolKeys) {\n                this.remove(connection, poolKey);\n            }\n        }\n    }', 'FileName': '/alipay/sofa-bolt/src/main/java/com/alipay/remoting/DefaultConnectionManager.java'}, {'Syntax': 'url.getUniqueKey()', 'FunctionName': 'getUniqueKey', 'ArgsCount': 0, 'MethodBody': 'public String getUniqueKey() {\n        return uniqueKey;\n    }', 'FileName': '/alipay/sofa-bolt/src/main/java/com/alipay/remoting/Url.java'}]"
6621cd92cda9bd4817b110ec,orientechnologies/orientdb,"public static List<Class<?>> getClassessOfInterface(String thePackage, Class<?> theInterface, final ClassLoader iClassLoader) {
    List<Class<?>> classList = new ArrayList<Class<?>>();
    try {
      for (Class<?> discovered : getClassesFor(thePackage, iClassLoader)) {
        if (Arrays.asList(discovered.getInterfaces()).contains(theInterface)) {
          classList.add(discovered);
        }
      }
    } catch (ClassNotFoundException ex) {
      OLogManager.instance().error(null, ""Error finding classes"", ex);
    }

    return classList;
  }",Filters discovered classes to see if they implement a given interface .,object/src/main/java/com/orientechnologies/common/reflection/OReflectionHelper.java,"[{'Syntax': 'getClassesFor(thePackage, iClassLoader)', 'FunctionName': 'getClassesFor', 'ArgsCount': 2, 'MethodBody': 'public static List<Class<?>> getClassesFor(\n      final Collection<String> classNames, final ClassLoader classLoader)\n      throws ClassNotFoundException {\n    List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());\n    for (String className : classNames) {\n      classes.add(Class.forName(className, true, classLoader));\n    }\n    return classes;\n  }', 'FileName': '/orientechnologies/orientdb/object/src/main/java/com/orientechnologies/common/reflection/OReflectionHelper.java'}, {'Syntax': 'Arrays.asList(discovered.getInterfaces()).contains(theInterface)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean contains(Object o) {\n    if (!(o instanceof OTransactionIndexChangesPerKey.OTransactionIndexEntry)) {\n      return false;\n    }\n\n    OIdentifiable record = ((OTransactionIndexChangesPerKey.OTransactionIndexEntry) o).getValue();\n    ORID rid = record == null ? null : record.getIdentity();\n    List<Node> items = ridToNodes.get(rid);\n    if (items == null) {\n      return false;\n    }\n    for (Node item : items) {\n      if (item.entry.equals(o)) {\n        return true;\n      }\n    }\n    return false;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTxIndexChangesList.java'}, {'Syntax': 'classList.add(discovered)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}, {'Syntax': 'OLogManager.instance().error(null, ""Error finding classes"", ex)', 'FunctionName': 'error', 'ArgsCount': 3, 'MethodBody': 'void error(Object requester, String format, Object... args);', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/output/OPluginMessageHandler.java'}, {'Syntax': 'OLogManager.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}]"
6621cd92cda9bd4817b110ed,jcodec/jcodec,"public static ByteBuffer joinNALUnits(List<ByteBuffer> nalUnits) {
        int size = 0;
        for (ByteBuffer nal : nalUnits) {
            size += 4 + nal.remaining();
        }
        ByteBuffer allocate = ByteBuffer.allocate(size);
        joinNALUnitsToBuffer(nalUnits, allocate);
        return allocate;
    }",Joins buffers containing individual NAL units into a single AnnexB delimited buffer . Each NAL unit will be separated with 00 00 00 01 markers . Allocates a new byte buffer and writes data into it .,src/main/java/org/jcodec/codecs/h264/H264Utils.java,"[{'Syntax': 'nal.remaining()', 'FunctionName': 'remaining', 'ArgsCount': 0, 'MethodBody': 'public int remaining() {\n        return (((java.nio.Buffer)bb).remaining() << 3) + 32 - deficit;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/io/BitReader.java'}, {'Syntax': 'joinNALUnitsToBuffer(nalUnits, allocate)', 'FunctionName': 'joinNALUnitsToBuffer', 'ArgsCount': 2, 'MethodBody': 'public static void joinNALUnitsToBuffer(List<ByteBuffer> nalUnits, ByteBuffer out) {\n        for (ByteBuffer nal : nalUnits) {\n            out.putInt(1);\n            out.put(nal.duplicate());\n        }\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/codecs/h264/H264Utils.java'}]"
6621cd92cda9bd4817b110ee,oblac/jodd,"@Override
	public boolean addAll(final Collection<? extends E> c) {
		Iterator<? extends E> i = c.iterator();
		boolean changed = false;
		while (i.hasNext()) {
			boolean ret = add(i.next());
			if (!changed) {
				changed = ret;
			}
		}
		return changed;
	}",Add all of the elements in the given collection to this list .,jodd-core/src/main/java/jodd/util/collection/SortedArrayList.java,"[{'Syntax': 'c.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic Iterator<File> iterator() {\n\n\t\treturn new Iterator<File>() {\n\t\t\tprivate File nextFile;\n\n\t\t\t@Override\n\t\t\tpublic boolean hasNext() {\n\t\t\t\tnextFile = nextFile();\n\t\t\t\treturn nextFile != null;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic File next() {\n\t\t\t\tif (nextFile == null) {\n\t\t\t\t\tthrow new NoSuchElementException();\n\t\t\t\t}\n\t\t\t\treturn nextFile;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void remove() {\n\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t}\n\t\t};\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'i.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\t\tpublic boolean hasNext() {\n\t\t\t\tnextFile = nextFile();\n\t\t\t\treturn nextFile != null;\n\t\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'add(i.next())', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}, {'Syntax': 'i.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public File next() {\n\t\t\tif (files != null) {\n\t\t\t\treturn nextFile();\n\t\t\t} else if (fileNames != null) {\n\t\t\t\treturn nextFileName();\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}]"
6621cd92cda9bd4817b110ef,buschmais/jqa-commandline-tool,"public void run(String[] args) throws CliExecutionException {
        Options options = gatherOptions(taskFactory);
        CommandLine commandLine = getCommandLine(args, options);
        interpretCommandLine(commandLine, options, taskFactory);
    }",Run tasks according to the given arguments .,application/src/main/java/com/buschmais/jqassistant/commandline/Main.java,"[{'Syntax': 'getCommandLine(args, options)', 'FunctionName': 'getCommandLine', 'ArgsCount': 2, 'MethodBody': 'private CommandLine getCommandLine(String[] args, Options options) {\n        final CommandLineParser parser = new DefaultParser();\n        CommandLine commandLine = null;\n        try {\n            commandLine = parser.parse(options, args);\n        } catch (ParseException e) {\n            printUsage(e.getMessage());\n            System.exit(1);\n        }\n        return commandLine;\n    }', 'FileName': '/buschmais/jqa-commandline-tool/application/src/main/java/com/buschmais/jqassistant/commandline/Main.java'}]"
6621cd92cda9bd4817b110f0,oblac/jodd,"protected void injectUploadedFiles(final HttpServletRequest servletRequest, final Targets targets) {
		if (!(servletRequest instanceof MultipartRequestWrapper)) {
			return;
		}
		final MultipartRequestWrapper multipartRequest = (MultipartRequestWrapper) servletRequest;
		if (!multipartRequest.isMultipart()) {
			return;
		}
		final Enumeration<String> paramNames = multipartRequest.getFileParameterNames();
		while (paramNames.hasMoreElements()) {
			final String paramName = paramNames.nextElement();
			if (servletRequest.getAttribute(paramName) != null) {
				continue;
			}

			targets.forEachTargetAndIn(this, (target, in) -> {
				final String name = in.matchedName(paramName);
				if (name != null) {
					final FileUpload[] paramValues = multipartRequest.getFiles(paramName);

					if (ignoreInvalidUploadFiles) {
						for (int j = 0; j < paramValues.length; j++) {
							final FileUpload paramValue = paramValues[j];

							if ((!paramValue.isValid()) || (!paramValue.isUploaded())) {
								paramValues[j] = null;
							}
						}
					}

					final Object value = (paramValues.length == 1 ? paramValues[0] : paramValues);
					target.writeValue(name, value, true);
				}
			});
		}
	}",Inject uploaded files from multipart request parameters .,jodd-madvoc/src/main/java/jodd/madvoc/scope/RequestScope.java,"[{'Syntax': 'multipartRequest.isMultipart()', 'FunctionName': 'isMultipart', 'ArgsCount': 0, 'MethodBody': 'public boolean isMultipart() {\n\t\treturn mreq != null;\n\t}', 'FileName': '/oblac/jodd/jodd-servlet/src/main/java/jodd/servlet/upload/MultipartRequestWrapper.java'}, {'Syntax': 'multipartRequest.getFileParameterNames()', 'FunctionName': 'getFileParameterNames', 'ArgsCount': 0, 'MethodBody': 'public Enumeration<String> getFileParameterNames() {\n\t\tif (mreq == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn Collections.enumeration(mreq.getFileParameterNames());\n\t}', 'FileName': '/oblac/jodd/jodd-servlet/src/main/java/jodd/servlet/upload/MultipartRequestWrapper.java'}, {'Syntax': 'paramNames.hasMoreElements()', 'FunctionName': 'hasMoreElements', 'ArgsCount': 0, 'MethodBody': 'public boolean hasMoreElements() {\n\t\tif (currentEnumeration == -1) {\n\t\t\tcurrentEnumeration = 0;\n\t\t}\n\t\tfor (int i = currentEnumeration; i < allEnumerations.size(); i++) {\n\t\t\tfinal Enumeration<T> enumeration = allEnumerations.get(i);\n\t\t\tif (enumeration.hasMoreElements()) {\n\t\t\t\tcurrentEnumeration = i;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/collection/CompositeEnumeration.java'}, {'Syntax': 'paramNames.nextElement()', 'FunctionName': 'nextElement', 'ArgsCount': 0, 'MethodBody': 'public T nextElement() {\n\t\tif (!hasMoreElements()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\n\t\treturn allEnumerations.get(currentEnumeration).nextElement();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/collection/CompositeEnumeration.java'}, {'Syntax': 'servletRequest.getAttribute(paramName)', 'FunctionName': 'getAttribute', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic Object getAttribute(String s) {\n\t\treturn map.get(s);\n\t}', 'FileName': '/oblac/jodd/jodd-servlet/src/test/java/jodd/servlet/tag/MockJspContext.java'}, {'Syntax': 'targets.forEachTargetAndIn(this, (target, in) -> {\n\t\t\t\tfinal String name = in.matchedName(paramName);\n\t\t\t\tif (name != null) {\n\t\t\t\t\tfinal FileUpload[] paramValues = multipartRequest.getFiles(paramName);\n\n\t\t\t\t\tif (ignoreInvalidUploadFiles) {\n\t\t\t\t\t\tfor (int j = 0; j < paramValues.length; j++) {\n\t\t\t\t\t\t\tfinal FileUpload paramValue = paramValues[j];\n\n\t\t\t\t\t\t\tif ((!paramValue.isValid()) || (!paramValue.isUploaded())) {\n\t\t\t\t\t\t\t\tparamValues[j] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfinal Object value = (paramValues.length == 1 ? paramValues[0] : paramValues);\n\t\t\t\t\ttarget.writeValue(name, value, true);\n\t\t\t\t}\n\t\t\t})', 'FunctionName': 'forEachTargetAndIn', 'ArgsCount': 2, 'MethodBody': 'public void forEachTargetAndIn(final MadvocScope scope, final BiConsumer<Target, InjectionPoint> biConsumer) {\n\t\tfor (final Target target : targets) {\n\t\t\tfinal ScopeData scopeData = target.scopeData();\n\n\t\t\tif (scopeData.in() == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (final InjectionPoint in : scopeData.in()) {\n\t\t\t\tif (in.scope() != scope) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbiConsumer.accept(target, in);\n\t\t\t}\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java'}, {'Syntax': 'in.matchedName(paramName)', 'FunctionName': 'matchedName', 'ArgsCount': 1, 'MethodBody': ""public String matchedName(final String value) {\n\t\t// match\n\t\tif (!value.startsWith(name)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfinal int requiredLen = name.length();\n\n\t\tif (value.length() >= requiredLen + 1) {\n\t\t\tfinal char c = value.charAt(requiredLen);\n\t\t\tif ((c != '.') && (c != '[')) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// get param\n\t\tif (targetName == null) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn targetName + value.substring(name.length());\n\t}"", 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/InjectionPoint.java'}, {'Syntax': 'multipartRequest.getFiles(paramName)', 'FunctionName': 'getFiles', 'ArgsCount': 1, 'MethodBody': 'public FileUpload[] getFiles(final String fieldName) {\n\t\tif (mreq == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn mreq.getFiles(fieldName);\n\t}', 'FileName': '/oblac/jodd/jodd-servlet/src/main/java/jodd/servlet/upload/MultipartRequestWrapper.java'}, {'Syntax': 'target.writeValue(name, value, true)', 'FunctionName': 'writeValue', 'ArgsCount': 3, 'MethodBody': 'public void writeValue(final InjectionPoint injectionPoint, final Object propertyValue, final boolean silent) {\n\t\twriteValue(injectionPoint.targetName(), propertyValue, silent);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Target.java'}]"
6621cd92cda9bd4817b110f1,GojaFramework/goja,"public static <T extends Model> T getLoginUser(HttpServletRequest req) {
        return (T) req.getSession().getAttribute(LOGIN_SESSION_KEY);
    }",Obtain user information from the Session,goja-web/src/main/java/goja/security/goja/SecurityKit.java,"[{'Syntax': 'req.getSession().getAttribute(LOGIN_SESSION_KEY)', 'FunctionName': 'getAttribute', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Object getAttribute(String key) {\n        return attr.get(key);\n    }', 'FileName': '/GojaFramework/goja/goja-test/src/main/java/goja/test/mock/MockHttpRequest.java'}, {'Syntax': 'req.getSession()', 'FunctionName': 'getSession', 'ArgsCount': 0, 'MethodBody': 'public static Session getSession() {\n        if (session == null) {\n            Properties props = new Properties();\n            // Put a bogus value even if we are on dev mode, otherwise JavaMail will complain\n            props.put(""mail.smtp.host"", GojaConfig.getProperty(""mail.smtp.host"", ""localhost""));\n\n            String channelEncryption;\n            if (GojaConfig.containsKey(""mail.smtp.protocol"") && GojaConfig.getProperty(\n                    ""mail.smtp.protocol"", ""smtp"").equals(""smtps"")) {\n                // Backward compatibility before stable5\n                channelEncryption = ""starttls"";\n            } else {\n                channelEncryption = GojaConfig.getProperty(""mail.smtp.channel"", ""clear"");\n            }\n\n            if (channelEncryption.equals(""clear"")) {\n                props.put(""mail.smtp.port"", ""25"");\n            } else if (channelEncryption.equals(""ssl"")) {\n                // port 465 + setup yes ssl socket factory (won\'t verify that the server certificate is signed with a root ca.)\n                props.put(""mail.smtp.port"", ""465"");\n                props.put(""mail.smtp.socketFactory.port"", ""465"");\n                props.put(""mail.smtp.socketFactory.class"", ""play.utils.YesSSLSocketFactory"");\n                props.put(""mail.smtp.socketFactory.fallback"", ""false"");\n            } else if (channelEncryption.equals(""starttls"")) {\n                // port 25 + enable starttls + ssl socket factory\n                props.put(""mail.smtp.port"", ""25"");\n                props.put(""mail.smtp.starttls.enable"", ""true"");\n                // can\'t install our socket factory. will work only with server that has a signed certificate\n                // story to be continued in javamail 1.4.2 : https://glassfish.dev.java.net/issues/show_bug.cgi?id=5189\n            }\n\n            if (GojaConfig.containsKey(""mail.smtp.localhost"")) {\n                props.put(""mail.smtp.localhost"",\n                        GojaConfig.get(""mail.smtp.localhost""));            //override defaults\n            }\n            if (GojaConfig.containsKey(""mail.smtp.socketFactory.class"")) {\n                props.put(""mail.smtp.socketFactory.class"", GojaConfig.get(""mail.smtp.socketFactory.class""));\n            }\n            if (GojaConfig.containsKey(""mail.smtp.port"")) {\n                props.put(""mail.smtp.port"", GojaConfig.get(""mail.smtp.port""));\n            }\n            String user = GojaConfig.getProperty(""mail.smtp.user"");\n            String password = GojaConfig.getProperty(""mail.smtp.pass"");\n            if (password == null) {\n                // Fallback to old convention\n                password = GojaConfig.getProperty(""mail.smtp.password"");\n            }\n            session = null;\n\n            if (user != null && password != null) {\n                props.put(""mail.smtp.auth"", ""true"");\n                session = Session.getInstance(props, new SMTPAuthenticator(user, password));\n            } else {\n                props.remove(""mail.smtp.auth"");\n                session = Session.getInstance(props);\n            }\n\n            if (Boolean.parseBoolean(GojaConfig.getProperty(""mail.debug"", ""false""))) {\n                session.setDebug(true);\n            }\n        }\n        return session;\n    }', 'FileName': '/GojaFramework/goja/goja-rapid/src/main/java/goja/rapid/email/EMail.java'}]"
6621cd93cda9bd4817b110f2,agentsoz/jill,"public static boolean isNameEqual(AObject obj1, AObject obj2) {
    // Not equal if the names are null, or empty, or not the same size
    if (obj1.name == null || obj2.name == null || obj1.name.length != obj2.name.length
        || obj1.name.length == 0) {
      return false;
    }
    // Not equal if any name character is different
    for (int i = 0; i < obj1.name.length; i++) {
      if (obj1.name[i] != obj2.name[i]) {
        return false;
      }
    }
    // Else equal
    return true;
  }",Checks if two objects have the same name . The check is case sensitive .,jill/src/main/java/io/github/agentsoz/jill/struct/AObject.java,[]
6621cd93cda9bd4817b110f3,playframework/playframework,"public <A extends T> Binding<T> to(final Supplier<A> instance) {
    return underlying.to(new FromJavaSupplier<>(instance)).asJava();
  }",Bind this binding key to the given instance .,core/play/src/main/java/play/inject/BindingKey.java,"[{'Syntax': 'underlying.to(new FromJavaSupplier<>(instance)).asJava()', 'FunctionName': 'asJava', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EssentialAction asJava() {\n    return this;\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/mvc/EssentialAction.java'}, {'Syntax': 'underlying.to(new FromJavaSupplier<>(instance))', 'FunctionName': 'to', 'ArgsCount': 1, 'MethodBody': 'public Binding<T> to(final Class<? extends T> implementation) {\n    return underlying.to(implementation).asJava();\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/inject/BindingKey.java'}]"
6621cd93cda9bd4817b110f4,ieb/sparsemapcontent,"protected void joinAll() throws InterruptedException {
		if (queues != null) {
			for (QueueManager q : queues) {
				q.getQueueDispatcher().join();
			}
		}
	}",used only for testing,extensions/solr/src/main/java/org/sakaiproject/nakamura/solr/ContentEventListener.java,[]
6621cd93cda9bd4817b110f5,Unidata/thredds,"public void zoomToFit() {
		//Tools.log(""zoomToFit invoked"");
		sclPic.setScaleSize( getSize() );
		// prevent useless rescale events when the picture is not ready
		if ( sclPic.getStatusCode() == sclPic.LOADED 
		  || sclPic.getStatusCode() == sclPic.READY ) {
			sclPic.createScaledPictureInThread( Thread.MAX_PRIORITY );
		}
	}",this method sets the desired scaled size of the ScalablePicture to the size of the JPanel and fires off a createScaledPictureInThread request if the ScalablePicture has been loaded or is ready .,ui/src/main/java/ucar/nc2/ui/image/PicturePane.java,[]
6621cd93cda9bd4817b110f6,wildfly/wildfly,"private ModuleDefImpl ensurePackageExists(LocalContainer c,
                                              String previous,
                                              String remainder)
            throws IRConstructionException {
        if ("""".equals(remainder))
            return (ModuleDefImpl) c; // done

        int idx = remainder.indexOf('.');
        String base;

        if (idx == -1)
            base = remainder;
        else
            base = remainder.substring(0, idx);
        base = Util.javaToIDLName(base);

        if (previous.equals(""""))
            previous = base;
        else
            previous = previous + ""/"" + base;
        if (idx == -1)
            remainder = """";
        else
            remainder = remainder.substring(idx + 1);

        LocalContainer next = null;
        LocalContained contained = (LocalContained) c._lookup(base);

        if (contained instanceof LocalContainer)
            next = (LocalContainer) contained;
        else if (contained != null)
            throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();

        if (next == null) {
            String id = ""IDL:"" + previous + "":1.0"";

            // Create module
            ModuleDefImpl m = new ModuleDefImpl(id, base, ""1.0"", c, impl);

            c.add(base, m);

            if (idx == -1)
                return m; // done

            next = (LocalContainer) c._lookup(base); // Better be there now...
        } else // Check that next _is_ a module
            if (next.def_kind() != DefinitionKind.dk_Module)
                throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();

        return ensurePackageExists(next, previous, remainder);
    }",Ensure that a package exists in the IR . This will create modules in the IR as needed .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java,"[{'Syntax': '"""".equals(remainder)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        MetricID metricID = (MetricID) o;\n        return metricName.equals(metricID.metricName) &&\n                tags.equals(metricID.tags);\n    }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricID.java'}, {'Syntax': 'Util.javaToIDLName(base)', 'FunctionName': 'javaToIDLName', 'ArgsCount': 1, 'MethodBody': 'public static String javaToIDLName(String name) {\n        if (name == null || """".equals(name) || name.indexOf(\'.\') != -1)\n            throw IIOPLogger.ROOT_LOGGER.nameCannotBeNullEmptyOrQualified();\n\n        StringBuffer res = new StringBuffer(name.length());\n\n        if (name.charAt(0) == \'_\')\n            res.append(\'J\'); // 1.3.2.3\n\n        for (int i = 0; i < name.length(); ++i) {\n            char c = name.charAt(i);\n\n            if (isLegalIDLIdentifierChar(c))\n                res.append(c);\n            else // 1.3.2.4\n                res.append(\'U\').append(toHexString((int) c));\n        }\n\n        String s = res.toString();\n\n        if (isReservedIDLKeyword(s))\n            return ""_"" + s;\n        else\n            return s;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/Util.java'}, {'Syntax': 'previous.equals("""")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        MetricID metricID = (MetricID) o;\n        return metricName.equals(metricID.metricName) &&\n                tags.equals(metricID.tags);\n    }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricID.java'}, {'Syntax': 'c._lookup(base)', 'FunctionName': '_lookup', 'ArgsCount': 1, 'MethodBody': 'public LocalContained _lookup(String search_name) {\n        return delegate._lookup(search_name);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/ValueDefImpl.java'}, {'Syntax': 'IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage()', 'FunctionName': 'collisionWhileCreatingPackage', 'ArgsCount': 0, 'MethodBody': '@Message(id = 92, value = ""Name collision while creating package"")\n    IRConstructionException collisionWhileCreatingPackage();', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java'}, {'Syntax': 'c.add(base, m)', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': 'public void add(final T item, int priority) {\n        if(sortedItems != null) {\n            throw EeLogger.ROOT_LOGGER.cannotAddMoreItems();\n        }\n        if(item == null) {\n            throw EeLogger.ROOT_LOGGER.nullVar(""item"");\n        }\n        final T current = items.get(priority);\n        if (current != null) {\n            throw EeLogger.ROOT_LOGGER.priorityAlreadyExists(item, toHexString(priority), current);\n        }\n        items.put(priority, item);\n    }', 'FileName': '/wildfly/wildfly/ee/src/main/java/org/jboss/as/ee/component/interceptors/OrderedItemContainer.java'}, {'Syntax': 'c._lookup(base)', 'FunctionName': '_lookup', 'ArgsCount': 1, 'MethodBody': 'public LocalContained _lookup(String search_name) {\n        return delegate._lookup(search_name);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/ValueDefImpl.java'}, {'Syntax': 'next.def_kind()', 'FunctionName': 'def_kind', 'ArgsCount': 0, 'MethodBody': 'public DefinitionKind def_kind() {\n        return def_kind;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/IRObjectImpl.java'}, {'Syntax': 'IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage()', 'FunctionName': 'collisionWhileCreatingPackage', 'ArgsCount': 0, 'MethodBody': '@Message(id = 92, value = ""Name collision while creating package"")\n    IRConstructionException collisionWhileCreatingPackage();', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java'}, {'Syntax': 'ensurePackageExists(next, previous, remainder)', 'FunctionName': 'ensurePackageExists', 'ArgsCount': 3, 'MethodBody': 'private ModuleDefImpl ensurePackageExists(LocalContainer c,\n                                              String previous,\n                                              String remainder)\n            throws IRConstructionException {\n        if ("""".equals(remainder))\n            return (ModuleDefImpl) c; // done\n\n        int idx = remainder.indexOf(\'.\');\n        String base;\n\n        if (idx == -1)\n            base = remainder;\n        else\n            base = remainder.substring(0, idx);\n        base = Util.javaToIDLName(base);\n\n        if (previous.equals(""""))\n            previous = base;\n        else\n            previous = previous + ""/"" + base;\n        if (idx == -1)\n            remainder = """";\n        else\n            remainder = remainder.substring(idx + 1);\n\n        LocalContainer next = null;\n        LocalContained contained = (LocalContained) c._lookup(base);\n\n        if (contained instanceof LocalContainer)\n            next = (LocalContainer) contained;\n        else if (contained != null)\n            throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();\n\n        if (next == null) {\n            String id = ""IDL:"" + previous + "":1.0"";\n\n            // Create module\n            ModuleDefImpl m = new ModuleDefImpl(id, base, ""1.0"", c, impl);\n\n            c.add(base, m);\n\n            if (idx == -1)\n                return m; // done\n\n            next = (LocalContainer) c._lookup(base); // Better be there now...\n        } else // Check that next _is_ a module\n            if (next.def_kind() != DefinitionKind.dk_Module)\n                throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();\n\n        return ensurePackageExists(next, previous, remainder);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java'}]"
6621cd93cda9bd4817b110f7,rupertlssmith/lojix,"public Object next()
    {
        try
        {
            Object ob = source.next();

            return ob;
        }
        catch (RemoteException e)
        {
            throw new IllegalStateException(e);
        }
    }",Fetches the next element from this iterator .,base/common/src/main/com/thesett/common/util/distributed/ClientIterator.java,"[{'Syntax': 'source.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public Object next()\n                {\n                    // Check that there is a next element and return null if not.\n                    if (!hasNext())\n                    {\n                        return null;\n                    }\n\n                    // Get the next ordering count.\n                    int o = ORDER[i];\n\n                    // Do bit matching on the count to choose which elements to include in the key.\n                    String result =\n                        (((o & E) != 0) ? (environment + ""."") : """") + (((o & B) != 0) ? (base + ""."") : """") +\n                        (((o & M) != 0) ? (modifier + ""."") : """") + key;\n\n                    // Increment the iterator to get the next key on the next call.\n                    i++;\n\n                    return result;\n                }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}]"
6621cd93cda9bd4817b110f8,apache/parquet-mr,"public static TaskAttemptContext newTaskAttemptContext(
      Configuration conf, TaskAttemptID taskAttemptId) {
    try {
      return (TaskAttemptContext)
          TASK_CONTEXT_CONSTRUCTOR.newInstance(conf, taskAttemptId);
    } catch (InstantiationException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    } catch (IllegalAccessException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    } catch (InvocationTargetException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    }
  }",Creates TaskAttemptContext from a JobConf and jobId using the correct constructor for based on Hadoop version .,parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/ContextUtil.java,[]
6621cd93cda9bd4817b110f9,wildfly/wildfly,"protected void fixupOverloadedOperationNames()
            throws RMIIIOPViolationException {
        for (int i = 0; i < methods.length; ++i) {
            if ((m_flags[i] & M_OVERLOADED) == 0)
                continue;

            // Find the operation
            OperationAnalysis oa = null;
            String javaName = methods[i].getName();
            for (int opIdx = 0; oa == null && opIdx < operations.length; ++opIdx)
                if (operations[opIdx].getMethod().equals(methods[i]))
                    oa = operations[opIdx];

            if (oa == null)
                continue; // This method is not mapped.

            // Calculate new IDL name
            ParameterAnalysis[] params = oa.getParameters();
            StringBuffer b = new StringBuffer(oa.getIDLName());
            if (params.length == 0)
                b.append(""__"");
            for (int j = 0; j < params.length; ++j) {
                String s = params[j].getTypeIDLName();

                if (s.startsWith(""::""))
                    s = s.substring(2);

                if (s.startsWith(""_"")) {
                    // remove leading underscore in IDL escaped identifier
                    s = s.substring(1);
                }

                b.append('_');

                while (!"""".equals(s)) {
                    int idx = s.indexOf(""::"");

                    b.append('_');

                    if (idx == -1) {
                        b.append(s);
                        s = """";
                    } else {
                        b.append(s.substring(0, idx));
                        if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') {
                            // remove leading underscore in IDL escaped identifier
                            s = s.substring(idx + 3);
                        } else {
                            s = s.substring(idx + 2);
                        }
                    }
                }
            }

            // Set new IDL name
            oa.setIDLName(b.toString());
        }
    }",Fixup overloaded operation names . As specified in section 1 . 3 . 2 . 6 .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java,"[{'Syntax': 'methods[i].getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'operations[opIdx].getMethod().equals(methods[i])', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        MetricID metricID = (MetricID) o;\n        return metricName.equals(metricID.metricName) &&\n                tags.equals(metricID.tags);\n    }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricID.java'}, {'Syntax': 'operations[opIdx].getMethod()', 'FunctionName': 'getMethod', 'ArgsCount': 0, 'MethodBody': 'public Method getMethod() {\n        return method;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/mdb/dynamic/impl/Cmd.java'}, {'Syntax': 'oa.getParameters()', 'FunctionName': 'getParameters', 'ArgsCount': 0, 'MethodBody': 'public ValueFactoryParameter[] getParameters() {\n            return parameters;\n        }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceAttributeConfig.java'}, {'Syntax': 'oa.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'b.append(""__"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(String m) {\n        message += m;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/interceptor/aroundconstruct/nocreate/AroundConstructSLSB.java'}, {'Syntax': 'params[j].getTypeIDLName()', 'FunctionName': 'getTypeIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getTypeIDLName() {\n        return typeIDLName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ParameterAnalysis.java'}, {'Syntax': ""b.append('_')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(String m) {\n        message += m;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/interceptor/aroundconstruct/nocreate/AroundConstructSLSB.java'}, {'Syntax': '"""".equals(s)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        MetricID metricID = (MetricID) o;\n        return metricName.equals(metricID.metricName) &&\n                tags.equals(metricID.tags);\n    }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricID.java'}, {'Syntax': ""b.append('_')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(String m) {\n        message += m;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/interceptor/aroundconstruct/nocreate/AroundConstructSLSB.java'}, {'Syntax': 'b.append(s)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(String m) {\n        message += m;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/interceptor/aroundconstruct/nocreate/AroundConstructSLSB.java'}, {'Syntax': 'b.append(s.substring(0, idx))', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(String m) {\n        message += m;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/interceptor/aroundconstruct/nocreate/AroundConstructSLSB.java'}, {'Syntax': 'oa.setIDLName(b.toString())', 'FunctionName': 'setIDLName', 'ArgsCount': 1, 'MethodBody': 'void setIDLName(String idlName) {\n        this.idlName = idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'b.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n        public String toString() {\n            return this.name().toLowerCase(Locale.ENGLISH);\n        }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricMetadata.java'}]"
6621cd93cda9bd4817b110fa,Unidata/thredds,"@Override
  public int[] findXYindexFromCoord(double x_coord, double y_coord, int[] result) {
    if (result == null)
      result = new int[2];

    if ((horizXaxis instanceof CoordinateAxis1D) && (horizYaxis instanceof CoordinateAxis1D)) {
      result[0] = ((CoordinateAxis1D) horizXaxis).findCoordElement(x_coord);
      result[1] = ((CoordinateAxis1D) horizYaxis).findCoordElement(y_coord);
      return result;

    } else if ((horizXaxis instanceof CoordinateAxis2D) && (horizYaxis instanceof CoordinateAxis2D)) {
      if (g2d == null)
        g2d = new GridCoordinate2D((CoordinateAxis2D) horizYaxis, (CoordinateAxis2D) horizXaxis);
      int[] result2 = new int[2];
      boolean found = g2d.findCoordElement(y_coord, x_coord, result2);
      if (found) {
        result[0] = result2[1];
        result[1] = result2[0];
      } else {
        result[0] = -1;
        result[1] = -1;
      }
      return result;
    }

    // cant happen
    throw new IllegalStateException(""GridCoordSystem.findXYindexFromCoord"");
  }",Given a point in x y coordinate space find the x y index in the coordinate system .,cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java,[]
6621cd93cda9bd4817b110fb,google/openrtb,"public String process(SnippetProcessorContext ctx, String snippet) {
    checkNotNull(ctx);
    StringBuilder sb = ctx.builder();
    sb.setLength(0);
    String currSnippet = snippet;

    boolean processedMacros = false;
    int snippetPos = 0;
    int macroPos = currSnippet.indexOf(""${"");

    while (macroPos != -1) {
      sb.append(currSnippet.substring(snippetPos, macroPos));
      int macroEnd = processMacroAt(ctx, currSnippet, macroPos);

      if (macroEnd == -1) {
        sb.append(""${"");
        snippetPos = macroPos + 2;
      } else {
        snippetPos = macroEnd;
        processedMacros = true;
      }

      macroPos = currSnippet.indexOf(""${"", snippetPos);
    }

    if (processedMacros) {
      sb.append(currSnippet, snippetPos, currSnippet.length());
      currSnippet = sb.toString();
    }
    sb.setLength(0);

    String ret = urlEncode(ctx, currSnippet);
    sb.setLength(0);
    return ret;
  }",Processes the raw snippet that was set by the bid making any transformations necessary .,openrtb-core/src/main/java/com/google/openrtb/snippet/SnippetProcessor.java,"[{'Syntax': 'ctx.builder()', 'FunctionName': 'builder', 'ArgsCount': 0, 'MethodBody': 'public final StringBuilder builder() {\n    return builder;\n  }', 'FileName': '/google/openrtb/openrtb-core/src/main/java/com/google/openrtb/snippet/SnippetProcessorContext.java'}, {'Syntax': 'processMacroAt(ctx, currSnippet, macroPos)', 'FunctionName': 'processMacroAt', 'ArgsCount': 3, 'MethodBody': 'private int processMacroAt(SnippetProcessorContext ctx,\n      String snippet, int macroStart) {\n    SnippetMacroType macroDef = match(snippet, macroStart);\n    if (macroDef == null) {\n      return -1;\n    }\n\n    processMacroAt(ctx, macroDef);\n\n    // Handle recursive macros\n    StringBuilder sb = ctx.builder();\n    int macroPos = sb.indexOf(""${"");\n    if (macroPos != -1) {\n      String recSnippet = sb.substring(macroPos);\n      // Avoid infinite recursion if the macro expands to itself!\n      if (!macroDef.key().equals(recSnippet)) {\n        String recReplaced = process(ctx.rec(), recSnippet);\n        if (recReplaced != recSnippet) {\n          sb.setLength(macroPos);\n          sb.append(recReplaced);\n        }\n      }\n    }\n\n    return macroStart + macroDef.key().length();\n  }', 'FileName': '/google/openrtb/openrtb-core/src/main/java/com/google/openrtb/snippet/SnippetProcessor.java'}, {'Syntax': 'sb.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override public String toString() {\n    return MoreObjects.toStringHelper(this).omitNullValues()\n        .add(""request"", request)\n        .add(""response"", ProtoUtils.built(response))\n        .add(""bid"", ProtoUtils.built(bid))\n        .toString();\n  }', 'FileName': '/google/openrtb/openrtb-core/src/main/java/com/google/openrtb/snippet/SnippetProcessorContext.java'}, {'Syntax': 'urlEncode(ctx, currSnippet)', 'FunctionName': 'urlEncode', 'ArgsCount': 2, 'MethodBody': 'protected static String urlEncode(SnippetProcessorContext ctx, String snippet) {\n    int snippetPos = snippet.indexOf(""%{"");\n    if (snippetPos == -1) {\n      return snippet;\n    }\n\n    StringBuilder sb = ctx.builder();\n    int encodeLevel = 0;\n    int encodeStart = 0;\n    int lastPos = snippet.length() - 1;\n\n    while (snippetPos <= lastPos) {\n      char c = snippet.charAt(snippetPos);\n\n      if (c == \'%\' && snippetPos < lastPos && snippet.charAt(snippetPos + 1) == \'{\') {\n        sb.append(flushEncoding(snippet, encodeStart, snippetPos, encodeLevel++));\n        encodeStart = (snippetPos += 2);\n      } else if (c == \'}\' && snippetPos < lastPos && snippet.charAt(snippetPos + 1) == \'%\'\n          && encodeLevel > 0) {\n        sb.append(flushEncoding(snippet, encodeStart, snippetPos, encodeLevel--));\n        encodeStart = (snippetPos += 2);\n      } else {\n        ++snippetPos;\n      }\n    }\n\n    if (encodeLevel != 0) {\n      logger.warn(""Unbalanced \'%{\': level={}, pos={}"", encodeLevel, snippetPos);\n    }\n\n    return sb.append(flushEncoding(snippet, encodeStart, snippet.length(), 0)).toString();\n  }', 'FileName': '/google/openrtb/openrtb-core/src/main/java/com/google/openrtb/snippet/SnippetProcessor.java'}]"
6621cd93cda9bd4817b110fc,oblac/jodd,"protected String removeSelect(String sql) {
		int ndx = StringUtil.indexOfIgnoreCase(sql, ""select"");
		if (ndx != -1) {
			sql = sql.substring(ndx + 6);	// select.length()
		}
		return sql;
	}",Removes the first select from the sql query .,jodd-joy/src/main/java/jodd/joy/page/DbPager.java,[]
6621cd93cda9bd4817b110fd,TooTallNate/Java-WebSocket,"protected void startConnectionLostTimer() {
        synchronized (syncConnectionLost) {
            if (this.connectionLostTimeout <= 0) {
                log.trace(""Connection lost timer deactivated"");
                return;
            }
            log.trace(""Connection lost timer started"");
            this.websocketRunning = true;
            restartConnectionLostTimer();
        }
    }",Start the connection lost timer,src/main/java/org/java_websocket/AbstractWebSocket.java,"[{'Syntax': 'restartConnectionLostTimer()', 'FunctionName': 'restartConnectionLostTimer', 'ArgsCount': 0, 'MethodBody': 'private void restartConnectionLostTimer() {\n    cancelConnectionLostTimer();\n    connectionLostCheckerService = Executors\n        .newSingleThreadScheduledExecutor(new NamedThreadFactory(""connectionLostChecker"", daemon));\n    Runnable connectionLostChecker = new Runnable() {\n\n      /**\n       * Keep the connections in a separate list to not cause deadlocks\n       */\n      private ArrayList<WebSocket> connections = new ArrayList<>();\n\n      @Override\n      public void run() {\n        connections.clear();\n        try {\n          connections.addAll(getConnections());\n          long minimumPongTime;\n          synchronized (syncConnectionLost) {\n            minimumPongTime = (long) (System.nanoTime() - (connectionLostTimeout * 1.5));\n          }\n          for (WebSocket conn : connections) {\n            executeConnectionLostDetection(conn, minimumPongTime);\n          }\n        } catch (Exception e) {\n          //Ignore this exception\n        }\n        connections.clear();\n      }\n    };\n\n    connectionLostCheckerFuture = connectionLostCheckerService\n        .scheduleAtFixedRate(connectionLostChecker, connectionLostTimeout, connectionLostTimeout,\n            TimeUnit.NANOSECONDS);\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/AbstractWebSocket.java'}]"
6621cd93cda9bd4817b110fe,arnohaase/a-foundation,"@Override
    public Set<K> keySet() {
        return new AbstractSet<K>() {
            @Override
            public Iterator<K> iterator() {
                return new Iterator<K>() {
                    final Iterator<AMapEntry<K,V>> it = inner.iterator();

                    @Override
                    public boolean hasNext() {
                        return it.hasNext();
                    }

                    @Override
                    public K next() {
                        return it.next().getKey ();
                    }

                    @Override
                    public void remove() {
                        throw new UnsupportedOperationException();
                    }
                };
            }

            @Override
            public int size() {
                return inner.size();
            }
        };
    }",There is usually a performance gain to be had by overriding this default implementation,a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/JavaUtilMapWrapper.java,"[{'Syntax': 'inner.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override public Iterator<String> iterator() {\n                return new Iterator<String>() {\n                    @Override public boolean hasNext() {\n                        return false;\n                    }\n\n                    @Override public String next() {\n                        return null;\n                    }\n\n                    @Override public void remove() {\n                    }\n                };\n            }', 'FileName': '/arnohaase/a-foundation/a-foundation/src/test/java/com/ajjpj/afoundation/collection/ACollectionHelperTest.java'}, {'Syntax': 'it.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override public boolean hasNext() {\n                        return false;\n                    }', 'FileName': '/arnohaase/a-foundation/a-foundation/src/test/java/com/ajjpj/afoundation/collection/ACollectionHelperTest.java'}, {'Syntax': 'it.next().getKey ()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override public K getKey () {\n            return curKey;\n        }', 'FileName': '/arnohaase/a-foundation/a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/ABTreeMap.java'}, {'Syntax': 'it.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@Override public String next() {\n                        return null;\n                    }', 'FileName': '/arnohaase/a-foundation/a-foundation/src/test/java/com/ajjpj/afoundation/collection/ACollectionHelperTest.java'}, {'Syntax': 'inner.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override public int size() {\n            return inner.size();\n        }', 'FileName': '/arnohaase/a-foundation/a-foundation/src/main/java/com/ajjpj/afoundation/collection/ACollectionHelper.java'}]"
6621cd93cda9bd4817b110ff,Unidata/thredds,"@Override
  public String getSubCenterName(int center, int subcenter) {

    switch (subcenter) {
      case 0:
        return null;
      case 1:
        return ""FSL/FRD Regional Analysis and Prediction Branch"";
      case 2:
        return ""FSL/FRD Local Analysis and Prediction Branch"";
    }
    return super.getSubCenterName(center, subcenter);
  }",LOOK maybe combine grib1 grib2 and bufr ??,grib/src/main/java/ucar/nc2/grib/grib2/table/FslHrrrLocalTables.java,[]
6621cd93cda9bd4817b11100,wildfly/wildfly,"public void shutdown() {
        POA poa = getPOA();
        try {
            poa.deactivate_object(poa.reference_to_id(getReference()));
        } catch (UserException ex) {
            IIOPLogger.ROOT_LOGGER.warnCouldNotDeactivateIRObject(ex);
        }
    }",Unexport this object .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/IRObjectImpl.java,"[{'Syntax': 'getPOA()', 'FunctionName': 'getPOA', 'ArgsCount': 0, 'MethodBody': 'protected POA getPOA() {\n        return repository.poa;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/IRObjectImpl.java'}, {'Syntax': 'getReference()', 'FunctionName': 'getReference', 'ArgsCount': 0, 'MethodBody': '@Override\n        public ManagedReference getReference() {\n            if (component == null) {\n                synchronized (this) {\n                    if (component == null) {\n                        component = (ServiceController<Component>) serviceRegistry.getService(serviceName);\n                    }\n                }\n            }\n            if (view == null && viewServiceName != null) {\n                synchronized (this) {\n                    if (view == null) {\n                        view = (ServiceController<ViewService.View>) serviceRegistry.getService(viewServiceName);\n                    }\n                }\n            }\n            if (component == null) {\n                return null;\n            }\n            if(view == null) {\n                return new ComponentManagedReference(component.getValue().createInstance());\n            } else {\n                try {\n                    return view.getValue().createInstance();\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }', 'FileName': '/wildfly/wildfly/ee/src/main/java/org/jboss/as/ee/component/ComponentRegistry.java'}, {'Syntax': 'IIOPLogger.ROOT_LOGGER.warnCouldNotDeactivateIRObject(ex)', 'FunctionName': 'warnCouldNotDeactivateIRObject', 'ArgsCount': 1, 'MethodBody': '@LogMessage(level = WARN)\n    @Message(id = 11, value = ""Could not deactivate IR object"")\n    void warnCouldNotDeactivateIRObject(@Cause Throwable cause);', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java'}]"
6621cd93cda9bd4817b11101,rupertlssmith/lojix,"public static WAMResolvingNativeMachine getInstance(SymbolTableImpl<Integer, String, Object> symbolTable)
        throws ImplementationUnavailableException
    {
        try
        {
            if (!libraryLoadAttempted)
            {
                libraryLoadAttempted = true;

                System.loadLibrary(""aima_native"");

                libraryFound = true;
            }

            if (libraryFound)
            {
                return new WAMResolvingNativeMachine(symbolTable);
            }
            else
            {
                throw new ImplementationUnavailableException(""The native library could not be found."", null, null,
                    null);
            }
        }
        catch (UnsatisfiedLinkError e)
        {
            libraryFound = false;
            throw new ImplementationUnavailableException(""The native library could not be found."", e, null, null);
        }
    }",Creates an instance of this machine loading and checking for availability of the native implementation library as required .,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/nativemachine/WAMResolvingNativeMachine.java,[]
6621cd93cda9bd4817b11102,deeplearning4j/nd4j,"@Override
    public DataSet next() {
        if (!iter.hasNext() && passes < numPasses) {
            passes++;
            batch = 0;
            log.info(""Epoch "" + passes + "" batch "" + batch);
            iter.reset();
        }
        batch++;

        DataSet next = iter.next();
        if (preProcessor != null)
            preProcessor.preProcess(next);
        return next;
    }",Returns the next element in the iteration .,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/dataset/api/iterator/MultipleEpochsIterator.java,[]
6621cd93cda9bd4817b11103,RestComm/jain-slee,"public void start() throws InvalidStateException, ManagementException {

		try {
			// request to change to STARTING
			final SleeStateChangeRequest startingRequest = new SleeStateChangeRequest() {

				@Override
				public void stateChanged(SleeState oldState) {
					if(logger.isDebugEnabled()) {
						logger.debug(generateMessageWithLogo(""starting""));
					}
					notifyStateChange(oldState, getNewState());
				}

				@Override
				public void requestCompleted() {
					// inner request, executed when the parent completes, to change to RUNNING
					final SleeStateChangeRequest runningRequest = new SleeStateChangeRequest() {

						private SleeState oldState;

						@Override
						public void stateChanged(SleeState oldState) {
							logger.info(generateMessageWithLogo(""started""));
							this.oldState = oldState;
						}

						@Override
						public void requestCompleted() {
							notifyStateChange(oldState, getNewState());
						}

						@Override
						public boolean isBlockingRequest() {
							return true;
						}

						@Override
						public SleeState getNewState() {
							return SleeState.RUNNING;
						}
					};
					try {
						sleeContainer.setSleeState(runningRequest);
					} catch (Throwable e) {
						logger.error(
								""Failed to set container in RUNNING state"", e);
						try {
							stop(false);
						} catch (Throwable f) {
							logger.error(
									""Failed to set container in STOPPED state, after failure to set in RUNNING state"",
									e);
						}
					}
				}

				@Override
				public boolean isBlockingRequest() {
					// should be false, but the tck doesn't like it
					return true;
				}

				@Override
				public SleeState getNewState() {
					return SleeState.STARTING;
				}
			};
			sleeContainer.setSleeState(startingRequest);

		} catch (InvalidStateException ex) {
			throw ex;
		} catch (Exception ex) {
			throw new ManagementException(ex.getMessage(), ex);
		}
	}",Start the SLEE container,container/common/src/main/java/org/mobicents/slee/container/management/jmx/SleeManagementMBeanImpl.java,"[{'Syntax': 'generateMessageWithLogo(""starting"")', 'FunctionName': 'generateMessageWithLogo', 'ArgsCount': 1, 'MethodBody': 'private String generateMessageWithLogo(String message) {\r\n\t\treturn lLogo + getSleeName() + "" "" + getSleeVersion() + "" \\""""\r\n\t\t\t\t+ getSleeCodeName() + ""\\"" "" + message + rLogo;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/common/src/main/java/org/mobicents/slee/container/management/jmx/SleeManagementMBeanImpl.java'}, {'Syntax': 'notifyStateChange(oldState, getNewState())', 'FunctionName': 'notifyStateChange', 'ArgsCount': 2, 'MethodBody': 'private void notifyStateChange(SleeState oldState, SleeState newState) {\r\n\t\tif (logger.isTraceEnabled()) {\r\n\t\t\tlogger.trace(""notifyStateChange( old = "" + oldState + "" , new = ""\t\t\r\n\t\t\t\t+ newState + "" )"");\r\n\t\t}\r\n\t\tnotificationBroadcaster\r\n\t\t\t\t.sendNotification(new SleeStateChangeNotification(this,\r\n\t\t\t\t\t\tnewState, oldState, sleeStateChangeSequenceNumber++));\r\n\t}', 'FileName': '/RestComm/jain-slee/container/common/src/main/java/org/mobicents/slee/container/management/jmx/SleeManagementMBeanImpl.java'}, {'Syntax': 'getNewState()', 'FunctionName': 'getNewState', 'ArgsCount': 0, 'MethodBody': 'public ServiceState getNewState() {\n        return newState;\n    }', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ServiceStateChangeNotification.java'}, {'Syntax': 'logger.info(generateMessageWithLogo(""started""))', 'FunctionName': 'info', 'ArgsCount': 1, 'MethodBody': 'static public void info(String s) {\r\n    logger.info(s);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/server/src/main/java/org/mobicents/slee/container/management/console/server/Logger.java'}, {'Syntax': 'generateMessageWithLogo(""started"")', 'FunctionName': 'generateMessageWithLogo', 'ArgsCount': 1, 'MethodBody': 'private String generateMessageWithLogo(String message) {\r\n\t\treturn lLogo + getSleeName() + "" "" + getSleeVersion() + "" \\""""\r\n\t\t\t\t+ getSleeCodeName() + ""\\"" "" + message + rLogo;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/common/src/main/java/org/mobicents/slee/container/management/jmx/SleeManagementMBeanImpl.java'}, {'Syntax': 'notifyStateChange(oldState, getNewState())', 'FunctionName': 'notifyStateChange', 'ArgsCount': 2, 'MethodBody': 'private void notifyStateChange(SleeState oldState, SleeState newState) {\r\n\t\tif (logger.isTraceEnabled()) {\r\n\t\t\tlogger.trace(""notifyStateChange( old = "" + oldState + "" , new = ""\t\t\r\n\t\t\t\t+ newState + "" )"");\r\n\t\t}\r\n\t\tnotificationBroadcaster\r\n\t\t\t\t.sendNotification(new SleeStateChangeNotification(this,\r\n\t\t\t\t\t\tnewState, oldState, sleeStateChangeSequenceNumber++));\r\n\t}', 'FileName': '/RestComm/jain-slee/container/common/src/main/java/org/mobicents/slee/container/management/jmx/SleeManagementMBeanImpl.java'}, {'Syntax': 'getNewState()', 'FunctionName': 'getNewState', 'ArgsCount': 0, 'MethodBody': 'public ServiceState getNewState() {\n        return newState;\n    }', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ServiceStateChangeNotification.java'}, {'Syntax': 'sleeContainer.setSleeState(runningRequest)', 'FunctionName': 'setSleeState', 'ArgsCount': 1, 'MethodBody': 'public void setSleeState(final SleeStateChangeRequest request) throws InvalidStateException {\n\n\t\tfinal SleeState newState = request.getNewState();\n\t\t\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(""Changing state: "" + sleeState + "" -> "" + newState);\n\t\t}\n\n\t\tvalidateStateTransition(sleeState, newState);\n\n\t\t// change state\n\t\tSleeState oldState = this.sleeState;\n\t\tthis.sleeState = newState;\n\t\trequest.stateChanged(oldState);\n\t\t\n\t\t// notify modules and complete request\n\t\tfinal Runnable task = new Runnable() {\t\t\t\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tif (newState == SleeState.STARTING) {\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.iterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeStarting();\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse if (newState == SleeState.RUNNING) {\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.iterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeRunning();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (newState == SleeState.STOPPING) {\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.descendingIterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeStopping();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (newState == SleeState.STOPPED) {\n\t\t\t\t\t\tif(logger.isInfoEnabled()) {\n\t\t\t\t\t\t\tlogger.info(dumpState());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.descendingIterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeStopped();\n\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tcatch (Throwable e) {\n\t\t\t\t\tlogger.error(e.getMessage(),e);\n\t\t\t\t}\n\t\t\t\trequest.requestCompleted();\n\t\t\t}\t\t\t\t\t\t\t\n\t\t};\n\t\tif (request.isBlockingRequest()) {\n\t\t\ttask.run();\n\t\t}\n\t\telse {\n\t\t\tfinal ExecutorService executorService = Executors.newSingleThreadExecutor();\n\t\t\ttry {\n\t\t\t\texecutorService.submit(task);\t\t\t\t\n\t\t\t}\n\t\t\tcatch (Throwable e) {\n\t\t\t\tlogger.error(e.getMessage(),e);\n\t\t\t}\n\t\t\texecutorService.shutdown();\n\t\t}\t\t\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'stop(false)', 'FunctionName': 'stop', 'ArgsCount': 1, 'MethodBody': 'public void stop(AsyncCallback callback);', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/sleestate/SleeStateServiceAsync.java'}, {'Syntax': 'sleeContainer.setSleeState(startingRequest)', 'FunctionName': 'setSleeState', 'ArgsCount': 1, 'MethodBody': 'public void setSleeState(final SleeStateChangeRequest request) throws InvalidStateException {\n\n\t\tfinal SleeState newState = request.getNewState();\n\t\t\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(""Changing state: "" + sleeState + "" -> "" + newState);\n\t\t}\n\n\t\tvalidateStateTransition(sleeState, newState);\n\n\t\t// change state\n\t\tSleeState oldState = this.sleeState;\n\t\tthis.sleeState = newState;\n\t\trequest.stateChanged(oldState);\n\t\t\n\t\t// notify modules and complete request\n\t\tfinal Runnable task = new Runnable() {\t\t\t\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tif (newState == SleeState.STARTING) {\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.iterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeStarting();\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse if (newState == SleeState.RUNNING) {\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.iterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeRunning();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (newState == SleeState.STOPPING) {\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.descendingIterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeStopping();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (newState == SleeState.STOPPED) {\n\t\t\t\t\t\tif(logger.isInfoEnabled()) {\n\t\t\t\t\t\t\tlogger.info(dumpState());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (Iterator<SleeContainerModule> i = modules.descendingIterator(); i.hasNext();) {\n\t\t\t\t\t\t\ti.next().sleeStopped();\n\t\t\t\t\t\t}\t\t\t\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tcatch (Throwable e) {\n\t\t\t\t\tlogger.error(e.getMessage(),e);\n\t\t\t\t}\n\t\t\t\trequest.requestCompleted();\n\t\t\t}\t\t\t\t\t\t\t\n\t\t};\n\t\tif (request.isBlockingRequest()) {\n\t\t\ttask.run();\n\t\t}\n\t\telse {\n\t\t\tfinal ExecutorService executorService = Executors.newSingleThreadExecutor();\n\t\t\ttry {\n\t\t\t\texecutorService.submit(task);\t\t\t\t\n\t\t\t}\n\t\t\tcatch (Throwable e) {\n\t\t\t\tlogger.error(e.getMessage(),e);\n\t\t\t}\n\t\t\texecutorService.shutdown();\n\t\t}\t\t\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'ex.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\r\n    return message;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/ManagementConsoleException.java'}]"
6621cd93cda9bd4817b11104,Unidata/thredds,"byte[] uncompressed( ByteBuffer buf, int offset, int uncomplen ) throws IOException
    {
        byte[] header = new byte[offset];
        buf.position(0);
        buf.get(header);
        byte[] out = new byte[offset+uncomplen];
        System.arraycopy(header, 0, out, 0, offset);


        CBZip2InputStream cbzip2 = new CBZip2InputStream();

        int numCompBytes = buf.remaining();
        byte[] bufc = new byte[numCompBytes];
        buf.get(bufc, 0, numCompBytes);

        ByteArrayInputStream bis = new ByteArrayInputStream(bufc, 2, numCompBytes - 2);

        //CBZip2InputStream cbzip2 = new CBZip2InputStream(bis);
        cbzip2.setStream(bis);
        int total = 0;
        int nread;
        byte[] ubuff = new byte[40000];
        byte[] obuff = new byte[40000];
        try {
            while ((nread = cbzip2.read(ubuff)) != -1) {
              if (total + nread > obuff.length) {
                byte[] temp = obuff;
                obuff = new byte[temp.length * 2];
                System.arraycopy(temp, 0, obuff, 0, temp.length);
              }
              System.arraycopy(ubuff, 0, obuff, total, nread);
              total += nread;
            }
            if (obuff.length >= 0)
              System.arraycopy(obuff, 0, out, offset, total);
          } catch (BZip2ReadException ioe) {
            log.warn(""Nexrad2IOSP.uncompress ""+raf.getLocation(), ioe);
        }

        return out;

    }",uncompress the TDWR products,cdm/src/main/java/ucar/nc2/iosp/nids/Nidsheader.java,[]
6621cd93cda9bd4817b11105,tiefaces/TieFaces,"protected static Object fixupRefRelativeRowOneToOne(final Object ptg,
			final Row newRow) {
		if (ptg instanceof RefPtgBase) {
			if (ptg instanceof Ref3DPxg) {
				Ref3DPxg ref3dPxg = (Ref3DPxg) ptg;
				Ref3DPxg new3dpxg = new Ref3DPxg(
						ref3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(ref3dPxg.getSheetName(),
										false)),
						new CellReference(newRow.getRowNum(),
								ref3dPxg.getColumn()));
				new3dpxg.setClass(ref3dPxg.getPtgClass());
				new3dpxg.setColRelative(ref3dPxg.isColRelative());
				new3dpxg.setRowRelative(ref3dPxg.isRowRelative());
				new3dpxg.setLastSheetName(ref3dPxg.getLastSheetName());
				return new3dpxg;
			} else {
				RefPtgBase refPtgBase = (RefPtgBase) ptg;
				return new RefPtg(newRow.getRowNum(),
						refPtgBase.getColumn(), refPtgBase.isRowRelative(),
						refPtgBase.isColRelative());

			}
		} else {
			if (ptg instanceof Area3DPxg) {
				Area3DPxg area3dPxg = (Area3DPxg) ptg;
				Area3DPxg new3dpxg = new Area3DPxg(
						area3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(area3dPxg.getSheetName(),
										false)),
						area3dPxg.format2DRefAsString());
				new3dpxg.setClass(area3dPxg.getPtgClass());
				new3dpxg.setFirstColRelative(
						area3dPxg.isFirstColRelative());
				new3dpxg.setLastColRelative(area3dPxg.isLastColRelative());
				int shiftRow = newRow.getRowNum() - area3dPxg.getFirstRow();
				new3dpxg.setFirstRow(area3dPxg.getFirstRow() + shiftRow);
				new3dpxg.setLastRow(area3dPxg.getLastRow() + shiftRow);
				new3dpxg.setFirstRowRelative(
						area3dPxg.isFirstRowRelative());
				new3dpxg.setLastRowRelative(area3dPxg.isLastRowRelative());
				new3dpxg.setLastSheetName(area3dPxg.getLastSheetName());
				return new3dpxg;
			} else {
				AreaPtgBase areaPtgBase = (AreaPtgBase) ptg;
				int shiftRow = newRow.getRowNum()
						- areaPtgBase.getFirstRow();
				return new AreaPtg(areaPtgBase.getFirstRow() + shiftRow,
						areaPtgBase.getLastRow() + shiftRow,
						areaPtgBase.getFirstColumn(),
						areaPtgBase.getLastColumn(),
						areaPtgBase.isFirstRowRelative(),
						areaPtgBase.isLastRowRelative(),
						areaPtgBase.isFirstColRelative(),
						areaPtgBase.isLastColRelative());
			}
		}

	}",Fixup ref relative row one to one .,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,"[{'Syntax': 'ref3dPxg.getSheetName()', 'FunctionName': 'getSheetName', 'ArgsCount': 0, 'MethodBody': 'public final String getSheetName() {\r\n\t\treturn sheetName;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}, {'Syntax': 'ref3dPxg.getColumn()', 'FunctionName': 'getColumn', 'ArgsCount': 0, 'MethodBody': 'public final int getColumn() {\r\n\t\treturn col;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialCellAddress.java'}, {'Syntax': 'refPtgBase.getColumn()', 'FunctionName': 'getColumn', 'ArgsCount': 0, 'MethodBody': 'public final int getColumn() {\r\n\t\treturn col;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialCellAddress.java'}, {'Syntax': 'area3dPxg.getSheetName()', 'FunctionName': 'getSheetName', 'ArgsCount': 0, 'MethodBody': 'public final String getSheetName() {\r\n\t\treturn sheetName;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/SheetConfiguration.java'}, {'Syntax': 'area3dPxg.getLastRow()', 'FunctionName': 'getLastRow', 'ArgsCount': 0, 'MethodBody': 'int getLastRow();', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/Command.java'}, {'Syntax': 'areaPtgBase.getLastRow()', 'FunctionName': 'getLastRow', 'ArgsCount': 0, 'MethodBody': 'int getLastRow();', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/Command.java'}]"
6621cd93cda9bd4817b11106,cologneintelligence/FitGoodies,"@Override
	public final boolean nextRecord() throws IOException {
		final String line = reader.readLine();
		if (line == null) {
			parts = null;
			return false;
		}

		final List<String> newParts = splitLine(line);
		parts = newParts.toArray(new String[newParts.size()]);
		partIndex = 0;
		return true;
	}",Reads the next row .,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/readers/CSVRecordReader.java,"[{'Syntax': 'splitLine(line)', 'FunctionName': 'splitLine', 'ArgsCount': 1, 'MethodBody': 'private List<String> splitLine(final String line) throws IOException {\n\t\tfinal List<String> newParts = new ArrayList<>();\n\t\tfinal ParserState state = new ParserState();\n\n\t\tfinal StringBuilder todo = new StringBuilder(line);\n\t\tfinal StringBuilder builder = new StringBuilder();\n\n\t\twhile (todo.length() > 0) {\n\t\t\tfinal char character = todo.charAt(0);\n\t\t\ttodo.deleteCharAt(0);\n\n\t\t\tchangeState(state, character);\n\t\t\tfinal String result = processChar(state, builder, character);\n\t\t\tif (result != null) {\n\t\t\t\tnewParts.add(result);\n\t\t\t}\n\n\t\t\treadNextLineIfNeeded(state, todo);\n\t\t}\n\n\t\tif (builder.length() > 0) {\n\t\t\tnewParts.add(builder.toString().trim());\n\t\t}\n\n\t\treturn newParts;\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/readers/CSVRecordReader.java'}, {'Syntax': 'newParts.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n        return cells.size();\n    }', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/htmlparser/FitRow.java'}]"
6621cd93cda9bd4817b11107,orientechnologies/orientdb,"public static OSymmetricKey fromStream(final String algorithm, final InputStream is) {
    String base64Key = null;

    try {
      base64Key = OIOUtils.readStreamAsString(is);
    } catch (Exception ex) {
      throw OException.wrapException(new OSecurityException(""OSymmetricKey.fromStream() Exception: "" + ex.getMessage()), ex);
    }

    return new OSymmetricKey(algorithm, base64Key);
  }",Creates an OSymmetricKey from an InputStream containing a Base64 key .,core/src/main/java/com/orientechnologies/orient/core/security/symmetrickey/OSymmetricKey.java,"[{'Syntax': 'OIOUtils.readStreamAsString(is)', 'FunctionName': 'readStreamAsString', 'ArgsCount': 1, 'MethodBody': 'public static String readStreamAsString(final InputStream iStream) throws IOException {\n    return readStreamAsString(iStream, StandardCharsets.UTF_8);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/io/OIOUtils.java'}, {'Syntax': 'OException.wrapException(new OSecurityException(""OSymmetricKey.fromStream() Exception: "" + ex.getMessage()), ex)', 'FunctionName': 'wrapException', 'ArgsCount': 2, 'MethodBody': 'public static OException wrapException(final OException exception, final Throwable cause) {\n    if (cause instanceof OHighLevelException) return (OException) cause;\n\n    exception.initCause(cause);\n    return exception;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/exception/OException.java'}, {'Syntax': 'ex.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': '@Override\n  public final String getMessage() {\n    final StringBuilder builder = new StringBuilder("""" + super.getMessage());\n    if (dbName != null) {\n      builder.append(""\\r\\n\\t"").append(""DB name=\\"""").append(dbName).append(""\\"""");\n    }\n    if (componentName != null) {\n      builder.append(""\\r\\n\\t"").append(""Component Name=\\"""").append(componentName).append(""\\"""");\n    }\n    if (errorCode != null) {\n      builder.append(""\\r\\n\\t"").append(""Error Code=\\"""").append(errorCode.getCode()).append(""\\"""");\n    }\n\n    return builder.toString();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/exception/OCoreException.java'}]"
6621cd93cda9bd4817b11108,liveontologies/elk-reasoner,"public synchronized void add(RuleApplicationTimer timer) {
		timeOwlThingContextInitRule += timer.timeOwlThingContextInitRule;
		timeRootContextInitializationRule += timer.timeRootContextInitializationRule;
		timeDisjointSubsumerFromMemberRule += timer.timeDisjointSubsumerFromMemberRule;
		timeContradictionFromNegationRule += timer.timeContradictionFromNegationRule;
		timeObjectIntersectionFromFirstConjunctRule += timer.timeObjectIntersectionFromFirstConjunctRule;
		timeObjectIntersectionFromSecondConjunctRule += timer.timeObjectIntersectionFromSecondConjunctRule;
		timeSuperClassFromSubClassRule += timer.timeSuperClassFromSubClassRule;
		timePropagationFromExistentialFillerRule += timer.timePropagationFromExistentialFillerRule;
		timeObjectUnionFromDisjunctRule += timer.timeObjectUnionFromDisjunctRule;
		timeBackwardLinkChainFromBackwardLinkRule += timer.timeBackwardLinkChainFromBackwardLinkRule;
		timeReflexiveBackwardLinkCompositionRule += timer.timeReflexiveBackwardLinkCompositionRule;
		timeNonReflexiveBackwardLinkCompositionRule += timer.timeNonReflexiveBackwardLinkCompositionRule;
		timeSubsumerBackwardLinkRule += timer.timeSubsumerBackwardLinkRule;
		timeContradictionOverBackwardLinkRule += timer.timeContradictionOverBackwardLinkRule;
		timeContradictionPropagationRule += timer.timeContradictionPropagationRule;
		timeContradictionCompositionRule += timer.timeContradictionCompositionRule;
		timeIndexedObjectIntersectionOfDecomposition += timer.timeIndexedObjectIntersectionOfDecomposition;
		timeIndexedObjectSomeValuesFromDecomposition += timer.timeIndexedObjectSomeValuesFromDecomposition;
		timeIndexedObjectComplementOfDecomposition += timer.timeIndexedObjectComplementOfDecomposition;
		timeIndexedObjectHasSelfDecomposition += timer.timeIndexedObjectHasSelfDecomposition;
		timeContradictionFromOwlNothingRule += timer.timeContradictionFromOwlNothingRule;
		timeSubsumerPropagationRule += timer.timeSubsumerPropagationRule;
		timePropagationInitializationRule += timer.timePropagationInitializationRule;
		timeBackwardLinkFromForwardLinkRule += timer.timeBackwardLinkFromForwardLinkRule;
		timeComposedFromDecomposedSubsumerRule += timer.timeComposedFromDecomposedSubsumerRule;
		timeIndexedClassDecompositionRule += timer.timeIndexedClassDecompositionRule;
		timeIndexedClassFromDefinitionRule += timer.timeIndexedClassFromDefinitionRule;
		timeEquivalentClassFirstFromSecondRule += timer.timeEquivalentClassFirstFromSecondRule;
		timeEquivalentClassSecondFromFirstRule += timer.timeEquivalentClassSecondFromFirstRule;
	}",Add the values the corresponding values of the given timer,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/saturation/rules/RuleApplicationTimer.java,[]
6621cd94cda9bd4817b11109,oaqa/baseqa,"public String getConceptType() {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_conceptType == null)
      jcasType.jcas.throwFeatMissing(""conceptType"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    return jcasType.ll_cas.ll_getStringValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_conceptType);}",getter for conceptType - gets The type of this concept .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java,[]
6621cd94cda9bd4817b1110a,tony19/logback-android,"public final void doConfigure(File file) throws JoranException {
    FileInputStream fis = null;
    try {
      URL url = file.toURI().toURL();
      informContextOfURLUsedForConfiguration(getContext(), url);
      fis = new FileInputStream(file);

      // this closes the stream for us
      doConfigure(fis, url.toExternalForm());
    } catch (IOException ioe) {
      String errMsg = ""Could not open ["" + file.getPath() + ""]."";
      addError(errMsg, ioe);
      throw new JoranException(errMsg, ioe);
    } finally {
      CloseUtil.closeQuietly(fis);
    }
  }",Configures logback with the configuration XML read from a given file,logback-android/src/main/java/ch/qos/logback/core/joran/GenericConfigurator.java,"[{'Syntax': 'informContextOfURLUsedForConfiguration(getContext(), url)', 'FunctionName': 'informContextOfURLUsedForConfiguration', 'ArgsCount': 2, 'MethodBody': 'public static void informContextOfURLUsedForConfiguration(Context context, URL url) {\n    ConfigurationWatchListUtil.setMainWatchURL(context, url);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/joran/GenericConfigurator.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'abstract public Context getContext();', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/pattern/parser/AbstractPatternLayoutBaseTest.java'}, {'Syntax': 'doConfigure(fis, url.toExternalForm())', 'FunctionName': 'doConfigure', 'ArgsCount': 2, 'MethodBody': 'public final void doConfigure(InputStream inputStream, String systemId) throws JoranException {\n    InputSource inputSource = new InputSource(inputStream);\n    inputSource.setSystemId(systemId);\n    doConfigure(inputSource);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/joran/GenericConfigurator.java'}, {'Syntax': 'file.getPath()', 'FunctionName': 'getPath', 'ArgsCount': 0, 'MethodBody': 'public String getPath() {\n    return path;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/property/FileExistsPropertyDefiner.java'}, {'Syntax': 'addError(errMsg, ioe)', 'FunctionName': 'addError', 'ArgsCount': 2, 'MethodBody': 'public void addError(String msg, Throwable ex) {\n    cab.addError(msg, ex);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/pattern/DynamicConverter.java'}, {'Syntax': 'CloseUtil.closeQuietly(fis)', 'FunctionName': 'closeQuietly', 'ArgsCount': 1, 'MethodBody': 'public static void closeQuietly(Closeable closeable) {\n    if (closeable == null) return;\n    try {\n      closeable.close();\n    }\n    catch (IOException ex) {\n      assert true;  // avoid an empty catch\n    }\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/util/CloseUtil.java'}]"
6621cd94cda9bd4817b1110b,orientechnologies/orientdb,"@Override
  public long getDistributedTimeout() {
    final long to = OGlobalConfiguration.DISTRIBUTED_CRUD_TASK_SYNCH_TIMEOUT.getValueAsLong();
    return to + ((to / 2) * tasks.size());
  }",Computes the timeout according to the transaction size .,distributed/src/main/java/com/orientechnologies/orient/server/distributed/impl/task/OAbstract2pcTask.java,"[{'Syntax': 'OGlobalConfiguration.DISTRIBUTED_CRUD_TASK_SYNCH_TIMEOUT.getValueAsLong()', 'FunctionName': 'getValueAsLong', 'ArgsCount': 0, 'MethodBody': 'public long getValueAsLong() {\n    final Object v = value != null && value != nullValue ? value : defValue;\n    return v instanceof Number\n        ? ((Number) v).longValue()\n        : OFileUtils.getSizeAsNumber(v.toString());\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/config/OGlobalConfiguration.java'}, {'Syntax': 'tasks.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}]"
6621cd94cda9bd4817b1110c,akquinet/chameRIA,"@Validate
    public  void start() {
        QApplication.invokeLater(new Runnable() {
            public void run() {
                configureApplication();
                m_logger.info(""Creating a web ui..."");
                synchronized (WebViewFactory.this) {
                    m_browser = new WebWindow(m_url, WebViewFactory.this);

                    configureWindow(m_browser);
                    m_browser.show();
                }
                m_logger.info(""Web UI created."");
            }
        });
    }",Starts the browser and loads the set url in the web view .,chameria-webview-factory/src/main/java/de/akquinet/chameria/webview/WebViewFactory.java,"[{'Syntax': 'configureApplication()', 'FunctionName': 'configureApplication', 'ArgsCount': 0, 'MethodBody': 'private static void configureApplication() {\n        // Try to load the file.\n        File file = new File(""chameria.props"");\n        if (file.exists()) {\n            Properties props = new Properties();\n            InputStream is = null;\n            try {\n                is = new FileInputStream(file);\n                props.load(is);\n\n                String n = props.getProperty(""application.name"");\n                if (n != null) {\n                    QApplication.setApplicationName(n);\n                } else {\n                    QApplication.setApplicationName(""akquinet ChameRIA"");\n                }\n\n                n = props.getProperty(""application.version"");\n                if (n != null) {\n                    QApplication.setApplicationVersion(n);\n                }\n\n                n = props.getProperty(""application.icon"");\n                if (n != null) {\n                    QIcon icon = new QIcon(n);\n                    QApplication.setWindowIcon(icon);\n                }\n\n            } catch (Exception e) {\n                System.err.println(""Cannot read the application configuration ""\n                        + e.getMessage());\n                e.printStackTrace();\n            } finally {\n                if (is != null) {\n                    try {\n                        is.close();\n                    } catch (IOException e) {\n                        // Ignored\n                    }\n                }\n            }\n        }\n\n        QApplication.setOrganizationName(""akquinet A.G."");\n    }', 'FileName': '/akquinet/chameRIA/chameria-launcher/src/main/java/de/akquinet/chameria/launcher/Launcher.java'}, {'Syntax': 'configureWindow(m_browser)', 'FunctionName': 'configureWindow', 'ArgsCount': 1, 'MethodBody': 'private void configureWindow(WebWindow web) {\n\n        if (m_fullscreen) {\n            // We need to store the previous width and height values\n            m_width = web.width();\n            m_height = web.height();\n            web.showFullScreen();\n        } else {\n            web.showNormal();\n            if (! m_resizable) {\n               web.setFixedSize(new QSize(m_width, m_height));\n            } else {\n               web.setBaseSize(new QSize(m_width, m_height));\n            }\n            web.resize(m_width, m_height);\n        }\n\n        if (! m_bar) {\n            web.menuBar().setVisible(false);\n        } else {\n            web.menuBar().setVisible(true);\n            if (m_icon != null) {\n                QIcon icon = new QIcon(m_icon);\n                web.setWindowIcon(icon);\n            }\n            web.setWindowTitle(m_appName);\n        }\n\n        if (! m_contextMenu) {\n            web.setContextMenuPolicy(ContextMenuPolicy.PreventContextMenu);\n        } else {\n            web.setContextMenuPolicy(ContextMenuPolicy.DefaultContextMenu);\n        }\n    }', 'FileName': '/akquinet/chameRIA/chameria-webview-factory/src/main/java/de/akquinet/chameria/webview/WebViewFactory.java'}]"
6621cd94cda9bd4817b1110d,rupertlssmith/lojix,"public static void handleErrors(Throwable exception, ActionErrors errors)
    {
        // Log the error.
        log.log(Level.SEVERE, exception.getMessage(), exception);

        if (exception.getCause() == null)
        {
            log.fine(""Exception.getCause() is null"");
        }

        // Unwrap the exception if it is a WrappedStrutsServletException, which is a place holder for returning
        // other throwables from struts actions.
        // See BaseAction and WrappedStrutsServletException for more information.
        if ((exception instanceof WrappedStrutsServletException) && (exception.getCause() != null))
        {
            exception = exception.getCause();
            log.fine(""Unwrapped WrappedStrutsServletException"");
        }

        // Create an error called 'exception' in the Struts errors for debugging purposes
        // Debugging code can print this piece of html containing the exception stack trace at the bottom
        // of the page for convenience.
        Writer stackTrace = new StringWriter();

        exception.printStackTrace(new PrintWriter(new HTMLFilter(stackTrace)));
        errors.add(""exception"", new ActionError(""error.general"", stackTrace));

        // Check if the exception is a user readable exception
        if (exception instanceof UserReadableError)
        {
            UserReadableError userError = (UserReadableError) exception;

            // Check that it contains a user readable message
            if (userError.isUserReadable())
            {
                // Check if there is an error message key to use
                if (userError.getUserMessageKey() != null)
                {
                    errors.add(""generalerror"",
                        new ActionError(userError.getUserMessageKey(), userError.getUserMessageKey()));
                }

                // There is no error message key to use so default to error.general and pass the error message as an
                // argument so that it will be displayed
                else
                {
                    errors.add(""generalerror"", new ActionError(""error.general"", userError.getUserMessage()));
                }

                return;
            }
        }

        // Not a user reable exception so print a standard error message
        errors.add(""generalerror"", new ActionError(""error.internalerror""));
    }",Converts an exception into struts action errors . The exception stack trace is stored under the exception message key . The message resource error . internalerror is stored under the message key generalerror . The stack trace is pretty printed in HTML .,base/struts-tools/src/main/com/thesett/common/webapp/actions/ErrorHandler.java,"[{'Syntax': 'exception.getCause()', 'FunctionName': 'getCause', 'ArgsCount': 0, 'MethodBody': 'public Throwable getCause()\n    {\n        return cause;\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/actions/WrappedStrutsServletException.java'}, {'Syntax': 'exception.getCause()', 'FunctionName': 'getCause', 'ArgsCount': 0, 'MethodBody': 'public Throwable getCause()\n    {\n        return cause;\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/actions/WrappedStrutsServletException.java'}, {'Syntax': 'exception.getCause()', 'FunctionName': 'getCause', 'ArgsCount': 0, 'MethodBody': 'public Throwable getCause()\n    {\n        return cause;\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/actions/WrappedStrutsServletException.java'}, {'Syntax': 'errors.add(""exception"", new ActionError(""error.general"", stackTrace))', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': 'public void add(int index, T element)\n    {\n        super.add(index, element);\n        sizeOf += element.sizeof();\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/SizeableLinkedList.java'}, {'Syntax': 'userError.isUserReadable()', 'FunctionName': 'isUserReadable', 'ArgsCount': 0, 'MethodBody': 'boolean isUserReadable();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/error/UserReadableError.java'}, {'Syntax': 'userError.getUserMessageKey()', 'FunctionName': 'getUserMessageKey', 'ArgsCount': 0, 'MethodBody': 'String getUserMessageKey();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/error/UserReadableError.java'}, {'Syntax': 'errors.add(""generalerror"",\n                        new ActionError(userError.getUserMessageKey(), userError.getUserMessageKey()))', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': 'public void add(int index, T element)\n    {\n        super.add(index, element);\n        sizeOf += element.sizeof();\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/SizeableLinkedList.java'}, {'Syntax': 'userError.getUserMessageKey()', 'FunctionName': 'getUserMessageKey', 'ArgsCount': 0, 'MethodBody': 'String getUserMessageKey();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/error/UserReadableError.java'}, {'Syntax': 'userError.getUserMessageKey()', 'FunctionName': 'getUserMessageKey', 'ArgsCount': 0, 'MethodBody': 'String getUserMessageKey();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/error/UserReadableError.java'}, {'Syntax': 'errors.add(""generalerror"", new ActionError(""error.general"", userError.getUserMessage()))', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': 'public void add(int index, T element)\n    {\n        super.add(index, element);\n        sizeOf += element.sizeof();\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/SizeableLinkedList.java'}, {'Syntax': 'userError.getUserMessage()', 'FunctionName': 'getUserMessage', 'ArgsCount': 0, 'MethodBody': 'String getUserMessage();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/error/UserReadableError.java'}, {'Syntax': 'errors.add(""generalerror"", new ActionError(""error.internalerror""))', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': 'public void add(int index, T element)\n    {\n        super.add(index, element);\n        sizeOf += element.sizeof();\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/SizeableLinkedList.java'}]"
6621cd94cda9bd4817b1110e,ReactiveX/RxJava,"public static long add(AtomicLong requested, long n) {
        for (;;) {
            long r = requested.get();
            if (r == Long.MAX_VALUE) {
                return Long.MAX_VALUE;
            }
            long u = addCap(r, n);
            if (requested.compareAndSet(r, u)) {
                return r;
            }
        }
    }",Atomically adds the positive value n to the requested value in the AtomicLong and caps the result at Long . MAX_VALUE and returns the previous value .,src/main/java/io/reactivex/internal/util/BackpressureHelper.java,"[{'Syntax': 'requested.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': '@Override\n                    public Publisher<Long> get() throws Exception {\n                        return Flowable.fromIterable(iterate(elements));\n                    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/DeferTckTest.java'}, {'Syntax': 'addCap(r, n)', 'FunctionName': 'addCap', 'ArgsCount': 2, 'MethodBody': 'public static long addCap(long a, long b) {\n        long u = a + b;\n        if (u < 0L) {\n            return Long.MAX_VALUE;\n        }\n        return u;\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/util/BackpressureHelper.java'}, {'Syntax': 'requested.compareAndSet(r, u)', 'FunctionName': 'compareAndSet', 'ArgsCount': 2, 'MethodBody': 'boolean compareAndSet(Object expected, Object next);', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/subjects/ReplaySubject.java'}]"
6621cd94cda9bd4817b1110f,ngageoint/geopackage-android,"public CursorResult wrapQuery(String sql,
                                  String[] selectionArgs) {
        return new CursorResult(rawQuery(sql, selectionArgs));
    }",Perform the query and wrap as a result,geopackage-sdk/src/main/java/mil/nga/geopackage/db/GeoPackageConnection.java,"[{'Syntax': 'rawQuery(sql, selectionArgs)', 'FunctionName': 'rawQuery', 'ArgsCount': 2, 'MethodBody': '@Override\n    public Cursor rawQuery(String sql, String[] args) {\n        return database.rawQuery(sql, args);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/GeoPackageImpl.java'}]"
6621cd94cda9bd4817b11110,streamsets/datacollector,"private void incrementSourceOffset(HttpSourceOffset sourceOffset, int increment) {
    if (conf.pagination.mode == PaginationMode.BY_PAGE) {
      sourceOffset.incrementStartAt(1);
    } else if (conf.pagination.mode == PaginationMode.BY_OFFSET) {
      sourceOffset.incrementStartAt(increment);
    }
  }",Increments the current source offset s startAt portion by the specified amount . This is the number of records parsed when paging BY_OFFSET or 1 if incrementing BY_PAGE .,basic-lib/src/main/java/com/streamsets/pipeline/stage/origin/http/HttpClientSource.java,[]
6621cd94cda9bd4817b11111,spring-projects/spring-security,"public String encode(CharSequence rawPassword) {
		String salt = PREFIX + this.saltGenerator.generateKey() + SUFFIX;
		return digest(salt, rawPassword);
	}",Encodes the rawPass using a MessageDigest . If a salt is specified it will be merged with the password before encoding .,crypto/src/main/java/org/springframework/security/crypto/password/MessageDigestPasswordEncoder.java,"[{'Syntax': 'this.saltGenerator.generateKey()', 'FunctionName': 'generateKey', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic byte[] generateKey() {\n\t\t\tbyte[] bytes = new byte[this.keyLength];\n\t\t\tthis.random.nextBytes(bytes);\n\t\t\treturn bytes;\n\t\t}', 'FileName': '/spring-projects/spring-security/crypto/src/test/java/org/springframework/security/crypto/encrypt/BouncyCastleAesBytesEncryptorEquivalencyTests.java'}, {'Syntax': 'digest(salt, rawPassword)', 'FunctionName': 'digest', 'ArgsCount': 2, 'MethodBody': 'private String digest(CharSequence rawPassword, byte[] salt) {\n\t\tbyte[] derived = SCrypt.generate(Utf8.encode(rawPassword), salt, this.cpuCost, this.memoryCost,\n\t\t\t\tthis.parallelization, this.keyLength);\n\t\tString params = Long.toString(\n\t\t\t\t((int) (Math.log(this.cpuCost) / Math.log(2)) << 16L) | this.memoryCost << 8 | this.parallelization,\n\t\t\t\t16);\n\t\tStringBuilder sb = new StringBuilder((salt.length + derived.length) * 2);\n\t\tsb.append(""$"").append(params).append(\'$\');\n\t\tsb.append(encodePart(salt)).append(\'$\');\n\t\tsb.append(encodePart(derived));\n\t\treturn sb.toString();\n\t}', 'FileName': '/spring-projects/spring-security/crypto/src/main/java/org/springframework/security/crypto/scrypt/SCryptPasswordEncoder.java'}]"
6621cd94cda9bd4817b11112,fracpete/ptstemmer-weka-package,"public static void main(String[] args) {
    try {
      Stemming.useStemmer(new PTStemmer(), args);
    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }",Runs the stemmer with the given options .,src/main/java/weka/core/stemmers/PTStemmer.java,[]
6621cd94cda9bd4817b11113,mortezaadi/GoodbyDao,"@Override
  public void updateOne(E object, String... properties) {
    if (object.getId() == null) {
      throw new RuntimeException(""Not a Persisted entity"");
    }
    if (properties == null || properties.length == 0) {
      entityManager.merge(object);
      return;
    }

    // for performance reason its better to mix getting fields, their values
    // and making query all in one loop
    // in one iteration
    StringBuilder sb = new StringBuilder();
    sb.append(""Update "" + clazz.getName() + "" SET "");

    // cache of fieldName --> value
    Map<String, Object> cache = new HashMap<String, Object>();

    for (String prop : properties) {
      try {
        Field field = object.getClass().getDeclaredField(prop);
        field.setAccessible(true);
        Object value = field.get(object);
        if (value instanceof Collection) {
          // value = new LinkedList<>((Collection< ? extends Object>) value);
          throw new RuntimeException(""Collection property is not suppotred."");
        }
        cache.put(prop, value);

        // ignore first comma
        if (cache.size() > 1) {
          sb.append("" ,"");
        }
        sb.append(prop);
        sb.append("" = :"");
        sb.append(prop);

      } catch (Exception e) { // TODO: use fine grain exceptions
                              // FIX: NEXT RELEASE I hope :)
        throw new RuntimeException(e);
      }
    }

    // this means nothing will be updated so hitting db is unnecessary
    if (cache.size() == 0)
      return;

    sb.append("" WHERE id = "" + object.getId());
    Query query = entityManager.createQuery(sb.toString());
    for (Entry<String, Object> entry : cache.entrySet()) {
      query.setParameter(entry.getKey(), entry.getValue());
    }
    query.executeUpdate();
  }",Only update specified properties of the Object,GoodbyDao/src/main/java/ir/cafebabe/dao/impl/AbstractDao.java,[]
6621cd94cda9bd4817b11114,rackerlabs/blueflood,"void clearFromRunning(SlotKey slotKey) {
        synchronized (runningSlots) {
            runningSlots.remove(slotKey);
            UpdateStamp stamp = shardStateManager.getUpdateStamp(slotKey);
            shardStateManager.setAllCoarserSlotsDirtyForSlot(slotKey);

            //When state gets set to ""X"", before it got persisted, it might get scheduled for rollup
            //again, if we get delayed metrics. To prevent this we temporarily set last rollup time with current
            //time. This value wont get persisted.
            long currentTimeInMillis = clock.now().getMillis();
            stamp.setLastRollupTimestamp(currentTimeInMillis);
            log.debug(""SlotKey {} is marked in memory with last rollup time as {}"", slotKey, currentTimeInMillis);

            // Update the stamp to Rolled state if and only if the current state
            // is running. If the current state is active, it means we received
            // a delayed put which toggled the status to Active.
            if (stamp.getState() == UpdateStamp.State.Running) {
                stamp.setState(UpdateStamp.State.Rolled);
                // Note: Rollup state will be updated to the last ACTIVE
                // timestamp which caused rollup process to kick in.
                stamp.setDirty(true);
            }
        }
    }",Remove the given slot from the running group after it has been successfully re - rolled .,blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/ScheduleContext.java,"[{'Syntax': 'runningSlots.remove(slotKey)', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': 'protected void remove(int shard) {\n        if (!contains(shard))\n            return;\n        this.shards.remove(shard);\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/ShardStateManager.java'}, {'Syntax': 'shardStateManager.getUpdateStamp(slotKey)', 'FunctionName': 'getUpdateStamp', 'ArgsCount': 1, 'MethodBody': 'public UpdateStamp getUpdateStamp(SlotKey slotKey) {\n        SlotStateManager slotStateManager = this.getSlotStateManager(slotKey.getShard(), slotKey.getGranularity());\n        UpdateStamp stamp = slotStateManager.slotToUpdateStampMap.get(slotKey.getSlot());\n        return stamp;\n\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/ShardStateManager.java'}, {'Syntax': 'shardStateManager.setAllCoarserSlotsDirtyForSlot(slotKey)', 'FunctionName': 'setAllCoarserSlotsDirtyForSlot', 'ArgsCount': 1, 'MethodBody': 'public void setAllCoarserSlotsDirtyForSlot(SlotKey slotKey) {\n        boolean done = false;\n        Granularity coarserGran = slotKey.getGranularity();\n        int coarserSlot = slotKey.getSlot();\n\n        while (!done) {\n            try {\n                coarserGran = coarserGran.coarser();\n                coarserSlot = coarserGran.slotFromFinerSlot(coarserSlot);\n                ConcurrentMap<Integer, UpdateStamp> updateStampsBySlotMap = getSlotStateManager(slotKey.getShard(), coarserGran).slotToUpdateStampMap;\n                UpdateStamp coarseSlotStamp = updateStampsBySlotMap.get(coarserSlot);\n\n                if (coarseSlotStamp == null) {\n                    log.debug(""No stamp for coarser slot: {}; supplied slot: {}"",\n                            SlotKey.of(coarserGran, coarserSlot, slotKey.getShard()),\n                            slotKey);\n                    updateStampsBySlotMap.putIfAbsent(coarserSlot,\n                            new UpdateStamp(serverTimeMillisecondTicker.read(), UpdateStamp.State.Active, true));\n                    continue;\n                }\n\n                UpdateStamp.State coarseSlotState = coarseSlotStamp.getState();\n                if (coarseSlotState != UpdateStamp.State.Active) {\n                    parentBeforeChild.mark();\n                    log.debug(""Coarser slot not in active state when finer slot {} just got rolled up. Marking coarser slot {} dirty."",\n                            slotKey, SlotKey.of(coarserGran, coarserSlot, slotKey.getShard()));\n                    coarseSlotStamp.setState(UpdateStamp.State.Active);\n                    coarseSlotStamp.setDirty(true);\n                    coarseSlotStamp.setTimestamp(serverTimeMillisecondTicker.read());\n                }\n            } catch (GranularityException ex) {\n                done = true;\n            }\n        }\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/ShardStateManager.java'}, {'Syntax': 'clock.now()', 'FunctionName': 'now', 'ArgsCount': 0, 'MethodBody': '@Override\n        public Instant now() {\n            return new Instant(0);\n        }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/test/java/com/rackspacecloud/blueflood/rollup/GranularityTest.java'}, {'Syntax': 'stamp.setLastRollupTimestamp(currentTimeInMillis)', 'FunctionName': 'setLastRollupTimestamp', 'ArgsCount': 1, 'MethodBody': 'public void setLastRollupTimestamp(long lastRollupTimestamp) { this.lastRollupTimestamp = lastRollupTimestamp; }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/UpdateStamp.java'}, {'Syntax': 'stamp.getState()', 'FunctionName': 'getState', 'ArgsCount': 0, 'MethodBody': 'public State getState() { return state; }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/UpdateStamp.java'}, {'Syntax': 'stamp.setState(UpdateStamp.State.Rolled)', 'FunctionName': 'setState', 'ArgsCount': 1, 'MethodBody': 'public void setState(State state) { this.state = state; }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/UpdateStamp.java'}, {'Syntax': 'stamp.setDirty(true)', 'FunctionName': 'setDirty', 'ArgsCount': 1, 'MethodBody': 'public void setDirty(boolean b) { dirty = b; }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/UpdateStamp.java'}]"
6621cd94cda9bd4817b11115,oaqa/baseqa,"public boolean getIsObjUri() {
    if (Triple_Type.featOkTst && ((Triple_Type)jcasType).casFeat_isObjUri == null)
      jcasType.jcas.throwFeatMissing(""isObjUri"", ""edu.cmu.lti.oaqa.type.kb.Triple"");
    return jcasType.ll_cas.ll_getBooleanValue(addr, ((Triple_Type)jcasType).casFeatCode_isObjUri);}",getter for isObjUri - gets Boolean flag - true of object field is a URI false otherwise .,src/main/java/edu/cmu/lti/oaqa/type/kb/Triple.java,[]
6621cd94cda9bd4817b11116,RestComm/jain-slee,"private Permissions getPermissions(Permissions permissions, final CodeSource cs, Principal[] principals) {

		List<PolicyHolderEntry> entries = this.currentPolicy.get().policyHolderEntries;

		for (PolicyHolderEntry phe : entries) {

			// general
			selectPermissions(permissions, cs, principals, phe);

			// FIXME: certs?

		}

		return permissions;
	}",generic for all calls,container/components/components/src/main/java/org/mobicents/slee/container/component/security/PolicyFileImpl.java,"[{'Syntax': 'selectPermissions(permissions, cs, principals, phe)', 'FunctionName': 'selectPermissions', 'ArgsCount': 4, 'MethodBody': 'private void selectPermissions(Permissions permissions, final CodeSource cs, Principal[] principals, final PolicyHolderEntry phe) {\n\n\t\t// FIXME: this always gets into if... even if debug is not on...\n\t\t// if (logger.isDebugEnabled() ) {\n\t\t//\t\n\t\t//if (show)\n\t\t//\tlogger.info(""Select permissions. \\nFor: "" + cs + "", Entry\\n CS: "" + phe.getCodeSource() + ""\\n"" + phe.getCodeSource().implies(cs));\n\t\t// }\n\n\t\tBoolean implies = phe.getCodeSource().implies(cs);\n\t\t// Boolean implies = (Boolean) AccessController.doPrivileged(new\n\t\t// ImpliesAction(cs,phe));\n\t\t// System.err.println(""I[""+implies+""]  For: "" + cs + "", Entry CS: "" +\n\t\t// phe.getCodeSource());\n\t\tboolean addPermissions = false;\n\t\tif (!implies.booleanValue()) {\n\n\t\t\treturn;\n\t\t} else {\n\n\t\t\tfinal Principal[] pdp = principals;\n\t\t\tList entryPs = phe.getPrincipals();\n\t\t\tList domainPs = new LinkedList();\n\t\t\t// if (pdp != null && pdp.length != 0) {\n\t\t\t// PolicyParser.PrincipalEntry pe = null;\n\t\t\t// for (int j = 0; j < pdp.length; j++) {\n\t\t\t// pe = new PolicyParser.PrincipalEntry(pdp[j].getClass().getName(),\n\t\t\t// pdp[j].getName());\n\t\t\t// domainPs.add(pe);\n\t\t\t// }\n\t\t\t// }\n\n\t\t\tif (entryPs == null || entryPs.isEmpty()) {\n\n\t\t\t\taddPermissions = true;\n\t\t\t} else if (!domainPs.isEmpty()) {\n\n\t\t\t\t// FIXME: what goes here?\n\t\t\t}\n\n\t\t\t// implies succeeded - grant the permissions\n\t\t\tif (!addPermissions) {\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tList<Permission> permissionsList = phe.getPermissions();\n\t\t\t\t//if(show)\n\t\t\t\t//\tSystem.err.println(""PERMS: ""+permissionsList.size());\n\t\t\t\tfor (int j = 0; j < permissionsList.size(); j++) {\n\t\t\t\t\t\n\t\t\t\t\tPermission p = permissionsList.get(j);\n\t\t\t\t//\tif(show)\n\t\t\t\t//\t\tSystem.err.println(""PERMSx: ""+p);\n\t\t\t\t\tpermissions.add(p);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/security/PolicyFileImpl.java'}]"
6621cd94cda9bd4817b11117,Unidata/thredds,"public String getFileType() {
    String type = ""Unknown"";
    switch (dmLabel.kftype) {

      case MFSN:
        type = ""Sounding"";
        break;

      case MFSF:
        type = ""Surface"";
        break;

      default:
    }
    if (!subType.equals("""")) {
      type = type + "" ("" + subType + "")"";
    }
    return type;
  }",Get the type for this file,visad/src/main/java/ucar/nc2/iosp/gempak/AbstractGempakStationFileReader.java,[]
6621cd94cda9bd4817b11118,jboss/jboss-common-core,"public static Object instantiate(Class expected, String property, String defaultClassName)
   {
      String className = getProperty(property, defaultClassName);
      Class clazz = null;
      try
      {
         clazz = loadClass(className);
      }
      catch (ClassNotFoundException e)
      {
         throw new NestedRuntimeException(""Cannot load class "" + className, e);
      }
      Object result = null;
      try
      {
         result = clazz.newInstance();
      }
      catch (InstantiationException e)
      {
         throw new NestedRuntimeException(""Error instantiating "" + className, e);
      }
      catch (IllegalAccessException e)
      {
         throw new NestedRuntimeException(""Error instantiating "" + className, e);
      }
      if (expected.isAssignableFrom(clazz) == false)
         throw new NestedRuntimeException(""Class "" + className + "" from classloader "" + clazz.getClassLoader() +
            "" is not of the expected class "" + expected + "" loaded from "" + expected.getClassLoader());
      return result;
   }",Instantiate a java class object,src/main/java/org/jboss/util/Classes.java,"[{'Syntax': 'getProperty(property, defaultClassName)', 'FunctionName': 'getProperty', 'ArgsCount': 2, 'MethodBody': 'public String getProperty(final String name, final String defaultValue)\n         {\n            return System.getProperty(name, defaultValue);\n         }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/SysPropertyActions.java'}, {'Syntax': 'loadClass(className)', 'FunctionName': 'loadClass', 'ArgsCount': 1, 'MethodBody': 'public static Class loadClass(String className) throws ClassNotFoundException\n   {\n      return loadClass(className, Thread.currentThread().getContextClassLoader());\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Classes.java'}, {'Syntax': 'clazz.getClassLoader()', 'FunctionName': 'getClassLoader', 'ArgsCount': 0, 'MethodBody': 'public ClassLoader getClassLoader()\n      {\n         return cl;\n      }', 'FileName': '/jboss/jboss-common-core/src/test/java/org/jboss/test/util/test/threadpool/BasicThreadPoolTCCLTestCase.java'}, {'Syntax': 'expected.getClassLoader()', 'FunctionName': 'getClassLoader', 'ArgsCount': 0, 'MethodBody': 'public ClassLoader getClassLoader()\n      {\n         return cl;\n      }', 'FileName': '/jboss/jboss-common-core/src/test/java/org/jboss/test/util/test/threadpool/BasicThreadPoolTCCLTestCase.java'}]"
6621cd94cda9bd4817b11119,tony19/logback-android,"public void end(InterpretationContext ec, String name) {
    if (inError) {
      return;
    }

    if (appender instanceof LifeCycle) {
      ((LifeCycle) appender).start();
    }

    Object o = ec.peekObject();

    if (o != appender) {
      addWarn(""The object at the of the stack is not the appender named [""
          + appender.getName() + ""] pushed earlier."");
    } else {
      ec.popObject();
    }
  }",Once the children elements are also parsed now is the time to activate the appender options .,logback-android/src/main/java/ch/qos/logback/core/joran/action/AppenderAction.java,"[{'Syntax': '((LifeCycle) appender).start()', 'FunctionName': 'start', 'ArgsCount': 0, 'MethodBody': 'public void start() {\n    started = true;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/MockLifeCycleComponent.java'}, {'Syntax': 'ec.peekObject()', 'FunctionName': 'peekObject', 'ArgsCount': 0, 'MethodBody': 'public Object peekObject() {\n    return objectStack.peek();\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/joran/spi/InterpretationContext.java'}, {'Syntax': 'addWarn(""The object at the of the stack is not the appender named [""\n          + appender.getName() + ""] pushed earlier."")', 'FunctionName': 'addWarn', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void addWarn(String msg) {\n    warn.add(msg);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/ssl/mock/MockContextAware.java'}, {'Syntax': 'appender.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n    return name;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/joran/replay/Fruit.java'}, {'Syntax': 'ec.popObject()', 'FunctionName': 'popObject', 'ArgsCount': 0, 'MethodBody': 'public Object popObject() {\n    return objectStack.pop();\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/joran/spi/InterpretationContext.java'}]"
6621cd94cda9bd4817b1111a,lexicalscope/jewelcli,"public static <O> Cli<O> createCliUsingInstance(final O options) throws InvalidOptionSpecificationException
    {
        return new CliInstanceImpl<O>(options);
    }",Construct a Cli from an annotated class,jewelcli/src/main/java/com/lexicalscope/jewel/cli/CliFactory.java,[]
6621cd94cda9bd4817b1111b,1gravity/Android-RTEditor,"public int getEntity(String name) {
        // System.err.println(""%% Looking up entity "" + name);
        Integer ch = (Integer) theEntities.get(name);
        if (ch == null)
            return 0;
        return ch.intValue();
    }",Get an entity value by name .,RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/Schema.java,"[{'Syntax': 'theEntities.get(name)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'RTTypeface get(String fontName) {\n            for (RTTypeface typeface : this) {\n                if (typeface.getName().equals(fontName)) {\n                    return typeface;\n                }\n            }\n            return null;\n        }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/fonts/FontManager.java'}]"
6621cd94cda9bd4817b1111c,jboss/jboss-common-core,"public static PropertyEditor findEditor(final String typeName)
      throws ClassNotFoundException
   {
      // see if it is a primitive type first
      Class<?> type = Classes.getPrimitiveTypeForName(typeName);
      if (type == null)
      {
         // nope try look up
         ClassLoader loader = Thread.currentThread().getContextClassLoader();
         type = loader.loadClass(typeName);
      }

      return PropertyEditorManager.findEditor(type);
   }",Locate a value editor for a given target type .,src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java,"[{'Syntax': 'Classes.getPrimitiveTypeForName(typeName)', 'FunctionName': 'getPrimitiveTypeForName', 'ArgsCount': 1, 'MethodBody': 'public static Class getPrimitiveTypeForName(final String name)\n   {\n      return (Class) PRIMITIVE_NAME_TYPE_MAP.get(name);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Classes.java'}, {'Syntax': 'Thread.currentThread().getContextClassLoader()', 'FunctionName': 'getContextClassLoader', 'ArgsCount': 0, 'MethodBody': 'public ClassLoader getContextClassLoader()\n   {\n      return getContextClassLoader(Thread.currentThread());\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/loading/ContextClassLoader.java'}, {'Syntax': 'loader.loadClass(typeName)', 'FunctionName': 'loadClass', 'ArgsCount': 1, 'MethodBody': 'public static Class loadClass(String className) throws ClassNotFoundException\n   {\n      return loadClass(className, Thread.currentThread().getContextClassLoader());\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Classes.java'}, {'Syntax': 'PropertyEditorManager.findEditor(type)', 'FunctionName': 'findEditor', 'ArgsCount': 1, 'MethodBody': 'public static PropertyEditor findEditor(final Class<?> type)\n   {\n      return PropertyEditorManager.findEditor(type);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java'}]"
6621cd94cda9bd4817b1111d,Unidata/thredds,"public Range shiftOrigin(int origin) throws InvalidRangeException {
    if (this == VLEN)
      return VLEN;

    int first = first() - origin;
    int last = last() - origin;
    return new Range(name, first, last, stride);
  }",Create a new Range shifting this range by a constant factor .,cdm/src/main/java/ucar/ma2/Range.java,[]
6621cd94cda9bd4817b1111e,Unidata/thredds,"Index section(List<Range> ranges) throws InvalidRangeException {

    // check ranges are valid
    if (ranges.size() != rank)
      throw new InvalidRangeException(""Bad ranges [] length"");
    for (int ii = 0; ii < rank; ii++) {
      Range r = ranges.get(ii);
      if (r == null)
        continue;
      if (r == Range.VLEN)
        continue;
      if ((r.first() < 0) || (r.first() >= shape[ii]))
        throw new InvalidRangeException(""Bad range starting value at index "" + ii + "" == "" + r.first());
      if ((r.last() < 0) || (r.last() >= shape[ii]))
        throw new InvalidRangeException(""Bad range ending value at index "" + ii + "" == "" + r.last());
    }

    int reducedRank = rank;
    for (Range r : ranges) {
      if ((r != null) && (r.length() == 1))
        reducedRank--;
    }
    Index newindex = Index.factory(reducedRank);
    newindex.offset = offset;

    // calc shape, size, and index transformations
    // calc strides into original (backing) store
    int newDim = 0;
    for (int ii = 0; ii < rank; ii++) {
      Range r = ranges.get(ii);
      if (r == null) {          // null range means use the whole original dimension
        newindex.shape[newDim] = shape[ii];
        newindex.stride[newDim] = stride[ii];
        //if (name != null) newindex.name[newDim] = name[ii];
        newDim++;
      } else if (r.length() != 1) {
        newindex.shape[newDim] = r.length();
        newindex.stride[newDim] = stride[ii] * r.stride();
        newindex.offset += stride[ii] * r.first();
        //if (name != null) newindex.name[newDim] = name[ii];
        newDim++;
      } else {
        newindex.offset += stride[ii] * r.first();   // constant due to rank reduction
      }
    }
    newindex.size = computeSize(newindex.shape);
    newindex.fastIterator = fastIterator && (newindex.size == size); // if equal, then its not a real subset, so can still use fastIterator
    newindex.precalc(); // any subclass-specific optimizations
    return newindex;
  }",create a new Index based on a subsection of this one with rank reduction if dimension length == 1 .,cdm/src/main/java/ucar/ma2/Index.java,[]
6621cd95cda9bd4817b1111f,Unidata/thredds,"public final String getLevelDescription(GridRecord gr) {
    if (cust != null) {
      String result = cust.getLevelDescription( gr.getLevelType1());
      if (result != null) return result;
    }

    // TODO:  flesh this out
    return getLevelName(gr);
  }",gets the LevelDescription .,visad/src/main/java/ucar/nc2/iosp/mcidas/McIDASLookup.java,[]
6621cd95cda9bd4817b11120,oblac/jodd,"public T cc(final EmailAddress... ccs) {
		this.cc = ArraysUtil.join(this.cc, valueOrEmptyArray(ccs));
		return _this();
	}",Appends CC addresses .,jodd-mail/src/main/java/jodd/mail/CommonEmail.java,"[{'Syntax': '_this()', 'FunctionName': '_this', 'ArgsCount': 0, 'MethodBody': '@SuppressWarnings(""unchecked"")\n\tprotected T _this() {\n\t\treturn (T) this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}]"
6621cd95cda9bd4817b11121,jkuhnert/ognl,"public static Method getAppropriateMethod(OgnlContext context, Object source, Object target, String propertyName,
                                              String methodName, List methods, Object[] args, Object[] actualArgs)
    {
        Method result = null;

        if (methods != null)
        {
            Class typeClass = target != null ? target.getClass() : null;
            if (typeClass == null && source != null && Class.class.isInstance(source))
            {
                typeClass = (Class)source;
            }
            Class[] argClasses = getArgClasses(args);

            MatchingMethod mm = findBestMethod(methods, typeClass, methodName, argClasses);
            if (mm != null) {
                result = mm.mMethod;
                Class[] mParameterTypes = mm.mParameterTypes;
                System.arraycopy(args, 0, actualArgs, 0, args.length);

                for (int j = 0; j < mParameterTypes.length; j++)
                {
                    Class type = mParameterTypes[j];

                    if (mm.report.conversionNeeded[j] || (type.isPrimitive() && (actualArgs[j] == null)))
                    {
                        actualArgs[j] = getConvertedType(context, source, result, propertyName, args[j], type);
                    }
                }
            }
        }

        if (result == null)
        {
            result = getConvertedMethodAndArgs(context, target, propertyName, methods, args, actualArgs);
        }

        return result;
    }",Gets the appropriate method to be called for the given target method name and arguments . If successful this method will return the Method within the target that can be called and the converted arguments in actualArgs . If unsuccessful this method will return null and the actualArgs will be empty .,src/main/java/ognl/OgnlRuntime.java,"[{'Syntax': 'getArgClasses(args)', 'FunctionName': 'getArgClasses', 'ArgsCount': 1, 'MethodBody': 'public static Class<?>[] getArgClasses(Object[] args) {\n        if (args == null) return null;\n\n        Class<?>[] argClasses = new Class[args.length];\n        for (int i = 0; i < args.length; i++) {\n            argClasses[i] = getArgClass(args[i]);\n        }\n        return argClasses;\n    }', 'FileName': '/jkuhnert/ognl/src/main/java/ognl/OgnlRuntime.java'}, {'Syntax': 'findBestMethod(methods, typeClass, methodName, argClasses)', 'FunctionName': 'findBestMethod', 'ArgsCount': 4, 'MethodBody': 'private static MatchingMethod findBestMethod(List<Method> methods, Class<?> typeClass, String name, Class<?>[] argClasses) {\n        MatchingMethod mm = null;\n        IllegalArgumentException failure = null;\n        for (Method method : methods) {\n            Class<?>[] mParameterTypes = findParameterTypes(typeClass, method);\n            ArgsCompatbilityReport report = areArgsCompatible(argClasses, mParameterTypes, method);\n            if (report == null)\n                continue;\n\n            String methodName = method.getName();\n            int score = report.score;\n            if (name.equals(methodName)) {\n                // exact match - no additinal score...\n            } else if (name.equalsIgnoreCase(methodName)) {\n                // minimal penalty..\n                score += 200;\n            } else if (methodName.toLowerCase().endsWith(name.toLowerCase())) {\n                // has a prefix...\n                score += 500;\n            } else {\n                // just in case...\n                score += 5000;\n            }\n            if (mm == null || mm.score > score) {\n                mm = new MatchingMethod(method, score, report, mParameterTypes);\n                failure = null;\n            } else if (mm.score == score) {\n                // it happens that we see the same method signature multiple times - for the current class or interfaces ...\n                // check for same signature\n                if (Arrays.equals(mm.mMethod.getParameterTypes(), method.getParameterTypes()) && mm.mMethod.getName().equals(method.getName())) {\n                    // it is the same method. we use the public one...\n                    if (!Modifier.isPublic(mm.mMethod.getDeclaringClass().getModifiers())\n                            && Modifier.isPublic(method.getDeclaringClass().getModifiers())) {\n                        mm = new MatchingMethod(method, score, report, mParameterTypes);\n                        failure = null;\n                    }\n                } else {\n                    // two methods with same score - direct compare to find the better one...\n                    // legacy wins over varargs\n                    if (method.isVarArgs() || mm.mMethod.isVarArgs()) {\n                        if (method.isVarArgs() && !mm.mMethod.isVarArgs()) {\n                            // keep with current\n                        } else if (!method.isVarArgs()) {\n                            // legacy wins...\n                            mm = new MatchingMethod(method, score, report, mParameterTypes);\n                            failure = null;\n                        } else {\n                            // both arguments are varargs...\n                            System.err.println(""Two vararg methods with same score("" + score + ""): \\"""" + mm.mMethod + ""\\"" and \\"""" + method + ""\\"" please report!"");\n                        }\n                    } else {\n                        int scoreCurr = 0;\n                        int scoreOther = 0;\n                        for (int j = 0; j < argClasses.length; j++) {\n                            Class<?> argClass = argClasses[j];\n                            Class<?> mcClass = mm.mParameterTypes[j];\n                            Class<?> moClass = mParameterTypes[j];\n                            if (argClass == null) {    // TODO can we avoid this case?\n                                // we don\'t know the class. use the most generic implementation...\n                                if (mcClass == moClass) {\n                                    // equal args - no winner...\n                                } else if (mcClass.isAssignableFrom(moClass)) {\n                                    scoreOther += 1000;    // current wins...\n                                } else if (moClass.isAssignableFrom(moClass)) {\n                                    scoreCurr += 1000;    // other wins...\n                                } else {\n                                    // both items can\'t be assigned to each other..\n                                    failure = new IllegalArgumentException(""Can\'t decide wich method to use: \\"""" + mm.mMethod + ""\\"" or \\"""" + method + ""\\"""");\n                                }\n                            } else {\n                                // we try to find the more specific implementation\n                                if (mcClass == moClass) {\n                                    // equal args - no winner...\n                                } else if (mcClass == argClass) {\n                                    scoreOther += 100;    // current wins...\n                                } else if (moClass == argClass) {\n                                    scoreCurr += 100;    // other wins...\n                                } else if (mcClass.isAssignableFrom(moClass)) {\n                                    scoreOther += 50;    // current wins...\n                                } else if (moClass.isAssignableFrom(moClass)) {\n                                    scoreCurr += 50;    // other wins...\n                                } else {\n                                    // both items can\'t be assigned to each other..\n                                    // TODO: if this happens we have to put some weight on the inheritance...\n                                    failure = new IllegalArgumentException(""Can\'t decide wich method to use: \\"""" + mm.mMethod + ""\\"" or \\"""" + method + ""\\"""");\n                                }\n                            }\n                        }\n                        if (scoreCurr == scoreOther) {\n                            if (failure == null) {\n                                boolean currentIsAbstract = Modifier.isAbstract(mm.mMethod.getModifiers());\n                                boolean otherIsAbstract = Modifier.isAbstract(method.getModifiers());\n                                if (currentIsAbstract == otherIsAbstract) {\n                                    // Only report as an error when the score is equal and BOTH methods are abstract or BOTH are concrete.\n                                    // If one is abstract and the other concrete then either choice should work for OGNL,\n                                    // so we just keep the current choice and continue (without error output).\n                                    System.err.println(""Two methods with same score("" + score + ""): \\"""" + mm.mMethod + ""\\"" and \\"""" + method + ""\\"" please report!"");\n                                }\n                            }\n                        } else if (scoreCurr > scoreOther) {\n                            // other wins...\n                            mm = new MatchingMethod(method, score, report, mParameterTypes);\n                            failure = null;\n                        } // else current one wins...\n                    }\n                }\n            }\n        }\n        if (failure != null)\n            throw failure;\n        return mm;\n    }', 'FileName': '/jkuhnert/ognl/src/main/java/ognl/OgnlRuntime.java'}, {'Syntax': 'getConvertedType(context, source, result, propertyName, args[j], type)', 'FunctionName': 'getConvertedType', 'ArgsCount': 6, 'MethodBody': 'public static Object getConvertedType(OgnlContext context, Object target, Member member, String propertyName,\n                                          Object value, Class<?> type) {\n        return context.getTypeConverter().convertValue(context, target, member, propertyName, value, type);\n    }', 'FileName': '/jkuhnert/ognl/src/main/java/ognl/OgnlRuntime.java'}, {'Syntax': 'getConvertedMethodAndArgs(context, target, propertyName, methods, args, actualArgs)', 'FunctionName': 'getConvertedMethodAndArgs', 'ArgsCount': 6, 'MethodBody': 'public static Method getConvertedMethodAndArgs(OgnlContext context, Object target, String propertyName,\n                                                   List<Method> methods, Object[] args, Object[] newArgs) {\n        Method result = null;\n        TypeConverter converter = context.getTypeConverter();\n\n        if ((converter != null) && (methods != null)) {\n            for (int i = 0, icount = methods.size(); (result == null) && (i < icount); i++) {\n                Method m = methods.get(i);\n                Class<?>[] parameterTypes = findParameterTypes(target != null ? target.getClass() : null, m);//getParameterTypes(m);\n\n                if (getConvertedTypes(context, target, m, propertyName, parameterTypes, args, newArgs)) {\n                    result = m;\n                }\n            }\n        }\n        return result;\n    }', 'FileName': '/jkuhnert/ognl/src/main/java/ognl/OgnlRuntime.java'}]"
6621cd95cda9bd4817b11122,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setMonatsmiete(WazTyp.Monatsmiete value) {
        this.monatsmiete = value;
    }",Sets the value of the monatsmiete property .,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/WazTyp.java,[]
6621cd95cda9bd4817b11123,basis-technology-corp/tcl-regex-java,"private void subset(RuntimeSubexpression sub, int begin, int end) {
        int n = sub.number;

        assert n > 0;

        while (match.size() < (n + 1)) {
            match.add(null);
        }

        match.set(n, new RegMatch(begin, end));
    }",subset - set any subexpression relevant to a successful subre,src/main/java/com/basistech/tclre/Runtime.java,"[{'Syntax': 'match.set(n, new RegMatch(begin, end))', 'FunctionName': 'set', 'ArgsCount': 2, 'MethodBody': 'void set(int c, int n) {\n        v.nexttype = c;\n        v.nextvalue = n;\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Lex.java'}]"
6621cd95cda9bd4817b11124,Unidata/thredds,"public ThreddsMetadata.Variables getVariables(String vocab) {
    ThreddsMetadata.Variables result = new ThreddsMetadata.Variables(vocab, null, null, null, null);
    if (variables == null) return result;

    for (ThreddsMetadata.Variables vs : variables) {
      if (vs.getVocabulary().equals(vocab))
        result.getVariableList().addAll(vs.getVariableList());
    }
    return result;
  }",get Variables from the specified vocabulary,legacy/src/main/java/thredds/catalog/InvDataset.java,[]
6621cd95cda9bd4817b11125,oblac/jodd,"protected void print(final Level level, final String message, final Throwable throwable) {
		if (!isEnabled(level)) {
			return;
		}

		StringBuilder msg = new StringBuilder()
			.append(slf.getElapsedTime()).append(' ').append('[')
			.append(level).append(']').append(' ')
			.append(getCallerClass()).append(' ').append('-')
			.append(' ').append(message);

		System.out.println(msg.toString());

		if (throwable != null) {
			throwable.printStackTrace(System.out);
		}
	}",Prints error message if level is enabled .,jodd-log/src/main/java/jodd/log/impl/SimpleLogger.java,"[{'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level).append(']').append(' ')\n\t\t\t.append(getCallerClass()).append(' ').append('-')\n\t\t\t.append(' ').append(message)"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level).append(']').append(' ')\n\t\t\t.append(getCallerClass()).append(' ').append('-')\n\t\t\t.append(' ')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level).append(']').append(' ')\n\t\t\t.append(getCallerClass()).append(' ').append('-')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level).append(']').append(' ')\n\t\t\t.append(getCallerClass()).append(' ')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level).append(']').append(' ')\n\t\t\t.append(getCallerClass())"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level).append(']').append(' ')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level).append(']')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')\n\t\t\t.append(level)"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ').append('[')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': ""new StringBuilder()\n\t\t\t.append(slf.getElapsedTime()).append(' ')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'new StringBuilder()\n\t\t\t.append(slf.getElapsedTime())', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'System.out.println(msg.toString())', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public void println(final String string) {\n\t\tSystem.out.println(on(string));\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}, {'Syntax': 'msg.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String toString() {\n\t\tString out = """";\n\t\tif (shortName != null) {\n\t\t\tout += ""-"" + shortName;\n\t\t}\n\t\tif (longName != null) {\n\t\t\tif (!out.isEmpty()) {\n\t\t\t\tout += "" | "";\n\t\t\t}\n\t\t\tout += ""--"" + longName;\n\t\t}\n\t\treturn out;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cli/Option.java'}]"
6621cd95cda9bd4817b11126,Unidata/thredds,"public DataFactory.Result openFeatureDataset(Access access, ucar.nc2.util.CancelTask task) throws IOException {
    Dataset ds = access.getDataset();
    DataFactory.Result result = new Result();
    if (ds.getFeatureType() == null) {
      result.errLog.format(""InvDatasert must specify a FeatureType%n"");
      result.fatalError = true;
      return result;
    }

    return openFeatureDataset(ds.getFeatureType(), access, task, result);
  }",Open a FeatureDataset from an Access object .,cdm/src/main/java/thredds/client/catalog/tools/DataFactory.java,[]
6621cd95cda9bd4817b11127,objectify/objectify,"private boolean matches(Object onPojo, If<?, ?>[] conditions) {
		if (conditions == null)
			return false;
		
		Object value = this.get(onPojo);

		for (If<?, ?> condition: conditions) {
			@SuppressWarnings(""unchecked"")
			If<Object, Object> cond = (If<Object, Object>)condition;

			if (cond.matchesValue(value))
				return true;

			if (cond.matchesPojo(onPojo))
				return true;
		}

		return false;
	}",Tests whether a set of conditions match .,src/main/java/com/googlecode/objectify/impl/FieldProperty.java,"[{'Syntax': 'this.get(onPojo)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public static <T> TypeToken<T> get(Class<T> type) {\n\t\treturn new TypeToken<T>(type) {};\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/TypeToken.java'}, {'Syntax': 'cond.matchesValue(value)', 'FunctionName': 'matchesValue', 'ArgsCount': 1, 'MethodBody': '@Override\r\n\tpublic boolean matchesValue(Boolean value) {\r\n\t\treturn value != null && !value;\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/condition/IfFalse.java'}, {'Syntax': 'cond.matchesPojo(onPojo)', 'FunctionName': 'matchesPojo', 'ArgsCount': 1, 'MethodBody': '@Override\r\n\t\tpublic boolean matchesPojo(IndexedOnOtherField pojo)\r\n\t\t{\r\n\t\t\treturn pojo.indexBar;\r\n\t\t}', 'FileName': '/objectify/objectify/src/test/java/com/googlecode/objectify/test/IndexingPartialTests.java'}]"
6621cd95cda9bd4817b11128,objectify/objectify,"private Objectify ofy() {
		// If we have an expired transaction context, we need a new context
		if (ofy == null || (ofy.getTransaction() != null && !ofy.getTransaction().isActive()))
			ofy = ObjectifyService.ofy();

		return ofy;
	}",Get the current objectify instance associated with this ref,src/main/java/com/googlecode/objectify/impl/ref/LiveRef.java,"[{'Syntax': 'ofy.getTransaction()', 'FunctionName': 'getTransaction', 'ArgsCount': 0, 'MethodBody': 'AsyncTransaction getTransaction();', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/Objectify.java'}, {'Syntax': 'ofy.getTransaction().isActive()', 'FunctionName': 'isActive', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic boolean isActive() {\r\n\t\treturn raw.isActive();\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/cache/CachingAsyncTransaction.java'}, {'Syntax': 'ofy.getTransaction()', 'FunctionName': 'getTransaction', 'ArgsCount': 0, 'MethodBody': 'AsyncTransaction getTransaction();', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/Objectify.java'}, {'Syntax': 'ObjectifyService.ofy()', 'FunctionName': 'ofy', 'ArgsCount': 0, 'MethodBody': 'public Objectify ofy() {\r\n\t\tfinal Deque<Objectify> stack = stacks.get();\r\n\r\n\t\tif (stack.isEmpty())\r\n\t\t\tthrow new IllegalStateException(""You have not started an Objectify context. You are missing "" +\r\n\t\t\t\t\t""a call to run() or you do not have the ObjectifyFilter installed."");\r\n\r\n\t\treturn stack.getLast();\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/ObjectifyFactory.java'}]"
6621cd95cda9bd4817b11129,tiefaces/TieFaces,"public static void changeUpperLevelFinalLength(
			final Map<String, ConfigRangeAttrs> shiftMap,
			final String addedFullName, final int increasedLength) {
		String[] parts = addedFullName.split("":"");
		StringBuilder fname = new StringBuilder();
		for (int i = 0; i < (parts.length - 1); i++) {
			if (i == 0) {
				fname.append(parts[i]);
			} else {
				fname.append("":"").append(parts[i]);
			}
			String sname = fname.toString();
			shiftMap.get(sname).setFinalLength(
					shiftMap.get(sname).getFinalLength() + increasedLength);
		}
	}",Increase upper level final length .,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,"[{'Syntax': 'fname.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final String toString() {\r\n\t\tStringBuilder sb = new StringBuilder();\r\n\t\tsb.append(""{"");\r\n\t\tsb.append(""row = "" + this.row);\r\n\t\tsb.append("","");\r\n\t\tsb.append(""col = "" + this.col);\r\n\t\tsb.append(""}"");\r\n\t\treturn sb.toString();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialCellAddress.java'}, {'Syntax': 'shiftMap.get(sname).setFinalLength(\r\n\t\t\t\t\tshiftMap.get(sname).getFinalLength() + increasedLength)', 'FunctionName': 'setFinalLength', 'ArgsCount': 1, 'MethodBody': 'public final void setFinalLength(final int pfinalLength) {\r\n\t\tthis.finalLength = pfinalLength;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigRangeAttrs.java'}, {'Syntax': 'shiftMap.get(sname)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'shiftMap.get(sname).getFinalLength()', 'FunctionName': 'getFinalLength', 'ArgsCount': 0, 'MethodBody': 'public final int getFinalLength() {\r\n\t\treturn finalLength;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigRangeAttrs.java'}, {'Syntax': 'shiftMap.get(sname)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}]"
6621cd95cda9bd4817b1112a,Unidata/thredds,"private Array makeC(Array s, double a, double b) {
    int nz = (int) s.getSize();
    Index sIndex = s.getIndex();
    if (a == 0) return s;  // per R. Signell, USGS

    ArrayDouble.D1 c = new ArrayDouble.D1(nz);

    double fac1 = 1.0 - b;
    double denom1 = 1.0 / Math.sinh(a);
    double denom2 = 1.0 / (2.0 * Math.tanh(0.5 * a));

    for (int i = 0; i < nz; i++) {
      double sz = s.getDouble(sIndex.set(i));
      double term1 = fac1 * Math.sinh(a * sz) * denom1;
      double term2 = b * (Math.tanh(a * (sz + 0.5))
          * denom2 - 0.5);
      c.set(i, term1 + term2);
    }

    return c;
  }",Make the C array,cdm/src/main/java/ucar/unidata/geoloc/vertical/OceanS.java,[]
6621cd95cda9bd4817b1112b,js-lib-com/tiny-container,"@Override
	public boolean login(String username, String password) {
		try {
			getHttpServletRequest().login(username, password);
		} catch (ServletException e) {
			// exception is thrown if request is already authenticated, servlet container authentication is not enabled or
			// credentials are not accepted
			// consider all these conditions as login fail but record the event to application logger
			log.debug(e);
			return false;
		}
		return true;
	}",SECURITY CONTEXT INTERFACE,src/main/java/js/servlet/TinyContainer.java,"[{'Syntax': 'getHttpServletRequest().login(username, password)', 'FunctionName': 'login', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic boolean login(String username, String password) {\n\t\tlog.trace(""login(String, String)"");\n\t\tParams.notNullOrEmpty(username, ""User name"");\n\t\tParams.notNullOrEmpty(password, ""Password"");\n\n\t\tRequestContext context = container.getInstance(RequestContext.class);\n\n\t\t// container login occurs in two steps:\n\t\t// 1. verify credentials - throw exception if credentials are rejected: request.login\n\t\t// 2. open authenticated session on cookie: request.authenticate\n\n\t\tfinal HttpServletRequest request = container.getInstance(HttpServletRequest.class);\n\t\tfinal HttpServletResponse response = context.getResponse();\n\t\tif (response == null) {\n\t\t\tthrow new BugError(""Attempt to use not initialized HTTP response."");\n\t\t}\n\n\t\ttry {\n\t\t\trequest.login(username, password);\n\t\t\tif (!request.authenticate(response)) {\n\t\t\t\tlog.warn(""Session authentication fail for user |{user_name}|."", username);\n\t\t\t}\n\t\t} catch (ServletException | IOException e) {\n\t\t\t// exception is thrown if request is already authenticated, servlet container authentication is not enabled or\n\t\t\t// credentials are not accepted; consider all these conditions as login fail but record on logger\n\t\t\tlog.warn(""Login fail for user |{user_name}|. Cause: {exception_message}"", username, e.getMessage());\n\t\t\treturn false;\n\t\t}\n\n\t\tlog.info(""Login user |{user_name}|."", username);\n\t\treturn true;\n\t}', 'FileName': '/js-lib-com/tiny-container/tiny-security/src/main/java/com/jslib/container/security/TinySecurity.java'}]"
6621cd95cda9bd4817b1112c,oblac/jodd,"public static String encodePort(final String port, final String encoding) {
		return encodeUriComponent(port, encoding, URIPart.PORT);
	}",Encodes the given URI port with the given encoding .,jodd-core/src/main/java/jodd/net/URLCoder.java,[]
6621cd95cda9bd4817b1112d,rupertlssmith/lojix,"public void reset()
    {
        maxSteps = 0;
        machineToTrain = null;
        inputExamples = new ArrayList<State>();
        inputProperties = new HashSet<String>();
        outputProperties = new HashSet<String>();
        inputPropertiesSet = false;
        outputPropertiesSet = false;
    }",Resets the learning method . This should clear all the examples properties to learn from and for and the input machine to train .,lojix/learning/src/main/com/thesett/aima/learning/AbstractLearningMethod.java,[]
6621cd95cda9bd4817b1112e,rupertlssmith/lojix,"public HeuristicSearchNode<O, T> makeNode(Successor successor) throws SearchNotExhaustiveException
    {
        HeuristicSearchNode<O, T> node = (HeuristicSearchNode<O, T>) super.makeNode(successor);

        // Make sure the new node has a reference to the heuristic evaluator
        node.heuristic = this.heuristic;

        // Compute h for the new node
        node.computeH();

        return node;
    }",Returns a new node based on a successor of this node . This new node will also be a HeuristicSearchNode .,lojix/search/src/main/com/thesett/aima/search/util/informed/HeuristicSearchNode.java,"[{'Syntax': 'super.makeNode(successor)', 'FunctionName': 'makeNode', 'ArgsCount': 1, 'MethodBody': 'public SearchNode<O, T> makeNode(Successor successor) throws SearchNotExhaustiveException\n    {\n        InstrumentedSearchNode<O, T> node = (InstrumentedSearchNode<O, T>) super.makeNode(successor);\n\n        // Keep track of the newly created node for test stats.\n        createdNodes.add(node);\n\n        return node;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/unittests/com/thesett/aima/search/InstrumentedSearchNode.java'}, {'Syntax': 'node.computeH()', 'FunctionName': 'computeH', 'ArgsCount': 0, 'MethodBody': 'protected void computeH()\n    {\n        h = heuristic.computeH(state, this);\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/util/informed/HeuristicSearchNode.java'}]"
6621cd95cda9bd4817b1112f,AndrewReitz/shillelagh,"boolean isTypeOf(TypeMirror typeMirror) {
    if (integerKinds.contains(typeMirror.getKind())) {
      return true;
    }

    if (integerObjects.contains(typeMirror.toString())) {
      return true;
    }

    return false;
  }",Checks if a TypeMirror is mapped to Sqlite Integer Type,shillelagh-processor/src/main/java/shillelagh/internal/SqliteInteger.java,"[{'Syntax': 'typeMirror.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override public String toString() {\n    return columnName + "" "" + getSqlType().toString();\n  }', 'FileName': '/AndrewReitz/shillelagh/shillelagh-processor/src/main/java/shillelagh/internal/TableColumn.java'}]"
6621cd95cda9bd4817b11130,Koekiebox-PTY-LTD/Fluid,"public Flow updateFlow(Flow flowParam)
    {
        if(flowParam != null && this.serviceTicket != null)
        {
            flowParam.setServiceTicket(this.serviceTicket);
        }

        return new Flow(this.postJson(
                flowParam, WS.Path.Flow.Version1.flowUpdate()));
    }",Updates an existing Flow .,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/FlowClient.java,"[{'Syntax': 'flowParam.setServiceTicket(this.serviceTicket)', 'FunctionName': 'setServiceTicket', 'ArgsCount': 1, 'MethodBody': 'public void setServiceTicket(String serviceTicketParam) {\r\n\t\tthis.serviceTicket = serviceTicketParam;\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ABaseFluidVO.java'}, {'Syntax': 'this.postJson(\n                flowParam, WS.Path.Flow.Version1.flowUpdate())', 'FunctionName': 'postJson', 'ArgsCount': 2, 'MethodBody': 'protected JSONObject postJson(ABaseFluidJSONObject baseDomainParam, String postfixUrlParam) {\n\t\t//No need to check connection...\n\t\treturn this.postJson(false, baseDomainParam, postfixUrlParam);\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/ABaseClientWS.java'}, {'Syntax': 'WS.Path.Flow.Version1.flowUpdate()', 'FunctionName': 'flowUpdate', 'ArgsCount': 0, 'MethodBody': 'public static final String flowUpdate() {\n\t\t\t\t\treturn Version.VERSION_1.concat(ROOT).concat(UPDATE);\n\t\t\t\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ws/WS.java'}]"
6621cd95cda9bd4817b11131,stanfy/enroscar,"public static int pixelsWidth(final DisplayMetrics displayMetrics, final int dip) {
    final float scale = displayMetrics.density;
    final float alpha = 0.5f;
    return (int)(dip * scale + alpha);
  }",Converts device independent points to actual pixels .,ui/src/main/java/com/stanfy/enroscar/views/GUIUtils.java,[]
6621cd95cda9bd4817b11132,jcodec/jcodec,"public static int[] fromByte(byte[] b, int depth, boolean isBe) {
        if (depth == 24)
            if (isBe)
                return from24BE(b);
            else
                return from24LE(b);
        else if (depth == 16)
            if (isBe)
                return from16BE(b);
            else
                return from16LE(b);
        throw new NotSupportedException(""Conversion from "" + depth + ""bit ""
                + (isBe ? ""big endian"" : ""little endian"") + "" is not supported."");
    }",Generic byte - array to integer - array conversion,src/main/java/org/jcodec/algo/DataConvert.java,"[{'Syntax': 'from24BE(b)', 'FunctionName': 'from24BE', 'ArgsCount': 1, 'MethodBody': 'public static int[] from24BE(byte[] b) {\n        int[] result = new int[b.length / 3];\n        int off = 0;\n        for (int i = 0; i < result.length; i++) {\n            result[i] = ((b[off++] & 0xff) << 16) | ((b[off++] & 0xff) << 8) | (b[off++] & 0xff);\n        }\n\n        return result;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/algo/DataConvert.java'}, {'Syntax': 'from24LE(b)', 'FunctionName': 'from24LE', 'ArgsCount': 1, 'MethodBody': 'public static int[] from24LE(byte[] b) {\n        int[] result = new int[b.length / 3];\n        int off = 0;\n        for (int i = 0; i < result.length; i++) {\n            result[i] = (b[off++] & 0xff) | ((b[off++] & 0xff) << 8) | ((b[off++] & 0xff) << 16);\n        }\n\n        return result;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/algo/DataConvert.java'}, {'Syntax': 'from16BE(b)', 'FunctionName': 'from16BE', 'ArgsCount': 1, 'MethodBody': 'public static int[] from16BE(byte[] b) {\n        int[] result = new int[b.length >> 1];\n        int off = 0;\n        for (int i = 0; i < result.length; i++) {\n            result[i] = ((b[off++] & 0xff) << 8) | (b[off++] & 0xff);\n        }\n\n        return result;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/algo/DataConvert.java'}, {'Syntax': 'from16LE(b)', 'FunctionName': 'from16LE', 'ArgsCount': 1, 'MethodBody': 'public static int[] from16LE(byte[] b) {\n        int[] result = new int[b.length >> 1];\n        int off = 0;\n        for (int i = 0; i < result.length; i++) {\n            result[i] = (b[off++] & 0xff) | ((b[off++] & 0xff) << 8);\n        }\n\n        return result;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/algo/DataConvert.java'}]"
6621cd95cda9bd4817b11133,jboss/jboss-common-core,"public boolean addEdge(Edge<T> e)
   {
      if (e.getFrom() == this)
         outgoingEdges.add(e);
      else if (e.getTo() == this)
         incomingEdges.add(e);
      else 
         return false;
      return true;
   }",Add an edge to the vertex . If edge . from is this vertex its an outgoing edge . If edge . to is this vertex its an incoming edge . If neither from or to is this vertex the edge is not added .,src/main/java/org/jboss/util/graph/Vertex.java,"[{'Syntax': 'e.getFrom()', 'FunctionName': 'getFrom', 'ArgsCount': 0, 'MethodBody': 'public Vertex<T> getFrom()\n   {\n      return from;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/graph/Edge.java'}, {'Syntax': 'outgoingEdges.add(e)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public static void add(Throwable t) {\n      add(Type.UNKNOWN, t);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/ThrowableHandler.java'}, {'Syntax': 'e.getTo()', 'FunctionName': 'getTo', 'ArgsCount': 0, 'MethodBody': 'public Vertex<T> getTo()\n   {\n      return to;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/graph/Edge.java'}, {'Syntax': 'incomingEdges.add(e)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public static void add(Throwable t) {\n      add(Type.UNKNOWN, t);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/ThrowableHandler.java'}]"
6621cd95cda9bd4817b11134,oblac/jodd,"public static void copy(final File src, final File dest) throws IOException {
		if (src.isDirectory()) {
			copyDir(src, dest);
			return;
		}
		if (dest.isDirectory()) {
			copyFileToDir(src, dest);
			return;
		}
		copyFile(src, dest);
	}",Smart copy . If source is a directory copy it to destination . Otherwise if destination is directory copy source file to it . Otherwise try to copy source file to destination file .,jodd-core/src/main/java/jodd/io/FileUtil.java,[]
6621cd96cda9bd4817b11135,robeio/robe,"private static void setCountIntervalValues(TriggerInfo dto, TriggerBuilder<org.quartz.Trigger> builder) {
        SimpleScheduleBuilder builderSc = SimpleScheduleBuilder.simpleSchedule();
        if (dto.getRepeatCount() != 0)
            builderSc.withRepeatCount(dto.getRepeatCount());

        if (dto.getRepeatInterval() > 0)
            builderSc.withIntervalInMilliseconds(dto.getRepeatInterval());
        builder.withSchedule(builderSc);
    }",Helps to set count and intervals,robe-quartz/src/main/java/io/robe/quartz/info/JobInfoProvider.java,"[{'Syntax': 'dto.getRepeatCount()', 'FunctionName': 'getRepeatCount', 'ArgsCount': 0, 'MethodBody': 'int getRepeatCount();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}, {'Syntax': 'dto.getRepeatCount()', 'FunctionName': 'getRepeatCount', 'ArgsCount': 0, 'MethodBody': 'int getRepeatCount();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}, {'Syntax': 'dto.getRepeatInterval()', 'FunctionName': 'getRepeatInterval', 'ArgsCount': 0, 'MethodBody': 'long getRepeatInterval();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}, {'Syntax': 'dto.getRepeatInterval()', 'FunctionName': 'getRepeatInterval', 'ArgsCount': 0, 'MethodBody': 'long getRepeatInterval();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}]"
6621cd96cda9bd4817b11136,TypedRest/TypedRest-Java,"protected void delete() {
        String question = ""Are you sure you want to delete "" + getCaption() + ""?"";
        ConfirmDialog.show(getUI(), question, (ConfirmDialog cd) -> {
            if (cd.isConfirmed()) {
                try {
                    onDelete();
                    close();
                } catch (IOException | IllegalArgumentException | IllegalAccessException | IllegalStateException ex) {
                    onError(ex);
                } catch (RuntimeException ex) {
                    // Must explicitly send unhandled exceptions to error handler.
                    // Would otherwise get swallowed silently within callback handler.
                    getUI().getErrorHandler().error(new com.vaadin.server.ErrorEvent(ex));
                }
            }
        });
    }",Deletes the element .,vaadin/src/main/java/net/typedrest/vaadin/views/ElementView.java,"[{'Syntax': 'onDelete()', 'FunctionName': 'onDelete', 'ArgsCount': 0, 'MethodBody': 'protected void onDelete()\n            throws IOException, IllegalArgumentException, IllegalAccessException, FileNotFoundException, IllegalStateException {\n        endpoint.delete();\n        eventBus.post(new ElementDeletedEvent<>(endpoint));\n    }', 'FileName': '/TypedRest/TypedRest-Java/vaadin/src/main/java/net/typedrest/vaadin/views/ElementView.java'}, {'Syntax': 'close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'protected void close() {\n        if (containingWindow != null) {\n            containingWindow.close();\n        }\n    }', 'FileName': '/TypedRest/TypedRest-Java/vaadin/src/main/java/net/typedrest/vaadin/views/ViewComponent.java'}, {'Syntax': 'onError(ex)', 'FunctionName': 'onError', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void onError(final Throwable throwable) {\n        ui.access(() -> {\n            Logger.getLogger(NotificationErrorHandler.class.getName()).log(Level.WARNING, null, throwable);\n            Notification.show(""Error"", getFullMessage(throwable), Notification.Type.WARNING_MESSAGE);\n            ui.push();\n        });\n    }', 'FileName': '/TypedRest/TypedRest-Java/vaadin/src/main/java/net/typedrest/vaadin/views/UISubscriber.java'}, {'Syntax': 'getUI().getErrorHandler().error(new com.vaadin.server.ErrorEvent(ex))', 'FunctionName': 'error', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void error(ErrorEvent event) {\n        Throwable ex = event.getThrowable();\n        Logger.getLogger(NotificationErrorHandler.class.getName()).log(Level.SEVERE, null, ex);\n        Notification.show(""System error"", getFullMessage(ex), Notification.Type.ERROR_MESSAGE);\n    }', 'FileName': '/TypedRest/TypedRest-Java/vaadin/src/main/java/net/typedrest/vaadin/NotificationErrorHandler.java'}]"
6621cd96cda9bd4817b11137,Unidata/thredds,"private boolean put(DataRootExt dateRootExt) {
    map.put(dateRootExt.getPath(), dateRootExt);
    return treeSet.add(dateRootExt.getPath());
  }",Add a dataRootExt to in - memory tree .,tdcommon/src/main/java/thredds/server/catalog/DataRootPathMatcher.java,[]
6621cd96cda9bd4817b11138,ngageoint/geopackage-android,"public void setData(Bitmap bitmap, Bitmap.CompressFormat format)
            throws IOException {
        setData(bitmap, format, 100);
    }",Set the data from a full quality bitmap,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/related/media/MediaRow.java,"[{'Syntax': 'setData(bitmap, format, 100)', 'FunctionName': 'setData', 'ArgsCount': 3, 'MethodBody': 'public void setData(Bitmap bitmap, Bitmap.CompressFormat format, int quality)\n            throws IOException {\n        setData(BitmapConverter.toBytes(bitmap, format, quality));\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/related/media/MediaRow.java'}]"
6621cd96cda9bd4817b11139,oblac/jodd,"public EmailFilter cc(final String ccAddress) {
		final SearchTerm toTerm = new RecipientStringTerm(RecipientType.CC, ccAddress);
		concat(toTerm);
		return this;
	}",Defines filter for CC field .,jodd-mail/src/main/java/jodd/mail/EmailFilter.java,[]
6621cd96cda9bd4817b1113a,robeio/robe,"private static void setStartEndTime(TriggerInfo dto, TriggerBuilder<org.quartz.Trigger> builder) {
        if (dto.getStartTime() > -1)
            builder.startAt(new Date(dto.getStartTime()));
        else
            builder.startNow();

        if (dto.getEndTime() > -1)
            builder.endAt(new Date(dto.getEndTime()));
    }",Helps to set start and end times,robe-quartz/src/main/java/io/robe/quartz/info/JobInfoProvider.java,"[{'Syntax': 'dto.getStartTime()', 'FunctionName': 'getStartTime', 'ArgsCount': 0, 'MethodBody': 'long getStartTime();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}, {'Syntax': 'dto.getStartTime()', 'FunctionName': 'getStartTime', 'ArgsCount': 0, 'MethodBody': 'long getStartTime();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}, {'Syntax': 'dto.getEndTime()', 'FunctionName': 'getEndTime', 'ArgsCount': 0, 'MethodBody': 'long getEndTime();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}, {'Syntax': 'dto.getEndTime()', 'FunctionName': 'getEndTime', 'ArgsCount': 0, 'MethodBody': 'long getEndTime();', 'FileName': '/robeio/robe/robe-quartz/src/main/java/io/robe/quartz/info/TriggerInfo.java'}]"
6621cd96cda9bd4817b1113b,wildfly/wildfly,"public static PrimitiveAnalysis getPrimitiveAnalysis(final Class cls) {
        if (cls == null)
            throw IIOPLogger.ROOT_LOGGER.cannotAnalyzeNullClass();

        if (cls == Void.TYPE)
            return voidAnalysis;
        if (cls == Boolean.TYPE)
            return booleanAnalysis;
        if (cls == Character.TYPE)
            return charAnalysis;
        if (cls == Byte.TYPE)
            return byteAnalysis;
        if (cls == Short.TYPE)
            return shortAnalysis;
        if (cls == Integer.TYPE)
            return intAnalysis;
        if (cls == Long.TYPE)
            return longAnalysis;
        if (cls == Float.TYPE)
            return floatAnalysis;
        if (cls == Double.TYPE)
            return doubleAnalysis;

        throw IIOPLogger.ROOT_LOGGER.notAPrimitive(cls.getName());
    }",Get a singleton instance representing one of the primitive types .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/PrimitiveAnalysis.java,"[{'Syntax': 'IIOPLogger.ROOT_LOGGER.cannotAnalyzeNullClass()', 'FunctionName': 'cannotAnalyzeNullClass', 'ArgsCount': 0, 'MethodBody': '@Message(id = 59, value = ""Cannot analyze a null class"")\n    IllegalArgumentException cannotAnalyzeNullClass();', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java'}, {'Syntax': 'IIOPLogger.ROOT_LOGGER.notAPrimitive(cls.getName())', 'FunctionName': 'notAPrimitive', 'ArgsCount': 1, 'MethodBody': '@Message(id = 65, value = ""Not a primitive type: %s"")\n    IllegalArgumentException notAPrimitive(String type);', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java'}, {'Syntax': 'cls.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}]"
6621cd96cda9bd4817b1113c,Unidata/thredds,"public String getFullName() {
    return (parent == null)
        ? name
        : (parent.getFullName() == null || parent.getFullName().length() == 0)
        ? name
        : parent.getFullName() + ""/"" + name;
  }",Get the full heirarchical name of the dataset which has all parent collection names .,legacy/src/main/java/thredds/catalog/InvDataset.java,[]
6621cd96cda9bd4817b1113d,objectify/objectify,"private static Type[] getExactDirectSuperTypes(Type type) {
		if (type instanceof ParameterizedType || type instanceof Class) {
			Class<?> clazz;
			if (type instanceof ParameterizedType) {
				clazz = (Class<?>)((ParameterizedType)type).getRawType();
			} else {
				// TODO primitive types?
				clazz = (Class<?>)type;
				if (clazz.isArray())
					return getArrayExactDirectSuperTypes(clazz);
			}
			
			Type[] superInterfaces = clazz.getGenericInterfaces();
			Type superClass = clazz.getGenericSuperclass();
			
			// the only supertype of an interface without superinterfaces is Object
			if (superClass == null && superInterfaces.length == 0 && clazz.isInterface()) {
				return new Type[] {Object.class};
			}
			
			Type[] result;
			int resultIndex;
			if (superClass == null) {
				result = new Type[superInterfaces.length];
				resultIndex = 0;
			} else {
				result = new Type[superInterfaces.length + 1];
				resultIndex = 1;
				result[0] = mapTypeParameters(superClass, type);
			}
			for (Type superInterface : superInterfaces) {
				result[resultIndex++] = mapTypeParameters(superInterface, type);
			}
			
			return result;
		} else if (type instanceof TypeVariable) {
			TypeVariable<?> tv = (TypeVariable<?>) type;
			return tv.getBounds();
		} else if (type instanceof WildcardType) {
			// This should be a rare case: normally this wildcard is already captured.
			// But it does happen if the upper bound of a type variable contains a wildcard
			// TODO shouldn't upper bound of type variable have been captured too? (making this case impossible?)
			return ((WildcardType) type).getUpperBounds();
		} else if (type instanceof CaptureType) {
			return ((CaptureType)type).getUpperBounds();
		} else if (type instanceof GenericArrayType) {
			return getArrayExactDirectSuperTypes(type);
		} else if (type == null) {
			throw new NullPointerException();
		} else {
			throw new RuntimeException(""not implemented type: "" + type);
		}
	}",Returns the direct supertypes of the given type . Resolves type parameters .,src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java,"[{'Syntax': '((ParameterizedType)type).getRawType()', 'FunctionName': 'getRawType', 'ArgsCount': 0, 'MethodBody': 'public Type getRawType() {\n\t\treturn rawType;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/ParameterizedTypeImpl.java'}, {'Syntax': 'getArrayExactDirectSuperTypes(clazz)', 'FunctionName': 'getArrayExactDirectSuperTypes', 'ArgsCount': 1, 'MethodBody': 'private static Type[] getArrayExactDirectSuperTypes(Type arrayType) {\n\t\t// see http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.10.3\n\t\tType typeComponent = getArrayComponentType(arrayType);\n\n\t\tType[] result;\n\t\tint resultIndex;\n\t\tif (typeComponent instanceof Class && ((Class<?>)typeComponent).isPrimitive()) {\n\t\t\tresultIndex = 0;\n\t\t\tresult = new Type[3];\n\t\t} else {\n\t\t\tType[] componentSupertypes = getExactDirectSuperTypes(typeComponent);\n\t\t\tresult = new Type[componentSupertypes.length + 3];\n\t\t\tfor (resultIndex = 0; resultIndex < componentSupertypes.length; resultIndex++) {\n\t\t\t\tresult[resultIndex] = GenericArrayTypeImpl.createArrayType(componentSupertypes[resultIndex]);\n\t\t\t}\n\t\t}\n\t\tresult[resultIndex++] = Object.class;\n\t\tresult[resultIndex++] = Cloneable.class;\n\t\tresult[resultIndex++] = Serializable.class;\n\t\treturn result;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java'}, {'Syntax': 'mapTypeParameters(superClass, type)', 'FunctionName': 'mapTypeParameters', 'ArgsCount': 2, 'MethodBody': 'private static Type mapTypeParameters(Type toMapType, Type typeAndParams) {\n\t\tif (isMissingTypeParameters(typeAndParams)) {\n\t\t\treturn erase(toMapType);\n\t\t} else {\n\t\t\tVarMap varMap = new VarMap();\n\t\t\tType handlingTypeAndParams = typeAndParams;\n\t\t\twhile(handlingTypeAndParams instanceof ParameterizedType) {\n\t\t\t\tParameterizedType pType = (ParameterizedType)handlingTypeAndParams;\n\t\t\t\tClass<?> clazz = (Class<?>)pType.getRawType(); // getRawType should always be Class\n\t\t\t\tvarMap.addAll(clazz.getTypeParameters(), pType.getActualTypeArguments());\n\t\t\t\thandlingTypeAndParams = pType.getOwnerType();\n\t\t\t}\n\t\t\treturn varMap.map(toMapType);\n\t\t}\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java'}, {'Syntax': 'mapTypeParameters(superInterface, type)', 'FunctionName': 'mapTypeParameters', 'ArgsCount': 2, 'MethodBody': 'private static Type mapTypeParameters(Type toMapType, Type typeAndParams) {\n\t\tif (isMissingTypeParameters(typeAndParams)) {\n\t\t\treturn erase(toMapType);\n\t\t} else {\n\t\t\tVarMap varMap = new VarMap();\n\t\t\tType handlingTypeAndParams = typeAndParams;\n\t\t\twhile(handlingTypeAndParams instanceof ParameterizedType) {\n\t\t\t\tParameterizedType pType = (ParameterizedType)handlingTypeAndParams;\n\t\t\t\tClass<?> clazz = (Class<?>)pType.getRawType(); // getRawType should always be Class\n\t\t\t\tvarMap.addAll(clazz.getTypeParameters(), pType.getActualTypeArguments());\n\t\t\t\thandlingTypeAndParams = pType.getOwnerType();\n\t\t\t}\n\t\t\treturn varMap.map(toMapType);\n\t\t}\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java'}, {'Syntax': '((WildcardType) type).getUpperBounds()', 'FunctionName': 'getUpperBounds', 'ArgsCount': 0, 'MethodBody': 'public Type[] getUpperBounds() {\n\t\treturn upperBounds.clone();\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/WildcardTypeImpl.java'}, {'Syntax': '((CaptureType)type).getUpperBounds()', 'FunctionName': 'getUpperBounds', 'ArgsCount': 0, 'MethodBody': 'public Type[] getUpperBounds() {\n\t\treturn upperBounds.clone();\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/WildcardTypeImpl.java'}, {'Syntax': 'getArrayExactDirectSuperTypes(type)', 'FunctionName': 'getArrayExactDirectSuperTypes', 'ArgsCount': 1, 'MethodBody': 'private static Type[] getArrayExactDirectSuperTypes(Type arrayType) {\n\t\t// see http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.10.3\n\t\tType typeComponent = getArrayComponentType(arrayType);\n\n\t\tType[] result;\n\t\tint resultIndex;\n\t\tif (typeComponent instanceof Class && ((Class<?>)typeComponent).isPrimitive()) {\n\t\t\tresultIndex = 0;\n\t\t\tresult = new Type[3];\n\t\t} else {\n\t\t\tType[] componentSupertypes = getExactDirectSuperTypes(typeComponent);\n\t\t\tresult = new Type[componentSupertypes.length + 3];\n\t\t\tfor (resultIndex = 0; resultIndex < componentSupertypes.length; resultIndex++) {\n\t\t\t\tresult[resultIndex] = GenericArrayTypeImpl.createArrayType(componentSupertypes[resultIndex]);\n\t\t\t}\n\t\t}\n\t\tresult[resultIndex++] = Object.class;\n\t\tresult[resultIndex++] = Cloneable.class;\n\t\tresult[resultIndex++] = Serializable.class;\n\t\treturn result;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java'}]"
6621cd96cda9bd4817b1113e,jboss/jboss-common-core,"protected T getParameterizedType(ParameterizedType type)
   {
      // First check if we already have it
      T result = peek(type);
      if (result != null)
         return result;
      
      // Instantiate
      result = instantiate(type);

      // Put the perlimanary result into the cache
      put(type, result);

      // Generate the details
      generate(type, result);
      
      return result;
   }",Get the information for a parameterized type,src/main/java/org/jboss/util/collection/WeakTypeCache.java,"[{'Syntax': 'peek(type)', 'FunctionName': 'peek', 'ArgsCount': 1, 'MethodBody': 'public Object peek(Object key) \n   {\n      TimedEntry entry = (TimedEntry) entryMap.get(key);\n      Object value = null;\n      if( entry != null )\n         value = entry.getValue();\n      return value;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'instantiate(type)', 'FunctionName': 'instantiate', 'ArgsCount': 1, 'MethodBody': 'protected abstract T instantiate(Class<?> clazz);', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/WeakClassCache.java'}, {'Syntax': 'put(type, result)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public V put(K key, V value)\n   {\n      key = maskNull(key);\n\n      Entry<K, V>[] table = this.table;\n      int hash = hash(key);\n      int length = table.length;\n      int index = index(hash, length);\n\n      for (int start = index; ;)\n      {\n         Entry<K, V> e = table[index];\n         if (e == null)\n            break;\n\n         if (e.hash == hash && eq(key, e.key))\n         {\n            table[index] = new Entry<K, V>(e.key, e.hash, value);\n            return e.value;\n         }\n\n         index = nextIndex(index, length);\n         if (index == start)\n            throw new IllegalStateException(""Table is full!"");\n      }\n\n      modCount++;\n      table[index] = new Entry<K, V>(key, hash, value);\n      if (++size >= threshold)\n         resize(length);\n\n      return null;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}, {'Syntax': 'generate(type, result)', 'FunctionName': 'generate', 'ArgsCount': 2, 'MethodBody': 'public static int generate(final Object array[], final boolean deep) {\n      int hashcode = 0;\n\n      for (int i=0; i<array.length; i++) {\n         if (deep && (array[i] instanceof Object[])) {\n            hashcode ^= generate((Object[])array[i], true);\n         }\n         else {\n            hashcode ^= array[i].hashCode();\n         }\n      } \n\n      return hashcode;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/HashCode.java'}]"
6621cd96cda9bd4817b1113f,lestard/FluxFX,"public void dispatchOnFxThread(Action action) {
        if(Platform.isFxApplicationThread()) {
            actionStream.push(action);
        } else {
            Platform.runLater(() -> actionStream.push(action));
        }
    }",Dispatch the given action . Dispatching is always done on the JavaFX application thread even if this method is called from another thread .,fluxfx/src/main/java/eu/lestard/fluxfx/Dispatcher.java,[]
6621cd96cda9bd4817b11140,Unidata/thredds,"protected void writeCDL(Formatter f, boolean strict, String parentname) {
    if(strict && (isString() || this.getEnumType() != null))
      // Force type explicitly for string.
      f.format(""string ""); //note lower case and trailing blank
    if(strict && parentname != null) f.format(NetcdfFile.makeValidCDLName(parentname));
    f.format("":"");
    f.format(""%s"", strict ? NetcdfFile.makeValidCDLName(getShortName()) : getShortName());
    if (isString()) {
      f.format("" = "");
      for(int i = 0; i < getLength(); i++) {
        if(i != 0) f.format("", "");
        String val = getStringValue(i);
        if(val != null)
          f.format(""\""%s\"""", encodeString(val));
      }
    } else if(getEnumType() != null) {
      f.format("" = "");
      for (int i = 0; i < getLength(); i++) {
        if(i != 0) f.format("", "");
        EnumTypedef en = getEnumType();
        String econst = getStringValue(i);
        Integer ecint = en.lookupEnumInt(econst);
        if(ecint == null)
           throw new ForbiddenConversionException(""Illegal enum constant: ""+econst);
        f.format(""\""%s\"""", encodeString(econst));
      }
    } else {
      f.format("" = "");
      for (int i = 0; i < getLength(); i++) {
        if (i != 0) f.format("", "");

        Number number = getNumericValue(i);
        if (dataType.isUnsigned()) {
          // 'number' is unsigned, but will be treated as signed when we print it below, because Java only has signed
          // types. If it is large enough ( >= 2^(BIT_WIDTH-1) ), its most-significant bit will be interpreted as the
          // sign bit, which will result in an invalid (negative) value being printed. To prevent that, we're going
          // to widen the number before printing it.
          number = DataType.widenNumber(number);
        }
        f.format(""%s"", number);

        if (dataType.isUnsigned()) {
          f.format(""U"");
        }

        if (dataType == DataType.FLOAT)
          f.format(""f"");
        else if (dataType == DataType.SHORT || dataType == DataType.USHORT) {
          f.format(""S"");
        } else if (dataType == DataType.BYTE || dataType == DataType.UBYTE) {
          f.format(""B"");
        } else if (dataType == DataType.LONG || dataType == DataType.ULONG) {
          f.format(""L"");
        }
      }
    }
  }",Write CDL representation into f,cdm/src/main/java/ucar/nc2/Attribute.java,[]
6621cd96cda9bd4817b11141,dschulten/hydra-java,"public PartialUriTemplateComponents asComponents() {
        return getUriTemplateComponents(Collections.<String, Object>emptyMap(), Collections.<String>emptyList());
    }",Returns the template as uri components without variable expansion .,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/PartialUriTemplate.java,"[{'Syntax': 'getUriTemplateComponents(Collections.<String, Object>emptyMap(), Collections.<String>emptyList())', 'FunctionName': 'getUriTemplateComponents', 'ArgsCount': 2, 'MethodBody': 'private PartialUriTemplateComponents getUriTemplateComponents(Map<String, ?> parameters, List<String>\n            requiredArgs) {\n        Assert.notNull(parameters, ""Parameters must not be null!"");\n\n        final StringBuilder baseUrl = new StringBuilder(urlComponents.get(0));\n        final StringBuilder queryHead = new StringBuilder();\n        final StringBuilder queryTail = new StringBuilder();\n        final StringBuilder fragmentIdentifier = new StringBuilder();\n        for (int i = 1; i < urlComponents.size(); i++) {\n            final String part = urlComponents.get(i);\n            final List<Integer> variablesInPart = variableIndices.get(i);\n            if (variablesInPart.isEmpty()) {\n                if (part.startsWith(""?"") || part.startsWith(""&"")) {\n                    queryHead.append(part);\n                } else if (part.startsWith(""#"")) {\n                    fragmentIdentifier.append(part);\n                } else {\n                    baseUrl.append(part);\n                }\n            } else {\n                for (Integer variableInPart : variablesInPart) {\n                    final TemplateVariable variable = variables.get(variableInPart);\n                    final Object value = parameters.get(variable.getName());\n                    if (value == null) {\n                        switch (variable.getType()) {\n                            case REQUEST_PARAM:\n                            case REQUEST_PARAM_CONTINUED:\n                                if (requiredArgs.isEmpty() || requiredArgs.contains(variable.getName())) {\n                                    // query vars without value always go last (query tail)\n                                    if (queryTail.length() > 0) {\n                                        queryTail.append(\',\');\n                                    }\n                                    queryTail.append(variable.getName());\n                                }\n                                break;\n                            case FRAGMENT:\n                                fragmentIdentifier.append(variable.toString());\n                                break;\n                            case PATH_VARIABLE:\n                                if (queryHead.length() != 0) {\n                                    // level 1 variable in query\n                                    queryHead.append(variable.toString());\n                                } else {\n                                    baseUrl.append(variable.toString());\n                                }\n                                break;\n                            case SEGMENT:\n                                baseUrl.append(variable.toString());\n                        }\n                    } else {\n                        switch (variable.getType()) {\n                            case REQUEST_PARAM:\n                            case REQUEST_PARAM_CONTINUED:\n                                if (queryHead.length() == 0) {\n                                    queryHead.append(\'?\');\n                                } else {\n                                    queryHead.append(\'&\');\n                                }\n                                queryHead.append(variable.getName())\n                                        .append(\'=\')\n                                        .append(urlEncode(value.toString()));\n                                break;\n                            case SEGMENT:\n                                baseUrl.append(\'/\');\n                                // fall through\n                            case PATH_VARIABLE:\n                                if (queryHead.length() != 0) {\n                                    // level 1 variable in query\n                                    queryHead.append(urlEncode(value.toString()));\n                                } else {\n                                    baseUrl.append(urlEncode(value.toString()));\n                                }\n                                break;\n                            case FRAGMENT:\n                                fragmentIdentifier.append(\'#\');\n                                fragmentIdentifier.append(urlEncode(value.toString()));\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return new PartialUriTemplateComponents(baseUrl.toString(), queryHead.toString(), queryTail.toString(),\n                fragmentIdentifier.toString(), variableNames);\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/PartialUriTemplate.java'}]"
6621cd96cda9bd4817b11142,streamsets/datacollector,"private JsonNode getDefaultValue(Schema schema) {
    if(getConfig().avroNullableFields && getConfig().avroDefaultNullable) {
      return NullNode.getInstance();
    }

    if(!getConfig().avroNullableFields && defaultValuesForTypes.containsKey(schema.getType())) {
      return defaultValuesForTypes.get(schema.getType());
    }

    return null;
  }",Returns default value for given field or null if no default value should be used .,basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/schemagen/generators/AvroSchemaGenerator.java,[]
6621cd96cda9bd4817b11143,tiefaces/TieFaces,"@SuppressWarnings(""deprecation"")
	private static void copyCellSetValue(final Cell sourceCell, final Cell newCell, final boolean checkLock) {

		CellStyle newCellStyle = newCell.getCellStyle();
		String name = sourceCell.getCellTypeEnum().toString();
		CellValueType e = Enum.valueOf(CellValueType.class, name);
		e.setCellValue(newCell, sourceCell, checkLock, newCellStyle);
	}",set cell value .,src/org/tiefaces/components/websheet/utility/CellUtility.java,"[{'Syntax': 'sourceCell.getCellTypeEnum().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final String toString() {\r\n\t\tStringBuilder sb = new StringBuilder();\r\n\t\tsb.append(""{"");\r\n\t\tsb.append(""row = "" + this.row);\r\n\t\tsb.append("","");\r\n\t\tsb.append(""col = "" + this.col);\r\n\t\tsb.append(""}"");\r\n\t\treturn sb.toString();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialCellAddress.java'}, {'Syntax': 'e.setCellValue(newCell, sourceCell, checkLock, newCellStyle)', 'FunctionName': 'setCellValue', 'ArgsCount': 4, 'MethodBody': '@Override\r\n\t\t\tpublic void setCellValue(final Cell newCell, final Cell sourceCell, final boolean checkLock,\r\n\t\t\t\t\tfinal CellStyle newCellStyle) {\r\n\t\t\t\tif ((!checkLock) || newCellStyle.getLocked()) {\r\n\t\t\t\t\tnewCell.setCellValue(sourceCell.getRichStringCellValue());\r\n\t\t\t\t}\r\n\t\t\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellUtility.java'}]"
6621cd96cda9bd4817b11144,ngageoint/geopackage-android,"private String validateColor(String color) {
        String validated = color;
        if (color != null) {
            if (!color.startsWith(""#"")) {
                validated = ""#"" + color;
            }
            if (!colorPattern.matcher(validated).matches()) {
                throw new GeoPackageException(
                        ""Color must be in hex format #RRGGBB or #RGB, invalid value: ""
                                + color);
            }
            validated = validated.toUpperCase();
        }
        return validated;
    }",Validate and adjust the color value,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/StyleRow.java,[]
6621cd96cda9bd4817b11145,stanfy/enroscar,"void waitForLoader(final long time) {
    try {
      done.await(time, TimeUnit.MILLISECONDS);
    } catch (final InterruptedException e) {
      Log.e(TAG, ""waitForLoader() ininterrupted"", e);
    }
  }",For testing only .,net/src/main/java/com/stanfy/enroscar/rest/loader/RequestBuilderLoader.java,[]
6621cd96cda9bd4817b11146,fuinorg/srcgen4j-core,"public final void init(final SrcGen4JContext context, final Map<String, String> vars) {
        if (paramTemplates != null) {
            for (final ParameterizedTemplateModel paramTemplate : paramTemplates) {
                paramTemplate.init(context, vars);
            }
        }
    }",Initalizes the object .,src/main/java/org/fuin/srcgen4j/core/velocity/ParameterizedTemplateModels.java,"[{'Syntax': 'paramTemplate.init(context, vars)', 'FunctionName': 'init', 'ArgsCount': 2, 'MethodBody': 'public final void init(final SrcGen4JContext context, final Map<String, String> vars) {\r\n        if (paramTemplates != null) {\r\n            for (final ParameterizedTemplateModel paramTemplate : paramTemplates) {\r\n                paramTemplate.init(context, vars);\r\n            }\r\n        }\r\n    }', 'FileName': '/fuinorg/srcgen4j-core/src/main/java/org/fuin/srcgen4j/core/velocity/ParameterizedTemplateModels.java'}]"
6621cd96cda9bd4817b11147,playframework/playframework,"@SuppressWarnings(""unchecked"")
  public Deque<EntityManager> emStack(boolean threadLocalFallback) {
    return Http.Context.safeCurrent()
        .map(
            context -> {
              Object emsObject = context.args.get(CURRENT_ENTITY_MANAGER);
              if (emsObject != null) {
                return (Deque<EntityManager>) emsObject;
              } else {
                Deque<EntityManager> ems = new ArrayDeque<>();
                context.args.put(CURRENT_ENTITY_MANAGER, ems);
                return ems;
              }
            })
        .orElseGet(
            () -> {
              // Not a web request
              if (threadLocalFallback) {
                return this.get();
              } else {
                throw new RuntimeException(
                    ""No Http.Context is present. If you want to invoke this method outside of a HTTP request, you need to wrap the call with JPA.withTransaction instead."");
              }
            });
  }",Get the EntityManager stack .,persistence/play-java-jpa/src/main/java/play/db/jpa/JPAEntityManagerContext.java,"[{'Syntax': 'context.args.get(CURRENT_ENTITY_MANAGER)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n      public Optional<Cookie> get(String name) {\n        return cookies.stream().filter(c -> c.name().equals(name)).findFirst();\n      }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/mvc/Result.java'}, {'Syntax': 'context.args.put(CURRENT_ENTITY_MANAGER, ems)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public <A> TypedMap put(TypedKey<A> key, A value) {\n    return new TypedMap(underlying.updated(key.asScala(), value));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/libs/typedmap/TypedMap.java'}, {'Syntax': 'this.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': '@Override\n  public CompletionStage<WSResponse> get() {\n    return request.get().thenApply(responseFunction);\n  }', 'FileName': '/playframework/playframework/transport/client/play-ahc-ws/src/main/java/play/libs/ws/ahc/AhcWSRequest.java'}]"
6621cd96cda9bd4817b11148,oblac/jodd,"private Entry addConstantMemberReference(
      final int tag, final String owner, final String name, final String descriptor) {
    int hashCode = hash(tag, owner, name, descriptor);
    Entry entry = get(hashCode);
    while (entry != null) {
      if (entry.tag == tag
          && entry.hashCode == hashCode
          && entry.owner.equals(owner)
          && entry.name.equals(name)
          && entry.value.equals(descriptor)) {
        return entry;
      }
      entry = entry.next;
    }
    constantPool.put122(
        tag, addConstantClass(owner).index, addConstantNameAndType(name, descriptor));
    return put(new Entry(constantPoolCount++, tag, owner, name, descriptor, 0, hashCode));
  }",Adds a CONSTANT_Fieldref_info CONSTANT_Methodref_info or CONSTANT_InterfaceMethodref_info to the constant pool of this symbol table . Does nothing if the constant pool already contains a similar item .,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,"[{'Syntax': 'get(hashCode)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'entry.owner.equals(owner)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'entry.name.equals(name)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'entry.value.equals(descriptor)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'put(new Entry(constantPoolCount++, tag, owner, name, descriptor, 0, hashCode))', 'FunctionName': 'put', 'ArgsCount': 1, 'MethodBody': '@RestAction(""{iban}"")\n\t@RenderWith(Book2ActionResult.class)\n\tpublic Book put(@In long iban) {\n\t\tBook book = new Book();\n\n\t\tbook.setIban(iban);\n\t\tbook.setName(""Songs of Distant Earth"");\n\n\t\t// Book2ActionResult will render a book\n\t\treturn book;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/test/java/jodd/madvoc/action/BookAction.java'}]"
6621cd96cda9bd4817b11149,real-logic/aeron,"public Map<StreamCompositeKey, StreamBacklog> snapshot()
    {
        final Map<StreamCompositeKey, StreamBacklog> streams = new HashMap<>();

        counters.forEach(
            (counterId, typeId, keyBuffer, label) ->
            {
                if ((typeId >= PUBLISHER_LIMIT_TYPE_ID && typeId <= RECEIVER_POS_TYPE_ID) ||
                    typeId == SENDER_LIMIT_TYPE_ID || typeId == PER_IMAGE_TYPE_ID || typeId == PUBLISHER_POS_TYPE_ID)
                {
                    final StreamCompositeKey key = new StreamCompositeKey(
                        keyBuffer.getInt(SESSION_ID_OFFSET),
                        keyBuffer.getInt(STREAM_ID_OFFSET),
                        keyBuffer.getStringAscii(CHANNEL_OFFSET));

                    final StreamBacklog streamBacklog = streams.computeIfAbsent(key, (ignore) -> new StreamBacklog());
                    final long registrationId = keyBuffer.getLong(REGISTRATION_ID_OFFSET);
                    final long value = counters.getCounterValue(counterId);
                    switch (typeId)
                    {
                        case PublisherLimit.PUBLISHER_LIMIT_TYPE_ID:
                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);
                            streamBacklog.createPublisherIfAbsent().limit(value);
                            break;

                        case PublisherPos.PUBLISHER_POS_TYPE_ID:
                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);
                            streamBacklog.createPublisherIfAbsent().position(value);
                            break;

                        case SenderPos.SENDER_POSITION_TYPE_ID:
                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);
                            streamBacklog.createSenderIfAbsent().position(value);
                            break;

                        case SenderLimit.SENDER_LIMIT_TYPE_ID:
                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);
                            streamBacklog.createSenderIfAbsent().limit(value);
                            break;

                        case ReceiverHwm.RECEIVER_HWM_TYPE_ID:
                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);
                            streamBacklog.createReceiverIfAbsent().highWaterMark(value);
                            break;

                        case ReceiverPos.RECEIVER_POS_TYPE_ID:
                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);
                            streamBacklog.createReceiverIfAbsent().position(value);
                            break;

                        case SubscriberPos.SUBSCRIBER_POSITION_TYPE_ID:
                            streamBacklog.subscriberBacklogs().put(registrationId, new Subscriber(value));
                            break;
                    }
                }
            });

        return streams;
    }",Take a snapshot of all the backlog information and group by stream .,aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java,"[{'Syntax': 'counters.forEach(\n            (counterId, typeId, keyBuffer, label) ->\n            {\n                if ((typeId >= PUBLISHER_LIMIT_TYPE_ID && typeId <= RECEIVER_POS_TYPE_ID) ||\n                    typeId == SENDER_LIMIT_TYPE_ID || typeId == PER_IMAGE_TYPE_ID || typeId == PUBLISHER_POS_TYPE_ID)\n                {\n                    final StreamCompositeKey key = new StreamCompositeKey(\n                        keyBuffer.getInt(SESSION_ID_OFFSET),\n                        keyBuffer.getInt(STREAM_ID_OFFSET),\n                        keyBuffer.getStringAscii(CHANNEL_OFFSET));\n\n                    final StreamBacklog streamBacklog = streams.computeIfAbsent(key, (ignore) -> new StreamBacklog());\n                    final long registrationId = keyBuffer.getLong(REGISTRATION_ID_OFFSET);\n                    final long value = counters.getCounterValue(counterId);\n                    switch (typeId)\n                    {\n                        case PublisherLimit.PUBLISHER_LIMIT_TYPE_ID:\n                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);\n                            streamBacklog.createPublisherIfAbsent().limit(value);\n                            break;\n\n                        case PublisherPos.PUBLISHER_POS_TYPE_ID:\n                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);\n                            streamBacklog.createPublisherIfAbsent().position(value);\n                            break;\n\n                        case SenderPos.SENDER_POSITION_TYPE_ID:\n                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);\n                            streamBacklog.createSenderIfAbsent().position(value);\n                            break;\n\n                        case SenderLimit.SENDER_LIMIT_TYPE_ID:\n                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);\n                            streamBacklog.createSenderIfAbsent().limit(value);\n                            break;\n\n                        case ReceiverHwm.RECEIVER_HWM_TYPE_ID:\n                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);\n                            streamBacklog.createReceiverIfAbsent().highWaterMark(value);\n                            break;\n\n                        case ReceiverPos.RECEIVER_POS_TYPE_ID:\n                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);\n                            streamBacklog.createReceiverIfAbsent().position(value);\n                            break;\n\n                        case SubscriberPos.SUBSCRIBER_POSITION_TYPE_ID:\n                            streamBacklog.subscriberBacklogs().put(registrationId, new Subscriber(value));\n                            break;\n                    }\n                }\n            })', 'FunctionName': 'forEach', 'ArgsCount': 1, 'MethodBody': 'int forEach(final CatalogEntryProcessor consumer)\n    {\n        int count = 0;\n        int offset = firstRecordingDescriptorOffset;\n        while (offset < nextRecordingDescriptorOffset)\n        {\n            final int frameLength = wrapDescriptorAtOffset(catalogBuffer, offset);\n            if (frameLength < 0)\n            {\n                break;\n            }\n\n            invokeEntryProcessor(offset, consumer);\n\n            offset += frameLength;\n            count++;\n        }\n\n        return count;\n    }', 'FileName': '/real-logic/aeron/aeron-archive/src/main/java/io/aeron/archive/Catalog.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent().registrationId(registrationId)', 'FunctionName': 'registrationId', 'ArgsCount': 1, 'MethodBody': 'public PublicationBuffersReadyFlyweight registrationId(final long registrationId)\n    {\n        buffer.putLong(offset + REGISTRATION_ID_OFFSET, registrationId);\n\n        return this;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/command/PublicationBuffersReadyFlyweight.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent()', 'FunctionName': 'createPublisherIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Publisher createPublisherIfAbsent()\n        {\n            return publisher == null ? publisher = new Publisher() : publisher;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent().limit(value)', 'FunctionName': 'limit', 'ArgsCount': 1, 'MethodBody': 'public void limit(final int limit)\n    {\n        if (limit < 0 || limit >= buffer.capacity())\n        {\n            throw new IllegalArgumentException(\n                ""limit outside range: capacity="" + buffer.capacity() + "" limit="" + limit);\n        }\n\n        this.limit = limit;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/BufferBuilder.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent()', 'FunctionName': 'createPublisherIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Publisher createPublisherIfAbsent()\n        {\n            return publisher == null ? publisher = new Publisher() : publisher;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent().registrationId(registrationId)', 'FunctionName': 'registrationId', 'ArgsCount': 1, 'MethodBody': 'public PublicationBuffersReadyFlyweight registrationId(final long registrationId)\n    {\n        buffer.putLong(offset + REGISTRATION_ID_OFFSET, registrationId);\n\n        return this;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/command/PublicationBuffersReadyFlyweight.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent()', 'FunctionName': 'createPublisherIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Publisher createPublisherIfAbsent()\n        {\n            return publisher == null ? publisher = new Publisher() : publisher;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent().position(value)', 'FunctionName': 'position', 'ArgsCount': 1, 'MethodBody': 'public void position(final long newPosition)\n    {\n        if (!isClosed)\n        {\n            validatePosition(newPosition);\n            subscriberPosition.setOrdered(newPosition);\n        }\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Image.java'}, {'Syntax': 'streamBacklog.createPublisherIfAbsent()', 'FunctionName': 'createPublisherIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Publisher createPublisherIfAbsent()\n        {\n            return publisher == null ? publisher = new Publisher() : publisher;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent().registrationId(registrationId)', 'FunctionName': 'registrationId', 'ArgsCount': 1, 'MethodBody': 'public PublicationBuffersReadyFlyweight registrationId(final long registrationId)\n    {\n        buffer.putLong(offset + REGISTRATION_ID_OFFSET, registrationId);\n\n        return this;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/command/PublicationBuffersReadyFlyweight.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent()', 'FunctionName': 'createSenderIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Sender createSenderIfAbsent()\n        {\n            return sender == null ? sender = new Sender() : sender;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent().position(value)', 'FunctionName': 'position', 'ArgsCount': 1, 'MethodBody': 'public void position(final long newPosition)\n    {\n        if (!isClosed)\n        {\n            validatePosition(newPosition);\n            subscriberPosition.setOrdered(newPosition);\n        }\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Image.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent()', 'FunctionName': 'createSenderIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Sender createSenderIfAbsent()\n        {\n            return sender == null ? sender = new Sender() : sender;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent().registrationId(registrationId)', 'FunctionName': 'registrationId', 'ArgsCount': 1, 'MethodBody': 'public PublicationBuffersReadyFlyweight registrationId(final long registrationId)\n    {\n        buffer.putLong(offset + REGISTRATION_ID_OFFSET, registrationId);\n\n        return this;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/command/PublicationBuffersReadyFlyweight.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent()', 'FunctionName': 'createSenderIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Sender createSenderIfAbsent()\n        {\n            return sender == null ? sender = new Sender() : sender;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent().limit(value)', 'FunctionName': 'limit', 'ArgsCount': 1, 'MethodBody': 'public void limit(final int limit)\n    {\n        if (limit < 0 || limit >= buffer.capacity())\n        {\n            throw new IllegalArgumentException(\n                ""limit outside range: capacity="" + buffer.capacity() + "" limit="" + limit);\n        }\n\n        this.limit = limit;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/BufferBuilder.java'}, {'Syntax': 'streamBacklog.createSenderIfAbsent()', 'FunctionName': 'createSenderIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Sender createSenderIfAbsent()\n        {\n            return sender == null ? sender = new Sender() : sender;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent().registrationId(registrationId)', 'FunctionName': 'registrationId', 'ArgsCount': 1, 'MethodBody': 'public PublicationBuffersReadyFlyweight registrationId(final long registrationId)\n    {\n        buffer.putLong(offset + REGISTRATION_ID_OFFSET, registrationId);\n\n        return this;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/command/PublicationBuffersReadyFlyweight.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent()', 'FunctionName': 'createReceiverIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Receiver createReceiverIfAbsent()\n        {\n            return receiver == null ? receiver = new Receiver() : receiver;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent().highWaterMark(value)', 'FunctionName': 'highWaterMark', 'ArgsCount': 1, 'MethodBody': 'void highWaterMark(final long highWaterMark)\n        {\n            this.highWaterMark = highWaterMark;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent()', 'FunctionName': 'createReceiverIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Receiver createReceiverIfAbsent()\n        {\n            return receiver == null ? receiver = new Receiver() : receiver;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent().registrationId(registrationId)', 'FunctionName': 'registrationId', 'ArgsCount': 1, 'MethodBody': 'public PublicationBuffersReadyFlyweight registrationId(final long registrationId)\n    {\n        buffer.putLong(offset + REGISTRATION_ID_OFFSET, registrationId);\n\n        return this;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/command/PublicationBuffersReadyFlyweight.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent()', 'FunctionName': 'createReceiverIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Receiver createReceiverIfAbsent()\n        {\n            return receiver == null ? receiver = new Receiver() : receiver;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent().position(value)', 'FunctionName': 'position', 'ArgsCount': 1, 'MethodBody': 'public void position(final long newPosition)\n    {\n        if (!isClosed)\n        {\n            validatePosition(newPosition);\n            subscriberPosition.setOrdered(newPosition);\n        }\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Image.java'}, {'Syntax': 'streamBacklog.createReceiverIfAbsent()', 'FunctionName': 'createReceiverIfAbsent', 'ArgsCount': 0, 'MethodBody': 'Receiver createReceiverIfAbsent()\n        {\n            return receiver == null ? receiver = new Receiver() : receiver;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}, {'Syntax': 'streamBacklog.subscriberBacklogs().put(registrationId, new Subscriber(value))', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public String put(final String key, final String value)\n    {\n        return params.put(key, value);\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUri.java'}, {'Syntax': 'streamBacklog.subscriberBacklogs()', 'FunctionName': 'subscriberBacklogs', 'ArgsCount': 0, 'MethodBody': 'Map<Long, Subscriber> subscriberBacklogs()\n        {\n            return subscriberBacklogs;\n        }', 'FileName': '/real-logic/aeron/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java'}]"
6621cd97cda9bd4817b1114a,kiegroup/droolsjbpm-tools,"public static void logError(final String message, final Throwable thr) {
		getDefault().getLog().log(error(message, thr));
	}",Utility method to log errors in the Egit plugin .,drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/Activator.java,"[{'Syntax': 'getDefault().getLog().log(error(message, thr))', 'FunctionName': 'log', 'ArgsCount': 1, 'MethodBody': 'public static void log(Throwable t) {\n        Throwable top = t;\n        if ( t instanceof DebugException ) {\n            DebugException de = (DebugException) t;\n            IStatus status = de.getStatus();\n            if ( status.getException() != null ) {\n                top = status.getException();\n            }\n        }\n        log( new Status( IStatus.ERROR,\n                         getUniqueIdentifier(),\n                         INTERNAL_ERROR,\n                         ""Internal error in Drools Plugin: "",\n                         top ) );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsEclipsePlugin.java'}, {'Syntax': 'getDefault()', 'FunctionName': 'getDefault', 'ArgsCount': 0, 'MethodBody': 'public static DroolsEclipsePlugin getDefault() {\n        return plugin;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsEclipsePlugin.java'}, {'Syntax': 'error(message, thr)', 'FunctionName': 'error', 'ArgsCount': 2, 'MethodBody': 'public static IStatus error(final String message, final Throwable thr) {\n\t\treturn new Status(IStatus.ERROR, PLUGIN_ID, 0,\tmessage, thr);\n\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/Activator.java'}]"
6621cd97cda9bd4817b1114b,flow/noise,"public static double gradientNoise3D(double fx, double fy, double fz, int ix, int iy, int iz, int seed) {
        // Randomly generate a gradient vector given the integer coordinates of the
        // input value.  This implementation generates a random number and uses it
        // as an index into a normalized-vector lookup table.
        int vectorIndex = (X_NOISE_GEN * ix + Y_NOISE_GEN * iy + Z_NOISE_GEN * iz + SEED_NOISE_GEN * seed);
        vectorIndex ^= (vectorIndex >> SHIFT_NOISE_GEN);
        vectorIndex &= 0xff;

        double xvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2)];
        double yvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2) + 1];
        double zvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2) + 2];

        // Set up us another vector equal to the distance between the two vectors
        // passed to this function.
        double xvPoint = (fx - ix);
        double yvPoint = (fy - iy);
        double zvPoint = (fz - iz);

        // Now compute the dot product of the gradient vector with the distance
        // vector.  The resulting value is gradient noise.  Apply a scaling and
        // offset value so that this noise value ranges from 0 to 1.
        return ((xvGradient * xvPoint) + (yvGradient * yvPoint) + (zvGradient * zvPoint)) + 0.5;
    }",Generates a gradient - noise value from the coordinates of a three - dimensional input value and the integer coordinates of a nearby three - dimensional value .,src/main/java/com/flowpowered/noise/Noise.java,[]
6621cd97cda9bd4817b1114c,blazsolar/HorizontalPicker,"private int getInBoundsX(int x) {

        if(x < 0) {
            x = 0;
        } else if(x > ((itemWidth + (int) dividerSize) * (values.length - 1))) {
            x = ((itemWidth + (int) dividerSize) * (values.length - 1));
        }
        return x;
    }",Calculates x scroll position that is still in range of view scroller,HorizontalPicker/src/main/java/com/wefika/horizontalpicker/HorizontalPicker.java,[]
6621cd97cda9bd4817b1114d,oblac/jodd,"protected void saveResultSet(final ResultSet rs) {
		if (resultSets == null) {
			resultSets = new HashSet<>();
		}
		resultSets.add(rs);
	}",Stores result set .,jodd-db/src/main/java/jodd/db/DbQueryBase.java,"[{'Syntax': 'resultSets.add(rs)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cd97cda9bd4817b1114e,objectify/objectify,"@SuppressWarnings(""unchecked"")
	public static <A extends Annotation> A getAnnotation(Annotation[] annotations, Class<A> annotationType) {
		for (Annotation anno: annotations)
			if (annotationType.isAssignableFrom(anno.getClass()))
				return (A)anno;

		return null;
	}",Gets the annotation that has the specified type or null if there isn t one,src/main/java/com/googlecode/objectify/impl/TypeUtils.java,[]
6621cd97cda9bd4817b1114f,eclipse/packagedrone,"public Node.Nodes parse(String inFileName)
	        throws FileNotFoundException, JasperException, IOException {
	// If we're parsing a packaged tag file or a resource included by it
	// (using an include directive), ctxt.getTagFileJar() returns the 
	// JAR file from which to read the tag file or included resource,
	// respectively.
        isTagFile = ctxt.isTagFile();
        directiveOnly = false;
        return doParse(inFileName, null, ctxt.getTagFileJarUrl());
    }",Parses a JSP page or tag file . This is invoked by the compiler .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ParserController.java,"[{'Syntax': 'ctxt.isTagFile()', 'FunctionName': 'isTagFile', 'ArgsCount': 0, 'MethodBody': 'public boolean isTagFile() {\n        return isTagFile;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'doParse(inFileName, null, ctxt.getTagFileJarUrl())', 'FunctionName': 'doParse', 'ArgsCount': 3, 'MethodBody': 'private Node.Nodes doParse(String inFileName,\n                               Node parent,\n                               URL jarFileUrl)\n\t        throws FileNotFoundException, JasperException, IOException {\n\n\tNode.Nodes parsedPage = null;\n\tisEncodingSpecifiedInProlog = false;\n\tisDefaultPageEncoding = false;\n        hasBom = false;\n\n\tJarFile jarFile = getJarFile(jarFileUrl);\n\tString absFileName = resolveFileName(inFileName);\n\tString jspConfigPageEnc = getJspConfigPageEncoding(absFileName);\n\n\t// Figure out what type of JSP document and encoding type we are\n\t// dealing with\n\tdetermineSyntaxAndEncoding(absFileName, jarFile, jspConfigPageEnc);\n\n\tif (parent != null) {\n\t    // Included resource, add to dependent list\n\t    compiler.getPageInfo().addDependant(absFileName);\n\t}\n\n        comparePageEncodings(jspConfigPageEnc);\n\n\t// Dispatch to the appropriate parser\n\tif (isXml) {\n\t    // JSP document (XML syntax)\n            // InputStream for jspx page is created and properly closed in\n            // JspDocumentParser.\n            parsedPage = JspDocumentParser.parse(this, absFileName,\n                                                 jarFile, parent,\n                                                 isTagFile, directiveOnly,\n                                                 sourceEnc,\n                                                 jspConfigPageEnc,\n                                                 isEncodingSpecifiedInProlog);\n\t} else {\n\t    // Standard syntax\n\t    InputStreamReader inStreamReader = null;\n\t    try {\n\t\tinStreamReader = JspUtil.getReader(absFileName, sourceEnc,\n\t\t\t\t\t\t   jarFile, ctxt, err);\n\t\tJspReader jspReader = new JspReader(ctxt, absFileName,\n\t\t\t\t\t\t    sourceEnc, inStreamReader,\n\t\t\t\t\t\t    err);\n                parsedPage = Parser.parse(this, absFileName, jspReader, parent,\n                                          isTagFile, directiveOnly, jarFileUrl,\n\t\t\t\t\t  sourceEnc, jspConfigPageEnc,\n\t\t\t\t\t  isDefaultPageEncoding, hasBom);\n            } finally {\n\t\tif (inStreamReader != null) {\n\t\t    try {\n\t\t\tinStreamReader.close();\n\t\t    } catch (Exception any) {\n\t\t    }\n\t\t}\n\t    }\n\t}\n\n\tif (jarFile != null) {\n\t    try {\n\t\tjarFile.close();\n\t    } catch (Throwable t) {}\n\t}\n\n\tbaseDirStack.pop();\n\n\treturn parsedPage;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ParserController.java'}, {'Syntax': 'ctxt.getTagFileJarUrl()', 'FunctionName': 'getTagFileJarUrl', 'ArgsCount': 0, 'MethodBody': 'public URL getTagFileJarUrl() {\n        return this.tagFileJarUrl;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}]"
6621cd97cda9bd4817b11150,workplacesystems/utilsj,"private Node<K,V> leastNode(final Node<K,V> node, final int index) {

        Node<K,V> lval = node;

        if (lval != null) {
            while (lval.getLeft(index) != null) {
                lval = lval.getLeft(index);
            }
        }

        return lval;
    }",find the least node from a given node . very useful for starting a sorting iterator ...,src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java,"[{'Syntax': 'lval.getLeft(index)', 'FunctionName': 'getLeft', 'ArgsCount': 1, 'MethodBody': 'private Node<K,V> getLeft(final int index) {\r\n            return index == KEY ? leftNodeKey : leftNodeValue;\r\n        }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}, {'Syntax': 'lval.getLeft(index)', 'FunctionName': 'getLeft', 'ArgsCount': 1, 'MethodBody': 'private Node<K,V> getLeft(final int index) {\r\n            return index == KEY ? leftNodeKey : leftNodeValue;\r\n        }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}]"
6621cd97cda9bd4817b11151,abmargb/jamppa,"void deliver(Message message) {
        // Because the collector and listeners are expecting a thread ID with
        // a specific value, set the thread ID on the message even though it
        // probably never had one.
        message.setThread(threadID);

        for (MessageListener listener : listeners) {
            listener.processMessage(this, message);
        }
    }",Delivers a message directly to this chat which will add the message to the collector and deliver it to all listeners registered with the Chat . This is used by the Connection class to deliver messages without a thread ID .,src/main/java/org/jivesoftware/smack/Chat.java,"[{'Syntax': 'listener.processMessage(this, message)', 'FunctionName': 'processMessage', 'ArgsCount': 2, 'MethodBody': 'void processMessage(Chat chat, Message message);', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/smack/MessageListener.java'}]"
6621cd97cda9bd4817b11152,Unidata/thredds,"protected void replaceDataVars(StructureMembers sm) {
    for (StructureMembers.Member m : sm.getMembers()) {
      VariableSimpleIF org = this.cols.get(m.getName());
      int rank = org.getRank();
      List<Dimension> orgDims = org.getDimensions();
      // only keep the last n
      int n = m.getShape().length;
      List<Dimension> dims = orgDims.subList(rank-n, rank);
      VariableSimpleImpl result = new VariableSimpleImpl(org.getShortName(), org.getDescription(), org.getUnitsString(), org.getDataType(), dims);
      for (Attribute att : org.getAttributes()) result.add(att);
      this.cols.put(m.getName(), result);
    }
  }",change shape of the data variables,cdm/src/main/java/ucar/nc2/ft/point/standard/Table.java,[]
6621cd97cda9bd4817b11153,walokra/markdown-page-generator-plugin,"private String substituteVariables(String template, String patternString, Map<String, String> variables) {
        Pattern pattern = Pattern.compile(patternString);
        Matcher matcher = pattern.matcher(template);
        StringBuffer buffer = new StringBuffer();
        while (matcher.find()) {
            if (variables.containsKey(matcher.group(1))) {
                String replacement = variables.get(matcher.group(1));
                // quote to work properly with $ and {,} signs
                matcher.appendReplacement(buffer, replacement != null ? Matcher.quoteReplacement(replacement) : ""null"");
            }
        }
        matcher.appendTail(buffer);
        return buffer.toString();
    }",Replace variables with given pattern .,src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java,[]
6621cd97cda9bd4817b11154,workplacesystems/utilsj,"@Override
    public boolean containsValue(final Object value) {

        checkValue(value);

        return lookupValid(value, VALUE, getCurrentThreadId()) != null;
    }",Returns true if this map maps one or more keys to the specified value .,src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java,"[{'Syntax': 'checkValue(value)', 'FunctionName': 'checkValue', 'ArgsCount': 1, 'MethodBody': 'private void checkValue(final Object value) {\r\n        checkNonNullComparable(value, VALUE);\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}, {'Syntax': 'lookupValid(value, VALUE, getCurrentThreadId())', 'FunctionName': 'lookupValid', 'ArgsCount': 3, 'MethodBody': 'private Node<K,V> lookupValid(final Object data, final int index, final String thread_id) {\r\n        return nextEqualValid(getFloorEqualNode(lookup(data, index), index), index, thread_id);\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}, {'Syntax': 'getCurrentThreadId()', 'FunctionName': 'getCurrentThreadId', 'ArgsCount': 0, 'MethodBody': 'protected String getCurrentThreadId() {\r\n\r\n        String attach_id = (String)ThreadSession.getValue(getThreadSessionKey());\r\n        if (attach_id != null)\r\n            return attach_id;\r\n\r\n        Thread thread = Thread.currentThread();\r\n        return thread.toString() + ""("" + thread.hashCode() + "")"";\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}]"
6621cd97cda9bd4817b11155,fizzed/jne,"static private File getOrCreateTempDirectory(boolean deleteOnExit) throws ExtractException {
        // return the single instance if already created
        if ((TEMP_DIRECTORY != null) && TEMP_DIRECTORY.exists()) {
            return TEMP_DIRECTORY;
        }

        // use jvm supplied temp directory in case multiple jvms compete
//        try {
//            Path tempDirectory = Files.createTempDirectory(""jne."");
//            File tempDirectoryAsFile = tempDirectory.toFile();
//            if (deleteOnExit) {
//                tempDirectoryAsFile.deleteOnExit();
//            }
//            return tempDirectoryAsFile;
//        } catch (IOException e) {
//            throw new ExtractException(""Unable to create temporary dir"", e);
//        }
        
        // use totally unique name to avoid race conditions
        try {
            Path baseDir = Paths.get(System.getProperty(""java.io.tmpdir""));
            Path tempDirectory = baseDir.resolve(""jne."" + UUID.randomUUID().toString());
            Files.createDirectories(tempDirectory);
            File tempDirectoryAsFile = tempDirectory.toFile();
            if (deleteOnExit) {
                tempDirectoryAsFile.deleteOnExit();
            }
            // save temp directory so its only exactracted once
            TEMP_DIRECTORY = tempDirectoryAsFile;
            return TEMP_DIRECTORY;
        } catch (IOException e) {
            throw new ExtractException(""Unable to create temporary dir"", e);
        }
        
//        File baseDir = new File(System.getProperty(""java.io.tmpdir""));
//        String baseName = System.currentTimeMillis() + ""-"";
//
//        for (int counter = 0; counter < TEMP_DIR_ATTEMPTS; counter++) {
//            File d = new File(baseDir, baseName + counter);
//            if (d.mkdirs()) {
//                // schedule this directory to be deleted on exit
//                if (deleteOnExit) {
//                    d.deleteOnExit();
//                }
//                tempDirectory = d;
//                return d;
//            }
//        }
//
//        throw new ExtractException(""Failed to create temporary directory within "" + TEMP_DIR_ATTEMPTS + "" attempts (tried "" + baseName + ""0 to "" + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
    }",Attempts to create a temporary directory that did not exist previously .,src/main/java/com/fizzed/jne/JNE.java,"[{'Syntax': 'baseDir.resolve(""jne."" + UUID.randomUUID().toString())', 'FunctionName': 'resolve', 'ArgsCount': 1, 'MethodBody': 'static public OperatingSystem resolve(String value) {\n        if (value == null) {\n            return null;\n        }\n\n        value = value.toLowerCase();\n\n        if (value.contains(""windows"")) {\n            return OperatingSystem.WINDOWS;\n        } else if (value.contains(""mac"") || value.contains(""darwin"")) {\n            return OperatingSystem.MACOS;\n        }\n\n        for (OperatingSystem os : OperatingSystem.values()) {\n            if (os.name().equalsIgnoreCase(value)) {\n                return os;\n            }\n            if (os.aliases != null) {\n                for (String alias : os.aliases) {\n                    if (alias.equalsIgnoreCase(value)) {\n                        return os;\n                    }\n                }\n            }\n            if (os.extraAliases != null) {\n                for (String extraAlias : os.extraAliases) {\n                    if (extraAlias.equalsIgnoreCase(value)) {\n                        return os;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }', 'FileName': '/fizzed/jne/src/main/java/com/fizzed/jne/OperatingSystem.java'}, {'Syntax': 'UUID.randomUUID().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n        final StringBuilder sb = new StringBuilder();\n        if (this.distribution != null) {\n            sb.append(this.distribution.getDescriptor());\n        }\n        if (sb.length() > 0) {\n            sb.append("" "");\n        }\n        sb.append(this.getImageType());\n        sb.append("" "").append(this.version);\n        sb.append("" ("");\n        if (this.operatingSystem != null) {\n            sb.append(this.operatingSystem.getDescriptor());\n            if (this.hardwareArchitecture != null) {\n                sb.append("", "");\n                sb.append(this.hardwareArchitecture.getDescriptor());\n            }\n            sb.append("", "");\n        }\n        sb.append(this.directory);\n        sb.append("")"");\n        return sb.toString();\n    }', 'FileName': '/fizzed/jne/src/main/java/com/fizzed/jne/JavaHome.java'}]"
6621cd97cda9bd4817b11156,kiegroup/droolsjbpm-tools,"public void write(OutputStream os) throws IOException {
        Assert.isTrue(!inputRead);
        Assert.isTrue(!hasInputStream);

        int bytesRead = 0;
        int totalBytesRead = 0;
        byte[] buffer = bufferPool.getBuffer();
        long contentLength = getContentLength();

        try {
            while (bytesRead != -1 && (contentLength == -1 || contentLength > totalBytesRead)) {
                if (contentLength == -1) {
                    bytesRead = is.read(buffer);
                } else {
                    bytesRead = is.read(buffer, 0, (int) Math.min(buffer.length, contentLength - totalBytesRead));
                }
                if (bytesRead == -1) {
                    if (contentLength >= 0) {
                        throw new IOException(Policy.bind(""exception.unexpectedEndStream"")); //$NON-NLS-1$
                    }
                } else {
                    totalBytesRead += bytesRead;
                    os.write(buffer, 0, bytesRead);
                }
            }
        } finally {
            bufferPool.putBuffer(buffer);
            inputRead = true;
        }
    }",Writes this messages body to the given output stream . This method may only be called once during the lifetime of this message .,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/Message.java,"[{'Syntax': 'Assert.isTrue(!inputRead)', 'FunctionName': 'isTrue', 'ArgsCount': 1, 'MethodBody': 'public static boolean isTrue(boolean expression) {\n        return isTrue(expression, """"); //$NON-NLS-1$\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/Assert.java'}, {'Syntax': 'Assert.isTrue(!hasInputStream)', 'FunctionName': 'isTrue', 'ArgsCount': 1, 'MethodBody': 'public static boolean isTrue(boolean expression) {\n        return isTrue(expression, """"); //$NON-NLS-1$\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/Assert.java'}, {'Syntax': 'bufferPool.getBuffer()', 'FunctionName': 'getBuffer', 'ArgsCount': 0, 'MethodBody': 'public synchronized byte[] getBuffer() {\n        if (pool.isEmpty())\n            return new byte[BUFFER_SIZE];\n        byte[] buffer = (byte[]) pool.lastElement();\n        pool.removeElementAt(pool.size() - 1);\n        return buffer;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/BufferPool.java'}, {'Syntax': 'getContentLength()', 'FunctionName': 'getContentLength', 'ArgsCount': 0, 'MethodBody': 'public long getContentLength();', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/IContext.java'}, {'Syntax': 'is.read(buffer)', 'FunctionName': 'read', 'ArgsCount': 1, 'MethodBody': 'public int read(byte b[]) throws IOException {\n            try {\n                return super.read(b);\n            } catch (IOException e) {\n                closeConnection();\n                throw e;\n            }\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/HttpClient.java'}, {'Syntax': 'is.read(buffer, 0, (int) Math.min(buffer.length, contentLength - totalBytesRead))', 'FunctionName': 'read', 'ArgsCount': 3, 'MethodBody': 'public int read(byte[] buf, int offset, int length) throws IOException {\n            if (bytesRemaining <= 0)\n                return -1;\n            int result = socketIn.read(buf, offset, Math.min(length, bytesRemaining));\n            if (result > 0)\n                bytesRemaining -= result;\n            return result;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/HttpConnection.java'}, {'Syntax': 'Policy.bind(""exception.unexpectedEndStream"")', 'FunctionName': 'bind', 'ArgsCount': 1, 'MethodBody': 'public static String bind(String id) {\n        return bind(id, (String[]) null);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/Policy.java'}, {'Syntax': 'os.write(buffer, 0, bytesRead)', 'FunctionName': 'write', 'ArgsCount': 3, 'MethodBody': 'public void write(byte b[], int off, int len) throws IOException {\n        out.write(b, off, len);\n        messageDigest.update(b, off, len);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/internal/authentication/DigestOutputStream.java'}, {'Syntax': 'bufferPool.putBuffer(buffer)', 'FunctionName': 'putBuffer', 'ArgsCount': 1, 'MethodBody': 'public synchronized void putBuffer(byte[] buffer) {\n        Assert.isNotNull(buffer);\n        Assert.isTrue(buffer.length == BUFFER_SIZE);\n        if (pool.size() < MAX_BUFFERS)\n            pool.addElement(buffer);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/BufferPool.java'}]"
6621cd97cda9bd4817b11157,PistoiaHELM/HELMNotationParser,"public void addElement(String str, String type, double one, double two, boolean interval, boolean isDefault) throws NotationException{
    this.elements.add(ValidationMethod.decideWhichMonomerNotationInGroup(str, type, one, two, interval, isDefault));

  }",method to add a single element to the group,src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotationGroup.java,"[{'Syntax': 'ValidationMethod.decideWhichMonomerNotationInGroup(str, type, one, two, interval, isDefault)', 'FunctionName': 'decideWhichMonomerNotationInGroup', 'ArgsCount': 6, 'MethodBody': 'public static MonomerNotationGroupElement decideWhichMonomerNotationInGroup(String str, String type, double one,\r\n\t\t\tdouble two, boolean interval, boolean isDefault) throws NotationException{\r\n\t\tMonomerNotation element;\r\n\r\n\t\telement = decideWhichMonomerNotation(str, type);\r\n\r\n\t\tif (interval) {\r\n\t\t\treturn new MonomerNotationGroupElement(element, one, two);\r\n\t\t} else {\r\n\t\t\treturn new MonomerNotationGroupElement(element, one, isDefault);\r\n\t\t}\r\n\t}', 'FileName': '/PistoiaHELM/HELMNotationParser/src/main/java/org/helm/notation2/parser/notation/ValidationMethod.java'}]"
6621cd97cda9bd4817b11158,rupertlssmith/lojix,"public String getStringValue()
    {
        // Check if the attribute class has been finalized yet.
        if (attributeClass.finalized)
        {
            // Fetch the string value from the attribute class.
            return attributeClass.lookupValue[value].label;
        }
        else
        {
            return attributeClass.lookupValueList.get(value).label;
        }
    }",Gets the string value of a string attribute .,lojix/power_model/src/main/com/thesett/aima/attribute/impl/EnumeratedStringAttribute.java,"[{'Syntax': 'attributeClass.lookupValueList.get(value)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name)\n    {\n        return pageContext.getAttribute(name, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}]"
6621cd97cda9bd4817b11159,blademainer/common_utils,"protected Method findMatchingMethod() {
        String targetMethod = getTargetMethod();
        Object[] arguments = getArguments();
        int argCount = arguments.length;

        Method[] candidates = ReflectionUtils.getAllDeclaredMethods(getTargetClass());
        int minTypeDiffWeight = Integer.MAX_VALUE;
        Method matchingMethod = null;

        for (Method candidate : candidates) {
            if (candidate.getName().equals(targetMethod)) {
                Class<?>[] paramTypes = candidate.getParameterTypes();
                if (paramTypes.length == argCount) {
                    int typeDiffWeight = getTypeDifferenceWeight(paramTypes, arguments);
                    if (typeDiffWeight < minTypeDiffWeight) {
                        minTypeDiffWeight = typeDiffWeight;
                        matchingMethod = candidate;
                    }
                }
            }
        }

        return matchingMethod;
    }",Find a matching method with the specified name for the specified arguments .,common_helper/src/main/java/com/xiongyingqi/util/MethodInvoker.java,"[{'Syntax': 'getTargetMethod()', 'FunctionName': 'getTargetMethod', 'ArgsCount': 0, 'MethodBody': 'public String getTargetMethod() {\n        return this.targetMethod;\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/MethodInvoker.java'}, {'Syntax': 'getArguments()', 'FunctionName': 'getArguments', 'ArgsCount': 0, 'MethodBody': 'public Object[] getArguments() {\n        return this.arguments;\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/MethodInvoker.java'}, {'Syntax': 'ReflectionUtils.getAllDeclaredMethods(getTargetClass())', 'FunctionName': 'getAllDeclaredMethods', 'ArgsCount': 1, 'MethodBody': 'public static Method[] getAllDeclaredMethods(Class<?> leafClass) throws IllegalArgumentException {\n        final List<Method> methods = new ArrayList<Method>(32);\n        doWithMethods(leafClass, new MethodCallback() {\n            @Override\n            public void doWith(Method method) {\n                methods.add(method);\n            }\n        });\n        return methods.toArray(new Method[methods.size()]);\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/ReflectionUtils.java'}, {'Syntax': 'getTargetClass()', 'FunctionName': 'getTargetClass', 'ArgsCount': 0, 'MethodBody': 'public Class<?> getTargetClass() {\n        return this.targetClass;\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/MethodInvoker.java'}, {'Syntax': 'candidate.getName().equals(targetMethod)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        UserAuthentication that = (UserAuthentication) o;\n\n        if (authenticationId != null ? !authenticationId.equals(that.authenticationId) : that.authenticationId != null)\n            return false;\n        if (isEmailVerify != null ? !isEmailVerify.equals(that.isEmailVerify) : that.isEmailVerify != null)\n            return false;\n        if (isPhoneVerify != null ? !isPhoneVerify.equals(that.isPhoneVerify) : that.isPhoneVerify != null)\n            return false;\n        if (verifyQuestionOne != null ? !verifyQuestionOne.equals(that.verifyQuestionOne) : that.verifyQuestionOne != null)\n            return false;\n        if (verifyQuestionOneAnswer != null ? !verifyQuestionOneAnswer.equals(that.verifyQuestionOneAnswer) : that.verifyQuestionOneAnswer != null)\n            return false;\n        if (verifyQuestionThree != null ? !verifyQuestionThree.equals(that.verifyQuestionThree) : that.verifyQuestionThree != null)\n            return false;\n        if (verifyQuestionThreeAnswer != null ? !verifyQuestionThreeAnswer.equals(that.verifyQuestionThreeAnswer) : that.verifyQuestionThreeAnswer != null)\n            return false;\n        if (verifyQuestionTwo != null ? !verifyQuestionTwo.equals(that.verifyQuestionTwo) : that.verifyQuestionTwo != null)\n            return false;\n        if (verifyQuestionTwoAnswer != null ? !verifyQuestionTwoAnswer.equals(that.verifyQuestionTwoAnswer) : that.verifyQuestionTwoAnswer != null)\n            return false;\n\n        return true;\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/test/java/UserAuthentication.java'}, {'Syntax': 'candidate.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/test/java/com/xiongyingqi/jackson/pojo/User.java'}, {'Syntax': 'getTypeDifferenceWeight(paramTypes, arguments)', 'FunctionName': 'getTypeDifferenceWeight', 'ArgsCount': 2, 'MethodBody': 'public static int getTypeDifferenceWeight(Class<?>[] paramTypes, Object[] args) {\n        int result = 0;\n        for (int i = 0; i < paramTypes.length; i++) {\n            if (!ClassUtils.isAssignableValue(paramTypes[i], args[i])) {\n                return Integer.MAX_VALUE;\n            }\n            if (args[i] != null) {\n                Class<?> paramType = paramTypes[i];\n                Class<?> superClass = args[i].getClass().getSuperclass();\n                while (superClass != null) {\n                    if (paramType.equals(superClass)) {\n                        result = result + 2;\n                        superClass = null;\n                    } else if (ClassUtils.isAssignable(paramType, superClass)) {\n                        result = result + 2;\n                        superClass = superClass.getSuperclass();\n                    } else {\n                        superClass = null;\n                    }\n                }\n                if (paramType.isInterface()) {\n                    result = result + 1;\n                }\n            }\n        }\n        return result;\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/MethodInvoker.java'}]"
6621cd97cda9bd4817b1115a,RestComm/jain-slee,"public void raUnconfigure() throws InvalidStateException {

		if (doTraceLogs) {
			logger.trace(""raUnconfigure()"");
		}

		if (state == ResourceAdaptorObjectState.INACTIVE) {
			state = ResourceAdaptorObjectState.UNCONFIGURED;
			object.raUnconfigure();
		} else {
			throw new InvalidStateException(""ra object is in state "" + state);
		}
	}",Unconfigures the ra object,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java,"[{'Syntax': 'object.raUnconfigure()', 'FunctionName': 'raUnconfigure', 'ArgsCount': 0, 'MethodBody': 'public void raUnconfigure() { }', 'FileName': '/RestComm/jain-slee/tools/statistics/ra/src/main/java/org/restcomm/slee/resource/statistics/StatisticsResourceAdaptor.java'}]"
6621cd97cda9bd4817b1115b,blademainer/common_utils,"public static Object deserialize(byte[] bytes) {
        if (bytes == null) {
            return null;
        }
        try {
            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));
            return ois.readObject();
        } catch (IOException ex) {
            throw new IllegalArgumentException(""Failed to deserialize object"", ex);
        } catch (ClassNotFoundException ex) {
            throw new IllegalStateException(""Failed to deserialize object type"", ex);
        }
    }",Deserialize the byte array into an object .,common_helper/src/main/java/com/xiongyingqi/util/SerializationUtils.java,[]
6621cd97cda9bd4817b1115c,deeplearning4j/nd4j,"private INDArray negativeLogLikelihood(INDArray labels, INDArray alpha, INDArray mu, INDArray sigma) {
        INDArray labelsMinusMu = labelsMinusMu(labels, mu);
        INDArray diffsquared = labelsMinusMu.mul(labelsMinusMu).sum(2);
        INDArray phitimesalphasum = phi(diffsquared, sigma).muli(alpha).sum(1);

        // result = See Bishop(28,29)
        INDArray result = Transforms.log(phitimesalphasum).negi();
        return result;
    }",This method returns an array consisting of each of the training samples for each label in each sample the negative log likelihood of that value falling within the given gaussian mixtures .,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/lossfunctions/impl/LossMixtureDensity.java,[]
6621cd97cda9bd4817b1115d,oblac/jodd,"public void register(final Class type, final TypeJsonSerializer typeJsonSerializer) {
		map.put(type, typeJsonSerializer);
		cache.clear();
	}",Registers new serializer .,jodd-json/src/main/java/jodd/json/TypeJsonSerializerMap.java,"[{'Syntax': 'map.put(type, typeJsonSerializer)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void put(final K key, final V object) {\n\t\tput(key, object, timeout);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'cache.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic void clear() {\n\t\tfinal long stamp = lock.writeLock();\n\t\ttry {\n\t\t\tcacheMap.clear();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlockWrite(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cd97cda9bd4817b1115e,Unidata/thredds,"public void addItem( Object item) {
    if (item == null) return;
    for (int i=0; i<getItemCount(); i++) {
      if (item.equals( getItemAt(i))) {
        if (i == 0) {
          setSelectedIndex(0);
          return; // already there
        }
        removeItemAt(i);
      }
    }

    // add as first in the list
    insertItemAt( item, 0);
    setSelectedIndex(0);
  }",Add the item to the top of the list . If it already exists move it to the top .,ui/src/main/java/ucar/util/prefs/ui/ComboBox.java,[]
6621cd97cda9bd4817b1115f,oblac/jodd,"public File lookupGzipBundleFile(final File file) throws IOException {
		String path = file.getPath() + ZipUtil.GZIP_EXT;
		File gzipFile = new File(path);

		if (!gzipFile.exists()) {
			if (log.isDebugEnabled()) {
				log.debug(""gzip bundle to "" + path);
			}
			ZipUtil.gzip(file);
		}

		return gzipFile;
	}",Locates gzipped version of bundle file . If gzip file does not exist it will be created .,jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerBundlesManager.java,"[{'Syntax': 'gzipFile.exists()', 'FunctionName': 'exists', 'ArgsCount': 0, 'MethodBody': 'public HttpStatus400 exists() {\n\t\t\tmessage = ""Resource already exists."";\n\t\t\treturn this;\n\t\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/result/HttpStatus.java'}]"
6621cd98cda9bd4817b11160,kiegroup/droolsjbpm-tools,"private void loadConfig(IFile input) {
        IResource res = findDSLResource( input, dslConfigName );
        if (res instanceof IFile) {
            IFile dslConf = (IFile) res;
            if (dslConf.exists()) {
                InputStream stream = null;
                try {
                    stream = dslConf.getContents();
                    readConfig( stream );
                    valid = true;
                } catch ( Exception e ) {
                    throw new IllegalStateException(""Unable to open DSL config file. (Exception: "" + e.getMessage() + "")"");
                } finally {
                    closeStream( stream );
                }
                
            }
        }
    }",This does the hunting around the projec to find the . dsl file .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/dsl/editor/DSLAdapter.java,"[{'Syntax': 'findDSLResource( input, dslConfigName )', 'FunctionName': 'findDSLResource', 'ArgsCount': 2, 'MethodBody': 'private static IResource findDSLResource(IResource input, String dslFileName) {\n        IResource res = input.getParent().findMember( dslFileName );\n        if (res == null) res = input.getParent().getParent().findMember( dslFileName ); //try parent directory\n        if (res == null) res = input.getProject().findMember( dslFileName ); //try root of project.\n        return res;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/dsl/editor/DSLAdapter.java'}, {'Syntax': 'dslConf.exists()', 'FunctionName': 'exists', 'ArgsCount': 0, 'MethodBody': 'public boolean exists() {\n        return true;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/utils/StringInput.java'}, {'Syntax': 'dslConf.getContents()', 'FunctionName': 'getContents', 'ArgsCount': 0, 'MethodBody': 'public InputStream getContents() throws CoreException {\n        return new ByteArrayInputStream(contents.getBytes());\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/utils/StringStorage.java'}, {'Syntax': 'readConfig( stream )', 'FunctionName': 'readConfig', 'ArgsCount': 1, 'MethodBody': 'void readConfig(InputStream stream) throws IOException, CoreException {\n        DSLTokenizedMappingFile file = new DSLTokenizedMappingFile();\n        file.parseAndLoad(new InputStreamReader(stream));\n\n        DSLMapping grammar = file.getMapping();\n        List<DSLMappingEntry> conditions = grammar.getEntries( DSLMappingEntry.CONDITION );\n        List<DSLMappingEntry> consequences = grammar.getEntries( DSLMappingEntry.CONSEQUENCE );\n        \n        conditionProposals = buildProposals(conditions);\n        consequenceProposals = buildProposals(consequences);\n        \n        dslTree.buildTree(grammar);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/dsl/editor/DSLAdapter.java'}, {'Syntax': 'e.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\n        return message;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Status.java'}, {'Syntax': 'closeStream( stream )', 'FunctionName': 'closeStream', 'ArgsCount': 1, 'MethodBody': 'private void closeStream(InputStream stream) {\n        if (stream != null) try {\n            stream.close();\n        } catch ( IOException e ) {}\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/dsl/editor/DSLAdapter.java'}]"
6621cd98cda9bd4817b11161,eclipse/packagedrone,"private boolean systemJarInWebinf(String path) {

        if (path.indexOf(""/WEB-INF/"") < 0) {
            return false;
        }

        Boolean useMyFaces = (Boolean) ctxt.getServletContext().
                getAttribute(""com.sun.faces.useMyFaces"");

        if (useMyFaces == null || !useMyFaces) {
            for (String jar: systemJsfJars) {
                if (path.indexOf(jar) > 0) {
                    return true;
                }
            }
        }

        for (String jar: systemJars) {
            if (path.indexOf(jar) > 0) {
                return true;
            }
        }
        return false;
    }",Return true if the path refers to a jar file in WEB - INF and is a system jar .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java,"[{'Syntax': 'ctxt.getServletContext().\n                getAttribute(""com.sun.faces.useMyFaces"")', 'FunctionName': 'getAttribute', 'ArgsCount': 1, 'MethodBody': 'public Object getAttribute(String name) {\n\n\tif (name == null) {\n\t    throw new NullPointerException(\n\t            Localizer.getMessage(""jsp.error.attribute.null_name""));\n\t}\n\n\treturn pageAttributes.get(name);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspContextWrapper.java'}, {'Syntax': 'ctxt.getServletContext()', 'FunctionName': 'getServletContext', 'ArgsCount': 0, 'MethodBody': 'public ServletContext getServletContext() {\n        return context;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}]"
6621cd98cda9bd4817b11162,Unidata/thredds,"protected double readAttributeDouble(AttributeContainer v, String attname, double defValue) {
    Attribute att = v.findAttributeIgnoreCase(attname);
    if (att == null) return defValue;
    if (att.isString())
      return Double.parseDouble(att.getStringValue());
    else
      return att.getNumericValue().doubleValue();
  }",Read a variable attribute as a double .,cdm/src/main/java/ucar/nc2/dataset/transform/AbstractTransformBuilder.java,[]
6621cd98cda9bd4817b11163,grzesiek-galezowski/AutoFixtureGenerator,"@NonNull
  public static <T> Collection<T> collectionOf(final InstanceOf<T> typeToken, final InlineConstrainedGenerator<T> omittedValues) {
    return PrivateGenerate.manyAsListOf(typeToken, omittedValues);
  }",COLLECTIONS - complete,src/main/java/autofixture/publicinterface/Any.java,"[{'Syntax': 'PrivateGenerate.manyAsListOf(typeToken, omittedValues)', 'FunctionName': 'manyAsListOf', 'ArgsCount': 2, 'MethodBody': 'static <T> List<T> manyAsListOf(final TypeToken<T> typeToken, final InlineConstrainedGenerator<T> generator) {\n    final List<T> result = CollectionFactory.createList();\n    result.add(any(typeToken, generator));\n    result.add(any(typeToken, generator));\n    result.add(any(typeToken, generator));\n\n    return result;\n  }', 'FileName': '/grzesiek-galezowski/AutoFixtureGenerator/src/main/java/autofixture/publicinterface/PrivateGenerate.java'}]"
6621cd98cda9bd4817b11164,Unidata/thredds,"public void removeDocumentation(String type) {
    Iterator iter = docs.iterator();
    while (iter.hasNext()) {
      InvDocumentation doc = (InvDocumentation) iter.next();
      String dtype = doc.getType();
      if ((dtype != null) && dtype.equalsIgnoreCase(type))
        iter.remove();
    }
  }",remove all instances of specified type of documentation,legacy/src/main/java/thredds/catalog/ThreddsMetadata.java,[]
6621cd98cda9bd4817b11165,PistoiaHELM/HELMNotationParser,"public void setAnnotation(String str) {
    if (str != null) {
      annotation = str;
      isAnnotationHere = true;
    } else {
      annotation = null;
      isAnnotationHere = false;
    }
  }",method to add annotation to this monomer,src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotation.java,[]
6621cd98cda9bd4817b11166,CloudI/cloudi_api_java,"public void shutdown(final String reason)
    {
        OtpOutputStream shutdown = new OtpOutputStream();
        shutdown.write(OtpExternal.versionTag);
        final OtpErlangObject[] tuple = {new OtpErlangAtom(""shutdown""),
                                         new OtpErlangString(reason)};
        shutdown.write_any(new OtpErlangTuple(tuple));
        send(shutdown);
    }",Shutdown the service successfully,src/main/java/org/cloudi/API.java,"[{'Syntax': 'shutdown.write(OtpExternal.versionTag)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'public void write(final byte b) {\n        ensureCapacity(super.count + 1);\n        super.buf[super.count++] = b;\n    }', 'FileName': '/CloudI/cloudi_api_java/src/main/java/com/ericsson/otp/erlang/OtpOutputStream.java'}, {'Syntax': 'shutdown.write_any(new OtpErlangTuple(tuple))', 'FunctionName': 'write_any', 'ArgsCount': 1, 'MethodBody': 'public void write_any(final OtpErlangObject o) {\n        // calls one of the above functions, depending on o\n        o.encode(this);\n    }', 'FileName': '/CloudI/cloudi_api_java/src/main/java/com/ericsson/otp/erlang/OtpOutputStream.java'}, {'Syntax': 'send(shutdown)', 'FunctionName': 'send', 'ArgsCount': 1, 'MethodBody': 'private void send(final OtpOutputStream command)\n    {\n        try\n        {\n            if (this.use_header)\n            {\n                final long length = command.size();\n                final byte[] header = {(byte) ((length & 0xff000000) >> 24),\n                                       (byte) ((length & 0x00ff0000) >> 16),\n                                       (byte) ((length & 0x0000ff00) >> 8),\n                                       (byte) ( length & 0x000000ff)};\n                this.output.write(header);\n            }\n            command.writeTo(this.output);\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace(API.err);\n            return;\n        }\n    }', 'FileName': '/CloudI/cloudi_api_java/src/main/java/org/cloudi/API.java'}]"
6621cd98cda9bd4817b11167,retog/wymiwyg-commons-core,"private void setPort(int p_port) throws MalformedURIException {
		if (p_port >= 0 && p_port <= 65535) {
			if (m_host == null) {
				throw new MalformedURIException(""Port cannot be set when host is null!"");
			}
		} else if (p_port != -1) {
			throw new MalformedURIException(""Invalid port number!"");
		}
		n_port = p_port;

	}",Set the port for this URI . - 1 is used to indicate that the port is not specified otherwise valid port numbers are between 0 and 65535 . If a valid port number is passed in and the host field is null an exception is thrown .,src/main/java/org/wymiwyg/commons/util/URI.java,[]
6621cd98cda9bd4817b11168,apache/parquet-mr,"public static final UnboundRecordFilter page( final long startPos, final long pageSize ) {
    return new UnboundRecordFilter() {
      @Override
      public RecordFilter bind(Iterable<ColumnReader> readers) {
        return new PagedRecordFilter( startPos, pageSize );
      }
    };
  }",Returns builder for creating a paged query .,parquet-column/src/main/java/org/apache/parquet/filter/PagedRecordFilter.java,[]
6621cd98cda9bd4817b11169,OpenEstate/OpenEstate-IO,"protected final void set(int pos, String value) {
        value = StringUtils.trimToNull(value);
        if (value != null)
            this.values.put(pos, value);
        else if (this.values.containsKey(pos))
            this.values.remove(pos);
    }",Sets the value of this record at a certain index position .,Core/src/main/java/org/openestate/io/core/CsvRecord.java,[]
6621cd98cda9bd4817b1116a,Unidata/thredds,"public void addParameters(String tbl) throws IOException {
    try (InputStream is = getInputStream(tbl)) {
      if (is == null) {
        throw new IOException(""Unable to open "" + tbl);
      }
      String content = readContents(is);   // LOOK this is silly - should just read one line at a time
      // List           lines   = StringUtil.split(content, ""\n"", false);
      String[] lines = content.split(""\n"");
      List<String[]> result = new ArrayList<>();
      for (String line : lines) {
        //String line  = (String) lines.get(i);
        String tline = line.trim();
        if (tline.length() == 0) {
          continue;
        }
        if (tline.startsWith(""!"")) {
          continue;
        }
        String[] words = new String[indices.length];
        for (int idx = 0; idx < indices.length; idx++) {
          if (indices[idx] >= tline.length()) {
            continue;
          }
          if (indices[idx] + lengths[idx] > tline.length()) {
            words[idx] = line.substring(indices[idx]);
          } else {
            words[idx] = line.substring(indices[idx],
                    indices[idx] + lengths[idx]);
          }
          //if (trimWords) {
          words[idx] = words[idx].trim();
          //}
        }
        result.add(words);
      }
      for (String[] aResult : result) {
        GempakParameter p = makeParameter(aResult);
        if (p != null) {
          if (p.getName().contains(""("")) {
            templateParamMap.put(p.getName(), p);
          } else {
            paramMap.put(p.getName(), p);
          }
        }
      }
    }

  }",Add parameters from the table,visad/src/main/java/ucar/nc2/iosp/gempak/GempakParameterTable.java,[]
6621cd98cda9bd4817b1116b,DigitalPebble/storm-crawler,"@Override
    public void ignorableWhitespace(char ch[], int start, int length)
            throws org.xml.sax.SAXException {
        if (isOutsideDocElem()) {
            return; // avoid DOM006 Hierarchy request error
        }

        String s = new String(ch, start, length);

        append(m_doc.createTextNode(s));
    }",Receive notification of ignorable whitespace in element content .,external/tika/src/main/java/com/digitalpebble/stormcrawler/tika/DOMBuilder.java,"[{'Syntax': 'isOutsideDocElem()', 'FunctionName': 'isOutsideDocElem', 'ArgsCount': 0, 'MethodBody': 'private boolean isOutsideDocElem() {\n        return (null == m_docFrag)\n                && m_elemStack.size() == 0\n                && (null == m_currentNode || m_currentNode.getNodeType() == Node.DOCUMENT_NODE);\n    }', 'FileName': '/DigitalPebble/storm-crawler/external/tika/src/main/java/org/apache/stormcrawler/tika/DOMBuilder.java'}, {'Syntax': 'append(m_doc.createTextNode(s))', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'protected void append(Node newNode) throws org.xml.sax.SAXException {\n\n        Node currentNode = m_currentNode;\n\n        if (null != currentNode) {\n            currentNode.appendChild(newNode);\n\n            // System.out.println(newNode.getNodeName());\n        } else if (null != m_docFrag) {\n            m_docFrag.appendChild(newNode);\n        } else {\n            boolean ok = true;\n            short type = newNode.getNodeType();\n\n            if (type == Node.TEXT_NODE) {\n                String data = newNode.getNodeValue();\n\n                if ((null != data) && (data.trim().length() > 0)) {\n                    throw new org.xml.sax.SAXException(\n                            ""Warning: can\'t output text before document element!  Ignoring..."");\n                }\n\n                ok = false;\n            } else if (type == Node.ELEMENT_NODE) {\n                if (m_doc.getDocumentElement() != null) {\n                    throw new org.xml.sax.SAXException(""Can\'t have more than one root on a DOM!"");\n                }\n            }\n\n            if (ok) {\n                m_doc.appendChild(newNode);\n            }\n        }\n    }', 'FileName': '/DigitalPebble/storm-crawler/external/tika/src/main/java/org/apache/stormcrawler/tika/DOMBuilder.java'}]"
6621cd98cda9bd4817b1116c,ReactiveX/RxJava,"public static <T, U> Observable<U> scalarXMap(T value,
            Function<? super T, ? extends ObservableSource<? extends U>> mapper) {
        return RxJavaPlugins.onAssembly(new ScalarXMapObservable<T, U>(value, mapper));
    }",Maps a scalar value into an Observable and emits its values .,src/main/java/io/reactivex/internal/operators/observable/ObservableScalarXMap.java,"[{'Syntax': 'RxJavaPlugins.onAssembly(new ScalarXMapObservable<T, U>(value, mapper))', 'FunctionName': 'onAssembly', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n    @NonNull\n    public static <@NonNull T> Maybe<T> onAssembly(@NonNull Maybe<T> source) {\n        Function<? super Maybe, ? extends Maybe> f = onMaybeAssembly;\n        if (f != null) {\n            return apply(f, source);\n        }\n        return source;\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/plugins/RxJavaPlugins.java'}]"
6621cd98cda9bd4817b1116d,lightcouch/LightCouch,"private <V> V queryValue(Class<V> classOfV) {
		InputStream instream = null;
		try {  
			Reader reader = new InputStreamReader(instream = queryForStream(), Charsets.UTF_8);
			JsonArray array = new JsonParser().parse(reader).
							getAsJsonObject().get(""rows"").getAsJsonArray();
			if(array.size() != 1) { 
				throw new NoDocumentException(""Expecting a single result but was: "" + array.size());
			}
			return JsonToObject(gson, array.get(0), ""value"", classOfV);
		} finally {
			close(instream);
		}
	}",Queries for scalar values . Internal use .,src/main/java/org/lightcouch/View.java,"[{'Syntax': 'queryForStream()', 'FunctionName': 'queryForStream', 'ArgsCount': 0, 'MethodBody': 'public InputStream queryForStream() {\n\t\tURI uri = uriBuilder.build();\n\t\tif(allDocsKeys != null) { // bulk docs\n\t\t\treturn getStream(dbc.post(uri, allDocsKeys));\n\t\t}\n\t\t\n\t\treturn dbc.get(uri);\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/View.java'}, {'Syntax': 'new JsonParser().parse(reader).\n\t\t\t\t\t\t\tgetAsJsonObject().get(""rows"")', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'InputStream get(HttpGet httpGet) {\n\t\tHttpResponse response = executeRequest(httpGet); \n\t\treturn getStream(response);\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'JsonToObject(gson, array.get(0), ""value"", classOfV)', 'FunctionName': 'JsonToObject', 'ArgsCount': 4, 'MethodBody': 'public static <T> T JsonToObject(Gson gson, JsonElement elem, String key, Class<T> classType) {\n\t\treturn gson.fromJson(elem.getAsJsonObject().get(key), classType);\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbUtil.java'}, {'Syntax': 'array.get(0)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'InputStream get(HttpGet httpGet) {\n\t\tHttpResponse response = executeRequest(httpGet); \n\t\treturn getStream(response);\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbClientBase.java'}, {'Syntax': 'close(instream)', 'FunctionName': 'close', 'ArgsCount': 1, 'MethodBody': 'public static void close(HttpResponse response) {\n\t\ttry {\n\t\t\tclose(response.getEntity().getContent());\n\t\t} catch (Exception e) {}\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbUtil.java'}]"
6621cd98cda9bd4817b1116e,oblac/jodd,"protected void checkConnectionProvider() {
		final Connection connection = connectionProvider.getConnection();
		try {
			final DatabaseMetaData databaseMetaData = connection.getMetaData();
			String name = databaseMetaData.getDatabaseProductName();
			String version = databaseMetaData.getDatabaseProductVersion();

			if (log.isInfoEnabled()) {
				log.info(""Connected to database: "" + name + "" v"" + version);
			}
		} catch (SQLException sex) {
			log.error(""DB connection failed: "", sex);
		} finally {
			connectionProvider.closeConnection(connection);
		}
	}",Checks if connection provider can return a connection .,jodd-joy/src/main/java/jodd/joy/JoyDb.java,[]
6621cd98cda9bd4817b1116f,jboss/jboss-common-core,"public Object get(Object key) 
   {
      TimedEntry entry = (TimedEntry) entryMap.get(key);
      if( entry == null )
         return null;

      if( entry.isCurrent(now) == false )
      {   // Try to refresh the entry
         if( entry.refresh() == false )
         {   // Failed, remove the entry and return null
            entry.destroy();
            entryMap.remove(key);
            return null;
         }
      }
      Object value = entry.getValue();
      return value;
   }",Get the cache value for key if it has not expired . If the TimedEntry is expired its destroy method is called and then removed from the cache .,src/main/java/org/jboss/util/TimedCachePolicy.java,"[{'Syntax': 'entryMap.get(key)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(Object key) \n   {\n      TimedEntry entry = (TimedEntry) entryMap.get(key);\n      if( entry == null )\n         return null;\n\n      if( entry.isCurrent(now) == false )\n      {   // Try to refresh the entry\n         if( entry.refresh() == false )\n         {   // Failed, remove the entry and return null\n            entry.destroy();\n            entryMap.remove(key);\n            return null;\n         }\n      }\n      Object value = entry.getValue();\n      return value;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'entry.isCurrent(now)', 'FunctionName': 'isCurrent', 'ArgsCount': 1, 'MethodBody': 'public boolean isCurrent(long now);', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'entry.refresh()', 'FunctionName': 'refresh', 'ArgsCount': 0, 'MethodBody': 'public boolean refresh();', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'entry.destroy()', 'FunctionName': 'destroy', 'ArgsCount': 0, 'MethodBody': 'public void destroy();', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'entryMap.remove(key)', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': 'public void remove(Object key) \n   {\n      TimedEntry entry = (TimedEntry) entryMap.remove(key);\n      if( entry != null )\n         entry.destroy();\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public Object getValue();', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}]"
6621cd98cda9bd4817b11170,sialcasa/mvvmFX,"private <T, U> void clearMap(Map<T, Set<U>> map, BiConsumer<T, U> consumer) {
		for (T observable : map.keySet()) {
			for (U listener : map.get(observable)) {
				consumer.accept(observable, listener);
			}
		}
		map.clear();
	}",This method is used to clear the given map . To do this you need to implement a BiConsumer that calls the specific method to remove a listener from an observable .,mvvmfx-utils/src/main/java/de/saxsys/mvvmfx/utils/listener/ListenerManager.java,"[{'Syntax': 'map.keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic Set<String> keySet() {\n\t\t\treturn bundle.keySet();\n\t\t}', 'FileName': '/sialcasa/mvvmFX/mvvmfx/src/main/java/de/saxsys/mvvmfx/internal/viewloader/ResourceBundleManager.java'}, {'Syntax': 'map.get(observable)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': ""@Override\n\tpublic Object get(Object key) {\n\t\t// We don't need to remove garbage collected values here;\n\t\t// if they are garbage collected, the get() method returns null;\n\t\t// the next put() call with the same key removes the old value\n\t\t// automatically so that it can be completely garbage collected\n\t\treturn getReferenceObject((WeakReference) super.get(key));\n\t}"", 'FileName': '/sialcasa/mvvmFX/mvvmfx/src/main/java/de/saxsys/mvvmfx/internal/WeakValueHashMap.java'}, {'Syntax': 'consumer.accept(observable, listener)', 'FunctionName': 'accept', 'ArgsCount': 2, 'MethodBody': '@Override\n\tvoid accept(M model, String value);', 'FileName': '/sialcasa/mvvmFX/mvvmfx/src/main/java/de/saxsys/mvvmfx/utils/mapping/accessorfunctions/StringSetter.java'}, {'Syntax': 'map.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'void clear();', 'FileName': '/sialcasa/mvvmFX/mvvmfx/src/main/java/de/saxsys/mvvmfx/utils/notifications/NotificationCenter.java'}]"
6621cd98cda9bd4817b11171,agentsoz/jill,"private Belief getResultAtIndex(Set<Belief> results, int index) {
    Belief belief = null;
    if (!(results == null || index < 0 || index >= results.size())) {
      int idx = 0;
      for (Belief b : results) {
        if (idx == index) {
          belief = b;
          break;
        }
        idx++;
      }
    }
    return belief;
  }",Gets the result at the given index from the results set .,jill/src/main/java/io/github/agentsoz/jill/lang/PlanBindings.java,"[{'Syntax': 'results.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n    return cachedsize;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/lang/PlanBindings.java'}]"
6621cd98cda9bd4817b11172,rupertlssmith/lojix,"public String getErrors()
    {
        // Return the empty string if there are no errors.
        if (parsingErrors.isEmpty())
        {
            return """";
        }

        // Concatenate all the parsing errors together.
        String result = """";

        for (String s : parsingErrors)
        {
            result += s;
        }

        return result;
    }",Lists all the parsing errors from the most recent parsing in a string .,base/common/src/main/com/thesett/common/util/CommandLineParser.java,"[{'Syntax': 'parsingErrors.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': 'public boolean isEmpty()\n        {\n            return table.isEmpty();\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/unittests/com/thesett/common/util/doublemaps/SymbolTableTestBase.java'}]"
6621cd98cda9bd4817b11173,deeplearning4j/nd4j,"public static List<List<Double>> partitionVariable(List<Double> arr, int chunk) {
        int count = 0;
        List<List<Double>> ret = new ArrayList<List<Double>>();


        while (count < arr.size()) {

            List<Double> sublist = arr.subList(count, count + chunk);
            count += chunk;
            ret.add(sublist);

        }
        //All data sets must be same size
        for (List<Double> lists : ret) {
            if (lists.size() < chunk)
                ret.remove(lists);
        }
        return ret;
    }",This will partition the given whole variable data applyTransformToDestination in to the specified chunk number .,nd4j-common/src/main/java/org/nd4j/linalg/util/MathUtils.java,[]
6621cd98cda9bd4817b11174,Unidata/thredds,"private void scanForChildren() {
    if (debug) System.out.printf(""DirectoryBuilder.scanForChildren on %s "", dir);

    int count = 0;
    try (DirectoryStream<Path> ds = Files.newDirectoryStream(dir)) {
      for (Path p : ds) {
        BasicFileAttributes attr = Files.readAttributes(p, BasicFileAttributes.class);
        if (attr.isDirectory()) {
          children.add(new DirectoryBuilder(topCollectionName, p, attr, suffix));
          if (debug && (++count % 10 == 0)) System.out.printf(""%d "", count);
        }
      }
    } catch (IOException e) {
      e.printStackTrace();
    }
    if (debug) System.out.printf(""done=%d%n"", count);
    childrenConstructed = true;
  }",Scan for subdirectories make each into a DirectoryBuilder and add as a child,cdm/src/main/java/thredds/inventory/partition/DirectoryBuilder.java,[]
6621cd99cda9bd4817b11175,tiefaces/TieFaces,"public static Cell getPoiCellFromSheet(final int rowIndex, final int colIndex, final Sheet sheet1) {
		if ((sheet1 != null) && (sheet1.getRow(rowIndex) != null)) {
			return sheet1.getRow(rowIndex).getCell(colIndex);
		}
		return null;
	}",Gets the poi cell from sheet .,src/org/tiefaces/components/websheet/utility/CellUtility.java,[]
6621cd99cda9bd4817b11176,dschulten/hydra-java,"private boolean containsPropertyIncludeValue(String property) {
        return arrayContains(inputAnnotation.readOnly(), property)
                || arrayContains(inputAnnotation.hidden(), property)
                || arrayContains(inputAnnotation.include(), property);
    }",Find out if property is included by searching through all annotations .,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionInputParameter.java,"[{'Syntax': 'arrayContains(inputAnnotation.readOnly(), property)', 'FunctionName': 'arrayContains', 'ArgsCount': 2, 'MethodBody': 'private boolean arrayContains(String[] array, String toFind) {\n        if (array.length == 0) {\n            return false;\n        }\n        for (String item : array) {\n            if (toFind.equals(item)) {\n                return true;\n            }\n        }\n        return false;\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionInputParameter.java'}, {'Syntax': 'arrayContains(inputAnnotation.hidden(), property)', 'FunctionName': 'arrayContains', 'ArgsCount': 2, 'MethodBody': 'private boolean arrayContains(String[] array, String toFind) {\n        if (array.length == 0) {\n            return false;\n        }\n        for (String item : array) {\n            if (toFind.equals(item)) {\n                return true;\n            }\n        }\n        return false;\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionInputParameter.java'}, {'Syntax': 'arrayContains(inputAnnotation.include(), property)', 'FunctionName': 'arrayContains', 'ArgsCount': 2, 'MethodBody': 'private boolean arrayContains(String[] array, String toFind) {\n        if (array.length == 0) {\n            return false;\n        }\n        for (String item : array) {\n            if (toFind.equals(item)) {\n                return true;\n            }\n        }\n        return false;\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionInputParameter.java'}]"
6621cd99cda9bd4817b11177,GojaFramework/goja,"public static boolean isDateTime(String value) {
        String check =
                ""^(\\d{4})(/|-|\\.|年)(\\d{1,2})(/|-|\\.|月)(\\d{1,2})(日)?(\\s+\\d{1,2}(:|时)\\d{1,2}(:|分)?(\\d{1,2}(秒)?)?)?$"";// check = ""^(\\d{4})(/|-|\\.)(\\d{1,2})(/|-|\\.)(\\d{1,2})$"";
        return match(check, Pattern.CASE_INSENSITIVE, value);
    }",Tell the time,goja-core/src/main/java/goja/core/Validator.java,"[{'Syntax': 'match(check, Pattern.CASE_INSENSITIVE, value)', 'FunctionName': 'match', 'ArgsCount': 3, 'MethodBody': 'public static boolean match(String regex, int flags, String value) {\n        Pattern pattern = Pattern.compile(regex, flags);\n        return pattern.matcher(value).find();\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/Validator.java'}]"
6621cd99cda9bd4817b11178,cologneintelligence/FitGoodies,"public void remove(final AppenderAttachable logger, final String appenderName) {
		logger.removeAppender(CaptureAppender.getAppenderNameFor(appenderName));
	}",Removes a CaptureAppender from a logger .,fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/LogHelper.java,"[{'Syntax': 'logger.removeAppender(CaptureAppender.getAppenderNameFor(appenderName))', 'FunctionName': 'removeAppender', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic void removeAppender(final String arg0) {\n\t\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/test/java/de/cologneintelligence/fitgoodies/log4j/LogHelperTest.java'}, {'Syntax': 'CaptureAppender.getAppenderNameFor(appenderName)', 'FunctionName': 'getAppenderNameFor', 'ArgsCount': 1, 'MethodBody': 'public static String getAppenderNameFor(final String baseName) {\n\t\treturn baseName + ""-fitgoodiescapture"";\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/CaptureAppender.java'}]"
6621cd99cda9bd4817b11179,Unidata/thredds,"public File getExistingFileOrCache(String fileLocation) {
    File f = new File(fileLocation);
    if (f.exists()) return f;

    if (neverUseCache) return null;

    File fc = new File(makeCachePath(fileLocation));
    if (fc.exists()) return fc;

    return null;
  }",Looking for an existing file in cache or no,cdm/src/main/java/ucar/nc2/util/DiskCache2.java,[]
6621cd99cda9bd4817b1117a,streamsets/datacollector,"public PipelineFragmentEnvelopeJson createDraftPipelineFragment (
      String fragmentId,
      String description,
      List<StageConfigurationJson> stageInstances
  ) throws ApiException {
    Object postBody = stageInstances;
    byte[] postBinaryBody = null;

    // verify the required parameter 'pipelineId' is set
    if (fragmentId == null) {
      throw new ApiException(400, ""Missing the required parameter 'fragmentId' when calling createPipelineFragment"");
    }

    // create path and map variables
    String path = ""/v1/fragment/{fragmentId}"".replaceAll(""\\{format\\}"",""json"")
        .replaceAll(""\\{"" + ""fragmentId"" + ""\\}"", apiClient.escapeString(fragmentId.toString()));

    // query params
    List<Pair> queryParams = new ArrayList<Pair>();
    Map<String, String> headerParams = new HashMap<String, String>();
    Map<String, Object> formParams = new HashMap<String, Object>();

    queryParams.addAll(apiClient.parameterToPairs("""", ""description"", description));
    queryParams.addAll(apiClient.parameterToPairs("""", ""draft"", true));

    final String[] accepts = {
        ""application/json""
    };
    final String accept = apiClient.selectHeaderAccept(accepts);

    final String[] contentTypes = {

    };
    final String contentType = apiClient.selectHeaderContentType(contentTypes);

    String[] authNames = new String[] { ""basic"" };

    TypeRef returnType = new TypeRef<PipelineFragmentEnvelopeJson>() {};
    return apiClient.invokeAPI(path, ""PUT"", queryParams, postBody, postBinaryBody, headerParams, formParams,
        accept, contentType, authNames, returnType);
  }",Add a new Pipeline Fragment Configuration to the store,client-api/src/main/java/com/streamsets/datacollector/client/api/StoreApi.java,[]
6621cd99cda9bd4817b1117b,sharneng/gm4java,"public GMOperation font(final String style, final int size, final String color) {
        if (isBlank(style)) {
            throw new IllegalArgumentException(""Text font style must be defined"");
        }
        if (isBlank(color)) {
            throw new IllegalArgumentException(""Text font color must be defined"");
        }
        font(style);
        pointsize(size);
        fill(color);
        return this;
    }",Defines font for text overlay .,src/main/java/org/gm4java/im4java/GMOperation.java,"[{'Syntax': 'isBlank(style)', 'FunctionName': 'isBlank', 'ArgsCount': 1, 'MethodBody': 'private static boolean isBlank(String s) {\n        return (s == null) || s.length() == 0;\n    }', 'FileName': '/sharneng/gm4java/src/main/java/org/gm4java/im4java/GMOperation.java'}, {'Syntax': 'isBlank(color)', 'FunctionName': 'isBlank', 'ArgsCount': 1, 'MethodBody': 'private static boolean isBlank(String s) {\n        return (s == null) || s.length() == 0;\n    }', 'FileName': '/sharneng/gm4java/src/main/java/org/gm4java/im4java/GMOperation.java'}]"
6621cd99cda9bd4817b1117c,markhobson/microbrowser,"public static URL newUrl(String spec)
	{
		try
		{
			return new URL(spec);
		}
		catch (MalformedURLException exception)
		{
			throw new IllegalArgumentException(""Invalid URL: "" + spec);
		}
	}",Creates a URL for the specified string representation .,spi/src/main/java/org/hobsoft/microbrowser/spi/Urls.java,[]
6621cd99cda9bd4817b1117d,playframework/playframework,"public GuiceApplicationBuilder load(GuiceableModule... modules) {
    return newBuilder(delegate.load(Scala.varargs(modules)));
  }",Override the module loader with the given guiceable modules .,core/play-guice/src/main/java/play/inject/guice/GuiceApplicationBuilder.java,"[{'Syntax': 'newBuilder(delegate.load(Scala.varargs(modules)))', 'FunctionName': 'newBuilder', 'ArgsCount': 1, 'MethodBody': 'protected abstract Self newBuilder(Delegate delegate);', 'FileName': '/playframework/playframework/core/play-guice/src/main/java/play/inject/guice/GuiceBuilder.java'}, {'Syntax': 'delegate.load(Scala.varargs(modules))', 'FunctionName': 'load', 'ArgsCount': 1, 'MethodBody': '@Override\n  public final Application load(ApplicationLoader.Context context) {\n    return builder(context).build();\n  }', 'FileName': '/playframework/playframework/core/play-guice/src/main/java/play/inject/guice/GuiceApplicationLoader.java'}, {'Syntax': 'Scala.varargs(modules)', 'FunctionName': 'varargs', 'ArgsCount': 1, 'MethodBody': '@SafeVarargs\n  public static <T> scala.collection.immutable.Seq<T> varargs(T... array) {\n    return toSeq(array);\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/libs/Scala.java'}]"
6621cd99cda9bd4817b1117e,RestComm/jain-slee,"public void remove() throws InvalidStateException {
		if (!this.state.isInactive()) {
			throw new InvalidStateException(""entity "" + name + "" is in state: ""
						+ this.state);
		}
		object.raUnconfigure();
		if (object.isFaultTolerant()) {
			object.unsetFaultTolerantResourceAdaptorContext();
			ftResourceAdaptorContext.shutdown();
		}
		object.unsetResourceAdaptorContext();
		this.sleeContainer.getTraceManagement()
				.deregisterNotificationSource(this.getNotificationSource());
		state = null;
	}",Removes the entity it will unconfigure and unset the ra context the entity object can not be reused,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorEntityImpl.java,"[{'Syntax': 'this.state.isInactive()', 'FunctionName': 'isInactive', 'ArgsCount': 0, 'MethodBody': 'public boolean isInactive() {\n        return state == SERVICE_INACTIVE;\n    }', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ServiceState.java'}, {'Syntax': 'object.raUnconfigure()', 'FunctionName': 'raUnconfigure', 'ArgsCount': 0, 'MethodBody': 'public void raUnconfigure() { }', 'FileName': '/RestComm/jain-slee/tools/statistics/ra/src/main/java/org/restcomm/slee/resource/statistics/StatisticsResourceAdaptor.java'}, {'Syntax': 'object.isFaultTolerant()', 'FunctionName': 'isFaultTolerant', 'ArgsCount': 0, 'MethodBody': 'public boolean isFaultTolerant() {\n\t\treturn this.object instanceof FaultTolerantResourceAdaptor;\n\t}', 'FileName': '/RestComm/jain-slee/container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java'}, {'Syntax': 'object.unsetFaultTolerantResourceAdaptorContext()', 'FunctionName': 'unsetFaultTolerantResourceAdaptorContext', 'ArgsCount': 0, 'MethodBody': 'public void unsetFaultTolerantResourceAdaptorContext();', 'FileName': '/RestComm/jain-slee/container/fault-tolerant-ra/api/src/main/java/org/mobicents/slee/resource/cluster/FaultTolerantResourceAdaptor.java'}, {'Syntax': 'ftResourceAdaptorContext.shutdown()', 'FunctionName': 'shutdown', 'ArgsCount': 0, 'MethodBody': 'public void shutdown() throws ManagementConsoleException;', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/sleestate/SleeStateService.java'}, {'Syntax': 'object.unsetResourceAdaptorContext()', 'FunctionName': 'unsetResourceAdaptorContext', 'ArgsCount': 0, 'MethodBody': 'public void unsetResourceAdaptorContext() {\r\n\t\traContext = null;\r\n\t\ttracer = null;\r\n\r\n\t\tsleeContainer = null;\r\n\t\tresourceManagement = null;\r\n\t}', 'FileName': '/RestComm/jain-slee/tools/statistics/ra/src/main/java/org/restcomm/slee/resource/statistics/StatisticsResourceAdaptor.java'}, {'Syntax': 'this.sleeContainer.getTraceManagement()\r\n\t\t\t\t.deregisterNotificationSource(this.getNotificationSource())', 'FunctionName': 'deregisterNotificationSource', 'ArgsCount': 1, 'MethodBody': 'public void deregisterNotificationSource(final NotificationSource src) {\r\n\t\t\r\n\t\tthis.tracerStorage.remove(src);\r\n\t\t\r\n\t}', 'FileName': '/RestComm/jain-slee/container/common/src/main/java/org/mobicents/slee/container/management/jmx/TraceMBeanImpl.java'}, {'Syntax': 'this.sleeContainer.getTraceManagement()', 'FunctionName': 'getTraceManagement', 'ArgsCount': 0, 'MethodBody': 'public TraceManagement getTraceManagement() {\n\t\treturn traceMBeanImpl;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'this.getNotificationSource()', 'FunctionName': 'getNotificationSource', 'ArgsCount': 0, 'MethodBody': 'public NotificationSource getNotificationSource() {\n        return notificationSource;\n    }', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/Alarm.java'}]"
6621cd99cda9bd4817b1117f,deeplearning4j/nd4j,"static public BigDecimal sqrt(final BigDecimal x) {
        if (x.compareTo(BigDecimal.ZERO) < 0) {
            throw new ArithmeticException(""negative argument "" + x.toString() + "" of square root"");
        }
        return root(2, x);
    }",The square root .,nd4j-common/src/main/java/org/nd4j/linalg/util/BigDecimalMath.java,[]
6621cd99cda9bd4817b11180,wro4j/wro4j,"private void identifyDuplicateGroupNames(final Collection<Group> groups) {
    LOG.debug(""identifyDuplicateGroupNames"");
    final List<String> groupNames = new ArrayList<String>();
    for (final Group group : groups) {
      if (groupNames.contains(group.getName())) {
        throw new WroRuntimeException(""Duplicate group name detected: "" + group.getName());
      }
      groupNames.add(group.getName());
    }
  }",Identify duplicate group names .,wro4j-core/src/main/java/ro/isdc/wro/model/WroModel.java,"[{'Syntax': 'group.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return this.name;\r\n  }', 'FileName': '/wro4j/wro4j/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/processor/support/csslint/CssRule.java'}, {'Syntax': 'group.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return this.name;\r\n  }', 'FileName': '/wro4j/wro4j/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/processor/support/csslint/CssRule.java'}, {'Syntax': 'groupNames.add(group.getName())', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(final String uri) {\n    notNull(uri);\n    LOG.debug(""authorize: {}"", uri);\n    //ignore query string added to authorized resources list.\n    authorizedResources.add(WroUtil.removeQueryString(uri));\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/model/resource/support/DefaultResourceAuthorizationManager.java'}, {'Syntax': 'group.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return this.name;\r\n  }', 'FileName': '/wro4j/wro4j/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/processor/support/csslint/CssRule.java'}]"
6621cd99cda9bd4817b11181,1337joe/cubesensors-for-java,"private static State extractValues(final List<Object> values, final Map<ExpectedLabels, Integer> map) {
		final ZonedDateTime time = ZonedDateTime.parse((String) values.get(map.get(ExpectedLabels.time)));
		final int temp = safeInt((Integer) values.get(map.get(ExpectedLabels.temp)));
		final int pressure = safeInt((Integer) values.get(map.get(ExpectedLabels.pressure)));
		final int humidity = safeInt((Integer) values.get(map.get(ExpectedLabels.humidity)));
		final int voc = safeInt((Integer) values.get(map.get(ExpectedLabels.voc)));
		final int light = safeInt((Integer) values.get(map.get(ExpectedLabels.light)));
		final int noise = safeInt((Integer) values.get(map.get(ExpectedLabels.noise)));
		final int noisedba = safeInt((Integer) values.get(map.get(ExpectedLabels.noisedba)));
		final int battery = safeInt((Integer) values.get(map.get(ExpectedLabels.battery)));
		final boolean shake = safeBoolean((Boolean) values.get(map.get(ExpectedLabels.shake)));
		final boolean cable = safeBoolean((Boolean) values.get(map.get(ExpectedLabels.cable)));
		final int vocResistance = safeInt((Integer) values.get(map.get(ExpectedLabels.voc_resistance)));
		final int rssi = safeInt((Integer) values.get(map.get(ExpectedLabels.rssi)));
		return new State(time, temp, pressure, humidity, voc, light, noise, noisedba, battery, shake, cable, vocResistance, rssi);
	}",Uses the provided label - index mapping to extract state values and create a new State object .,src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java,"[{'Syntax': 'values.get(map.get(ExpectedLabels.time))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.time)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.temp)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.temp))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.temp)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.pressure)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.pressure))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.pressure)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.humidity)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.humidity))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.humidity)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.voc)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.voc))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.voc)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.light)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.light))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.light)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.noise)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.noise))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.noise)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.noisedba)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.noisedba))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.noisedba)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.battery)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.battery))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.battery)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeBoolean((Boolean) values.get(map.get(ExpectedLabels.shake)))', 'FunctionName': 'safeBoolean', 'ArgsCount': 1, 'MethodBody': 'private static boolean safeBoolean(Boolean b) {\r\n\t\treturn b == null ? false : b;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.shake))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.shake)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeBoolean((Boolean) values.get(map.get(ExpectedLabels.cable)))', 'FunctionName': 'safeBoolean', 'ArgsCount': 1, 'MethodBody': 'private static boolean safeBoolean(Boolean b) {\r\n\t\treturn b == null ? false : b;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.cable))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.cable)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.voc_resistance)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.voc_resistance))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.voc_resistance)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'safeInt((Integer) values.get(map.get(ExpectedLabels.rssi)))', 'FunctionName': 'safeInt', 'ArgsCount': 1, 'MethodBody': 'private static int safeInt(Integer i) {\r\n\t\treturn i == null ? 0 : i;\r\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java'}, {'Syntax': 'values.get(map.get(ExpectedLabels.rssi))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}, {'Syntax': 'map.get(ExpectedLabels.rssi)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'private String get(String key) {\n\t\treturn Preferences.userRoot().get(key, null);\n\t}', 'FileName': '/1337joe/cubesensors-for-java/src/main/java/com/w3asel/cubesensors/util/PrefAuthPersistence.java'}]"
6621cd99cda9bd4817b11182,playframework/playframework,"public static List<Lang> availables(Application app) {
    play.api.i18n.Langs langs = app.injector().instanceOf(play.api.i18n.Langs.class);
    List<play.api.i18n.Lang> availableLangs = Scala.asJava(langs.availables());
    return availableLangs.stream().map(Lang::new).collect(toList());
  }",Retrieve Lang availables from the application configuration .,core/play/src/main/java/play/i18n/Lang.java,"[{'Syntax': 'app.injector().instanceOf(play.api.i18n.Langs.class)', 'FunctionName': 'instanceOf', 'ArgsCount': 1, 'MethodBody': '@Override\n  public <T> T instanceOf(Class<T> clazz) {\n    return injector.instanceOf(clazz);\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/inject/DelegateInjector.java'}, {'Syntax': 'app.injector()', 'FunctionName': 'injector', 'ArgsCount': 0, 'MethodBody': 'public Injector injector() {\n    return delegate.injector().instanceOf(Injector.class);\n  }', 'FileName': '/playframework/playframework/core/play-guice/src/main/java/play/inject/guice/GuiceBuilder.java'}, {'Syntax': 'Scala.asJava(langs.availables())', 'FunctionName': 'asJava', 'ArgsCount': 1, 'MethodBody': 'public static <K, V> java.util.Map<K, V> asJava(scala.collection.Map<K, V> scalaMap) {\n    return scala.jdk.javaapi.CollectionConverters.asJava(scalaMap);\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/libs/Scala.java'}, {'Syntax': 'langs.availables()', 'FunctionName': 'availables', 'ArgsCount': 0, 'MethodBody': 'public List<Lang> availables() {\n    return availables;\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/i18n/Langs.java'}, {'Syntax': 'availableLangs.stream()', 'FunctionName': 'stream', 'ArgsCount': 0, 'MethodBody': '@Override\n  public CompletionStage<WSResponse> stream() {\n    return request.stream().thenApply(responseFunction);\n  }', 'FileName': '/playframework/playframework/transport/client/play-ahc-ws/src/main/java/play/libs/ws/ahc/AhcWSRequest.java'}]"
6621cd99cda9bd4817b11183,Unidata/thredds,"public void finish(CancelTask cancelTask) throws IOException {
    datasetManager.scan(true); // Make the list of Datasets, by scanning if needed.
    cacheDirty = true;
    makeDatasets(cancelTask);

    //ucar.unidata.io.RandomAccessFile.setDebugAccess( true);
    buildNetcdfDataset(cancelTask);
    //ucar.unidata.io.RandomAccessFile.setDebugAccess( false);
  }",all elements are processed finish construction,cdm/src/main/java/ucar/nc2/ncml/Aggregation.java,[]
6621cd99cda9bd4817b11184,arnohaase/a-foundation,"public static <T> AOption<T> fromNullable(T nullable) {
        return nullable != null ? some(nullable) : AOption.<T>none();
    }",This is a convenience method that creates an AOption based on Java conventions .,a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/AOption.java,"[{'Syntax': 'some(nullable)', 'FunctionName': 'some', 'ArgsCount': 1, 'MethodBody': 'public static <T> AOption<T> some(T el) {\n        return new ASome<>(el);\n    }', 'FileName': '/arnohaase/a-foundation/a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/AOption.java'}, {'Syntax': 'AOption.<T>none()', 'FunctionName': 'none', 'ArgsCount': 0, 'MethodBody': '@SuppressWarnings(""unchecked"")\n    public static <T> AOption<T> none() {\n        return  (AOption<T>) ANone.INSTANCE;\n    }', 'FileName': '/arnohaase/a-foundation/a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/AOption.java'}]"
6621cd99cda9bd4817b11185,cologneintelligence/FitGoodies,"public File getLastFile() throws FileNotFoundException {
		File[] files = directory.listFiles(filter);
		if (files == null || files.length == 0) {
			throw new FileNotFoundException();
		}

		return files[files.length - 1];
	}",Returns the last matching file .,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSelector.java,"[{'Syntax': 'directory.listFiles(filter)', 'FunctionName': 'listFiles', 'ArgsCount': 1, 'MethodBody': 'private void listFiles(File dir) {\n\t\tFile[] files = dir.listFiles();\n\t\tif (files != null) {\n\t\t\tfor (File file : files) {\n\t\t\t\tif (file.isDirectory()) {\n\t\t\t\t\tlistFiles(file);\n\t\t\t\t} else if (filter.accept(file)) {\n\t\t\t\t\tallFiles.add(new FileInformation(file.getAbsoluteFile()));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/runners/DirectoryFilter.java'}]"
6621cd99cda9bd4817b11186,ngageoint/geopackage-android,"public List<FeatureIndexType> getIndexedTypes() {
        List<FeatureIndexType> indexed = new ArrayList<>();
        for (FeatureIndexType type : indexLocationQueryOrder) {
            if (isIndexed(type)) {
                indexed.add(type);
            }
        }
        return indexed;
    }",Get the indexed types that are currently indexed,geopackage-sdk/src/main/java/mil/nga/geopackage/features/index/FeatureIndexManager.java,"[{'Syntax': 'isIndexed(type)', 'FunctionName': 'isIndexed', 'ArgsCount': 1, 'MethodBody': 'public boolean isIndexed(FeatureIndexType type) {\n        boolean indexed = false;\n        if (type == null) {\n            indexed = isIndexed();\n        } else {\n            switch (type) {\n                case GEOPACKAGE:\n                    indexed = featureTableIndex.isIndexed();\n                    break;\n                case METADATA:\n                    indexed = getRequiredFeatureIndexer().isIndexed();\n                    break;\n                case RTREE:\n                    indexed = rTreeIndexTableDao.has();\n                    break;\n                default:\n                    throw new GeoPackageException(""Unsupported FeatureIndexType: "" + type);\n            }\n        }\n        return indexed;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/features/index/FeatureIndexManager.java'}]"
6621cd99cda9bd4817b11187,oblac/jodd,"public Class resolveComponentType(final boolean declared) {
		Class componentType = null;

		Getter getter = getGetter(declared);

		if (getter != null) {
			componentType = getter.getGetterRawComponentType();
		}

		if (componentType == null) {
			FieldDescriptor fieldDescriptor = getFieldDescriptor();

			if (fieldDescriptor != null) {
				componentType = fieldDescriptor.getRawComponentType();
			}
		}

		return componentType;
	}",Resolves component type for given property descriptor .,jodd-bean/src/main/java/jodd/introspector/PropertyDescriptor.java,[]
6621cd99cda9bd4817b11188,oaqa/baseqa,"public StringList getNamedEntityTypes() {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_namedEntityTypes == null)
      jcasType.jcas.throwFeatMissing(""namedEntityTypes"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    return (StringList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_namedEntityTypes)));}",getter for namedEntityTypes - gets List of Named Entity types associated with this concept .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java,[]
6621cd99cda9bd4817b11189,liveontologies/elk-reasoner,"protected Taxonomy<ElkClass> restoreTaxonomy()
			throws ElkInconsistentOntologyException, ElkException {

		ruleAndConclusionStats.reset();

		// also restores saturation and cleans the taxonomy if necessary
		restoreConsistencyCheck();
		if (consistencyCheckingState.isInconsistent()) {
			throw new ElkInconsistentOntologyException();
		}

		complete(stageManager.classTaxonomyComputationStage);

		return classTaxonomyState.getTaxonomy();
	}",Complete the taxonomy computation stage and the stages it depends on if it has not been done yet .,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java,"[{'Syntax': 'ruleAndConclusionStats.reset()', 'FunctionName': 'reset', 'ArgsCount': 0, 'MethodBody': 'public synchronized void reset() {\n\t\tcurrentStartCpuTime = -1;\n\t\tcurrentStartWallTime = -1;\n\t\ttotalCpuTime = 0;\n\t\ttotalWallTime = 0;\n\t\tmeasurements = 0;\n\t\tisRunning = false;\n\t\tthreadCount = 0;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-logging/src/main/java/org/semanticweb/elk/util/logging/ElkTimer.java'}, {'Syntax': 'restoreConsistencyCheck()', 'FunctionName': 'restoreConsistencyCheck', 'ArgsCount': 0, 'MethodBody': 'private void restoreConsistencyCheck() throws ElkException {\n\t\truleAndConclusionStats.reset();\n\t\trestoreSaturation();\n\t\tcomplete(stageManager.consistencyCheckingStage);\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java'}, {'Syntax': 'consistencyCheckingState.isInconsistent()', 'FunctionName': 'isInconsistent', 'ArgsCount': 0, 'MethodBody': 'public boolean isInconsistent() {\n\t\treturn isOwlThingInconsistent_ || isTopObjectPropertyInBottom_\n\t\t\t\t|| !inconsistentIndividuals_.isEmpty();\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/consistency/ConsistencyCheckingState.java'}, {'Syntax': 'complete(stageManager.classTaxonomyComputationStage)', 'FunctionName': 'complete', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic void complete(ReasonerStage stage) throws ElkException {\n\t\tif (!stage.isCompleted()) {\n\n\t\t\t// TODO: avoid recursive call, use accumulator\n\t\t\tfor (ReasonerStage dependentStage : stage.getPreStages()) {\n\t\t\t\tcomplete(dependentStage);\n\t\t\t}\n\t\t\texecute(stage);\n\t\t}\n\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractStageExecutor.java'}, {'Syntax': 'classTaxonomyState.getTaxonomy()', 'FunctionName': 'getTaxonomy', 'ArgsCount': 0, 'MethodBody': 'T getTaxonomy() {\n\t\treturn taxonomy_;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/test/java/org/semanticweb/elk/reasoner/TaxonomyEntailment.java'}]"
6621cd99cda9bd4817b1118a,wildfly/wildfly,"private void addClass(Class cls)
            throws RMIIIOPViolationException, IRConstructionException {
        if (cls.isPrimitive())
            return; // No need to add primitives.

        if (cls.isArray()) {
            // Add array mapping
            addArray(cls);
        } else if (cls.isInterface()) {
            if (!RmiIdlUtil.isAbstractValueType(cls)) {
                // Analyse the interface
                InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

                // Add analyzed interface (which may be abstract)
                addInterface(ia);
            } else {
                // Analyse the value
                ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

                // Add analyzed value
                addValue(va);
            }
        } else if (Exception.class.isAssignableFrom(cls)) { // Exception type.
            // Analyse the exception
            ExceptionAnalysis ea = ExceptionAnalysis.getExceptionAnalysis(cls);

            // Add analyzed exception
            addException(ea);
        } else { // Got to be a value type.
            // Analyse the value
            ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

            // Add analyzed value
            addValue(va);
        }
    }",Map the class and add its IIOP mapping to the repository .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java,"[{'Syntax': 'addArray(cls)', 'FunctionName': 'addArray', 'ArgsCount': 1, 'MethodBody': 'private ValueBoxDefImpl addArray(Class cls)\n            throws RMIIIOPViolationException, IRConstructionException {\n        if (!cls.isArray())\n            throw IIOPLogger.ROOT_LOGGER.classIsNotArray(cls.getName());\n\n        ValueBoxDefImpl vbDef;\n\n        // Lookup: Has it already been added?\n        vbDef = (ValueBoxDefImpl) arrayMap.get(cls);\n        if (vbDef != null)\n            return vbDef; // Yes, just return it.\n\n        int dimensions = 0;\n        Class compType = cls;\n\n        do {\n            compType = compType.getComponentType();\n            ++dimensions;\n        } while (compType.isArray());\n\n        String typeName;\n        String moduleName;\n        TypeCode typeCode;\n\n        if (compType.isPrimitive()) {\n            if (compType == Boolean.TYPE) {\n                typeName = ""boolean"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_boolean);\n            } else if (compType == Character.TYPE) {\n                typeName = ""wchar"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_wchar);\n            } else if (compType == Byte.TYPE) {\n                typeName = ""octet"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_octet);\n            } else if (compType == Short.TYPE) {\n                typeName = ""short"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_short);\n            } else if (compType == Integer.TYPE) {\n                typeName = ""long"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_long);\n            } else if (compType == Long.TYPE) {\n                typeName = ""long_long"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_longlong);\n            } else if (compType == Float.TYPE) {\n                typeName = ""float"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_float);\n            } else if (compType == Double.TYPE) {\n                typeName = ""double"";\n                typeCode = orb.get_primitive_tc(TCKind.tk_double);\n            } else {\n                throw IIOPLogger.ROOT_LOGGER.unknownPrimitiveType(compType.getName());\n            }\n\n            moduleName = ""org.omg.boxedRMI"";\n        } else {\n            typeCode = getTypeCode(compType); // map the component type.\n\n            if (compType == String.class)\n                typeName = getJavaLangString().name();\n            else if (compType == Object.class)\n                typeName = getJavaLang_Object().name();\n            else if (compType == Class.class)\n                typeName = getJavaxRmiCORBAClassDesc().name();\n            else if (compType == java.io.Serializable.class)\n                typeName = getJavaIoSerializable().name();\n            else if (compType == java.io.Externalizable.class)\n                typeName = getJavaIoExternalizable().name();\n            else if (compType.isInterface() &&\n                    !RmiIdlUtil.isAbstractValueType(compType))\n                typeName = ((InterfaceDefImpl) interfaceMap.get(compType)).name();\n            else if (Exception.class.isAssignableFrom(compType)) // exception type\n                typeName = ((ExceptionDefImpl) exceptionMap.get(compType)).name();\n            else // must be value type\n                typeName = ((ValueDefImpl) valueMap.get(compType)).name();\n\n            moduleName = ""org.omg.boxedRMI."" + compType.getPackage().getName();\n        }\n\n        // Get module to add array to.\n        ModuleDefImpl m = ensurePackageExists(moduleName);\n\n        // Create an array of the types for the dimensions\n        Class[] types = new Class[dimensions];\n        types[dimensions - 1] = cls;\n        for (int i = dimensions - 2; i >= 0; --i)\n            types[i] = types[i + 1].getComponentType();\n\n        // Create boxed sequences for all dimensions.\n        for (int i = 0; i < dimensions; ++i) {\n            Class type = types[i];\n\n            typeCode = orb.create_sequence_tc(0, typeCode);\n            vbDef = (ValueBoxDefImpl) arrayMap.get(type);\n            if (vbDef == null) {\n                String id = Util.getIRIdentifierOfClass(type);\n\n                SequenceDefImpl sdi = new SequenceDefImpl(typeCode, impl);\n\n                String name = ""seq"" + (i + 1) + ""_"" + typeName;\n//            TypeCode boxTypeCode = new TypeCodeImpl(TCKind._tk_value_box,\n//                                                    id, name, typeCode);\n                TypeCode boxTypeCode = orb.create_value_box_tc(id, name, typeCode);\n                vbDef = new ValueBoxDefImpl(id, name, ""1.0"", m, boxTypeCode, impl);\n\n                addTypeCode(type, vbDef.type());\n                m.add(name, vbDef);\n                impl.putSequenceImpl(id, typeCode, sdi, vbDef);\n\n                arrayMap.put(type, vbDef); // Remember we mapped this.\n\n                typeCode = boxTypeCode;\n            } else\n                typeCode = vbDef.type();\n        }\n\n        // Return the box of highest dimension.\n        return vbDef;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java'}, {'Syntax': 'RmiIdlUtil.isAbstractValueType(cls)', 'FunctionName': 'isAbstractValueType', 'ArgsCount': 1, 'MethodBody': 'public static boolean isAbstractValueType(Class type) {\n\n        if (!type.isInterface())\n            return false;\n\n        if (org.omg.CORBA.Object.class.isAssignableFrom(type))\n            return false;\n\n        boolean cannotBeRemote = false;\n        boolean cannotBeAbstractInterface = false;\n\n        if (java.rmi.Remote.class.isAssignableFrom(type)) {\n            cannotBeAbstractInterface = true;\n        } else {\n            cannotBeRemote = true;\n        }\n\n        Iterator methodIterator = Arrays.asList(type.getMethods()).iterator();\n\n        while (methodIterator.hasNext()) {\n            Method m = (Method) methodIterator.next();\n\n            if (!throwsRemoteException(m)) {\n                cannotBeAbstractInterface = true;\n                cannotBeRemote = true;\n                break;\n            }\n\n            Iterator it = Arrays.asList(m.getExceptionTypes()).iterator();\n\n            while (it.hasNext()) {\n                Class exception = (Class) it.next();\n\n                if (!isRMIIDLExceptionType(exception)) {\n                    cannotBeRemote = true;\n                    break;\n                }\n            }\n        }\n\n        if (!cannotBeRemote) {\n            Iterator fieldIterator = Arrays.asList(type.getFields()).iterator();\n\n            while (fieldIterator.hasNext()) {\n                Field f = (Field) fieldIterator.next();\n\n                if (f.getType().isPrimitive())\n                    continue;\n                if (f.getType().equals(String.class))\n                    continue;\n                cannotBeRemote = true;\n                break;\n            }\n        }\n        return cannotBeRemote && cannotBeAbstractInterface;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/RmiIdlUtil.java'}, {'Syntax': 'InterfaceAnalysis.getInterfaceAnalysis(cls)', 'FunctionName': 'getInterfaceAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static InterfaceAnalysis getInterfaceAnalysis(Class cls) throws RMIIIOPViolationException {\n        return (InterfaceAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/InterfaceAnalysis.java'}, {'Syntax': 'addInterface(ia)', 'FunctionName': 'addInterface', 'ArgsCount': 1, 'MethodBody': 'private InterfaceDefImpl addInterface(InterfaceAnalysis ia)\n            throws RMIIIOPViolationException, IRConstructionException {\n        InterfaceDefImpl iDef;\n        Class cls = ia.getCls();\n\n        // Lookup: Has it already been added?\n        iDef = (InterfaceDefImpl) interfaceMap.get(cls);\n        if (iDef != null)\n            return iDef; // Yes, just return it.\n\n        // Get module to add interface to.\n        ModuleDefImpl m = ensurePackageExists(cls.getPackage().getName());\n\n        // Add superinterfaces\n        String[] base_interfaces = addInterfaces(ia);\n\n        // Create the interface\n        String base = cls.getName();\n        base = base.substring(base.lastIndexOf(\'.\') + 1);\n        base = Util.javaToIDLName(base);\n\n        iDef = new InterfaceDefImpl(ia.getRepositoryId(),\n                base, ""1.0"", m,\n                base_interfaces, impl);\n        addTypeCode(cls, iDef.type());\n        m.add(base, iDef);\n        interfaceMap.put(cls, iDef); // Remember we mapped this.\n\n        // Fill in constants\n        addConstants(iDef, ia);\n\n        // Add attributes\n        addAttributes(iDef, ia);\n\n        // Fill in operations\n        addOperations(iDef, ia);\n\n        return iDef;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java'}, {'Syntax': 'ValueAnalysis.getValueAnalysis(cls)', 'FunctionName': 'getValueAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static ValueAnalysis getValueAnalysis(Class cls)  throws RMIIIOPViolationException {\n        return (ValueAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ValueAnalysis.java'}, {'Syntax': 'addValue(va)', 'FunctionName': 'addValue', 'ArgsCount': 1, 'MethodBody': 'private ValueDefImpl addValue(ValueAnalysis va)\n            throws RMIIIOPViolationException, IRConstructionException {\n        ValueDefImpl vDef;\n        Class cls = va.getCls();\n\n        // Lookup: Has it already been added?\n        vDef = (ValueDefImpl) valueMap.get(cls);\n        if (vDef != null)\n            return vDef; // Yes, just return it.\n\n        // Get module to add value to.\n        ModuleDefImpl m = ensurePackageExists(cls.getPackage().getName());\n\n        // Add implemented interfaces\n        String[] supported_interfaces = addInterfaces(va);\n\n        // Add abstract base valuetypes\n        String[] abstract_base_valuetypes = addAbstractBaseValuetypes(va);\n\n        // Add superclass\n        ValueDefImpl superValue = null;\n        ValueAnalysis superAnalysis = va.getSuperAnalysis();\n        if (superAnalysis != null)\n            superValue = addValue(superAnalysis);\n\n        // Create the value\n        String base = cls.getName();\n        base = base.substring(base.lastIndexOf(\'.\') + 1);\n        base = Util.javaToIDLName(base);\n\n        TypeCode baseTypeCode;\n        if (superValue == null)\n            baseTypeCode = orb.get_primitive_tc(TCKind.tk_null);\n        else\n            baseTypeCode = superValue.type();\n\n        vDef = new ValueDefImpl(va.getRepositoryId(), base, ""1.0"",\n                m,\n                va.isAbstractValue(),\n                va.isCustom(),\n                supported_interfaces,\n                abstract_base_valuetypes,\n                baseTypeCode,\n                impl);\n        addTypeCode(cls, vDef.type());\n        m.add(base, vDef);\n        valueMap.put(cls, vDef); // Remember we mapped this.\n\n        // Fill in constants.\n        addConstants(vDef, va);\n\n        // Add value members\n        ValueMemberAnalysis[] vmas = va.getMembers();\n        for (int i = 0; i < vmas.length; ++i) {\n            ValueMemberDefImpl vmDef;\n            String vmid = va.getMemberRepositoryId(vmas[i].getJavaName());\n            String vmName = vmas[i].getIDLName();\n\n            Class vmCls = vmas[i].getCls();\n            TypeCode typeCode = getTypeCode(vmCls);\n\n            boolean vmPublic = vmas[i].isPublic();\n\n            vmDef = new ValueMemberDefImpl(vmid, vmName, ""1.0"",\n                    typeCode, vmPublic, vDef, impl);\n            vDef.add(vmName, vmDef);\n        }\n\n        // Add attributes\n        addAttributes(vDef, va);\n\n        // TODO: Fill in operations.\n\n        return vDef;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java'}, {'Syntax': 'Exception.class.isAssignableFrom(cls)', 'FunctionName': 'isAssignableFrom', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean isAssignableFrom(Class<?> fromClass) {\n        return isAssignableFrom(getClassName(), fromClass);\n    }', 'FileName': '/wildfly/wildfly/weld/subsystem/src/main/java/org/jboss/as/weld/discovery/WeldClassFileInfo.java'}, {'Syntax': 'ExceptionAnalysis.getExceptionAnalysis(cls)', 'FunctionName': 'getExceptionAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static ExceptionAnalysis getExceptionAnalysis(Class cls)\n            throws RMIIIOPViolationException {\n        return (ExceptionAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ExceptionAnalysis.java'}, {'Syntax': 'addException(ea)', 'FunctionName': 'addException', 'ArgsCount': 1, 'MethodBody': 'private ExceptionDefImpl addException(ExceptionAnalysis ea)\n            throws RMIIIOPViolationException, IRConstructionException {\n        ExceptionDefImpl eDef;\n        Class cls = ea.getCls();\n\n        // Lookup: Has it already been added?\n        eDef = (ExceptionDefImpl) exceptionMap.get(cls);\n        if (eDef != null)\n            return eDef; // Yes, just return it.\n\n        // 1.3.7.1: map to value\n        ValueDefImpl vDef = addValue(ea);\n\n        // 1.3.7.2: map to exception\n        ModuleDefImpl m = ensurePackageExists(cls.getPackage().getName());\n        String base = cls.getName();\n        base = base.substring(base.lastIndexOf(\'.\') + 1);\n        if (base.endsWith(""Exception""))\n            base = base.substring(0, base.length() - 9);\n        base = Util.javaToIDLName(base + ""Ex"");\n\n        StructMember[] members = new StructMember[1];\n        members[0] = new StructMember(""value"", vDef.type(), null/*ignored*/);\n        TypeCode typeCode\n                = orb.create_exception_tc(ea.getExceptionRepositoryId(),\n                base, members);\n\n        eDef = new ExceptionDefImpl(ea.getExceptionRepositoryId(), base, ""1.0"",\n                typeCode, vDef, m, impl);\n        m.add(base, eDef);\n        exceptionMap.put(cls, eDef); // Remember we mapped this.\n\n        return eDef;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java'}, {'Syntax': 'ValueAnalysis.getValueAnalysis(cls)', 'FunctionName': 'getValueAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static ValueAnalysis getValueAnalysis(Class cls)  throws RMIIIOPViolationException {\n        return (ValueAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ValueAnalysis.java'}, {'Syntax': 'addValue(va)', 'FunctionName': 'addValue', 'ArgsCount': 1, 'MethodBody': 'private ValueDefImpl addValue(ValueAnalysis va)\n            throws RMIIIOPViolationException, IRConstructionException {\n        ValueDefImpl vDef;\n        Class cls = va.getCls();\n\n        // Lookup: Has it already been added?\n        vDef = (ValueDefImpl) valueMap.get(cls);\n        if (vDef != null)\n            return vDef; // Yes, just return it.\n\n        // Get module to add value to.\n        ModuleDefImpl m = ensurePackageExists(cls.getPackage().getName());\n\n        // Add implemented interfaces\n        String[] supported_interfaces = addInterfaces(va);\n\n        // Add abstract base valuetypes\n        String[] abstract_base_valuetypes = addAbstractBaseValuetypes(va);\n\n        // Add superclass\n        ValueDefImpl superValue = null;\n        ValueAnalysis superAnalysis = va.getSuperAnalysis();\n        if (superAnalysis != null)\n            superValue = addValue(superAnalysis);\n\n        // Create the value\n        String base = cls.getName();\n        base = base.substring(base.lastIndexOf(\'.\') + 1);\n        base = Util.javaToIDLName(base);\n\n        TypeCode baseTypeCode;\n        if (superValue == null)\n            baseTypeCode = orb.get_primitive_tc(TCKind.tk_null);\n        else\n            baseTypeCode = superValue.type();\n\n        vDef = new ValueDefImpl(va.getRepositoryId(), base, ""1.0"",\n                m,\n                va.isAbstractValue(),\n                va.isCustom(),\n                supported_interfaces,\n                abstract_base_valuetypes,\n                baseTypeCode,\n                impl);\n        addTypeCode(cls, vDef.type());\n        m.add(base, vDef);\n        valueMap.put(cls, vDef); // Remember we mapped this.\n\n        // Fill in constants.\n        addConstants(vDef, va);\n\n        // Add value members\n        ValueMemberAnalysis[] vmas = va.getMembers();\n        for (int i = 0; i < vmas.length; ++i) {\n            ValueMemberDefImpl vmDef;\n            String vmid = va.getMemberRepositoryId(vmas[i].getJavaName());\n            String vmName = vmas[i].getIDLName();\n\n            Class vmCls = vmas[i].getCls();\n            TypeCode typeCode = getTypeCode(vmCls);\n\n            boolean vmPublic = vmas[i].isPublic();\n\n            vmDef = new ValueMemberDefImpl(vmid, vmName, ""1.0"",\n                    typeCode, vmPublic, vDef, impl);\n            vDef.add(vmName, vmDef);\n        }\n\n        // Add attributes\n        addAttributes(vDef, va);\n\n        // TODO: Fill in operations.\n\n        return vDef;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java'}]"
6621cd99cda9bd4817b1118b,google/guice,"public static <T> Callable<T> transferRequest(Callable<T> callable) {
    return wrap(callable, transferRequest());
  }",Wraps the given callable in a contextual callable that transfers the request to another thread . This acts as a way of transporting request context data from the current thread to a future thread .,extensions/servlet/src/com/google/inject/servlet/ServletScopes.java,"[{'Syntax': 'wrap(callable, transferRequest())', 'FunctionName': 'wrap', 'ArgsCount': 2, 'MethodBody': 'private static <T> Callable<T> wrap(Callable<T> delegate, RequestScoper requestScoper) {\n    return () -> {\n      try (RequestScoper.CloseableScope scope = requestScoper.open()) {\n        return delegate.call();\n      }\n    };\n  }', 'FileName': '/google/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java'}, {'Syntax': 'transferRequest()', 'FunctionName': 'transferRequest', 'ArgsCount': 0, 'MethodBody': 'public static RequestScoper transferRequest() {\n    return (GuiceFilter.localContext.get() != null)\n        ? transferHttpRequest()\n        : transferNonHttpRequest();\n  }', 'FileName': '/google/guice/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java'}]"
6621cd9acda9bd4817b1118c,objectify/objectify,"public static <T> Ref<T> create(T value) {
		Key<T> key = Key.create(value);
		return create(key);
	}",Creates a Ref from a registered pojo entity,src/main/java/com/googlecode/objectify/Ref.java,"[{'Syntax': 'Key.create(value)', 'FunctionName': 'create', 'ArgsCount': 1, 'MethodBody': '@Deprecated\r\n\tpublic static <T> Ref<T> create(final Key<T> key) {\r\n\t\treturn ObjectifyService.ref(key);\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/Ref.java'}, {'Syntax': 'create(key)', 'FunctionName': 'create', 'ArgsCount': 1, 'MethodBody': '@Deprecated\r\n\tpublic static <T> Ref<T> create(final Key<T> key) {\r\n\t\treturn ObjectifyService.ref(key);\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/Ref.java'}]"
6621cd9acda9bd4817b1118d,oblac/jodd,"protected <T> PageData<T> page(String sql, final Map params, final int page, final int pageSize, final String sortColumnName, final boolean ascending, final Class[] target) {
		if (sortColumnName != null) {
			sql = buildOrderSql(sql, sortColumnName, ascending);
		}

		int from = (page - 1) * pageSize;

		String pageSql = buildPageSql(sql, from, pageSize);
		DbSqlBuilder dbsql = sql(pageSql);

		DbOomQuery query = query(dbsql);
		query.setMaxRows(pageSize);
		query.setFetchSize(pageSize);
		query.setMap(params);

		List<T> list = query.list(pageSize, target);
		query.close();

		String countSql = buildCountSql(sql);
		dbsql = sql(countSql);
		query = query(dbsql);
		query.setMap(params);
		long count = query.executeCount();
		query.close();

		return new PageData<>(page, (int) count, pageSize, list);
	}",Pages given page .,jodd-joy/src/main/java/jodd/joy/page/DbPager.java,"[{'Syntax': 'buildOrderSql(sql, sortColumnName, ascending)', 'FunctionName': 'buildOrderSql', 'ArgsCount': 3, 'MethodBody': 'protected abstract String buildOrderSql(String sql, String column, boolean ascending);', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/page/DbPager.java'}, {'Syntax': 'buildPageSql(sql, from, pageSize)', 'FunctionName': 'buildPageSql', 'ArgsCount': 3, 'MethodBody': 'protected abstract String buildPageSql(String sql, int from, int pageSize);', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/page/DbPager.java'}, {'Syntax': 'query.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic void close() {\n\t\t//nop\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/FastCharArrayWriter.java'}, {'Syntax': 'buildCountSql(sql)', 'FunctionName': 'buildCountSql', 'ArgsCount': 1, 'MethodBody': 'protected abstract String buildCountSql(String sql);', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/page/DbPager.java'}, {'Syntax': 'query.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic void close() {\n\t\t//nop\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/FastCharArrayWriter.java'}]"
6621cd9acda9bd4817b1118e,tony19/logback-android,"protected boolean shouldStart() {
    ServerSocket serverSocket = null;
    try {
      serverSocket = getServerSocketFactory().createServerSocket(
          getPort(), getBacklog(), getInetAddress());

      ServerListener<RemoteAppenderClient> listener =
          createServerListener(serverSocket);

      runner = createServerRunner(listener, getContext().getScheduledExecutorService());
      runner.setContext(getContext());
      return true;
    }
    catch (Exception ex) {
      addError(""server startup error: "" + ex, ex);
      CloseUtil.closeQuietly(serverSocket);
      return false;
    }
  }",Starts the server .,logback-android/src/main/java/ch/qos/logback/classic/net/server/ServerSocketReceiver.java,"[{'Syntax': 'getServerSocketFactory().createServerSocket(\n          getPort(), getBacklog(), getInetAddress())', 'FunctionName': 'createServerSocket', 'ArgsCount': 3, 'MethodBody': '@Override\n      public ServerSocket createServerSocket(int port, int backlog,\n          InetAddress ifAddress) throws IOException {\n        return serverSocket;\n      }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/server/InstrumentedServerSocketAppenderBase.java'}, {'Syntax': 'getServerSocketFactory()', 'FunctionName': 'getServerSocketFactory', 'ArgsCount': 0, 'MethodBody': '@Override\n  protected ServerSocketFactory getServerSocketFactory() throws Exception {\n    return new ServerSocketFactory() {\n\n      @Override\n      public ServerSocket createServerSocket(int port) throws IOException {\n        return serverSocket;\n      }\n\n      @Override\n      public ServerSocket createServerSocket(int port, int backlog)\n          throws IOException {\n        return serverSocket;\n      }\n\n      @Override\n      public ServerSocket createServerSocket(int port, int backlog,\n          InetAddress ifAddress) throws IOException {\n        return serverSocket;\n      }\n    };\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/server/InstrumentedServerSocketAppenderBase.java'}, {'Syntax': 'getPort()', 'FunctionName': 'getPort', 'ArgsCount': 0, 'MethodBody': 'public int getPort() {\n    return port;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/SyslogAppenderBase.java'}, {'Syntax': 'getBacklog()', 'FunctionName': 'getBacklog', 'ArgsCount': 0, 'MethodBody': 'public int getBacklog() {\n    return backlog;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/server/AbstractServerSocketAppender.java'}, {'Syntax': 'getInetAddress()', 'FunctionName': 'getInetAddress', 'ArgsCount': 0, 'MethodBody': 'protected InetAddress getInetAddress() throws UnknownHostException {\n    if (getAddress() == null) return null;\n    return InetAddress.getByName(getAddress());\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/server/AbstractServerSocketAppender.java'}, {'Syntax': 'createServerListener(serverSocket)', 'FunctionName': 'createServerListener', 'ArgsCount': 1, 'MethodBody': '@Override\n  protected ServerListener<RemoteReceiverClient> createServerListener(\n      ServerSocket socket) {\n    return listener;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/server/InstrumentedServerSocketAppenderBase.java'}, {'Syntax': 'createServerRunner(listener, getContext().getScheduledExecutorService())', 'FunctionName': 'createServerRunner', 'ArgsCount': 2, 'MethodBody': '@Override\n  protected ServerRunner<RemoteReceiverClient> createServerRunner(\n      ServerListener<RemoteReceiverClient> listener, Executor executor) {\n    lastListener = listener;\n    return runner != null ? runner : super.createServerRunner(listener, executor);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/server/InstrumentedServerSocketAppenderBase.java'}, {'Syntax': 'getContext().getScheduledExecutorService()', 'FunctionName': 'getScheduledExecutorService', 'ArgsCount': 0, 'MethodBody': '@Override\n  public ScheduledExecutorService getScheduledExecutorService() {\n    return scheduledExecutorService;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/mock/MockContext.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'abstract public Context getContext();', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/pattern/parser/AbstractPatternLayoutBaseTest.java'}, {'Syntax': 'runner.setContext(getContext())', 'FunctionName': 'setContext', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void setContext(Context context) {\n    contextInjected = true;\n    super.setContext(context);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/server/MockServerRunner.java'}, {'Syntax': 'getContext()', 'FunctionName': 'getContext', 'ArgsCount': 0, 'MethodBody': 'abstract public Context getContext();', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/pattern/parser/AbstractPatternLayoutBaseTest.java'}, {'Syntax': 'addError(""server startup error: "" + ex, ex)', 'FunctionName': 'addError', 'ArgsCount': 2, 'MethodBody': 'public void addError(String msg, Throwable ex) {\n    cab.addError(msg, ex);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/pattern/DynamicConverter.java'}, {'Syntax': 'CloseUtil.closeQuietly(serverSocket)', 'FunctionName': 'closeQuietly', 'ArgsCount': 1, 'MethodBody': 'public static void closeQuietly(Closeable closeable) {\n    if (closeable == null) return;\n    try {\n      closeable.close();\n    }\n    catch (IOException ex) {\n      assert true;  // avoid an empty catch\n    }\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/util/CloseUtil.java'}]"
6621cd9acda9bd4817b1118f,Unidata/thredds,"public void processEvents() {
    if (!enable) return;

    for (; ; ) {

      // wait for key to be signalled
      WatchKey key;
      try {
        key = watcher.take();
      } catch (InterruptedException x) {
        return;
      }

      Path dir = keys.get(key);
      if (dir == null) {
        System.err.println(""WatchKey not recognized!!"");
        continue;
      }

      for (WatchEvent<?> event : key.pollEvents()) {
        WatchEvent.Kind kind = event.kind();

        // TBD - provide example of how OVERFLOW event is handled
        if (kind == OVERFLOW) {
          continue;
        }

        // Context for directory entry event is the file name of entry
        WatchEvent<Path> ev = cast(event);
        Path name = ev.context();
        Path child = dir.resolve(name);

        // print out event
        System.out.format(""%s: %s%n"", event.kind().name(), child);

        // if directory is created, and watching recursively, then
        // register it and its sub-directories
        if (recursive && (kind == ENTRY_CREATE)) {
          try {
            if (Files.isDirectory(child, NOFOLLOW_LINKS)) {
              registerAll(child);
            }
          } catch (IOException x) {
            // ignore to keep sample readbale
          }
        }
      }

      // reset key and remove from set if directory no longer accessible
      boolean valid = key.reset();
      if (!valid) {
        keys.remove(key);

        // all directories are inaccessible
        if (keys.isEmpty()) {
          break;
        }
      }
    }
  }",Process all events for keys queued to the watcher,tdcommon/src/main/java/thredds/server/catalog/tracker/CatalogWatcher.java,[]
6621cd9acda9bd4817b11190,boonproject/boon,"@Override
    public  Object fromMap(Map<String, Object> map) {
        String clazz = (String) map.get( ""class"" );
        Class cls = Reflection.loadClass( clazz );
        return fromMap(map, cls);
    }",fromMap converts a map into a Java object . This version will see if there is a class parameter in the map and dies if there is not .,boon/src/main/java/org/boon/core/reflection/MapperSimple.java,"[{'Syntax': 'map.get( ""class"" )', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Response get(String key) {\n\n        Request request = Request.request().key(key);\n        return request(request);\n\n    }', 'FileName': '/boonproject/boon/etcd/etcd-client/src/main/java/org/boon/etcd/EtcdClient.java'}, {'Syntax': 'Reflection.loadClass( clazz )', 'FunctionName': 'loadClass', 'ArgsCount': 1, 'MethodBody': 'public static Class<?> loadClass( String className ) {\n\n        try {\n            Class<?> clazz = Class.forName( className );\n\n\n            return clazz;\n\n\n        } catch ( Exception ex ) {\n            log.info( String.format( ""Unable to create load class %s"", className ) );\n            return null;\n        }\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/Reflection.java'}, {'Syntax': 'fromMap(map, cls)', 'FunctionName': 'fromMap', 'ArgsCount': 2, 'MethodBody': 'public static <T> T fromMap( Map<String, Object> map, Class<T> clazz ) {\n        return MapObjectConversion.fromMap( map, clazz );\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/Maps.java'}]"
6621cd9acda9bd4817b11191,seedstack/jpa-addon,"@SuppressWarnings(""unchecked"")
    public <E> Expression<E> pickExpression() {
        Preconditions.checkState(this.expression != null, ""No expression has been set"");
        Expression<E> result = (Expression<E>) this.expression;
        expression = null;
        return result;
    }",Returns the expression currently active in the building context .,src/main/java/org/seedstack/jpa/internal/specification/JpaTranslationContext.java,[]
6621cd9acda9bd4817b11192,Unidata/thredds,"private static void dispatchCheckValue(int type, String value)
            throws AttributeBadValueException
    {

        switch (type) {

        case BYTE:
            if(!checkByte(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Byte value."");
            break;

        case INT16:
            if(!checkShort(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an Int16 value."");
            break;

        case UINT16:
            if(!checkUShort(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an UInt16 value."");
            break;

        case INT32:
            if(!checkInt(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an Int32 value."");
            break;

        case UINT32:
            if(!checkUInt(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an UInt32 value."");
            break;

        case FLOAT32:
            if(!checkFloat(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Float32 value."");
            break;

        case FLOAT64:
            if(!checkDouble(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Float64 value."");
            break;

        //    case BOOLEAN:
        //      if(!checkBoolean(value))
        //	throw new AttributeBadValueException(""`"" + value + ""' is not a Boolean value."");
        //      break;

        default:
            // Assume UNKNOWN, CONTAINER, STRING, and URL are okay.
        }
    }",Check if the value is legal for a given type .,opendap/src/main/java/opendap/dap/Attribute.java,[]
6621cd9acda9bd4817b11193,tiefaces/TieFaces,"public static void populateAttributes(final UIComponent component,
			final FacesCell fcell,
			final Map<String, Map<String, String>> defaultControlMap) {

		List<CellFormAttributes> inputAttrs = fcell.getInputAttrs();
		String cname = findComponentNameFromClass(component);
		if (cname == null) {
			return;
		}

		Map<String, String> defaultMap = defaultControlMap.get(cname);
		if (defaultMap == null) {
			defaultMap = new HashMap<>();
			defaultControlMap.put(cname, defaultMap);
		}
		for (Map.Entry<String, String> entry : defaultMap.entrySet()) {
			setObjectProperty(component, entry.getKey(), entry.getValue(),
					true);
		}
		for (CellFormAttributes attr : inputAttrs) {
			String propertyName = attr.getType();
			String propertyValue = attr.getValue();
			if (!defaultMap.containsKey(propertyName)) {
				String defaultValue = getObjectPropertyValue(component,
						propertyName, true);
				defaultMap.put(propertyName, defaultValue);
			}
			setObjectProperty(component, propertyName, propertyValue, true);
		}

	}",populate attributes .,src/org/tiefaces/components/websheet/utility/CellControlsUtility.java,"[{'Syntax': 'fcell.getInputAttrs()', 'FunctionName': 'getInputAttrs', 'ArgsCount': 0, 'MethodBody': 'public final List<CellFormAttributes> getInputAttrs() {\r\n\t\treturn inputAttrs;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/FacesCell.java'}, {'Syntax': 'findComponentNameFromClass(component)', 'FunctionName': 'findComponentNameFromClass', 'ArgsCount': 1, 'MethodBody': 'private static String findComponentNameFromClass(\r\n\t\t\tfinal UIComponent component) {\r\n\r\n\t\tString cname = component.getClass().getSimpleName();\r\n\t\tif (supportComponents.contains(cname)) {\r\n\t\t\treturn cname;\r\n\t\t}\r\n\t\treturn null;\r\n\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellControlsUtility.java'}, {'Syntax': 'defaultControlMap.get(cname)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'defaultControlMap.put(cname, defaultMap)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\r\n\tpublic final Object put(final Object key, final Object value) {\r\n\t\ttry {\r\n\t\t\tCellMapKey mkey = new CellMapKey((String) key);\r\n\t\t\tif (!mkey.isParseSuccess()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tCell poiCell = parent.getCellHelper()\r\n\t\t\t\t\t.getPoiCellWithRowColFromCurrentPage(mkey.getRowIndex(),\r\n\t\t\t\t\t\t\tmkey.getColIndex());\r\n\t\t\tif (poiCell == null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tString oldValue = CellUtility\r\n\t\t\t\t\t.getCellValueWithoutFormat(poiCell);\r\n\t\t\tFacesCell facesCell = parent.getCellHelper()\r\n\t\t\t\t\t.getFacesCellWithRowColFromCurrentPage(\r\n\t\t\t\t\t\t\tmkey.getRowIndex(), mkey.getColIndex());\r\n\t\t\tString newValue = assembleNewValue(value, facesCell);\r\n\t\t\tif (newValue != null && !newValue.equals(oldValue)) {\r\n\t\t\t\tCellUtility.setCellValue(poiCell, newValue);\r\n\t\t\t\tif (facesCell.isHasSaveAttr()) {\r\n\t\t\t\t\tparent.getCellHelper().saveDataInContext(poiCell,\r\n\t\t\t\t\t\t\tnewValue);\r\n\t\t\t\t}\r\n\t\t\t\t// patch to avoid not updated downloaded file\r\n\t\t\t\tCellUtility.copyCell(poiCell.getSheet(), poiCell.getRow(), poiCell.getRow(), poiCell.getColumnIndex(),false);\r\n\t\t\t\tparent.getCellHelper().reCalc();\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t} catch (Exception ex) {\r\n\t\t\tLOG.log(Level.SEVERE,\r\n\t\t\t\t\t""Save cell data error : "" + ex.getLocalizedMessage(),\r\n\t\t\t\t\tex);\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'defaultMap.entrySet()', 'FunctionName': 'entrySet', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final Set entrySet() {\r\n\t\treturn emptySet;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'setObjectProperty(component, entry.getKey(), entry.getValue(),\r\n\t\t\t\t\ttrue)', 'FunctionName': 'setObjectProperty', 'ArgsCount': 4, 'MethodBody': 'public static void setObjectProperty(final Object obj,\r\n\t\t\tfinal String propertyName, final String propertyValue,\r\n\t\t\tfinal boolean ignoreNonExisting) {\r\n\t\ttry {\r\n\t\t\tMethod method = obj.getClass().getMethod(\r\n\t\t\t\t\t""set"" + Character.toUpperCase(propertyName.charAt(0))\r\n\t\t\t\t\t\t\t+ propertyName.substring(1),\r\n\t\t\t\t\tnew Class[] { String.class });\r\n\t\t\tmethod.invoke(obj, propertyValue);\r\n\t\t} catch (Exception e) {\r\n\t\t\tString msg = ""failed to set property \'"" + propertyName\r\n\t\t\t\t\t+ ""\' to value \'"" + propertyValue + ""\' for object ""\r\n\t\t\t\t\t+ obj;\r\n\t\t\tif (ignoreNonExisting) {\r\n\t\t\t\tLOG.info(msg);\r\n\t\t\t} else {\r\n\t\t\t\tLOG.warning(msg);\r\n\t\t\t\tthrow new IllegalArgumentException(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/WebSheetUtility.java'}, {'Syntax': 'entry.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': 'public SerialCellAddress getKey() {\r\n\t\treturn key;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\r\n\t\treturn value;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'attr.getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': 'public String getType() {\r\n\t\t\treturn type;\r\n\t\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'attr.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\r\n\t\treturn value;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'defaultMap.containsKey(propertyName)', 'FunctionName': 'containsKey', 'ArgsCount': 1, 'MethodBody': '@Override\r\n\tpublic final boolean containsKey(final Object key) {\r\n\t\treturn false;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'getObjectPropertyValue(component,\r\n\t\t\t\t\t\tpropertyName, true)', 'FunctionName': 'getObjectPropertyValue', 'ArgsCount': 3, 'MethodBody': 'public static String getObjectPropertyValue(final Object obj,\r\n\t\t\tfinal String propertyName, final boolean ignoreNonExisting) {\r\n\t\ttry {\r\n\t\t\tMethod method = obj.getClass()\r\n\t\t\t\t\t.getMethod(""get""\r\n\t\t\t\t\t\t\t+ Character.toUpperCase(propertyName.charAt(0))\r\n\t\t\t\t\t\t\t+ propertyName.substring(1));\r\n\t\t\treturn (String) method.invoke(obj);\r\n\t\t} catch (Exception e) {\r\n\t\t\tString msg = ""failed to get property \'"" + propertyName\r\n\t\t\t\t\t+ ""\' for object "" + obj;\r\n\t\t\tif (ignoreNonExisting) {\r\n\t\t\t\tLOG.log(Level.FINE, msg, e);\r\n\t\t\t} else {\r\n\t\t\t\tLOG.warning(msg);\r\n\t\t\t\tthrow new IllegalArgumentException(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/CellControlsUtility.java'}, {'Syntax': 'defaultMap.put(propertyName, defaultValue)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\r\n\tpublic final Object put(final Object key, final Object value) {\r\n\t\ttry {\r\n\t\t\tCellMapKey mkey = new CellMapKey((String) key);\r\n\t\t\tif (!mkey.isParseSuccess()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tCell poiCell = parent.getCellHelper()\r\n\t\t\t\t\t.getPoiCellWithRowColFromCurrentPage(mkey.getRowIndex(),\r\n\t\t\t\t\t\t\tmkey.getColIndex());\r\n\t\t\tif (poiCell == null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tString oldValue = CellUtility\r\n\t\t\t\t\t.getCellValueWithoutFormat(poiCell);\r\n\t\t\tFacesCell facesCell = parent.getCellHelper()\r\n\t\t\t\t\t.getFacesCellWithRowColFromCurrentPage(\r\n\t\t\t\t\t\t\tmkey.getRowIndex(), mkey.getColIndex());\r\n\t\t\tString newValue = assembleNewValue(value, facesCell);\r\n\t\t\tif (newValue != null && !newValue.equals(oldValue)) {\r\n\t\t\t\tCellUtility.setCellValue(poiCell, newValue);\r\n\t\t\t\tif (facesCell.isHasSaveAttr()) {\r\n\t\t\t\t\tparent.getCellHelper().saveDataInContext(poiCell,\r\n\t\t\t\t\t\t\tnewValue);\r\n\t\t\t\t}\r\n\t\t\t\t// patch to avoid not updated downloaded file\r\n\t\t\t\tCellUtility.copyCell(poiCell.getSheet(), poiCell.getRow(), poiCell.getRow(), poiCell.getColumnIndex(),false);\r\n\t\t\t\tparent.getCellHelper().reCalc();\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t} catch (Exception ex) {\r\n\t\t\tLOG.log(Level.SEVERE,\r\n\t\t\t\t\t""Save cell data error : "" + ex.getLocalizedMessage(),\r\n\t\t\t\t\tex);\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'setObjectProperty(component, propertyName, propertyValue, true)', 'FunctionName': 'setObjectProperty', 'ArgsCount': 4, 'MethodBody': 'public static void setObjectProperty(final Object obj,\r\n\t\t\tfinal String propertyName, final String propertyValue,\r\n\t\t\tfinal boolean ignoreNonExisting) {\r\n\t\ttry {\r\n\t\t\tMethod method = obj.getClass().getMethod(\r\n\t\t\t\t\t""set"" + Character.toUpperCase(propertyName.charAt(0))\r\n\t\t\t\t\t\t\t+ propertyName.substring(1),\r\n\t\t\t\t\tnew Class[] { String.class });\r\n\t\t\tmethod.invoke(obj, propertyValue);\r\n\t\t} catch (Exception e) {\r\n\t\t\tString msg = ""failed to set property \'"" + propertyName\r\n\t\t\t\t\t+ ""\' to value \'"" + propertyValue + ""\' for object ""\r\n\t\t\t\t\t+ obj;\r\n\t\t\tif (ignoreNonExisting) {\r\n\t\t\t\tLOG.info(msg);\r\n\t\t\t} else {\r\n\t\t\t\tLOG.warning(msg);\r\n\t\t\t\tthrow new IllegalArgumentException(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/WebSheetUtility.java'}]"
6621cd9acda9bd4817b11194,rupertlssmith/lojix,"public static <T> Collection<T> collectIterator(Iterator<T> iterator, Collection<T> targetCollection)
    {
        while (iterator.hasNext())
        {
            targetCollection.add(iterator.next());
        }

        return targetCollection;
    }",Extracts all elements from an iterator usually created from a filterator and adds them into the target collection returning that collection as the result .,base/common/src/main/com/thesett/common/util/Filterators.java,"[{'Syntax': 'iterator.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': 'public boolean hasNext()\n                {\n                    return (useDefaults ? ((i < ORDER.length) && (ORDER[i] > ENVIRONMENT_DEFAULTS_CUTOFF))\n                                        : (i < ORDER.length));\n                }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}, {'Syntax': 'targetCollection.add(iterator.next())', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public boolean add(E o)\n    {\n        if (offer(o))\n        {\n            return true;\n        }\n        else\n        {\n            throw new IllegalStateException(""Heap full"");\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}, {'Syntax': 'iterator.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public Object next()\n                {\n                    // Check that there is a next element and return null if not.\n                    if (!hasNext())\n                    {\n                        return null;\n                    }\n\n                    // Get the next ordering count.\n                    int o = ORDER[i];\n\n                    // Do bit matching on the count to choose which elements to include in the key.\n                    String result =\n                        (((o & E) != 0) ? (environment + ""."") : """") + (((o & B) != 0) ? (base + ""."") : """") +\n                        (((o & M) != 0) ? (modifier + ""."") : """") + key;\n\n                    // Increment the iterator to get the next key on the next call.\n                    i++;\n\n                    return result;\n                }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}]"
6621cd9acda9bd4817b11195,1gravity/Android-RTEditor,"@Override
    public synchronized void write(int b) {
        int inBufferPos = count - filledBufferSum;
        if (inBufferPos == currentBuffer.length) {
            needNewBuffer(count + 1);
            inBufferPos = 0;
        }
        currentBuffer[inBufferPos] = (byte) b;
        count++;
    }",Write a byte to byte array .,RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java,"[{'Syntax': 'needNewBuffer(count + 1)', 'FunctionName': 'needNewBuffer', 'ArgsCount': 1, 'MethodBody': 'private void needNewBuffer(int newcount) {\n        if (currentBufferIndex < buffers.size() - 1) {\n            //Recycling old buffer\n            filledBufferSum += currentBuffer.length;\n            \n            currentBufferIndex++;\n            currentBuffer = buffers.get(currentBufferIndex);\n        } else {\n            //Creating new buffer\n            int newBufferSize;\n            if (currentBuffer == null) {\n                newBufferSize = newcount;\n                filledBufferSum = 0;\n            } else {\n                newBufferSize = Math.max(\n                    currentBuffer.length << 1, \n                    newcount - filledBufferSum);\n                filledBufferSum += currentBuffer.length;\n            }\n            \n            currentBufferIndex++;\n            currentBuffer = new byte[newBufferSize];\n            buffers.add(currentBuffer);\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java'}]"
6621cd9acda9bd4817b11196,oblac/jodd,"private static int parseType(
      final String signature, final int startOffset, final SignatureVisitor signatureVisitor) {
    int offset = startOffset; // Current offset in the parsed signature.
    char currentChar = signature.charAt(offset++); // The signature character at 'offset'.

    // Switch based on the first character of the JavaTypeSignature, which indicates its kind.
    switch (currentChar) {
      case 'Z':
      case 'C':
      case 'B':
      case 'S':
      case 'I':
      case 'F':
      case 'J':
      case 'D':
      case 'V':
        // Case of a BaseType or a VoidDescriptor.
        signatureVisitor.visitBaseType(currentChar);
        return offset;

      case '[':
        // Case of an ArrayTypeSignature, a '[' followed by a JavaTypeSignature.
        return parseType(signature, offset, signatureVisitor.visitArrayType());

      case 'T':
        // Case of TypeVariableSignature, an identifier between 'T' and ';'.
        int endOffset = signature.indexOf(';', offset);
        signatureVisitor.visitTypeVariable(signature.substring(offset, endOffset));
        return endOffset + 1;

      case 'L':
        // Case of a ClassTypeSignature, which ends with ';'.
        // These signatures have a main class type followed by zero or more inner class types
        // (separated by '.'). Each can have type arguments, inside '<' and '>'.
        int start = offset; // The start offset of the currently parsed main or inner class name.
        boolean visited = false; // Whether the currently parsed class name has been visited.
        boolean inner = false; // Whether we are currently parsing an inner class type.
        // Parses the signature, one character at a time.
        while (true) {
          currentChar = signature.charAt(offset++);
          if (currentChar == '.' || currentChar == ';') {
            // If a '.' or ';' is encountered, this means we have fully parsed the main class name
            // or an inner class name. This name may already have been visited it is was followed by
            // type arguments between '<' and '>'. If not, we need to visit it here.
            if (!visited) {
              String name = signature.substring(start, offset - 1);
              if (inner) {
                signatureVisitor.visitInnerClassType(name);
              } else {
                signatureVisitor.visitClassType(name);
              }
            }
            // If we reached the end of the ClassTypeSignature return, otherwise start the parsing
            // of a new class name, which is necessarily an inner class name.
            if (currentChar == ';') {
              signatureVisitor.visitEnd();
              break;
            }
            start = offset;
            visited = false;
            inner = true;
          } else if (currentChar == '<') {
            // If a '<' is encountered, this means we have fully parsed the main class name or an
            // inner class name, and that we now need to parse TypeArguments. First, we need to
            // visit the parsed class name.
            String name = signature.substring(start, offset - 1);
            if (inner) {
              signatureVisitor.visitInnerClassType(name);
            } else {
              signatureVisitor.visitClassType(name);
            }
            visited = true;
            // Now, parse the TypeArgument(s), one at a time.
            while ((currentChar = signature.charAt(offset)) != '>') {
              switch (currentChar) {
                case '*':
                  // Unbounded TypeArgument.
                  ++offset;
                  signatureVisitor.visitTypeArgument();
                  break;
                case '+':
                case '-':
                  // Extends or Super TypeArgument. Use offset + 1 to skip the '+' or '-'.
                  offset =
                      parseType(
                          signature, offset + 1, signatureVisitor.visitTypeArgument(currentChar));
                  break;
                default:
                  // Instanceof TypeArgument. The '=' is implicit.
                  offset = parseType(signature, offset, signatureVisitor.visitTypeArgument('='));
                  break;
              }
            }
          }
        }
        return offset;

      default:
        throw new IllegalArgumentException();
    }
  }",Parses a JavaTypeSignature and makes the given visitor visit it .,jodd-proxetta/src/main/java/jodd/asm7/signature/SignatureReader.java,"[{'Syntax': 'signature.charAt(offset++)', 'FunctionName': 'charAt', 'ArgsCount': 1, 'MethodBody': 'public char charAt(final int pos) {\n\t\tint len = 0;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tint newlen = len + array[i].length();\n\t\t\tif (pos < newlen) {\n\t\t\t\treturn array[i].charAt(pos - len);\n\t\t\t}\n\t\t\tlen = newlen;\n\t\t}\n\t\tthrow new IllegalArgumentException(""Invalid char index"");\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'signature.charAt(offset++)', 'FunctionName': 'charAt', 'ArgsCount': 1, 'MethodBody': 'public char charAt(final int pos) {\n\t\tint len = 0;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tint newlen = len + array[i].length();\n\t\t\tif (pos < newlen) {\n\t\t\t\treturn array[i].charAt(pos - len);\n\t\t\t}\n\t\t\tlen = newlen;\n\t\t}\n\t\tthrow new IllegalArgumentException(""Invalid char index"");\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'signature.charAt(offset)', 'FunctionName': 'charAt', 'ArgsCount': 1, 'MethodBody': 'public char charAt(final int pos) {\n\t\tint len = 0;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tint newlen = len + array[i].length();\n\t\t\tif (pos < newlen) {\n\t\t\t\treturn array[i].charAt(pos - len);\n\t\t\t}\n\t\t\tlen = newlen;\n\t\t}\n\t\tthrow new IllegalArgumentException(""Invalid char index"");\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}]"
6621cd9acda9bd4817b11197,orientechnologies/orientdb,"public void fill(final int iLength, final byte iFiller) {
    assureSpaceFor(iLength);
    Arrays.fill(buffer, position, position + iLength, iFiller);
    position += iLength;
  }",Fills the stream from current position writing iLength times the iFiller byte,core/src/main/java/com/orientechnologies/orient/core/serialization/OMemoryStream.java,"[{'Syntax': 'assureSpaceFor(iLength)', 'FunctionName': 'assureSpaceFor', 'ArgsCount': 1, 'MethodBody': 'private void assureSpaceFor(final int iLength) {\n    final byte[] localBuffer = buffer;\n    final int pos = position;\n    final int capacity = position + iLength;\n\n    final int bufferLength = localBuffer.length;\n\n    if (bufferLength < capacity) {\n      metricResize++;\n\n      final byte[] newbuf = new byte[Math.max(bufferLength << 1, capacity)];\n\n      if (pos < NATIVE_COPY_THRESHOLD) for (int i = 0; i < pos; ++i) newbuf[i] = localBuffer[i];\n      else System.arraycopy(localBuffer, 0, newbuf, 0, pos);\n\n      buffer = newbuf;\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/serialization/OMemoryStream.java'}, {'Syntax': 'Arrays.fill(buffer, position, position + iLength, iFiller)', 'FunctionName': 'fill', 'ArgsCount': 4, 'MethodBody': 'protected ORecordAbstract fill(\n      final ORID iRid, final int iVersion, final byte[] iBuffer, boolean iDirty) {\n    recordId.setClusterId(iRid.getClusterId());\n    recordId.setClusterPosition(iRid.getClusterPosition());\n    recordVersion = iVersion;\n    status = ORecordElement.STATUS.LOADED;\n    source = iBuffer;\n    size = iBuffer != null ? iBuffer.length : 0;\n    if (source != null && source.length > 0) {\n      dirty = iDirty;\n      contentChanged = iDirty;\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/ORecordAbstract.java'}]"
6621cd9acda9bd4817b11198,GojaFramework/goja,"public static void copy(Reader input, OutputStream output, String encoding) throws IOException {
        Writer out = new OutputStreamWriter(output, encoding);
        copy(input, out);
        out.flush();
    }",Copies reader to output stream using buffer and specified encoding .,goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java,"[{'Syntax': 'copy(input, out)', 'FunctionName': 'copy', 'ArgsCount': 2, 'MethodBody': 'public static int copy(InputStream input, OutputStream output) throws IOException {\n        byte[] buffer = new byte[ioBufferSize];\n        int count = 0;\n        int read;\n        while (true) {\n            read = input.read(buffer, 0, ioBufferSize);\n            if (read == -1) {\n                break;\n            }\n            output.write(buffer, 0, read);\n            count += read;\n        }\n        return count;\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java'}, {'Syntax': 'out.flush()', 'FunctionName': 'flush', 'ArgsCount': 0, 'MethodBody': '@Override\n    public void flush() {\n        //nop\n    }', 'FileName': '/GojaFramework/goja/goja-core/src/main/java/goja/core/kits/stream/FastCharArrayWriter.java'}]"
6621cd9acda9bd4817b11199,1gravity/Android-RTEditor,"private void writeName(String uri, String localName, String qName,
                           boolean isElement) throws SAXException {
        String prefix = doPrefix(uri, qName, isElement);
        if (prefix != null && !"""".equals(prefix)) {
            write(prefix);
            write(':');
        }
        if (localName != null && !"""".equals(localName)) {
            write(localName);
        } else {
            int i = qName.indexOf(':');
            write(qName.substring(i + 1, qName.length()));
        }
    }",Write an element or attribute name .,RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java,"[{'Syntax': 'doPrefix(uri, qName, isElement)', 'FunctionName': 'doPrefix', 'ArgsCount': 3, 'MethodBody': 'private String doPrefix(String uri, String qName, boolean isElement) {\n        String defaultNS = nsSupport.getURI("""");\n        if ("""".equals(uri)) {\n            if (isElement && defaultNS != null)\n                nsSupport.declarePrefix("""", """");\n            return null;\n        }\n        String prefix;\n        if (isElement && defaultNS != null && uri.equals(defaultNS)) {\n            prefix = """";\n        } else {\n            prefix = nsSupport.getPrefix(uri);\n        }\n        if (prefix != null) {\n            return prefix;\n        }\n        prefix = (String) doneDeclTable.get(uri);\n        if (prefix != null\n                && ((!isElement || defaultNS != null) && """".equals(prefix) || nsSupport\n                .getURI(prefix) != null)) {\n            prefix = null;\n        }\n        if (prefix == null) {\n            prefix = (String) prefixTable.get(uri);\n            if (prefix != null\n                    && ((!isElement || defaultNS != null) && """".equals(prefix) || nsSupport\n                    .getURI(prefix) != null)) {\n                prefix = null;\n            }\n        }\n        if (prefix == null && qName != null && !"""".equals(qName)) {\n            int i = qName.indexOf(\':\');\n            if (i == -1) {\n                if (isElement && defaultNS == null) {\n                    prefix = """";\n                }\n            } else {\n                prefix = qName.substring(0, i);\n            }\n        }\n        for (; prefix == null || nsSupport.getURI(prefix) != null; prefix = ""__NS""\n                + ++prefixCounter)\n            ;\n        nsSupport.declarePrefix(prefix, uri);\n        doneDeclTable.put(uri, prefix);\n        return prefix;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java'}, {'Syntax': '"""".equals(prefix)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object object) {\n        if (! (object instanceof RTTypeface)) {\n            return false;\n        }\n        String name = ((RTTypeface)object).getName();\n        return mName.equalsIgnoreCase(name);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/fonts/RTTypeface.java'}, {'Syntax': 'write(prefix)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'private void write(char c) throws SAXException {\n        try {\n            output.write(c);\n        } catch (IOException e) {\n            throw new SAXException(e);\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java'}, {'Syntax': ""write(':')"", 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'private void write(char c) throws SAXException {\n        try {\n            output.write(c);\n        } catch (IOException e) {\n            throw new SAXException(e);\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java'}, {'Syntax': '"""".equals(localName)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object object) {\n        if (! (object instanceof RTTypeface)) {\n            return false;\n        }\n        String name = ((RTTypeface)object).getName();\n        return mName.equalsIgnoreCase(name);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/fonts/RTTypeface.java'}, {'Syntax': 'write(localName)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'private void write(char c) throws SAXException {\n        try {\n            output.write(c);\n        } catch (IOException e) {\n            throw new SAXException(e);\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java'}, {'Syntax': 'write(qName.substring(i + 1, qName.length()))', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'private void write(char c) throws SAXException {\n        try {\n            output.write(c);\n        } catch (IOException e) {\n            throw new SAXException(e);\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java'}]"
6621cd9acda9bd4817b1119a,ngageoint/geopackage-android,"public BoundingBox getBoundingBox(long zoomLevel) {
        BoundingBox boundingBox = null;
        TileMatrix tileMatrix = getTileMatrix(zoomLevel);
        if (tileMatrix != null) {
            TileGrid tileGrid = queryForTileGrid(zoomLevel);
            if (tileGrid != null) {
                BoundingBox matrixSetBoundingBox = getBoundingBox();
                boundingBox = TileBoundingBoxUtils.getBoundingBox(
                        matrixSetBoundingBox, tileMatrix, tileGrid);
            }

        }
        return boundingBox;
    }",Get the bounding box of tiles,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/user/TileDao.java,"[{'Syntax': 'getTileMatrix(zoomLevel)', 'FunctionName': 'getTileMatrix', 'ArgsCount': 1, 'MethodBody': 'private TileMatrix getTileMatrix(CoverageDataRequest request) {\n\n        TileMatrix tileMatrix = null;\n\n        // Check if the request overlaps coverage data bounding box\n        if (request.overlap(coverageBoundingBox) != null) {\n\n            // Get the tile distance\n            BoundingBox projectedBoundingBox = request\n                    .getProjectedBoundingBox();\n            double distanceWidth = projectedBoundingBox.getLongitudeRange();\n            double distanceHeight = projectedBoundingBox.getLatitudeRange();\n\n            // Get the zoom level to request based upon the tile size\n            Long zoomLevel = tileDao.getClosestZoomLevel(distanceWidth,\n                    distanceHeight);\n\n            // If there is a matching zoom level\n            if (zoomLevel != null) {\n                tileMatrix = tileDao.getTileMatrix(zoomLevel);\n            }\n        }\n\n        return tileMatrix;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageData.java'}, {'Syntax': 'queryForTileGrid(zoomLevel)', 'FunctionName': 'queryForTileGrid', 'ArgsCount': 1, 'MethodBody': 'public TileGrid queryForTileGrid(long zoomLevel) {\n\n        String where = buildWhere(TileTable.COLUMN_ZOOM_LEVEL, zoomLevel);\n        String[] whereArgs = buildWhereArgs(new Object[]{zoomLevel});\n\n        Number minX = min(TileTable.COLUMN_TILE_COLUMN, where, whereArgs);\n        Number maxX = max(TileTable.COLUMN_TILE_COLUMN, where, whereArgs);\n        Number minY = min(TileTable.COLUMN_TILE_ROW, where, whereArgs);\n        Number maxY = max(TileTable.COLUMN_TILE_ROW, where, whereArgs);\n\n        TileGrid tileGrid = null;\n        if (minX != null && maxX != null && minY != null && maxY != null) {\n            tileGrid = new TileGrid(minX.longValue(), minY.longValue(),\n                    maxX.longValue(), maxY.longValue());\n        }\n\n        return tileGrid;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/user/TileDao.java'}, {'Syntax': 'getBoundingBox()', 'FunctionName': 'getBoundingBox', 'ArgsCount': 0, 'MethodBody': '@Override\n    public BoundingBox getBoundingBox() {\n        throw new GeoPackageException(\n                ""Bounding Box not supported for User Custom"");\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/custom/UserCustomDao.java'}]"
6621cd9acda9bd4817b1119b,nyla-solutions/gedi-geode,"public static synchronized Pool getPoolForServer(String serverName, JMX jmx)
	throws InstanceNotFoundException
	{
		Pool pool = PoolManager.find(serverName);
		
		if(pool != null)
			return pool;
		
		PoolFactory poolFactory = PoolManager.createFactory();
		
		//LogWriter logWriter = getClientCache(jmx).getLogger();
		
		try
		{
			//get host name
			//ex: object GemFire:type=Member,member=server_1
			ObjectName objectName = new ObjectName(new StringBuilder(""GemFire:type=Member,member="").append(serverName).toString());
			
			String host =  jmx.getAttribute(objectName, ""Host"");
			
			if(host == null || host.length() == 0)
				throw new IllegalArgumentException(""host not found for serverName:""+serverName+"" not found"");
			
		    host = lookupNetworkHost(host);
		    
		    
				String findJmxPort = new StringBuilder(""GemFire:service=CacheServer,port=*,type=Member,member="")
			.append(serverName).toString();
			
			//search ObjectNames
			Set<ObjectName> objectNames = jmx.searchObjectNames(findJmxPort);
			
			if(objectNames == null || objectNames.isEmpty())
				throw new IllegalArgumentException(""Unable to to find port with server name:""+serverName);
			
			ObjectName portObjectName  = objectNames.iterator().next();
			Integer port = jmx.getAttribute(portObjectName, ""Port"");
			
			
			if(port == null)
				throw new IllegalArgumentException(""Unable to obtain port for objectName:""+portObjectName+"" for server:""+serverName);
			
			System.out.println(""Found cache server host""+host+"" port:""+port);
			
			poolFactory= poolFactory.addServer(host, port.intValue());
			
			return poolFactory.create(serverName);
		}
		catch(InstanceNotFoundException e)
		{
			throw e;
		}
		catch (Exception e)
		{
			throw new RuntimeException(""Unable to create pool for servername:""+serverName+"" error:""+e.getMessage(),e);
		}
		
	}",Dynamically create a GemFire pool with just the server,gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/client/GemFireJmxClient.java,"[{'Syntax': 'new StringBuilder(""GemFire:type=Member,member="").append(serverName).toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String toString()\n\t{\n\t\treturn String\n\t\t\t\t.format(""DummyDeal [userProfile=%s, bigDecimal=%s, numberDouble=%s, text=%s, calendar=%s, id=%s]"",\n\t\t\t\t\t\tuserProfile, bigDecimal, numberDouble, text, calendar,\n\t\t\t\t\t\tid);\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-int-test/src/demo/java/solutions/gedi/demo/data/DummyDeal.java'}, {'Syntax': 'lookupNetworkHost(host)', 'FunctionName': 'lookupNetworkHost', 'ArgsCount': 1, 'MethodBody': 'static  String lookupNetworkHost(String host)\n\t{\n\t\ttry\n\t\t{\n\t\t\tCache<String,Object> cache = CacheFarm.getCache();\n\t\t\t\n\t\t\tResourceBundle resoureBundle = (ResourceBundle)CacheFarm.getCache().get(RESOURCE_BUNDLE_CACHENAME);\n\t\t\t\n\t\t\tif(resoureBundle == null)\n\t\t\t{\n\t\t\t\tURL url = GemFireJmxClient.class.getResource(HOST_PROP_FILE_NAME);\n\t\t\t\t\n\t\t\t\tString filePath = null;\n\t\t\t\tif(url == null)\n\t\t\t\t\tfilePath = HOST_PROP_FILE_NAME;\n\t\t\t\telse\n\t\t\t\t\tfilePath = url.toString();\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tSystem.out.println(new StringBuilder(""Loading IP addresses from "")\n\t\t\t\t\t\t.append(filePath).toString());\n\t\t\t\t\n\t\t\t\tresoureBundle = ResourceBundle.getBundle(""host"");\n\t\t\t\t\n\t\t\t\tcache.put(RESOURCE_BUNDLE_CACHENAME, resoureBundle);\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tSystem.out.println(new StringBuilder(""Looking for host name \\"""").append(host).append(""\\"" IP address in "")\n\t\t\t\t\t.append(HOST_PROP_FILE_NAME).toString());\n\t\t\t\n\t\t\tString newHost = resoureBundle.getString(host);\n\t\t\tSystem.out.println(new StringBuilder(host).append(""="").append(newHost).toString());\n\t\t\t\n\t\t\treturn newHost;\n\t\t}\n\t\tcatch(RuntimeException e)\n\t\t{\n\t\t\tSystem.out.println(""Using host:""+host);\n\t\t\treturn host;\n\t\t}\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/client/GemFireJmxClient.java'}, {'Syntax': 'new StringBuilder(""GemFire:service=CacheServer,port=*,type=Member,member="")\n\t\t\t.append(serverName).toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String toString()\n\t{\n\t\treturn String\n\t\t\t\t.format(""DummyDeal [userProfile=%s, bigDecimal=%s, numberDouble=%s, text=%s, calendar=%s, id=%s]"",\n\t\t\t\t\t\tuserProfile, bigDecimal, numberDouble, text, calendar,\n\t\t\t\t\t\tid);\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-extensions-int-test/src/demo/java/solutions/gedi/demo/data/DummyDeal.java'}, {'Syntax': 'e.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage()\n\t{\n\t\treturn message;\n\t}', 'FileName': '/nyla-solutions/gedi-geode/gedi-geode-rest-app/src/main/java/gedi/solutions/geode/rest/app/exception/DataError.java'}]"
6621cd9acda9bd4817b1119c,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:42:33+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<ResultSetType.ROW> getROW() {
        if (row == null) {
            row = new ArrayList<ResultSetType.ROW>();
        }
        return this.row;
    }",Gets the value of the row property .,Filemaker/src/main/jaxb/org/openestate/io/filemaker/xml/result/ResultSetType.java,[]
6621cd9acda9bd4817b1119d,artclarke/humble-video,"private static void playSound(String filename) throws InterruptedException, IOException, LineUnavailableException {
    /*
     * Start by creating a container object, in this case a demuxer since
     * we are reading, to get audio data from.
     */
    Demuxer demuxer = Demuxer.make();

    /*
     * Open the demuxer with the filename passed on.
     */
    demuxer.open(filename, null, false, true, null, null);

    /*
     * Query how many streams the call to open found
     */
    int numStreams = demuxer.getNumStreams();

    /*
     * Iterate through the streams to find the first audio stream
     */
    int audioStreamId = -1;
    Decoder audioDecoder = null;
    for(int i = 0; i < numStreams; i++)
    {
      final DemuxerStream stream = demuxer.getStream(i);
      final Decoder decoder = stream.getDecoder();
      if (decoder != null && decoder.getCodecType() == MediaDescriptor.Type.MEDIA_AUDIO) {
        audioStreamId = i;
        audioDecoder = decoder;
        // stop at the first one.
        break;
      }
    }
    if (audioStreamId == -1)
      throw new RuntimeException(""could not find audio stream in container: ""+filename);

    /*
     * Now we have found the audio stream in this file.  Let's open up our decoder so it can
     * do work.
     */
    audioDecoder.open(null, null);

    /*
     * We allocate a set of samples with the same number of channels as the
     * coder tells us is in this buffer.
     */
    final MediaAudio samples = MediaAudio.make(
        audioDecoder.getFrameSize(),
        audioDecoder.getSampleRate(),
        audioDecoder.getChannels(),
        audioDecoder.getChannelLayout(),
        audioDecoder.getSampleFormat());

    /*
     * A converter object we'll use to convert Humble Audio to a format that
     * Java Audio can actually play. The details are complicated, but essentially
     * this converts any audio format (represented in the samples object) into
     * a default audio format suitable for Java's speaker system (which will
     * be signed 16-bit audio, stereo (2-channels), resampled to 22,050 samples
     * per second).
     */
    
    final MediaAudioConverter converter =
        MediaAudioConverterFactory.createConverter(
            MediaAudioConverterFactory.DEFAULT_JAVA_AUDIO,
            samples);

    /*
     * An AudioFrame is a wrapper for the Java Sound system that abstracts away
     * some stuff. Go read the source code if you want -- it's not very complicated.
     */
    final AudioFrame audioFrame = AudioFrame.make(converter.getJavaFormat());
    if (audioFrame == null)
      throw new LineUnavailableException();

    /* We will use this to cache the raw-audio we pass to and from
     * the java sound system.
     */
    ByteBuffer rawAudio = null;

    /*
     * Now, we start walking through the container looking at each packet. This
     * is a decoding loop, and as you work with Humble you'll write a lot
     * of these.
     * 
     * Notice how in this loop we reuse all of our objects to avoid
     * reallocating them. Each call to Humble resets objects to avoid
     * unnecessary reallocation.
     */
    final MediaPacket packet = MediaPacket.make();
    while(demuxer.read(packet) >= 0) {
      /*
       * Now we have a packet, let's see if it belongs to our audio stream
       */
      if (packet.getStreamIndex() == audioStreamId)
      {
        /*
         * A packet can actually contain multiple sets of samples (or frames of samples
         * in audio-decoding speak).  So, we may need to call decode audio multiple
         * times at different offsets in the packet's data.  We capture that here.
         */
        int offset = 0;
        int bytesRead = 0;
        do {
          bytesRead += audioDecoder.decode(samples, packet, offset);
          if (samples.isComplete()) {
            rawAudio = converter.toJavaAudio(rawAudio, samples);
            audioFrame.play(rawAudio);
          }
          offset += bytesRead;
        } while (offset < packet.getSize());
      }
    }

    // Some audio decoders (especially advanced ones) will cache
    // audio data before they begin decoding, so when you are done you need
    // to flush them. The convention to flush Encoders or Decoders in Humble Video
    // is to keep passing in null until incomplete samples or packets are returned.
    do {
      audioDecoder.decode(samples, null, 0);
      if (samples.isComplete()) {
        rawAudio = converter.toJavaAudio(rawAudio, samples);
        audioFrame.play(rawAudio);
      }
    } while (samples.isComplete());
    
    // It is good practice to close demuxers when you're done to free
    // up file handles. Humble will EVENTUALLY detect if nothing else
    // references this demuxer and close it then, but get in the habit
    // of cleaning up after yourself, and your future girlfriend/boyfriend
    // will appreciate it.
    demuxer.close();
    
    // similar with the demuxer, for the audio playback stuff, clean up after yourself.
    audioFrame.dispose();
  }",Opens a file and plays the audio from it on the speakers .,humble-video-demos/src/main/java/io/humble/video/demos/DecodeAndPlayAudio.java,"[{'Syntax': 'Demuxer.make()', 'FunctionName': 'make', 'ArgsCount': 0, 'MethodBody': 'public static KeyValueBag make() {\n    long cPtr = VideoJNI.KeyValueBag_make();\n    return (cPtr == 0) ? null : new KeyValueBag(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/KeyValueBag.java'}, {'Syntax': 'demuxer.open(filename, null, false, true, null, null)', 'FunctionName': 'open', 'ArgsCount': 6, 'MethodBody': 'public void open(String url, DemuxerFormat format, boolean streamsCanBeAddedDynamically, boolean queryStreamMetaData, KeyValueBag options, KeyValueBag optionsNotSet) throws java.lang.InterruptedException, java.io.IOException {\n    VideoJNI.Demuxer_open(swigCPtr, this, url, DemuxerFormat.getCPtr(format), format, streamsCanBeAddedDynamically, queryStreamMetaData, KeyValueBag.getCPtr(options), options, KeyValueBag.getCPtr(optionsNotSet), optionsNotSet);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Demuxer.java'}, {'Syntax': 'demuxer.getNumStreams()', 'FunctionName': 'getNumStreams', 'ArgsCount': 0, 'MethodBody': 'public int getNumStreams() throws java.lang.InterruptedException, java.io.IOException {\n    return VideoJNI.Container_getNumStreams(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Container.java'}, {'Syntax': 'demuxer.getStream(i)', 'FunctionName': 'getStream', 'ArgsCount': 1, 'MethodBody': 'public MuxerStream getStream(int position) throws java.lang.InterruptedException, java.io.IOException {\n    long cPtr = VideoJNI.Muxer_getStream(swigCPtr, this, position);\n    return (cPtr == 0) ? null : new MuxerStream(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Muxer.java'}, {'Syntax': 'stream.getDecoder()', 'FunctionName': 'getDecoder', 'ArgsCount': 0, 'MethodBody': 'public Decoder getDecoder() {\n    long cPtr = VideoJNI.DemuxerStream_getDecoder(swigCPtr, this);\n    return (cPtr == 0) ? null : new Decoder(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/DemuxerStream.java'}, {'Syntax': 'decoder.getCodecType()', 'FunctionName': 'getCodecType', 'ArgsCount': 0, 'MethodBody': 'public MediaDescriptor.Type getCodecType() {\n    return MediaDescriptor.Type.swigToEnum(VideoJNI.Coder_getCodecType(swigCPtr, this));\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Coder.java'}, {'Syntax': 'audioDecoder.open(null, null)', 'FunctionName': 'open', 'ArgsCount': 2, 'MethodBody': 'public int open(String aUrl, int aFlags)\n    {\n      if (aUrl.equals(""test:succeed""))\n        return 0;\n      else\n        throw new IllegalStateException(""fails on purpose"");\n    }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/test/java/io/humble/video/customio/URLProtocolHandlerTest.java'}, {'Syntax': 'MediaAudio.make(\n        audioDecoder.getFrameSize(),\n        audioDecoder.getSampleRate(),\n        audioDecoder.getChannels(),\n        audioDecoder.getChannelLayout(),\n        audioDecoder.getSampleFormat())', 'FunctionName': 'make', 'ArgsCount': 5, 'MethodBody': 'public static IndexEntry make(long position, long timeStamp, int flags, int size, int minDistance) {\n    long cPtr = VideoJNI.IndexEntry_make(position, timeStamp, flags, size, minDistance);\n    return (cPtr == 0) ? null : new IndexEntry(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/IndexEntry.java'}, {'Syntax': 'audioDecoder.getFrameSize()', 'FunctionName': 'getFrameSize', 'ArgsCount': 0, 'MethodBody': 'public int getFrameSize() {\n    return VideoJNI.Coder_getFrameSize(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Coder.java'}, {'Syntax': 'audioDecoder.getSampleRate()', 'FunctionName': 'getSampleRate', 'ArgsCount': 0, 'MethodBody': 'public int getSampleRate() {\n    return VideoJNI.Coder_getSampleRate(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Coder.java'}, {'Syntax': 'audioDecoder.getChannels()', 'FunctionName': 'getChannels', 'ArgsCount': 0, 'MethodBody': 'public int getChannels() {\n    return VideoJNI.Coder_getChannels(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Coder.java'}, {'Syntax': 'audioDecoder.getChannelLayout()', 'FunctionName': 'getChannelLayout', 'ArgsCount': 0, 'MethodBody': 'public AudioChannel.Layout getChannelLayout() {\n    return AudioChannel.Layout.swigToEnum(VideoJNI.Coder_getChannelLayout(swigCPtr, this));\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Coder.java'}, {'Syntax': 'audioDecoder.getSampleFormat()', 'FunctionName': 'getSampleFormat', 'ArgsCount': 0, 'MethodBody': 'public AudioFormat.Type getSampleFormat() {\n    return AudioFormat.Type.swigToEnum(VideoJNI.Coder_getSampleFormat(swigCPtr, this));\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Coder.java'}, {'Syntax': 'MediaAudioConverterFactory.createConverter(\n            MediaAudioConverterFactory.DEFAULT_JAVA_AUDIO,\n            samples)', 'FunctionName': 'createConverter', 'ArgsCount': 2, 'MethodBody': 'public static MediaPictureConverter createConverter(\n    String converterDescriptor,\n    MediaPicture picture)\n  {\n    if (picture == null)\n      throw new IllegalArgumentException(""The picture is NULL."");\n\n    return createConverter(converterDescriptor, picture.getFormat(), \n      picture.getWidth(), picture.getHeight());\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/awt/MediaPictureConverterFactory.java'}, {'Syntax': 'AudioFrame.make(converter.getJavaFormat())', 'FunctionName': 'make', 'ArgsCount': 1, 'MethodBody': 'public static Encoder make(Codec codec) {\n    long cPtr = VideoJNI.Encoder_make__SWIG_0(Codec.getCPtr(codec), codec);\n    return (cPtr == 0) ? null : new Encoder(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Encoder.java'}, {'Syntax': 'converter.getJavaFormat()', 'FunctionName': 'getJavaFormat', 'ArgsCount': 0, 'MethodBody': '@Override\n  public javax.sound.sampled.AudioFormat getJavaFormat() {\n    return new javax.sound.sampled.AudioFormat(mJavaSampleRate,\n        AudioFormat.getBytesPerSample(mJavaFormat)*8, mJavaChannels, true, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/javaxsound/StereoS16AudioConverter.java'}, {'Syntax': 'MediaPacket.make()', 'FunctionName': 'make', 'ArgsCount': 0, 'MethodBody': 'public static KeyValueBag make() {\n    long cPtr = VideoJNI.KeyValueBag_make();\n    return (cPtr == 0) ? null : new KeyValueBag(cPtr, false);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/KeyValueBag.java'}, {'Syntax': 'demuxer.read(packet)', 'FunctionName': 'read', 'ArgsCount': 1, 'MethodBody': 'public int read(MediaPacket packet) throws java.lang.InterruptedException, java.io.IOException {\n    return VideoJNI.Demuxer_read(swigCPtr, this, MediaPacket.getCPtr(packet), packet);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Demuxer.java'}, {'Syntax': 'packet.getStreamIndex()', 'FunctionName': 'getStreamIndex', 'ArgsCount': 0, 'MethodBody': 'public int getStreamIndex() {\n    return VideoJNI.MediaPacket_getStreamIndex(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaPacket.java'}, {'Syntax': 'audioDecoder.decode(samples, packet, offset)', 'FunctionName': 'decode', 'ArgsCount': 3, 'MethodBody': 'public int decode(MediaSampled output, MediaPacket packet, int byteOffset) {\n    return VideoJNI.Decoder_decode(swigCPtr, this, MediaSampled.getCPtr(output), output, MediaPacket.getCPtr(packet), packet, byteOffset);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Decoder.java'}, {'Syntax': 'samples.isComplete()', 'FunctionName': 'isComplete', 'ArgsCount': 0, 'MethodBody': 'public boolean isComplete() {\n    return VideoJNI.MediaPicture_isComplete(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaPicture.java'}, {'Syntax': 'converter.toJavaAudio(rawAudio, samples)', 'FunctionName': 'toJavaAudio', 'ArgsCount': 2, 'MethodBody': '@Override\n  public ByteBuffer toJavaAudio(ByteBuffer output, MediaAudio input) {\n    validateMediaAudio(input);\n    final MediaAudio audio;\n    final int outputNumSamples;\n    if (willResample()) {\n      outputNumSamples = mMediaAudioToJavaSoundResampler.getNumResampledSamples(input.getNumSamples());\n      if (mResampledAudio == null ||\n          mResampledAudio.getMaxNumSamples() < outputNumSamples) {\n        if (mResampledAudio != null) mResampledAudio.delete();\n        mResampledAudio = MediaAudio.make(outputNumSamples,\n            mJavaSampleRate, mJavaChannels, mJavaLayout, mJavaFormat);\n      }\n      audio = mResampledAudio;\n    } else {\n      outputNumSamples = input.getNumSamples();\n      audio = input;\n    }\n    int size = AudioFormat.getBufferSizeNeeded(outputNumSamples, audio.getChannels(), audio.getFormat());\n    if (output == null) {\n      output = ByteBuffer.allocate(size);\n    } else {\n      if (output.capacity() < size)\n        throw new RuntimeException(""output bytes not large enough to hold data"");\n    }\n    if (willResample()) {\n      mMediaAudioToJavaSoundResampler.resample(audio, input);\n    }\n    // now, copy the resulting data into the bytes.\n    \n    // we force audio to be packed, so only one plane.\n    final Buffer buffer = audio.getData(0);\n    int bufferSize = audio.getDataPlaneSize(0);\n    byte[] bytes = output.array();\n    buffer.get(0, bytes, 0, bufferSize);\n    output.limit(size);\n    output.position(0);\n    buffer.delete();\n    \n    return output;\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/javaxsound/StereoS16AudioConverter.java'}, {'Syntax': 'audioFrame.play(rawAudio)', 'FunctionName': 'play', 'ArgsCount': 1, 'MethodBody': 'public void play(ByteBuffer rawAudio)\n  {\n    byte[] data = rawAudio.array();\n    mLine.write(data, rawAudio.position(), rawAudio.limit());\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/javaxsound/AudioFrame.java'}, {'Syntax': 'packet.getSize()', 'FunctionName': 'getSize', 'ArgsCount': 0, 'MethodBody': 'public int getSize() {\n    return VideoJNI.IndexEntry_getSize(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/IndexEntry.java'}, {'Syntax': 'audioDecoder.decode(samples, null, 0)', 'FunctionName': 'decode', 'ArgsCount': 3, 'MethodBody': 'public int decode(MediaSampled output, MediaPacket packet, int byteOffset) {\n    return VideoJNI.Decoder_decode(swigCPtr, this, MediaSampled.getCPtr(output), output, MediaPacket.getCPtr(packet), packet, byteOffset);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/Decoder.java'}, {'Syntax': 'samples.isComplete()', 'FunctionName': 'isComplete', 'ArgsCount': 0, 'MethodBody': 'public boolean isComplete() {\n    return VideoJNI.MediaPicture_isComplete(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaPicture.java'}, {'Syntax': 'converter.toJavaAudio(rawAudio, samples)', 'FunctionName': 'toJavaAudio', 'ArgsCount': 2, 'MethodBody': '@Override\n  public ByteBuffer toJavaAudio(ByteBuffer output, MediaAudio input) {\n    validateMediaAudio(input);\n    final MediaAudio audio;\n    final int outputNumSamples;\n    if (willResample()) {\n      outputNumSamples = mMediaAudioToJavaSoundResampler.getNumResampledSamples(input.getNumSamples());\n      if (mResampledAudio == null ||\n          mResampledAudio.getMaxNumSamples() < outputNumSamples) {\n        if (mResampledAudio != null) mResampledAudio.delete();\n        mResampledAudio = MediaAudio.make(outputNumSamples,\n            mJavaSampleRate, mJavaChannels, mJavaLayout, mJavaFormat);\n      }\n      audio = mResampledAudio;\n    } else {\n      outputNumSamples = input.getNumSamples();\n      audio = input;\n    }\n    int size = AudioFormat.getBufferSizeNeeded(outputNumSamples, audio.getChannels(), audio.getFormat());\n    if (output == null) {\n      output = ByteBuffer.allocate(size);\n    } else {\n      if (output.capacity() < size)\n        throw new RuntimeException(""output bytes not large enough to hold data"");\n    }\n    if (willResample()) {\n      mMediaAudioToJavaSoundResampler.resample(audio, input);\n    }\n    // now, copy the resulting data into the bytes.\n    \n    // we force audio to be packed, so only one plane.\n    final Buffer buffer = audio.getData(0);\n    int bufferSize = audio.getDataPlaneSize(0);\n    byte[] bytes = output.array();\n    buffer.get(0, bytes, 0, bufferSize);\n    output.limit(size);\n    output.position(0);\n    buffer.delete();\n    \n    return output;\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/javaxsound/StereoS16AudioConverter.java'}, {'Syntax': 'audioFrame.play(rawAudio)', 'FunctionName': 'play', 'ArgsCount': 1, 'MethodBody': 'public void play(ByteBuffer rawAudio)\n  {\n    byte[] data = rawAudio.array();\n    mLine.write(data, rawAudio.position(), rawAudio.limit());\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/javaxsound/AudioFrame.java'}, {'Syntax': 'samples.isComplete()', 'FunctionName': 'isComplete', 'ArgsCount': 0, 'MethodBody': 'public boolean isComplete() {\n    return VideoJNI.MediaPicture_isComplete(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/MediaPicture.java'}, {'Syntax': 'demuxer.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'public int close()\n    {\n      throw new IllegalStateException(""fails on purpose"");\n    }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/test/java/io/humble/video/customio/URLProtocolHandlerTest.java'}, {'Syntax': 'audioFrame.dispose()', 'FunctionName': 'dispose', 'ArgsCount': 0, 'MethodBody': 'public void dispose()\n  {\n    if (mLine != null)\n    {\n      /*\n       * Wait for the line to finish playing\n       */\n      mLine.drain();\n      /*\n       * Close the line.\n       */\n      mLine.close();\n      mLine=null;\n    }\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/javaxsound/AudioFrame.java'}]"
6621cd9acda9bd4817b1119e,oblac/jodd,"protected int calculateLength() {
		int len = 0;
		for (int i = 0; i < index; i++) {
			len += array[i].length();
		}
		return len;
	}",Calculates string length .,jodd-core/src/main/java/jodd/util/StringBand.java,"[{'Syntax': 'array[i].length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length() {\n\t\treturn length;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}]"
6621cd9acda9bd4817b1119f,rest-assured/rest-assured,"public RequestSpecBuilder addParam(String parameterName, Object... parameterValues) {
        spec.param(parameterName, parameterValues);
        return this;
    }",Add a parameter to be sent with the request .,rest-assured/src/main/java/io/restassured/builder/RequestSpecBuilder.java,"[{'Syntax': 'spec.param(parameterName, parameterValues)', 'FunctionName': 'param', 'ArgsCount': 2, 'MethodBody': 'RequestSpecification param(String parameterName, Object... parameterValues);', 'FileName': '/rest-assured/rest-assured/rest-assured/src/main/java/io/restassured/specification/RequestSpecification.java'}]"
6621cd9acda9bd4817b111a0,ngageoint/geopackage-android,"public void setPixelValue(CoverageDataTiffImage image, int x, int y,
                              float pixelValue) {
        image.getRasters().setFirstPixelSample(x, y, pixelValue);
    }",Set the pixel value into the image,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataTiff.java,"[{'Syntax': 'image.getRasters()', 'FunctionName': 'getRasters', 'ArgsCount': 0, 'MethodBody': 'public Rasters getRasters() {\n        if (rasters == null) {\n            readPixels();\n        }\n        return rasters;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataTiffImage.java'}]"
6621cd9acda9bd4817b111a1,Unidata/thredds,"public double getForecastTimeIntervalSizeInHours(Grib2Pds pds) {
    Grib2Pds.PdsInterval pdsIntv = (Grib2Pds.PdsInterval) pds;
    int timeUnitOrg = pds.getTimeUnit();

    // calculate total ""range"" in units of timeUnit
    int range = 0;
    for (Grib2Pds.TimeInterval ti : pdsIntv.getTimeIntervals()) {
      if (ti.timeRangeUnit == 255)
        continue;
      if ((ti.timeRangeUnit != timeUnitOrg) || (ti.timeIncrementUnit != timeUnitOrg && ti.timeIncrementUnit != 255 && ti.timeIncrement != 0)) {
        logger.warn(""TimeInterval(2) has different units timeUnit org="" + timeUnitOrg + "" TimeInterval="" + ti.timeIncrementUnit);
        throw new RuntimeException(""TimeInterval(2) has different units"");
      }

      range += ti.timeRangeLength;
      if (ti.timeIncrementUnit != 255) range += ti.timeIncrement;
    }

    // now convert that range to units of the requested period.
    CalendarPeriod timeUnitPeriod = Grib2Utils.getCalendarPeriod(convertTimeUnit(timeUnitOrg));
    if (timeUnitPeriod == null) return GribNumbers.UNDEFINEDD;
    if (timeUnitPeriod.equals(CalendarPeriod.Hour)) return range;

    double fac;
    if (timeUnitPeriod.getField() == CalendarPeriod.Field.Month) {
      fac = 30.0 * 24.0;  // nominal hours in a month
    } else if (timeUnitPeriod.getField() == CalendarPeriod.Field.Year) {
      fac = 365.0 * 24.0; // nominal hours in a year
    } else {
      fac = CalendarPeriod.Hour.getConvertFactor(timeUnitPeriod);
    }
    return fac * range;
  }",Get interval size in units of hours . Only use in GribVariable to decide on variable identity when intvMerge = false .,grib/src/main/java/ucar/nc2/grib/grib2/table/Grib2Tables.java,[]
6621cd9acda9bd4817b111a2,Unidata/thredds,"DapGroup
    getGroupScope()
            throws DapException
    {
        DapGroup gscope = (DapGroup) searchScope(DapSort.GROUP, DapSort.DATASET);
        if(gscope == null) throw new DapException(""Undefined Group Scope"");
        return gscope;
    }",Parser specific methods,dap4/d4core/src/main/java/dap4/core/dmr/parser/bison/Dap4ParserImpl.java,[]
6621cd9bcda9bd4817b111a3,GojaFramework/goja,"@SuppressWarnings(""unchecked"")
    public static <T> T unmarshal(String src, Class<T> clazz) {
        T result = null;
        try {
            Unmarshaller avm = JAXBContext.newInstance(clazz).createUnmarshaller();
            result = (T) avm.unmarshal(new StringReader(src));
        } catch (JAXBException e) {
            Throwables.propagate(e);
        }
        return result;
    }",string - > object,goja-core/src/main/java/goja/core/kits/JaxbKit.java,[]
6621cd9bcda9bd4817b111a4,oblac/jodd,"public void invoke(final ActionRequest actionRequest) {
		if (executorService == null) {
			throw new MadvocException(""No action is marked as async!"");
		}

		final HttpServletRequest servletRequest = actionRequest.getHttpServletRequest();

		log.debug(() -> ""Async call to: "" + actionRequest);

		final AsyncContext asyncContext = servletRequest.startAsync();

		executorService.submit(() -> {
			try {
				actionRequest.invoke();
			} catch (Exception ex) {
				log.error(""Invoking async action path failed: "" , ExceptionUtil.unwrapThrowable(ex));
			} finally {
				asyncContext.complete();
			}
		});
	}",Invokes an action asynchronously by submitting it to the thread pool .,jodd-madvoc/src/main/java/jodd/madvoc/component/AsyncActionExecutor.java,"[{'Syntax': 'actionRequest.getHttpServletRequest()', 'FunctionName': 'getHttpServletRequest', 'ArgsCount': 0, 'MethodBody': 'public HttpServletRequest getHttpServletRequest() {\n\t\treturn servletRequest;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'actionRequest.invoke()', 'FunctionName': 'invoke', 'ArgsCount': 0, 'MethodBody': 'public Object invoke() throws Exception {\n\t\treturn executionArray[executionIndex++].apply(this);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}]"
6621cd9bcda9bd4817b111a5,beworker/tinymachine,"public void fireEvent(Object event) {
        if (event == null) {
            throw new IllegalArgumentException(""Event must not be null."");
        }
        mTaskQueue.offer(Task.obtainTask(Task.CODE_FIRE_EVENT, event, -1));
        if (!mQueueProcessed) processTaskQueue();
    }",Forwards an event into state machine . State machine will deliver the event to a handler methods responsible for its processing . If there is no handler method found then event gets silently ignored and this call has no effect .,tinymachine/src/main/java/de/halfbit/tinymachine/TinyMachine.java,"[{'Syntax': 'mTaskQueue.offer(Task.obtainTask(Task.CODE_FIRE_EVENT, event, -1))', 'FunctionName': 'offer', 'ArgsCount': 1, 'MethodBody': 'public void offer(Task task) {\n            if (tail == null) {\n                tail = head = task;\n            } else {\n                tail.prev = task;\n                tail = task;\n            }\n        }', 'FileName': '/beworker/tinymachine/tinymachine/src/main/java/de/halfbit/tinymachine/TinyMachine.java'}, {'Syntax': 'Task.obtainTask(Task.CODE_FIRE_EVENT, event, -1)', 'FunctionName': 'obtainTask', 'ArgsCount': 3, 'MethodBody': 'public static Task obtainTask(int code, Object event, int state) {\n            Task task;\n            synchronized (POOL) {\n                task = POOL.acquire();\n            }\n            task.code = code;\n            task.event = event;\n            task.state = state;\n            task.prev = null;\n            return task;\n        }', 'FileName': '/beworker/tinymachine/tinymachine/src/main/java/de/halfbit/tinymachine/TinyMachine.java'}, {'Syntax': 'processTaskQueue()', 'FunctionName': 'processTaskQueue', 'ArgsCount': 0, 'MethodBody': 'private void processTaskQueue() {\n        mQueueProcessed = true;\n        try {\n            Task task;\n            while((task = mTaskQueue.poll()) != null) {\n                switch (task.code) {\n\n                    case Task.CODE_FIRE_EVENT: {\n                        Object event = task.event;\n                        final Class<? extends Object> clazz = event.getClass();\n                        fire(clazz, event, StateHandler.STATE_ANY);\n                        fire(clazz, event, mCurrentState);\n                        break;\n                    }\n\n                    case Task.CODE_TRANSITION: {\n                        int state = task.state;\n                        if (mCurrentState != state) {\n                            fire(OnExit.class, null, StateHandler.STATE_ANY);\n                            fire(OnExit.class, null, mCurrentState);\n                            mCurrentState = state;\n                            if (mTraceTag != null) {\n                                log(""new state"", null);\n                            }\n                            fire(OnEntry.class, null, StateHandler.STATE_ANY);\n                            fire(OnEntry.class, null, mCurrentState);\n                        }\n                        break;\n                    }\n\n                    default: throw new IllegalStateException(""wrong code: "" + task.code);\n                }\n                task.recycle();\n            }\n        } finally {\n            mQueueProcessed = false;\n        }\n    }', 'FileName': '/beworker/tinymachine/tinymachine/src/main/java/de/halfbit/tinymachine/TinyMachine.java'}]"
6621cd9bcda9bd4817b111a6,boonproject/boon,"public static boolean hasStringField( final Object value1, final String name ) {

        Class<?> clz = value1.getClass();
        return classHasStringField( clz, name );
    }",Checks to see if we have a string field .,boon/src/main/java/org/boon/core/reflection/Fields.java,"[{'Syntax': 'classHasStringField( clz, name )', 'FunctionName': 'classHasStringField', 'ArgsCount': 2, 'MethodBody': 'public static boolean classHasStringField( Class<?> clz, String name ) {\n\n        List<Field> fields = Reflection.getAllFields( clz );\n        for ( Field field : fields ) {\n            if (\n                    field.getType().equals( Typ.string ) &&\n                            field.getName().equals( name ) &&\n                            !Modifier.isStatic( field.getModifiers() ) &&\n                            field.getDeclaringClass() == clz\n                    ) {\n                return true;\n            }\n        }\n\n        return false;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/core/reflection/Fields.java'}]"
6621cd9bcda9bd4817b111a7,orientechnologies/orientdb,"public long countView(final String viewName) {
    final OView cls = getMetadata().getImmutableSchemaSnapshot().getView(viewName);
    if (cls == null)
      throw new IllegalArgumentException(""View '"" + cls + ""' not found in database"");

    return countClass(cls, false);
  }",Returns the number of the records of the class iClassName .,core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java,"[{'Syntax': 'getMetadata().getImmutableSchemaSnapshot().getView(viewName)', 'FunctionName': 'getView', 'ArgsCount': 1, 'MethodBody': 'OView getView(String name);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OSchema.java'}, {'Syntax': 'getMetadata().getImmutableSchemaSnapshot()', 'FunctionName': 'getImmutableSchemaSnapshot', 'ArgsCount': 0, 'MethodBody': 'OImmutableSchema getImmutableSchemaSnapshot();', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/OMetadataInternal.java'}, {'Syntax': 'getMetadata()', 'FunctionName': 'getMetadata', 'ArgsCount': 0, 'MethodBody': 'public ORecordMetadata getMetadata() {\n    return metadata;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OGetRecordMetadataResponse.java'}, {'Syntax': 'countClass(cls, false)', 'FunctionName': 'countClass', 'ArgsCount': 2, 'MethodBody': '@Override\n  public long countClass(String iClassName, boolean iPolymorphic) {\n    checkOpenness();\n    return internal.countClass(iClassName, iPolymorphic);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentTx.java'}]"
6621cd9bcda9bd4817b111a8,rackerlabs/blueflood,"public synchronized boolean isLocatorCurrentInTokenDiscoveryLayer(Locator loc) {
        LocatorCacheEntry entry = insertedLocators.getIfPresent(loc.toString());
        return entry != null && entry.isTokenDiscoveryCurrent();
    }",Checks if Locator is recently inserted in the token discovery layer,blueflood-core/src/main/java/com/rackspacecloud/blueflood/cache/LocatorCache.java,"[{'Syntax': 'loc.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n        return ""ElasticMetricDiscovery ["" +\n                ""tenantId="" + tenantId + "", "" +\n                ""metricName="" + metricName + "", "" +\n                ""fields="" + fields.toString() + ""]"";\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-elasticsearch/src/main/java/com/rackspacecloud/blueflood/io/Discovery.java'}]"
6621cd9bcda9bd4817b111a9,Unidata/thredds,"protected void makeFileSubType() {
    // determine file type
    Key key = findKey(GempakStation.SLAT);
    if (key == null)
      throw new IllegalStateException(""File does not have key=""+GempakStation.SLAT);
    String latType = key.type;
    Key dateKey = findKey(DATE);
    if (dateKey != null && !dateKey.type.equals(latType)) {
      if (latType.equals(ROW)) {
        subType = CLIMATE;
      } else {
        subType = STANDARD;
      }
    } else {
      subType = SHIP;
    }
  }",Set the file subType .,visad/src/main/java/ucar/nc2/iosp/gempak/GempakSurfaceFileReader.java,[]
6621cd9bcda9bd4817b111aa,lessthanoptimal/GeoRegression,"private static boolean containedPlane( Point3D_F64 T_v0,
										   Point3D_F64 output,
										   Vector3D_F64 u , Vector3D_F64 v ,
										   Vector3D_F64 w0 ) {
		double uu, uv, vv, wu, wv, D;
		uu = u.dot(u);
		uv = u.dot(v);
		vv = v.dot(v);
		w0.minus(output,T_v0);
		wu = w0.dot(u);
		wv = w0.dot(v);
		D = uv * uv - uu * vv;

		// get and test parametric coords
		double s, t;
		s = (uv * wv - vv * wu) / D;
		if (s < 0.0 || s > 1.0)        // I is outside T
			return false;
		t = (uv * wu - uu * wv) / D;
		return !(t < 0.0) && !((s + t) > 1.0);  // I is outside T
	}",Determines if the point on the same plane as T is contained inside of T .,main/src/georegression/metric/Intersection3D_F64.java,"[{'Syntax': 'u.dot(u)', 'FunctionName': 'dot', 'ArgsCount': 1, 'MethodBody': 'public double dot( Vector4D_F64 a ) {\n\t\treturn x*a.x + y*a.y + z*a.z + w*a.w;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/point/Vector4D_F64.java'}, {'Syntax': 'u.dot(v)', 'FunctionName': 'dot', 'ArgsCount': 1, 'MethodBody': 'public double dot( Vector4D_F64 a ) {\n\t\treturn x*a.x + y*a.y + z*a.z + w*a.w;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/point/Vector4D_F64.java'}, {'Syntax': 'v.dot(v)', 'FunctionName': 'dot', 'ArgsCount': 1, 'MethodBody': 'public double dot( Vector4D_F64 a ) {\n\t\treturn x*a.x + y*a.y + z*a.z + w*a.w;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/point/Vector4D_F64.java'}, {'Syntax': 'w0.minus(output,T_v0)', 'FunctionName': 'minus', 'ArgsCount': 2, 'MethodBody': 'public void minus( Point3D_F64 a, Point3D_F64 b ) {\n\t\tx = a.x - b.x;\n\t\ty = a.y - b.y;\n\t\tz = a.z - b.z;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/point/Vector3D_F64.java'}, {'Syntax': 'w0.dot(u)', 'FunctionName': 'dot', 'ArgsCount': 1, 'MethodBody': 'public double dot( Vector4D_F64 a ) {\n\t\treturn x*a.x + y*a.y + z*a.z + w*a.w;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/point/Vector4D_F64.java'}, {'Syntax': 'w0.dot(v)', 'FunctionName': 'dot', 'ArgsCount': 1, 'MethodBody': 'public double dot( Vector4D_F64 a ) {\n\t\treturn x*a.x + y*a.y + z*a.z + w*a.w;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/point/Vector4D_F64.java'}]"
6621cd9bcda9bd4817b111ab,open-korean-text/open-korean-text,"public static List<KoreanPhraseExtractor.KoreanPhrase> extractPhrases(Seq<KoreanToken> tokens, boolean filterSpam, boolean includeHashtags) {
    Seq<KoreanPhraseExtractor.KoreanPhrase> seq = OpenKoreanTextProcessor.extractPhrases(tokens, filterSpam, includeHashtags);
    return toJavaList(seq);
  }",Extract phrases from Korean input text,src/main/java/org/openkoreantext/processor/OpenKoreanTextProcessorJava.java,"[{'Syntax': 'OpenKoreanTextProcessor.extractPhrases(tokens, filterSpam, includeHashtags)', 'FunctionName': 'extractPhrases', 'ArgsCount': 3, 'MethodBody': 'public static List<KoreanPhraseExtractor.KoreanPhrase> extractPhrases(Seq<KoreanToken> tokens, boolean filterSpam, boolean includeHashtags) {\n    Seq<KoreanPhraseExtractor.KoreanPhrase> seq = OpenKoreanTextProcessor.extractPhrases(tokens, filterSpam, includeHashtags);\n    return toJavaList(seq);\n  }', 'FileName': '/open-korean-text/open-korean-text/src/main/java/org/openkoreantext/processor/OpenKoreanTextProcessorJava.java'}, {'Syntax': 'toJavaList(seq)', 'FunctionName': 'toJavaList', 'ArgsCount': 1, 'MethodBody': 'private static <T> List<T> toJavaList(Seq<T> seq) {\n    ArrayList<T> javaList = new ArrayList<>();\n    javaList.addAll(JavaConverters.asJavaCollectionConverter(seq).asJavaCollection());\n    return javaList;\n  }', 'FileName': '/open-korean-text/open-korean-text/src/main/java/org/openkoreantext/processor/OpenKoreanTextProcessorJava.java'}]"
6621cd9bcda9bd4817b111ac,oblac/jodd,"protected void addMethodInjectionPoint(final MethodInjectionPoint mip) {
		if (methods == null) {
			methods = new MethodInjectionPoint[1];
			methods[0] = mip;
		} else {
			methods = ArraysUtil.append(methods, mip);
		}
	}",Adds method injection point .,jodd-petite/src/main/java/jodd/petite/BeanDefinition.java,[]
6621cd9bcda9bd4817b111ad,oaqa/baseqa,"public void setNamedEntityTypes(StringList v) {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_namedEntityTypes == null)
      jcasType.jcas.throwFeatMissing(""namedEntityTypes"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    jcasType.ll_cas.ll_setRefValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_namedEntityTypes, jcasType.ll_cas.ll_getFSRef(v));}",setter for namedEntityTypes - sets List of Named Entity types associated with this concept .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java,[]
6621cd9bcda9bd4817b111ae,workplacesystems/utilsj,"private static <K,V> boolean isBlack(final Node<K,V> node, final int index) {

        return ((node == null)
                ? true
                : node.isBlack(index));
    }",is the specified black red? if the node does not exist sure it s black thank you,src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java,"[{'Syntax': 'node.isBlack(index)', 'FunctionName': 'isBlack', 'ArgsCount': 1, 'MethodBody': 'private boolean isBlack(final int index) {\r\n            return index == KEY ? blackColorKey : blackColorValue;\r\n        }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}]"
6621cd9bcda9bd4817b111af,Koekiebox-PTY-LTD/Fluid,"public Attachment deleteAttachment(Attachment attachmentParam)
    {
        if(attachmentParam != null && this.serviceTicket != null)
        {
            attachmentParam.setServiceTicket(this.serviceTicket);
        }

        return new Attachment(this.postJson(
                attachmentParam, WS.Path.Attachment.Version1.attachmentDelete()));
    }",Delete an existing Attachment .,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/attachment/AttachmentClient.java,"[{'Syntax': 'attachmentParam.setServiceTicket(this.serviceTicket)', 'FunctionName': 'setServiceTicket', 'ArgsCount': 1, 'MethodBody': 'public void setServiceTicket(String serviceTicketParam) {\r\n\t\tthis.serviceTicket = serviceTicketParam;\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ABaseFluidVO.java'}, {'Syntax': 'this.postJson(\n                attachmentParam, WS.Path.Attachment.Version1.attachmentDelete())', 'FunctionName': 'postJson', 'ArgsCount': 2, 'MethodBody': 'protected JSONObject postJson(ABaseFluidJSONObject baseDomainParam, String postfixUrlParam) {\n\t\t//No need to check connection...\n\t\treturn this.postJson(false, baseDomainParam, postfixUrlParam);\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/ABaseClientWS.java'}, {'Syntax': 'WS.Path.Attachment.Version1.attachmentDelete()', 'FunctionName': 'attachmentDelete', 'ArgsCount': 0, 'MethodBody': 'public static final String attachmentDelete() {\n\t\t\t\t\treturn attachmentDelete(false);\n\t\t\t\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ws/WS.java'}]"
6621cd9bcda9bd4817b111b0,ngageoint/geopackage-android,"private void deleteMapping(StyleMappingDao mappingDao, long featureId,
                               GeometryType geometryType) {
        if (mappingDao != null) {
            mappingDao.deleteByBaseId(featureId, geometryType);
        }
    }",Delete the style mapping with the geometry type value,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,"[{'Syntax': 'mappingDao.deleteByBaseId(featureId, geometryType)', 'FunctionName': 'deleteByBaseId', 'ArgsCount': 2, 'MethodBody': 'public int deleteByBaseId(long id, GeometryType geometryType) {\n\n        String geometryTypeName = null;\n        if (geometryType != null) {\n            geometryTypeName = geometryType.getName();\n        }\n\n        StringBuilder where = new StringBuilder();\n        where.append(buildWhere(StyleMappingTable.COLUMN_BASE_ID, id));\n        where.append("" AND "");\n        where.append(buildWhere(StyleMappingTable.COLUMN_GEOMETRY_TYPE_NAME,\n                geometryTypeName));\n\n        List<Object> whereArguments = new ArrayList<>();\n        whereArguments.add(id);\n        if (geometryTypeName != null) {\n            whereArguments.add(geometryTypeName);\n        }\n\n        String[] whereArgs = buildWhereArgs(whereArguments);\n\n        int deleted = delete(where.toString(), whereArgs);\n\n        return deleted;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/StyleMappingDao.java'}]"
6621cd9bcda9bd4817b111b1,Unidata/thredds,"public TimeHelper setReferenceDate(CalendarDate refDate) {
    CalendarDateUnit cdUnit = CalendarDateUnit.of(dateUnit.getCalendar(), dateUnit.getCalendarField(), refDate);
    return new TimeHelper(cdUnit);
  }",copy on modify,cdm/src/main/java/ucar/nc2/ft2/coverage/TimeHelper.java,[]
6621cd9bcda9bd4817b111b2,wildfly/wildfly,"private static PersistenceProvider lookupProvider(
            PersistenceUnitMetadata pu,
            PersistenceProviderDeploymentHolder persistenceProviderDeploymentHolder,
            DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException {

        /**
         * check if the deployment is already associated with the specified persistence provider
         */
        Map<String, PersistenceProvider> providerMap = persistenceProviderDeploymentHolder != null ?
                persistenceProviderDeploymentHolder.getProviders() : null;
        if (providerMap != null) {
            synchronized (providerMap) {
                if(providerMap.containsKey(pu.getPersistenceProviderClassName())){
                    ROOT_LOGGER.tracef(""deployment %s is using %s"", deploymentUnit.getName(), pu.getPersistenceProviderClassName());
                    return providerMap.get(pu.getPersistenceProviderClassName());
                }
            }
        }

        String configuredPersistenceProviderModule = pu.getProperties().getProperty(Configuration.PROVIDER_MODULE);
        String persistenceProviderClassName = pu.getPersistenceProviderClassName();

        if (persistenceProviderClassName == null) {
            persistenceProviderClassName = Configuration.PROVIDER_CLASS_DEFAULT;
        }

        /**
         * locate persistence provider in specified static module
         */
        if (configuredPersistenceProviderModule != null) {
            List<PersistenceProvider> providers;
            if (Configuration.PROVIDER_MODULE_APPLICATION_SUPPLIED.equals(configuredPersistenceProviderModule)) {
                try {
                    // load the persistence provider from the application deployment
                    final ModuleClassLoader classLoader = deploymentUnit.getAttachment(Attachments.MODULE).getClassLoader();
                    PersistenceProvider provider = PersistenceProviderLoader.loadProviderFromDeployment(classLoader, persistenceProviderClassName);
                    providers = new ArrayList<>();
                    providers.add(provider);
                    PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                    return provider;

                } catch (ClassNotFoundException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                } catch (InstantiationException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                } catch (IllegalAccessException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                }
            } else {
                try {
                    providers = PersistenceProviderLoader.loadProviderModuleByName(configuredPersistenceProviderModule);
                    PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                    PersistenceProvider provider = getProviderByName(pu, providers);
                    if (provider != null) {
                        return provider;
                    }
                } catch (ModuleLoadException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, configuredPersistenceProviderModule, persistenceProviderClassName);
                }
            }
        }

        // try to determine the static module name based on the persistence provider class name
        String providerNameDerivedFromClassName = Configuration.getProviderModuleNameFromProviderClassName(persistenceProviderClassName);

        // see if the providerNameDerivedFromClassName has been loaded yet
        PersistenceProvider provider = getProviderByName(pu);

        // if we haven't loaded the provider yet, try loading now
        if (provider == null && providerNameDerivedFromClassName != null) {
            try {
                List<PersistenceProvider> providers = PersistenceProviderLoader.loadProviderModuleByName(providerNameDerivedFromClassName);
                PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                provider = getProviderByName(pu, providers);
            } catch (ModuleLoadException e) {
                throw JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, providerNameDerivedFromClassName, persistenceProviderClassName);
            }
        }

        if (provider == null)
            throw JpaLogger.ROOT_LOGGER.persistenceProviderNotFound(persistenceProviderClassName);

        return provider;
    }",Look up the persistence provider,jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java,"[{'Syntax': 'persistenceProviderDeploymentHolder.getProviders()', 'FunctionName': 'getProviders', 'ArgsCount': 0, 'MethodBody': 'Collection<String> getProviders();', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/provider/bean/ServiceProviderRetriever.java'}, {'Syntax': 'providerMap.containsKey(pu.getPersistenceProviderClassName())', 'FunctionName': 'containsKey', 'ArgsCount': 1, 'MethodBody': 'public boolean containsKey(Object key) {\n        int hash = hashOf(key);\n        return segmentFor(hash).containsKey(key, hash);\n    }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'pu.getPersistenceProviderClassName()', 'FunctionName': 'getPersistenceProviderClassName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getPersistenceProviderClassName() {\n        return provider;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'deploymentUnit.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'pu.getPersistenceProviderClassName()', 'FunctionName': 'getPersistenceProviderClassName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getPersistenceProviderClassName() {\n        return provider;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'providerMap.get(pu.getPersistenceProviderClassName())', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Booking get(String bookingId) throws NotFoundException {\n        if (!bookings.containsKey(bookingId))\n            throw new NotFoundException(Response.status(404).entity(""Invalid bookingId id: "" + bookingId).build());\n\n        return bookings.get(bookingId);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/lra/participant/smoke/hotel/HotelService.java'}, {'Syntax': 'pu.getPersistenceProviderClassName()', 'FunctionName': 'getPersistenceProviderClassName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getPersistenceProviderClassName() {\n        return provider;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'pu.getProperties()', 'FunctionName': 'getProperties', 'ArgsCount': 0, 'MethodBody': '@Override\n    public Map<String, String> getProperties() {\n        return Collections.unmodifiableMap(props);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/microprofile/src/test/java/org/wildfly/test/integration/microprofile/config/smallrye/management/config_source/from_class/CustomConfigSourceServiceLoader.java'}, {'Syntax': 'pu.getPersistenceProviderClassName()', 'FunctionName': 'getPersistenceProviderClassName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getPersistenceProviderClassName() {\n        return provider;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceUnitMetadataImpl.java'}, {'Syntax': 'Configuration.PROVIDER_MODULE_APPLICATION_SUPPLIED.equals(configuredPersistenceProviderModule)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        MetricID metricID = (MetricID) o;\n        return metricName.equals(metricID.metricName) &&\n                tags.equals(metricID.tags);\n    }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/MetricID.java'}, {'Syntax': 'deploymentUnit.getAttachment(Attachments.MODULE).getClassLoader()', 'FunctionName': 'getClassLoader', 'ArgsCount': 0, 'MethodBody': '@Override\n    public ClassLoader getClassLoader() {\n        throw BatchLogger.LOGGER.noBatchEnvironmentFound(WildFlySecurityManager.getCurrentContextClassLoaderPrivileged());\n    }', 'FileName': '/wildfly/wildfly/batch-jberet/src/main/java/org/wildfly/extension/batch/jberet/DefaultBatchEnvironment.java'}, {'Syntax': 'PersistenceProviderLoader.loadProviderFromDeployment(classLoader, persistenceProviderClassName)', 'FunctionName': 'loadProviderFromDeployment', 'ArgsCount': 2, 'MethodBody': 'public static PersistenceProvider loadProviderFromDeployment(ClassLoader classLoader, String persistenceProviderClassName) throws ClassNotFoundException, IllegalAccessException, InstantiationException {\n        return (PersistenceProvider) classLoader.loadClass(persistenceProviderClassName).newInstance();\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/persistenceprovider/PersistenceProviderLoader.java'}, {'Syntax': 'providers.add(provider)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Consumer<Supplier<Node>> add(ServiceName name) {\n        return this.registry.add(name);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/NodeServiceExecutorRegistry.java'}, {'Syntax': 'PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null)', 'FunctionName': 'savePersistenceProviderInDeploymentUnit', 'ArgsCount': 3, 'MethodBody': 'public static void savePersistenceProviderInDeploymentUnit(\n            DeploymentUnit deploymentUnit, final List<PersistenceProvider> providerList, final List<PersistenceProviderAdaptor> adaptorList) {\n        deploymentUnit = DeploymentUtils.getTopDeploymentUnit(deploymentUnit);\n        PersistenceProviderDeploymentHolder persistenceProviderDeploymentHolder = getPersistenceProviderDeploymentHolder(deploymentUnit);\n        if (persistenceProviderDeploymentHolder == null) {\n            persistenceProviderDeploymentHolder = new PersistenceProviderDeploymentHolder(providerList, adaptorList);\n            deploymentUnit.putAttachment(JpaAttachments.DEPLOYED_PERSISTENCE_PROVIDER, persistenceProviderDeploymentHolder);\n        } else {\n            synchronized (persistenceProviderDeploymentHolder.providerMap) {\n                for(PersistenceProvider persistenceProvider : providerList){\n                    persistenceProviderDeploymentHolder.providerMap.put(persistenceProvider.getClass().getName(), persistenceProvider);\n                }\n            }\n            if (adaptorList != null) {\n                persistenceProviderDeploymentHolder.adapterList.addAll(adaptorList);\n            }\n        }\n\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceProviderDeploymentHolder.java'}, {'Syntax': 'JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName)', 'FunctionName': 'cannotDeployApp', 'ArgsCount': 2, 'MethodBody': '@Message(id = 19, value = ""Could not deploy application packaged persistence provider \'%s\'"")\n    DeploymentUnitProcessingException cannotDeployApp(@Cause Throwable cause, String providerName);', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/messages/JpaLogger.java'}, {'Syntax': 'JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName)', 'FunctionName': 'cannotDeployApp', 'ArgsCount': 2, 'MethodBody': '@Message(id = 19, value = ""Could not deploy application packaged persistence provider \'%s\'"")\n    DeploymentUnitProcessingException cannotDeployApp(@Cause Throwable cause, String providerName);', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/messages/JpaLogger.java'}, {'Syntax': 'JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName)', 'FunctionName': 'cannotDeployApp', 'ArgsCount': 2, 'MethodBody': '@Message(id = 19, value = ""Could not deploy application packaged persistence provider \'%s\'"")\n    DeploymentUnitProcessingException cannotDeployApp(@Cause Throwable cause, String providerName);', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/messages/JpaLogger.java'}, {'Syntax': 'PersistenceProviderLoader.loadProviderModuleByName(configuredPersistenceProviderModule)', 'FunctionName': 'loadProviderModuleByName', 'ArgsCount': 1, 'MethodBody': 'public static List<PersistenceProvider> loadProviderModuleByName(String moduleName) throws ModuleLoadException {\n        final ModuleLoader moduleLoader = Module.getBootModuleLoader();\n        Module module = moduleLoader.loadModule(ModuleIdentifier.fromString(moduleName));\n        final ServiceLoader<PersistenceProvider> serviceLoader =\n            module.loadService(PersistenceProvider.class);\n        List<PersistenceProvider> result = new ArrayList<>();\n        if (serviceLoader != null) {\n            for (PersistenceProvider provider1 : serviceLoader) {\n                // persistence provider jar may contain multiple provider service implementations\n                // save each provider\n                PersistenceProviderResolverImpl.getInstance().addPersistenceProvider(provider1);\n                result.add(provider1);\n            }\n        }\n        return result;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/persistenceprovider/PersistenceProviderLoader.java'}, {'Syntax': 'PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null)', 'FunctionName': 'savePersistenceProviderInDeploymentUnit', 'ArgsCount': 3, 'MethodBody': 'public static void savePersistenceProviderInDeploymentUnit(\n            DeploymentUnit deploymentUnit, final List<PersistenceProvider> providerList, final List<PersistenceProviderAdaptor> adaptorList) {\n        deploymentUnit = DeploymentUtils.getTopDeploymentUnit(deploymentUnit);\n        PersistenceProviderDeploymentHolder persistenceProviderDeploymentHolder = getPersistenceProviderDeploymentHolder(deploymentUnit);\n        if (persistenceProviderDeploymentHolder == null) {\n            persistenceProviderDeploymentHolder = new PersistenceProviderDeploymentHolder(providerList, adaptorList);\n            deploymentUnit.putAttachment(JpaAttachments.DEPLOYED_PERSISTENCE_PROVIDER, persistenceProviderDeploymentHolder);\n        } else {\n            synchronized (persistenceProviderDeploymentHolder.providerMap) {\n                for(PersistenceProvider persistenceProvider : providerList){\n                    persistenceProviderDeploymentHolder.providerMap.put(persistenceProvider.getClass().getName(), persistenceProvider);\n                }\n            }\n            if (adaptorList != null) {\n                persistenceProviderDeploymentHolder.adapterList.addAll(adaptorList);\n            }\n        }\n\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceProviderDeploymentHolder.java'}, {'Syntax': 'getProviderByName(pu, providers)', 'FunctionName': 'getProviderByName', 'ArgsCount': 2, 'MethodBody': 'private static PersistenceProvider getProviderByName(PersistenceUnitMetadata pu, List<PersistenceProvider> providers) {\n        String providerName = pu.getPersistenceProviderClassName();\n        for (PersistenceProvider provider : providers) {\n            if (providerName == null ||\n                    provider.getClass().getName().equals(providerName) ||\n                    // WFLY-4931 allow legacy Hibernate persistence provider name org.hibernate.ejb.HibernatePersistence to be used.\n                    (provider.getClass().getName().equals(Configuration.PROVIDER_CLASS_DEFAULT) && providerName.equals(Configuration.PROVIDER_CLASS_HIBERNATE4_1))\n                    ) {\n                return provider;                    // return the provider that matched classname\n            }\n        }\n        return null;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java'}, {'Syntax': 'JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, configuredPersistenceProviderModule, persistenceProviderClassName)', 'FunctionName': 'cannotLoadPersistenceProviderModule', 'ArgsCount': 3, 'MethodBody': '@Message(id = 27, value = ""Persistence provider module load error %s (class %s)"")\n    DeploymentUnitProcessingException cannotLoadPersistenceProviderModule(@Cause Throwable cause, String persistenceProviderModule, String persistenceProviderClass);', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/messages/JpaLogger.java'}, {'Syntax': 'Configuration.getProviderModuleNameFromProviderClassName(persistenceProviderClassName)', 'FunctionName': 'getProviderModuleNameFromProviderClassName', 'ArgsCount': 1, 'MethodBody': 'public static String getProviderModuleNameFromProviderClassName(final String providerClassName) {\n        return providerClassToModuleName.get(providerClassName);\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/Configuration.java'}, {'Syntax': 'getProviderByName(pu)', 'FunctionName': 'getProviderByName', 'ArgsCount': 1, 'MethodBody': 'private static PersistenceProvider getProviderByName(PersistenceUnitMetadata pu) {\n        return getProviderByName(pu, PersistenceProviderResolverHolder.getPersistenceProviderResolver().getPersistenceProviders());\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java'}, {'Syntax': 'PersistenceProviderLoader.loadProviderModuleByName(providerNameDerivedFromClassName)', 'FunctionName': 'loadProviderModuleByName', 'ArgsCount': 1, 'MethodBody': 'public static List<PersistenceProvider> loadProviderModuleByName(String moduleName) throws ModuleLoadException {\n        final ModuleLoader moduleLoader = Module.getBootModuleLoader();\n        Module module = moduleLoader.loadModule(ModuleIdentifier.fromString(moduleName));\n        final ServiceLoader<PersistenceProvider> serviceLoader =\n            module.loadService(PersistenceProvider.class);\n        List<PersistenceProvider> result = new ArrayList<>();\n        if (serviceLoader != null) {\n            for (PersistenceProvider provider1 : serviceLoader) {\n                // persistence provider jar may contain multiple provider service implementations\n                // save each provider\n                PersistenceProviderResolverImpl.getInstance().addPersistenceProvider(provider1);\n                result.add(provider1);\n            }\n        }\n        return result;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/persistenceprovider/PersistenceProviderLoader.java'}, {'Syntax': 'PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null)', 'FunctionName': 'savePersistenceProviderInDeploymentUnit', 'ArgsCount': 3, 'MethodBody': 'public static void savePersistenceProviderInDeploymentUnit(\n            DeploymentUnit deploymentUnit, final List<PersistenceProvider> providerList, final List<PersistenceProviderAdaptor> adaptorList) {\n        deploymentUnit = DeploymentUtils.getTopDeploymentUnit(deploymentUnit);\n        PersistenceProviderDeploymentHolder persistenceProviderDeploymentHolder = getPersistenceProviderDeploymentHolder(deploymentUnit);\n        if (persistenceProviderDeploymentHolder == null) {\n            persistenceProviderDeploymentHolder = new PersistenceProviderDeploymentHolder(providerList, adaptorList);\n            deploymentUnit.putAttachment(JpaAttachments.DEPLOYED_PERSISTENCE_PROVIDER, persistenceProviderDeploymentHolder);\n        } else {\n            synchronized (persistenceProviderDeploymentHolder.providerMap) {\n                for(PersistenceProvider persistenceProvider : providerList){\n                    persistenceProviderDeploymentHolder.providerMap.put(persistenceProvider.getClass().getName(), persistenceProvider);\n                }\n            }\n            if (adaptorList != null) {\n                persistenceProviderDeploymentHolder.adapterList.addAll(adaptorList);\n            }\n        }\n\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/config/PersistenceProviderDeploymentHolder.java'}, {'Syntax': 'getProviderByName(pu, providers)', 'FunctionName': 'getProviderByName', 'ArgsCount': 2, 'MethodBody': 'private static PersistenceProvider getProviderByName(PersistenceUnitMetadata pu, List<PersistenceProvider> providers) {\n        String providerName = pu.getPersistenceProviderClassName();\n        for (PersistenceProvider provider : providers) {\n            if (providerName == null ||\n                    provider.getClass().getName().equals(providerName) ||\n                    // WFLY-4931 allow legacy Hibernate persistence provider name org.hibernate.ejb.HibernatePersistence to be used.\n                    (provider.getClass().getName().equals(Configuration.PROVIDER_CLASS_DEFAULT) && providerName.equals(Configuration.PROVIDER_CLASS_HIBERNATE4_1))\n                    ) {\n                return provider;                    // return the provider that matched classname\n            }\n        }\n        return null;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java'}, {'Syntax': 'JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, providerNameDerivedFromClassName, persistenceProviderClassName)', 'FunctionName': 'cannotLoadPersistenceProviderModule', 'ArgsCount': 3, 'MethodBody': '@Message(id = 27, value = ""Persistence provider module load error %s (class %s)"")\n    DeploymentUnitProcessingException cannotLoadPersistenceProviderModule(@Cause Throwable cause, String persistenceProviderModule, String persistenceProviderClass);', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/messages/JpaLogger.java'}, {'Syntax': 'JpaLogger.ROOT_LOGGER.persistenceProviderNotFound(persistenceProviderClassName)', 'FunctionName': 'persistenceProviderNotFound', 'ArgsCount': 1, 'MethodBody': '@Message(id = 57, value = ""PersistenceProvider \'%s\' not found"")\n    PersistenceException persistenceProviderNotFound(String providerName);', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/messages/JpaLogger.java'}]"
6621cd9bcda9bd4817b111b3,Unidata/thredds,"public String getUniqueID() {
    String authority = getAuthority();
    if ((authority != null) && (getID() != null))
      return authority + "":"" + getID();
    else if (getID() != null)
      return getID();
    else
      return null;
  }",If this dataset has an authority and an ID then the concatenation of them is the globally unique ID .,legacy/src/main/java/thredds/catalog/InvDataset.java,[]
6621cd9bcda9bd4817b111b4,orientechnologies/orientdb,"public static void setVersion(final ORecord record, final int iVersion) {
    final ORecordAbstract rec = (ORecordAbstract) record;
    rec.setVersion(iVersion);
  }",Internal only . Sets the version .,core/src/main/java/com/orientechnologies/orient/core/record/ORecordInternal.java,"[{'Syntax': 'rec.setVersion(iVersion)', 'FunctionName': 'setVersion', 'ArgsCount': 1, 'MethodBody': 'public void setVersion(int version) {\n    this.version = version;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/tx/ORecordOperation38Response.java'}]"
6621cd9bcda9bd4817b111b5,alipay/sofa-bolt,"public void onEvent(ConnectionEventType type, String remoteAddr, Connection conn) {
        List<ConnectionEventProcessor> processorList = this.processors.get(type);
        if (processorList != null) {
            for (ConnectionEventProcessor processor : processorList) {
                processor.onEvent(remoteAddr, conn);
            }
        }
    }",Dispatch events .,src/main/java/com/alipay/remoting/ConnectionEventListener.java,"[{'Syntax': 'this.processors.get(type)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n        public String get(String key) {\n            return custCtx.get(key);\n        }', 'FileName': '/alipay/sofa-bolt/src/test/java/com/alipay/remoting/rpc/prehandle/PreHandleUserProcessor.java'}, {'Syntax': 'processor.onEvent(remoteAddr, conn)', 'FunctionName': 'onEvent', 'ArgsCount': 2, 'MethodBody': '@Override\n    public void onEvent(String remoteAddr, Connection conn) {\n        Assert.assertNotNull(remoteAddr);\n        doCheckConnection(conn);\n        this.remoteAddr = remoteAddr;\n        this.connection = conn;\n        connected.set(true);\n        connectTimes.incrementAndGet();\n        latch.countDown();\n    }', 'FileName': '/alipay/sofa-bolt/src/test/java/com/alipay/remoting/rpc/common/CONNECTEventProcessor.java'}]"
6621cd9bcda9bd4817b111b6,playframework/playframework,"public static Flow<JsonNode, ByteString, NotUsed> json(String callbackName) {
    return Flow.of(JsonNode.class)
        .map(
            json -> {
              return ByteString.fromString(Json.stringify(json));
            })
        .via(flow(callbackName));
  }",Produces a flow of ByteString using Json . stringify from a Flow of JsonNode . Calls out to Comet . flow internally .,core/play-java/src/main/java/play/libs/Comet.java,"[{'Syntax': 'Flow.of(JsonNode.class)', 'FunctionName': 'of', 'ArgsCount': 1, 'MethodBody': 'public static ALogger of(String name) {\n    return new ALogger(play.api.Logger.apply(name));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/Logger.java'}, {'Syntax': 'ByteString.fromString(Json.stringify(json))', 'FunctionName': 'fromString', 'ArgsCount': 1, 'MethodBody': 'public static Document fromString(String xml) {\n    return fromInputStream(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8)), ""utf-8"");\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/libs/XML.java'}, {'Syntax': 'Json.stringify(json)', 'FunctionName': 'stringify', 'ArgsCount': 1, 'MethodBody': 'public static String stringify(JsonNode json) {\n    return generateJson(json, false, false);\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/libs/Json.java'}, {'Syntax': 'flow(callbackName)', 'FunctionName': 'flow', 'ArgsCount': 1, 'MethodBody': 'public static Flow<ByteString, ByteString, NotUsed> flow(String callbackName) {\n    return flow(callbackName, null);\n  }', 'FileName': '/playframework/playframework/core/play-java/src/main/java/play/libs/Comet.java'}]"
6621cd9bcda9bd4817b111b7,oblac/jodd,"@Override
	protected void initialize(final char[] input) {
		super.initialize(input);
		this.tag = new ParsedTag();
		this.doctype = new ParsedDoctype();
		this.text = new char[1024];
		this.textLen = 0;
		this.parsingTime = -1;
	}",Initializes parser .,jodd-lagarto/src/main/java/jodd/lagarto/LagartoParser.java,[]
6621cd9bcda9bd4817b111b8,tiefaces/TieFaces,"private static List<SerialRow> assembleRowsListFromRowsMapping(
			final List<SerialRow> all, final List<SerialRow> current) {
		List<SerialRow> list;
		if (all == null) {
			list = new ArrayList<>();
			list.addAll(current);
		} else {
			list = all;
			for (SerialRow row : current) {
				if (!all.contains(row)) {
					list.add(row);
				}
			}
		}
		return list;
	}",assemble rowslist from rowsmapping .,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,[]
6621cd9bcda9bd4817b111b9,jboss/jboss-common-core,"public static String encodeURN(String publicId) {
    String urn = PublicId.normalize(publicId);

    urn = PublicId.stringReplace(urn, ""%"", ""%25"");
    urn = PublicId.stringReplace(urn, "";"", ""%3B"");
    urn = PublicId.stringReplace(urn, ""'"", ""%27"");
    urn = PublicId.stringReplace(urn, ""?"", ""%3F"");
    urn = PublicId.stringReplace(urn, ""#"", ""%23"");
    urn = PublicId.stringReplace(urn, ""+"", ""%2B"");
    urn = PublicId.stringReplace(urn, "" "", ""+"");
    urn = PublicId.stringReplace(urn, ""::"", "";"");
    urn = PublicId.stringReplace(urn, "":"", ""%3A"");
    urn = PublicId.stringReplace(urn, ""//"", "":"");
    urn = PublicId.stringReplace(urn, ""/"", ""%2F"");

    return ""urn:publicid:"" + urn;
  }",Encode a public identifier as a publicid URN .,src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java,"[{'Syntax': 'PublicId.normalize(publicId)', 'FunctionName': 'normalize', 'ArgsCount': 1, 'MethodBody': 'public static String normalize(String publicId) {\n    String normal = publicId.replace(\'\\t\', \' \');\n    normal = normal.replace(\'\\r\', \' \');\n    normal = normal.replace(\'\\n\', \' \');\n    normal = normal.trim();\n\n    int pos;\n\n    while ((pos = normal.indexOf(""  "")) >= 0) {\n      normal = normal.substring(0, pos) + normal.substring(pos+1);\n    }\n\n    return normal;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""%"", ""%25"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, "";"", ""%3B"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""\'"", ""%27"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""?"", ""%3F"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""#"", ""%23"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""+"", ""%2B"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, "" "", ""+"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""::"", "";"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, "":"", ""%3A"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""//"", "":"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}, {'Syntax': 'PublicId.stringReplace(urn, ""/"", ""%2F"")', 'FunctionName': 'stringReplace', 'ArgsCount': 3, 'MethodBody': 'private static String stringReplace(String str,\n\t\t\t\t      String oldStr,\n\t\t\t\t      String newStr) {\n\n    String result = """";\n    int pos = str.indexOf(oldStr);\n\n    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);\n\n    while (pos >= 0) {\n      //      System.out.println(str + "" ("" + pos + "")"");\n      result += str.substring(0, pos);\n      result += newStr;\n      str = str.substring(pos+1);\n\n      pos = str.indexOf(oldStr);\n    }\n\n    return result + str;\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java'}]"
6621cd9ccda9bd4817b111ba,tiefaces/TieFaces,"private static ClientAnchor createCommentAnchor(final Cell newCell, CreationHelper factory) {
		ClientAnchor anchor = factory.createClientAnchor();
		anchor.setCol1(newCell.getColumnIndex());
		anchor.setCol2(newCell.getColumnIndex() + 1);
		anchor.setRow1(newCell.getRowIndex());
		anchor.setRow2(newCell.getRowIndex() + 3);
		return anchor;
	}",Creates the comment anchor .,src/org/tiefaces/components/websheet/utility/CellUtility.java,"[{'Syntax': 'newCell.getColumnIndex()', 'FunctionName': 'getColumnIndex', 'ArgsCount': 0, 'MethodBody': 'public final int getColumnIndex() {\r\n\t\treturn columnIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/FacesCell.java'}, {'Syntax': 'newCell.getColumnIndex()', 'FunctionName': 'getColumnIndex', 'ArgsCount': 0, 'MethodBody': 'public final int getColumnIndex() {\r\n\t\treturn columnIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/FacesCell.java'}, {'Syntax': 'newCell.getRowIndex()', 'FunctionName': 'getRowIndex', 'ArgsCount': 0, 'MethodBody': 'public final int getRowIndex() {\r\n\t\treturn rowIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialRow.java'}, {'Syntax': 'newCell.getRowIndex()', 'FunctionName': 'getRowIndex', 'ArgsCount': 0, 'MethodBody': 'public final int getRowIndex() {\r\n\t\treturn rowIndex;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialRow.java'}]"
6621cd9ccda9bd4817b111bb,ieb/sparsemapcontent,"private void launchButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // Launch Nakamura
    if (runStatus == APP_NOT_RUNNING) {
      System.setSecurityManager(null);
      try {
        NakamuraMain.main(savedArgs);

        // Update label
        statusLabel.setText(""Nakamura is starting..."");

        // Notify the user
        JOptionPane.showMessageDialog(this,
            ""Nakamura has been started.\nPlease allow 30-60 seconds for it to be ready."",
            ""Information"", JOptionPane.INFORMATION_MESSAGE);

        runStatus = APP_RUNNING;
        isStartupFinished();
      } catch (IOException e) {
        statusLabel.setText(""Nakamura is startup failed "" + e.getMessage());
      }
    } else {
      // Can't start it again...
      // custom title, warning icon
      JOptionPane.showMessageDialog(this, ""Nakamura is already running."", ""Warning"",
          JOptionPane.WARNING_MESSAGE);
    }
  }",This is the launch button action method . This method launches the Apache Sling bootloader and informs the user to wait before accessing it in a browser .,app/src/main/java/org/sakaiproject/nakamura/app/LaunchNakamura.java,[]
6621cd9ccda9bd4817b111bc,oaqa/baseqa,"public void setSearchId(String v) {
    if (Search_Type.featOkTst && ((Search_Type)jcasType).casFeat_searchId == null)
      jcasType.jcas.throwFeatMissing(""searchId"", ""edu.cmu.lti.oaqa.type.retrieval.Search"");
    jcasType.ll_cas.ll_setStringValue(addr, ((Search_Type)jcasType).casFeatCode_searchId, v);}",setter for searchId - sets An identifier for this search result . Used to collect hit - list objects that belong to this search result after they ve been split out for parallel processing then gathered up again .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Search.java,[]
6621cd9ccda9bd4817b111bd,oblac/jodd,"protected void arrayForcedSet(final BeanProperty bp, Object array, final int index, Object value) {
		Class componentType = array.getClass().getComponentType();
		array = ensureArraySize(bp, array, componentType, index);
		value = convertType(value, componentType);
		Array.set(array, index, value);
	}",Sets the array element forced . If index is greater then arrays length array will be expanded to the index . If speed is critical it is better to allocate an array with proper size before using this method .,jodd-bean/src/main/java/jodd/bean/BeanUtilUtil.java,[]
6621cd9ccda9bd4817b111be,oblac/jodd,"protected void readFilterConfigParameters(final FilterConfig filterConfig, final Object target, final String... parameters) {
		for (String parameter : parameters) {
			String value = filterConfig.getInitParameter(parameter);

			if (value != null) {
				BeanUtil.declared.setProperty(target, parameter, value);
			}
		}
	}",Reads filter config parameters and set into destination target .,jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerFilter.java,[]
6621cd9ccda9bd4817b111bf,oblac/jodd,"final void collectAttributePrototypes(final Attribute.Set attributePrototypes) {
    attributePrototypes.addAttributes(firstAttribute);
    attributePrototypes.addAttributes(firstCodeAttribute);
  }",Collects the attributes of this method into the given set of attribute prototypes .,jodd-proxetta/src/main/java/jodd/asm7/MethodWriter.java,[]
6621cd9ccda9bd4817b111c0,Koekiebox-PTY-LTD/Fluid,"public Map<Long,String> getFormDefinitionIdAndTitle()
	{
		//When already cached, use the cached value...
		if(!LOCAL_MAPPING.isEmpty())
		{
			Map<Long,String> returnVal = new HashMap<>(LOCAL_MAPPING);

			//The id's are outdated...
			if(System.currentTimeMillis() > timeToUpdateAgain){

				synchronized (LOCAL_MAPPING)
				{
					LOCAL_MAPPING.clear();
				}
			}

			return returnVal;
		}

		//Only allow one thread to set the local mapping...
		synchronized (LOCAL_MAPPING)
		{
			if(!LOCAL_MAPPING.isEmpty())
			{
				return new HashMap<>(LOCAL_MAPPING);
			}

			PreparedStatement preparedStatement = null;
			ResultSet resultSet = null;
			try
			{
				ISyntax syntax = SyntaxFactory.getInstance().getSyntaxFor(
						this.getSQLTypeFromConnection(),
						ISyntax.ProcedureMapping.FormDefinition.GetFormDefinitions);

				preparedStatement = this.getConnection().prepareStatement(
						syntax.getPreparedStatement());

				resultSet = preparedStatement.executeQuery();

				//Iterate each of the form containers...
				while (resultSet.next())
				{
					Long id = resultSet.getLong(1);
					String title = resultSet.getString(2);

					LOCAL_MAPPING.put(id,title);
				}

				//Update in 10 mins...
				timeToUpdateAgain =
						(System.currentTimeMillis() +
								TimeUnit.MINUTES.toMillis(10));
			}
			//
			catch (SQLException sqlError) {
				throw new FluidSQLException(sqlError);
			}
			//
			finally {
				this.closeStatement(preparedStatement,resultSet);
			}

			return new HashMap<>(LOCAL_MAPPING);
		}
	}",Retrieves the Form Definition and Title mapping currently stored in Fluid .,fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/impl/SQLFormDefinitionUtil.java,"[{'Syntax': 'LOCAL_MAPPING.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'public void clear() {\r\n\t\tthis.returnValue.clear();\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/websocket/AGenericListMessageHandler.java'}, {'Syntax': 'SyntaxFactory.getInstance().getSyntaxFor(\n\t\t\t\t\t\tthis.getSQLTypeFromConnection(),\n\t\t\t\t\t\tISyntax.ProcedureMapping.FormDefinition.GetFormDefinitions)', 'FunctionName': 'getSyntaxFor', 'ArgsCount': 2, 'MethodBody': 'public ISyntax getSyntaxFor(\r\n\t\t\tABaseSQLUtil.SQLServerType sqlTypeParam,\r\n\t\t\tString aliasParam) {\r\n\r\n\t\tif (ISyntax.ProcedureMapping.isStoredProcedureMapping(aliasParam)) {\r\n\t\t\treturn new StoredProcedureSyntax(\r\n\t\t\t\t\taliasParam, ISyntax.ProcedureMapping.getParamCountForAlias(aliasParam));\r\n\t\t}\r\n\r\n\t\tthrow new FluidSQLException(new SQLException(""Unable to find Syntax for alias \'""+\r\n\t\t\t\taliasParam+""\' and SQL Type \'""+sqlTypeParam+""\'.""));\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/syntax/SyntaxFactory.java'}, {'Syntax': 'SyntaxFactory.getInstance()', 'FunctionName': 'getInstance', 'ArgsCount': 0, 'MethodBody': 'public static SyntaxFactory getInstance() {\r\n\t\tif (SyntaxFactory.syntaxFactory == null) {\r\n\t\t\tSyntaxFactory.syntaxFactory = new SyntaxFactory();\r\n\t\t}\r\n\r\n\t\treturn SyntaxFactory.syntaxFactory;\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/syntax/SyntaxFactory.java'}, {'Syntax': 'this.getSQLTypeFromConnection()', 'FunctionName': 'getSQLTypeFromConnection', 'ArgsCount': 0, 'MethodBody': 'public SQLServerType getSQLTypeFromConnection() {\r\n\t\ttry {\r\n\t\t\tif (this.databaseMetaData == null){\r\n\t\t\t\tthis.databaseMetaData = this.getConnection().getMetaData();\r\n\t\t\t}\r\n\r\n\t\t\treturn SQLServerType.getSQLTypeFromProductName(\r\n\t\t\t\t\tthis.databaseMetaData.getDatabaseProductName());\r\n\t\t} catch (SQLException sqlExcept) {\r\n\t\t\t//Unable to retrieve the product name.\r\n\t\t\tthrow new FluidSQLException(sqlExcept);\r\n\t\t}\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/ABaseSQLUtil.java'}, {'Syntax': 'this.getConnection()', 'FunctionName': 'getConnection', 'ArgsCount': 0, 'MethodBody': 'public Connection getConnection() {\r\n\t\tif (this.connection == null) {\r\n\t\t\tthrow new FluidSQLException(new SQLException(\r\n\t\t\t\t\t""Connection is not set. Critical!!!""));\r\n\t\t}\r\n\r\n\t\treturn this.connection;\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/ABaseSQLUtil.java'}, {'Syntax': 'syntax.getPreparedStatement()', 'FunctionName': 'getPreparedStatement', 'ArgsCount': 0, 'MethodBody': 'public abstract String getPreparedStatement();', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/syntax/ISyntax.java'}, {'Syntax': 'this.closeStatement(preparedStatement,resultSet)', 'FunctionName': 'closeStatement', 'ArgsCount': 2, 'MethodBody': 'protected void closeStatement(PreparedStatement preparedStatementParam,\r\n\t\t\t\t\t\t\t\t  ResultSet resultSetParam\r\n\t) {\r\n\t\tif (resultSetParam == null) {\r\n\t\t\tthis.closeStatement(preparedStatementParam);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tresultSetParam.close();\r\n\t\t\tthis.closeStatement(preparedStatementParam);\r\n\t\t} catch (SQLException sqlExcept) {\r\n\t\t\tthrow new FluidSQLException(sqlExcept);\r\n\t\t}\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/ABaseSQLUtil.java'}]"
6621cd9ccda9bd4817b111c1,tiefaces/TieFaces,"public static void initXSSFAnchorsMap(final XSSFWorkbook wb,
            final ChartsData charsData) {

        Map<String, ClientAnchor> anchortMap = charsData
                .getChartAnchorsMap();
        Map<String, String> positionMap = charsData.getChartPositionMap();
        anchortMap.clear();
        positionMap.clear();
        for (int i = 0; i < wb.getNumberOfSheets(); i++) {
            initXSSFAnchorsMapForSheet(anchortMap, positionMap,
                    wb.getSheetAt(i));
        }
    }",retrieve anchor information from draw . xml for all the charts in the workbook . then save them to anchors map .,src/org/tiefaces/components/websheet/utility/ChartUtility.java,"[{'Syntax': 'charsData\r\n                .getChartAnchorsMap()', 'FunctionName': 'getChartAnchorsMap', 'ArgsCount': 0, 'MethodBody': 'public final Map<String, ClientAnchor> getChartAnchorsMap() {\r\n\t\tif (this.chartAnchorsMap == null) {\r\n\t\t\tthis.chartAnchorsMap = new HashMap<>();\r\n\t\t}\r\n\t\t\r\n\t\treturn chartAnchorsMap;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/chart/ChartsData.java'}, {'Syntax': 'charsData.getChartPositionMap()', 'FunctionName': 'getChartPositionMap', 'ArgsCount': 0, 'MethodBody': 'public final Map<String, String> getChartPositionMap() {\r\n\t\tif (this.chartPositionMap == null) {\r\n\t\t\tthis.chartPositionMap = new HashMap<>();\r\n\t\t}\r\n\t\t\r\n\t\treturn chartPositionMap;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/chart/ChartsData.java'}, {'Syntax': 'anchortMap.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic void clear() {\r\n\t\temptySet.clear();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'positionMap.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic void clear() {\r\n\t\temptySet.clear();\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'initXSSFAnchorsMapForSheet(anchortMap, positionMap,\r\n                    wb.getSheetAt(i))', 'FunctionName': 'initXSSFAnchorsMapForSheet', 'ArgsCount': 3, 'MethodBody': 'private static void initXSSFAnchorsMapForSheet(\r\n            final Map<String, ClientAnchor> anchortMap,\r\n            final Map<String, String> positionMap, final XSSFSheet sheet) {\r\n        XSSFDrawing drawing = sheet.createDrawingPatriarch();\r\n        CTDrawing ctDrawing = drawing.getCTDrawing();\r\n        if (ctDrawing.sizeOfTwoCellAnchorArray() <= 0) {\r\n            return;\r\n        }\r\n        List<CTTwoCellAnchor> alist = ctDrawing.getTwoCellAnchorList();\r\n        for (int j = 0; j < alist.size(); j++) {\r\n            CTTwoCellAnchor ctanchor = alist.get(j);\r\n            String singleChartId = getAnchorAssociateChartId(ctanchor);\r\n            if (singleChartId != null) {\r\n                String chartId = sheet.getSheetName() + ""!"" + singleChartId;\r\n                int dx1 = (int) ctanchor.getFrom().getColOff();\r\n                int dy1 = (int) ctanchor.getFrom().getRowOff();\r\n                int dx2 = (int) ctanchor.getTo().getColOff();\r\n                int dy2 = (int) ctanchor.getTo().getRowOff();\r\n                int col1 = ctanchor.getFrom().getCol();\r\n                int row1 = ctanchor.getFrom().getRow();\r\n                int col2 = ctanchor.getTo().getCol();\r\n                int row2 = ctanchor.getTo().getRow();\r\n                anchortMap.put(chartId, new XSSFClientAnchor(dx1, dy1, dx2,\r\n                        dy2, col1, row1, col2, row2));\r\n                positionMap.put(WebSheetUtility.getFullCellRefName(\r\n                        sheet.getSheetName(), row1, col1), chartId);\r\n            }\r\n        }\r\n    }', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ChartUtility.java'}]"
6621cd9ccda9bd4817b111c2,kiegroup/droolsjbpm-tools,"public boolean getOverwrite() {
        String overwriteString = get(OVERWRITE);
        return overwriteString == null ? false : overwriteString.equalsIgnoreCase(""T""); //$NON-NLS-1$
    }",Get the flag that indicates if copy or move should overwrite an existing destination . Return the boolean value for the OVERWRITE key .,drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Context.java,"[{'Syntax': 'get(OVERWRITE)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Row get(final int row) {\n        return (Row) this.rows.get( row );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/RowList.java'}]"
6621cd9ccda9bd4817b111c3,Unidata/thredds,"void addToNetcdfFile(NetcdfFile ncfile, Group g) {
    if (dontUseVertical) {
      return;
    }

    if (g == null) {
      g = ncfile.getRootGroup();
    }

    String dims = ""time"";
    if (!dontUseVertical) {
      dims = dims + "" "" + verticalName;
    }
    if (hcs.isLatLon()) {
      dims = dims + "" lat lon"";
    } else {
      dims = dims + "" y x"";
    }

    //Collections.sort( levels);
    int nlevs = levels.size();
    // ncfile.addDimension(g, new Dimension(verticalName, nlevs, true));

    // coordinate axis and coordinate system Variable
    Variable v = new Variable(ncfile, g, null, verticalName);
    v.setDataType(DataType.DOUBLE);

    v.addAttribute(new Attribute(""long_name"",
            lookup.getLevelDescription(record)));
    v.addAttribute(new Attribute(""units"", lookup.getLevelUnit(record)));

    // positive attribute needed for CF-1 Height and Pressure
    if (positive != null) {
      v.addAttribute(new Attribute(""positive"", positive));
    }

    if (units != null) {
      AxisType axisType;
      if (SimpleUnit.isCompatible(""millibar"", units)) {
        axisType = AxisType.Pressure;
      } else if (SimpleUnit.isCompatible(""m"", units)) {
        axisType = AxisType.Height;
      } else {
        axisType = AxisType.GeoZ;
      }

      v.addAttribute(
              new Attribute(
                      ""grid_level_type"",
                      Integer.toString(record.getLevelType1())));

      v.addAttribute(new Attribute(_Coordinate.AxisType,
              axisType.toString()));
      v.addAttribute(new Attribute(_Coordinate.Axes, dims));
      if (!hcs.isLatLon()) {
        v.addAttribute(new Attribute(_Coordinate.Transforms,
                hcs.getGridName()));
      }
    }

    double[] data = new double[nlevs];
    for (int i = 0; i < levels.size(); i++) {
      Double d = (Double) levels.get(i);
      data[i] = d.doubleValue();
    }
    Array dataArray = Array.factory(DataType.DOUBLE, new int[]{nlevs}, data);

    v.setDimensions(verticalName);
    v.setCachedData(dataArray, false);

    ncfile.addVariable(g, v);

    // look for vertical transforms
    if (record.getLevelType1() == 109) {
      findCoordinateTransform(g, ""Pressure"", record.getLevelType1());
    }
  }",Add this coordinate system to the netCDF file,visad/src/main/java/ucar/nc2/iosp/grid/GridCoordSys.java,[]
6621cd9ccda9bd4817b111c4,intellimate/IzouSDK,"public static Optional<MuteEvent> createMuteEvent(Identification source) {
        if (source == null)
            return Optional.empty();
        try {
            MuteEvent muteRequest = new MuteEvent(source);
            return Optional.of(muteRequest);
        } catch (IllegalArgumentException e) {
            return Optional.empty();
        }
    }",creates a new MuteEvent will mute everything,src/main/java/org/intellimate/izou/sdk/frameworks/permanentSoundOutput/events/MuteEvent.java,[]
6621cd9ccda9bd4817b111c5,Unidata/thredds,"public Match match( String path) {
    SortedMap<String, Match> tail = treeMap.tailMap( path);
    if (tail.isEmpty()) return null;
    String after = tail.firstKey();
    //System.out.println(""  ""+path+""; after=""+afterPath);
    if (path.startsWith( after)) // common case
      return treeMap.get( after);

    // have to check more, until no common starting chars
    for (String key : tail.keySet()) {
      if (path.startsWith(key))
        return treeMap.get(key);
      // terminate when there's no match at all.
      if (StringUtil2.match(path, key) == 0)
        break;
    }

    return null;
  }",Find the longest match .,ui/src/main/java/thredds/logs/PathMatcher.java,[]
6621cd9ccda9bd4817b111c6,lightcouch/LightCouch,"private void setEntity(HttpEntityEnclosingRequestBase httpRequest, String json) {
		StringEntity entity = new StringEntity(json, ""UTF-8"");
		entity.setContentType(""application/json"");
		httpRequest.setEntity(entity);
	}",Sets a JSON String as a request entity .,src/main/java/org/lightcouch/CouchDbClientBase.java,"[{'Syntax': 'entity.setContentType(""application/json"")', 'FunctionName': 'setContentType', 'ArgsCount': 1, 'MethodBody': 'public void setContentType(String contentType) {\n\t\tthis.contentType = contentType;\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/Attachment.java'}]"
6621cd9ccda9bd4817b111c7,kiegroup/droolsjbpm-tools,"public int getTimeout() {
        String timeoutString = get(TIMEOUT);
        if (timeoutString == null)
            return -1;
        if (timeoutString.equalsIgnoreCase(DEPTH_INFINITY))
            return -2;
        if (timeoutString.regionMatches(true, 1, ""Second-"", 1, 7)) //$NON-NLS-1$
            return Integer.parseInt(timeoutString.substring(7));
        // ignore all other cases, and use infinite timeout
        return -2;
    }",Get the lock timeout value . The value - 1 means that the value was not set the value - 2 means that the value was Infinity . Return the integer value for the TIMEOUT key .,drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Context.java,"[{'Syntax': 'get(TIMEOUT)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Row get(final int row) {\n        return (Row) this.rows.get( row );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/RowList.java'}]"
6621cd9ccda9bd4817b111c8,orientechnologies/orientdb,"public OrientElement getElement(final Object id) {
    makeActive();

    if (null == id)
      throw new IllegalArgumentException(""id cannot be null"");

    if (id instanceof OrientElement)
      return (OrientElement) id;

    OIdentifiable rec;
    if (id instanceof OIdentifiable)
      rec = (OIdentifiable) id;
    else
      try {
        rec = new ORecordId(id.toString());
      } catch (IllegalArgumentException iae) {
        // orientdb throws IllegalArgumentException: Argument 'xxxx' is
        // not a RecordId in form of string. Format must be:
        // <cluster-id>:<cluster-position>
        return null;
      }

    final ODocument doc = rec.getRecord();
    if (doc != null) {
      final OImmutableClass schemaClass = ODocumentInternal.getImmutableSchemaClass(doc);
      if (schemaClass != null && schemaClass.isEdgeType())
        return getEdge(doc);
      else
        return getVertexInstance(doc);
    }

    return null;
  }",Returns a graph element vertex or edge starting from an ID .,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java,"[{'Syntax': 'makeActive()', 'FunctionName': 'makeActive', 'ArgsCount': 0, 'MethodBody': 'public void makeActive() {\n    if (database == null) {\n      throw new ODatabaseException(""Database is closed"");\n    }\n\n    activeGraph.set(this);\n\n    final ODatabaseDocument tlDb = ODatabaseRecordThreadLocal.instance().getIfDefined();\n    if (tlDb != database) ODatabaseRecordThreadLocal.instance().set(getDatabase());\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'id.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'rec.getRecord()', 'FunctionName': 'getRecord', 'ArgsCount': 0, 'MethodBody': 'public byte[] getRecord() {\n    return record;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordResponse.java'}, {'Syntax': 'ODocumentInternal.getImmutableSchemaClass(doc)', 'FunctionName': 'getImmutableSchemaClass', 'ArgsCount': 1, 'MethodBody': 'protected OImmutableClass getImmutableSchemaClass(ODatabaseDocumentInternal database) {\n    if (immutableClazz == null) {\n      if (className == null) fetchClassName();\n      if (className != null) {\n        if (database == null) {\n          database = getDatabaseIfDefined();\n        }\n\n        if (database != null && !database.isClosed()) {\n          final OSchema immutableSchema = database.getMetadata().getImmutableSchemaSnapshot();\n          if (immutableSchema == null) return null;\n          immutableSchemaVersion = immutableSchema.getVersion();\n          immutableClazz = (OImmutableClass) immutableSchema.getClass(className);\n        }\n      }\n    }\n\n    return immutableClazz;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/record/impl/ODocument.java'}, {'Syntax': 'schemaClass.isEdgeType()', 'FunctionName': 'isEdgeType', 'ArgsCount': 0, 'MethodBody': 'boolean isEdgeType();', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OClass.java'}, {'Syntax': 'getEdge(doc)', 'FunctionName': 'getEdge', 'ArgsCount': 1, 'MethodBody': 'public OrientEdge getEdge(final Object id) {\n    return graph.getEdge(id);\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/orientechnologies/orient/graph/script/OScriptGraphWrapper.java'}, {'Syntax': 'getVertexInstance(doc)', 'FunctionName': 'getVertexInstance', 'ArgsCount': 1, 'MethodBody': 'protected OrientVertex getVertexInstance(final OIdentifiable id) {\n    return new OrientVertex(this, id);\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}]"
6621cd9ccda9bd4817b111c9,stanfy/enroscar,"protected final void setResultImage(final ImageConsumer consumer, final ImageResult result, final boolean animate) {
    decorateResult(consumer, result);
    consumer.setImage(createDrawable(result.getBitmap()), animate);
    consumer.reset();
  }",It must be executed in the main thread .,images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java,"[{'Syntax': 'decorateResult(consumer, result)', 'FunctionName': 'decorateResult', 'ArgsCount': 2, 'MethodBody': 'protected void decorateResult(final ImageConsumer consumer, final ImageResult result) {\r\n    // nothing\r\n  }', 'FileName': '/stanfy/enroscar/images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java'}, {'Syntax': 'consumer.setImage(createDrawable(result.getBitmap()), animate)', 'FunctionName': 'setImage', 'ArgsCount': 2, 'MethodBody': '@Override\n  public void setImage(final Drawable d, final boolean animate) {\n    // nothing\n  }', 'FileName': '/stanfy/enroscar/images/src/test/java/com/stanfy/enroscar/images/Consumer.java'}, {'Syntax': 'createDrawable(result.getBitmap())', 'FunctionName': 'createDrawable', 'ArgsCount': 1, 'MethodBody': 'private Drawable createDrawable(final Bitmap bitmap) {\r\n    // same logic as private Drawable.drawableFromBitmap(...)\r\n    final byte[] npc = bitmap.getNinePatchChunk();\r\n    if (npc != null && NinePatch.isNinePatchChunk(npc)) {\r\n      return new NinePatchDrawable(getResources(), new NinePatch(bitmap, npc, null));\r\n    }\r\n    return new BitmapDrawable(getResources(), bitmap);\r\n  }', 'FileName': '/stanfy/enroscar/images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java'}, {'Syntax': 'result.getBitmap()', 'FunctionName': 'getBitmap', 'ArgsCount': 0, 'MethodBody': 'public Bitmap getBitmap() {\n    return bitmap;\n  }', 'FileName': '/stanfy/enroscar/images/src/main/java/com/stanfy/enroscar/images/ImageResult.java'}, {'Syntax': 'consumer.reset()', 'FunctionName': 'reset', 'ArgsCount': 0, 'MethodBody': '@Override\r\n  public synchronized void reset() throws IOException {\r\n    // BEGIN android-changed\r\n    /*\r\n     * These exceptions get thrown in some ""normalish"" circumstances,\r\n     * so it is preferable to avoid loading up the whole big set of\r\n     * messages just for these cases.\r\n     */\r\n    if (buf == null) {\r\n      throw new IOException(""Stream is closed"");\r\n    }\r\n    if (-1 == markpos) {\r\n      throw new IOException(""Mark has been invalidated."");\r\n    }\r\n    // END android-changed\r\n    pos = markpos;\r\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/PoolableBufferedInputStream.java'}]"
6621cd9ccda9bd4817b111ca,wildfly/wildfly,"protected DeploymentUnit doPrepare(String context, ClassLoader loader,
            Map<String, String> urlPatternToClassNameMap, JBossWebMetaData jbwmd, WebservicesMetaData metadata, JBossWebservicesMetaData jbwsMetadata) {
        ClassLoader origClassLoader = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();
        WSEndpointDeploymentUnit unit = new WSEndpointDeploymentUnit(loader, context, urlPatternToClassNameMap, jbwmd, metadata, jbwsMetadata);
        try {
            WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ClassLoaderProvider.getDefaultProvider().getServerIntegrationClassLoader());
            WSDeploymentBuilder.getInstance().build(unit);
            return unit;
        } finally {
            WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(origClassLoader);
        }
    }",Prepare the ws Deployment and return a DeploymentUnit containing it,webservices/server-integration/src/main/java/org/jboss/as/webservices/publish/EndpointPublisherImpl.java,"[{'Syntax': 'ClassLoaderProvider.getDefaultProvider().getServerIntegrationClassLoader()', 'FunctionName': 'getServerIntegrationClassLoader', 'ArgsCount': 0, 'MethodBody': '@Override\n            public ClassLoader getServerIntegrationClassLoader() {\n                return Thread.currentThread().getContextClassLoader();\n            }', 'FileName': '/wildfly/wildfly/webservices/server-integration/src/test/java/org/jboss/as/webservices/dmr/WebservicesSubsystemRuntimeTestCase.java'}, {'Syntax': 'WSDeploymentBuilder.getInstance().build(unit)', 'FunctionName': 'build', 'ArgsCount': 1, 'MethodBody': 'public static BridgeType build(AnnotationInstance annotationInstance) throws XTSException {\n\n        if (annotationInstance.value(""bridgeType"") == null) {\n            return DEFAULT;\n        }\n\n        String bridgeType = annotationInstance.value(""bridgeType"").asString();\n\n        if (bridgeType.equals(""DEFAULT"")) {\n            return DEFAULT;\n        } else if (bridgeType.equals(""NONE"")) {\n            return NONE;\n        } else if (bridgeType.equals(""JTA"")) {\n            return JTA;\n        } else {\n            throw XtsAsLogger.ROOT_LOGGER.unexpectedBridgeType(bridgeType);\n        }\n    }', 'FileName': '/wildfly/wildfly/xts/src/main/java/org/jboss/as/xts/jandex/BridgeType.java'}, {'Syntax': 'WSDeploymentBuilder.getInstance()', 'FunctionName': 'getInstance', 'ArgsCount': 0, 'MethodBody': '@Override\n            public Object getInstance() {\n                return componentInstance.getInstance();\n            }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/component/ServiceComponentInstantiator.java'}]"
6621cd9ccda9bd4817b111cb,streamsets/datacollector,"private static boolean versionsMatch(String expectedVersions, Set<String> versions) {
    Set<String> expectedSet = Sets.newHashSet(expectedVersions.split("",""));
    return Sets.symmetricDifference(expectedSet, versions).isEmpty();
  }",Compare expected versions with given versions to see if they are the same or not .,container/src/main/java/com/streamsets/datacollector/classpath/CollisionWhitelist.java,[]
6621cd9ccda9bd4817b111cc,tony19/logback-android,"private boolean lastCheckExpired(Duration expiry, long lastCleanupTime) {
    boolean isExpired = false;
    if (expiry != null && expiry.getMilliseconds() > 0) {
      final long now = this.clock.currentTimeMillis();
      final long timeDiff = now - lastCleanupTime;
      isExpired = (lastCleanupTime <= 0) || (timeDiff >= expiry.getMilliseconds());
    }
    return isExpired;
  }",Determines whether it s time to clear expired logs,logback-android/src/main/java/ch/qos/logback/classic/android/SQLiteAppender.java,"[{'Syntax': 'expiry.getMilliseconds()', 'FunctionName': 'getMilliseconds', 'ArgsCount': 0, 'MethodBody': 'public long getMilliseconds() {\n    return millis;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/util/Duration.java'}, {'Syntax': 'this.clock.currentTimeMillis()', 'FunctionName': 'currentTimeMillis', 'ArgsCount': 0, 'MethodBody': 'public long currentTimeMillis() {\n        return mockTimeMs;\n      }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/classic/android/SQLiteAppenderTest.java'}, {'Syntax': 'expiry.getMilliseconds()', 'FunctionName': 'getMilliseconds', 'ArgsCount': 0, 'MethodBody': 'public long getMilliseconds() {\n    return millis;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/util/Duration.java'}]"
6621cd9ccda9bd4817b111cd,subchen/jetbrick-all-1x,"public T push(T element) {
        int i;
        Object[] els;
        if ((i = size++) >= (els = elements).length) {
            System.arraycopy(els, 0, els = elements = new Object[i << 1], 0, i);
        }
        els[i] = element;
        return element;
    }",Pushes an item onto the top of this stack .,jetbrick-commons/src/main/java/jetbrick/collections/ArrayStack.java,[]
6621cd9ccda9bd4817b111ce,eclipse/packagedrone,"public static void checkScope(String scope, Node n, ErrorDispatcher err)
            throws JasperException {
	if (scope != null && !scope.equals(""page"") && !scope.equals(""request"")
		&& !scope.equals(""session"") && !scope.equals(""application"")) {
	    err.jspError(n, ""jsp.error.invalid.scope"", scope);
	}
    }",Checks to see if the given scope is valid .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java,"[{'Syntax': 'scope.equals(""page"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals ( final Object obj )\n    {\n        if ( this == obj )\n        {\n            return true;\n        }\n        if ( obj == null )\n        {\n            return false;\n        }\n        if ( this.getClass() != obj.getClass() )\n        {\n            return false;\n        }\n        final GeneratorInformation other = (GeneratorInformation)obj;\n        if ( this.id == null )\n        {\n            if ( other.id != null )\n            {\n                return false;\n            }\n        }\n        else if ( !this.id.equals ( other.id ) )\n        {\n            return false;\n        }\n        return true;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.generator/src/org/eclipse/packagedrone/repo/generator/GeneratorInformation.java'}, {'Syntax': 'scope.equals(""request"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals ( final Object obj )\n    {\n        if ( this == obj )\n        {\n            return true;\n        }\n        if ( obj == null )\n        {\n            return false;\n        }\n        if ( this.getClass() != obj.getClass() )\n        {\n            return false;\n        }\n        final GeneratorInformation other = (GeneratorInformation)obj;\n        if ( this.id == null )\n        {\n            if ( other.id != null )\n            {\n                return false;\n            }\n        }\n        else if ( !this.id.equals ( other.id ) )\n        {\n            return false;\n        }\n        return true;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.generator/src/org/eclipse/packagedrone/repo/generator/GeneratorInformation.java'}, {'Syntax': 'scope.equals(""session"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals ( final Object obj )\n    {\n        if ( this == obj )\n        {\n            return true;\n        }\n        if ( obj == null )\n        {\n            return false;\n        }\n        if ( this.getClass() != obj.getClass() )\n        {\n            return false;\n        }\n        final GeneratorInformation other = (GeneratorInformation)obj;\n        if ( this.id == null )\n        {\n            if ( other.id != null )\n            {\n                return false;\n            }\n        }\n        else if ( !this.id.equals ( other.id ) )\n        {\n            return false;\n        }\n        return true;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.generator/src/org/eclipse/packagedrone/repo/generator/GeneratorInformation.java'}, {'Syntax': 'scope.equals(""application"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals ( final Object obj )\n    {\n        if ( this == obj )\n        {\n            return true;\n        }\n        if ( obj == null )\n        {\n            return false;\n        }\n        if ( this.getClass() != obj.getClass() )\n        {\n            return false;\n        }\n        final GeneratorInformation other = (GeneratorInformation)obj;\n        if ( this.id == null )\n        {\n            if ( other.id != null )\n            {\n                return false;\n            }\n        }\n        else if ( !this.id.equals ( other.id ) )\n        {\n            return false;\n        }\n        return true;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.generator/src/org/eclipse/packagedrone/repo/generator/GeneratorInformation.java'}, {'Syntax': 'err.jspError(n, ""jsp.error.invalid.scope"", scope)', 'FunctionName': 'jspError', 'ArgsCount': 3, 'MethodBody': 'public void jspError(Mark where, String errCode, String ... args)\n\t        throws JasperException {\n\tdispatch(where, errCode, args, null);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ErrorDispatcher.java'}]"
6621cd9ccda9bd4817b111cf,blademainer/common_utils,"public final Option addDoubleOption( char shortForm, String longForm ) {
        return addOption(new Option.DoubleOption(shortForm, longForm));
    }",Convenience method for adding a double option .,commons-file/src/main/java/jargs/gnu/CmdLineParser.java,"[{'Syntax': 'addOption(new Option.DoubleOption(shortForm, longForm))', 'FunctionName': 'addOption', 'ArgsCount': 1, 'MethodBody': 'public final Option addOption( Option opt ) {\n        if ( opt.shortForm() != null )\n            this.options.put(""-"" + opt.shortForm(), opt);\n        this.options.put(""--"" + opt.longForm(), opt);\n        return opt;\n    }', 'FileName': '/blademainer/common_utils/commons-file/src/main/java/jargs/gnu/CmdLineParser.java'}]"
6621cd9ccda9bd4817b111d0,tiefaces/TieFaces,"public String getDefaultDatePattern() {
		if (defaultDatePattern == null) {
			DateFormat formatter = DateFormat.getDateInstance(DateFormat.SHORT, Locale.getDefault());
			defaultDatePattern = ((SimpleDateFormat) formatter).toLocalizedPattern();
		}
		return defaultDatePattern;
	}",Gets the default date pattern .,src/org/tiefaces/components/websheet/TieWebSheetView.java,[]
6621cd9dcda9bd4817b111d1,Unidata/thredds,"protected Object convert( byte[] barray, DataType dataType, int nelems, int byteOrder) {

        if (dataType == DataType.BYTE) {
          return barray;
        }

        if (dataType == DataType.CHAR) {
          return IospHelper.convertByteToChar( barray);
        }

        ByteBuffer bbuff = ByteBuffer.wrap( barray);
        if (byteOrder >= 0)
          bbuff.order( byteOrder == ucar.unidata.io.RandomAccessFile.LITTLE_ENDIAN? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN);

        if (dataType == DataType.SHORT) {
          ShortBuffer tbuff = bbuff.asShortBuffer();
          short[] pa = new short[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.INT) {
          IntBuffer tbuff = bbuff.asIntBuffer();
          int[] pa = new int[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.FLOAT) {
          FloatBuffer tbuff = bbuff.asFloatBuffer();
          float[] pa = new float[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.DOUBLE) {
          DoubleBuffer tbuff = bbuff.asDoubleBuffer();
          double[] pa = new double[nelems];
          tbuff.get( pa);
          return pa;
        }

        throw new IllegalStateException();
    }",this converts a byte array to another primitive array,cdm/src/main/java/ucar/nc2/iosp/nids/Nidsheader.java,[]
6621cd9dcda9bd4817b111d2,deeplearning4j/nd4j,"public static IComplexNumber neg(IComplexNumber num) {
        Complex c = new Complex(num.realComponent().doubleValue(), num.imaginaryComponent().doubleValue()).negate();
        return Nd4j.createDouble(c.getReal(), c.getImaginary());
    }",Return the log value of the given complex number,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/util/ComplexUtil.java,[]
6621cd9dcda9bd4817b111d3,orientechnologies/orientdb,"public void createCluster(final String className, final String clusterName) {
    final ODatabaseDocumentInternal currentDB = ODatabaseRecordThreadLocal.instance().getIfDefined();
    try {
      final ODatabaseDocumentInternal sysdb = openSystemDatabase();
      try {

        if (!sysdb.existsCluster(clusterName)) {
          OSchema schema = sysdb.getMetadata().getSchema();
          OClass cls = schema.getClass(className);

          if (cls != null) {
            cls.addCluster(clusterName);
          } else {
            OLogManager.instance().error(this, ""createCluster() Class name %s does not exist"", null, className);
          }
        }

      } finally {
        sysdb.close();
      }

    } finally {
      if (currentDB != null)
        ODatabaseRecordThreadLocal.instance().set(currentDB);
      else
        ODatabaseRecordThreadLocal.instance().remove();
    }
  }",Adds the specified cluster to the class if it doesn t already exist .,server/src/main/java/com/orientechnologies/orient/server/OSystemDatabase.java,"[{'Syntax': 'ODatabaseRecordThreadLocal.instance().getIfDefined()', 'FunctionName': 'getIfDefined', 'ArgsCount': 0, 'MethodBody': 'public ORecord getIfDefined() {\n    return super.get();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/db/OHookReplacedRecordThreadLocal.java'}, {'Syntax': 'ODatabaseRecordThreadLocal.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}, {'Syntax': 'openSystemDatabase()', 'FunctionName': 'openSystemDatabase', 'ArgsCount': 0, 'MethodBody': 'public ODatabaseDocumentInternal openSystemDatabase() {\n    if (!exists()) init();\n    return context.openNoAuthorization(getSystemDatabaseName());\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/db/OSystemDatabase.java'}, {'Syntax': 'sysdb.existsCluster(clusterName)', 'FunctionName': 'existsCluster', 'ArgsCount': 1, 'MethodBody': 'public boolean existsCluster(String iClusterName) {\n    checkOpenness();\n    return underlying.existsCluster(iClusterName);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/db/ODatabaseWrapperAbstract.java'}, {'Syntax': 'sysdb.getMetadata().getSchema()', 'FunctionName': 'getSchema', 'ArgsCount': 0, 'MethodBody': 'public ODocument getSchema() {\n    return schema;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OPushSchemaRequest.java'}, {'Syntax': 'sysdb.getMetadata()', 'FunctionName': 'getMetadata', 'ArgsCount': 0, 'MethodBody': 'public ORecordMetadata getMetadata() {\n    return metadata;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OGetRecordMetadataResponse.java'}, {'Syntax': 'schema.getClass(className)', 'FunctionName': 'getClass', 'ArgsCount': 1, 'MethodBody': 'OClass getClass(Class<?> iClass);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OSchema.java'}, {'Syntax': 'cls.addCluster(clusterName)', 'FunctionName': 'addCluster', 'ArgsCount': 1, 'MethodBody': '@Override\n  public OClass addCluster(final String clusterNameOrId) {\n    final ODatabaseDocumentInternal database = getDatabase();\n    database.checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    if (isAbstract()) {\n      throw new OSchemaException(""Impossible to associate a cluster to an abstract class class"");\n    }\n\n    acquireSchemaWriteLock();\n    try {\n      final String cmd = String.format(""alter class `%s` addcluster `%s`"", name, clusterNameOrId);\n      database.command(cmd).close();\n\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OClassRemote.java'}, {'Syntax': 'OLogManager.instance().error(this, ""createCluster() Class name %s does not exist"", null, className)', 'FunctionName': 'error', 'ArgsCount': 4, 'MethodBody': 'public void error(\n      final Object iRequester,\n      final String iMessage,\n      final Throwable iException,\n      final Object... iAdditionalArgs) {\n    if (isErrorEnabled())\n      log(iRequester, Level.SEVERE, iMessage, iException, true, null, iAdditionalArgs);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/log/OLogManager.java'}, {'Syntax': 'OLogManager.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}, {'Syntax': 'sysdb.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'public void close() {\n    if (currentDatabase != null) {\n      currentDatabase.activateOnCurrentThread();\n      currentDatabase.close();\n      currentDatabase = null;\n    }\n    if (orientDB != null) {\n      orientDB.close();\n    }\n    currentResultSet = null;\n    currentRecord = null;\n    currentResult = null;\n    commandBuffer.setLength(0);\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'ODatabaseRecordThreadLocal.instance().set(currentDB)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': '@Override\n      public void set(\n          OTransactionIndexChangesPerKey.OTransactionIndexEntry oTransactionIndexEntry) {\n        throw new UnsupportedOperationException();\n      }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTxIndexChangesList.java'}, {'Syntax': 'ODatabaseRecordThreadLocal.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}, {'Syntax': 'ODatabaseRecordThreadLocal.instance().remove()', 'FunctionName': 'remove', 'ArgsCount': 0, 'MethodBody': '@Override\n  public void remove() {\n    throw new UnsupportedOperationException(""remove()"");\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/main/java/com/orientechnologies/orient/etl/extractor/OETLAbstractExtractor.java'}, {'Syntax': 'ODatabaseRecordThreadLocal.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}]"
6621cd9dcda9bd4817b111d4,eclipse/packagedrone,"private void generatePostamble(Node.Nodes page) {
        out.popIndent();
        out.printil(""} catch (Throwable t) {"");
        out.pushIndent();
        out.printil(
            ""if (!(t instanceof SkipPageException)){"");
        out.pushIndent();
        out.printil(""out = _jspx_out;"");
        out.printil(""if (out != null && out.getBufferSize() != 0)"");
        out.pushIndent();
        out.printil(""out.clearBuffer();"");
        out.popIndent();

        out.printil(
            ""if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);"");
        out.printil(""else throw new ServletException(t);"");
        out.popIndent();
        out.printil(""}"");
        out.popIndent();
        out.printil(""} finally {"");
        out.pushIndent();

        out.printil(
            ""_jspxFactory.releasePageContext(_jspx_page_context);"");

        out.popIndent();
        out.printil(""}"");

        // Close the service method
        out.popIndent();
        out.printil(""}"");

        // Generated methods, helper classes, etc.
        genCommonPostamble();
    }",Generates the ending part of the static portion of the servlet .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Generator.java,"[{'Syntax': 'out.popIndent()', 'FunctionName': 'popIndent', 'ArgsCount': 0, 'MethodBody': 'public void popIndent() {\n\tvirtual_indent -= TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""} catch (Throwable t) {"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.pushIndent()', 'FunctionName': 'pushIndent', 'ArgsCount': 0, 'MethodBody': 'public void pushIndent() {\n\tvirtual_indent += TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(\n            ""if (!(t instanceof SkipPageException)){"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.pushIndent()', 'FunctionName': 'pushIndent', 'ArgsCount': 0, 'MethodBody': 'public void pushIndent() {\n\tvirtual_indent += TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""out = _jspx_out;"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""if (out != null && out.getBufferSize() != 0)"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.pushIndent()', 'FunctionName': 'pushIndent', 'ArgsCount': 0, 'MethodBody': 'public void pushIndent() {\n\tvirtual_indent += TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""out.clearBuffer();"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.popIndent()', 'FunctionName': 'popIndent', 'ArgsCount': 0, 'MethodBody': 'public void popIndent() {\n\tvirtual_indent -= TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(\n            ""if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""else throw new ServletException(t);"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.popIndent()', 'FunctionName': 'popIndent', 'ArgsCount': 0, 'MethodBody': 'public void popIndent() {\n\tvirtual_indent -= TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""}"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.popIndent()', 'FunctionName': 'popIndent', 'ArgsCount': 0, 'MethodBody': 'public void popIndent() {\n\tvirtual_indent -= TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""} finally {"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.pushIndent()', 'FunctionName': 'pushIndent', 'ArgsCount': 0, 'MethodBody': 'public void pushIndent() {\n\tvirtual_indent += TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(\n            ""_jspxFactory.releasePageContext(_jspx_page_context);"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.popIndent()', 'FunctionName': 'popIndent', 'ArgsCount': 0, 'MethodBody': 'public void popIndent() {\n\tvirtual_indent -= TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""}"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.popIndent()', 'FunctionName': 'popIndent', 'ArgsCount': 0, 'MethodBody': 'public void popIndent() {\n\tvirtual_indent -= TAB_WIDTH;\n\tif (virtual_indent >= 0 && virtual_indent <= SPACES.length())\n\t    indent = virtual_indent;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'out.printil(""}"")', 'FunctionName': 'printil', 'ArgsCount': 1, 'MethodBody': 'public void printil(String s) {\n        javaLine++;\n\twriter.print(SPACES.substring(0, indent));\n\twriter.println(s);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ServletWriter.java'}, {'Syntax': 'genCommonPostamble()', 'FunctionName': 'genCommonPostamble', 'ArgsCount': 0, 'MethodBody': 'private void genCommonPostamble() {\n        // Append any methods that were generated in the buffer.\n        for (int i = 0; i < methodsBuffered.size(); i++) {\n            GenBuffer methodBuffer = methodsBuffered.get(i);\n            methodBuffer.adjustJavaLines(out.getJavaLine() - 1);\n            out.printMultiLn(methodBuffer.toString());\n        }\n\n        // Append the helper class\n        if (fragmentHelperClass.isUsed()) {\n            fragmentHelperClass.generatePostamble();\n            fragmentHelperClass.adjustJavaLines(out.getJavaLine() - 1);\n            out.printMultiLn(fragmentHelperClass.toString());\n        }\n\n        // Append char array declarations\n        if (arrayBuffer != null) {\n            out.printMultiLn(arrayBuffer.toString());\n        }\n\n        // Close the class definition\n        out.popIndent();\n        out.printil(""}"");\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Generator.java'}]"
6621cd9dcda9bd4817b111d5,alipay/sofa-bolt,"protected ProtocolCode decodeProtocolCode(ByteBuf in) {
        if (in.readableBytes() >= protocolCodeLength) {
            byte[] protocolCodeBytes = new byte[protocolCodeLength];
            in.readBytes(protocolCodeBytes);
            return ProtocolCode.fromBytes(protocolCodeBytes);
        }
        return null;
    }",decode the protocol code,src/main/java/com/alipay/remoting/codec/ProtocolCodeBasedDecoder.java,"[{'Syntax': 'ProtocolCode.fromBytes(protocolCodeBytes)', 'FunctionName': 'fromBytes', 'ArgsCount': 1, 'MethodBody': 'public static ProtocolCode fromBytes(byte... version) {\n        return new ProtocolCode(version);\n    }', 'FileName': '/alipay/sofa-bolt/src/main/java/com/alipay/remoting/ProtocolCode.java'}]"
6621cd9dcda9bd4817b111d6,ngageoint/geopackage-android,"public List<Long> uniqueBaseIds() {
        return querySingleColumnTypedResults(
                ""SELECT DISTINCT "" + CoreSQLUtils.quoteWrap(UserMappingTable.COLUMN_BASE_ID) + "" FROM ""
                        + CoreSQLUtils.quoteWrap(getTableName()), null);
    }",Get the unique base ids,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/related/UserMappingDao.java,"[{'Syntax': 'CoreSQLUtils.quoteWrap(UserMappingTable.COLUMN_BASE_ID)', 'FunctionName': 'quoteWrap', 'ArgsCount': 1, 'MethodBody': 'public static ContentValues quoteWrap(ContentValues values) {\n        ContentValues quoteValues = null;\n        if (values != null) {\n\n            quoteValues = new ContentValues();\n\n            for (Map.Entry<String, Object> value : values.valueSet()) {\n                setContentValue(quoteValues, CoreSQLUtils.quoteWrap(value.getKey()), value.getValue());\n            }\n\n        }\n\n        return quoteValues;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/SQLUtils.java'}, {'Syntax': 'CoreSQLUtils.quoteWrap(getTableName())', 'FunctionName': 'quoteWrap', 'ArgsCount': 1, 'MethodBody': 'public static ContentValues quoteWrap(ContentValues values) {\n        ContentValues quoteValues = null;\n        if (values != null) {\n\n            quoteValues = new ContentValues();\n\n            for (Map.Entry<String, Object> value : values.valueSet()) {\n                setContentValue(quoteValues, CoreSQLUtils.quoteWrap(value.getKey()), value.getValue());\n            }\n\n        }\n\n        return quoteValues;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/SQLUtils.java'}, {'Syntax': 'getTableName()', 'FunctionName': 'getTableName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getTableName() {\n        return table.getTableName();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}]"
6621cd9dcda9bd4817b111d7,oblac/jodd,"private ClassReader getCachedAdviceClassReader(final Class<? extends ProxyAdvice> advice) {
		if (adviceClassReaderCache == null) {
			adviceClassReaderCache = TypeCache.createDefault();
		}
		ClassReader adviceReader = adviceClassReaderCache.get(advice);
		if (adviceReader == null) {
			adviceReader = createAdviceClassReader(advice);
			adviceClassReaderCache.put(advice, adviceReader);
		}
		return adviceReader;
	}",Returns class reader for advice .,jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxyAspectData.java,"[{'Syntax': 'adviceClassReaderCache.get(advice)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'adviceClassReaderCache.put(advice, adviceReader)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void put(final K key, final V object) {\n\t\tput(key, object, timeout);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cd9dcda9bd4817b111d8,oblac/jodd,"public static int findFirstEqual(final CharSequence source, final int index, final CharSequence match) {
		for (int i = index; i < source.length(); i++) {
			if (equalsOne(source.charAt(i), match)) {
				return i;
			}
		}
		return -1;
	}",Finds index of the first character in given charsequence the matches any from the given set of characters .,jodd-core/src/main/java/jodd/util/CharSequenceUtil.java,"[{'Syntax': 'source.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length() {\n\t\treturn length;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'source.charAt(i)', 'FunctionName': 'charAt', 'ArgsCount': 1, 'MethodBody': 'public char charAt(final int pos) {\n\t\tint len = 0;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tint newlen = len + array[i].length();\n\t\t\tif (pos < newlen) {\n\t\t\t\treturn array[i].charAt(pos - len);\n\t\t\t}\n\t\t\tlen = newlen;\n\t\t}\n\t\tthrow new IllegalArgumentException(""Invalid char index"");\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}]"
6621cd9dcda9bd4817b111d9,ngageoint/geopackage-android,"public GeoPackageMetadata get(long id) {
        GeoPackageMetadata metadata = null;
        String selection = GeoPackageMetadata.COLUMN_ID + "" = ?"";
        String[] selectionArgs = new String[]{String.valueOf(id)};
        Cursor cursor = db.query(
                GeoPackageMetadata.TABLE_NAME,
                GeoPackageMetadata.COLUMNS, selection, selectionArgs, null, null, null);
        try {
            if (cursor.moveToNext()) {
                metadata = createGeoPackageMetadata(cursor);
            }
        } finally {
            cursor.close();
        }
        return metadata;
    }",Get GeoPackage metadata by id,geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadataDataSource.java,"[{'Syntax': 'db.query(\n                GeoPackageMetadata.TABLE_NAME,\n                GeoPackageMetadata.COLUMNS, selection, selectionArgs, null, null, null)', 'FunctionName': 'query', 'ArgsCount': 7, 'MethodBody': '@Override\n    public TResult query(String table, String[] columns, String selection,\n                         String[] selectionArgs, String groupBy, String having,\n                         String orderBy) {\n        return query(new UserQuery(table, columns, selection, selectionArgs, groupBy, having, orderBy));\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserConnection.java'}, {'Syntax': 'cursor.moveToNext()', 'FunctionName': 'moveToNext', 'ArgsCount': 0, 'MethodBody': '@Override\n    public boolean moveToNext() {\n        boolean hasNext = false;\n        if (count == null) {\n            getCount();\n        }\n        if (invalidCursor == null) {\n            hasNext = super.moveToNext();\n            if (!hasNext) {\n                createInvalidCursor();\n            }\n        }\n        if (invalidCursor != null) {\n            hasNext = invalidCursor.moveToNext();\n        }\n        return hasNext;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}, {'Syntax': 'createGeoPackageMetadata(cursor)', 'FunctionName': 'createGeoPackageMetadata', 'ArgsCount': 1, 'MethodBody': 'private GeoPackageMetadata createGeoPackageMetadata(Cursor cursor) {\n        GeoPackageMetadata metadata = new GeoPackageMetadata();\n        metadata.setId(cursor.getLong(0));\n        metadata.setName(cursor.getString(1));\n        metadata.setExternalPath(cursor.getString(2));\n        return metadata;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadataDataSource.java'}, {'Syntax': 'cursor.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n    public void close() {\n        super.close();\n        if (invalidCursor != null) {\n            invalidCursor.close();\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}]"
6621cd9dcda9bd4817b111da,playframework/playframework,"public Binding<T> to(final Class<? extends T> implementation) {
    return underlying.to(implementation).asJava();
  }",Bind this binding key to the given implementation class .,core/play/src/main/java/play/inject/BindingKey.java,"[{'Syntax': 'underlying.to(implementation).asJava()', 'FunctionName': 'asJava', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EssentialAction asJava() {\n    return this;\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/mvc/EssentialAction.java'}, {'Syntax': 'underlying.to(implementation)', 'FunctionName': 'to', 'ArgsCount': 1, 'MethodBody': 'public Binding<T> to(final Class<? extends T> implementation) {\n    return underlying.to(implementation).asJava();\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/inject/BindingKey.java'}]"
6621cd9dcda9bd4817b111db,google/guice,"Key<V> getKeyForNewValue(K key) {
    checkNotNull(key, ""key"");
    checkConfiguration(!bindingSelection.isInitialized(), ""MapBinder was already initialized"");
    RealMultibinder<Map.Entry<K, Provider<V>>> entrySetBinder =
        bindingSelection.getEntrySetBinder();

    Key<V> valueKey =
        Key.get(
            bindingSelection.getValueType(),
            new RealElement(
                entrySetBinder.getSetName(), MAPBINDER, bindingSelection.getKeyType().toString()));
    entrySetBinder.addBinding().toProvider(new ProviderMapEntry<K, V>(key, valueKey));
    return valueKey;
  }",Adds a binding to the map for the given key .,core/src/com/google/inject/internal/RealMapBinder.java,"[{'Syntax': 'checkNotNull(key, ""key"")', 'FunctionName': 'checkNotNull', 'ArgsCount': 2, 'MethodBody': 'static <T> T checkNotNull(T reference, String name) {\n    if (reference != null) {\n      return reference;\n    }\n\n    NullPointerException npe = new NullPointerException(name);\n    throw new ConfigurationException(ImmutableSet.of(new Message(npe.toString(), npe)));\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/Errors.java'}, {'Syntax': 'bindingSelection.isInitialized()', 'FunctionName': 'isInitialized', 'ArgsCount': 0, 'MethodBody': 'boolean isInitialized() {\n    return factory.constructorInjector != null;\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/ConstructorBindingImpl.java'}, {'Syntax': 'bindingSelection.getEntrySetBinder()', 'FunctionName': 'getEntrySetBinder', 'ArgsCount': 0, 'MethodBody': 'private RealMultibinder<Map.Entry<K, Provider<V>>> getEntrySetBinder() {\n      return entrySetBinder;\n    }', 'FileName': '/google/guice/core/src/com/google/inject/internal/RealMapBinder.java'}, {'Syntax': 'Key.get(\n            bindingSelection.getValueType(),\n            new RealElement(\n                entrySetBinder.getSetName(), MAPBINDER, bindingSelection.getKeyType().toString()))', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'static UriPatternMatcher get(UriPatternType type, String pattern) {\n    switch (type) {\n      case SERVLET:\n        return new ServletStyleUriPatternMatcher(pattern);\n      case REGEX:\n        return new RegexUriPatternMatcher(pattern);\n      default:\n        return null;\n    }\n  }', 'FileName': '/google/guice/extensions/servlet/src/com/google/inject/servlet/UriPatternType.java'}, {'Syntax': 'bindingSelection.getValueType()', 'FunctionName': 'getValueType', 'ArgsCount': 0, 'MethodBody': 'private TypeLiteral<V> getValueType() {\n      return valueType;\n    }', 'FileName': '/google/guice/core/src/com/google/inject/internal/RealMapBinder.java'}, {'Syntax': 'entrySetBinder.getSetName()', 'FunctionName': 'getSetName', 'ArgsCount': 0, 'MethodBody': 'String getSetName() {\n    return bindingSelection.getSetName();\n  }', 'FileName': '/google/guice/core/src/com/google/inject/internal/RealMultibinder.java'}, {'Syntax': 'bindingSelection.getKeyType().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n      return s;\n    }', 'FileName': '/google/guice/extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java'}, {'Syntax': 'bindingSelection.getKeyType()', 'FunctionName': 'getKeyType', 'ArgsCount': 0, 'MethodBody': 'private TypeLiteral<K> getKeyType() {\n      return keyType;\n    }', 'FileName': '/google/guice/core/src/com/google/inject/internal/RealMapBinder.java'}, {'Syntax': 'entrySetBinder.addBinding().toProvider(new ProviderMapEntry<K, V>(key, valueKey))', 'FunctionName': 'toProvider', 'ArgsCount': 1, 'MethodBody': 'ScopedBindingBuilder toProvider(Provider<? extends T> provider);', 'FileName': '/google/guice/core/src/com/google/inject/binder/LinkedBindingBuilder.java'}, {'Syntax': 'entrySetBinder.addBinding()', 'FunctionName': 'addBinding', 'ArgsCount': 0, 'MethodBody': 'public LinkedBindingBuilder<T> addBinding() {\n    return delegate.addBinding();\n  }', 'FileName': '/google/guice/core/src/com/google/inject/multibindings/Multibinder.java'}]"
6621cd9dcda9bd4817b111dc,real-logic/aeron,"public static void validateSocketBufferLengths(final MediaDriver.Context ctx)
    {
        try (DatagramChannel probe = DatagramChannel.open())
        {
            final int defaultSoSndBuf = probe.getOption(StandardSocketOptions.SO_SNDBUF);

            probe.setOption(StandardSocketOptions.SO_SNDBUF, Integer.MAX_VALUE);
            final int maxSoSndBuf = probe.getOption(StandardSocketOptions.SO_SNDBUF);

            if (maxSoSndBuf < ctx.socketSndbufLength())
            {
                System.err.format(
                    ""WARNING: Could not get desired SO_SNDBUF, adjust OS to allow %s: attempted=%d, actual=%d%n"",
                    SOCKET_SNDBUF_LENGTH_PROP_NAME,
                    ctx.socketSndbufLength(),
                    maxSoSndBuf);
            }

            probe.setOption(StandardSocketOptions.SO_RCVBUF, Integer.MAX_VALUE);
            final int maxSoRcvBuf = probe.getOption(StandardSocketOptions.SO_RCVBUF);

            if (maxSoRcvBuf < ctx.socketRcvbufLength())
            {
                System.err.format(
                    ""WARNING: Could not get desired SO_RCVBUF, adjust OS to allow %s: attempted=%d, actual=%d%n"",
                    SOCKET_RCVBUF_LENGTH_PROP_NAME,
                    ctx.socketRcvbufLength(),
                    maxSoRcvBuf);
            }

            final int soSndBuf = 0 == ctx.socketSndbufLength() ? defaultSoSndBuf : ctx.socketSndbufLength();

            if (ctx.mtuLength() > soSndBuf)
            {
                throw new ConfigurationException(String.format(
                    ""MTU greater than socket SO_SNDBUF, adjust %s to match MTU: mtuLength=%d, SO_SNDBUF=%d"",
                    SOCKET_SNDBUF_LENGTH_PROP_NAME,
                    ctx.mtuLength(),
                    soSndBuf));
            }

            if (ctx.initialWindowLength() > maxSoRcvBuf)
            {
                throw new ConfigurationException(""window length greater than socket SO_RCVBUF, increase '"" +
                    Configuration.INITIAL_WINDOW_LENGTH_PROP_NAME +
                    ""' to match window: windowLength="" + ctx.initialWindowLength() + "", SO_RCVBUF="" + maxSoRcvBuf);
            }
        }
        catch (final IOException ex)
        {
            throw new AeronException(""probe socket: "" + ex.toString(), ex);
        }
    }",Validate that the socket buffer lengths are sufficient for the media driver configuration .,aeron-driver/src/main/java/io/aeron/driver/Configuration.java,"[{'Syntax': 'ctx.socketSndbufLength()', 'FunctionName': 'socketSndbufLength', 'ArgsCount': 0, 'MethodBody': 'public Integer socketSndbufLength()\n    {\n        return socketSndbufLength;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java'}, {'Syntax': 'ctx.socketSndbufLength()', 'FunctionName': 'socketSndbufLength', 'ArgsCount': 0, 'MethodBody': 'public Integer socketSndbufLength()\n    {\n        return socketSndbufLength;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java'}, {'Syntax': 'ctx.socketRcvbufLength()', 'FunctionName': 'socketRcvbufLength', 'ArgsCount': 0, 'MethodBody': 'public Integer socketRcvbufLength()\n    {\n        return socketRcvbufLength;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java'}, {'Syntax': 'ctx.socketRcvbufLength()', 'FunctionName': 'socketRcvbufLength', 'ArgsCount': 0, 'MethodBody': 'public Integer socketRcvbufLength()\n    {\n        return socketRcvbufLength;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java'}, {'Syntax': 'ctx.socketSndbufLength()', 'FunctionName': 'socketSndbufLength', 'ArgsCount': 0, 'MethodBody': 'public Integer socketSndbufLength()\n    {\n        return socketSndbufLength;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java'}, {'Syntax': 'ctx.socketSndbufLength()', 'FunctionName': 'socketSndbufLength', 'ArgsCount': 0, 'MethodBody': 'public Integer socketSndbufLength()\n    {\n        return socketSndbufLength;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java'}, {'Syntax': 'ctx.mtuLength()', 'FunctionName': 'mtuLength', 'ArgsCount': 0, 'MethodBody': 'public int mtuLength()\n    {\n        return LogBufferDescriptor.mtuLength(logBuffers.metaDataBuffer());\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Image.java'}, {'Syntax': 'ctx.mtuLength()', 'FunctionName': 'mtuLength', 'ArgsCount': 0, 'MethodBody': 'public int mtuLength()\n    {\n        return LogBufferDescriptor.mtuLength(logBuffers.metaDataBuffer());\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Image.java'}, {'Syntax': 'ctx.initialWindowLength()', 'FunctionName': 'initialWindowLength', 'ArgsCount': 0, 'MethodBody': 'public int initialWindowLength()\n    {\n        return CongestionControl.receiverWindowLength(ccOutcome);\n    }', 'FileName': '/real-logic/aeron/aeron-driver/src/main/java/io/aeron/driver/StaticWindowCongestionControl.java'}, {'Syntax': 'ctx.initialWindowLength()', 'FunctionName': 'initialWindowLength', 'ArgsCount': 0, 'MethodBody': 'public int initialWindowLength()\n    {\n        return CongestionControl.receiverWindowLength(ccOutcome);\n    }', 'FileName': '/real-logic/aeron/aeron-driver/src/main/java/io/aeron/driver/StaticWindowCongestionControl.java'}, {'Syntax': 'ex.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString()\n    {\n        return ""Publication{"" +\n            ""originalRegistrationId="" + originalRegistrationId +\n            "", registrationId="" + registrationId +\n            "", isClosed="" + isClosed +\n            "", isConnected="" + isConnected() +\n            "", initialTermId="" + initialTermId +\n            "", termBufferLength="" + termBufferLength +\n            "", sessionId="" + sessionId +\n            "", streamId="" + streamId +\n            "", channel=\'"" + channel + \'\\\'\' +\n            "", position="" + position() +\n            \'}\';\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Publication.java'}]"
6621cd9dcda9bd4817b111dd,orientechnologies/orientdb,"@Override
  public void clear() throws IOException {
    boolean rollback = false;
    final OAtomicOperation atomicOperation = startAtomicOperation(true);
    try {
      final Lock lock = FILE_LOCK_MANAGER.acquireExclusiveLock(fileId);
      try {
        final Queue<OBonsaiBucketPointer> subTreesToDelete = new LinkedList<>();

        final OCacheEntry cacheEntry = loadPageForWrite(atomicOperation, fileId, rootBucketPointer.getPageIndex(), false, true);
        try {
          OSBTreeBonsaiBucket<K, V> rootBucket = new OSBTreeBonsaiBucket<>(cacheEntry, rootBucketPointer.getPageOffset(),
              keySerializer, valueSerializer, this);

          addChildrenToQueue(subTreesToDelete, rootBucket);

          rootBucket.shrink(0);
          rootBucket = new OSBTreeBonsaiBucket<>(cacheEntry, rootBucketPointer.getPageOffset(), true, keySerializer,
              valueSerializer, this);

          rootBucket.setTreeSize(0);
        } finally {
          releasePageFromWrite(atomicOperation, cacheEntry);
        }

        recycleSubTrees(subTreesToDelete, atomicOperation);
      } finally {
        lock.unlock();
      }
    } catch (final Exception e) {
      rollback = true;
      throw e;
    } finally {
      endAtomicOperation(rollback);
    }
  }",Removes all entries from bonsai tree . Put all but the root page to free list for further reuse .,core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OSBTreeBonsaiLocal.java,"[{'Syntax': 'startAtomicOperation(true)', 'FunctionName': 'startAtomicOperation', 'ArgsCount': 1, 'MethodBody': 'public OAtomicOperation startAtomicOperation(final byte[] metadata) throws IOException {\n    OAtomicOperation operation = currentOperation.get();\n    if (operation != null) {\n      throw new OStorageException(""Atomic operation already started"");\n    }\n\n    atomicOperationsFreezer.startOperation();\n\n    final OLogSequenceNumber lsn;\n\n    final long activeSegment;\n    final long unitId;\n\n    // transaction id and id of active segment should grow synchronously to maintain correct size of\n    // WAL\n    synchronized (segmentLock) {\n      unitId = idGen.nextId();\n      activeSegment = writeAheadLog.activeSegment();\n    }\n\n    atomicOperationsTable.startOperation(unitId, activeSegment);\n    if (metadata != null) {\n      lsn = writeAheadLog.logAtomicOperationStartRecord(true, unitId, metadata);\n    } else {\n      lsn = writeAheadLog.logAtomicOperationStartRecord(true, unitId);\n    }\n\n    operation =\n        new OAtomicOperationBinaryTracking(lsn, unitId, readCache, writeCache, storage.getId());\n\n    currentOperation.set(operation);\n\n    return operation;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/paginated/atomicoperations/OAtomicOperationsManager.java'}, {'Syntax': 'FILE_LOCK_MANAGER.acquireExclusiveLock(fileId)', 'FunctionName': 'acquireExclusiveLock', 'ArgsCount': 1, 'MethodBody': 'Lock acquireExclusiveLock(T key);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/concur/lock/OLockManager.java'}, {'Syntax': 'rootBucketPointer.getPageIndex()', 'FunctionName': 'getPageIndex', 'ArgsCount': 0, 'MethodBody': 'public long getPageIndex() {\n      return pageIndex;\n    }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/cluster/OClusterPositionMapBucket.java'}, {'Syntax': 'rootBucketPointer.getPageOffset()', 'FunctionName': 'getPageOffset', 'ArgsCount': 0, 'MethodBody': 'public int getPageOffset() {\n    return pageOffset;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OBonsaiBucketPointer.java'}, {'Syntax': 'addChildrenToQueue(subTreesToDelete, rootBucket)', 'FunctionName': 'addChildrenToQueue', 'ArgsCount': 2, 'MethodBody': 'private void addChildrenToQueue(\n      final Queue<OBonsaiBucketPointer> subTreesToDelete,\n      final OSBTreeBonsaiBucket<K, V> rootBucket) {\n    if (!rootBucket.isLeaf()) {\n      final int size = rootBucket.size();\n      if (size > 0) {\n        subTreesToDelete.add(rootBucket.getEntry(0).leftChild);\n      }\n\n      for (int i = 0; i < size; i++) {\n        final OSBTreeBonsaiBucket.SBTreeEntry<K, V> entry = rootBucket.getEntry(i);\n        subTreesToDelete.add(entry.rightChild);\n      }\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OSBTreeBonsaiLocal.java'}, {'Syntax': 'rootBucket.shrink(0)', 'FunctionName': 'shrink', 'ArgsCount': 1, 'MethodBody': 'public void shrink(int newSize) throws IOException {\n    List<SBTreeEntry<K, V>> treeEntries = new ArrayList<SBTreeEntry<K, V>>(newSize);\n\n    for (int i = 0; i < newSize; i++) {\n      treeEntries.add(getEntry(i));\n    }\n\n    setIntValue(offset + FREE_POINTER_OFFSET, MAX_BUCKET_SIZE_BYTES);\n    setIntValue(offset + SIZE_OFFSET, 0);\n\n    int index = 0;\n    for (SBTreeEntry<K, V> entry : treeEntries) {\n      addEntry(index, entry, false);\n      index++;\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OSBTreeBonsaiBucket.java'}, {'Syntax': 'rootBucketPointer.getPageOffset()', 'FunctionName': 'getPageOffset', 'ArgsCount': 0, 'MethodBody': 'public int getPageOffset() {\n    return pageOffset;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OBonsaiBucketPointer.java'}, {'Syntax': 'rootBucket.setTreeSize(0)', 'FunctionName': 'setTreeSize', 'ArgsCount': 1, 'MethodBody': 'public void setTreeSize(long size) {\n    setLongValue(TREE_SIZE_OFFSET, size);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtree/local/v2/OSBTreeBucketV2.java'}, {'Syntax': 'releasePageFromWrite(atomicOperation, cacheEntry)', 'FunctionName': 'releasePageFromWrite', 'ArgsCount': 2, 'MethodBody': 'protected void releasePageFromWrite(\n      final OAtomicOperation atomicOperation, final OCacheEntry cacheEntry) throws IOException {\n    assert atomicOperation != null;\n    atomicOperation.releasePageFromWrite(cacheEntry);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/paginated/base/ODurableComponent.java'}, {'Syntax': 'recycleSubTrees(subTreesToDelete, atomicOperation)', 'FunctionName': 'recycleSubTrees', 'ArgsCount': 2, 'MethodBody': 'private void recycleSubTrees(\n      final Queue<OBonsaiBucketPointer> subTreesToDelete, final OAtomicOperation atomicOperation)\n      throws IOException {\n    OBonsaiBucketPointer head = OBonsaiBucketPointer.NULL;\n    final OBonsaiBucketPointer tail = subTreesToDelete.peek();\n\n    int bucketCount = 0;\n    while (!subTreesToDelete.isEmpty()) {\n      final OBonsaiBucketPointer bucketPointer = subTreesToDelete.poll();\n      try (final OCacheEntry cacheEntry =\n          loadPageForWrite(atomicOperation, fileId, bucketPointer.getPageIndex(), true)) {\n        final OSBTreeBonsaiBucket<K, V> bucket =\n            new OSBTreeBonsaiBucket<>(\n                cacheEntry, bucketPointer.getPageOffset(), keySerializer, valueSerializer, this);\n\n        addChildrenToQueue(subTreesToDelete, bucket);\n\n        bucket.setFreeListPointer(head);\n        bucket.setDelted(true);\n        head = bucketPointer;\n      }\n      bucketCount++;\n    }\n\n    if (head.isValid()) {\n      try (final OCacheEntry sysCacheEntry =\n          loadPageForWrite(atomicOperation, fileId, SYS_BUCKET.getPageIndex(), true)) {\n        final OSysBucket sysBucket = new OSysBucket(sysCacheEntry);\n\n        assert tail != null;\n        attachFreeListHead(tail, sysBucket.getFreeListHead(), atomicOperation);\n        sysBucket.setFreeListHead(head);\n        sysBucket.setFreeListLength(sysBucket.freeListLength() + bucketCount);\n      }\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OSBTreeBonsaiLocal.java'}, {'Syntax': 'lock.unlock()', 'FunctionName': 'unlock', 'ArgsCount': 0, 'MethodBody': 'public void unlock() {\n    getLockWrite().unlock();\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/binary/OChannelBinaryClientAbstract.java'}, {'Syntax': 'endAtomicOperation(rollback)', 'FunctionName': 'endAtomicOperation', 'ArgsCount': 1, 'MethodBody': 'public void endAtomicOperation(final Throwable error) throws IOException {\n    final OAtomicOperation operation = currentOperation.get();\n\n    if (operation == null) {\n      OLogManager.instance().error(this, ""There is no atomic operation active"", null);\n      throw new ODatabaseException(""There is no atomic operation active"");\n    }\n\n    try {\n      storage.moveToErrorStateIfNeeded(error);\n\n      if (error != null) {\n        operation.rollbackInProgress();\n      }\n\n      try {\n        final OLogSequenceNumber lsn;\n        if (!operation.isRollbackInProgress()) {\n          lsn = operation.commitChanges(writeAheadLog);\n        } else {\n          lsn = null;\n        }\n\n        final long operationId = operation.getOperationUnitId();\n        if (error != null) {\n          atomicOperationsTable.rollbackOperation(operationId);\n        } else {\n          atomicOperationsTable.commitOperation(operationId);\n          writeAheadLog.addEventAt(lsn, () -> atomicOperationsTable.persistOperation(operationId));\n        }\n\n      } finally {\n        final Iterator<String> lockedObjectIterator = operation.lockedObjects().iterator();\n\n        try {\n          while (lockedObjectIterator.hasNext()) {\n            final String lockedObject = lockedObjectIterator.next();\n            lockedObjectIterator.remove();\n\n            lockManager.releaseLock(this, lockedObject, OOneEntryPerKeyLockManager.LOCK.EXCLUSIVE);\n          }\n        } finally {\n          currentOperation.set(null);\n        }\n      }\n\n    } finally {\n      atomicOperationsFreezer.endOperation();\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/paginated/atomicoperations/OAtomicOperationsManager.java'}]"
6621cd9dcda9bd4817b111de,Unidata/thredds,"public static boolean stopBackgroundLoadingExcept( URL exemptionURL ) {
		SourcePicture sp;
		String exemptionURLString = exemptionURL.toString();
		Enumeration e = cacheLoadsInProgress.elements();
		boolean inProgress = false;
		while ( e.hasMoreElements() ) {
			sp = ((SourcePicture) e.nextElement());
			if ( ! sp.getUrlString().equals( exemptionURLString ) )
				sp.stopLoading();
			else {
				Tools.log( ""PictureCache.stopBackgroundLoading: picture was already loading"");
				inProgress = true;
			}
		}
		return inProgress;
	}",method to stop all background loading except the indicated file . Returns whether the image is already being loaded . True = loading in progress False = not in progress .,ui/src/main/java/ucar/nc2/ui/image/PictureCache.java,[]
6621cd9dcda9bd4817b111df,kiegroup/droolsjbpm-tools,"private EditPart getPartForElement(Object modelElement) {
        if ( modelElement instanceof ReteGraph ) {
            return new DiagramEditPart();
        }
        if ( modelElement instanceof BaseVertex ) {
            return new VertexEditPart();
        }
        if ( modelElement instanceof Connection ) {
            return new ConnectionEditPart();
        }
        DroolsEclipsePlugin.log( new Exception( ""Can't create part for model element: "" + ((modelElement != null) ? modelElement.getClass().getName() : ""null"") ) );
        return null;
        
    }",Maps object to EditPart .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/part/VertexEditPartFactory.java,"[{'Syntax': 'DroolsEclipsePlugin.log( new Exception( ""Can\'t create part for model element: "" + ((modelElement != null) ? modelElement.getClass().getName() : ""null"") ) )', 'FunctionName': 'log', 'ArgsCount': 1, 'MethodBody': 'public static void log(Throwable t) {\n        Throwable top = t;\n        if ( t instanceof DebugException ) {\n            DebugException de = (DebugException) t;\n            IStatus status = de.getStatus();\n            if ( status.getException() != null ) {\n                top = status.getException();\n            }\n        }\n        log( new Status( IStatus.ERROR,\n                         getUniqueIdentifier(),\n                         INTERNAL_ERROR,\n                         ""Internal error in Drools Plugin: "",\n                         top ) );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsEclipsePlugin.java'}, {'Syntax': 'modelElement.getClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn resource.getName();\n\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/builder/ResourceDescr.java'}]"
6621cd9dcda9bd4817b111e0,rupertlssmith/lojix,"private boolean peekAndConsume(int kind)
    {
        Token nextToken = tokenSource.peek();

        if (nextToken.kind == kind)
        {
            try
            {
                consumeToken(kind);
            }
            catch (SourceCodeException e)
            {
                // If the peek ahead kind can not be consumed then something strange has gone wrong so report this
                // as a bug rather than try to recover from it.
                throw new IllegalStateException(e);
            }

            return true;
        }
        else
        {
            return false;
        }
    }",Peeks ahead for the given token type and if one is foudn with that type it is consumed .,lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/PrologParser.java,"[{'Syntax': 'tokenSource.peek()', 'FunctionName': 'peek', 'ArgsCount': 0, 'MethodBody': 'public abstract E peek();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}, {'Syntax': 'consumeToken(kind)', 'FunctionName': 'consumeToken', 'ArgsCount': 1, 'MethodBody': 'protected Token consumeToken(int kind) throws SourceCodeException\n    {\n        Token nextToken = tokenSource.peek();\n\n        if (nextToken.kind != kind)\n        {\n            throw new SourceCodeException(""Was expecting "" + tokenImage[kind] + "" but got "" +\n                tokenImage[nextToken.kind] + ""."", null, null, null,\n                new SourceCodePositionImpl(nextToken.beginLine, nextToken.beginColumn, nextToken.endLine,\n                    nextToken.endColumn));\n        }\n        else\n        {\n            nextToken = tokenSource.poll();\n\n            return nextToken;\n        }\n    }', 'FileName': '/rupertlssmith/lojix/lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/PrologParser.java'}]"
6621cd9dcda9bd4817b111e1,tiefaces/TieFaces,"public final void buildSheet(final Sheet sheet, final Map<String, SheetConfiguration> sheetConfigMap,
			final CellAttributesMap cellAttributesMap) {

		if ((sheet.getLastRowNum() <= 0) && (sheet.getRow(0) == null)) {
			// this is a empty sheet. skip it.
			return;
		}
		checkAndRepairLastRow(sheet);

		int sheetRightCol = WebSheetUtility.getSheetRightCol(sheet);

		List<ConfigCommand> commandList = buildCommandListFromSheetComment((XSSFSheet) sheet, sheetRightCol,
				cellAttributesMap);

		boolean hasEachCommand = hasEachCommandInTheList(commandList);

		List<String> formList = new ArrayList<>();

		buildSheetConfigMapFromFormCommand(sheet, sheetConfigMap, commandList, formList, sheetRightCol);
		// match parent command
		matchParentCommand(commandList);
		// setup save attrs in hidden column in the sheet.
		// loop command list again to assemble other command list into sheet
		// configuration
		matchSheetConfigForm(sheetConfigMap, commandList, formList);
		initTemplateForCommand(sheet, sheetConfigMap, formList, hasEachCommand);
	}",build a sheet for configuration map .,src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java,"[{'Syntax': 'checkAndRepairLastRow(sheet)', 'FunctionName': 'checkAndRepairLastRow', 'ArgsCount': 1, 'MethodBody': ""private final void checkAndRepairLastRow(final Sheet sheet) {\r\n\t\t// repair last row if it's inserted in the configuration generation\r\n\t\tRow lastrow = sheet.getRow(sheet.getLastRowNum());\r\n\t\t// if it's lastrow and all the cells are blank. then remove the lastrow.\r\n\t\tif (lastrow != null) {\r\n\t\t\tfor (Cell cell : lastrow) {\r\n\t\t\t\tif ((cell.getCellTypeEnum() != CellType._NONE) && (cell.getCellTypeEnum() != CellType.BLANK)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsheet.removeRow(lastrow);\r\n\t\t}\r\n\r\n\t}"", 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java'}, {'Syntax': 'WebSheetUtility.getSheetRightCol(sheet)', 'FunctionName': 'getSheetRightCol', 'ArgsCount': 1, 'MethodBody': 'public static int getSheetRightCol(final Sheet sheet) {\r\n\r\n\t\ttry {\r\n\t\t\tif (sheet instanceof XSSFSheet) {\r\n\t\t\t\tXSSFSheet xsheet = (XSSFSheet) sheet;\r\n\t\t\t\tint rightCol = getSheetRightColFromDimension(xsheet);\r\n\t\t\t\tif (rightCol > TieConstants.MAX_COLUMNS_IN_SHEET) {\r\n\t\t\t\t\tclearHiddenColumns(sheet);\r\n\t\t\t\t\trightCol = getSheetRightColFromDimension(xsheet);\r\n\t\t\t\t}\r\n\t\t\t\treturn rightCol;\r\n\r\n\t\t\t}\r\n\t\t} catch (Exception e) {\r\n\t\t\tLOG.log(Level.SEVERE, ""error in getSheetRightCol : ""\r\n\t\t\t\t\t+ e.getLocalizedMessage(), e);\r\n\t\t}\r\n\t\treturn -1;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/WebSheetUtility.java'}, {'Syntax': 'buildCommandListFromSheetComment((XSSFSheet) sheet, sheetRightCol,\r\n\t\t\t\tcellAttributesMap)', 'FunctionName': 'buildCommandListFromSheetComment', 'ArgsCount': 3, 'MethodBody': 'private List<ConfigCommand> buildCommandListFromSheetComment(final XSSFSheet sheet, final int sheetRightCol,\r\n\t\t\tfinal CellAttributesMap cellAttributesMap) {\r\n\t\tList<ConfigCommand> commandList = new ArrayList<>();\r\n\t\t// if skip then return empty list.\r\n\t\tif (parent.isSkipConfiguration()) {\r\n\t\t\treturn commandList;\r\n\t\t}\r\n\r\n\t\tMap<CellAddress, ? extends Comment> comments = null;\r\n\r\n\t\ttry {\r\n\t\t\t// due to a poi bug. null exception throwed if no comments in the\r\n\t\t\t// sheet.\r\n\t\t\tcomments = sheet.getCellComments();\r\n\t\t} catch (Exception ex) {\r\n\t\t\tLOG.log(Level.FINE, ""Null exception throwed when no comment exists: "" + ex.getLocalizedMessage(), ex);\r\n\t\t}\r\n\t\tif (comments == null) {\r\n\t\t\treturn commandList;\r\n\t\t}\r\n\r\n\t\t// not sure the map is sorted. So use tree map to sort it.\r\n\t\tSortedSet<CellAddress> keys = new TreeSet<>(comments.keySet());\r\n\t\t// go through each comments\r\n\t\t// if found tie command then transfer it to list also remove from\r\n\t\t// comments.\r\n\t\tfor (CellAddress key : keys) {\r\n\t\t\tCell cell = sheet.getRow(key.getRow()).getCell(key.getColumn(), MissingCellPolicy.CREATE_NULL_AS_BLANK);\r\n\t\t\tbuildCommandList(sheet, sheetRightCol, cell, commandList, cellAttributesMap);\r\n\t\t}\r\n\t\treturn commandList;\r\n\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java'}, {'Syntax': 'hasEachCommandInTheList(commandList)', 'FunctionName': 'hasEachCommandInTheList', 'ArgsCount': 1, 'MethodBody': 'private boolean hasEachCommandInTheList(final List<ConfigCommand> commandList) {\r\n\r\n\t\tif (commandList != null) {\r\n\t\t\tfor (ConfigCommand command : commandList) {\r\n\t\t\t\tif (command.getCommandTypeName().equalsIgnoreCase(TieConstants.COMMAND_EACH)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java'}, {'Syntax': 'buildSheetConfigMapFromFormCommand(sheet, sheetConfigMap, commandList, formList, sheetRightCol)', 'FunctionName': 'buildSheetConfigMapFromFormCommand', 'ArgsCount': 5, 'MethodBody': 'private void buildSheetConfigMapFromFormCommand(final Sheet sheet,\r\n\t\t\tfinal Map<String, SheetConfiguration> sheetConfigMap, final List<ConfigCommand> commandList,\r\n\t\t\tfinal List<String> formList, final int sheetRightCol) {\r\n\t\tboolean foundForm = false;\r\n\t\tint minRowNum = sheet.getLastRowNum();\r\n\t\tint maxRowNum = sheet.getFirstRowNum();\r\n\t\tfor (Command command : commandList) {\r\n\t\t\t// check whether is form command\r\n\t\t\tif (command.getCommandTypeName().equalsIgnoreCase(TieConstants.COMMAND_FORM)) {\r\n\t\t\t\tfoundForm = true;\r\n\t\t\t\tFormCommand fcommand = (FormCommand) command;\r\n\t\t\t\tsheetConfigMap.put(fcommand.getName(),\r\n\t\t\t\t\t\tgetSheetConfigurationFromConfigCommand(sheet, fcommand, sheetRightCol));\r\n\t\t\t\tformList.add(fcommand.getName());\r\n\t\t\t\tif (fcommand.getTopRow() < minRowNum) {\r\n\t\t\t\t\tminRowNum = fcommand.getTopRow();\r\n\t\t\t\t}\r\n\t\t\t\tif (fcommand.getLastRow() > maxRowNum) {\r\n\t\t\t\t\tmaxRowNum = fcommand.getLastRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if no form found, then use the whole sheet as form\r\n\t\tif (!foundForm) {\r\n\t\t\tWebSheetUtility.clearHiddenColumns(sheet);\r\n\t\t\tString formName = sheet.getSheetName();\r\n\t\t\tSheetConfiguration sheetConfig = getSheetConfiguration(sheet, formName, sheetRightCol);\r\n\t\t\tFormCommand fcommand = buildFormCommandFromSheetConfig(sheetConfig, sheet);\r\n\t\t\tcommandList.add(fcommand);\r\n\t\t\tsheetConfig.setFormCommand(fcommand);\r\n\t\t\tsheetConfigMap.put(formName, sheetConfig);\r\n\t\t\tformList.add(formName);\r\n\t\t\tminRowNum = sheet.getFirstRowNum();\r\n\t\t\tmaxRowNum = sheet.getLastRowNum();\r\n\t\t}\r\n\r\n\t\t// if skip config then return.\r\n\t\tif (parent.isSkipConfiguration()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tSaveAttrsUtility.setSaveAttrsForSheet(sheet, minRowNum, maxRowNum,\r\n\t\t\t\tparent.getCellAttributesMap().getTemplateCommentMap().get(TieConstants.SAVE_COMMENT_KEY_IN_MAP));\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java'}, {'Syntax': 'matchParentCommand(commandList)', 'FunctionName': 'matchParentCommand', 'ArgsCount': 1, 'MethodBody': 'private void matchParentCommand(final List<ConfigCommand> commandList) {\r\n\r\n\t\tif (commandList == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (int i = 0; i < commandList.size(); i++) {\r\n\t\t\tConfigCommand child = commandList.get(i);\r\n\t\t\tif (!child.getCommandTypeName().equalsIgnoreCase(TieConstants.COMMAND_FORM)) {\r\n\t\t\t\tsetParentForChildCommand(commandList, i, child);\r\n\t\t\t}\r\n\t\t}\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java'}, {'Syntax': 'matchSheetConfigForm(sheetConfigMap, commandList, formList)', 'FunctionName': 'matchSheetConfigForm', 'ArgsCount': 3, 'MethodBody': ""private void matchSheetConfigForm(final Map<String, SheetConfiguration> sheetConfigMap,\r\n\t\t\tfinal List<ConfigCommand> commandList, final List<String> formList) {\r\n\t\tfor (ConfigCommand command : commandList) {\r\n\t\t\t// check weather it's form command\r\n\t\t\tif (!command.getCommandTypeName().equalsIgnoreCase(TieConstants.COMMAND_FORM)\r\n\t\t\t\t\t&& (!command.isParentFound())) {\r\n\t\t\t\tmatchCommandToSheetConfigForm(sheetConfigMap, formList, command);\r\n\t\t\t}\r\n\t\t}\r\n\t}"", 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java'}, {'Syntax': 'initTemplateForCommand(sheet, sheetConfigMap, formList, hasEachCommand)', 'FunctionName': 'initTemplateForCommand', 'ArgsCount': 4, 'MethodBody': 'private void initTemplateForCommand(final Sheet sheet, final Map<String, SheetConfiguration> sheetConfigMap,\r\n\t\t\tfinal List<String> formList, final boolean hasEachCommand) {\r\n\r\n\t\tfor (String formname : formList) {\r\n\t\t\tSheetConfiguration sheetConfig = sheetConfigMap.get(formname);\r\n\t\t\tCellRange range = sheetConfig.getBodyCellRange();\r\n\t\t\tfor (int index = range.getTopRow(); index <= range.getBottomRow(); index++) {\r\n\t\t\t\tRow row = sheet.getRow(index);\r\n\t\t\t\tif (row == null) {\r\n\t\t\t\t\trow = sheet.createRow(index);\r\n\t\t\t\t}\r\n\t\t\t\tif (hasEachCommand) {\r\n\t\t\t\t\tConfigurationUtility.setOriginalRowNumInHiddenColumn(row, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hasEachCommand) {\r\n\t\t\tcopyTemplateForTieCommands(sheet);\r\n\t\t}\r\n\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java'}]"
6621cd9dcda9bd4817b111e2,streamsets/datacollector,"public void closeConnection() {
    LOGGER.debug(""Closing connection"");
    Connection connectionToRemove = threadLocalConnection.get();
    jdbcUtil.closeQuietly(connectionToRemove);
    if (connectionToRemove != null) {
      synchronized (this) {
        connectionsToCloseDuringDestroy.remove(connectionToRemove);
      }
    }
    threadLocalConnection.set(null);
  }",Close the current thread s connection,jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/multithread/ConnectionManager.java,[]
6621cd9dcda9bd4817b111e3,ngageoint/geopackage-android,"private void adjustGoogleBounds() {
        // Set the tile matrix set bounding box to be the world
        BoundingBox standardWgs84Box = new BoundingBox(-ProjectionConstants.WGS84_HALF_WORLD_LON_WIDTH,
                ProjectionConstants.WEB_MERCATOR_MIN_LAT_RANGE,
                ProjectionConstants.WGS84_HALF_WORLD_LON_WIDTH,
                ProjectionConstants.WEB_MERCATOR_MAX_LAT_RANGE);
        ProjectionTransform wgs84ToWebMercatorTransform = ProjectionFactory.getProjection(ProjectionConstants.EPSG_WORLD_GEODETIC_SYSTEM)
                .getTransformation(ProjectionConstants.EPSG_WEB_MERCATOR);
        tileGridBoundingBox = standardWgs84Box.transform(wgs84ToWebMercatorTransform);
    }",Adjust the tile matrix set and web mercator bounds for Google tile format,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/TileGenerator.java,[]
6621cd9dcda9bd4817b111e4,playframework/playframework,"public static JPAConfig of(String n1, String u1, String n2, String u2) {
    return new DefaultJPAConfig(
        new JPAConfig.PersistenceUnit(n1, u1), new JPAConfig.PersistenceUnit(n2, u2));
  }",Create a default JPA configuration with the given names and unit names .,persistence/play-java-jpa/src/main/java/play/db/jpa/DefaultJPAConfig.java,[]
6621cd9dcda9bd4817b111e5,streamsets/datacollector,"static private int countOpenParens(String s, int pos) {
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(""\\("");
        java.util.regex.Matcher m = p.matcher(s.subSequence(0, pos));

        int numParens = 0;

        while (m.find()) {
            // ignore parentheses inside character classes: [0-9()a-f]
            // which are just literals
            if (isInsideCharClass(s, m.start())) {
                continue;
            }

            // ignore escaped parens
            if (isEscapedChar(s, m.start())) continue;

            if (!isNoncapturingParen(s, m.start())) {
                numParens++;
            }
        }
        return numParens;
    }",Counts the open - parentheses to the left of a string position excluding escaped parentheses,common/src/main/java/com/streamsets/pipeline/lib/parser/shaded/com/google/code/regexp/Pattern.java,[]
6621cd9dcda9bd4817b111e6,playframework/playframework,"public static <T> scala.collection.immutable.Seq<T> toSeq(java.util.List<T> list) {
        return scala.collection.JavaConverters.asScalaBufferConverter(list).asScala().toList();
    }",Converts a Java List to Scala Seq .,core/play/src/main/java-scala-2.13+/play/libs/CrossScala.java,"[{'Syntax': 'scala.collection.JavaConverters.asScalaBufferConverter(list).asScala()', 'FunctionName': 'asScala', 'ArgsCount': 0, 'MethodBody': '@Override\n      public play.api.libs.ws.WSClient asScala() {\n        return new play.api.libs.ws.ahc.AhcWSClient(\n            new play.api.libs.ws.ahc.StandaloneAhcWSClient(asyncHttpClient, materializer));\n      }', 'FileName': '/playframework/playframework/transport/client/play-ahc-ws/src/main/java/play/test/WSTestClient.java'}]"
6621cd9dcda9bd4817b111e7,rest-assured/rest-assured,"public byte getByte(String path) {
        //The type returned from Groovy depends on the input, so we need to handle different numerical types.
        Object value = get(path);
        if (value instanceof Byte) {
            return (Byte) value;
        } else if (value instanceof Long) {
            return ((Long) value).byteValue();
        } else if (value instanceof Integer) {
            return ((Integer) value).byteValue();
        } else {
            return ObjectConverter.convertObjectTo(value, Byte.class);
        }
    }",Get the result of an Object path expression as a byte .,json-path/src/main/java/io/restassured/path/json/JsonPath.java,"[{'Syntax': 'get(path)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public static Response get(URI uri) {\n        return given().get(uri);\n    }', 'FileName': '/rest-assured/rest-assured/rest-assured/src/main/java/io/restassured/RestAssured.java'}, {'Syntax': 'ObjectConverter.convertObjectTo(value, Byte.class)', 'FunctionName': 'convertObjectTo', 'ArgsCount': 2, 'MethodBody': 'private <T> T convertObjectTo(Object object, Class<T> explicitType) {\n        if (object instanceof NodeBase && !ObjectConverter.canConvert(object, explicitType)) {\n            return getObjectAsType(((NodeBase) object).getBackingGroovyObject(), explicitType);\n        }\n        return ObjectConverter.convertObjectTo(object, explicitType);\n    }', 'FileName': '/rest-assured/rest-assured/xml-path/src/main/java/io/restassured/path/xml/XmlPath.java'}]"
6621cd9ecda9bd4817b111e8,1gravity/Android-RTEditor,"private void writeEscUTF16(String s, int start, int length, boolean isAttVal) throws SAXException {
        String subString = s.substring(start, start + length);
        write(StringEscapeUtils.escapeHtml4(subString));
    }",Write an array of data characters with escaping .,RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java,"[{'Syntax': 'write(StringEscapeUtils.escapeHtml4(subString))', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'private void write(char c) throws SAXException {\n        try {\n            output.write(c);\n        } catch (IOException e) {\n            throw new SAXException(e);\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java'}, {'Syntax': 'StringEscapeUtils.escapeHtml4(subString)', 'FunctionName': 'escapeHtml4', 'ArgsCount': 1, 'MethodBody': 'public static final String escapeHtml4(final String input) {\n        return ESCAPE_HTML4.translate(input);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/util/StringEscapeUtils.java'}]"
6621cd9ecda9bd4817b111e9,boonproject/boon,"private final void evictIfNeeded() {
        if ( list.size() > evictSize ) {

            final List<CacheEntry<KEY, VALUE>> killList = list.sortAndReturnPurgeList( 0.1f );

            for ( CacheEntry<KEY, VALUE> cacheEntry : killList ) {
                map.remove( cacheEntry.key );
            }
        }

    }",Evict if we are over the size limit .,boon/src/main/java/org/boon/cache/FastConcurrentReadLruLfuFifoCache.java,"[{'Syntax': 'list.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n        public long size() throws IOException {\n            return 0;\n        }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-service-model/src/test/java/org/boon/slumberdb/stores/log/BatchFileWriterTest.java'}, {'Syntax': 'list.sortAndReturnPurgeList( 0.1f )', 'FunctionName': 'sortAndReturnPurgeList', 'ArgsCount': 1, 'MethodBody': 'public List<T> sortAndReturnPurgeList(float removePercent) {\n        readWriteLock.writeLock().lock();\n        try {\n            int size = list.size();\n            int removeSize = (int) (size - (size * removePercent));\n            int start = size - removeSize;\n\n            Collections.sort(list);\n\n            List<T> removeList = new ArrayList<>(list.subList(0, start));\n            list.removeAll(removeList);\n            return removeList;\n        } finally {\n            readWriteLock.writeLock().unlock();\n        }\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/collections/SortableConcurrentList.java'}, {'Syntax': 'map.remove( cacheEntry.key )', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void remove(RemoveRequest removeRequest) {\n\n        }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-service-model/src/integration/java/org/boon/slumberdb/stores/LevelDBDataStoreTest.java'}]"
6621cd9ecda9bd4817b111ea,dschulten/hydra-java,"private void inputButton(Type type, String value) throws IOException {
        write(""<input type=\"""");
        write(type.toString());
        write(""\"" "");
        write(""value"");
        write(""="");
        quote();
        write(value);
        quote();
        write(""/>"");
    }",Classic submit or reset button .,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/xhtml/XhtmlWriter.java,"[{'Syntax': 'write(""<input type=\\"""")', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void write(int b) throws IOException {\n\n            IOContext ctxt = null;\n            int features = 0;\n            ObjectCodec codec = null;\n            JsonGenerator gen = new WriterBasedJsonGenerator(ctxt, features, codec, writer);\n//            Object jsonObject = JsonUtils.from;\n//\n//            Map context = new HashMap();\n//            JsonLdOptions options = new JsonLdOptions();\n//            Map<String, Object> compact = JsonLdProcessor.compact(jsonObject, context, options);\n//\n//            return JsonUtils.toPrettyString(compact);\n        }', 'FileName': '/dschulten/hydra-java/hydra-spring/src/test/java/de/escalon/hypermedia/spring/ExpandingOutputStreamTest.java'}, {'Syntax': 'write(type.toString())', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void write(int b) throws IOException {\n\n            IOContext ctxt = null;\n            int features = 0;\n            ObjectCodec codec = null;\n            JsonGenerator gen = new WriterBasedJsonGenerator(ctxt, features, codec, writer);\n//            Object jsonObject = JsonUtils.from;\n//\n//            Map context = new HashMap();\n//            JsonLdOptions options = new JsonLdOptions();\n//            Map<String, Object> compact = JsonLdProcessor.compact(jsonObject, context, options);\n//\n//            return JsonUtils.toPrettyString(compact);\n        }', 'FileName': '/dschulten/hydra-java/hydra-spring/src/test/java/de/escalon/hypermedia/spring/ExpandingOutputStreamTest.java'}, {'Syntax': 'type.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString() {\n        return value;\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/action/Type.java'}, {'Syntax': 'write(""\\"" "")', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void write(int b) throws IOException {\n\n            IOContext ctxt = null;\n            int features = 0;\n            ObjectCodec codec = null;\n            JsonGenerator gen = new WriterBasedJsonGenerator(ctxt, features, codec, writer);\n//            Object jsonObject = JsonUtils.from;\n//\n//            Map context = new HashMap();\n//            JsonLdOptions options = new JsonLdOptions();\n//            Map<String, Object> compact = JsonLdProcessor.compact(jsonObject, context, options);\n//\n//            return JsonUtils.toPrettyString(compact);\n        }', 'FileName': '/dschulten/hydra-java/hydra-spring/src/test/java/de/escalon/hypermedia/spring/ExpandingOutputStreamTest.java'}, {'Syntax': 'write(""value"")', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void write(int b) throws IOException {\n\n            IOContext ctxt = null;\n            int features = 0;\n            ObjectCodec codec = null;\n            JsonGenerator gen = new WriterBasedJsonGenerator(ctxt, features, codec, writer);\n//            Object jsonObject = JsonUtils.from;\n//\n//            Map context = new HashMap();\n//            JsonLdOptions options = new JsonLdOptions();\n//            Map<String, Object> compact = JsonLdProcessor.compact(jsonObject, context, options);\n//\n//            return JsonUtils.toPrettyString(compact);\n        }', 'FileName': '/dschulten/hydra-java/hydra-spring/src/test/java/de/escalon/hypermedia/spring/ExpandingOutputStreamTest.java'}, {'Syntax': 'write(""="")', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void write(int b) throws IOException {\n\n            IOContext ctxt = null;\n            int features = 0;\n            ObjectCodec codec = null;\n            JsonGenerator gen = new WriterBasedJsonGenerator(ctxt, features, codec, writer);\n//            Object jsonObject = JsonUtils.from;\n//\n//            Map context = new HashMap();\n//            JsonLdOptions options = new JsonLdOptions();\n//            Map<String, Object> compact = JsonLdProcessor.compact(jsonObject, context, options);\n//\n//            return JsonUtils.toPrettyString(compact);\n        }', 'FileName': '/dschulten/hydra-java/hydra-spring/src/test/java/de/escalon/hypermedia/spring/ExpandingOutputStreamTest.java'}, {'Syntax': 'quote()', 'FunctionName': 'quote', 'ArgsCount': 0, 'MethodBody': 'private void quote() throws IOException {\n        write(""\\"""");\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/xhtml/XhtmlWriter.java'}, {'Syntax': 'write(value)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void write(int b) throws IOException {\n\n            IOContext ctxt = null;\n            int features = 0;\n            ObjectCodec codec = null;\n            JsonGenerator gen = new WriterBasedJsonGenerator(ctxt, features, codec, writer);\n//            Object jsonObject = JsonUtils.from;\n//\n//            Map context = new HashMap();\n//            JsonLdOptions options = new JsonLdOptions();\n//            Map<String, Object> compact = JsonLdProcessor.compact(jsonObject, context, options);\n//\n//            return JsonUtils.toPrettyString(compact);\n        }', 'FileName': '/dschulten/hydra-java/hydra-spring/src/test/java/de/escalon/hypermedia/spring/ExpandingOutputStreamTest.java'}, {'Syntax': 'quote()', 'FunctionName': 'quote', 'ArgsCount': 0, 'MethodBody': 'private void quote() throws IOException {\n        write(""\\"""");\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/xhtml/XhtmlWriter.java'}, {'Syntax': 'write(""/>"")', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n        public void write(int b) throws IOException {\n\n            IOContext ctxt = null;\n            int features = 0;\n            ObjectCodec codec = null;\n            JsonGenerator gen = new WriterBasedJsonGenerator(ctxt, features, codec, writer);\n//            Object jsonObject = JsonUtils.from;\n//\n//            Map context = new HashMap();\n//            JsonLdOptions options = new JsonLdOptions();\n//            Map<String, Object> compact = JsonLdProcessor.compact(jsonObject, context, options);\n//\n//            return JsonUtils.toPrettyString(compact);\n        }', 'FileName': '/dschulten/hydra-java/hydra-spring/src/test/java/de/escalon/hypermedia/spring/ExpandingOutputStreamTest.java'}]"
6621cd9ecda9bd4817b111eb,ArpNetworking/logback-steno,"@Before(""call(* com.arpnetworking.steno.LogBuilder.log())"")
    public void addToContextLineAndMethod(final JoinPoint joinPoint) {
        final SourceLocation sourceLocation = joinPoint.getSourceLocation();
        final LogBuilder targetLogBuilder = (LogBuilder) joinPoint.getTarget();
        targetLogBuilder.addContext(""line"", String.valueOf(sourceLocation.getLine()));
        targetLogBuilder.addContext(""file"", sourceLocation.getFileName());
        targetLogBuilder.addContext(""class"", sourceLocation.getWithinType());
    }",Before outputting the message inject additional context .,src/main/aspect/com/arpnetworking/steno/aspect/LogBuilderAspect.java,"[{'Syntax': 'joinPoint.getTarget()', 'FunctionName': 'getTarget', 'ArgsCount': 0, 'MethodBody': '@JsonIgnore\n        public Optional<Object> getTarget() {\n            return _target;\n        }', 'FileName': '/ArpNetworking/logback-steno/src/main/java/com/arpnetworking/steno/LogValueMapFactory.java'}, {'Syntax': 'targetLogBuilder.addContext(""line"", String.valueOf(sourceLocation.getLine()))', 'FunctionName': 'addContext', 'ArgsCount': 2, 'MethodBody': 'DeferredLogBuilder addContext(String name, Object value);', 'FileName': '/ArpNetworking/logback-steno/src/main/java/com/arpnetworking/steno/DeferredLogBuilder.java'}, {'Syntax': 'targetLogBuilder.addContext(""file"", sourceLocation.getFileName())', 'FunctionName': 'addContext', 'ArgsCount': 2, 'MethodBody': 'DeferredLogBuilder addContext(String name, Object value);', 'FileName': '/ArpNetworking/logback-steno/src/main/java/com/arpnetworking/steno/DeferredLogBuilder.java'}, {'Syntax': 'targetLogBuilder.addContext(""class"", sourceLocation.getWithinType())', 'FunctionName': 'addContext', 'ArgsCount': 2, 'MethodBody': 'DeferredLogBuilder addContext(String name, Object value);', 'FileName': '/ArpNetworking/logback-steno/src/main/java/com/arpnetworking/steno/DeferredLogBuilder.java'}]"
6621cd9ecda9bd4817b111ec,objectify/objectify,"private int compareToWithIdentityHash(final Object k1, final Object k2) {
		return Integer.compare(System.identityHashCode(k1), System.identityHashCode(k2));
	}",I have no idea what this is about it was in the old logic,src/main/java/com/googlecode/objectify/Key.java,[]
6621cd9ecda9bd4817b111ed,wavesplatform/WavesJ,"public Transaction getTransaction(String txId) throws IOException {
        return wavesJsonMapper.convertValue(send(""/transactions/info/"" + txId), Transaction.class);
    }",Returns object by its ID .,src/main/java/com/wavesplatform/wavesj/Node.java,[]
6621cd9ecda9bd4817b111ee,eclipse/packagedrone,"private static byte[] readStreamHeader(InputStream in) throws IOException {
        byte[] streamHeader = new byte[DecoderUtil.STREAM_HEADER_SIZE];
        new DataInputStream(in).readFully(streamHeader);
        return streamHeader;
    }",Reads the Stream Header into a buffer . This is a helper function for the constructors .,bundles/org.tukani.xz/src/org/tukaani/xz/SingleXZInputStream.java,[]
6621cd9ecda9bd4817b111ef,oblac/jodd,"protected void rollbackAllResources(final boolean wasForced) {
		status = STATUS_ROLLING_BACK;
		Exception lastException = null;
		Iterator<JtxResource> it = resources.iterator();
		while (it.hasNext()) {
			JtxResource resource = it.next();
			try {
				resource.rollbackTransaction();
			} catch (Exception ex) {
				lastException = ex;
			} finally {
				it.remove();
			}
		}
		txManager.removeTransaction(this);
		status = STATUS_ROLLEDBACK;
		if (lastException != null) {
			status = STATUS_UNKNOWN;
			throw new JtxException(""Rollback failed: one or more TX resources couldn't rollback a TX"", lastException);
		}
		if (wasForced) {
			throw new JtxException(""TX rolled back because it has been marked as rollback-only"", rollbackCause);
		}
	}",Rollbacks all attached resources . Resource will be closed . and detached from this transaction . If exception occurs it will be rethrown at the end .,jodd-jtx/src/main/java/jodd/jtx/JtxTransaction.java,"[{'Syntax': 'resources.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic Iterator<File> iterator() {\n\n\t\treturn new Iterator<File>() {\n\t\t\tprivate File nextFile;\n\n\t\t\t@Override\n\t\t\tpublic boolean hasNext() {\n\t\t\t\tnextFile = nextFile();\n\t\t\t\treturn nextFile != null;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic File next() {\n\t\t\t\tif (nextFile == null) {\n\t\t\t\t\tthrow new NoSuchElementException();\n\t\t\t\t}\n\t\t\t\treturn nextFile;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void remove() {\n\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t}\n\t\t};\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'it.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\t\tpublic boolean hasNext() {\n\t\t\t\tnextFile = nextFile();\n\t\t\t\treturn nextFile != null;\n\t\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'it.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public File next() {\n\t\t\tif (files != null) {\n\t\t\t\treturn nextFile();\n\t\t\t} else if (fileNames != null) {\n\t\t\t\treturn nextFileName();\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}, {'Syntax': 'it.remove()', 'FunctionName': 'remove', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\t\tpublic void remove() {\n\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/findfile/FindFile.java'}]"
6621cd9ecda9bd4817b111f0,Unidata/thredds,"public void close()
            throws IOException
    {
        if(closed)
            return;
        closed = true;

        if(dmr8 != null) {
            sendDXR(dmr8);
            dmr8 = null;
        }

        if(mode == RequestMode.DMR)
            return; // only DMR should be sent

        // If there is no partial chunk to write then
        // we are done; else verify we can write and write the last
        // chunk; => multiple closes are ok.
        if(chunk == null || chunk.position() == 0)
            return;

        // There is data left to write.
        verifystate(); // are we in a state supporting data write?

        // Force out the current chunk (might be empty)
        // but do not close the underlying output stream
        state = State.DATA; // pretend

        int flags = DapUtil.CHUNK_END;
        writeChunk(flags);
        state = State.END;
        this.output.flush(); // Do not close
        if(this.saveoutput != null) {
            // write to true output target
            this.saveoutput.write(((ByteArrayOutputStream) this.output).toByteArray());
        }
    }",Closes this output stream and releases any system resources associated with this stream . Except the underlying stream is not actually closed ; that is left to the servlet level,dap4/d4servlet/src/main/java/dap4/servlet/ChunkWriter.java,[]
6621cd9ecda9bd4817b111f1,streamsets/datacollector,"@VisibleForTesting
  static void updateRecordForHDFS(
      Record record,
      boolean roll,
      String avroSchema,
      String location
  ){
    if(roll){
      record.getHeader().setAttribute(HDFS_HEADER_ROLL, ""true"");
    }
    record.getHeader().setAttribute(HDFS_HEADER_AVROSCHEMA, avroSchema);
    record.getHeader().setAttribute(HDFS_HEADER_TARGET_DIRECTORY, location);
    LOG.trace(""Record {} will be stored in {} path: roll({}), avro schema: {}"", record.getHeader().getSourceId(), location, roll, avroSchema);
  }",Add header information to send to HDFS,hive-protolib/src/main/java/com/streamsets/pipeline/stage/processor/hive/HiveMetadataProcessor.java,[]
6621cd9ecda9bd4817b111f2,wildfly/wildfly,"protected void setTimerState(TimerState state, Thread thread) {
        assert ((state == TimerState.IN_TIMEOUT || state == TimerState.RETRY_TIMEOUT) && thread != null) || thread == null : ""Invalid to set timer state "" + state + "" with executing Thread "" + thread;
        this.timerState = state;
        this.executingThread = thread;
    }",Sets the state and timer task executing thread of this timer,ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerImpl.java,[]
6621cd9ecda9bd4817b111f3,tony19/logback-android,"public long timeOfLastReset() {
    List<Status> statusList = sm.getCopyOfStatusList();
    if (statusList == null)
      return -1;

    int len = statusList.size();
    for (int i = len - 1; i >= 0; i--) {
      Status s = statusList.get(i);
      if (CoreConstants.RESET_MSG_PREFIX.equals(s.getMessage())) {
        return s.getDate();
      }
    }
    return -1;
  }",Return the time of last reset . - 1 if last reset time could not be found,logback-android/src/main/java/ch/qos/logback/core/status/StatusUtil.java,"[{'Syntax': 'sm.getCopyOfStatusList()', 'FunctionName': 'getCopyOfStatusList', 'ArgsCount': 0, 'MethodBody': 'public List<Status> getCopyOfStatusList() {\n      throw new UnsupportedOperationException();\n    }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/mock/MockContext.java'}, {'Syntax': 'statusList.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return size;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/classic/HLoggerContext.java'}, {'Syntax': 'statusList.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public ScenarioAction get(int i) {\n    return (ScenarioAction) actionList.get(i);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/classic/control/Scenario.java'}, {'Syntax': 'CoreConstants.RESET_MSG_PREFIX.equals(s.getMessage())', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null)\n            return false;\n        if (getClass() != obj.getClass())\n            return false;\n        Innocent other = (Innocent) obj;\n        if (aString == null) {\n            if (other.aString != null)\n                return false;\n        } else if (!aString.equals(other.aString))\n            return false;\n        if (anInt != other.anInt)\n            return false;\n        if (anInteger == null) {\n            if (other.anInteger != null)\n                return false;\n        } else if (!anInteger.equals(other.anInteger))\n            return false;\n        return true;\n    }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/Innocent.java'}, {'Syntax': 's.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\n    return message;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/classic/spi/PubLoggingEventVO.java'}, {'Syntax': 's.getDate()', 'FunctionName': 'getDate', 'ArgsCount': 0, 'MethodBody': 'Long getDate();', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/status/Status.java'}]"
6621cd9ecda9bd4817b111f4,Unidata/thredds,"static public Date getStandardDate(String text) {
    double value;
    String udunitString;

    text = text.trim();
    StringTokenizer stoker = new StringTokenizer(text);
    String firstToke = stoker.nextToken();
    try {
      value = Double.parseDouble(firstToke);
      udunitString = text.substring(firstToke.length());
    } catch (NumberFormatException e) { // stupid way to test if it starts with a number
      value = 0.0;
      udunitString = text;
    }

    DateUnit du;
    try {
      du = new DateUnit(udunitString);
    } catch (Exception e) {
      return null;
    }

    return du.makeDate(value);
  }",Create a java . util . Date from this udunits String .,cdm/src/main/java/ucar/nc2/units/DateUnit.java,[]
6621cd9ecda9bd4817b111f5,rackerlabs/blueflood,"private static Granularity granularityFromPointsLessThanEqual(double requestedDuration, int points, long assumedIntervalMillis) {
        Granularity gran = granularityFromPointsLinear(requestedDuration, points, assumedIntervalMillis);

        if (requestedDuration / gran.milliseconds() > points) {
            try {
                gran = gran.coarser();
            } catch (GranularityException e) { /* do nothing, already at 1440m */ }
        }

        return gran;
    }",Find the granularity in the interval that will yield a number of data points that are closest to the requested points but < = requested points .,blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java,"[{'Syntax': 'granularityFromPointsLinear(requestedDuration, points, assumedIntervalMillis)', 'FunctionName': 'granularityFromPointsLinear', 'ArgsCount': 3, 'MethodBody': 'private static Granularity granularityFromPointsLinear(double requestedDuration, int points, long assumedIntervalMillis) {\n        int closest = Integer.MAX_VALUE;\n        int diff = 0;\n        Granularity gran = null;\n\n        for (Granularity g : Granularity.granularities()) {\n            if (g == Granularity.FULL)\n                diff = (int)Math.abs(points - (requestedDuration / assumedIntervalMillis));\n            else\n                diff = (int)Math.abs(points - (requestedDuration /g.milliseconds()));\n            if (diff < closest) {\n                closest = diff;\n                gran = g;\n            } else {\n                break;\n            }\n        }\n\n        return gran;\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java'}, {'Syntax': 'gran.milliseconds()', 'FunctionName': 'milliseconds', 'ArgsCount': 0, 'MethodBody': 'public int milliseconds() { return milliseconds; }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java'}, {'Syntax': 'gran.coarser()', 'FunctionName': 'coarser', 'ArgsCount': 0, 'MethodBody': 'public Granularity coarser() throws GranularityException {\n        if (this == LAST) throw new GranularityException(""Nothing coarser than "" + name());\n        return granularities[index + 1];\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java'}]"
6621cd9ecda9bd4817b111f6,apache/parquet-mr,"public static Schema getNonNull(Schema schema) {
    if (schema.getType().equals(Schema.Type.UNION)) {
      List<Schema> schemas = schema.getTypes();
      if (schemas.size() == 2) {
        if (schemas.get(0).getType().equals(Schema.Type.NULL)) {
          return schemas.get(1);
        } else if (schemas.get(1).getType().equals(Schema.Type.NULL)) {
          return schemas.get(0);
        } else {
          return schema;
        }
      } else {
        return schema;
      }
    } else {
      return schema;
    }
  }",Given a schema check to see if it is a union of a null type and a regular schema and then return the non - null sub - schema . Otherwise return the given schema .,parquet-avro/src/main/java/org/apache/parquet/avro/AvroSchemaConverter.java,"[{'Syntax': 'schema.getType().equals(Schema.Type.UNION)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o == null || getClass() != o.getClass()) return false;\n\n      PathExpr pathExpr = (PathExpr) o;\n\n      if (type != pathExpr.type) return false;\n      if (value != null ? !value.equals(pathExpr.value) : pathExpr.value != null) return false;\n      return children != null ? children.equals(pathExpr.children) : pathExpr.children == null;\n    }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/util/Expressions.java'}, {'Syntax': 'schema.getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': '@Deprecated\n  public PrimitiveTypeName getType() {\n    return type.getPrimitiveTypeName();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkProperties.java'}, {'Syntax': 'schemas.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n    return cacheMap.size();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/LruCache.java'}, {'Syntax': 'schemas.get(0).getType().equals(Schema.Type.NULL)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o == null || getClass() != o.getClass()) return false;\n\n      PathExpr pathExpr = (PathExpr) o;\n\n      if (type != pathExpr.type) return false;\n      if (value != null ? !value.equals(pathExpr.value) : pathExpr.value != null) return false;\n      return children != null ? children.equals(pathExpr.children) : pathExpr.children == null;\n    }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/util/Expressions.java'}, {'Syntax': 'schemas.get(0).getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': '@Deprecated\n  public PrimitiveTypeName getType() {\n    return type.getPrimitiveTypeName();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkProperties.java'}, {'Syntax': 'schemas.get(0)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'schemas.get(1)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'schemas.get(1).getType().equals(Schema.Type.NULL)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o == null || getClass() != o.getClass()) return false;\n\n      PathExpr pathExpr = (PathExpr) o;\n\n      if (type != pathExpr.type) return false;\n      if (value != null ? !value.equals(pathExpr.value) : pathExpr.value != null) return false;\n      return children != null ? children.equals(pathExpr.children) : pathExpr.children == null;\n    }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/util/Expressions.java'}, {'Syntax': 'schemas.get(1).getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': '@Deprecated\n  public PrimitiveTypeName getType() {\n    return type.getPrimitiveTypeName();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkProperties.java'}, {'Syntax': 'schemas.get(1)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'schemas.get(0)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}]"
6621cd9ecda9bd4817b111f7,hawkular/hawkular-metrics,"@Override
    public Observable<Void> addTags(Metric<?> metric, Map<String, String> tags) {
        try {
            checkArgument(tags != null, ""Missing tags"");
            checkArgument(isValidTagMap(tags), ""Invalid tags; tag key is required"");
        } catch (Exception e) {
            return Observable.error(e);
        }

        return dataAccess.insertIntoMetricsTagsIndex(metric, tags).concatWith(dataAccess.addTags(metric, tags))
                .toList().map(l -> null);
    }",functionality into a separate class .,core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/MetricsServiceImpl.java,"[{'Syntax': 'isValidTagMap(tags)', 'FunctionName': 'isValidTagMap', 'ArgsCount': 1, 'MethodBody': 'public static boolean isValidTagMap(Map<String, String> map) {\n        for (String value : map.keySet()) {\n            if (value == null || value.trim().isEmpty()) {\n                return false;\n            }\n        }\n\n        return true;\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/Functions.java'}, {'Syntax': 'Observable.error(e)', 'FunctionName': 'error', 'ArgsCount': 1, 'MethodBody': 'public static Response error(Throwable t) {\n        if(t instanceof RuntimeApiError) {\n            return badRequest(t);\n        } else {\n            return serverError(t);\n        }\n\n    }', 'FileName': '/hawkular/hawkular-metrics/api/metrics-api-jaxrs/src/main/java/org/hawkular/metrics/api/jaxrs/util/ApiUtils.java'}, {'Syntax': 'dataAccess.insertIntoMetricsTagsIndex(metric, tags)', 'FunctionName': 'insertIntoMetricsTagsIndex', 'ArgsCount': 2, 'MethodBody': '@Override\n    public <T> Observable<ResultSet> insertIntoMetricsTagsIndex(Metric<T> metric, Map<String, String> tags) {\n        return delegate.insertIntoMetricsTagsIndex(metric, tags);\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-core-service/src/test/java/org/hawkular/metrics/core/service/DelegatingDataAccess.java'}, {'Syntax': 'dataAccess.addTags(metric, tags)', 'FunctionName': 'addTags', 'ArgsCount': 2, 'MethodBody': '@Override\n    public <T> Observable<ResultSet> addTags(Metric<T> metric, Map<String, String> tags) {\n        return delegate.addTags(metric, tags);\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-core-service/src/test/java/org/hawkular/metrics/core/service/DelegatingDataAccess.java'}]"
6621cd9ecda9bd4817b111f8,jcodec/jcodec,"public static WavHeader createWavHeader(AudioFormat format, int samples) {
        WavHeader w = new WavHeader(""RIFF"", 40, ""WAVE"", new FmtChunk((short) 1, (short) format.getChannels(), format.getSampleRate(),
                format.getSampleRate() * format.getChannels() * (format.getSampleSizeInBits() >> 3),
                (short) (format.getChannels() * (format.getSampleSizeInBits() >> 3)),
                (short) format.getSampleSizeInBits()), 44, calcDataSize(format.getChannels(),
                format.getSampleSizeInBits() >> 3, samples));
        return w;
    }",Creates wav header for the specified audio format,src/main/java/org/jcodec/codecs/wav/WavHeader.java,"[{'Syntax': 'format.getChannels()', 'FunctionName': 'getChannels', 'ArgsCount': 0, 'MethodBody': 'public int getChannels() {\n        return channelCount;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}, {'Syntax': 'format.getSampleRate()', 'FunctionName': 'getSampleRate', 'ArgsCount': 0, 'MethodBody': 'public int getSampleRate() {\n            return (int) audioInfo.getFormat().getSampleRate();\n        }', 'FileName': '/jcodec/jcodec/jplayer/src/main/java/org/jcodec/player/filters/audio/AudioMixer.java'}, {'Syntax': 'format.getSampleRate()', 'FunctionName': 'getSampleRate', 'ArgsCount': 0, 'MethodBody': 'public int getSampleRate() {\n            return (int) audioInfo.getFormat().getSampleRate();\n        }', 'FileName': '/jcodec/jcodec/jplayer/src/main/java/org/jcodec/player/filters/audio/AudioMixer.java'}, {'Syntax': 'format.getChannels()', 'FunctionName': 'getChannels', 'ArgsCount': 0, 'MethodBody': 'public int getChannels() {\n        return channelCount;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}, {'Syntax': 'format.getSampleSizeInBits()', 'FunctionName': 'getSampleSizeInBits', 'ArgsCount': 0, 'MethodBody': 'public int getSampleSizeInBits() {\n        return sampleSizeInBits;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}, {'Syntax': 'format.getChannels()', 'FunctionName': 'getChannels', 'ArgsCount': 0, 'MethodBody': 'public int getChannels() {\n        return channelCount;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}, {'Syntax': 'format.getSampleSizeInBits()', 'FunctionName': 'getSampleSizeInBits', 'ArgsCount': 0, 'MethodBody': 'public int getSampleSizeInBits() {\n        return sampleSizeInBits;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}, {'Syntax': 'format.getSampleSizeInBits()', 'FunctionName': 'getSampleSizeInBits', 'ArgsCount': 0, 'MethodBody': 'public int getSampleSizeInBits() {\n        return sampleSizeInBits;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}, {'Syntax': 'calcDataSize(format.getChannels(),\n                format.getSampleSizeInBits() >> 3, samples)', 'FunctionName': 'calcDataSize', 'ArgsCount': 3, 'MethodBody': 'public static long calcDataSize(int numChannels, int bytesPerSample, long samples) {\n        return samples * numChannels * bytesPerSample;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/codecs/wav/WavHeader.java'}, {'Syntax': 'format.getChannels()', 'FunctionName': 'getChannels', 'ArgsCount': 0, 'MethodBody': 'public int getChannels() {\n        return channelCount;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}, {'Syntax': 'format.getSampleSizeInBits()', 'FunctionName': 'getSampleSizeInBits', 'ArgsCount': 0, 'MethodBody': 'public int getSampleSizeInBits() {\n        return sampleSizeInBits;\n    }', 'FileName': '/jcodec/jcodec/src/main/java/org/jcodec/common/AudioFormat.java'}]"
6621cd9ecda9bd4817b111f9,jboss/jboss-common-core,"@SuppressWarnings(""unused"")
   public static void preload()
   {
      for (int i = 0; i < PROTOCOLS.length; i ++)
      {
         try
         {
            URL url = new URL(PROTOCOLS[i], """", -1, """");
            log.trace(""Loaded protocol: "" + PROTOCOLS[i]);
         }
         catch (Exception e)
         {
            log.warn(""Failed to load protocol: "" + PROTOCOLS[i], e);
         }
      }
   }",Preload the JBoss specific protocol handlers so that URL knows about them even if the handler factory is changed .,src/main/java/org/jboss/net/protocol/URLStreamHandlerFactory.java,[]
6621cd9ecda9bd4817b111fa,streamsets/datacollector,"private void validateAllServicesAvailable() {
    // Firstly validate that all stages have satisfied service dependencies
    List<String> missingServices = new LinkedList<>();

    for(StageDefinition stage : stageList) {
      for(ServiceDependencyDefinition service : stage.getServices()) {
        if(!serviceMap.containsKey(service.getService())) {
          missingServices.add(Utils.format(""Stage {} is missing service {}"", stage.getName(), service.getService().getName()));
        }
      }
    }
    if(!missingServices.isEmpty()) {
      throw new RuntimeException(""Missing services: "" + StringUtils.join(missingServices, "", ""));
    }

    // Secondly ensure that all loaded services are compatible with what is supported by our runtime engine
    List<String> unsupportedServices = new LinkedList<>();
    for(ServiceDefinition serviceDefinition : serviceList) {
      if(!ServiceRuntime.supports(serviceDefinition.getProvides())) {
        unsupportedServices.add(serviceDefinition.getProvides().toString());
      }
    }
    if(!unsupportedServices.isEmpty()) {
      throw new RuntimeException(""Unsupported services: "" + StringUtils.join(unsupportedServices, "", ""));
    }
  }",Validate service dependencies .,container/src/main/java/com/streamsets/datacollector/stagelibrary/ClassLoaderStageLibraryTask.java,[]
6621cd9ecda9bd4817b111fb,wildfly/wildfly,"public static String getTypeIDLName(Class cls)
            throws RMIIIOPViolationException {

        if (cls.isPrimitive())
            return PrimitiveAnalysis.getPrimitiveAnalysis(cls).getIDLName();

        if (cls.isArray()) {
            // boxedRMI 1.3.6
            Class componentClass = cls;
            int sequence = 0;
            while (componentClass.isArray()) {
                componentClass = componentClass.getComponentType();
                ++sequence;
            }

            String idlName = getTypeIDLName(componentClass);
            int idx = idlName.lastIndexOf(""::"");
            String idlModule = idlName.substring(0, idx + 2);
            String baseName = idlName.substring(idx + 2);
            return ""::org::omg::boxedRMI"" + idlModule + ""seq"" + sequence + ""_"" + baseName;
        }

        // special classes
        if (cls == java.lang.String.class)
            return ""::CORBA::WStringValue"";
        if (cls == java.lang.Object.class)
            return ""::java::lang::_Object"";
        if (cls == java.lang.Class.class)
            return ""::javax::rmi::CORBA::ClassDesc"";
        if (cls == java.io.Serializable.class)
            return ""::java::io::Serializable"";
        if (cls == java.io.Externalizable.class)
            return ""::java::io::Externalizable"";
        if (cls == java.rmi.Remote.class)
            return ""::java::rmi::Remote"";
        if (cls == org.omg.CORBA.Object.class)
            return ""::CORBA::Object"";


        // remote interface?
        if (cls.isInterface() && java.rmi.Remote.class.isAssignableFrom(cls)) {
            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();
        }

        // IDL interface?
        if (cls.isInterface() &&
                org.omg.CORBA.Object.class.isAssignableFrom(cls) &&
                org.omg.CORBA.portable.IDLEntity.class.isAssignableFrom(cls)) {
            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();
        }

        // exception?
        if (Throwable.class.isAssignableFrom(cls)) {
            if (Exception.class.isAssignableFrom(cls) &&
                    !RuntimeException.class.isAssignableFrom(cls)) {
                ExceptionAnalysis ea = ExceptionAnalysis.getExceptionAnalysis(cls);

                return ea.getIDLModuleName() + ""::"" + ea.getIDLName();
            }
        }

        // got to be value
        ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

        return va.getIDLModuleName() + ""::"" + va.getIDLName();
    }",Return the IDL type name for the given class . Here we use the mapping for parameter types and return values .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/Util.java,"[{'Syntax': 'PrimitiveAnalysis.getPrimitiveAnalysis(cls).getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'PrimitiveAnalysis.getPrimitiveAnalysis(cls)', 'FunctionName': 'getPrimitiveAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static PrimitiveAnalysis getPrimitiveAnalysis(final Class cls) {\n        if (cls == null)\n            throw IIOPLogger.ROOT_LOGGER.cannotAnalyzeNullClass();\n\n        if (cls == Void.TYPE)\n            return voidAnalysis;\n        if (cls == Boolean.TYPE)\n            return booleanAnalysis;\n        if (cls == Character.TYPE)\n            return charAnalysis;\n        if (cls == Byte.TYPE)\n            return byteAnalysis;\n        if (cls == Short.TYPE)\n            return shortAnalysis;\n        if (cls == Integer.TYPE)\n            return intAnalysis;\n        if (cls == Long.TYPE)\n            return longAnalysis;\n        if (cls == Float.TYPE)\n            return floatAnalysis;\n        if (cls == Double.TYPE)\n            return doubleAnalysis;\n\n        throw IIOPLogger.ROOT_LOGGER.notAPrimitive(cls.getName());\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/PrimitiveAnalysis.java'}, {'Syntax': 'getTypeIDLName(componentClass)', 'FunctionName': 'getTypeIDLName', 'ArgsCount': 1, 'MethodBody': 'public static String getTypeIDLName(Class cls)\n            throws RMIIIOPViolationException {\n\n        if (cls.isPrimitive())\n            return PrimitiveAnalysis.getPrimitiveAnalysis(cls).getIDLName();\n\n        if (cls.isArray()) {\n            // boxedRMI 1.3.6\n            Class componentClass = cls;\n            int sequence = 0;\n            while (componentClass.isArray()) {\n                componentClass = componentClass.getComponentType();\n                ++sequence;\n            }\n\n            String idlName = getTypeIDLName(componentClass);\n            int idx = idlName.lastIndexOf(""::"");\n            String idlModule = idlName.substring(0, idx + 2);\n            String baseName = idlName.substring(idx + 2);\n            return ""::org::omg::boxedRMI"" + idlModule + ""seq"" + sequence + ""_"" + baseName;\n        }\n\n        // special classes\n        if (cls == String.class)\n            return ""::CORBA::WStringValue"";\n        if (cls == Object.class)\n            return ""::java::lang::_Object"";\n        if (cls == Class.class)\n            return ""::javax::rmi::CORBA::ClassDesc"";\n        if (cls == Serializable.class)\n            return ""::java::io::Serializable"";\n        if (cls == Externalizable.class)\n            return ""::java::io::Externalizable"";\n        if (cls == java.rmi.Remote.class)\n            return ""::java::rmi::Remote"";\n        if (cls == org.omg.CORBA.Object.class)\n            return ""::CORBA::Object"";\n\n\n        // remote interface?\n        if (cls.isInterface() && java.rmi.Remote.class.isAssignableFrom(cls)) {\n            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);\n\n            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();\n        }\n\n        // IDL interface?\n        if (cls.isInterface() &&\n                org.omg.CORBA.Object.class.isAssignableFrom(cls) &&\n                org.omg.CORBA.portable.IDLEntity.class.isAssignableFrom(cls)) {\n            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);\n\n            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();\n        }\n\n        // exception?\n        if (Throwable.class.isAssignableFrom(cls)\n                && Exception.class.isAssignableFrom(cls)\n                && !RuntimeException.class.isAssignableFrom(cls)) {\n            ExceptionAnalysis ea = ExceptionAnalysis.getExceptionAnalysis(cls);\n\n            return ea.getIDLModuleName() + ""::"" + ea.getIDLName();\n        }\n\n        // got to be value\n        ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);\n\n        return va.getIDLModuleName() + ""::"" + va.getIDLName();\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/Util.java'}, {'Syntax': 'java.rmi.Remote.class.isAssignableFrom(cls)', 'FunctionName': 'isAssignableFrom', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean isAssignableFrom(Class<?> fromClass) {\n        return isAssignableFrom(getClassName(), fromClass);\n    }', 'FileName': '/wildfly/wildfly/weld/subsystem/src/main/java/org/jboss/as/weld/discovery/WeldClassFileInfo.java'}, {'Syntax': 'InterfaceAnalysis.getInterfaceAnalysis(cls)', 'FunctionName': 'getInterfaceAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static InterfaceAnalysis getInterfaceAnalysis(Class cls) throws RMIIIOPViolationException {\n        return (InterfaceAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/InterfaceAnalysis.java'}, {'Syntax': 'ia.getIDLModuleName()', 'FunctionName': 'getIDLModuleName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLModuleName() {\n        if (idlModuleName == null) {\n            String pkgName = cls.getPackage().getName();\n            StringBuffer b = new StringBuffer();\n\n            while (!"""".equals(pkgName)) {\n                int idx = pkgName.indexOf(\'.\');\n                String n = (idx == -1) ? pkgName : pkgName.substring(0, idx);\n\n                b.append(""::"").append(Util.javaToIDLName(n));\n\n                pkgName = (idx == -1) ? """" : pkgName.substring(idx + 1);\n            }\n            idlModuleName = b.toString();\n        }\n        return idlModuleName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java'}, {'Syntax': 'ia.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'org.omg.CORBA.Object.class.isAssignableFrom(cls)', 'FunctionName': 'isAssignableFrom', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean isAssignableFrom(Class<?> fromClass) {\n        return isAssignableFrom(getClassName(), fromClass);\n    }', 'FileName': '/wildfly/wildfly/weld/subsystem/src/main/java/org/jboss/as/weld/discovery/WeldClassFileInfo.java'}, {'Syntax': 'org.omg.CORBA.portable.IDLEntity.class.isAssignableFrom(cls)', 'FunctionName': 'isAssignableFrom', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean isAssignableFrom(Class<?> fromClass) {\n        return isAssignableFrom(getClassName(), fromClass);\n    }', 'FileName': '/wildfly/wildfly/weld/subsystem/src/main/java/org/jboss/as/weld/discovery/WeldClassFileInfo.java'}, {'Syntax': 'InterfaceAnalysis.getInterfaceAnalysis(cls)', 'FunctionName': 'getInterfaceAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static InterfaceAnalysis getInterfaceAnalysis(Class cls) throws RMIIIOPViolationException {\n        return (InterfaceAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/InterfaceAnalysis.java'}, {'Syntax': 'ia.getIDLModuleName()', 'FunctionName': 'getIDLModuleName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLModuleName() {\n        if (idlModuleName == null) {\n            String pkgName = cls.getPackage().getName();\n            StringBuffer b = new StringBuffer();\n\n            while (!"""".equals(pkgName)) {\n                int idx = pkgName.indexOf(\'.\');\n                String n = (idx == -1) ? pkgName : pkgName.substring(0, idx);\n\n                b.append(""::"").append(Util.javaToIDLName(n));\n\n                pkgName = (idx == -1) ? """" : pkgName.substring(idx + 1);\n            }\n            idlModuleName = b.toString();\n        }\n        return idlModuleName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java'}, {'Syntax': 'ia.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'Throwable.class.isAssignableFrom(cls)', 'FunctionName': 'isAssignableFrom', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean isAssignableFrom(Class<?> fromClass) {\n        return isAssignableFrom(getClassName(), fromClass);\n    }', 'FileName': '/wildfly/wildfly/weld/subsystem/src/main/java/org/jboss/as/weld/discovery/WeldClassFileInfo.java'}, {'Syntax': 'Exception.class.isAssignableFrom(cls)', 'FunctionName': 'isAssignableFrom', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean isAssignableFrom(Class<?> fromClass) {\n        return isAssignableFrom(getClassName(), fromClass);\n    }', 'FileName': '/wildfly/wildfly/weld/subsystem/src/main/java/org/jboss/as/weld/discovery/WeldClassFileInfo.java'}, {'Syntax': 'RuntimeException.class.isAssignableFrom(cls)', 'FunctionName': 'isAssignableFrom', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean isAssignableFrom(Class<?> fromClass) {\n        return isAssignableFrom(getClassName(), fromClass);\n    }', 'FileName': '/wildfly/wildfly/weld/subsystem/src/main/java/org/jboss/as/weld/discovery/WeldClassFileInfo.java'}, {'Syntax': 'ExceptionAnalysis.getExceptionAnalysis(cls)', 'FunctionName': 'getExceptionAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static ExceptionAnalysis getExceptionAnalysis(Class cls)\n            throws RMIIIOPViolationException {\n        return (ExceptionAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ExceptionAnalysis.java'}, {'Syntax': 'ea.getIDLModuleName()', 'FunctionName': 'getIDLModuleName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLModuleName() {\n        if (idlModuleName == null) {\n            String pkgName = cls.getPackage().getName();\n            StringBuffer b = new StringBuffer();\n\n            while (!"""".equals(pkgName)) {\n                int idx = pkgName.indexOf(\'.\');\n                String n = (idx == -1) ? pkgName : pkgName.substring(0, idx);\n\n                b.append(""::"").append(Util.javaToIDLName(n));\n\n                pkgName = (idx == -1) ? """" : pkgName.substring(idx + 1);\n            }\n            idlModuleName = b.toString();\n        }\n        return idlModuleName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java'}, {'Syntax': 'ea.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}, {'Syntax': 'ValueAnalysis.getValueAnalysis(cls)', 'FunctionName': 'getValueAnalysis', 'ArgsCount': 1, 'MethodBody': 'public static ValueAnalysis getValueAnalysis(Class cls)  throws RMIIIOPViolationException {\n        return (ValueAnalysis) cache.getAnalysis(cls);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ValueAnalysis.java'}, {'Syntax': 'va.getIDLModuleName()', 'FunctionName': 'getIDLModuleName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLModuleName() {\n        if (idlModuleName == null) {\n            String pkgName = cls.getPackage().getName();\n            StringBuffer b = new StringBuffer();\n\n            while (!"""".equals(pkgName)) {\n                int idx = pkgName.indexOf(\'.\');\n                String n = (idx == -1) ? pkgName : pkgName.substring(0, idx);\n\n                b.append(""::"").append(Util.javaToIDLName(n));\n\n                pkgName = (idx == -1) ? """" : pkgName.substring(idx + 1);\n            }\n            idlModuleName = b.toString();\n        }\n        return idlModuleName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java'}, {'Syntax': 'va.getIDLName()', 'FunctionName': 'getIDLName', 'ArgsCount': 0, 'MethodBody': 'public String getIDLName() {\n        return idlName;\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/AbstractAnalysis.java'}]"
6621cd9ecda9bd4817b111fc,Unidata/thredds,"@Override
  public Array reallyRead(Variable client, CancelTask cancelTask) throws IOException {
    Array result;

    if (hasCachedData())
      result = super.reallyRead(client, cancelTask);
    else if (orgVar != null)
      result = orgVar.read();
    else {
      throw new IllegalStateException(""StructureDS has no way to get data"");
      //Object data = smProxy.getFillValue(getDataType());
      //return Array.factoryConstant(dataType.getPrimitiveClassType(), getShape(), data);
    }

    return convert(result, null);
  }",regular Variables .,cdm/src/main/java/ucar/nc2/dataset/StructureDS.java,[]
6621cd9fcda9bd4817b111fd,orientechnologies/orientdb,"protected int getBestResponsesGroup() {
    int maxCoherentResponses = 0;
    int bestGroupSoFar = 0;
    for (int i = 0; i < responseGroups.size(); ++i) {
      final int currentGroupSize = responseGroups.get(i).size();
      if (currentGroupSize > maxCoherentResponses) {
        maxCoherentResponses = currentGroupSize;
        bestGroupSoFar = i;
      }
    }
    return bestGroupSoFar;
  }",Returns the biggest response group .,server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedResponseManagerImpl.java,"[{'Syntax': 'responseGroups.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'responseGroups.get(i).size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size() {\n    return 0;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OSBTreeCollectionManagerRemote.java'}, {'Syntax': 'responseGroups.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@ConsoleCommand(description = ""Return the value of a property"")\n  public void get(\n      @ConsoleParameter(name = ""property-name"", description = ""Name of the property"")\n          final String iPropertyName) {\n    Object value = properties.get(iPropertyName);\n\n    out.println();\n\n    if (value == null) message(""\\nProperty \'"" + iPropertyName + ""\' is not setted"");\n    else out.println(iPropertyName + "" = "" + value);\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}]"
6621cd9fcda9bd4817b111fe,dschulten/hydra-java,"@Override
    public ActionInputParameter getActionInputParameter(String name) {
        ActionInputParameter ret = requestParams.get(name);
        if (ret == null) {
            ret = pathVariables.get(name);
        }
        if (ret == null) {
            for (ActionInputParameter annotatedParameter : getInputParameters()) {
                // TODO create ActionInputParameter for bean property at property path
                // TODO field access in addition to bean?
                PropertyDescriptor pd = getPropertyDescriptorForPropertyPath(name,
                        annotatedParameter.getParameterType());
                if (pd != null) {
                    if (pd.getWriteMethod() != null) {

                        Object callValue = annotatedParameter.getValue();
                        Object propertyValue = null;
                        if (callValue != null) {
                            BeanWrapper beanWrapper = PropertyAccessorFactory
                                    .forBeanPropertyAccess(callValue);
                            propertyValue = beanWrapper.getPropertyValue(name);
                        }
                        ret = new SpringActionInputParameter(new MethodParameter(pd
                                .getWriteMethod(), 0), propertyValue);
                    }
                    break;
                }
            }
        }
        return ret;
    }",Gets input parameter info which is part of the URL mapping be it request parameters path variables or request body attributes .,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionDescriptor.java,"[{'Syntax': 'requestParams.get(name)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name) {\n            return dynaProperties.get(name);\n        }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/Affordance.java'}, {'Syntax': 'pathVariables.get(name)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name) {\n            return dynaProperties.get(name);\n        }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/Affordance.java'}, {'Syntax': 'getInputParameters()', 'FunctionName': 'getInputParameters', 'ArgsCount': 0, 'MethodBody': 'public Collection<ActionInputParameter> getInputParameters() {\n        return inputParams.values();\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionDescriptor.java'}, {'Syntax': 'getPropertyDescriptorForPropertyPath(name,\n                        annotatedParameter.getParameterType())', 'FunctionName': 'getPropertyDescriptorForPropertyPath', 'ArgsCount': 2, 'MethodBody': 'PropertyDescriptor getPropertyDescriptorForPropertyPath(String propertyPath, Class<?> propertyType) {\n        int pos = PropertyAccessorUtils.getFirstNestedPropertySeparatorIndex(propertyPath);\n        // Handle nested properties recursively.\n        if (pos > -1) {\n            String nestedProperty = propertyPath.substring(0, pos);\n            String nestedPath = propertyPath.substring(pos + 1);\n            PropertyDescriptor propertyDescriptor = BeanUtils.getPropertyDescriptor(propertyType, nestedProperty);\n//            BeanWrapperImpl nestedBw = getNestedBeanWrapper(nestedProperty);\n            return getPropertyDescriptorForPropertyPath(nestedPath, propertyDescriptor.getPropertyType());\n        } else {\n            return BeanUtils.getPropertyDescriptor(propertyType, propertyPath);\n        }\n    }', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionDescriptor.java'}, {'Syntax': 'annotatedParameter.getParameterType()', 'FunctionName': 'getParameterType', 'ArgsCount': 0, 'MethodBody': 'Class<?> getParameterType();', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/ActionInputParameter.java'}, {'Syntax': 'annotatedParameter.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'Object getValue();', 'FileName': '/dschulten/hydra-java/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/ActionInputParameter.java'}]"
6621cd9fcda9bd4817b111ff,streamsets/datacollector,"private Map<PartitionInfoCacheSupport.PartitionValues, String> detectNewPartition(
      PartitionInfoCacheSupport.PartitionValues partitionValues,
      PartitionInfoCacheSupport.PartitionInfo pCache,
      String location
  ) throws StageException{
    Map<PartitionInfoCacheSupport.PartitionValues, String> partitionInfoDiff = new HashMap<>();
    partitionInfoDiff.put(partitionValues, location);

    partitionInfoDiff
        = (pCache != null)? pCache.getDiff(partitionInfoDiff) : partitionInfoDiff;
    if (pCache == null || !partitionInfoDiff.isEmpty()){
      return partitionInfoDiff;
    }
    return null;
  }",Using partition name and value that were obtained from record compare them with cached partition .,hive-protolib/src/main/java/com/streamsets/pipeline/stage/processor/hive/HiveMetadataProcessor.java,[]
6621cd9fcda9bd4817b11200,ReactiveX/RxJava,"public static <T> Callable<T> justCallable(T value) {
        return new JustValue<Object, T>(value);
    }",Returns a Callable that returns the given value .,src/main/java/io/reactivex/internal/functions/Functions.java,[]
6621cd9fcda9bd4817b11201,playframework/playframework,"public static Result status(int status, byte[] content) {
    if (content == null) {
      throw new NullPointerException(""Null content"");
    }
    return new Result(
        status, new HttpEntity.Strict(ByteString.fromArray(content), Optional.empty()));
  }",Generates a simple result with byte - array content .,core/play/src/main/java/play/mvc/Results.java,"[{'Syntax': 'Optional.empty()', 'FunctionName': 'empty', 'ArgsCount': 0, 'MethodBody': 'static Router empty() {\n    return play.api.routing.Router$.MODULE$.empty().asJava();\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/routing/Router.java'}]"
6621cd9fcda9bd4817b11202,apache/parquet-mr,"public static int readIntLittleEndian(ByteBuffer in, int offset) throws IOException {
    int ch4 = in.get(offset) & 0xff;
    int ch3 = in.get(offset + 1) & 0xff;
    int ch2 = in.get(offset + 2) & 0xff;
    int ch1 = in.get(offset + 3) & 0xff;
    return ((ch1 << 24) + (ch2 << 16) + (ch3 << 8) + (ch4 << 0));
  }",reads an int in little endian at the given position,parquet-common/src/main/java/org/apache/parquet/bytes/BytesUtils.java,"[{'Syntax': 'in.get(offset)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'in.get(offset + 1)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'in.get(offset + 2)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'in.get(offset + 3)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}]"
6621cd9fcda9bd4817b11203,deeplearning4j/nd4j,"public Pair<Map<SDVariable, DifferentialFunction>, List<DifferentialFunction>> exec(String functionName) {
        if (debugMode) {
            return sameDiffFunctionInstances.get(functionName).enableDebugMode().exec();

        } else
            return sameDiffFunctionInstances.get(functionName).exec();
    }",Exec a given function,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/samediff/SameDiff.java,[]
6621cd9fcda9bd4817b11204,NanoHttpd/nanohttpd,"private void sendBody(OutputStream outputStream, long pending) throws IOException {
        long BUFFER_SIZE = 16 * 1024;
        byte[] buff = new byte[(int) BUFFER_SIZE];
        boolean sendEverything = pending == -1;
        while (pending > 0 || sendEverything) {
            long bytesToRead = sendEverything ? BUFFER_SIZE : Math.min(pending, BUFFER_SIZE);
            int read = this.data.read(buff, 0, (int) bytesToRead);
            if (read <= 0) {
                break;
            }
            try {
                outputStream.write(buff, 0, read);
            } catch (Exception e) {
                if(this.data != null) {
                    this.data.close();
                }
            }
            if (!sendEverything) {
                pending -= read;
            }
        }
    }",Sends the body to the specified OutputStream . The pending parameter limits the maximum amounts of bytes sent unless it is - 1 in which case everything is sent .,core/src/main/java/org/nanohttpd/protocols/http/response/Response.java,"[{'Syntax': 'this.data.read(buff, 0, (int) bytesToRead)', 'FunctionName': 'read', 'ArgsCount': 3, 'MethodBody': '@Override\n        public synchronized int read(byte[] buffer, int off, int len) throws IOException {\n            // Too implementation-linked, but...\n            for (int i = 0; i < this.chunks[this.chunk].length(); ++i) {\n                buffer[i] = (byte) this.chunks[this.chunk].charAt(i);\n            }\n            return this.chunks[this.chunk++].length();\n        }', 'FileName': '/NanoHttpd/nanohttpd/core/src/test/java/org/nanohttpd/junit/protocols/http/HttpChunkedResponseTest.java'}, {'Syntax': 'outputStream.write(buff, 0, read)', 'FunctionName': 'write', 'ArgsCount': 3, 'MethodBody': '@Override\n    public void write(byte[] b, int off, int len) throws IOException {\n        if (len == 0)\n            return;\n        out.write(String.format(""%x\\r\\n"", len).getBytes());\n        out.write(b, off, len);\n        out.write(""\\r\\n"".getBytes());\n    }', 'FileName': '/NanoHttpd/nanohttpd/core/src/main/java/org/nanohttpd/protocols/http/response/ChunkedOutputStream.java'}, {'Syntax': 'this.data.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'public void close() {\n        NanoHTTPD.safeClose(this.inputStream);\n        NanoHTTPD.safeClose(this.acceptSocket);\n    }', 'FileName': '/NanoHttpd/nanohttpd/core/src/main/java/org/nanohttpd/protocols/http/ClientHandler.java'}]"
6621cd9fcda9bd4817b11205,turbomanage/storm-gen,"public void restore(SQLiteDatabase db, Context ctx, String suffix) {
		new CsvTableReader(this).importFromCsv(ctx, db, suffix);
	}",Restores a table from a text file .,storm-apt/api/src/main/java/com/turbomanage/storm/TableHelper.java,"[{'Syntax': 'new CsvTableReader(this).importFromCsv(ctx, db, suffix)', 'FunctionName': 'importFromCsv', 'ArgsCount': 3, 'MethodBody': 'public int importFromCsv(Context ctx, SQLiteDatabase db, String suffix) {\n\t\tString filename = getCsvFilename(db.getPath(), db.getVersion(), suffix);\n\t\tFileInputStream fileInputStream;\n\t\ttry {\n\t\t\tfileInputStream = ctx.openFileInput(filename);\n\t\t\treturn importFromCsv(db, fileInputStream);\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t\treturn -1;\n\t\t}\n\t}', 'FileName': '/turbomanage/storm-gen/storm-apt/api/src/main/java/com/turbomanage/storm/csv/CsvTableReader.java'}]"
6621cd9fcda9bd4817b11206,oblac/jodd,"public void insertAfter(final Node newChild, final Node refChild) {
		int siblingIndex = refChild.getSiblingIndex() + 1;
		if (siblingIndex == refChild.parentNode.getChildNodesCount()) {
			refChild.parentNode.addChild(newChild);
		} else {
			refChild.parentNode.insertChild(newChild, siblingIndex);
		}
	}",Inserts node after provided node .,jodd-lagarto/src/main/java/jodd/lagarto/dom/Node.java,[]
6621cd9fcda9bd4817b11207,RuedigerMoeller/fast-serialization,"@Override
    public int toByteArray( Object o, byte arr[], int startIndex, int availableSize ) {
        out.resetForReUse();
        writeTarget.setBase(arr, startIndex, availableSize);
        try {
            out.writeObject(o);
        } catch (IOException e) {
            FSTUtil.<RuntimeException>rethrow(e);
        }
        int written = out.getWritten();
        return written;
    }",throws FSTBufferTooSmallExcpetion in case object does not fit into given range Zero Copy method,src/main/java/org/nustaq/serialization/simpleapi/OnHeapCoder.java,"[{'Syntax': 'out.resetForReUse()', 'FunctionName': 'resetForReUse', 'ArgsCount': 0, 'MethodBody': 'public void resetForReUse() {\n        resetForReUse((byte[])null);\n    }', 'FileName': '/RuedigerMoeller/fast-serialization/src/main/java/org/nustaq/serialization/FSTObjectOutput.java'}, {'Syntax': 'writeTarget.setBase(arr, startIndex, availableSize)', 'FunctionName': 'setBase', 'ArgsCount': 3, 'MethodBody': 'public void setBase(byte[] base, long offIndex, long len) {\n        this.base = base;\n        this.off = byteoff+offIndex;\n        this.len = len;\n    }', 'FileName': '/RuedigerMoeller/fast-serialization/src/main/java/org/nustaq/offheap/bytez/onheap/HeapBytez.java'}, {'Syntax': 'out.writeObject(o)', 'FunctionName': 'writeObject', 'ArgsCount': 1, 'MethodBody': 'private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n        throw new java.io.IOException(""Boom!"");\n    }', 'FileName': '/RuedigerMoeller/fast-serialization/src/test/ser/I178.java'}, {'Syntax': 'FSTUtil.<RuntimeException>rethrow(e)', 'FunctionName': 'rethrow', 'ArgsCount': 1, 'MethodBody': 'public static <T extends Throwable> void rethrow(Throwable exception) throws T {\n        throw (T) exception;\n    }', 'FileName': '/RuedigerMoeller/fast-serialization/src/main/java/org/nustaq/serialization/util/FSTUtil.java'}, {'Syntax': 'out.getWritten()', 'FunctionName': 'getWritten', 'ArgsCount': 0, 'MethodBody': 'int getWritten();', 'FileName': '/RuedigerMoeller/fast-serialization/src/main/java/org/nustaq/serialization/FSTEncoder.java'}]"
6621cd9fcda9bd4817b11208,js-lib-com/tiny-container,"public String getParameter(String name) {
		Params.notNullOrEmpty(name, ""Parameter name"");
		return parameters.get(name);
	}",Get parameter value or null if parameter does not exist .,src/main/java/js/http/ContentType.java,"[{'Syntax': 'parameters.get(name)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Collection<Field> get(Class<?> implementationClass) {\n\t\tSet<Field> fields = cache.get(implementationClass);\n\t\tif (fields == null) {\n\t\t\tsynchronized (this) {\n\t\t\t\tfields = cache.get(implementationClass);\n\t\t\t\tif (fields == null) {\n\t\t\t\t\tfields = scanFields(implementationClass);\n\t\t\t\t\tcache.put(implementationClass, fields);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn fields;\n\t}', 'FileName': '/js-lib-com/tiny-container/tiny-resource/src/main/java/com/jslib/container/resource/FieldsCache.java'}]"
6621cd9fcda9bd4817b11209,walokra/markdown-page-generator-plugin,"@SuppressWarnings(""UnusedReturnValue"")
    private boolean preprocessMarkdownFiles(File inputDirectory) throws MojoExecutionException {
        getLog().debug(""Read files from: "" + inputDirectory);

        try {
            if (!inputDirectory.exists()) {
                getLog().info(""There is no input folder for the project. Skipping."");
                return false;
            }
            int baseDepth = StringUtils.countMatches(inputDirectory.getAbsolutePath(), File.separator);

            // Reading just the markdown dir and sub dirs if recursive option set
            List<File> markdownFiles = getFilesAsArray(FileUtils.iterateFiles(inputDirectory, getInputFileExtensions(), recursiveInput));

            for (File file : markdownFiles) {
                getLog().debug(""File getName() "" + file.getName());
                getLog().debug(""File getAbsolutePath() "" + file.getAbsolutePath());
                getLog().debug(""File getPath() "" + file.getPath());

                MarkdownDTO dto = new MarkdownDTO();
                dto.markdownFile = file;

                dto.folderDepth = StringUtils.countMatches(file.getAbsolutePath(), File.separator) - (baseDepth + 1);

                if (alwaysUseDefaultTitle) {
                    dto.title = defaultTitle;
                } else {
                    List<String> raw = FileUtils.readLines(file, getInputEncoding());
                    dto.title = getTitle(raw);
                }

                if (applyFiltering) {
                    for (String line : FileUtils.readLines(file, getInputEncoding())) {
                        if (isVariableLine(line)) {
                            String key = line.replaceAll(""(^\\{)|(=.*)"", """");
                            String value = line.replaceAll(""(^\\{(.*?)=)|(}$)"", """");
                            getLog().debug(""Substitute: '"" + key + ""' -> '"" + value + ""'"");
                            dto.substitutes.put(key, value);
                        }
                    }
                }

                String inputFileExtension = FilenameUtils.getExtension(file.getName());
                dto.htmlFile = new File(
                        recursiveInput
                                ? outputDirectory + File.separator + file.getParentFile().getPath().substring(inputDirectory.getPath().length()) + File.separator + file.getName().replaceAll(
                                ""."" + inputFileExtension,
                                "".html""
                        )
                                : outputDirectory + File.separator + file.getName().replaceAll(""."" + inputFileExtension, "".html"")
                );

                getLog().debug(""File htmlFile() "" + dto.htmlFile);

                markdownDTOs.add(dto);
            }
        } catch (IOException e) {
            throw new MojoExecutionException(""Unable to load file "" + e.getMessage(), e);
        }

        return true;
    }",Read Markdown files from directory .,src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java,"[{'Syntax': 'getFilesAsArray(FileUtils.iterateFiles(inputDirectory, getInputFileExtensions(), recursiveInput))', 'FunctionName': 'getFilesAsArray', 'ArgsCount': 1, 'MethodBody': 'private List<File> getFilesAsArray(Iterator<File> iterator) {\n        List<File> files = new ArrayList<>();\n        while (iterator.hasNext()) {\n            files.add(iterator.next());\n        }\n        return files;\n    }', 'FileName': '/walokra/markdown-page-generator-plugin/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java'}, {'Syntax': 'getInputFileExtensions()', 'FunctionName': 'getInputFileExtensions', 'ArgsCount': 0, 'MethodBody': 'public String[] getInputFileExtensions() {\n        return inputFileExtensions.trim().split(""\\\\s*,\\\\s*"");\n    }', 'FileName': '/walokra/markdown-page-generator-plugin/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java'}, {'Syntax': 'getInputEncoding()', 'FunctionName': 'getInputEncoding', 'ArgsCount': 0, 'MethodBody': 'private String getInputEncoding() {\n        if (StringUtils.isBlank(inputEncoding)) {\n            return Charset.defaultCharset().name();\n        } else {\n            return inputEncoding;\n        }\n    }', 'FileName': '/walokra/markdown-page-generator-plugin/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java'}, {'Syntax': 'getTitle(raw)', 'FunctionName': 'getTitle', 'ArgsCount': 1, 'MethodBody': 'private String getTitle(List<String> raw) {\n        if (raw == null) {\n            return defaultTitle;\n        }\n        String previousLine = """";\n        for (String line : raw) {\n            line = line.trim();\n            if (line.startsWith(""#"")) {\n                line = line.replace(""#"", """");\n                return line;\n            }\n            //Checking for Setext style headers.\n            //Line is considered a match if it passes:\n            //Starts with either = or -\n            //It has the same number of characters as the previous line\n            //It only contains - or = and nothing else.\n            //\n            //If there is a match we consider the previous line to be the title.\n            if ((line.startsWith(""="") && StringUtils.countMatches(line, ""="") == previousLine.length() && line.matches(""^=+$""))\n                    || (line.startsWith(""-"") && StringUtils.countMatches(line, ""-"") == previousLine.length() && line.matches(""^-+$""))) {\n                return previousLine;\n            }\n            previousLine = line;\n        }\n        return defaultTitle;\n    }', 'FileName': '/walokra/markdown-page-generator-plugin/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java'}, {'Syntax': 'getInputEncoding()', 'FunctionName': 'getInputEncoding', 'ArgsCount': 0, 'MethodBody': 'private String getInputEncoding() {\n        if (StringUtils.isBlank(inputEncoding)) {\n            return Charset.defaultCharset().name();\n        } else {\n            return inputEncoding;\n        }\n    }', 'FileName': '/walokra/markdown-page-generator-plugin/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java'}, {'Syntax': 'isVariableLine(line)', 'FunctionName': 'isVariableLine', 'ArgsCount': 1, 'MethodBody': 'private static boolean isVariableLine(String line) {\n        return line.matches(""^\\\\{.*=.*\\\\}$"");\n    }', 'FileName': '/walokra/markdown-page-generator-plugin/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java'}]"
6621cd9fcda9bd4817b1120a,braintree/braintree_android,"static VenmoConfiguration fromJson(JSONObject json) {
        if (json == null) {
            json = new JSONObject();
        }

        VenmoConfiguration venmoConfiguration = new VenmoConfiguration();
        venmoConfiguration.mAccessToken = Json.optString(json, ACCESS_TOKEN_KEY, """");
        venmoConfiguration.mEnvironment = Json.optString(json, ENVIRONMENT_KEY, """");
        venmoConfiguration.mMerchantId = Json.optString(json, MERCHANT_ID_KEY, """");

        return venmoConfiguration;
    }",Parses the Venmo configuration from json .,Braintree/src/main/java/com/braintreepayments/api/models/VenmoConfiguration.java,"[{'Syntax': 'Json.optString(json, ACCESS_TOKEN_KEY, """")', 'FunctionName': 'optString', 'ArgsCount': 3, 'MethodBody': 'static String optString(JSONObject json, String name, String fallback) {\n        if (json == null || json.isNull(name)) {\n            return fallback;\n        } else {\n            return json.optString(name, fallback);\n        }\n    }', 'FileName': '/braintree/braintree_android/SharedUtils/src/main/java/com/braintreepayments/api/Json.java'}, {'Syntax': 'Json.optString(json, ENVIRONMENT_KEY, """")', 'FunctionName': 'optString', 'ArgsCount': 3, 'MethodBody': 'static String optString(JSONObject json, String name, String fallback) {\n        if (json == null || json.isNull(name)) {\n            return fallback;\n        } else {\n            return json.optString(name, fallback);\n        }\n    }', 'FileName': '/braintree/braintree_android/SharedUtils/src/main/java/com/braintreepayments/api/Json.java'}, {'Syntax': 'Json.optString(json, MERCHANT_ID_KEY, """")', 'FunctionName': 'optString', 'ArgsCount': 3, 'MethodBody': 'static String optString(JSONObject json, String name, String fallback) {\n        if (json == null || json.isNull(name)) {\n            return fallback;\n        } else {\n            return json.optString(name, fallback);\n        }\n    }', 'FileName': '/braintree/braintree_android/SharedUtils/src/main/java/com/braintreepayments/api/Json.java'}]"
6621cd9fcda9bd4817b1120b,apache/parquet-mr,"@Override
  public void writeNull(int repetitionLevel, int definitionLevel) {
    if (DEBUG)
      log(null, repetitionLevel, definitionLevel);
    repetitionLevel(repetitionLevel);
    definitionLevel(definitionLevel);
    statistics.incrementNumNulls();
    ++valueCount;
  }",Writes the current null value,parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterBase.java,"[{'Syntax': 'log(null, repetitionLevel, definitionLevel)', 'FunctionName': 'log', 'ArgsCount': 3, 'MethodBody': 'private void log(Object value, int r, int d) {\n    LOG.debug(""{} {} r:{} d:{}"", path, value, r, d);\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterBase.java'}, {'Syntax': 'repetitionLevel(repetitionLevel)', 'FunctionName': 'repetitionLevel', 'ArgsCount': 1, 'MethodBody': 'private void repetitionLevel(int repetitionLevel) {\n    repetitionLevelColumn.writeInteger(repetitionLevel);\n    assert pageRowCount == 0 ? repetitionLevel == 0 : true : ""Every page shall start on record boundaries"";\n    if (repetitionLevel == 0) {\n      ++pageRowCount;\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterBase.java'}, {'Syntax': 'definitionLevel(definitionLevel)', 'FunctionName': 'definitionLevel', 'ArgsCount': 1, 'MethodBody': 'private void definitionLevel(int definitionLevel) {\n    definitionLevelColumn.writeInteger(definitionLevel);\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterBase.java'}, {'Syntax': 'statistics.incrementNumNulls()', 'FunctionName': 'incrementNumNulls', 'ArgsCount': 0, 'MethodBody': 'public void incrementNumNulls() {\n    num_nulls++;\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/statistics/Statistics.java'}]"
6621cd9fcda9bd4817b1120c,wro4j/wro4j,"private void registerChangeListeners() {
    wroConfiguration.registerCacheUpdatePeriodChangeListener(new PropertyChangeListener() {
      public void propertyChange(final PropertyChangeEvent event) {
        // reset cache headers when any property is changed in order to avoid browser caching
        headersConfigurer = newResponseHeadersConfigurer();
        wroManagerFactory.onCachePeriodChanged(valueAsLong(event.getNewValue()));
      }
    });
    wroConfiguration.registerModelUpdatePeriodChangeListener(new PropertyChangeListener() {
      public void propertyChange(final PropertyChangeEvent event) {
        headersConfigurer = newResponseHeadersConfigurer();
        wroManagerFactory.onModelPeriodChanged(valueAsLong(event.getNewValue()));
      }
    });
    LOG.debug(""Cache & Model change listeners were registered"");
  }",Register property change listeners .,wro4j-core/src/main/java/ro/isdc/wro/http/WroFilter.java,"[{'Syntax': 'wroConfiguration.registerCacheUpdatePeriodChangeListener(new PropertyChangeListener() {\n      public void propertyChange(final PropertyChangeEvent event) {\n        // reset cache headers when any property is changed in order to avoid browser caching\n        headersConfigurer = newResponseHeadersConfigurer();\n        wroManagerFactory.onCachePeriodChanged(valueAsLong(event.getNewValue()));\n      }\n    })', 'FunctionName': 'registerCacheUpdatePeriodChangeListener', 'ArgsCount': 1, 'MethodBody': 'public void registerCacheUpdatePeriodChangeListener(final PropertyChangeListener listener) {\n\t\tcacheUpdatePeriodListeners.add(listener);\n\t}', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/jmx/WroConfiguration.java'}, {'Syntax': 'newResponseHeadersConfigurer()', 'FunctionName': 'newResponseHeadersConfigurer', 'ArgsCount': 0, 'MethodBody': 'protected ResponseHeadersConfigurer newResponseHeadersConfigurer() {\n    return ResponseHeadersConfigurer.fromConfig(wroConfiguration);\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/http/WroFilter.java'}, {'Syntax': 'wroManagerFactory.onCachePeriodChanged(valueAsLong(event.getNewValue()))', 'FunctionName': 'onCachePeriodChanged', 'ArgsCount': 1, 'MethodBody': 'void onCachePeriodChanged(long value);', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/support/WroConfigurationChangeListener.java'}, {'Syntax': 'valueAsLong(event.getNewValue())', 'FunctionName': 'valueAsLong', 'ArgsCount': 1, 'MethodBody': 'private Long valueAsLong(final ConfigConstants configuration) {\n    \n    String stringValue = valueAsString(configuration);\n    \n    if (stringValue == null) {\n      return null;\n    } else {\n      try {\n        return Long.valueOf(stringValue);\n      } catch (final NumberFormatException e) {\n        final String message = ""Invalid Long value: "" + stringValue;\n        LOG.error(message);\n        throw new WroRuntimeException(message);\n      }\n    }\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/factory/PropertyWroConfigurationFactory.java'}, {'Syntax': 'wroConfiguration.registerModelUpdatePeriodChangeListener(new PropertyChangeListener() {\n      public void propertyChange(final PropertyChangeEvent event) {\n        headersConfigurer = newResponseHeadersConfigurer();\n        wroManagerFactory.onModelPeriodChanged(valueAsLong(event.getNewValue()));\n      }\n    })', 'FunctionName': 'registerModelUpdatePeriodChangeListener', 'ArgsCount': 1, 'MethodBody': 'public void registerModelUpdatePeriodChangeListener(final PropertyChangeListener listener) {\n\t\tmodelUpdatePeriodListeners.add(listener);\n\t}', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/jmx/WroConfiguration.java'}, {'Syntax': 'newResponseHeadersConfigurer()', 'FunctionName': 'newResponseHeadersConfigurer', 'ArgsCount': 0, 'MethodBody': 'protected ResponseHeadersConfigurer newResponseHeadersConfigurer() {\n    return ResponseHeadersConfigurer.fromConfig(wroConfiguration);\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/http/WroFilter.java'}, {'Syntax': 'wroManagerFactory.onModelPeriodChanged(valueAsLong(event.getNewValue()))', 'FunctionName': 'onModelPeriodChanged', 'ArgsCount': 1, 'MethodBody': 'void onModelPeriodChanged(long value);', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/support/WroConfigurationChangeListener.java'}, {'Syntax': 'valueAsLong(event.getNewValue())', 'FunctionName': 'valueAsLong', 'ArgsCount': 1, 'MethodBody': 'private Long valueAsLong(final ConfigConstants configuration) {\n    \n    String stringValue = valueAsString(configuration);\n    \n    if (stringValue == null) {\n      return null;\n    } else {\n      try {\n        return Long.valueOf(stringValue);\n      } catch (final NumberFormatException e) {\n        final String message = ""Invalid Long value: "" + stringValue;\n        LOG.error(message);\n        throw new WroRuntimeException(message);\n      }\n    }\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/factory/PropertyWroConfigurationFactory.java'}]"
6621cd9fcda9bd4817b1120d,Unidata/thredds,"public StructureData
    getScalarStructure(int index, StructureMembers.Member m)
    {
        if(m.getDataType() != DataType.STRUCTURE)
            throw new ForbiddenConversionException(""Atomic field cannot be converted to Structure"");
        Array ca = memberArray(index, memberIndex(m));
        if(ca.getDataType() != DataType.STRUCTURE && ca.getDataType() != DataType.SEQUENCE)
            throw new ForbiddenConversionException(""Attempt to access non-structure member"");
        CDMArrayStructure as = (CDMArrayStructure) ca;
        return as.getStructureData(0);
    }",Non - atomic cases,dap4/d4cdm/src/main/java/dap4/cdm/nc2/CDMArrayStructure.java,[]
6621cd9fcda9bd4817b1120e,wildfly/wildfly,"public static List<ParamValueMetaData> getContextParams(final JBossWebMetaData jbossWebMD) {
        List<ParamValueMetaData> contextParamsMD = jbossWebMD.getContextParams();

        if (contextParamsMD == null) {
            contextParamsMD = new LinkedList<ParamValueMetaData>();
            jbossWebMD.setContextParams(contextParamsMD);
        }

        return contextParamsMD;
    }",Gets context parameters meta data from jboss web meta data . If not found it creates new context parameters meta data and associates them with jboss web meta data .,webservices/server-integration/src/main/java/org/jboss/as/webservices/util/WebMetaDataHelper.java,[]
6621cd9fcda9bd4817b1120f,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setHandelTyp(Einzelhandel.HandelTyp value) {
        this.handelTyp = value;
    }",Sets the value of the handelTyp property .,OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Einzelhandel.java,[]
6621cd9fcda9bd4817b11210,Unidata/thredds,"static private ArrayStructure sectionArrayStructure(ParsedSectionSpec child, ArrayStructure innerData, StructureMembers.Member m) throws IOException, InvalidRangeException {
    StructureMembers membersw = new StructureMembers(m.getStructureMembers()); // no data arrays get propagated
    ArrayStructureW result = new ArrayStructureW(membersw, child.section.getShape());

    int count = 0;
    Section.Iterator iter = child.section.getIterator(child.v.getShape());
    while (iter.hasNext()) {
      int recno = iter.next(null);
      StructureData sd = innerData.getStructureData(recno);
      result.setStructureData(sd, count++);
    }

    return result;
  }",LOOK could be used in createView ??,cdm/src/main/java/ucar/nc2/iosp/IospHelper.java,[]
6621cd9fcda9bd4817b11211,wildfly/wildfly,"public Object getStateToBind(Object orig, Name name, Context ctx,
                                 Hashtable<?, ?> env) throws NamingException {
        if (orig instanceof org.omg.CORBA.Object) {
            // Already a CORBA object, just use it
            return null;
        }

        if (orig instanceof Remote) {
            // Turn remote object into org.omg.CORBA.Object
            try {
                // Returns null if JRMP; let next factory try
                // CNCtx will eventually throw IllegalArgumentException if
                // no CORBA object gotten
                return
                        CorbaUtils.remoteToCorba((Remote) orig, ((CNCtx) ctx)._orb);
            } catch (ClassNotFoundException e) {
                // RMI-IIOP library not available
                throw IIOPLogger.ROOT_LOGGER.unavailableRMIPackages();
            }
        }
        return null; // pass and let next state factory try
    }",Returns the CORBA object for a Remote object . If input is not a Remote object or if Remote object uses JRMP return null . If the RMI - IIOP library is not available throw ConfigurationException .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/RemoteToCorba.java,"[{'Syntax': 'CorbaUtils.remoteToCorba((Remote) orig, ((CNCtx) ctx)._orb)', 'FunctionName': 'remoteToCorba', 'ArgsCount': 2, 'MethodBody': ""public static org.omg.CORBA.Object remoteToCorba(Remote remoteObj, ORB orb)\n            throws ClassNotFoundException, ConfigurationException {\n        synchronized (CorbaUtils.class) {\n            if (toStubMethod == null) {\n                initMethodHandles();\n            }\n        }\n\n// First, get remoteObj's stub\n\n        // javax.rmi.CORBA.Stub stub = PortableRemoteObject.toStub(remoteObj);\n\n        Object stub;\n\n        try {\n            stub = toStubMethod.invoke(null, new Object[]{remoteObj});\n\n        } catch (InvocationTargetException e) {\n            Throwable realException = e.getTargetException();\n            // realException.printStackTrace();\n            ConfigurationException ce = IIOPLogger.ROOT_LOGGER.problemInvokingPortableRemoteObjectToStub();\n            ce.setRootCause(realException);\n            throw ce;\n        } catch (IllegalAccessException e) {\n            ConfigurationException ce = IIOPLogger.ROOT_LOGGER.cannotInvokePortableRemoteObjectToStub();\n            ce.setRootCause(e);\n            throw ce;\n        }\n\n// Next, make sure that the stub is javax.rmi.CORBA.Stub\n\n        if (!corbaStubClass.isInstance(stub)) {\n            return null;  // JRMP implementation or JRMP stub\n        }\n\n// Next, make sure that the stub is connected\n        // Invoke stub.connect(orb)\n        try {\n            connectMethod.invoke(stub, new Object[]{orb});\n\n        } catch (InvocationTargetException e) {\n            Throwable realException = e.getTargetException();\n            // realException.printStackTrace();\n\n            if (!(realException instanceof java.rmi.RemoteException)) {\n                ConfigurationException ce = IIOPLogger.ROOT_LOGGER.problemInvokingStubConnect();\n                ce.setRootCause(realException);\n                throw ce;\n            }\n            // ignore RemoteException because stub might have already\n            // been connected\n        } catch (IllegalAccessException e) {\n            ConfigurationException ce = IIOPLogger.ROOT_LOGGER.cannotInvokeStubConnect();\n            ce.setRootCause(e);\n            throw ce;\n        }\n// Finally, return stub\n        return (org.omg.CORBA.Object) stub;\n    }"", 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/CorbaUtils.java'}, {'Syntax': 'IIOPLogger.ROOT_LOGGER.unavailableRMIPackages()', 'FunctionName': 'unavailableRMIPackages', 'ArgsCount': 0, 'MethodBody': '@Message(id = 48, value = ""javax.rmi packages not available"")\n    ConfigurationException unavailableRMIPackages();', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java'}]"
6621cda0cda9bd4817b11212,Jasig/NotificationPortlet,"@Override
    public void invoke(final ActionRequest req, final ActionResponse res) throws IOException {
        final NotificationEntry entry = getTarget();
        final String notificationId = entry.getId();
        final Set<String> favoriteNotices = this.getFavoriteNotices(req);
        if (favoriteNotices.contains(notificationId)) {
            favoriteNotices.remove(notificationId);
        } else {
            favoriteNotices.add(notificationId);
        }
        setFavoriteNotices(req, favoriteNotices);
    }",Invoking a FavoriteAction toggles it .,notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/action/favorite/FavoriteAction.java,"[{'Syntax': 'entry.getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': 'public long getId() {\n        return id;\n    }', 'FileName': '/Jasig/NotificationPortlet/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/service/jpa/JpaAction.java'}, {'Syntax': 'this.getFavoriteNotices(req)', 'FunctionName': 'getFavoriteNotices', 'ArgsCount': 1, 'MethodBody': 'Set<String> getFavoriteNotices(final PortletRequest req) {\n\n        final HashSet<String> rslt = new HashSet<String>();\n\n        final PortletPreferences prefs = req.getPreferences();\n        final String[] ids = prefs.getValues(FAVORITE_NOTIFICATION_IDS_PREFERENCE, new String[0]);\n\n        for (int i=0; i < ids.length; i++) {\n            rslt.add(ids[i]);\n        }\n        return rslt;\n\n    }', 'FileName': '/Jasig/NotificationPortlet/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/action/favorite/FavoriteAction.java'}, {'Syntax': 'favoriteNotices.contains(notificationId)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(NotificationEntry entry) {\n        return StringUtils.isNotBlank(entry.getId())\n                && entry.getId().startsWith(JpaNotificationService.ID_PREFIX);\n    }', 'FileName': '/Jasig/NotificationPortlet/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/util/JpaServices.java'}, {'Syntax': 'setFavoriteNotices(req, favoriteNotices)', 'FunctionName': 'setFavoriteNotices', 'ArgsCount': 2, 'MethodBody': 'void setFavoriteNotices(final PortletRequest req, final Set<String> favoriteNotices) {\n        final String[] ids = favoriteNotices.toArray(new String[favoriteNotices.size()]);\n        final PortletPreferences prefs = req.getPreferences();\n        try {\n            prefs.setValues(FAVORITE_NOTIFICATION_IDS_PREFERENCE, ids);\n            prefs.store();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }', 'FileName': '/Jasig/NotificationPortlet/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/action/favorite/FavoriteAction.java'}]"
6621cda0cda9bd4817b11213,tiefaces/TieFaces,"public static void createCellComment(final Cell cell,
			final String newComment,
			final Map<Cell, String> finalCommentMap) {
		// due to poi's bug. the comment must be set in sorted order ( row first
		// then column),
		// otherwise poi will mess up.
		// workaround solution is to save all comments into a map,
		// and output them together when download workbook.

		if (newComment != null) {
			finalCommentMap.put(cell, newComment);

		}
	}",Creates the cell comment .,src/org/tiefaces/components/websheet/utility/CommandUtility.java,"[{'Syntax': 'finalCommentMap.put(cell, newComment)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\r\n\tpublic final Object put(final Object key, final Object value) {\r\n\t\ttry {\r\n\t\t\tCellMapKey mkey = new CellMapKey((String) key);\r\n\t\t\tif (!mkey.isParseSuccess()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tCell poiCell = parent.getCellHelper()\r\n\t\t\t\t\t.getPoiCellWithRowColFromCurrentPage(mkey.getRowIndex(),\r\n\t\t\t\t\t\t\tmkey.getColIndex());\r\n\t\t\tif (poiCell == null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tString oldValue = CellUtility\r\n\t\t\t\t\t.getCellValueWithoutFormat(poiCell);\r\n\t\t\tFacesCell facesCell = parent.getCellHelper()\r\n\t\t\t\t\t.getFacesCellWithRowColFromCurrentPage(\r\n\t\t\t\t\t\t\tmkey.getRowIndex(), mkey.getColIndex());\r\n\t\t\tString newValue = assembleNewValue(value, facesCell);\r\n\t\t\tif (newValue != null && !newValue.equals(oldValue)) {\r\n\t\t\t\tCellUtility.setCellValue(poiCell, newValue);\r\n\t\t\t\tif (facesCell.isHasSaveAttr()) {\r\n\t\t\t\t\tparent.getCellHelper().saveDataInContext(poiCell,\r\n\t\t\t\t\t\t\tnewValue);\r\n\t\t\t\t}\r\n\t\t\t\t// patch to avoid not updated downloaded file\r\n\t\t\t\tCellUtility.copyCell(poiCell.getSheet(), poiCell.getRow(), poiCell.getRow(), poiCell.getColumnIndex(),false);\r\n\t\t\t\tparent.getCellHelper().reCalc();\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t} catch (Exception ex) {\r\n\t\t\tLOG.log(Level.SEVERE,\r\n\t\t\t\t\t""Save cell data error : "" + ex.getLocalizedMessage(),\r\n\t\t\t\t\tex);\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}]"
6621cda0cda9bd4817b11214,orientechnologies/orientdb,"public void register(final Class<? extends OCompression> compression) {
    try {
      final OCompression tempInstance = compression.newInstance();

      final String name = tempInstance.name();

      if (compressions.containsKey(name))
        throw new IllegalArgumentException(""Compression with name '"" + name + ""' was already registered"");

      if (compressionClasses.containsKey(tempInstance.name()))
        throw new IllegalArgumentException(""Compression with name '"" + name + ""' was already registered"");

      compressionClasses.put(name, compression);
    } catch (Exception e) {
      OLogManager.instance().error(this, ""Cannot register storage compression algorithm '%s'"", e, compression);
    }
  }",Registers a stateless implementations the same instance will be shared on all the storages .,core/src/main/java/com/orientechnologies/orient/core/compression/OCompressionFactory.java,"[{'Syntax': 'compression.newInstance()', 'FunctionName': 'newInstance', 'ArgsCount': 0, 'MethodBody': 'public ODocument newInstance() {\n    return database.newInstance();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/script/OScriptDocumentDatabaseWrapper.java'}, {'Syntax': 'tempInstance.name()', 'FunctionName': 'name', 'ArgsCount': 0, 'MethodBody': '@Test(expected = IllegalArgumentException.class)\n  public void name() throws Exception {\n    OAbstractPaginatedStorage.checkName(""/name/with,"");\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/storage/StorageNamingTests.java'}, {'Syntax': 'compressions.containsKey(name)', 'FunctionName': 'containsKey', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean containsKey(final Object key) {\n    return context.hasMember(key.toString());\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/script/OPolyglotScriptBinding.java'}, {'Syntax': 'compressionClasses.containsKey(tempInstance.name())', 'FunctionName': 'containsKey', 'ArgsCount': 1, 'MethodBody': '@Override\n  public boolean containsKey(final Object key) {\n    return context.hasMember(key.toString());\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/script/OPolyglotScriptBinding.java'}, {'Syntax': 'tempInstance.name()', 'FunctionName': 'name', 'ArgsCount': 0, 'MethodBody': '@Test(expected = IllegalArgumentException.class)\n  public void name() throws Exception {\n    OAbstractPaginatedStorage.checkName(""/name/with,"");\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/storage/StorageNamingTests.java'}, {'Syntax': 'compressionClasses.put(name, compression)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(final String iKey, final Object iValue) {\n    index.put(iKey, (OIdentifiable) iValue);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/dictionary/ODictionary.java'}, {'Syntax': 'OLogManager.instance().error(this, ""Cannot register storage compression algorithm \'%s\'"", e, compression)', 'FunctionName': 'error', 'ArgsCount': 4, 'MethodBody': 'public void error(\n      final Object iRequester,\n      final String iMessage,\n      final Throwable iException,\n      final Object... iAdditionalArgs) {\n    if (isErrorEnabled())\n      log(iRequester, Level.SEVERE, iMessage, iException, true, null, iAdditionalArgs);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/log/OLogManager.java'}, {'Syntax': 'OLogManager.instance()', 'FunctionName': 'instance', 'ArgsCount': 0, 'MethodBody': 'public static Orient instance() {\n    if (instance != null) return instance;\n\n    return startUp(false);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/Orient.java'}]"
6621cda0cda9bd4817b11215,kiegroup/droolsjbpm-tools,"public void setSize(Dimension newSize) {
        if ( newSize != null ) {
            size.setSize( newSize );
            firePropertyChange( SIZE_PROP,
                                null,
                                size );
        }
    }",Set the Size of this vertex . Will not update the size if newSize is null .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/GraphicalVertex.java,"[{'Syntax': 'size.setSize( newSize )', 'FunctionName': 'setSize', 'ArgsCount': 1, 'MethodBody': 'public void setSize(Dimension newSize) {\n        if ( newSize != null ) {\n            size.setSize( newSize );\n            firePropertyChange( SIZE_PROP,\n                                null,\n                                size );\n        }\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/GraphicalVertex.java'}, {'Syntax': 'firePropertyChange( SIZE_PROP,\n                                null,\n                                size )', 'FunctionName': 'firePropertyChange', 'ArgsCount': 3, 'MethodBody': 'protected void firePropertyChange(String property,\n                                      Object oldValue,\n                                      Object newValue) {\n        if ( pcsDelegate.hasListeners( property ) ) {\n            pcsDelegate.firePropertyChange( property,\n                                            oldValue,\n                                            newValue );\n        }\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/ModelElement.java'}]"
6621cda0cda9bd4817b11216,boonproject/boon,"public final ByteBuffer allocateBuffer(int size) {

        if (RECYCLE_BUFFER) {
            ByteBuffer spentBuffer = recycleChannel.poll();
            if (spentBuffer == null) {
                spentBuffer = ByteBuffer.allocateDirect(size);
            }
            spentBuffer.clear();
            return spentBuffer;
        } else {
            return ByteBuffer.allocateDirect(size);
        }
    }",This gets called from the http post handler or event bus handler .,slumberdb/slumberdb-service-model/src/main/java/org/boon/slumberdb/stores/log/CollectorManager.java,"[{'Syntax': 'recycleChannel.poll()', 'FunctionName': 'poll', 'ArgsCount': 0, 'MethodBody': '@Override\n        public Response poll() {\n            return null;\n        }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-service-model/src/test/java/org/boon/slumberdb/service/store/ConcurrentMapDataStoreTest.java'}, {'Syntax': 'spentBuffer.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'public void clear() {\n        this.values = new long[10];\n        this.end = 0;\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/collections/LongList.java'}]"
6621cda0cda9bd4817b11217,playframework/playframework,"@Deprecated
  public static void session(String key, String value) {
    session().put(key, value);
  }",Puts a new value into the current session .,core/play/src/main/java/play/mvc/Controller.java,"[{'Syntax': 'session().put(key, value)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public <A> TypedMap put(TypedKey<A> key, A value) {\n    return new TypedMap(underlying.updated(key.asScala(), value));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/libs/typedmap/TypedMap.java'}, {'Syntax': 'session()', 'FunctionName': 'session', 'ArgsCount': 0, 'MethodBody': 'public Session session() {\n    return session;\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/mvc/Result.java'}]"
6621cda0cda9bd4817b11218,Unidata/thredds,"public static CalendarDate of(Calendar cal, long msecs) {
    Chronology base = Calendar.getChronology(cal);
    DateTime dt = new DateTime(msecs, base) ;
    return new CalendarDate(cal, dt);
  }",Create CalendarDate from msecs since epoch Uses the given Calendar .,cdm/src/main/java/ucar/nc2/time/CalendarDate.java,[]
6621cda0cda9bd4817b11219,ngageoint/geopackage-android,"public Styles getTableStyles(String featureTable) {
        Styles styles = null;
        Long id = contentsId.getId(featureTable);
        if (id != null) {
            styles = getTableStyles(featureTable, id);
        }
        return styles;
    }",Get the feature table default styles,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,"[{'Syntax': 'contentsId.getId(featureTable)', 'FunctionName': 'getId', 'ArgsCount': 1, 'MethodBody': 'public static long getId(Cursor cursor) {\n        return cursor.getLong(2);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadataDataSource.java'}, {'Syntax': 'getTableStyles(featureTable, id)', 'FunctionName': 'getTableStyles', 'ArgsCount': 2, 'MethodBody': 'private Styles getTableStyles(String featureTable, long contentsId) {\n        return getTableStyles(contentsId, getTableStyleMappingDao(featureTable));\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}]"
6621cda0cda9bd4817b1121a,oblac/jodd,"public static boolean endsWithChar(final String s, final char c) {
		if (s.length() == 0) {
			return false;
		}
		return s.charAt(s.length() - 1) == c;
	}",Returns if string ends with provided character .,jodd-core/src/main/java/jodd/util/StringUtil.java,"[{'Syntax': 's.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length() {\n\t\treturn length;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 's.charAt(s.length() - 1)', 'FunctionName': 'charAt', 'ArgsCount': 1, 'MethodBody': 'public char charAt(final int pos) {\n\t\tint len = 0;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tint newlen = len + array[i].length();\n\t\t\tif (pos < newlen) {\n\t\t\t\treturn array[i].charAt(pos - len);\n\t\t\t}\n\t\t\tlen = newlen;\n\t\t}\n\t\tthrow new IllegalArgumentException(""Invalid char index"");\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 's.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length() {\n\t\treturn length;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}]"
6621cda0cda9bd4817b1121b,wildfly/wildfly,"protected String attributeReadName(String name) {
        if (name.startsWith(""get""))
            name = name.substring(3);
        else if (name.startsWith(""is""))
            name = name.substring(2);
        else
            throw IIOPLogger.ROOT_LOGGER.notAnAccessor(name);

        return name;
    }",Convert an attribute read method name in Java format to an attribute name in Java format .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java,"[{'Syntax': 'IIOPLogger.ROOT_LOGGER.notAnAccessor(name)', 'FunctionName': 'notAnAccessor', 'ArgsCount': 1, 'MethodBody': '@Message(id = 62, value = ""Not an accessor: %s"")\n    IllegalArgumentException notAnAccessor(String name);', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java'}]"
6621cda0cda9bd4817b1121c,fuinorg/srcgen4j-core,"private File[] getFiles(final File dir) {
        final File[] files = dir.listFiles(new FileFilter() {
            @Override
            public boolean accept(final File file) {
                final boolean pointFile = file.getName().startsWith(""."");
                final String extension = FilenameUtils.getExtension(file.getName());
                return (!pointFile && fileExtensions.contains(extension)) || file.isDirectory();
            }
        });
        return files;
    }",Returns files that end with java and all directories . Files and directories started with a . are excluded .,src/main/java/org/fuin/srcgen4j/core/emf/AbstractEMFParser.java,"[{'Syntax': 'file.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public final String getName() {\r\n        return name;\r\n    }', 'FileName': '/fuinorg/srcgen4j-core/src/main/java/org/fuin/srcgen4j/core/velocity/TargetFile.java'}, {'Syntax': 'file.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public final String getName() {\r\n        return name;\r\n    }', 'FileName': '/fuinorg/srcgen4j-core/src/main/java/org/fuin/srcgen4j/core/velocity/TargetFile.java'}]"
6621cda0cda9bd4817b1121d,westnordost/countryboundaries,"public Set<String> getContainingIds(
			double minLongitude, double minLatitude, double maxLongitude, double maxLatitude)
	{
		Set<String> ids = new HashSet<>();
		forCellsIn(minLongitude, minLatitude, maxLongitude, maxLatitude, cell ->
		{
			if(ids.isEmpty())
			{
				ids.addAll(cell.getContainingIds());
			}
			else
			{
				ids.retainAll(cell.getContainingIds());
			}
		});
		return ids;
	}",Identify which countries are guaranteed to contain the given bounding box fully . The given bounding box may wrap around the 180th longitude i . e minLongitude = 170 and maxLongitude = - 170 .,library/src/main/java/de/westnordost/countryboundaries/CountryBoundaries.java,"[{'Syntax': 'forCellsIn(minLongitude, minLatitude, maxLongitude, maxLatitude, cell ->\r\n\t\t{\r\n\t\t\tif(ids.isEmpty())\r\n\t\t\t{\r\n\t\t\t\tids.addAll(cell.getContainingIds());\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tids.retainAll(cell.getContainingIds());\r\n\t\t\t}\r\n\t\t})', 'FunctionName': 'forCellsIn', 'ArgsCount': 5, 'MethodBody': 'private void forCellsIn(\r\n\t\t\tdouble minLongitude, double minLatitude, double maxLongitude, double maxLatitude,\r\n\t\t\tCellRunnable runnable)\r\n\t{\r\n\t\tif (!Double.isFinite(minLongitude))\r\n\t\t\tthrow new IllegalArgumentException(""minLongitude must be finite"");\r\n\t\tif (!Double.isFinite(minLatitude))\r\n\t\t\tthrow new IllegalArgumentException(""minLatitude must be finite"");\r\n\t\tif (!Double.isFinite(maxLongitude))\r\n\t\t\tthrow new IllegalArgumentException(""maxLongitude must be finite"");\r\n\t\tif (!Double.isFinite(maxLatitude))\r\n\t\t\tthrow new IllegalArgumentException(""maxLatitude must be finite"");\r\n\t\tif (minLatitude < -90 || minLatitude > 90)\r\n\t\t\tthrow new IllegalArgumentException(""minLatitude is out of bounds"");\r\n\t\tif (maxLatitude < -90 || maxLatitude > 90)\r\n\t\t\tthrow new IllegalArgumentException(""maxLatitude is out of bounds"");\r\n\t\tif (minLatitude > maxLatitude)\r\n\t\t\tthrow new IllegalArgumentException(""maxLatitude is smaller than minLatitude"");\r\n\r\n\t\tminLongitude = normalize(minLongitude, -180, 360);\r\n\t\tmaxLongitude = normalize(maxLongitude, -180, 360);\r\n\t\tint minX = longitudeToCellX(minLongitude);\r\n\t\tint maxY = latitudeToCellY(minLatitude);\r\n\t\tint maxX = longitudeToCellX(maxLongitude);\r\n\t\tint minY = latitudeToCellY(maxLatitude);\r\n\r\n\t\t// might wrap around\r\n\t\tint stepsX = minX > maxX ? rasterWidth - minX + maxX : maxX - minX;\r\n\r\n\t\tfor (int xStep = 0; xStep <= stepsX; ++xStep)\r\n\t\t{\r\n\t\t\tint x = (minX + xStep) % rasterWidth;\r\n\t\t\tfor (int y = minY; y <= maxY; y++)\r\n\t\t\t{\r\n\t\t\t\tif (!runnable.run(getCell(x, y))) return;\r\n\t\t\t}\r\n\t\t}\r\n\t}', 'FileName': '/westnordost/countryboundaries/library/src/main/java/de/westnordost/countryboundaries/CountryBoundaries.java'}]"
6621cda0cda9bd4817b1121e,cglib/cglib,"public static void process_array(CodeEmitter e, Type type, ProcessArrayCallback callback) {
        Type componentType = TypeUtils.getComponentType(type);
        Local array = e.make_local();
        Local loopvar = e.make_local(Type.INT_TYPE);
        Label loopbody = e.make_label();
        Label checkloop = e.make_label();
        e.store_local(array);
        e.push(0);
        e.store_local(loopvar);
        e.goTo(checkloop);
        
        e.mark(loopbody);
        e.load_local(array);
        e.load_local(loopvar);
        e.array_load(componentType);
        callback.processElement(componentType);
        e.iinc(loopvar, 1);
        
        e.mark(checkloop);
        e.load_local(loopvar);
        e.load_local(array);
        e.arraylength();
        e.if_icmp(e.LT, loopbody);
    }",Process an array on the stack . Assumes the top item on the stack is an array of the specified type . For each element in the array puts the element on the stack and triggers the callback .,cglib/src/main/java/net/sf/cglib/core/EmitUtils.java,"[{'Syntax': 'TypeUtils.getComponentType(type)', 'FunctionName': 'getComponentType', 'ArgsCount': 1, 'MethodBody': 'public static Type getComponentType(Type type) {\n        if (!isArray(type)) {\n            throw new IllegalArgumentException(""Type "" + type + "" is not an array"");\n        }\n        return Type.getType(type.getDescriptor().substring(1));\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/TypeUtils.java'}, {'Syntax': 'e.make_local()', 'FunctionName': 'make_local', 'ArgsCount': 0, 'MethodBody': 'public Local make_local() {\n        return make_local(Constants.TYPE_OBJECT);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.make_local(Type.INT_TYPE)', 'FunctionName': 'make_local', 'ArgsCount': 1, 'MethodBody': 'public Local make_local(Type type) {\n        return new Local(newLocal(type.getSize()), type);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.make_label()', 'FunctionName': 'make_label', 'ArgsCount': 0, 'MethodBody': 'public Label make_label() {\n        return new Label();\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.make_label()', 'FunctionName': 'make_label', 'ArgsCount': 0, 'MethodBody': 'public Label make_label() {\n        return new Label();\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.store_local(array)', 'FunctionName': 'store_local', 'ArgsCount': 1, 'MethodBody': 'public void store_local(Local local) {\n        store_local(local.getType(), local.getIndex());\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.push(0)', 'FunctionName': 'push', 'ArgsCount': 1, 'MethodBody': 'public void push(int i) {\n        if (i < -1) {\n            mv.visitLdcInsn(Integer.valueOf(i));\n        } else if (i <= 5) {\n            mv.visitInsn(TypeUtils.ICONST(i));\n        } else if (i <= Byte.MAX_VALUE) {\n            mv.visitIntInsn(Constants.BIPUSH, i);\n        } else if (i <= Short.MAX_VALUE) {\n            mv.visitIntInsn(Constants.SIPUSH, i);\n        } else {\n            mv.visitLdcInsn(Integer.valueOf(i));\n        }\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.store_local(loopvar)', 'FunctionName': 'store_local', 'ArgsCount': 1, 'MethodBody': 'public void store_local(Local local) {\n        store_local(local.getType(), local.getIndex());\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.goTo(checkloop)', 'FunctionName': 'goTo', 'ArgsCount': 1, 'MethodBody': 'public void goTo(Label label) { mv.visitJumpInsn(Constants.GOTO, label); }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.mark(loopbody)', 'FunctionName': 'mark', 'ArgsCount': 1, 'MethodBody': 'public void mark(Label label) {\n        mv.visitLabel(label);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.load_local(array)', 'FunctionName': 'load_local', 'ArgsCount': 1, 'MethodBody': 'public void load_local(Local local) {\n        load_local(local.getType(), local.getIndex());\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.load_local(loopvar)', 'FunctionName': 'load_local', 'ArgsCount': 1, 'MethodBody': 'public void load_local(Local local) {\n        load_local(local.getType(), local.getIndex());\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.array_load(componentType)', 'FunctionName': 'array_load', 'ArgsCount': 1, 'MethodBody': 'public void array_load(Type type) { mv.visitInsn(type.getOpcode(Constants.IALOAD)); }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'callback.processElement(componentType)', 'FunctionName': 'processElement', 'ArgsCount': 1, 'MethodBody': 'void processElement(Type type);', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/ProcessArrayCallback.java'}, {'Syntax': 'e.iinc(loopvar, 1)', 'FunctionName': 'iinc', 'ArgsCount': 2, 'MethodBody': 'public void iinc(Local local, int amount) {\n        mv.visitIincInsn(local.getIndex(), amount);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.mark(checkloop)', 'FunctionName': 'mark', 'ArgsCount': 1, 'MethodBody': 'public void mark(Label label) {\n        mv.visitLabel(label);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.load_local(loopvar)', 'FunctionName': 'load_local', 'ArgsCount': 1, 'MethodBody': 'public void load_local(Local local) {\n        load_local(local.getType(), local.getIndex());\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.load_local(array)', 'FunctionName': 'load_local', 'ArgsCount': 1, 'MethodBody': 'public void load_local(Local local) {\n        load_local(local.getType(), local.getIndex());\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.arraylength()', 'FunctionName': 'arraylength', 'ArgsCount': 0, 'MethodBody': 'public void arraylength() {\n        mv.visitInsn(Constants.ARRAYLENGTH);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'e.if_icmp(e.LT, loopbody)', 'FunctionName': 'if_icmp', 'ArgsCount': 2, 'MethodBody': 'public void if_icmp(int mode, Label label) {\n        if_cmp(Type.INT_TYPE, mode, label);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}]"
6621cda0cda9bd4817b1121f,oblac/jodd,"protected String getCallerClass() {
		Exception exception = new Exception();

		StackTraceElement[] stackTrace = exception.getStackTrace();

		for (StackTraceElement stackTraceElement : stackTrace) {
			String className = stackTraceElement.getClassName();
			if (className.equals(SimpleLoggerProvider.class.getName())) {
				continue;
			}
			if (className.equals(SimpleLogger.class.getName())) {
				continue;
			}
			if (className.equals(Logger.class.getName())) {
				continue;
			}
			return shortenClassName(className)
				+ '.' + stackTraceElement.getMethodName()
				+ ':' + stackTraceElement.getLineNumber();
		}
		return ""N/A"";
	}",Returns called class .,jodd-log/src/main/java/jodd/log/impl/SimpleLogger.java,"[{'Syntax': 'className.equals(SimpleLoggerProvider.class.getName())', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'SimpleLoggerProvider.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'className.equals(SimpleLogger.class.getName())', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'SimpleLogger.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'className.equals(Logger.class.getName())', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'Logger.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}]"
6621cda0cda9bd4817b11220,tiefaces/TieFaces,"public final void mergeMap(final RowsMapping addMap) {
		Map<Integer, List<SerialRow>> map = addMap.getRowsMap();
		for (Map.Entry<Integer, List<SerialRow>> entry : map.entrySet()) {
			List<SerialRow> entryRowList = entry.getValue();
			if ((entryRowList != null) && (!entryRowList.isEmpty())) {
				for (SerialRow row : entryRowList) {
					this.addRow(entry.getKey(), row.getRow());
				}
			}
		}
	}",Merge map .,src/org/tiefaces/components/websheet/configuration/RowsMapping.java,"[{'Syntax': 'addMap.getRowsMap()', 'FunctionName': 'getRowsMap', 'ArgsCount': 0, 'MethodBody': 'public final Map<Integer, List<SerialRow>> getRowsMap() {\r\n\t\treturn rowsMap;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'map.entrySet()', 'FunctionName': 'entrySet', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final Set entrySet() {\r\n\t\treturn emptySet;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'entry.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\r\n\t\treturn value;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'entryRowList.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final boolean isEmpty() {\r\n\t\treturn false;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'this.addRow(entry.getKey(), row.getRow())', 'FunctionName': 'addRow', 'ArgsCount': 2, 'MethodBody': 'public final void addRow(final Integer sourceRowNum,\r\n\t\t\tfinal Row targetRow) {\r\n\t\tList<SerialRow> mapRowList = rowsMap.get(sourceRowNum);\r\n\t\tif (mapRowList == null) {\r\n\t\t\tmapRowList = new ArrayList<>();\r\n\t\t}\r\n\t\tSerialRow serialTarget = new SerialRow(targetRow, -1);\r\n\t\tif (!mapRowList.contains(serialTarget)) {\r\n\t\t\tmapRowList.add(serialTarget);\r\n\t\t\trowsMap.put(sourceRowNum, mapRowList);\r\n\t\t}\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'entry.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': 'public SerialCellAddress getKey() {\r\n\t\treturn key;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialKey.java'}, {'Syntax': 'row.getRow()', 'FunctionName': 'getRow', 'ArgsCount': 0, 'MethodBody': 'public final int getRow() {\r\n\t\treturn row;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/serializable/SerialCellAddress.java'}]"
6621cda0cda9bd4817b11221,liveontologies/elk-reasoner,"public synchronized boolean isInconsistent() throws ElkException {

		restoreConsistencyCheck();

		if (!consistencyCheckingState.isInconsistent()) {
			incompleteness_.log(incompleteness_
					.getIncompletenessMonitorForClassification());
		}
		return consistencyCheckingState.isInconsistent();
	}",Check consistency of the current ontology if this has not been done yet .,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java,"[{'Syntax': 'restoreConsistencyCheck()', 'FunctionName': 'restoreConsistencyCheck', 'ArgsCount': 0, 'MethodBody': 'private void restoreConsistencyCheck() throws ElkException {\n\t\truleAndConclusionStats.reset();\n\t\trestoreSaturation();\n\t\tcomplete(stageManager.consistencyCheckingStage);\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java'}, {'Syntax': 'consistencyCheckingState.isInconsistent()', 'FunctionName': 'isInconsistent', 'ArgsCount': 0, 'MethodBody': 'public boolean isInconsistent() {\n\t\treturn isOwlThingInconsistent_ || isTopObjectPropertyInBottom_\n\t\t\t\t|| !inconsistentIndividuals_.isEmpty();\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/consistency/ConsistencyCheckingState.java'}, {'Syntax': 'incompleteness_.log(incompleteness_\n\t\t\t\t\t.getIncompletenessMonitorForClassification())', 'FunctionName': 'log', 'ArgsCount': 1, 'MethodBody': 'public void log(Logger logger) {\n\t\tlog(logger, LogLevel.DEBUG);\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-logging/src/main/java/org/semanticweb/elk/util/logging/ElkTimer.java'}, {'Syntax': 'consistencyCheckingState.isInconsistent()', 'FunctionName': 'isInconsistent', 'ArgsCount': 0, 'MethodBody': 'public boolean isInconsistent() {\n\t\treturn isOwlThingInconsistent_ || isTopObjectPropertyInBottom_\n\t\t\t\t|| !inconsistentIndividuals_.isEmpty();\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/consistency/ConsistencyCheckingState.java'}]"
6621cda0cda9bd4817b11222,Unidata/thredds,"public GridRecord findRecord(int ens, int time, int level) {
    if (hasEnsemble()) {
      return recordTracker[ens * (ntimes * nlevels) + (time * nlevels) + level];
    } else {
      return recordTracker[time * nlevels + level];
    }
  }",Find the grid record for the time and level indices Canonical ordering is ens time level,visad/src/main/java/ucar/nc2/iosp/grid/GridVariable.java,[]
6621cda0cda9bd4817b11223,oblac/jodd,"public static HttpRequest post(final String destination) {
		return new HttpRequest()
				.method(HttpMethod.POST)
				.set(destination);
	}",Builds a POST request .,jodd-http/src/main/java/jodd/http/HttpRequest.java,"[{'Syntax': 'new HttpRequest()\n\t\t\t\t.method(HttpMethod.POST)\n\t\t\t\t.set(destination)', 'FunctionName': 'set', 'ArgsCount': 1, 'MethodBody': 'public void set(final boolean value) {\n\t\tthis.value = value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}]"
6621cda0cda9bd4817b11224,rupertlssmith/lojix,"public E poll(long timeout, TimeUnit unit) throws InterruptedException
    {
        ReentrantLock lock = this.lock;
        lock.lockInterruptibly();

        try
        {
            long nanos = unit.toNanos(timeout);

            do
            {
                if (count != 0)
                {
                    return extract(true, true).getElement();
                }

                try
                {
                    nanos = notEmpty.awaitNanos(nanos);
                }
                catch (InterruptedException ie)
                {
                    notEmpty.signal(); // propagate to non-interrupted thread
                    throw ie;
                }
            }
            while (nanos > 0);

            return null;
        }
        finally
        {
            lock.unlock();
        }
    }",Retrieves and removes the head of this queue waiting if necessary up to the specified wait time if no elements are present on this queue .,base/common/src/main/com/thesett/common/util/concurrent/BatchSynchQueueBase.java,"[{'Syntax': 'extract(true, true).getElement()', 'FunctionName': 'getElement', 'ArgsCount': 0, 'MethodBody': 'E getElement();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/Tree.java'}, {'Syntax': 'extract(true, true)', 'FunctionName': 'extract', 'ArgsCount': 2, 'MethodBody': 'protected SynchRecordImpl<E> extract(boolean unblock, boolean signal)\n    {\n        SynchRecordImpl<E> result = buffer.remove();\n        count--;\n\n        if (signal)\n        {\n            notFull.signal();\n        }\n\n        if (unblock)\n        {\n            result.releaseImmediately();\n        }\n\n        return result;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/BatchSynchQueueBase.java'}, {'Syntax': 'notEmpty.signal()', 'FunctionName': 'signal', 'ArgsCount': 0, 'MethodBody': 'public void signal()\n    {\n        synchronized (monitor)\n        {\n            monitor.notify();\n        }\n\n        if (signalable != null)\n        {\n            signalable.signal();\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/BaseUnaryCondition.java'}]"
6621cda0cda9bd4817b11225,agentsoz/jill,"public void shutdown() {
    synchronized (lock) {
      logger.debug(""Pool {} received shutdown message"", poolid);
      shutdown = true;
      hasMessage = true;
      lock.notify(); // NOPMD - ignore notifyall() warning
    }
  }",Terminates this intention selector thread .,jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java,[]
6621cda0cda9bd4817b11226,Unidata/thredds,"public void save() {
    if (catListBox != null) catListBox.save();

    if (prefs != null) {
      if (fileChooser != null)
        fileChooser.save();
      if (catgenFileChooser != null)
        catgenFileChooser.save();
      prefs.putInt(HDIVIDER, split.getDividerLocation());
    }
  }",Save persistent state .,ui/src/main/java/thredds/ui/catalog/CatalogChooser.java,[]
6621cda0cda9bd4817b11227,rupertlssmith/lojix,"public static TermWalker positionalPostfixWalker(PositionalTermVisitor visitor)
    {
        PositionalTermTraverser positionalTraverser = new PositionalTermTraverserImpl();
        positionalTraverser.setContextChangeVisitor(visitor);
        visitor.setPositionalTraverser(positionalTraverser);

        return new TermWalker(new PostFixSearch<Term, Term>(), positionalTraverser, visitor);
    }",Provides a positional postfix walk over a term .,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/TermWalkers.java,"[{'Syntax': 'positionalTraverser.setContextChangeVisitor(visitor)', 'FunctionName': 'setContextChangeVisitor', 'ArgsCount': 1, 'MethodBody': 'public void setContextChangeVisitor(TermVisitor contextChangeVisitor)\n    {\n        this.contextChangeVisitor = contextChangeVisitor;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/logic/src/main/com/thesett/aima/logic/fol/compiler/PositionalTermTraverserImpl.java'}, {'Syntax': 'visitor.setPositionalTraverser(positionalTraverser)', 'FunctionName': 'setPositionalTraverser', 'ArgsCount': 1, 'MethodBody': 'public void setPositionalTraverser(PositionalTermTraverser traverser)\n    {\n        this.traverser = traverser;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/printer/WAMCompiledTermsPrintingVisitor.java'}]"
6621cda0cda9bd4817b11228,kiegroup/droolsjbpm-tools,"public static String stripLastWord(String prefix) {
        if ( """".equals( prefix ) ) {
            return prefix;
        }
        if ( prefix.charAt( prefix.length() - 1 ) == ' ' ) {
            return """";
        } else {
            char[] c = prefix.toCharArray();
            int start = 0;
            for ( int i = c.length - 1; i >= 0; i-- ) {
                if ( Character.isWhitespace( c[i] ) || c[i] == '(' || c[i] == ':' || c[i] == ';' || c[i] == '=' || c[i] == '<' || c[i] == '>' || c[i] == '.' || c[i] == '{' || c[i] == '}' ) {
                    start = i + 1;
                    break;
                }
            }
            prefix = prefix.substring( start,
                                       prefix.length() );
            return prefix;
        }
    }",Looks behind gets stuff after the white space . Basically ripping out the last word .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/completion/CompletionUtil.java,"[{'Syntax': '"""".equals( prefix )', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': 'prefix.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public long length() {\n        return length;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/RequestInputStream.java'}, {'Syntax': 'Character.isWhitespace( c[i] )', 'FunctionName': 'isWhitespace', 'ArgsCount': 1, 'MethodBody': 'public boolean isWhitespace(char character) {\n        return Character.isWhitespace(character);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/scanners/WhitespaceDetector.java'}, {'Syntax': 'prefix.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public long length() {\n        return length;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/RequestInputStream.java'}]"
6621cda0cda9bd4817b11229,Unidata/thredds,"public BitCounterUncompressed makeNested(DataDescriptor subKey, int n, int row, int replicationCountSize) {
    if (subCounters == null)
      subCounters = new HashMap<DataDescriptor, BitCounterUncompressed[]>(5); // assumes DataDescriptor.equals is ==

    BitCounterUncompressed[] subCounter = subCounters.get(subKey);
    if (subCounter == null) {
      subCounter = new BitCounterUncompressed[nrows]; // one for each row in this table
      subCounters.put(subKey, subCounter);
    }

    BitCounterUncompressed rc = new BitCounterUncompressed(subKey, n, replicationCountSize);
    subCounter[row] = rc;

    return rc;
  }",Track nested Tables .,bufr/src/main/java/ucar/nc2/iosp/bufr/BitCounterUncompressed.java,[]
6621cda1cda9bd4817b1122a,oblac/jodd,"protected ActionWrapper[] createExecutionArray() {
		int totalInterceptors = (this.actionRuntime.getInterceptors() != null ? this.actionRuntime.getInterceptors().length : 0);
		int totalFilters = (this.actionRuntime.getFilters() != null ? this.actionRuntime.getFilters().length : 0);

		ActionWrapper[] executionArray = new ActionWrapper[totalFilters + 1 + totalInterceptors + 1];

		// filters

		int index = 0;

		if (totalFilters > 0) {
			System.arraycopy(actionRuntime.getFilters(), 0, executionArray, index, totalFilters);
			index += totalFilters;
		}

		// result is executed AFTER the action AND interceptors

		executionArray[index++] = actionRequest -> {
			Object actionResult = actionRequest.invoke();

			ActionRequest.this.madvocController.render(ActionRequest.this, actionResult);

			return actionResult;
		};

		// interceptors

		if (totalInterceptors > 0) {
			System.arraycopy(actionRuntime.getInterceptors(), 0, executionArray, index, totalInterceptors);
			index += totalInterceptors;
		}

		// action

		executionArray[index] = actionRequest -> {
			actionResult = invokeActionMethod();
			return actionResult;
		};

		return executionArray;
	}",Creates execution array that will invoke all filters actions and results in correct order .,jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java,"[{'Syntax': 'this.actionRuntime.getInterceptors()', 'FunctionName': 'getInterceptors', 'ArgsCount': 0, 'MethodBody': 'Class<? extends ActionInterceptor>[] getInterceptors();', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionConfig.java'}, {'Syntax': 'this.actionRuntime.getInterceptors()', 'FunctionName': 'getInterceptors', 'ArgsCount': 0, 'MethodBody': 'Class<? extends ActionInterceptor>[] getInterceptors();', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionConfig.java'}, {'Syntax': 'this.actionRuntime.getFilters()', 'FunctionName': 'getFilters', 'ArgsCount': 0, 'MethodBody': 'Class<? extends ActionFilter>[] getFilters();', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionConfig.java'}, {'Syntax': 'this.actionRuntime.getFilters()', 'FunctionName': 'getFilters', 'ArgsCount': 0, 'MethodBody': 'Class<? extends ActionFilter>[] getFilters();', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionConfig.java'}, {'Syntax': 'actionRuntime.getFilters()', 'FunctionName': 'getFilters', 'ArgsCount': 0, 'MethodBody': 'Class<? extends ActionFilter>[] getFilters();', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionConfig.java'}, {'Syntax': 'actionRequest.invoke()', 'FunctionName': 'invoke', 'ArgsCount': 0, 'MethodBody': 'public Object invoke() throws Exception {\n\t\treturn executionArray[executionIndex++].apply(this);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java'}, {'Syntax': 'ActionRequest.this.madvocController.render(ActionRequest.this, actionResult)', 'FunctionName': 'render', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void render(final ActionRequest actionRequest, final String resultValue) throws Exception {\n\t\tfinal HttpServletRequest request = actionRequest.getHttpServletRequest();\n\t\tfinal HttpServletResponse response = actionRequest.getHttpServletResponse();\n\n\t\tfinal Object action = actionRequest.getAction();\n\t\tfinal AppAction appAction = (AppAction) action;\n\n\t\tfinal List<Violation> list = appAction.violations();\n\n\t\tfinal String result = VtorUtil.createViolationsJsonString(request, list);\n\n\t\tif (jsonResponseContentType != null) {\n\t\t\tresponse.setContentType(jsonResponseContentType);\n\t\t}\n\n\t\tfinal char[] chars = result.toCharArray();\n\t\tfinal byte[] data = CharUtil.toByteArray(chars, Charset.forName(madvocEncoding.getEncoding()));\n\n\t\tfinal OutputStream os = response.getOutputStream();\n\t\tos.write(data);\n\t\tos.flush();\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/madvoc/VtorJsonActionResult.java'}, {'Syntax': 'actionRuntime.getInterceptors()', 'FunctionName': 'getInterceptors', 'ArgsCount': 0, 'MethodBody': 'Class<? extends ActionInterceptor>[] getInterceptors();', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/ActionConfig.java'}, {'Syntax': 'invokeActionMethod()', 'FunctionName': 'invokeActionMethod', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tprotected Object invokeActionMethod() throws Exception {\n\t\t\tdata += ""-A"";\n\t\t\treturn super.invokeActionMethod();\n\t\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/test/java/jodd/madvoc/ActionRequestRecursionTest.java'}]"
6621cda1cda9bd4817b1122b,orientechnologies/orientdb,"public boolean tryMerge(final ORidBag otherValue, boolean iMergeSingleItemsOfMultiValueFields) {
    if (!isEmbedded() && !otherValue.isEmbedded()) {
      final OSBTreeRidBag thisTree = (OSBTreeRidBag) delegate;
      final OSBTreeRidBag otherTree = (OSBTreeRidBag) otherValue.delegate;
      if (thisTree.getCollectionPointer().equals(otherTree.getCollectionPointer())) {

        thisTree.mergeChanges(otherTree);

        uuid = otherValue.uuid;

        return true;
      }
    } else if (iMergeSingleItemsOfMultiValueFields) {
      final Iterator<OIdentifiable> iter = otherValue.rawIterator();
      while (iter.hasNext()) {
        final OIdentifiable value = iter.next();
        if (value != null) {
          final Iterator<OIdentifiable> localIter = rawIterator();
          boolean found = false;
          while (localIter.hasNext()) {
            final OIdentifiable v = localIter.next();
            if (value.equals(v)) {
              found = true;
              break;
            }
          }
          if (!found)
            add(value);
        }
      }
      return true;
    }
    return false;
  }",IMPORTANT! Only for internal usage .,core/src/main/java/com/orientechnologies/orient/core/db/record/ridbag/ORidBag.java,"[{'Syntax': 'isEmbedded()', 'FunctionName': 'isEmbedded', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean isEmbedded() {\n    return false;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OrientDBRemote.java'}, {'Syntax': 'otherValue.isEmbedded()', 'FunctionName': 'isEmbedded', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean isEmbedded() {\n    return false;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OrientDBRemote.java'}, {'Syntax': 'thisTree.getCollectionPointer().equals(otherTree.getCollectionPointer())', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'thisTree.getCollectionPointer()', 'FunctionName': 'getCollectionPointer', 'ArgsCount': 0, 'MethodBody': 'public OBonsaiCollectionPointer getCollectionPointer() {\n    return collectionPointer;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OSBTGetRequest.java'}, {'Syntax': 'otherTree.getCollectionPointer()', 'FunctionName': 'getCollectionPointer', 'ArgsCount': 0, 'MethodBody': 'public OBonsaiCollectionPointer getCollectionPointer() {\n    return collectionPointer;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OSBTGetRequest.java'}, {'Syntax': 'thisTree.mergeChanges(otherTree)', 'FunctionName': 'mergeChanges', 'ArgsCount': 1, 'MethodBody': 'public void mergeChanges(OSBTreeRidBag treeRidBag) {\n    for (Map.Entry<OIdentifiable, OModifiableInteger> entry : treeRidBag.newEntries.entrySet()) {\n      mergeDiffEntry(entry.getKey(), entry.getValue().getValue());\n    }\n\n    for (Map.Entry<OIdentifiable, Change> entry : treeRidBag.changes.entrySet()) {\n      final OIdentifiable rec = entry.getKey();\n      final Change change = entry.getValue();\n      final int diff;\n      if (change instanceof DiffChange) {\n        diff = change.getValue();\n      } else if (change instanceof AbsoluteChange) {\n        diff = change.getValue() - getAbsoluteValue(rec).getValue();\n      } else {\n        throw new IllegalArgumentException(""change type is not supported"");\n      }\n\n      mergeDiffEntry(rec, diff);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/ridbag/sbtree/OSBTreeRidBag.java'}, {'Syntax': 'otherValue.rawIterator()', 'FunctionName': 'rawIterator', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Iterator<OIdentifiable> rawIterator() {\n    List<OIdentifiable> set = loadElements();\n    return new RemovableIterator(set.iterator());\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/ridbag/ORemoteTreeRidBag.java'}, {'Syntax': 'iter.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean hasNext() {\n    return current < items;\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/test/java/com/orientechnologies/orient/etl/OETLStubRandomExtractor.java'}, {'Syntax': 'iter.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Move the current record stream to the next one in result set"")\n  public void next() {\n    setCurrentRecord(currentRecordIdx + 1);\n    dumpRecordDetails();\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'rawIterator()', 'FunctionName': 'rawIterator', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Iterator<OIdentifiable> rawIterator() {\n    List<OIdentifiable> set = loadElements();\n    return new RemovableIterator(set.iterator());\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/storage/ridbag/ORemoteTreeRidBag.java'}, {'Syntax': 'localIter.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n  public boolean hasNext() {\n    return current < items;\n  }', 'FileName': '/orientechnologies/orientdb/etl/src/test/java/com/orientechnologies/orient/etl/OETLStubRandomExtractor.java'}, {'Syntax': 'localIter.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@ConsoleCommand(description = ""Move the current record stream to the next one in result set"")\n  public void next() {\n    setCurrentRecord(currentRecordIdx + 1);\n    dumpRecordDetails();\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'value.equals(v)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'add(value)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}]"
6621cda1cda9bd4817b1122c,Unidata/thredds,"@Override
    public LatLonPoint projToLatLon(ProjectionPoint world, LatLonPointImpl result) {
        double fromX = world.getX() - falseEasting;
        double fromY = world.getY() - falseNorthing;

        double toLat_r = fromY / earthRadius;
        double toLon_r;

        if (Misc.nearlyEquals(Math.abs(toLat_r), PI_OVER_2, 1e-10)) {
            toLat_r = toLat_r < 0 ? -PI_OVER_2 : +PI_OVER_2;
            toLon_r = Math.toRadians(centMeridian);  // if lat == +- pi/2, set lon = centMeridian (Snyder 248)
        } else if (Math.abs(toLat_r) < PI_OVER_2) {
            toLon_r = Math.toRadians(centMeridian) + fromX / (earthRadius * Math.cos(toLat_r));
        } else {
            return INVALID;  // Projection point is off the map.
        }

        if (Misc.nearlyEquals(Math.abs(toLon_r), PI, 1e-10)) {
            toLon_r = toLon_r < 0 ? -PI : +PI;
        } else if (Math.abs(toLon_r) > PI) {
            return INVALID;  // Projection point is off the map.
        }

        result.setLatitude(Math.toDegrees(toLat_r));
        result.setLongitude(Math.toDegrees(toLon_r));
        return result;
    }",Convert projection coordinates to a LatLonPoint,cdm/src/main/java/ucar/unidata/geoloc/projection/Sinusoidal.java,[]
6621cda1cda9bd4817b1122d,hawkular/hawkular-metrics,"public static <T extends BucketPoint> List<T> toList(Map<Long, T> pointMap, Buckets buckets, BiFunction<Long,
            Long, T> emptyBucketFactory) {
        List<T> result = new ArrayList<>(buckets.getCount());
        for (int index = 0; index < buckets.getCount(); index++) {
            long from = buckets.getBucketStart(index);
            T bucketPoint = pointMap.get(from);
            if (bucketPoint == null) {
                long to = from + buckets.getStep();
                bucketPoint = emptyBucketFactory.apply(from, to);
            }
            result.add(bucketPoint);
        }
        return result;
    }",Converts bucket points indexed by start time into a list ordered by start time . Blanks will be filled with empty bucket points .,core/metrics-model/src/main/java/org/hawkular/metrics/model/BucketPoint.java,"[{'Syntax': 'buckets.getCount()', 'FunctionName': 'getCount', 'ArgsCount': 0, 'MethodBody': 'public int getCount() {\n        return count;\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-model/src/main/java/org/hawkular/metrics/model/Buckets.java'}, {'Syntax': 'buckets.getCount()', 'FunctionName': 'getCount', 'ArgsCount': 0, 'MethodBody': 'public int getCount() {\n        return count;\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-model/src/main/java/org/hawkular/metrics/model/Buckets.java'}, {'Syntax': 'buckets.getBucketStart(index)', 'FunctionName': 'getBucketStart', 'ArgsCount': 1, 'MethodBody': 'public long getBucketStart(int index) {\n        checkArgument(index >= 0 && index < count, ""index out of range"");\n        return start + index * step;\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-model/src/main/java/org/hawkular/metrics/model/Buckets.java'}, {'Syntax': 'pointMap.get(from)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public String get(String name) {\n        return properties.get(name);\n    }', 'FileName': '/hawkular/hawkular-metrics/core/configuration-service/src/main/java/org/hawkular/metrics/sysconfig/Configuration.java'}, {'Syntax': 'buckets.getStep()', 'FunctionName': 'getStep', 'ArgsCount': 0, 'MethodBody': 'public long getStep() {\n        return step;\n    }', 'FileName': '/hawkular/hawkular-metrics/core/metrics-model/src/main/java/org/hawkular/metrics/model/Buckets.java'}]"
6621cda1cda9bd4817b1122e,jboss/jboss-common-core,"private static String getProperty(final String name, final String defaultValue)
   {
      return (String) AccessController.doPrivileged(
      new PrivilegedAction()
      {
         public Object run()
         {
            return System.getProperty(name, defaultValue);
         }

      });
   }",Get a system property,src/main/java/org/jboss/util/Classes.java,"[{'Syntax': 'System.getProperty(name, defaultValue)', 'FunctionName': 'getProperty', 'ArgsCount': 2, 'MethodBody': 'public String getProperty(final String name, final String defaultValue)\n         {\n            return System.getProperty(name, defaultValue);\n         }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/SysPropertyActions.java'}]"
6621cda1cda9bd4817b1122f,Unidata/thredds,"public java.util.List<Array> readArrays(java.util.List<Variable> variables) throws IOException {
    java.util.List<Array> result = new java.util.ArrayList<>();
    for (Variable variable : variables)
      result.add(variable.read());
    return result;
  }",Do a bulk read on a list of Variables and return a corresponding list of Array that contains the results of a full read on each Variable . This is mostly here so DODSNetcdf can override it with one call to the server .,cdm/src/main/java/ucar/nc2/NetcdfFile.java,[]
6621cda1cda9bd4817b11230,Unidata/thredds,"static public NetcdfFileWriter createNew(Version version, String location, Nc4Chunking chunker) throws IOException {
    return new NetcdfFileWriter(version, location, false, chunker);
  }",Create a new Netcdf file with fill mode true .,cdm/src/main/java/ucar/nc2/NetcdfFileWriter.java,[]
6621cda1cda9bd4817b11231,rest-assured/rest-assured,"public RestAssuredMockMvcConfig encoderConfig(EncoderConfig encoderConfig) {
        notNull(encoderConfig, ""EncoderConfig"");
        return new RestAssuredMockMvcConfig(logConfig, encoderConfig, decoderConfig, sessionConfig,
                objectMapperConfig, jsonConfig, xmlConfig, headerConfig, asyncConfig, multiPartConfig, mockMvcConfig, paramConfig, matcherConfig);
    }",Set the encoder config,modules/spring-mock-mvc/src/main/java/io/restassured/module/mockmvc/config/RestAssuredMockMvcConfig.java,[]
6621cda1cda9bd4817b11232,Unidata/thredds,"public final Unit parse(final String spec) throws NoSuchUnitException,
			UnitParseException, SpecificationException, UnitDBException,
			PrefixDBException, UnitSystemException {
		synchronized (MUTEX) {
			return parse(spec, UnitDBManager.instance());
		}
	}",Parses a unit specification . This method is thread - safe .,udunits/src/main/java/ucar/units/UnitFormatImpl.java,[]
6621cda1cda9bd4817b11233,Unidata/thredds,"private static Prefix getPrefix(final String string, final Set<Prefix> set) {
		for (final Iterator<Prefix> iter = set.iterator(); iter.hasNext();) {
			final Prefix prefix = iter.next();
			final int comp = prefix.compareTo(string);
			if (comp == 0) {
				return prefix;
			}
			if (comp > 0) {
				break;
			}
		}
		return null;
	}",Returns the prefix from the given set with the given identifier .,udunits/src/main/java/ucar/units/PrefixDBImpl.java,[]
6621cda1cda9bd4817b11234,jboss/jboss-common-core,"protected void addDelegate(CatalogEntry entry) {
    int pos = 0;
    String partial = entry.getEntryArg(0);

    Enumeration local = localDelegate.elements();
    while (local.hasMoreElements()) {
      CatalogEntry dpe = (CatalogEntry) local.nextElement();
      String dp = dpe.getEntryArg(0);
      if (dp.equals(partial)) {
	// we already have this prefix
	return;
      }
      if (dp.length() > partial.length()) {
	pos++;
      }
      if (dp.length() < partial.length()) {
	break;
      }
    }

    // now insert partial into the vector at [pos]
    if (localDelegate.size() == 0) {
      localDelegate.addElement(entry);
    } else {
      localDelegate.insertElementAt(entry, pos);
    }
  }",Add to the current list of delegated catalogs .,src/main/java/org/jboss/util/xml/catalog/Catalog.java,"[{'Syntax': 'entry.getEntryArg(0)', 'FunctionName': 'getEntryArg', 'ArgsCount': 1, 'MethodBody': 'public String getEntryArg(int argNum) {\n    try {\n      String arg = (String) args.get(argNum);\n      return arg;\n    } catch (ArrayIndexOutOfBoundsException e) {\n      return null;\n    }\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/CatalogEntry.java'}, {'Syntax': 'localDelegate.elements()', 'FunctionName': 'elements', 'ArgsCount': 0, 'MethodBody': 'public Enumeration<V> elements() {\n        return new ValueIterator();\n    }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/ConcurrentReferenceHashMap.java'}, {'Syntax': 'local.hasMoreElements()', 'FunctionName': 'hasMoreElements', 'ArgsCount': 0, 'MethodBody': 'public boolean hasMoreElements() {\n         return iter.hasNext();\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/Iterators.java'}, {'Syntax': 'local.nextElement()', 'FunctionName': 'nextElement', 'ArgsCount': 0, 'MethodBody': 'public Object nextElement() {\n         return iter.next();\n      }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/Iterators.java'}, {'Syntax': 'dpe.getEntryArg(0)', 'FunctionName': 'getEntryArg', 'ArgsCount': 1, 'MethodBody': 'public String getEntryArg(int argNum) {\n    try {\n      String arg = (String) args.get(argNum);\n      return arg;\n    } catch (ArrayIndexOutOfBoundsException e) {\n      return null;\n    }\n  }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/catalog/CatalogEntry.java'}, {'Syntax': 'dp.equals(partial)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj)\n   {\n      return obj instanceof TimeoutClientSocketFactory;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/sockets/TimeoutClientSocketFactory.java'}, {'Syntax': 'dp.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length()\n   {\n      return pos;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'partial.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length()\n   {\n      return pos;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'dp.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length()\n   {\n      return pos;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'partial.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length()\n   {\n      return pos;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'localDelegate.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size()\n   {\n      return entryMap.size();\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}]"
6621cda1cda9bd4817b11235,Unidata/thredds,"public byte getScalarByte(StructureMembers.Member m) {
    Array data = getArray(m);
    return data.getByte(Index.scalarIndexImmutable);
  }",Get member data of type byte .,cdm/src/main/java/ucar/ma2/StructureDataW.java,[]
6621cda1cda9bd4817b11236,deeplearning4j/nd4j,"public static boolean[] or(final INDArray n, final Condition condition, int... dimension) {
        if (!(condition instanceof BaseCondition))
            throw new UnsupportedOperationException(""Only static Conditions are supported"");

        MatchCondition op = new MatchCondition(n, condition);
        INDArray arr = Nd4j.getExecutioner().exec(op, dimension);

        // FIXME: int cast

        boolean[] result = new boolean[(int) arr.length()];

        for (int i = 0; i < arr.length(); i++) {
            if (arr.getDouble(i) > 0)
                result[i] = true;
            else
                result[i] = false;
        }

        return result;
    }",Or over the whole ndarray given some condition with respect to dimensions,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/indexing/BooleanIndexing.java,[]
6621cda1cda9bd4817b11237,Unidata/thredds,"public boolean resourceControlOk(HttpServletRequest req, HttpServletResponse res, String reqPath) {
    if (null == reqPath)
      reqPath = TdsPathUtils.extractPath(req, null);

    // see if its under resource control
    String rc = null;
    DataRootManager.DataRootMatch match = dataRootManager.findDataRootMatch(reqPath);
    if (match != null) {
      rc = match.dataRoot.getRestrict(); // datasetScan, featCollection are restricted at the dataRoot
    }

    if (rc == null) {
      rc = datasetTracker.findResourceControl(reqPath); // regular datasets tracked here
    }

    return resourceAuthorized(req, res, rc);
  }",Check if this is making a request for a restricted dataset and if so if its allowed .,tds/src/main/java/thredds/core/DatasetManager.java,[]
6621cda1cda9bd4817b11238,alipay/sofa-bolt,"public static boolean getBool(String key, String defaultValue) {
        return Boolean.parseBoolean(System.getProperty(key, defaultValue));
    }",~~~ public helper methods to retrieve system property,src/main/java/com/alipay/remoting/config/ConfigManager.java,[]
6621cda1cda9bd4817b11239,Unidata/thredds,"public Object readMetadataContentFromURL(InvDataset dataset, java.net.URI uri) throws java.io.IOException {
    Element elem = readContentFromURL(uri);
    Object contentObject = readMetadataContent(dataset, elem);
    if (debugMetadataRead) System.out.println("" convert to "" + contentObject.getClass().getName());
    return contentObject;
  }",this is only called for ThredddsMetadata,legacy/src/main/java/thredds/catalog/parser/jdom/InvCatalogFactory10.java,[]
6621cda1cda9bd4817b1123a,wildfly/wildfly,"public static ModularReference create(final String className, final Class<?> factoryClass) {
        return new ModularReference(className, factoryClass.getName(), Module.forClass(factoryClass).getIdentifier());
    }",Create a ModuleReference from a target class name and factory class .,naming/src/main/java/org/jboss/as/naming/context/ModularReference.java,"[{'Syntax': 'factoryClass.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'Module.forClass(factoryClass).getIdentifier()', 'FunctionName': 'getIdentifier', 'ArgsCount': 0, 'MethodBody': 'public DeploymentModuleIdentifier getIdentifier() {\n        return identifier;\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/deployment/ModuleDeployment.java'}]"
6621cda1cda9bd4817b1123b,robeio/robe,"@Override
    public Date parse(Object o, Field field) {
        if (!isValid(o)) {
            return null;
        }
        JsonFormat formatAnn = field.getAnnotation(JsonFormat.class);
        if (formatAnn == null) {
            throw new RuntimeException(""JsonFormat with pattern needed for: "" + field.getName());
        }
        try {
            return new SimpleDateFormat(formatAnn.pattern(), Locale.getDefault()).parse(o.toString());
        } catch (ParseException e) {
            throw new RuntimeException(""JsonFormat with pattern is wrong for: "" + field.getName() + "" pattern: "" + formatAnn.pattern());
        }
    }",First it checks is there any annotation class for parsing operations if it is parses with given format if there is a exception while parsing with given format catches and tries with default values If there is no given format tries with static values,robe-convert/src/main/java/io/robe/convert/excel/parsers/ParseDate.java,"[{'Syntax': 'isValid(o)', 'FunctionName': 'isValid', 'ArgsCount': 1, 'MethodBody': 'default boolean isValid(JsonParser o) throws IOException {\n        return o.getValueAsString() != null && !o.getValueAsString().trim().isEmpty();\n    }', 'FileName': '/robeio/robe/robe-convert/src/main/java/io/robe/convert/xml/parsers/IsParser.java'}, {'Syntax': 'field.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getName() {\n        return delegate.getName();\n    }', 'FileName': '/robeio/robe/robe-guice/src/main/java/io/robe/guice/ServiceLocatorDecorator.java'}, {'Syntax': 'o.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString() {\n        final StringBuilder sb = new StringBuilder(""SamplePojo{"");\n        sb.append(""id="").append(id);\n        sb.append("", name=\'"").append(name).append(\'\\\'\');\n        sb.append("", surname=\'"").append(surname).append(\'\\\'\');\n        sb.append("", longid="").append(longid);\n        sb.append("", doubleid="").append(doubleid);\n        sb.append("", big="").append(big);\n        sb.append("", date2="").append(date2);\n        sb.append("", sampleEnum="").append(sampleEnum);\n        sb.append(\'}\');\n        return sb.toString();\n    }', 'FileName': '/robeio/robe/robe-convert/src/test/java/io/robe/convert/SamplePojo.java'}, {'Syntax': 'field.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getName() {\n        return delegate.getName();\n    }', 'FileName': '/robeio/robe/robe-guice/src/main/java/io/robe/guice/ServiceLocatorDecorator.java'}]"
6621cda1cda9bd4817b1123c,ReactiveX/RxJava,"public static boolean setOnce(AtomicReference<Subscription> upstream, Subscription next, Class<?> subscriber) {
        ObjectHelper.requireNonNull(next, ""next is null"");
        if (!upstream.compareAndSet(null, next)) {
            next.cancel();
            if (upstream.get() != SubscriptionHelper.CANCELLED) {
                reportDoubleSubscription(subscriber);
            }
            return false;
        }
        return true;
    }",Atomically updates the target upstream AtomicReference from null to the non - null next Subscription otherwise cancels next and reports a ProtocolViolationException if the AtomicReference doesn t contain the shared cancelled indicator .,src/main/java/io/reactivex/internal/util/EndConsumerHelper.java,"[{'Syntax': 'upstream.compareAndSet(null, next)', 'FunctionName': 'compareAndSet', 'ArgsCount': 2, 'MethodBody': 'boolean compareAndSet(Object expected, Object next);', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/subjects/ReplaySubject.java'}, {'Syntax': 'next.cancel()', 'FunctionName': 'cancel', 'ArgsCount': 0, 'MethodBody': '@Override\n    public void cancel() {\n        SubscriptionHelper.cancel(upstream);\n    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/RefCountProcessor.java'}, {'Syntax': 'upstream.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': '@Override\n                    public Publisher<Long> get() throws Exception {\n                        return Flowable.fromIterable(iterate(elements));\n                    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/DeferTckTest.java'}, {'Syntax': 'reportDoubleSubscription(subscriber)', 'FunctionName': 'reportDoubleSubscription', 'ArgsCount': 1, 'MethodBody': 'public static void reportDoubleSubscription(Class<?> consumer) {\n        RxJavaPlugins.onError(new ProtocolViolationException(composeMessage(consumer.getName())));\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/internal/util/EndConsumerHelper.java'}]"
6621cda1cda9bd4817b1123d,playframework/playframework,"void pushOrPopEm(EntityManager em, boolean threadLocalFallback) {
    Deque<EntityManager> ems = this.emStack(threadLocalFallback);
    if (em != null) {
      ems.push(em);
    } else {
      if (ems.isEmpty()) {
        throw new IllegalStateException(""Tried to remove the EntityManager, but none was set."");
      }
      ems.pop();
    }
  }",Pushes or pops the EntityManager stack depending on the value of the em argument . If em is null then the current EntityManager is popped . If em is non - null then em is pushed onto the stack and becomes the current EntityManager .,persistence/play-java-jpa/src/main/java/play/db/jpa/JPAEntityManagerContext.java,"[{'Syntax': 'ems.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\n      public boolean isEmpty() {\n        return scalaFormData.isEmpty();\n      }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/mvc/BodyParser.java'}]"
6621cda1cda9bd4817b1123e,jboss/jboss-common-core,"public synchronized void setResolution(int resolution)
   {
      if( resolution <= 0 )
         resolution = 60;
      if( resolution != this.resolution )
      {
         this.resolution = resolution;
         theTimer.cancel();
         theTimer = new ResolutionTimer();
         resolutionTimer.scheduleAtFixedRate(theTimer, 0, 1000*resolution);
      }
   }",Set the cache timer resolution,src/main/java/org/jboss/util/TimedCachePolicy.java,"[{'Syntax': 'theTimer.cancel()', 'FunctionName': 'cancel', 'ArgsCount': 0, 'MethodBody': 'public boolean cancel() \n   {\n      synchronized (getLock()) \n      {\n         boolean ret = (m_state == SCHEDULED);\n         m_state = CANCELLED;\n         return ret;\n      }\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimerTask.java'}]"
6621cda2cda9bd4817b1123f,RestComm/jain-slee,"public Collection<ManagementAction> getUninstallActions() {
	  Collection<ManagementAction> uActions = new ArrayList<ManagementAction>(uninstallActions);

	  // ensures uninstall is the last action related with DU components
	  uActions.add(new UninstallDeployableUnitAction(diURL.toString(), sleeContainerDeployer.getDeploymentMBean()));

	  // if we have some remaining uninstall actions it means it is actions related with components not in DU
	  // thus should be executed last
	  if (!preUninstallActions.values().isEmpty()) {
		  for (String componentId : preUninstallActions.keySet()) {
			  uActions.addAll(preUninstallActions.get(componentId));
		  }
	  }

	  return uActions;
  }",Getter for the Uninstall Actions .,container/common/src/main/java/org/mobicents/slee/container/deployment/jboss/DeployableUnit.java,"[{'Syntax': 'uActions.add(new UninstallDeployableUnitAction(diURL.toString(), sleeContainerDeployer.getDeploymentMBean()))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(Button button) {\r\n    rootPanel.add(button);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/common/ToolBar.java'}, {'Syntax': 'diURL.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString() {\r\n    return ""ComponentTypeInfo: type=["" + type + ""] componentNumber=["" + componentNumber + ""]"";\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentTypeInfo.java'}, {'Syntax': 'sleeContainerDeployer.getDeploymentMBean()', 'FunctionName': 'getDeploymentMBean', 'ArgsCount': 0, 'MethodBody': 'public ObjectName getDeploymentMBean();', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/SleeManagementMBean.java'}, {'Syntax': 'preUninstallActions.values().isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': 'public boolean isEmpty() {\n        return size() == 0;\n    }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}, {'Syntax': 'uActions.addAll(preUninstallActions.get(componentId))', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings(""rawtypes"")\n\tpublic boolean addAll(Collection c) {\n        if (c == null)\n            throw new NullPointerException(""Null arg!"");\n        else\n            throw new UnsupportedOperationException(""Operation not supported !"");\n    }', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbbentity/ChildRelationImpl.java'}, {'Syntax': 'preUninstallActions.get(componentId)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public ComponentID get(String key) throws ManagementConsoleException {\r\n    ComponentID id = map.get(key);\r\n    if (id == null)\r\n      throw new ManagementConsoleException(""Component "" + key + "" not found"");\r\n    return id;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/server/src/main/java/org/mobicents/slee/container/management/console/server/components/ComponentIDMap.java'}]"
6621cda2cda9bd4817b11240,Unidata/thredds,"protected void
    printCompoundInstance(DataCursor datav)
            throws DapException
    {
        //Index index = datav.getIndex();
        DapStructure dstruct = (DapStructure) ((DapVariable) datav.getTemplate()).getBaseType();
        switch (datav.getScheme()) {
        case STRUCTURE:
        case RECORD:
            List<DapVariable> dfields = dstruct.getFields();
            for(int f = 0; f < dfields.size(); f++) {
                DapVariable field = dfields.get(f);
                List<Slice> fieldslices = this.ce.getConstrainedSlices(field);
                DataCursor fdata = datav.readField(f);
                printVariable(fdata,fieldslices);
            }
            break;

        case SEQUENCE:
            DapSequence dseq = (DapSequence)dstruct;
            long count = datav.getRecordCount();
            for(long r = 0; r < count; r++) {
                DataCursor dr = datav.readRecord(r);
                printer.marginPrint(""["");
                printer.eol();
                printer.indent();
                printCompoundInstance(dr);
                printer.outdent();
                printer.marginPrint(""]"");
            }
            break;
        default:
            throw new DapException(""Unexpected data cursor scheme:"" + datav.getScheme());
        }
    }",Print a single structure or sequence or record instance,dap4/d4lib/src/main/java/dap4/dap4lib/DSPPrinter.java,[]
6621cda2cda9bd4817b11241,wildfly/wildfly,"static Constructor<?> getConstructor(final Class<?> c, final Class<?>... params)
            throws NoSuchMethodException {
        if (System.getSecurityManager() == null)
            return c.getConstructor(params);

        Constructor<?> result = AccessController.doPrivileged(new PrivilegedAction<Constructor<?>>() {
            public Constructor<?> run() {
                try {
                    return c.getConstructor(params);
                } catch (NoSuchMethodException e) {
                    return null;
                }
            }
        });

        if (result != null)
            return result;

        throw new NoSuchMethodException();
    }",Get the constructor,connector/src/main/java/org/jboss/as/connector/util/SecurityActions.java,"[{'Syntax': 'c.getConstructor(params)', 'FunctionName': 'getConstructor', 'ArgsCount': 1, 'MethodBody': 'public Constructor<T> getConstructor(final String... parameterTypes) {\n        return lookup(\n                new Lookup<Constructor<T>>() {\n                    public Constructor<T> lookup(ClassReflectionIndex index) {\n                        final Constructor ctor = index.getConstructor(parameterTypes);\n                        if (ctor == null)\n                            throw PojoLogger.ROOT_LOGGER.ctorNotFound(Arrays.toString(parameterTypes), beanClass.getName());\n                        return ctor;\n                    }\n                }, 0, 1);\n    }', 'FileName': '/wildfly/wildfly/pojo/src/main/java/org/jboss/as/pojo/service/DefaultBeanInfo.java'}, {'Syntax': 'c.getConstructor(params)', 'FunctionName': 'getConstructor', 'ArgsCount': 1, 'MethodBody': 'public Constructor<T> getConstructor(final String... parameterTypes) {\n        return lookup(\n                new Lookup<Constructor<T>>() {\n                    public Constructor<T> lookup(ClassReflectionIndex index) {\n                        final Constructor ctor = index.getConstructor(parameterTypes);\n                        if (ctor == null)\n                            throw PojoLogger.ROOT_LOGGER.ctorNotFound(Arrays.toString(parameterTypes), beanClass.getName());\n                        return ctor;\n                    }\n                }, 0, 1);\n    }', 'FileName': '/wildfly/wildfly/pojo/src/main/java/org/jboss/as/pojo/service/DefaultBeanInfo.java'}]"
6621cda2cda9bd4817b11242,oblac/jodd,"protected SSLSocket createSSLSocket(
		final String host, final int port, final int connectionTimeout,
		final boolean trustAll, final boolean verifyHttpsHost) throws IOException {

		final SocketFactory socketFactory = getSocketFactory(proxy, true, trustAll, connectionTimeout);

		final Socket socket;

		if (connectionTimeout < 0) {
			socket = socketFactory.createSocket(host, port);
		}
		else {
			// creates unconnected socket
			// unfortunately, this does not work always

//			sslSocket = (SSLSocket) socketFactory.createSocket();
//			sslSocket.connect(new InetSocketAddress(host, port), connectionTimeout);

			//
			// Note: SSLSocketFactory has several create() methods.
			// Those that take arguments all connect immediately
			// and have no options for specifying a connection timeout.
			//
			// So, we have to create a socket and connect it (with a
			// connection timeout), then have the SSLSocketFactory wrap
			// the already-connected socket.
			//
			socket = Sockets.connect(host, port, connectionTimeout);
			//sock.setSoTimeout(readTimeout);
			//socket.connect(new InetSocketAddress(host, port), connectionTimeout);

			// continue to wrap this plain socket with ssl socket...
		}


		// wrap plain socket in an SSL socket

		SSLSocket sslSocket;

		if (socket instanceof SSLSocket) {
			sslSocket = (SSLSocket) socket;
		}
		else {
			if (socketFactory instanceof SSLSocketFactory) {
				sslSocket = (SSLSocket) ((SSLSocketFactory)socketFactory).createSocket(socket, host, port, true);
			}
			else {
				sslSocket = (SSLSocket) (getDefaultSSLSocketFactory(trustAll)).createSocket(socket, host, port, true);
			}
		}

		// sslSocket is now ready

		if (secureEnabledProtocols != null) {
			final String[] values = StringUtil.splitc(secureEnabledProtocols, ',');

			StringUtil.trimAll(values);

			sslSocket.setEnabledProtocols(values);
		}

		// set SSL parameters to allow host name verifier

		if (verifyHttpsHost) {
			final SSLParameters sslParams = new SSLParameters();

			sslParams.setEndpointIdentificationAlgorithm(""HTTPS"");

			sslSocket.setSSLParameters(sslParams);
		}

		return sslSocket;
	}",Creates a SSL socket . Enables default secure enabled protocols if specified .,jodd-http/src/main/java/jodd/http/net/SocketHttpConnectionProvider.java,[]
6621cda2cda9bd4817b11243,rupertlssmith/lojix,"public EightPuzzleState getChildStateForOperator(Operator op)
    {
        // Create a copy of the existing board state
        EightPuzzleState newState;

        try
        {
            newState = (EightPuzzleState) clone();
        }
        catch (CloneNotSupportedException e)
        {
            throw new IllegalStateException(""Puzzle state could not be cloned."", e);
        }

        // Update the new board state using the in-place operator application
        newState.updateWithOperator(op);

        return newState;
    }",Applies a move to generate a new board position . This creates a new state object and updates its board position . The board position in this object is not changed .,lojix/search/src/main/com/thesett/aima/search/examples/eightpuzzle/EightPuzzleState.java,"[{'Syntax': 'clone()', 'FunctionName': 'clone', 'ArgsCount': 0, 'MethodBody': 'protected Object clone() throws CloneNotSupportedException\n    {\n        // Create a new state and copy the existing board position into it\n        EightPuzzleState newState = (EightPuzzleState) super.clone();\n\n        newState.board = new char[3][3];\n\n        for (int j = 0; j < 3; j++)\n        {\n            System.arraycopy(board[j], 0, newState.board[j], 0, 3);\n        }\n\n        newState.emptyX = emptyX;\n        newState.emptyY = emptyY;\n\n        return newState;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/examples/eightpuzzle/EightPuzzleState.java'}, {'Syntax': 'newState.updateWithOperator(op)', 'FunctionName': 'updateWithOperator', 'ArgsCount': 1, 'MethodBody': 'protected void updateWithOperator(Operator op)\n    {\n        // Get the operator as a character by taking the first character of the operator string\n        char opc = ((String) op.getOp()).charAt(0);\n\n        // Move the empty tile according to the specified operation\n        switch (opc)\n        {\n        // Swap the empty tile with the one above it.\n        case \'U\':\n        {\n            swapTiles(emptyX, emptyY, emptyX, emptyY - 1);\n            break;\n        }\n\n        // Swap the empty tile with the one below it.\n        case \'D\':\n        {\n            swapTiles(emptyX, emptyY, emptyX, emptyY + 1);\n            break;\n        }\n\n        // Swap the empty tile with the one to the left of it.\n        case \'L\':\n        {\n            swapTiles(emptyX, emptyY, emptyX - 1, emptyY);\n            break;\n        }\n\n        // Swap the empty tile with the one to the right of it.\n        case \'R\':\n        {\n            swapTiles(emptyX, emptyY, emptyX + 1, emptyY);\n            break;\n        }\n\n        default:\n        {\n            throw new IllegalStateException(""Unkown operator: "" + opc + ""."");\n        }\n        }\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/examples/eightpuzzle/EightPuzzleState.java'}]"
6621cda2cda9bd4817b11244,orientechnologies/orientdb,"@Override
  public Object evaluateRecord(final OIdentifiable iRecord, ODocument iCurrentResult, final OSQLFilterCondition iCondition,
      final Object iLeft, final Object iRight, OCommandContext iContext, final ODocumentSerializer serializer) {
    if (iLeft == null || iRight == null)
      return false;

    return iLeft.toString().indexOf(iRight.toString()) > -1;
  }",This is executed on non - indexed fields .,core/src/main/java/com/orientechnologies/orient/core/sql/operator/OQueryOperatorContainsText.java,"[{'Syntax': 'iLeft.toString().indexOf(iRight.toString())', 'FunctionName': 'indexOf', 'ArgsCount': 1, 'MethodBody': '@Override\n  public int indexOf(Object o) {\n    Node item = first;\n    for (int i = 0; i < size; i++) {\n      if (item.entry.equals(o)) {\n        return i;\n      }\n      item = item.next;\n    }\n\n    return -1;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTxIndexChangesList.java'}, {'Syntax': 'iLeft.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'iRight.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}]"
6621cda2cda9bd4817b11245,real-logic/aeron,"public int poll()
    {
        controlSessionId = -1;
        correlationId = -1;
        relevantId = -1;
        templateId = -1;
        errorMessage = null;
        pollComplete = false;

        return subscription.controlledPoll(fragmentAssembler, fragmentLimit);
    }",Poll for control response events .,aeron-archive/src/main/java/io/aeron/archive/client/ControlResponsePoller.java,"[{'Syntax': 'subscription.controlledPoll(fragmentAssembler, fragmentLimit)', 'FunctionName': 'controlledPoll', 'ArgsCount': 2, 'MethodBody': 'public int controlledPoll(final ControlledFragmentHandler handler, final int fragmentLimit)\n    {\n        if (isClosed)\n        {\n            return 0;\n        }\n\n        int fragmentsRead = 0;\n        long initialPosition = subscriberPosition.get();\n        int initialOffset = (int)initialPosition & termLengthMask;\n        int offset = initialOffset;\n        final UnsafeBuffer termBuffer = activeTermBuffer(initialPosition);\n        final int capacity = termBuffer.capacity();\n        final Header header = this.header;\n        header.buffer(termBuffer);\n\n        try\n        {\n            while (fragmentsRead < fragmentLimit && offset < capacity)\n            {\n                final int length = frameLengthVolatile(termBuffer, offset);\n                if (length <= 0)\n                {\n                    break;\n                }\n\n                final int frameOffset = offset;\n                final int alignedLength = BitUtil.align(length, FRAME_ALIGNMENT);\n                offset += alignedLength;\n\n                if (isPaddingFrame(termBuffer, frameOffset))\n                {\n                    continue;\n                }\n\n                ++fragmentsRead;\n                header.offset(frameOffset);\n\n                final Action action = handler.onFragment(\n                    termBuffer, frameOffset + HEADER_LENGTH, length - HEADER_LENGTH, header);\n\n                if (ABORT == action)\n                {\n                    --fragmentsRead;\n                    offset -= alignedLength;\n                    break;\n                }\n\n                if (BREAK == action)\n                {\n                    break;\n                }\n\n                if (COMMIT == action)\n                {\n                    initialPosition += (offset - initialOffset);\n                    initialOffset = offset;\n                    subscriberPosition.setOrdered(initialPosition);\n                }\n            }\n        }\n        catch (final Exception ex)\n        {\n            errorHandler.onError(ex);\n        }\n        finally\n        {\n            final long resultingPosition = initialPosition + (offset - initialOffset);\n            if (resultingPosition > initialPosition)\n            {\n                subscriberPosition.setOrdered(resultingPosition);\n            }\n        }\n\n        return fragmentsRead;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Image.java'}]"
6621cda2cda9bd4817b11246,eclipse/packagedrone,"public static TagInfo parseTagFileDirectives(ParserController pc,
						 String name,
						 String path,
						 TagLibraryInfo tagLibInfo)
                        throws JasperException {

        ErrorDispatcher err = pc.getCompiler().getErrorDispatcher();

        Node.Nodes page = null;
        try {
            page = pc.parseTagFileDirectives(path);
        } catch (FileNotFoundException e) {
            err.jspError(""jsp.error.file.not.found"", path);
        } catch (IOException e) {
            err.jspError(""jsp.error.file.not.found"", path);
        }

        TagFileDirectiveVisitor tagFileVisitor
            = new TagFileDirectiveVisitor(pc.getCompiler(), tagLibInfo, name,
                                          path);
        page.visit(tagFileVisitor);
        tagFileVisitor.postCheck();

        return tagFileVisitor.getTagInfo();
    }",Parses the tag file and collects information on the directives included in it . The method is used to obtain the info on the tag file when the handler that it represents is referenced . The tag file is not compiled here .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagFileProcessor.java,"[{'Syntax': 'pc.getCompiler().getErrorDispatcher()', 'FunctionName': 'getErrorDispatcher', 'ArgsCount': 0, 'MethodBody': 'public ErrorDispatcher getErrorDispatcher() {\n\treturn errDispatcher;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java'}, {'Syntax': 'pc.getCompiler()', 'FunctionName': 'getCompiler', 'ArgsCount': 0, 'MethodBody': 'public String getCompiler() {\n        return compiler;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/EmbeddedServletOptions.java'}, {'Syntax': 'pc.parseTagFileDirectives(path)', 'FunctionName': 'parseTagFileDirectives', 'ArgsCount': 1, 'MethodBody': 'private void parseTagFileDirectives(Node parent)\n        throws JasperException\n    {\n\treader.setSingleFile(true);\n\treader.skipUntil(""<"");\n        while (reader.hasMoreInput()) {\n            start = reader.mark();\n            if (reader.matches(""%--"")) {\n                parseComment(parent);\n            } else if (reader.matches(""%@"")) {\n                parseDirective(parent);\n            } else if (reader.matches(""jsp:directive."")) {\n                parseXMLDirective(parent);\n            }\n\t    reader.skipUntil(""<"");\n\t}\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Parser.java'}, {'Syntax': 'err.jspError(""jsp.error.file.not.found"", path)', 'FunctionName': 'jspError', 'ArgsCount': 2, 'MethodBody': 'public void jspError(String errMsg, Exception ex) throws JasperException {\n\tthrow new JasperException(errMsg, ex);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/DefaultErrorHandler.java'}, {'Syntax': 'err.jspError(""jsp.error.file.not.found"", path)', 'FunctionName': 'jspError', 'ArgsCount': 2, 'MethodBody': 'public void jspError(String errMsg, Exception ex) throws JasperException {\n\tthrow new JasperException(errMsg, ex);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/DefaultErrorHandler.java'}, {'Syntax': 'pc.getCompiler()', 'FunctionName': 'getCompiler', 'ArgsCount': 0, 'MethodBody': 'public String getCompiler() {\n        return compiler;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/EmbeddedServletOptions.java'}, {'Syntax': 'page.visit(tagFileVisitor)', 'FunctionName': 'visit', 'ArgsCount': 1, 'MethodBody': 'public void visit(Node.PageDirective n) throws JasperException {\n\t    printAttributes(""<%@ page"", n.getAttributes(), ""%>"");\n        }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Dumper.java'}, {'Syntax': 'tagFileVisitor.postCheck()', 'FunctionName': 'postCheck', 'ArgsCount': 0, 'MethodBody': 'void postCheck() throws JasperException {\n            // Check that var.name-from-attributes has valid values.\n\t    Iterator iter = nameFromTable.keySet().iterator();\n            while (iter.hasNext()) {\n                String nameFrom = (String) iter.next();\n                NameEntry nameEntry = nameTable.get(nameFrom);\n                NameEntry nameFromEntry = nameFromTable.get(nameFrom);\n                Node nameFromNode = nameFromEntry.getNode();\n                if (nameEntry == null) {\n                    err.jspError(nameFromNode,\n                                 ""jsp.error.tagfile.nameFrom.noAttribute"",\n                                 nameFrom);\n                } else {\n                    Node node = nameEntry.getNode();\n                    TagAttributeInfo tagAttr = nameEntry.getTagAttributeInfo();\n                    if (! ""java.lang.String"".equals(tagAttr.getTypeName())\n                            || ! tagAttr.isRequired()\n                            || tagAttr.canBeRequestTime()){\n                        err.jspError(nameFromNode,\n                            ""jsp.error.tagfile.nameFrom.badAttribute"",\n                            nameFrom,\n                            Integer.toString(node.getStart().getLineNumber()));\n                     }\n                }\n            }\n        }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagFileProcessor.java'}, {'Syntax': 'tagFileVisitor.getTagInfo()', 'FunctionName': 'getTagInfo', 'ArgsCount': 0, 'MethodBody': 'public TagInfo getTagInfo() {\n        return tagInfo;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}]"
6621cda2cda9bd4817b11247,streamsets/datacollector,"public void executeAlterTableAddPartitionQuery(
      String qualifiedTableName,
      LinkedHashMap<String, String> partitionNameValueMap,
      Map<String, HiveTypeInfo> partitionTypeMap,
      String partitionPath
  ) throws StageException {
    String sql = buildPartitionAdditionQuery(qualifiedTableName, partitionNameValueMap, partitionTypeMap, partitionPath);
    execute(sql);
  }",Add a new partition to the given table with optional custom location .,hive-protolib/src/main/java/com/streamsets/pipeline/stage/lib/hive/HiveQueryExecutor.java,[]
6621cda2cda9bd4817b11248,abmargb/jamppa,"public Collection<V> values() {
        if (values == null) {
            values = new ReferenceValues<K, V>(this);
        }
        return values;
    }",Returns a collection view of this map s values .,src/main/java/org/jivesoftware/smack/util/collections/AbstractReferenceMap.java,[]
6621cda2cda9bd4817b11249,liveontologies/elk-reasoner,"protected static void printDeclarations(Taxonomy<ElkClass> classTaxonomy,
			ElkObject.Factory objectFactory, Appendable writer)
			throws IOException {

		List<ElkClass> classes = new ArrayList<ElkClass>(classTaxonomy
				.getNodes().size() * 2);

		for (TaxonomyNode<ElkClass> classNode : classTaxonomy.getNodes()) {
			for (ElkClass clazz : classNode) {
				if (!clazz.getIri().equals(PredefinedElkIris.OWL_THING)
						&& !clazz.getIri()
								.equals(PredefinedElkIris.OWL_NOTHING)) {
					classes.add(clazz);

				}
			}
		}

		Collections.sort(classes, CLASS_COMPARATOR);

		for (ElkClass clazz : classes) {
			ElkDeclarationAxiom decl = objectFactory.getDeclarationAxiom(clazz);
			OwlFunctionalStylePrinter.append(writer, decl, true);
			writer.append('\n');
		}
	}",Prints class declarations,elk-ore-parent/elk-ore/src/main/java/org/semanticweb/elk/ore/OreTaxonomyPrinter.java,"[{'Syntax': 'classTaxonomy\n\t\t\t\t.getNodes().size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\t\t\t\tpublic int size() {\n\t\t\t\t\t\treturn first.getManifests().size()\n\t\t\t\t\t\t\t\t+ sec.getManifests().size();\n\t\t\t\t\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-testing/src/main/java/org/semanticweb/elk/testing/ConfigurationUtils.java'}, {'Syntax': 'classTaxonomy\n\t\t\t\t.getNodes()', 'FunctionName': 'getNodes', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic Set<? extends TypeNode<T, I>> getNodes() {\n\t\treturn parentMap.keySet();\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/test/java/org/semanticweb/elk/reasoner/taxonomy/MockInstanceTaxonomy.java'}, {'Syntax': 'classTaxonomy.getNodes()', 'FunctionName': 'getNodes', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic Set<? extends TypeNode<T, I>> getNodes() {\n\t\treturn parentMap.keySet();\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-reasoner/src/test/java/org/semanticweb/elk/reasoner/taxonomy/MockInstanceTaxonomy.java'}, {'Syntax': 'clazz.getIri().equals(PredefinedElkIris.OWL_THING)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tMutableBoolean other = (MutableBoolean) obj;\n\t\tif (value_ != other.value_)\n\t\t\treturn false;\n\t\treturn true;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-common/src/main/java/org/semanticweb/elk/MutableBoolean.java'}, {'Syntax': 'clazz.getIri()', 'FunctionName': 'getIri', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic ElkFullIri getIri() {\n\t\treturn iri_;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-owl-parent/elk-owl-model/src/main/java/org/semanticweb/elk/owl/iris/ElkPrefixImpl.java'}, {'Syntax': 'clazz.getIri()\n\t\t\t\t\t\t\t\t.equals(PredefinedElkIris.OWL_NOTHING)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tMutableBoolean other = (MutableBoolean) obj;\n\t\tif (value_ != other.value_)\n\t\t\treturn false;\n\t\treturn true;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-common/src/main/java/org/semanticweb/elk/MutableBoolean.java'}, {'Syntax': 'clazz.getIri()', 'FunctionName': 'getIri', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic ElkFullIri getIri() {\n\t\treturn iri_;\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-owl-parent/elk-owl-model/src/main/java/org/semanticweb/elk/owl/iris/ElkPrefixImpl.java'}, {'Syntax': 'classes.add(clazz)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic void add(final E element) {\n\t\tfinal Integer lastQueryTick = lastQueryTicks_.get(element);\n\t\tif (lastQueryTick != null) {\n\t\t\tnRepeatedQueriesToBalance_--;\n\t\t\tfinal int queryAge = tick_ - lastQueryTick;\n\t\t\tfinal double estimation = quantileEstimator_.next(queryAge);\n\t\t\tif (nRepeatedQueriesToBalance_ == 0) {\n\t\t\t\tnRepeatedQueriesToBalance_ = balanceAfterNRepeatedQueries_;\n\t\t\t\t// Balance capacity\n\t\t\t\tsetCapacity((int) Math.min(Math.max(0.0, estimation),\n\t\t\t\t\t\tInteger.MAX_VALUE));\n\t\t\t}\n\t\t}\n\t\tlastQueryTicks_.put(element, tick_);\n\t\ttick_++;\n\t\t// Actual add.\n\t\tsuper.add(element);\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-collections/src/main/java/org/semanticweb/elk/util/collections/CapacityBalancingEvictor.java'}, {'Syntax': 'objectFactory.getDeclarationAxiom(clazz)', 'FunctionName': 'getDeclarationAxiom', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic ElkDeclarationAxiom getDeclarationAxiom(ElkEntity entity) {\n\t\treturn filter(factory_.getDeclarationAxiom(entity));\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-owl-parent/elk-owl-model/src/main/java/org/semanticweb/elk/owl/interfaces/ElkObjectDelegatingFactory.java'}, {'Syntax': 'OwlFunctionalStylePrinter.append(writer, decl, true)', 'FunctionName': 'append', 'ArgsCount': 3, 'MethodBody': 'public static void append(Appendable appender, ElkObject elkObject, boolean expandAbbreviatedIris)\n\t\t\tthrows IOException {\n\t\tOwlFunctionalStylePrinterVisitor printer = new OwlFunctionalStylePrinterVisitor(\n\t\t\t\tappender, expandAbbreviatedIris);\n\t\ttry {\n\t\t\telkObject.accept(printer);\n\t\t} catch (PrintingException e) {\n\t\t\tthrow new IOException(e.getMessage(), e.getCause());\n\t\t}\n\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-owl-parent/elk-owl-model/src/main/java/org/semanticweb/elk/owl/printers/OwlFunctionalStylePrinter.java'}, {'Syntax': ""writer.append('\\n')"", 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': '@Override\n\tprotected void append(ILoggingEvent event) {\n\t\tthrow new LoggingException(event.getFormattedMessage());\n\t}', 'FileName': '/liveontologies/elk-reasoner/elk-util-parent/elk-util-testing/src/main/java/org/semanticweb/elk/testing/FailingAppender.java'}]"
6621cda2cda9bd4817b1124a,kiegroup/droolsjbpm-tools,"public DroolsLineBreakpoint getDroolsBreakpoint(String source) {

        if ( source == null ) {
            return null;
        }

        Iterator<IBreakpoint> iterator = getBreakpoints().iterator();
        while ( iterator.hasNext() ) {
            IJavaBreakpoint element = (IJavaBreakpoint) iterator.next();
            if ( element instanceof DroolsLineBreakpoint && ((DroolsLineBreakpoint) element).getDialectName().equals( ""mvel"" ) ) {
                DroolsLineBreakpoint l = (DroolsLineBreakpoint) element;
                try {

                    int matchLine = l.getLineNumber();
                    String matchSource = l.getRuleName();

                    if ( source.equals( matchSource ) || l.getFileRuleMappings().containsKey( source ) ) {
                        return l;
                    }

                } catch ( CoreException e ) {
                    logError( e );
                }
            }
        }

        return null;
    }",Tries to find a match for the provided breakpoint information from the list of registered breakpoints . For stepping and possibly other purposes it returns also a breakpoint for cases where exactly the same line was not found .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/core/DroolsDebugTarget.java,"[{'Syntax': 'getBreakpoints().iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': 'public Iterator<?> iterator() {\n            return (new ArrayList<Object>()).iterator();\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/menu/RuleHelperActionDelegate.java'}, {'Syntax': 'iterator.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic boolean hasNext() {\n\t\t\tif (!hasChildren())\n\t\t\t\treturn false;\n\t\t\t\n\t\t\tif (iteratorIndex==-1) {\n\t\t\t\titeratorIndex = 0;\n\t\t\t\titerators = new ArrayList<Iterator<T>>();\n\t\t\t\tfor (T child : children) {\n\t\t\t\t\titerators.add(((Iterable<T>)child).iterator());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn iteratorIndex<iterators.size() || childIndex<children.size();\n\t\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/view/utils/SimpleTreeIterator.java'}, {'Syntax': 'iterator.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': '@Override\n\t\tpublic T next() {\n\t\t\tif (!hasChildren())\n\t\t\t\treturn null;\n\t\t\twhile (iteratorIndex<iterators.size()) {\n\t\t\t\tIterator<T> iter = iterators.get(iteratorIndex);\n\t\t\t\tif (iter.hasNext())\n\t\t\t\t\treturn iter.next();\n\t\t\t\t++iteratorIndex;\n\t\t\t}\n\t\t\tif (childIndex<children.size()) {\n\t\t\t\tT child = children.get(childIndex);\n\t\t\t\t++childIndex;\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\treturn null;\n\t\t}', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/view/utils/SimpleTreeIterator.java'}, {'Syntax': '((DroolsLineBreakpoint) element).getDialectName().equals( ""mvel"" )', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': '((DroolsLineBreakpoint) element).getDialectName()', 'FunctionName': 'getDialectName', 'ArgsCount': 0, 'MethodBody': 'public String getDialectName() {\n            String dialectName = null;\n            dialectName = ruleDescr.getAttributes().get(""dialect"").getValue();\n            if (dialectName == null && packageDescr != null) {\n                for (AttributeDescr attribute: packageDescr.getAttributes()) {\n                    if (""dialect"".equals(attribute.getName())) {\n                        dialectName = (String) attribute.getValue();\n                        break;\n                    }\n                }\n            }\n            return dialectName;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DRLInfo.java'}, {'Syntax': 'l.getLineNumber()', 'FunctionName': 'getLineNumber', 'ArgsCount': 0, 'MethodBody': 'public int getLineNumber() throws DebugException {\n        synchronized ( getThread() ) {\n            int cache = ctxCache.getCacheLineNumber();\n            if ( cache != -1 ) {\n                return cache;\n            }\n\n            DroolsDebugTarget t = (DroolsDebugTarget) getDebugTarget();\n            String sourceName = getMVELName();\n            DroolsLineBreakpoint bpoint = (DroolsLineBreakpoint) t.getDroolsBreakpoint( sourceName );\n            if ( bpoint == null ) {\n                return -1;\n            }\n\n            int line;\n            try {\n                line = Integer.parseInt( bpoint.getFileRuleMappings().get( sourceName ).toString() );\n            } catch ( Throwable t2 ) {\n                DroolsEclipsePlugin.log( t2 );\n                return -1;\n            }\n\n            int fragmentLine = getBreakpointLineNumber(); // 4->5 for step over\n            int res = line + fragmentLine;\n\n            if ( fragmentLine == -1 ) {\n                return -1;\n            }\n            ctxCache.setCacheLineNumber( res );\n            return res;\n        }\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/core/MVELStackFrame.java'}, {'Syntax': 'l.getRuleName()', 'FunctionName': 'getRuleName', 'ArgsCount': 0, 'MethodBody': 'public String getRuleName() {\n            return ruleDescr.getName();\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DRLInfo.java'}, {'Syntax': 'source.equals( matchSource )', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': 'l.getFileRuleMappings()', 'FunctionName': 'getFileRuleMappings', 'ArgsCount': 0, 'MethodBody': 'public Map<String, Integer> getFileRuleMappings() {\n        String packedInfo = getMarker().getAttribute( IDroolsDebugConstants.DRL_RULES, """");\n        return unpackRuleMapping( packedInfo );\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/core/DroolsLineBreakpoint.java'}]"
6621cda2cda9bd4817b1124b,boonproject/boon,"public static <T> T lastOf( List<T> list, Sort... sorts ) {

        if (list.size()>1) {
            Sorting.sort(list, sorts);

            return list.get(list.size()-1);
        } else {
            return null;
        }
    }",Grabs the last items after the sort .,boon/src/main/java/org/boon/sort/Ordering.java,"[{'Syntax': 'list.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n        public long size() throws IOException {\n            return 0;\n        }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-service-model/src/test/java/org/boon/slumberdb/stores/log/BatchFileWriterTest.java'}, {'Syntax': 'Sorting.sort(list, sorts)', 'FunctionName': 'sort', 'ArgsCount': 2, 'MethodBody': 'public void sort( List list, Map<String, FieldAccess> fields ) {\n        Collections.sort( list, this.comparator( fields ) );\n    }', 'FileName': '/boonproject/boon/boon/src/main/java/org/boon/sort/Sort.java'}, {'Syntax': 'list.get(list.size()-1)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Response get(String key) {\n\n        Request request = Request.request().key(key);\n        return request(request);\n\n    }', 'FileName': '/boonproject/boon/etcd/etcd-client/src/main/java/org/boon/etcd/EtcdClient.java'}, {'Syntax': 'list.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n        public long size() throws IOException {\n            return 0;\n        }', 'FileName': '/boonproject/boon/slumberdb/slumberdb-service-model/src/test/java/org/boon/slumberdb/stores/log/BatchFileWriterTest.java'}]"
6621cda2cda9bd4817b1124c,Unidata/thredds,"static public String getServiceSpecial(String path) {
    String ss = null;
    if (path.startsWith(""/dqcServlet""))
      ss = ""dqcServlet"";
    else if (path.startsWith(""/cdmvalidator""))
      ss = ""cdmvalidator"";
    return ss;
  }",the ones that dont start with thredds,ui/src/main/java/thredds/logs/LogCategorizer.java,[]
6621cda2cda9bd4817b1124d,Unidata/thredds,"public Rectangle getBounds() {
    return new Rectangle(stretchedPt.x < anchorPt.x ?
                         stretchedPt.x : anchorPt.x,
                         stretchedPt.y < anchorPt.y ?
                         stretchedPt.y : anchorPt.y,
                         Math.abs(stretchedPt.x - anchorPt.x),
                         Math.abs(stretchedPt.y - anchorPt.y));
  }",Get current Bounds,ui/src/main/java/ucar/nc2/ui/geoloc/Rubberband.java,[]
6621cda2cda9bd4817b1124e,oblac/jodd,"public T setTarget(final Class target) {
		assertTargetIsNotDefined();

		try {
			targetInputStream = ClassLoaderUtil.getClassAsStream(target);
			if (targetInputStream == null) {
				throw new ProxettaException(""Target class not found: "" + target.getName());
			}
			targetClass = target;
			targetClassName = target.getName();
		}
		catch (IOException ioex) {
			StreamUtil.close(targetInputStream);
			throw new ProxettaException(""Unable to stream class: "" + target.getName(), ioex);
		}
		return _this();
	}",Defines class as a target .,jodd-proxetta/src/main/java/jodd/proxetta/ProxettaFactory.java,"[{'Syntax': 'target.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'target.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'target.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': '_this()', 'FunctionName': '_this', 'ArgsCount': 0, 'MethodBody': '@SuppressWarnings(""unchecked"")\n\tprotected T _this() {\n\t\treturn (T) this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/chalk/Chalk.java'}]"
6621cda2cda9bd4817b1124f,orientechnologies/orientdb,"public void replaceContentWith(final Path newContentFile) throws IOException {
    acquireWriteLock();
    try {
      close();

      Files.copy(newContentFile, osFile, StandardCopyOption.REPLACE_EXISTING);

      open();
    } finally {
      releaseWriteLock();
    }
  }",Replaces the file content with the content of the provided file .,core/src/main/java/com/orientechnologies/orient/core/storage/fs/OFileClassic.java,"[{'Syntax': 'acquireWriteLock()', 'FunctionName': 'acquireWriteLock', 'ArgsCount': 0, 'MethodBody': 'public void acquireWriteLock() {\n    lockWrite.lock();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/enterprise/channel/OChannel.java'}, {'Syntax': 'close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'public void close() {\n    if (currentDatabase != null) {\n      currentDatabase.activateOnCurrentThread();\n      currentDatabase.close();\n      currentDatabase = null;\n    }\n    if (orientDB != null) {\n      orientDB.close();\n    }\n    currentResultSet = null;\n    currentRecord = null;\n    currentResult = null;\n    commandBuffer.setLength(0);\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/console/OConsoleDatabaseApp.java'}, {'Syntax': 'open()', 'FunctionName': 'open', 'ArgsCount': 0, 'MethodBody': '@Override\n    public void open() throws IOException {}', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/storage/cache/chm/AsyncReadCacheTestIT.java'}, {'Syntax': 'releaseWriteLock()', 'FunctionName': 'releaseWriteLock', 'ArgsCount': 0, 'MethodBody': 'public void releaseWriteLock() {\n    lockWrite.unlock();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/enterprise/channel/OChannel.java'}]"
6621cda2cda9bd4817b11250,Unidata/thredds,"private double distanceSq( Point2D pt, int indexX, int indexY) {
    if ((indexX < 0) || (indexX >= countX) || (indexY < 0) || (indexY >= countY)) // outside bounding box
      return MAX_DOUBLE;

      GridCell gtest = gridArray[indexY][indexX];
      if (!gtest.used)    // nothing in this cell
        return MAX_DOUBLE;

        // get distance from center of cell
      Rectangle2D rect = gtest.objectBB;
      double dx = rect.getX()+rect.getWidth()/2 - pt.getX();
      double dy = rect.getY()+rect.getHeight()/2 - pt.getY();
      return (dx*dx + dy*dy);
    }",if out of bbox or cell not marked return MAX_DOUBLE,ui/src/main/java/ucar/nc2/ui/gis/SpatialGrid.java,[]
6621cda2cda9bd4817b11251,oblac/jodd,"public static boolean validateAgaintIPAdressV4Format(final String input) {
		if (input == null) {
			return false;
		}

		int hitDots = 0;
		char[] data = input.toCharArray();
		for (int i = 0; i < data.length; i++) {
			char c = data[i];
			int b = 0;
			do {
				if (c < '0' || c > '9') {
					return false;
				}
				b = (b * 10 + c) - 48;
				if (++i >= data.length) {
					break;
				}
				c = data[i];
			} while (c != '.');

			if (b > 255) {
				return false;
			}
			hitDots++;
		}

		return hitDots == 4;
	}",Checks given string against IP address v4 format .,jodd-core/src/main/java/jodd/io/NetUtil.java,"[{'Syntax': 'input.toCharArray()', 'FunctionName': 'toCharArray', 'ArgsCount': 0, 'MethodBody': 'public char[] toCharArray() {\n\t\treturn buffer.toArray();\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/FastCharArrayWriter.java'}]"
6621cda2cda9bd4817b11252,oblac/jodd,"public void addHeader(final String name, final String value) {
		List<String> valuesList = super.getAll(name);
		if (valuesList.isEmpty()) {
			super.add(name, value);
			return;
		}
		super.remove(name);
		valuesList.add(value);
		super.addAll(name, valuesList);
	}",Adds new header value . If existing value exist it will be removed so the store the new key value .,jodd-http/src/main/java/jodd/http/HeadersMultiMap.java,"[{'Syntax': 'valuesList.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic boolean isEmpty() {\n\t\treturn size() == 0;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'super.add(name, value)', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': '@Action\n\tpublic void add(@In String name, @In Foo foo) {\n\t\tSystem.out.println(name);\n\t\tSystem.out.println(foo.value);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/test/java/jodd/madvoc/fixtures/tst/SuperAction.java'}, {'Syntax': 'super.remove(name)', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V remove(final K key) {\n\t\tV removedValue = null;\n\t\tfinal long stamp = lock.writeLock();\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.remove(key);\n\n\t\t\tif (co != null) {\n\t\t\t\tonRemove(co.key, co.cachedObject);\n\t\t\t\tremovedValue = co.cachedObject;\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlockWrite(stamp);\n\t\t}\n\t\treturn removedValue;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'valuesList.add(value)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cda2cda9bd4817b11253,amedia/meteo,"public boolean isSun(ZonedDateTime currentDate) {
        if (getSun().getNeverRise()) {
            return false;
        } else if (getSun().getNeverSet()) {
            return true;
        }
        return timeWithinPeriod(currentDate);
    }",Check if the sun is shining for a given time .,meteo-core/src/main/java/no/api/meteo/entity/core/service/sunrise/SunriseDate.java,"[{'Syntax': 'getSun()', 'FunctionName': 'getSun', 'ArgsCount': 0, 'MethodBody': 'public SunType getSun() {\n        return sun;\n    }', 'FileName': '/amedia/meteo/meteo-jaxb/src/main/java/no/api/meteo/jaxb/sunrise/v1_1/LocationType.java'}, {'Syntax': 'getSun()', 'FunctionName': 'getSun', 'ArgsCount': 0, 'MethodBody': 'public SunType getSun() {\n        return sun;\n    }', 'FileName': '/amedia/meteo/meteo-jaxb/src/main/java/no/api/meteo/jaxb/sunrise/v1_1/LocationType.java'}, {'Syntax': 'timeWithinPeriod(currentDate)', 'FunctionName': 'timeWithinPeriod', 'ArgsCount': 1, 'MethodBody': 'private boolean timeWithinPeriod(ZonedDateTime currentDate) {\n        if (currentDate.equals(getSun().getRise())) {\n            return true;\n        } else if (currentDate.equals(getSun().getSet())) {\n            return true;\n        } else if (getSun().getRise() != null && getSun().getSet() != null) {\n            return currentDate.isAfter(getSun().getRise()) && currentDate.isBefore(getSun().getSet());\n        } else if (getSun().getRise() != null) {\n            return currentDate.isAfter(getSun().getRise());\n        } else {\n            log.error(""Something went wrong. Couldn\'t check if time is within period as getSet == null. Returning true."");\n            return true;\n        }\n    }', 'FileName': '/amedia/meteo/meteo-core/src/main/java/no/api/meteo/entity/core/service/sunrise/SunriseDate.java'}]"
6621cda2cda9bd4817b11254,moparisthebest/aptIn16,"public static DeclarationFilter getFilter(
			final Collection<Modifier> mods) {
		return new DeclarationFilter() {
			public boolean matches(Declaration d) {
				return d.getModifiers().containsAll(mods);
			}
		};
	}",Returns a filter that selects declarations containing all of a collection of modifiers .,apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java,"[{'Syntax': 'd.getModifiers()', 'FunctionName': 'getModifiers', 'ArgsCount': 0, 'MethodBody': 'Collection<Modifier> getModifiers();', 'FileName': '/moparisthebest/aptIn16/apt-mirror-api/src/main/java/com/sun/mirror/declaration/Declaration.java'}]"
6621cda3cda9bd4817b11255,Unidata/thredds,"protected Array _read(Section section) throws IOException, InvalidRangeException {
    // check if its really a full read
    if ((null == section) || section.computeSize() == getSize())
      return _read();

    // full read was cached
    if (isCaching()) {
      if (cache.data == null) {
        setCachedData(_read()); // read and cache entire array
        if (debugCaching) System.out.println(""cache "" + getFullName());
      }
      if (debugCaching) System.out.println(""got data from cache "" + getFullName());
      return cache.data.sectionNoReduce(section.getRanges()).copy(); // subset it, return copy
    }

    return proxyReader.reallyRead(this, section, null);
  }",assume filled validated Section,cdm/src/main/java/ucar/nc2/Variable.java,[]
6621cda3cda9bd4817b11256,jboss/jboss-common-core,"public static String getOptionalChildContent(Element element,
                                                String tagName)
      throws Exception
   {
      return getElementContent(getOptionalChild(element, tagName));
   }",Macro to get the content of an optional child element .,src/main/java/org/jboss/util/xml/XmlHelper.java,"[{'Syntax': 'getElementContent(getOptionalChild(element, tagName))', 'FunctionName': 'getElementContent', 'ArgsCount': 1, 'MethodBody': 'public static String getElementContent(final Element element)\n      throws Exception\n   {\n      return getElementContent(element, null);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/XmlHelper.java'}, {'Syntax': 'getOptionalChild(element, tagName)', 'FunctionName': 'getOptionalChild', 'ArgsCount': 2, 'MethodBody': 'public static Element getOptionalChild(Element element, String tagName)\n      throws Exception\n   {\n      return getOptionalChild(element, tagName, null);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/xml/XmlHelper.java'}]"
6621cda3cda9bd4817b11257,eclipse/packagedrone,"private void generateClass()
        throws FileNotFoundException, JasperException, Exception {

        long t1 = 0;
        if (log.isLoggable(Level.FINE)) {
            t1 = System.currentTimeMillis();
        }

        String javaFileName = ctxt.getServletJavaFileName();

        setJavaCompilerOptions();

        // Start java compilation
        JavacErrorDetail[] javacErrors =
            javaCompiler.compile(ctxt.getFullClassName(), pageNodes);

        if (javacErrors != null) {
            // If there are errors, always generate java files to disk.
            javaCompiler.doJavaFile(true);

            log.severe(""Error compiling file: "" + javaFileName);
            errDispatcher.javacError(javacErrors);
        }

        if (log.isLoggable(Level.FINE)) {
            long t2 = System.currentTimeMillis();
            log.fine(""Compiled "" + javaFileName + "" "" + (t2-t1) + ""ms"");
        }

        // Save or delete the generated Java files, depending on the
        // value of ""keepgenerated"" attribute
        javaCompiler.doJavaFile(ctxt.keepGenerated());

        // JSR45 Support
        if (!ctxt.isPrototypeMode() && !options.isSmapSuppressed()) {
            smapUtil.installSmap();
        }

        // START CR 6373479
        if (jsw != null && jsw.getServletClassLastModifiedTime() <= 0) {
            jsw.setServletClassLastModifiedTime(
                javaCompiler.getClassLastModified());
        }
        // END CR 6373479

        if (options.getSaveBytecode()) {
            javaCompiler.saveClassFile(ctxt.getFullClassName(),
                                       ctxt.getClassFileName());
        }

        // On some systems, due to file caching, the time stamp for the updated
        // JSP file may actually be greater than that of the newly created byte
        // codes in the cache.  In such cases, adjust the cache time stamp to
        // JSP page time, to avoid unnecessary recompilations.
        ctxt.getRuntimeContext().adjustBytecodeTime(ctxt.getFullClassName(),
                                                    jspModTime);
    }",Compile the servlet from . java file to . class file,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java,"[{'Syntax': 'ctxt.getServletJavaFileName()', 'FunctionName': 'getServletJavaFileName', 'ArgsCount': 0, 'MethodBody': 'public String getServletJavaFileName() {\n\n        if (servletJavaFileName == null) {\n            servletJavaFileName =\n\t\tgetOutputDir() + getServletClassName() + "".java"";\n        }\n        return servletJavaFileName;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'setJavaCompilerOptions()', 'FunctionName': 'setJavaCompilerOptions', 'ArgsCount': 0, 'MethodBody': 'private void setJavaCompilerOptions() {\n\n        if (javaCompilerOptionsSet) {\n            return;\n        }\n        javaCompilerOptionsSet = true;\n\n        String classpath = ctxt.getClassPath(); \n        String sep = System.getProperty(""path.separator"");\n\n        // Initializing classpath\n        ArrayList<File> cpath = new ArrayList<File>();\n        HashSet<String> paths = new HashSet<String>();\n\n        // Process classpath, which includes system classpath from compiler\n        // options, plus the context classpath from the classloader\n        String sysClassPath = options.getSystemClassPath();\n        if (sysClassPath != null) {\n            StringTokenizer tokenizer = new StringTokenizer(sysClassPath, sep);\n            while (tokenizer.hasMoreElements()) {\n                String path = tokenizer.nextToken();\n                if (! paths.contains(path) && ! systemJarInWebinf(path)) {\n                    paths.add(path);\n                    cpath.add(new File(path));\n                }\n            }\n        }\n        if (classpath != null) {\n            StringTokenizer tokenizer = new StringTokenizer(classpath, sep);\n            while (tokenizer.hasMoreElements()) {\n                String path = tokenizer.nextToken();\n                if (! paths.contains(path) && ! systemJarInWebinf(path)) {\n                    paths.add(path);\n                    cpath.add(new File(path));\n                }\n            }\n        }\n        if(log.isLoggable(Level.FINE)) {\n            log.fine(""Using classpath: "" + sysClassPath + sep + classpath);\n        }\n        javaCompiler.setClassPath(cpath);\n        \n        // Set debug info\n        javaCompiler.setDebug(options.getClassDebugInfo());\n\n        // Initialize and set java extensions\n        String exts = System.getProperty(""java.ext.dirs"");\n        if (exts != null) {\n            javaCompiler.setExtdirs(exts);\n        }\n\n        if (options.getCompilerTargetVM() != null) {\n            javaCompiler.setTargetVM(options.getCompilerTargetVM());\n        }\n\n        if (options.getCompilerSourceVM() != null) {\n            javaCompiler.setSourceVM(options.getCompilerSourceVM());\n        }\n\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java'}, {'Syntax': 'javaCompiler.compile(ctxt.getFullClassName(), pageNodes)', 'FunctionName': 'compile', 'ArgsCount': 2, 'MethodBody': 'public JavacErrorDetail[] compile(final String targetClassName,\n                                      final Node.Nodes pageNodes)\n            throws JasperException {\n\n        final String sourceFile = ctxt.getServletJavaFileName();\n        final String outputDir =\n            ctxt.getOptions().getScratchDir().getAbsolutePath();\n        String packageName = ctxt.getServletPackageName();\n\n        final ClassLoader classLoader = ctxt.getJspLoader();\n        String[] fileNames = new String[] {sourceFile};\n        String[] classNames = new String[] {targetClassName};\n        final ArrayList<JavacErrorDetail> problemList =\n                new ArrayList<JavacErrorDetail>();\n\n        class CompilationUnit implements ICompilationUnit {\n\n            String className;\n            String sourceFile;\n\n            CompilationUnit(String sourceFile, String className) {\n                this.className = className;\n                this.sourceFile = sourceFile;\n            }\n\n            public char[] getFileName() {\n                return className.toCharArray();\n            }\n            \n            public char[] getContents() {\n                char[] result = null;\n                Reader reader = null;\n                try {\n                    InputStreamReader isReader =\n                        new InputStreamReader(new FileInputStream(sourceFile),\n                                ctxt.getOptions().getJavaEncoding());\n                    reader = new BufferedReader(isReader);\n                    if (reader != null) {\n                        char[] chars = new char[8192];\n                        StringBuilder buf = new StringBuilder();\n                        int count;\n                        while ((count = reader.read(chars, 0, \n                                                    chars.length)) > 0) {\n                            buf.append(chars, 0, count);\n                        }\n                        result = new char[buf.length()];\n                        buf.getChars(0, result.length, result, 0);\n                    }\n                } catch (IOException e) {\n                    log.log(Level.SEVERE, ""Compilation error"", e);\n                } finally {\n                    if (reader != null) {\n                        try {\n                            reader.close();\n                        } catch (IOException ioe) {\n                            // Ignore\n                        }\n                    }\n                }\n                return result;\n            }\n            \n            public char[] getMainTypeName() {\n                int dot = className.lastIndexOf(\'.\');\n                if (dot > 0) {\n                    return className.substring(dot + 1).toCharArray();\n                }\n                return className.toCharArray();\n            }\n            \n            public char[][] getPackageName() {\n                StringTokenizer izer = \n                    new StringTokenizer(className, ""."");\n                char[][] result = new char[izer.countTokens()-1][];\n                for (int i = 0; i < result.length; i++) {\n                    String tok = izer.nextToken();\n                    result[i] = tok.toCharArray();\n                }\n                return result;\n            }\n            \n            public boolean ignoreOptionalProblems() {\n                return true;\n            }\n        }\n\n        final INameEnvironment env = new INameEnvironment() {\n\n                public NameEnvironmentAnswer \n                    findType(char[][] compoundTypeName) {\n                    String result = """";\n                    String sep = """";\n                    for (int i = 0; i < compoundTypeName.length; i++) {\n                        result += sep;\n                        result += new String(compoundTypeName[i]);\n                        sep = ""."";\n                    }\n                    return findType(result);\n                }\n\n                public NameEnvironmentAnswer \n                    findType(char[] typeName, \n                             char[][] packageName) {\n                        String result = """";\n                        String sep = """";\n                        for (int i = 0; i < packageName.length; i++) {\n                            result += sep;\n                            result += new String(packageName[i]);\n                            sep = ""."";\n                        }\n                        result += sep;\n                        result += new String(typeName);\n                        return findType(result);\n                }\n                \n                private NameEnvironmentAnswer findType(String className) {\n\n                    InputStream is = null;\n                    try {\n                        if (className.equals(targetClassName)) {\n                            ICompilationUnit compilationUnit = \n                                new CompilationUnit(sourceFile, className);\n                            return \n                                new NameEnvironmentAnswer(compilationUnit, null);\n                        }\n                        String resourceName = \n                            className.replace(\'.\', \'/\') + "".class"";\n                        is = classLoader.getResourceAsStream(resourceName);\n                        if (is != null) {\n                            byte[] classBytes;\n                            byte[] buf = new byte[8192];\n                            ByteArrayOutputStream baos = \n                                new ByteArrayOutputStream(buf.length);\n                            int count;\n                            while ((count = is.read(buf, 0, buf.length)) > 0) {\n                                baos.write(buf, 0, count);\n                            }\n                            baos.flush();\n                            classBytes = baos.toByteArray();\n                            char[] fileName = className.toCharArray();\n                            ClassFileReader classFileReader = \n                                new ClassFileReader(classBytes, fileName, \n                                                    true);\n                            return \n                                new NameEnvironmentAnswer(classFileReader, null);\n                        }\n                    } catch (IOException exc) {\n                        log.log(Level.SEVERE, ""Compilation error"", exc);\n                    } catch (org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException exc) {\n                        log.log(Level.SEVERE, ""Compilation error"", exc);\n                    } finally {\n                        if (is != null) {\n                            try {\n                                is.close();\n                            } catch (IOException exc) {\n                                // Ignore\n                            }\n                        }\n                    }\n                    return null;\n                }\n\n                private boolean isPackage(String result) {\n                    if (result.equals(targetClassName)) {\n                        return false;\n                    }\n                    String resourceName = result.replace(\'.\', \'/\') + "".class"";\n                    InputStream is = \n                        classLoader.getResourceAsStream(resourceName);\n                    return is == null;\n                }\n\n                public boolean isPackage(char[][] parentPackageName, \n                                         char[] packageName) {\n                    String result = """";\n                    String sep = """";\n                    if (parentPackageName != null) {\n                        for (int i = 0; i < parentPackageName.length; i++) {\n                            result += sep;\n                            String str = new String(parentPackageName[i]);\n                            result += str;\n                            sep = ""."";\n                        }\n                    }\n                    String str = new String(packageName);\n                    if (Character.isUpperCase(str.charAt(0))) {\n                        if (!isPackage(result)) {\n                            return false;\n                        }\n                    }\n                    result += sep;\n                    result += str;\n                    return isPackage(result);\n                }\n\n                public void cleanup() {\n                }\n\n            };\n\n        final IErrorHandlingPolicy policy = \n            DefaultErrorHandlingPolicies.proceedWithAllProblems();\n\n        if (ctxt.getOptions().getJavaEncoding() != null) {\n            settings.put(CompilerOptions.OPTION_Encoding,\n                    ctxt.getOptions().getJavaEncoding());\n        }\n\n        final IProblemFactory problemFactory = \n            new DefaultProblemFactory(Locale.getDefault());\n        \n        final ICompilerRequestor requestor = new ICompilerRequestor() {\n                public void acceptResult(CompilationResult result) {\n                    try {\n                        if (result.hasProblems()) {\n                            IProblem[] problems = safeGetProblems(result);\n                            for (int i = 0; i < problems.length; i++) {\n                                IProblem problem = problems[i];\n                                if (problem.isError()) {\n                                    String name = \n                                        new String(problems[i].getOriginatingFileName());\n                                    try {\n                                        problemList.add(\n                                            ErrorDispatcher.createJavacError(\n                                                name,\n                                                pageNodes,\n                                                new StringBuilder(problem.getMessage()), \n                                                problem.getSourceLineNumber()));\n                                    } catch (JasperException e) {\n                                        log.log(Level.SEVERE, ""Error visiting node"", e);\n                                    }\n                                }\n                            }\n                        }\n                        if (problemList.isEmpty()) {\n                            ClassFile[] classFiles = result.getClassFiles();\n                            for (int i = 0; i < classFiles.length; i++) {\n                                ClassFile classFile = classFiles[i];\n                                char[][] compoundName = \n                                    classFile.getCompoundName();\n                                String className = """";\n                                String sep = """";\n                                for (int j = 0; \n                                     j < compoundName.length; j++) {\n                                    className += sep;\n                                    className += new String(compoundName[j]);\n                                    sep = ""."";\n                                }\n                                byte[] bytes = classFile.getBytes();\n                                String outFile = outputDir + ""/"" + \n                                    className.replace(\'.\', \'/\') + "".class"";\n                                FileOutputStream fout = \n                                    new FileOutputStream(outFile);\n                                BufferedOutputStream bos = \n                                    new BufferedOutputStream(fout);\n                                bos.write(bytes);\n                                bos.close();\n                            }\n                        }\n                    } catch (IOException exc) {\n                        log.log(Level.SEVERE, ""Compilation error"", exc);\n                    }\n                }\n            };\n\n        ICompilationUnit[] compilationUnits = \n            new ICompilationUnit[classNames.length];\n        for (int i = 0; i < compilationUnits.length; i++) {\n            compilationUnits[i] = new CompilationUnit(fileNames[i], classNames[i]);\n        }\n\n        Compiler compiler = new Compiler(env,\n                                         policy,\n                                         settings,\n                                         requestor,\n                                         problemFactory);\n        compiler.compile(compilationUnits);\n\n        if (problemList.isEmpty()) {\n            return null;\n        }\n        return problemList.toArray(new JavacErrorDetail[]{});\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JDTJavaCompiler.java'}, {'Syntax': 'ctxt.getFullClassName()', 'FunctionName': 'getFullClassName', 'ArgsCount': 0, 'MethodBody': ""public String getFullClassName() {\n        if (isTagFile()) {\n            return tagInfo.getTagClassName();\n        }\n        return getServletPackageName() + '.' + getServletClassName();\n    }"", 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'javaCompiler.doJavaFile(true)', 'FunctionName': 'doJavaFile', 'ArgsCount': 1, 'MethodBody': 'public void doJavaFile(boolean keep) {\n        if (!keep) {\n            File javaFile = new File(javaFileName);\n            javaFile.delete();\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JDTJavaCompiler.java'}, {'Syntax': 'errDispatcher.javacError(javacErrors)', 'FunctionName': 'javacError', 'ArgsCount': 1, 'MethodBody': 'public void javacError(JavacErrorDetail[] details) throws JasperException {\n\n        if (details == null) {\n            return;\n        }\n\n\tObject[] args = null;\n        StringBuilder buf = new StringBuilder();\n\n        for (int i=0; i < details.length; i++) {\n            if (details[i].getJspBeginLineNumber() >= 0) {\n                args = new Object[] {\n                        Integer.valueOf(details[i].getJspBeginLineNumber()), \n                        details[i].getJspFileName() };\n                buf.append(Localizer.getMessage(""jsp.error.single.line.number"",\n                                                args));\n                buf.append(""\\n""); \n            }\n\n            buf.append(\n                Localizer.getMessage(""jsp.error.corresponding.servlet""));\n            buf.append(details[i].getErrorMessage());\n            buf.append(""\\n\\n"");\n        }\n\n        if (buf.length() == 0) {\n            throw new JasperException(Localizer.getMessage(""jsp.error.nojdk""));\n        }\n\tthrow new JasperException(\n            Localizer.getMessage(""jsp.error.unable.compile"") + ""\\n\\n"" + buf);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/DefaultErrorHandler.java'}, {'Syntax': 'javaCompiler.doJavaFile(ctxt.keepGenerated())', 'FunctionName': 'doJavaFile', 'ArgsCount': 1, 'MethodBody': 'public void doJavaFile(boolean keep) {\n        if (!keep) {\n            File javaFile = new File(javaFileName);\n            javaFile.delete();\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JDTJavaCompiler.java'}, {'Syntax': 'ctxt.keepGenerated()', 'FunctionName': 'keepGenerated', 'ArgsCount': 0, 'MethodBody': 'public boolean keepGenerated() {\n        return getOptions().getKeepGenerated();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'ctxt.isPrototypeMode()', 'FunctionName': 'isPrototypeMode', 'ArgsCount': 0, 'MethodBody': 'public boolean isPrototypeMode() {\n        return protoTypeMode;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'options.isSmapSuppressed()', 'FunctionName': 'isSmapSuppressed', 'ArgsCount': 0, 'MethodBody': 'public boolean isSmapSuppressed() {\n        return isSmapSuppressed;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/EmbeddedServletOptions.java'}, {'Syntax': 'smapUtil.installSmap()', 'FunctionName': 'installSmap', 'ArgsCount': 0, 'MethodBody': 'public void installSmap() throws IOException {\n\n        for (ClassInfo ci: classInfos) {\n            String className = ci.getClassName();\n            byte[] classfile = ctxt.getRuntimeContext().getBytecode(className);\n            if (classfile == null) {\n                SDEInstaller.install(new File(ci.getClassFileName()),\n                             ci.getSmap().getBytes(Charset.defaultCharset()));\n            }\n            else {\n                classfile = SDEInstaller.install(classfile,\n                             ci.getSmap().getBytes(Charset.defaultCharset()));\n                ctxt.getRuntimeContext().setBytecode(className, classfile);\n            }\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/SmapUtil.java'}, {'Syntax': 'jsw.getServletClassLastModifiedTime()', 'FunctionName': 'getServletClassLastModifiedTime', 'ArgsCount': 0, 'MethodBody': 'public long getServletClassLastModifiedTime() {\n        return servletClassLastModifiedTime;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/servlet/JspServletWrapper.java'}, {'Syntax': 'jsw.setServletClassLastModifiedTime(\n                javaCompiler.getClassLastModified())', 'FunctionName': 'setServletClassLastModifiedTime', 'ArgsCount': 1, 'MethodBody': 'public void setServletClassLastModifiedTime(long lastModified) {\n        if (this.servletClassLastModifiedTime < lastModified) {\n            synchronized (this) {\n                if (this.servletClassLastModifiedTime < lastModified) {\n                    this.servletClassLastModifiedTime = lastModified;\n                    reload = true;\n                }\n            }\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/servlet/JspServletWrapper.java'}, {'Syntax': 'javaCompiler.getClassLastModified()', 'FunctionName': 'getClassLastModified', 'ArgsCount': 0, 'MethodBody': 'public long getClassLastModified() {\n        File classFile = new File(ctxt.getClassFileName());\n        return classFile.lastModified();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JDTJavaCompiler.java'}, {'Syntax': 'options.getSaveBytecode()', 'FunctionName': 'getSaveBytecode', 'ArgsCount': 0, 'MethodBody': 'public boolean getSaveBytecode() {\n        return this.saveBytecode;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/EmbeddedServletOptions.java'}, {'Syntax': 'javaCompiler.saveClassFile(ctxt.getFullClassName(),\n                                       ctxt.getClassFileName())', 'FunctionName': 'saveClassFile', 'ArgsCount': 2, 'MethodBody': 'public void saveClassFile(String className, String classFileName) {\n        // class file are alwyas saved.\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JDTJavaCompiler.java'}, {'Syntax': 'ctxt.getFullClassName()', 'FunctionName': 'getFullClassName', 'ArgsCount': 0, 'MethodBody': ""public String getFullClassName() {\n        if (isTagFile()) {\n            return tagInfo.getTagClassName();\n        }\n        return getServletPackageName() + '.' + getServletClassName();\n    }"", 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'ctxt.getClassFileName()', 'FunctionName': 'getClassFileName', 'ArgsCount': 0, 'MethodBody': 'public String getClassFileName() {\n\n        if (classFileName == null) {\n            classFileName = getOutputDir() + getServletClassName() + "".class"";\n        }\n        return classFileName;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'ctxt.getRuntimeContext().adjustBytecodeTime(ctxt.getFullClassName(),\n                                                    jspModTime)', 'FunctionName': 'adjustBytecodeTime', 'ArgsCount': 2, 'MethodBody': 'public void adjustBytecodeTime(String name, long reference) {\n        Long time = bytecodeBirthTimes.get(name);\n        if (time == null)\n            return;\n\n        if (time.longValue() < reference) {\n            bytecodeBirthTimes.put(name, Long.valueOf(reference));\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspRuntimeContext.java'}, {'Syntax': 'ctxt.getRuntimeContext()', 'FunctionName': 'getRuntimeContext', 'ArgsCount': 0, 'MethodBody': 'public JspRuntimeContext getRuntimeContext() {\n        return rctxt;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}, {'Syntax': 'ctxt.getFullClassName()', 'FunctionName': 'getFullClassName', 'ArgsCount': 0, 'MethodBody': ""public String getFullClassName() {\n        if (isTagFile()) {\n            return tagInfo.getTagClassName();\n        }\n        return getServletPackageName() + '.' + getServletClassName();\n    }"", 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspCompilationContext.java'}]"
6621cda3cda9bd4817b11258,oblac/jodd,"protected boolean isGzipEligible(final HttpServletRequest request) {
		// request parameter name

		if (requestParameterName.length() != 0) {
			String forceGzipString = request.getParameter(requestParameterName);

			if (forceGzipString != null) {
				return Converter.get().toBooleanValue(forceGzipString, false);
			}
		}

		// extract uri

		String uri = request.getRequestURI();

		if (uri == null) {
			return false;
		}

		uri = uri.toLowerCase();

		boolean result = false;

		// check uri

		if (matches == null) {					// match == *
			if (extensions == null) {			// extensions == *
				return true;
			}
			// extension
			String extension = FileNameUtil.getExtension(uri);

			if (extension.length() > 0) {
				extension = extension.toLowerCase();

				if (StringUtil.equalsOne(extension, extensions) != -1) {
					result = true;
				}
			}
		} else {
			if (wildcards) {
				result = Wildcard.matchPathOne(uri, matches) != -1;
			} else {
				for (String match : matches) {
					if (uri.contains(match)) {
						result = true;
						break;
					}
				}
			}
		}

		if ((result) && (excludes != null)) {
			if (wildcards) {
				if (Wildcard.matchPathOne(uri, excludes) != -1) {
					result = false;
				}
			} else {
				for (String exclude : excludes) {
					if (uri.contains(exclude)) {
						result = false;						// excludes founded
						break;
					}
				}
			}
		}

		return result;
	}",Determine if request is eligible for GZipping .,jodd-servlet/src/main/java/jodd/servlet/filter/GzipFilter.java,"[{'Syntax': 'requestParameterName.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length() {\n\t\treturn length;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'request.getParameter(requestParameterName)', 'FunctionName': 'getParameter', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic String getParameter(final String name) {\n\t\tif (mreq == null) {\n\t\t\treturn super.getParameter(name);\n\t\t}\n\t\treturn mreq.getParameter(name);\n\t}', 'FileName': '/oblac/jodd/jodd-servlet/src/main/java/jodd/servlet/upload/MultipartRequestWrapper.java'}, {'Syntax': 'Converter.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public boolean get() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}, {'Syntax': 'extension.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length() {\n\t\treturn length;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}]"
6621cda3cda9bd4817b11259,rupertlssmith/lojix,"public List<E> get(int index)
    {
        /*log.fine(""public List<E> get(int index): called"");*/

        // Check that the index is not to large.
        int originalSize = original.size();
        int size = (originalSize / pageSize) + (((originalSize % pageSize) == 0) ? 0 : 1);

        /*log.fine(""originalSize = "" + originalSize);*/
        /*log.fine(""size = "" + size);*/

        // Check if the size of the underlying list is zero, in which case return an empty list, so long as page zero
        // was requested.
        if ((index == 0) && (originalSize == 0))
        {
            return new ArrayList<E>();
        }

        // Check if the requested index exceeds the number of pages, or is an illegal negative value.
        if ((index >= size) || (index < 0))
        {
            /*log.fine(""(index >= size) || (index < 0), throwing out of bounds exception."");*/
            throw new IndexOutOfBoundsException(""Index "" + index +
                "" is less than zero or more than the number of pages: "" + size);
        }

        // Extract the appropriate sub-list.
        // Note that if this is the last page it may not be a full page. Just up to the last page will be returned.
        /*log.fine(""Requesting sublist from, "" + (pageSize * index) + "", to ,"" +
            (((pageSize * (index + 1)) >= originalSize) ? originalSize : (pageSize * (index + 1))) + ""."");*/

        List<E> result =
            original.subList(pageSize * index,
                ((pageSize * (index + 1)) >= originalSize) ? originalSize : (pageSize * (index + 1)));

        return result;
    }",Extracts the sub - list at the specified page index . The returned list will have size equal to the page size unless it is the last page in which case it may not be a full page .,base/common/src/main/com/thesett/common/util/PagedList.java,"[{'Syntax': 'original.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size()\n        {\n            return table.size();\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/unittests/com/thesett/common/util/doublemaps/SymbolTableTestBase.java'}]"
6621cda3cda9bd4817b1125a,oblac/jodd,"protected String parseStringContent(final char quote) {
		final int startNdx = ndx;

		// roll-out until the end of the string or the escape char
		while (true) {
			final char c = input[ndx];

			if (c == quote) {
				// no escapes found, just use existing string
				ndx++;
				return new String(input, startNdx, ndx - 1 - startNdx);
			}

			if (c == '\\') {
				break;
			}

			ndx++;
		}

		// escapes found, proceed differently

		textLen = ndx - startNdx;

		growEmpty();

//		for (int i = startNdx, j = 0; j < textLen; i++, j++) {
//			text[j] = input[i];
//		}
		System.arraycopy(input, startNdx, text, 0, textLen);

		// escape char, process everything until the end
		while (true) {
			char c = input[ndx];

			if (c == quote) {
				// done
				ndx++;
				final String str = new String(text, 0, textLen);
				textLen = 0;
				return str;
			}

			if (c == '\\') {
				// escape char found
				ndx++;

				c = input[ndx];

				switch (c) {
					case '\""' : c = '\""'; break;
					case '\\' : c = '\\'; break;
					case '/' : c = '/'; break;
					case 'b' : c = '\b'; break;
					case 'f' : c = '\f'; break;
					case 'n' : c = '\n'; break;
					case 'r' : c = '\r'; break;
					case 't' : c = '\t'; break;
					case 'u' :
						ndx++;
						c = parseUnicode();
						break;
					default:
						if (looseMode) {
							if (c != '\'') {
								c = '\\';
								ndx--;
							}
						}
						else {
							syntaxError(""Invalid escape char: "" + c);
						}
				}
			}

			text[textLen] = c;

			textLen++;

			growAndCopy();

			ndx++;
		}
	}",Parses string content once when starting quote has been consumed .,jodd-json/src/main/java/jodd/json/JsonParser.java,[]
6621cda3cda9bd4817b1125b,oblac/jodd,"protected Target[] makeTargets(final Target actionTarget, final MethodParam[] methodParams) {
		if (methodParams == null) {
			// action does not have method parameters, so there is just one target
			return new Target[]{actionTarget};
		}

		// action has method arguments, so there is more then one target
		final Target[] target = new Target[methodParams.length + 1];
		target[0] = actionTarget;

		final Object action = actionTarget.value();

		for (int i = 0; i < methodParams.length; i++) {
			final MethodParam methodParam = methodParams[i];
			final Class paramType = methodParam.type();

			final Target paramTarget;

			if (methodParam.annotationType() == null) {
				// parameter is NOT annotated, create new value for the target
				// the class itself will be a base class, and should be scanned

				final ScopeData newScopeData = methodParam.scopeData().inspector().inspectClassScopesWithCache(paramType);
				paramTarget = Target.ofValue(createActionMethodArgument(paramType, action), newScopeData);
			}
			else if (methodParam.annotationType() == Out.class) {
				// parameter is annotated with *only* OUT annotation
				// create the output value now AND to save the type
				paramTarget = Target.ofMethodParam(methodParam, createActionMethodArgument(paramType, action));
			}
			else {
				// parameter is annotated with any IN annotation
				// create target with NO value, as the value will be created later
				paramTarget = Target.ofMethodParam(methodParam, type -> createActionMethodArgument(type, action));
			}

			target[i + 1] = paramTarget;
		}
		return target;
	}",Joins action and parameters into one single array of Targets .,jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java,"[{'Syntax': 'actionTarget.value()', 'FunctionName': 'value', 'ArgsCount': 0, 'MethodBody': 'public String value() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/ResultPath.java'}, {'Syntax': 'methodParam.type()', 'FunctionName': 'type', 'ArgsCount': 0, 'MethodBody': 'public Class type() {\n\t\treturn type;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/InjectionPoint.java'}, {'Syntax': 'methodParam.annotationType()', 'FunctionName': 'annotationType', 'ArgsCount': 0, 'MethodBody': 'public Class<? extends Annotation> annotationType() {\n\t\treturn annotationType;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/MethodParam.java'}, {'Syntax': 'methodParam.scopeData().inspector().inspectClassScopesWithCache(paramType)', 'FunctionName': 'inspectClassScopesWithCache', 'ArgsCount': 1, 'MethodBody': 'public ScopeData inspectClassScopesWithCache(final Class actionClass) {\n\t\treturn scopeDataTypeCache.get(actionClass, this::inspectClassScopes);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ScopeDataInspector.java'}, {'Syntax': 'methodParam.scopeData().inspector()', 'FunctionName': 'inspector', 'ArgsCount': 0, 'MethodBody': 'public ScopeDataInspector inspector() {\n\t\treturn scopeDataInspector;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/ScopeData.java'}, {'Syntax': 'methodParam.scopeData()', 'FunctionName': 'scopeData', 'ArgsCount': 0, 'MethodBody': 'public ScopeData scopeData() {\n\t\treturn scopeData;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Target.java'}, {'Syntax': 'Target.ofValue(createActionMethodArgument(paramType, action), newScopeData)', 'FunctionName': 'ofValue', 'ArgsCount': 2, 'MethodBody': 'public static Target ofValue(final Object value, final ScopeData scopeData) {\n\t\treturn new Target(value, null, scopeData, null, VALUE_INSTANCE_CREATOR);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Target.java'}, {'Syntax': 'createActionMethodArgument(paramType, action)', 'FunctionName': 'createActionMethodArgument', 'ArgsCount': 2, 'MethodBody': '@SuppressWarnings({""unchecked"", ""NullArgumentToVariableArgMethod""})\n\tprotected Object createActionMethodArgument(final Class type, final Object action) {\n\t\ttry {\n\t\t\tif (type.getEnclosingClass() == null || Modifier.isStatic(type.getModifiers())) {\n\t\t\t\t// regular or static class\n\t\t\t\treturn ClassUtil.newInstance(type);\n\t\t\t} else {\n\t\t\t\t// member class\n\t\t\t\tfinal Constructor ctor = type.getDeclaredConstructor(type.getDeclaringClass());\n\t\t\t\tctor.setAccessible(true);\n\t\t\t\treturn ctor.newInstance(action);\n\t\t\t}\n\t\t} catch (final Exception ex) {\n\t\t\tthrow new MadvocException(ex);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java'}, {'Syntax': 'methodParam.annotationType()', 'FunctionName': 'annotationType', 'ArgsCount': 0, 'MethodBody': 'public Class<? extends Annotation> annotationType() {\n\t\treturn annotationType;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/MethodParam.java'}, {'Syntax': 'Target.ofMethodParam(methodParam, createActionMethodArgument(paramType, action))', 'FunctionName': 'ofMethodParam', 'ArgsCount': 2, 'MethodBody': 'public static Target ofMethodParam(final MethodParam methodParam, final Object object) {\n\t\treturn new Target(object, methodParam.type(), methodParam.scopeData(), methodParam.mapperFunction(), VALUE_INSTANCE_CREATOR);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Target.java'}, {'Syntax': 'createActionMethodArgument(paramType, action)', 'FunctionName': 'createActionMethodArgument', 'ArgsCount': 2, 'MethodBody': '@SuppressWarnings({""unchecked"", ""NullArgumentToVariableArgMethod""})\n\tprotected Object createActionMethodArgument(final Class type, final Object action) {\n\t\ttry {\n\t\t\tif (type.getEnclosingClass() == null || Modifier.isStatic(type.getModifiers())) {\n\t\t\t\t// regular or static class\n\t\t\t\treturn ClassUtil.newInstance(type);\n\t\t\t} else {\n\t\t\t\t// member class\n\t\t\t\tfinal Constructor ctor = type.getDeclaredConstructor(type.getDeclaringClass());\n\t\t\t\tctor.setAccessible(true);\n\t\t\t\treturn ctor.newInstance(action);\n\t\t\t}\n\t\t} catch (final Exception ex) {\n\t\t\tthrow new MadvocException(ex);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java'}, {'Syntax': 'Target.ofMethodParam(methodParam, type -> createActionMethodArgument(type, action))', 'FunctionName': 'ofMethodParam', 'ArgsCount': 2, 'MethodBody': 'public static Target ofMethodParam(final MethodParam methodParam, final Object object) {\n\t\treturn new Target(object, methodParam.type(), methodParam.scopeData(), methodParam.mapperFunction(), VALUE_INSTANCE_CREATOR);\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Target.java'}, {'Syntax': 'createActionMethodArgument(type, action)', 'FunctionName': 'createActionMethodArgument', 'ArgsCount': 2, 'MethodBody': '@SuppressWarnings({""unchecked"", ""NullArgumentToVariableArgMethod""})\n\tprotected Object createActionMethodArgument(final Class type, final Object action) {\n\t\ttry {\n\t\t\tif (type.getEnclosingClass() == null || Modifier.isStatic(type.getModifiers())) {\n\t\t\t\t// regular or static class\n\t\t\t\treturn ClassUtil.newInstance(type);\n\t\t\t} else {\n\t\t\t\t// member class\n\t\t\t\tfinal Constructor ctor = type.getDeclaredConstructor(type.getDeclaringClass());\n\t\t\t\tctor.setAccessible(true);\n\t\t\t\treturn ctor.newInstance(action);\n\t\t\t}\n\t\t} catch (final Exception ex) {\n\t\t\tthrow new MadvocException(ex);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java'}]"
6621cda3cda9bd4817b1125c,wro4j/wro4j,"private synchronized ResourcePreProcessor decoratePreProcessor(final ResourcePreProcessor processor,
      final ProcessingCriteria criteria) {
    final ResourcePreProcessor decorated = new DefaultProcessorDecorator(processor, criteria) {
      @Override
      public void process(final Resource resource, final Reader reader, final Writer writer)
          throws IOException {
        try {
          callbackRegistry.onBeforePreProcess();
          super.process(resource, reader, writer);
        } finally {
          callbackRegistry.onAfterPreProcess();
        }
      }
    };
    injector.inject(decorated);
    return decorated;
  }",Decorates preProcessor with mandatory decorators . This method is synchronized to ensure that processor is injected before it is being used by other thread .,wro4j-core/src/main/java/ro/isdc/wro/model/group/processor/PreProcessorExecutor.java,"[{'Syntax': 'callbackRegistry.onBeforePreProcess()', 'FunctionName': 'onBeforePreProcess', 'ArgsCount': 0, 'MethodBody': 'void onBeforePreProcess();', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/manager/callback/LifecycleCallback.java'}, {'Syntax': 'super.process(resource, reader, writer)', 'FunctionName': 'process', 'ArgsCount': 3, 'MethodBody': '@Override\n\t\t\tpublic void process(final Resource resource, final Reader reader, final Writer writer) throws IOException {\n\t\t\t\tgetProgressIndicator().onProcessingResource(resource);\n\t\t\t\tif (resource != null) {\n\t\t\t\t\tgetLog().info(""processing resource: "" + resource.getUri());\n\t\t\t\t}\n\t\t\t\t// use StringWriter to discard the merged processed result (linting is useful\n\t\t\t\t// only for reporting errors).\n\t\t\t\tsuper.process(resource, reader, new NullWriter());\n\t\t\t}', 'FileName': '/wro4j/wro4j/wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/JsLintMojo.java'}, {'Syntax': 'callbackRegistry.onAfterPreProcess()', 'FunctionName': 'onAfterPreProcess', 'ArgsCount': 0, 'MethodBody': 'void onAfterPreProcess();', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/manager/callback/LifecycleCallback.java'}, {'Syntax': 'injector.inject(decorated)', 'FunctionName': 'inject', 'ArgsCount': 1, 'MethodBody': 'public <T> T inject(final T object) {\r\n    notNull(object);\r\n//    if (!Context.isContextSet()) {\r\n//      throw new WroRuntimeException(""No Context Set"");\r\n//    }\r\n    if (!injectedObjects.containsKey(computeKey(object))) {\r\n      injectedObjects.put(computeKey(object), true);\r\n      processInjectAnnotation(object);\r\n    }\r\n    return object;\r\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/model/group/processor/Injector.java'}]"
6621cda3cda9bd4817b1125d,oblac/jodd,"public void deleteById(final Object entity) {
		if (entity != null) {
			int result = query(dbOom.entities().deleteById(entity)).autoClose().executeUpdate();

			if (result != 0) {
				// now reset the ID value
				Class type = entity.getClass();
				DbEntityDescriptor ded = dbOom.entityManager().lookupType(type);

				setEntityId(ded, entity, 0);
			}
		}
	}",Delete single object by its id . Resets ID value .,jodd-db/src/main/java/jodd/db/oom/dao/GenericDao.java,[]
6621cda3cda9bd4817b1125e,Unidata/thredds,"private static String xunescapeString(String in, char escape, boolean spaceplus)
    {
        try {
            if(in == null) return null;

            byte[] utf8 = in.getBytes(utf8Charset);
            byte escape8 = (byte) escape;
            byte[] out = new byte[utf8.length]; // Should be max we need

            int index8 = 0;
            for(int i = 0; i < utf8.length; ) {
                byte b = utf8[i++];
                if(b == plus && spaceplus) {
                    out[index8++] = blank;
                } else if(b == escape8) {
                    // check to see if there are enough characters left
                    if(i + 2 <= utf8.length) {
                        b = (byte) (fromHex(utf8[i]) << 4 | fromHex(utf8[i + 1]));
                        i += 2;
                    }
                }
                out[index8++] = b;
            }
            return new String(out, 0, index8, utf8Charset);
        } catch (Exception e) {
            return in;
        }

    }",Given a string that contains WWW escape sequences translate those escape sequences back into ASCII characters . Return the modified string .,httpservices/src/main/java/ucar/httpservices/Escape.java,[]
6621cda3cda9bd4817b1125f,ngageoint/geopackage-android,"public int[] getPixelValues(byte[] imageBytes) {

        PngReaderInt reader = new PngReaderInt(new ByteArrayInputStream(imageBytes));
        validateImageType(reader);
        int[] pixels = new int[reader.imgInfo.cols * reader.imgInfo.rows];
        int rowNumber = 0;
        while (reader.hasMoreRows()) {
            ImageLineInt row = reader.readRowInt();
            int[] rowValues = row.getScanline();
            System.arraycopy(rowValues, 0, pixels, rowNumber * reader.imgInfo.cols, rowValues.length);
            rowNumber++;
        }
        reader.close();

        return pixels;
    }",Get the pixel values of the image as 16 bit unsigned integer values,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataPng.java,"[{'Syntax': 'validateImageType(reader)', 'FunctionName': 'validateImageType', 'ArgsCount': 1, 'MethodBody': 'public static void validateImageType(PngReader reader) {\n        if (reader == null) {\n            throw new GeoPackageException(""The image is null"");\n        }\n        if (reader.imgInfo.channels != 1 || reader.imgInfo.bitDepth != 16) {\n            throw new GeoPackageException(\n                    ""The coverage data tile is expected to be a single channel 16 bit unsigned short, channels: ""\n                            + reader.imgInfo.channels + "", bits: "" + reader.imgInfo.bitDepth);\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataPng.java'}, {'Syntax': 'reader.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n    public void close() {\n        super.close();\n        if (invalidCursor != null) {\n            invalidCursor.close();\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}]"
6621cda3cda9bd4817b11260,DigitalPebble/storm-crawler,"private long throttleQueries() {
        if (timeLastQuerySent != 0) {
            // check that we allowed some time between queries
            long difference = System.currentTimeMillis() - timeLastQuerySent;
            if (difference < minDelayBetweenQueries) {
                return minDelayBetweenQueries - difference;
            }
        }
        return -1;
    }",Returns the amount of time to wait if the backend was queried too recently and needs throttling or - 1 if the backend can be queried straight away .,core/src/main/java/com/digitalpebble/stormcrawler/persistence/AbstractQueryingSpout.java,[]
6621cda3cda9bd4817b11261,orientechnologies/orientdb,"public ORecord saveRecord(final ORecord iRecord, final String iClusterName, final OPERATION_MODE iMode, boolean iForceCreate,
      final ORecordCallback<? extends Number> iRecordCreatedCallback, ORecordCallback<Integer> iRecordUpdatedCallback) {
    try {

      return database.saveAll(iRecord, iClusterName, iMode, iForceCreate, iRecordCreatedCallback, iRecordUpdatedCallback);

    } catch (Exception e) {
      // REMOVE IT FROM THE CACHE TO AVOID DIRTY RECORDS
      final ORecordId rid = (ORecordId) iRecord.getIdentity();
      if (rid.isValid())
        database.getLocalCache().freeRecord(rid);

      if (e instanceof ONeedRetryException)
        throw (ONeedRetryException) e;

      throw OException.wrapException(
          new ODatabaseException(""Error during saving of record"" + (iRecord != null ? "" with rid "" + iRecord.getIdentity() : """")),
          e);
    }
  }",Update the record .,core/src/main/java/com/orientechnologies/orient/core/tx/OTransactionNoTx.java,"[{'Syntax': 'database.saveAll(iRecord, iClusterName, iMode, iForceCreate, iRecordCreatedCallback, iRecordUpdatedCallback)', 'FunctionName': 'saveAll', 'ArgsCount': 6, 'MethodBody': '@Override\n  public ORecord saveAll(\n      ORecord iRecord,\n      String iClusterName,\n      OPERATION_MODE iMode,\n      boolean iForceCreate,\n      ORecordCallback<? extends Number> iRecordCreatedCallback,\n      ORecordCallback<Integer> iRecordUpdatedCallback) {\n    OTransactionOptimisticClient tx =\n        new OTransactionOptimisticClient(this) {\n          @Override\n          protected void checkTransactionValid() {}\n        };\n    tx.begin();\n    tx.saveRecord(\n        iRecord, iClusterName, iMode, iForceCreate, iRecordCreatedCallback, iRecordUpdatedCallback);\n    tx.commit();\n\n    return iRecord;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/db/document/ODatabaseDocumentRemote.java'}, {'Syntax': 'iRecord.getIdentity()', 'FunctionName': 'getIdentity', 'ArgsCount': 0, 'MethodBody': 'public ORID getIdentity() {\n    return identity;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordRequest.java'}, {'Syntax': 'rid.isValid()', 'FunctionName': 'isValid', 'ArgsCount': 0, 'MethodBody': 'public boolean isValid() {\n    return this.sessionId >= 0 && !isExpired();\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemoteNodeSession.java'}, {'Syntax': 'database.getLocalCache().freeRecord(rid)', 'FunctionName': 'freeRecord', 'ArgsCount': 1, 'MethodBody': 'public ORecord freeRecord(final ORID rid) {\n    return underlying.remove(rid);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/cache/OAbstractRecordCache.java'}, {'Syntax': 'database.getLocalCache()', 'FunctionName': 'getLocalCache', 'ArgsCount': 0, 'MethodBody': 'public OLocalRecordCache getLocalCache() {\n    return underlying.getLocalCache();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/db/ODatabaseWrapperAbstract.java'}, {'Syntax': 'OException.wrapException(\r\n          new ODatabaseException(""Error during saving of record"" + (iRecord != null ? "" with rid "" + iRecord.getIdentity() : """")),\r\n          e)', 'FunctionName': 'wrapException', 'ArgsCount': 2, 'MethodBody': 'public static OException wrapException(final OException exception, final Throwable cause) {\n    if (cause instanceof OHighLevelException) return (OException) cause;\n\n    exception.initCause(cause);\n    return exception;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/exception/OException.java'}, {'Syntax': 'iRecord.getIdentity()', 'FunctionName': 'getIdentity', 'ArgsCount': 0, 'MethodBody': 'public ORID getIdentity() {\n    return identity;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordRequest.java'}]"
6621cda3cda9bd4817b11262,jillesvangurp/urlbuilder,"public UrlBuilder queryParam(String name, String value, boolean encode) {
        if (StringUtils.isNotEmpty(value)) {
            if (encode) {
                try {
                    value = URLEncoder.encode(value, ""UTF-8"");
                } catch (UnsupportedEncodingException e) {
                    throw new IllegalStateException(e);
                }
            }
            params.add(new EntryImpl(name, value));
        }
        return this;
    }",Create a query parameter with a String value .,src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java,[]
6621cda3cda9bd4817b11263,wildfly/wildfly,"public java.lang.Object lookupLink(String name) throws NamingException {
        return lookupLink(new CompositeName(name));
    }",Is mapped to resolve in the COS Naming api .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/CNCtx.java,"[{'Syntax': 'lookupLink(new CompositeName(name))', 'FunctionName': 'lookupLink', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Object lookupLink(final Name name) throws NamingException {\n        return CNCtxFactory.INSTANCE.getInitialContext(environment).lookupLink(name);\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/WrapperInitialContext.java'}]"
6621cda3cda9bd4817b11264,rupertlssmith/lojix,"protected static OpSymbol checkAndResolveToFixity(CandidateOpSymbol candidate, OpSymbol.Fixity... fixities)
        throws SourceCodeException
    {
        OpSymbol result = null;

        for (OpSymbol.Fixity fixity : fixities)
        {
            result = candidate.getPossibleOperators().get(fixity);

            if (result != null)
            {
                break;
            }
        }

        if (result == null)
        {
            throw new SourceCodeException(""Operator "" + candidate + "" must be one of "" + Arrays.toString(fixities) +
                "", but does not have the required form."", null, null, null, candidate.getSourceCodePosition());
        }

        return result;
    }",Checks if a candidate operator symbol can have one of the specified fixities and resolve it to an oeprator with that fixity if so . If it cannot be resolved an exception is raised .,lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/DynamicOperatorParser.java,"[{'Syntax': 'candidate.getPossibleOperators().get(fixity)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name)\n    {\n        return pageContext.getAttribute(name, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}, {'Syntax': 'candidate.getPossibleOperators()', 'FunctionName': 'getPossibleOperators', 'ArgsCount': 0, 'MethodBody': 'public EnumMap<OpSymbol.Fixity, OpSymbol> getPossibleOperators()\n    {\n        return possibleOperators;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/CandidateOpSymbol.java'}, {'Syntax': 'Arrays.toString(fixities)', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'public String toString(WAMInstruction instruction)\n            {\n                return toStringReg1Fn(pretty, instruction);\n            }', 'FileName': '/rupertlssmith/lojix/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/compiler/WAMInstruction.java'}, {'Syntax': 'candidate.getSourceCodePosition()', 'FunctionName': 'getSourceCodePosition', 'ArgsCount': 0, 'MethodBody': 'public SourceCodePosition getSourceCodePosition()\n    {\n        return sourceCodePosition;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/parsing/SourceCodeException.java'}]"
6621cda3cda9bd4817b11265,cglib/cglib,"public void load_arg(int index) {
        load_local(state.argumentTypes[index],
                   state.localOffset + skipArgs(index));
    }",Pushes the specified argument of the current method onto the stack .,cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java,"[{'Syntax': 'load_local(state.argumentTypes[index],\n                   state.localOffset + skipArgs(index))', 'FunctionName': 'load_local', 'ArgsCount': 2, 'MethodBody': 'private void load_local(Type t, int pos) {\n        // TODO: make t == null ok?\n        mv.visitVarInsn(t.getOpcode(Constants.ILOAD), pos);\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}, {'Syntax': 'skipArgs(index)', 'FunctionName': 'skipArgs', 'ArgsCount': 1, 'MethodBody': 'private int skipArgs(int numArgs) {\n        int amount = 0;\n        for (int i = 0; i < numArgs; i++) {\n            amount += state.argumentTypes[i].getSize();\n        }\n        return amount;\n    }', 'FileName': '/cglib/cglib/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java'}]"
6621cda3cda9bd4817b11266,ngageoint/geopackage-android,"public GeoPackageMetadata getOrCreate(String geoPackage) {
        GeoPackageMetadata metadata = get(geoPackage);

        if (metadata == null) {
            metadata = new GeoPackageMetadata();
            metadata.setName(geoPackage);
            create(metadata);
        }

        return metadata;
    }",Get GeoPackage metadata or create it if it does not exist,geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadataDataSource.java,"[{'Syntax': 'get(geoPackage)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(UserQueryParamType type) {\n        return params.get(type);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserQuery.java'}, {'Syntax': 'metadata.setName(geoPackage)', 'FunctionName': 'setName', 'ArgsCount': 1, 'MethodBody': 'public void setName(String name) {\n        setValue(getNameColumnIndex(), name);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/IconRow.java'}, {'Syntax': 'create(metadata)', 'FunctionName': 'create', 'ArgsCount': 1, 'MethodBody': 'public boolean create(String database);', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/GeoPackageManager.java'}]"
6621cda3cda9bd4817b11267,Unidata/thredds,"public static String getHeader() {
    StringBuilder headerB = new StringBuilder(60);
    headerB.append(""Name"");
    Format.tab(headerB, 20, true);
    headerB.append(""Class"");
    Format.tab(headerB, 40, true);
    headerB.append(""Parameters"");
    return headerB.toString();
  }",Get a header for display .,cdm/src/main/java/ucar/unidata/geoloc/ProjectionImpl.java,[]
6621cda3cda9bd4817b11268,vdmeer/execs,"public Map<URI, String> getCfLocations(){
		if(this.needsReRun==true){
			this.locationMap.clear();
			String pathSep = System.getProperty(""path.separator"");
			String classpath = System.getProperty(""java.class.path"");
			StringTokenizer st = new StringTokenizer(classpath, pathSep);

			File file = null;
			while(st.hasMoreTokens()){
				String path = st.nextToken();
				file = new File(path);
				this.include(file);
			}
		}

		this.needsReRun = false;
		return this.locationMap;
	}",Runs the locator and collects all locations using the filters if set . The method can be called multiple times and will only result in a new map if any of the filters have been changed . If no filter has been changed the current map will be returned .,src/main/java/de/vandermeer/execs/cf/CF_Locator.java,"[{'Syntax': 'this.locationMap.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'public CF clear(){\n\t\tthis.errors.clear();\n\t\tthis.processed.clear();\n\t\treturn this;\n\t}', 'FileName': '/vdmeer/execs/src/main/java/de/vandermeer/execs/cf/CF.java'}, {'Syntax': 'this.include(file)', 'FunctionName': 'include', 'ArgsCount': 1, 'MethodBody': 'protected final void include(File file){\n\t\tthis.include(null, file);\n\t}', 'FileName': '/vdmeer/execs/src/main/java/de/vandermeer/execs/cf/CF_Locator.java'}]"
6621cda3cda9bd4817b11269,deeplearning4j/nd4j,"public static <U extends Aggregate> List<Batch<U>> getBatches(List<U> list, int partitionSize) {
        List<List<U>> partitions = Lists.partition(list, partitionSize);
        List<Batch<U>> split = new ArrayList<>();

        for (List<U> partition : partitions) {
            split.add(new Batch<U>(partition));
        }

        return split;
    }",Helper method to create batch from list of aggregates for cases when list of aggregates is higher then batchLimit,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/ops/aggregates/Batch.java,[]
6621cda3cda9bd4817b1126a,streamsets/datacollector,"private static String retrieveUserToken(String url, String username, String password) {
    Response response = null;
    try {
      Map<String, String> loginJson = new HashMap<>();
      loginJson.put(""userName"", username);
      loginJson.put(""password"", password);
      response = ClientBuilder.newClient()
          .target(url + ""/security/public-rest/v1/authentication/login"")
          .register(new CsrfProtectionFilter(""CSRF""))
          .request()
          .post(Entity.json(loginJson));
      if (response.getStatus() != Response.Status.OK.getStatusCode()) {
        throw new RuntimeException(Utils.format(""DPM Login failed, status code '{}': {}"",
            response.getStatus(),
            response.readEntity(String.class)
        ));
      }
    } finally {
      if (response != null) {
        response.close();
      }
    }

   return response.getHeaderString(SSOConstants.X_USER_AUTH_TOKEN);
  }",Login user and retrieve authentication token .,container/src/main/java/com/streamsets/datacollector/cli/sch/SchAdmin.java,[]
6621cda4cda9bd4817b1126b,RestComm/jain-slee,"public boolean profileExists(String profileName) {
		
		boolean result = component.getProfileEntityFramework().findProfile(this.getProfileTableName(), profileName) != null;
		
		if (logger.isDebugEnabled()) {
			logger.debug(""Profile named ""+profileName+(result ? """" : "" does not"")+"" exists on table named "" + this.getProfileTableName());
		} 
		
		return result;
	}",Determines if profile is in back end storage == visible to other compoenents than MBean if null is passed as argumetn it must check for any other than defualt?,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java,"[{'Syntax': 'component.getProfileEntityFramework().findProfile(this.getProfileTableName(), profileName)', 'FunctionName': 'findProfile', 'ArgsCount': 2, 'MethodBody': 'public ProfileEntity findProfile(String profileTable, String profileName) {\n\n\t\tEntityManager em = getEntityManager();\n\t\tQuery query = em.createQuery(\n\t\t\t\t""FROM "" + profileEntityClassName\n\t\t\t\t\t\t+ "" WHERE tableName = ?1 AND profileName = ?2"")\n\t\t\t\t.setParameter(1, profileTable).setParameter(2, profileName);\n\n\t\tList<?> resultList = query.getResultList();\n\t\tif (resultList.isEmpty()) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn (ProfileEntity) resultList.get(0);\n\t\t}\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/jpa/JPAProfileEntityFramework.java'}, {'Syntax': 'component.getProfileEntityFramework()', 'FunctionName': 'getProfileEntityFramework', 'ArgsCount': 0, 'MethodBody': 'public ProfileEntityFramework getProfileEntityFramework() {\r\n\t\treturn profileEntityFramework;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/ProfileSpecificationComponentImpl.java'}, {'Syntax': 'this.getProfileTableName()', 'FunctionName': 'getProfileTableName', 'ArgsCount': 0, 'MethodBody': 'public String getProfileTableName()\n        throws ManagementException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ProfileTableUsageMBean.java'}, {'Syntax': 'this.getProfileTableName()', 'FunctionName': 'getProfileTableName', 'ArgsCount': 0, 'MethodBody': 'public String getProfileTableName()\n        throws ManagementException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/management/ProfileTableUsageMBean.java'}]"
6621cda4cda9bd4817b1126c,rupertlssmith/lojix,"private void signalOnSizeThresholdCrossing(long oldSize, long newSize)
    {
        if (signalable != null)
        {
            if ((oldSize >= lowWaterSizeThreshold) && (newSize < lowWaterSizeThreshold))
            {
                signalable.signalAll();
            }
            else if ((oldSize >= highWaterSizeThreshold) && (newSize < highWaterSizeThreshold))
            {
                signalable.signal();
            }
        }
    }",Signals the signallable resource if the size crosses a threshold boundary in a downward direction .,base/common/src/main/com/thesett/common/util/queues/WrapperQueue.java,"[{'Syntax': 'signalable.signalAll()', 'FunctionName': 'signalAll', 'ArgsCount': 0, 'MethodBody': 'public void signalAll()\n    {\n        synchronized (monitor)\n        {\n            monitor.notifyAll();\n        }\n\n        if (signalable != null)\n        {\n            signalable.signalAll();\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/BaseUnaryCondition.java'}, {'Syntax': 'signalable.signal()', 'FunctionName': 'signal', 'ArgsCount': 0, 'MethodBody': 'public void signal()\n    {\n        synchronized (monitor)\n        {\n            monitor.notify();\n        }\n\n        if (signalable != null)\n        {\n            signalable.signal();\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/concurrent/BaseUnaryCondition.java'}]"
6621cda4cda9bd4817b1126d,jboss/jboss-common-core,"public void start(final boolean reset)
   {
      if (!running) {
         if (reset) reset();
         start = System.currentTimeMillis();
         running = true;
      }
   }",Start the watch .,src/main/java/org/jboss/util/StopWatch.java,"[{'Syntax': 'reset()', 'FunctionName': 'reset', 'ArgsCount': 0, 'MethodBody': 'public synchronized void reset() throws IOException\n   {\n      is.reset();\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/net/sockets/InterruptableInputStream.java'}, {'Syntax': 'System.currentTimeMillis()', 'FunctionName': 'currentTimeMillis', 'ArgsCount': 0, 'MethodBody': 'public long currentTimeMillis()\n   {\n      return now;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}]"
6621cda4cda9bd4817b1126e,hawkular/hawkular-metrics,"private String generateSubjectAccessReview(String namespace, String verb, String resource) {
        ObjectNode objectNode = objectMapper.createObjectNode();
        objectNode.put(""apiVersion"", ""v1"");
        objectNode.put(""kind"", KIND);
        objectNode.put(""resource"", resource);
        objectNode.put(""verb"", verb);
        objectNode.put(""namespace"", namespace);
        return objectNode.toString();
    }",Generates a SubjectAccessReview object used to request if a user has a certain permission or not .,containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java,"[{'Syntax': 'objectNode.put(""apiVersion"", ""v1"")', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'String put(String key, String value);', 'FileName': '/hawkular/hawkular-metrics/job-scheduler/src/main/java/org/hawkular/metrics/scheduler/api/JobParameters.java'}, {'Syntax': 'objectNode.put(""kind"", KIND)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'String put(String key, String value);', 'FileName': '/hawkular/hawkular-metrics/job-scheduler/src/main/java/org/hawkular/metrics/scheduler/api/JobParameters.java'}, {'Syntax': 'objectNode.put(""resource"", resource)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'String put(String key, String value);', 'FileName': '/hawkular/hawkular-metrics/job-scheduler/src/main/java/org/hawkular/metrics/scheduler/api/JobParameters.java'}, {'Syntax': 'objectNode.put(""verb"", verb)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'String put(String key, String value);', 'FileName': '/hawkular/hawkular-metrics/job-scheduler/src/main/java/org/hawkular/metrics/scheduler/api/JobParameters.java'}, {'Syntax': 'objectNode.put(""namespace"", namespace)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'String put(String key, String value);', 'FileName': '/hawkular/hawkular-metrics/job-scheduler/src/main/java/org/hawkular/metrics/scheduler/api/JobParameters.java'}, {'Syntax': 'objectNode.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override public String toString() {\n        return MoreObjects.toStringHelper(this)\n                .omitNullValues()\n                .add(""metrics"", metrics)\n                .add(""tags"", tags)\n                .add(""start"", start)\n                .add(""end"", end)\n                .add(""buckets"", buckets)\n                .add(""bucketDuration"", bucketDuration)\n                .add(""percentiles"", percentiles)\n                .add(""types"", types)\n                .toString();\n    }', 'FileName': '/hawkular/hawkular-metrics/api/metrics-api-jaxrs/src/main/java/org/hawkular/metrics/api/jaxrs/StatsQueryRequest.java'}]"
6621cda4cda9bd4817b1126f,oblac/jodd,"public Object map2bean(final Map map, Class targetType) {
		Object target = null;

		// create targets type
		String className = (String) map.get(classMetadataName);

		if (className == null) {
			if (targetType == null) {
				// nothing to do, no information about target type found
				target = map;
			}
		}
		else {
			checkClassName(jsonParser.classnameWhitelist, className);

			try {
				targetType = ClassLoaderUtil.loadClass(className);
			} catch (ClassNotFoundException cnfex) {
				throw new JsonException(cnfex);
			}
		}

		if (target == null) {
			target = jsonParser.newObjectInstance(targetType);
		}

		ClassDescriptor cd = ClassIntrospector.get().lookup(target.getClass());

		boolean targetIsMap = target instanceof Map;

		for (Object key : map.keySet()) {
			String keyName = key.toString();

			if (classMetadataName != null) {
				if (keyName.equals(classMetadataName)) {
					continue;
				}
			}

			PropertyDescriptor pd = cd.getPropertyDescriptor(keyName, declared);

			if (!targetIsMap && pd == null) {
				// target property does not exist, continue
				continue;
			}

			// value is one of JSON basic types, like Number, Map, List...
			Object value = map.get(key);

			Class propertyType = pd == null ? null : pd.getType();
			Class componentType = pd == null ? null : pd.resolveComponentType(true);

			if (value != null) {
				if (value instanceof List) {
					if (componentType != null && componentType != String.class) {
						value = generifyList((List) value, componentType);
					}
				}
				else if (value instanceof Map) {
					// if the value we want to inject is a Map...
					if (!ClassUtil.isTypeOf(propertyType, Map.class)) {
						// ... and if target is NOT a map
						value = map2bean((Map) value, propertyType);
					}
					else {
						// target is also a Map, but we might need to generify it
						Class keyType = pd == null ? null : pd.resolveKeyType(true);

						if (keyType != String.class || componentType != String.class) {
							// generify
							value = generifyMap((Map) value, keyType, componentType);
						}
					}
				}
			}

			if (targetIsMap) {
				((Map)target).put(keyName, value);
			}
			else {
				try {
					setValue(target, pd, value);
				} catch (Exception ignore) {
					ignore.printStackTrace();
				}
			}
		}

		return target;
	}",Converts map to target type .,jodd-json/src/main/java/jodd/json/MapToBean.java,"[{'Syntax': 'map.get(classMetadataName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'ClassIntrospector.get().lookup(target.getClass())', 'FunctionName': 'lookup', 'ArgsCount': 1, 'MethodBody': 'public ActionConfig lookup(final Class actionTypeOrAnnotationType) {\n\t\tfinal ActionConfig actionConfig = actionConfigs.get(actionTypeOrAnnotationType);\n\n\t\tif (actionConfig == null) {\n\t\t\tthrow new MadvocException(""ActionConfiguration not registered:"" + actionTypeOrAnnotationType.getName());\n\t\t}\n\t\treturn actionConfig;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionConfigManager.java'}, {'Syntax': 'ClassIntrospector.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public boolean get() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}, {'Syntax': 'key.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String toString() {\n\t\tString out = """";\n\t\tif (shortName != null) {\n\t\t\tout += ""-"" + shortName;\n\t\t}\n\t\tif (longName != null) {\n\t\t\tif (!out.isEmpty()) {\n\t\t\t\tout += "" | "";\n\t\t\t}\n\t\t\tout += ""--"" + longName;\n\t\t}\n\t\treturn out;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cli/Option.java'}, {'Syntax': 'keyName.equals(classMetadataName)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'map.get(key)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': '((Map)target).put(keyName, value)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void put(final K key, final V object) {\n\t\tput(key, object, timeout);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cda4cda9bd4817b11270,Unidata/thredds,"@Override
  public int[] findXYindexFromLatLonBounded(double lat, double lon, int[] result) {
    Projection dataProjection = getProjection();
    ProjectionPoint pp = dataProjection.latLonToProj(new LatLonPointImpl(lat, lon), new ProjectionPointImpl());

    return findXYindexFromCoordBounded(pp.getX(), pp.getY(), result);
  }",Given a lat lon point find the x y index in the coordinate system . If outside the range the closest point is returned,cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java,[]
6621cda4cda9bd4817b11271,ArpNetworking/logback-steno,"public static LogValueMap of(final String k1, final Object v1) {
        return builder()
                .put(k1, v1)
                .build();
    }",Construct an immutable map from one key - value pair . Although this is more convenient than the static factory methods this method does not capture the instance being logged .,src/main/java/com/arpnetworking/steno/LogValueMapFactory.java,"[{'Syntax': 'builder()\n                .put(k1, v1)\n                .build()', 'FunctionName': 'build', 'ArgsCount': 0, 'MethodBody': 'public LogValueMap build() {\n            if (_nullKeys) {\n                put(""_nullKeys"", true);\n            }\n            if (_nullValues) {\n                put(""_nullValues"", true);\n            }\n            return new LogValueMap(_target, _data);\n        }', 'FileName': '/ArpNetworking/logback-steno/src/main/java/com/arpnetworking/steno/LogValueMapFactory.java'}, {'Syntax': 'builder()\n                .put(k1, v1)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public Builder put(@Nullable final String key, @Nullable final Object value) {\n            if (key == null) {\n                _nullKeys = true;\n                return this;\n            }\n            if (value == null) {\n                _nullValues = true;\n                return this;\n            }\n            _data.put(key, value);\n            return this;\n        }', 'FileName': '/ArpNetworking/logback-steno/src/main/java/com/arpnetworking/steno/LogValueMapFactory.java'}, {'Syntax': 'builder()', 'FunctionName': 'builder', 'ArgsCount': 0, 'MethodBody': 'public static Builder builder() {\n        return new Builder(Optional.empty());\n    }', 'FileName': '/ArpNetworking/logback-steno/src/main/java/com/arpnetworking/steno/LogValueMapFactory.java'}]"
6621cda4cda9bd4817b11272,myabc/markdownj,"private TextEditor escapeSpecialCharsWithinTagAttributes(TextEditor text) {
        Collection<HTMLToken> tokens = text.tokenizeHTML();
        TextEditor newText = new TextEditor("""");

        for (HTMLToken token : tokens) {
            String value = token.getText();
            if (token.isTag()) {
                value = value.replaceAll(""\\\\"", CHAR_PROTECTOR.encode(""\\""));
                value = value.replaceAll(""`"", CHAR_PROTECTOR.encode(""`""));
                value = value.replaceAll(""\\*"", CHAR_PROTECTOR.encode(""*""));
                value = value.replaceAll(""_"", CHAR_PROTECTOR.encode(""_""));
            }
            newText.append(value);
        }

        return newText;
    }",escape special characters,core/src/main/java/org/markdownj/MarkdownProcessor.java,"[{'Syntax': 'text.tokenizeHTML()', 'FunctionName': 'tokenizeHTML', 'ArgsCount': 0, 'MethodBody': 'public Collection<HTMLToken> tokenizeHTML() {\n        List<HTMLToken> tokens = new ArrayList<HTMLToken>();\n        String nestedTags = nestedTagsRegex(6);\n\n        Pattern p = Pattern.compile("""" +\n                ""(?s:<!(--.*?--\\\\s*)+>)"" +\n                ""|"" +\n                ""(?s:<\\\\?.*?\\\\?>)"" +\n                ""|"" +\n                nestedTags +\n                """", Pattern.CASE_INSENSITIVE);\n\n        Matcher m = p.matcher(text);\n        int lastPos = 0;\n        while (m.find()) {\n            if (lastPos < m.start()) {\n                tokens.add(HTMLToken.text(text.substring(lastPos, m.start())));\n            }\n            tokens.add(HTMLToken.tag(text.substring(m.start(), m.end())));\n            lastPos = m.end();\n        }\n        if (lastPos < text.length()) {\n            tokens.add(HTMLToken.text(text.substring(lastPos, text.length())));\n        }\n\n        return tokens;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/TextEditor.java'}, {'Syntax': 'token.getText()', 'FunctionName': 'getText', 'ArgsCount': 0, 'MethodBody': 'public String getText() {\n        return text;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/HTMLToken.java'}, {'Syntax': 'token.isTag()', 'FunctionName': 'isTag', 'ArgsCount': 0, 'MethodBody': 'public boolean isTag() {\n        return isTag;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/HTMLToken.java'}, {'Syntax': 'value.replaceAll(""\\\\\\\\"", CHAR_PROTECTOR.encode(""\\\\""))', 'FunctionName': 'replaceAll', 'ArgsCount': 2, 'MethodBody': 'public TextEditor replaceAll(String regex, String replacement) {\n        if (text.length() > 0) {\n            final String r = replacement;\n            Pattern p = Pattern.compile(regex, Pattern.MULTILINE);\n            Matcher m = p.matcher(text);\n            StringBuffer sb = new StringBuffer();\n            while (m.find()) {\n                m.appendReplacement(sb, r);\n            }\n            m.appendTail(sb);\n            text = new StringBuilder(sb.toString());\n        }\n        return this;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/TextEditor.java'}, {'Syntax': 'CHAR_PROTECTOR.encode(""\\\\"")', 'FunctionName': 'encode', 'ArgsCount': 1, 'MethodBody': 'public String encode(String literal) {\n        String encoded = protectMap.get(literal);\n        if (encoded == null) {\n            synchronized (protectMap) {\n                encoded = protectMap.get(literal);\n                if (encoded == null) {\n                    encoded = addToken(literal);\n                }\n            }\n        }\n        return encoded;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/CharacterProtector.java'}, {'Syntax': 'value.replaceAll(""`"", CHAR_PROTECTOR.encode(""`""))', 'FunctionName': 'replaceAll', 'ArgsCount': 2, 'MethodBody': 'public TextEditor replaceAll(String regex, String replacement) {\n        if (text.length() > 0) {\n            final String r = replacement;\n            Pattern p = Pattern.compile(regex, Pattern.MULTILINE);\n            Matcher m = p.matcher(text);\n            StringBuffer sb = new StringBuffer();\n            while (m.find()) {\n                m.appendReplacement(sb, r);\n            }\n            m.appendTail(sb);\n            text = new StringBuilder(sb.toString());\n        }\n        return this;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/TextEditor.java'}, {'Syntax': 'CHAR_PROTECTOR.encode(""`"")', 'FunctionName': 'encode', 'ArgsCount': 1, 'MethodBody': 'public String encode(String literal) {\n        String encoded = protectMap.get(literal);\n        if (encoded == null) {\n            synchronized (protectMap) {\n                encoded = protectMap.get(literal);\n                if (encoded == null) {\n                    encoded = addToken(literal);\n                }\n            }\n        }\n        return encoded;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/CharacterProtector.java'}, {'Syntax': 'value.replaceAll(""\\\\*"", CHAR_PROTECTOR.encode(""*""))', 'FunctionName': 'replaceAll', 'ArgsCount': 2, 'MethodBody': 'public TextEditor replaceAll(String regex, String replacement) {\n        if (text.length() > 0) {\n            final String r = replacement;\n            Pattern p = Pattern.compile(regex, Pattern.MULTILINE);\n            Matcher m = p.matcher(text);\n            StringBuffer sb = new StringBuffer();\n            while (m.find()) {\n                m.appendReplacement(sb, r);\n            }\n            m.appendTail(sb);\n            text = new StringBuilder(sb.toString());\n        }\n        return this;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/TextEditor.java'}, {'Syntax': 'CHAR_PROTECTOR.encode(""*"")', 'FunctionName': 'encode', 'ArgsCount': 1, 'MethodBody': 'public String encode(String literal) {\n        String encoded = protectMap.get(literal);\n        if (encoded == null) {\n            synchronized (protectMap) {\n                encoded = protectMap.get(literal);\n                if (encoded == null) {\n                    encoded = addToken(literal);\n                }\n            }\n        }\n        return encoded;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/CharacterProtector.java'}, {'Syntax': 'value.replaceAll(""_"", CHAR_PROTECTOR.encode(""_""))', 'FunctionName': 'replaceAll', 'ArgsCount': 2, 'MethodBody': 'public TextEditor replaceAll(String regex, String replacement) {\n        if (text.length() > 0) {\n            final String r = replacement;\n            Pattern p = Pattern.compile(regex, Pattern.MULTILINE);\n            Matcher m = p.matcher(text);\n            StringBuffer sb = new StringBuffer();\n            while (m.find()) {\n                m.appendReplacement(sb, r);\n            }\n            m.appendTail(sb);\n            text = new StringBuilder(sb.toString());\n        }\n        return this;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/TextEditor.java'}, {'Syntax': 'CHAR_PROTECTOR.encode(""_"")', 'FunctionName': 'encode', 'ArgsCount': 1, 'MethodBody': 'public String encode(String literal) {\n        String encoded = protectMap.get(literal);\n        if (encoded == null) {\n            synchronized (protectMap) {\n                encoded = protectMap.get(literal);\n                if (encoded == null) {\n                    encoded = addToken(literal);\n                }\n            }\n        }\n        return encoded;\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/CharacterProtector.java'}, {'Syntax': 'newText.append(value)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public void append(CharSequence s) {\n        text.append(s);\n    }', 'FileName': '/myabc/markdownj/core/src/main/java/org/markdownj/TextEditor.java'}]"
6621cda4cda9bd4817b11273,Unidata/thredds,"void
    printXMLAttributes(DapNode node, CEConstraint ce, int flags)
            throws IOException
    {
        if((flags & PERLINE) != 0)
            printer.indent(2);

        // Print name first, if non-null and !NONAME
        // Note that the short name needs to use
        // entity escaping (which is done by printXMLattribute),
        // but backslash escaping is not required.
        String name = node.getShortName();
        if(name != null && (flags & NONAME) == 0) {
            name = node.getShortName();
            printXMLAttribute(""name"", name, flags);
        }

        switch (node.getSort()) {
        case DATASET:
            DapDataset dataset = (DapDataset) node;
            printXMLAttribute(""dapVersion"", dataset.getDapVersion(), flags);
            printXMLAttribute(""dmrVersion"", dataset.getDMRVersion(), flags);
            // boilerplate
            printXMLAttribute(""xmlns"", ""http://xml.opendap.org/ns/DAP/4.0#"", flags);
            printXMLAttribute(""xmlns:dap"", ""http://xml.opendap.org/ns/DAP/4.0#"", flags);
            break;

        case DIMENSION:
            DapDimension orig = (DapDimension) node;
            if(orig.isShared()) {//not Anonymous
                // name will have already been printed
                // Now, we need to get the size as defined by the constraint
                DapDimension actual = this.ce.getRedefDim(orig);
                if(actual == null)
                    actual = orig;
                long size = actual.getSize();
                printXMLAttribute(""size"", Long.toString(size), flags);
            }
            break;

        case ENUMERATION:
            printXMLAttribute(""basetype"", ((DapEnumeration) node).getBaseType().getTypeName(), flags);
            break;

        case VARIABLE:
            DapVariable var = (DapVariable) node;
            DapType basetype = var.getBaseType();
            if(basetype.isEnumType()) {
                printXMLAttribute(""enum"", basetype.getTypeName(), flags);
            }
            break;

        case ATTRIBUTE:
            DapAttribute attr = (DapAttribute) node;
            basetype = attr.getBaseType();
            printXMLAttribute(""type"", basetype.getTypeName(), flags);
            if(attr.getBaseType().isEnumType()) {
                printXMLAttribute(""enum"", basetype.getTypeName(), flags);
            }
            break;

        default:
            break; // node either has no attributes or name only
        } //switch
        if(!this.testing)
            printReserved(node);
        if((flags & PERLINE) != 0) {
            printer.outdent(2);
        }
    }",Print info from the node that needs to be in the form of xml attributes,dap4/d4lib/src/main/java/dap4/dap4lib/DMRPrinter.java,[]
6621cda4cda9bd4817b11274,abmargb/jamppa,"public Set<K> keySet() {
        if (keySet == null) {
            keySet = new ReferenceKeySet<K, V>(this);
        }
        return keySet;
    }",Returns a set view of this map s keys .,src/main/java/org/jivesoftware/smack/util/collections/AbstractReferenceMap.java,[]
6621cda4cda9bd4817b11275,intellimate/IzouSDK,"@SuppressWarnings(""unused"")
    public void userEncountered() {
        List<String> descriptors = new ArrayList<>();
        /*
        if (strict && ((!present && !fireUnknownIfNotPresent)|| !strictPresent) && addResponseDescriptors) {
            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);
            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);
            }
        } else if (present && strict && addResponseDescriptors) {
            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdPresent()) {
                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);
            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);
            }
        }*/
        descriptors.add(CommonEvents.Descriptors.NOT_INTERRUPT);
        boolean known = !fireUnknownIfNotPresent || present;
        boolean firstPresent = (!strict && !present) || (strict && !strictPresent);
        long lastSeen = this.lastSeen.until(LocalDateTime.now(), ChronoUnit.SECONDS);
        Optional<Event> presenceEvent = IdentificationManagerM.getInstance()
                .getIdentification(this)
                .flatMap(id -> PresenceEvent.createPresenceEvent(id, strict, known, firstPresent, descriptors, lastSeen))
                .map(event -> event.addEventLifeCycleListener(EventLifeCycle.APPROVED, lifeCycle -> {
                    if (known) {
                        this.lastSeen = LocalDateTime.now();
                        if (strict)
                            this.strictPresent = true;
                        present = true;
                    }
                }));
        if (!presenceEvent.isPresent()) {
            error(""unable to create PresenceEvent"");
        } else {
            fire(presenceEvent.get(), 5);
        }
    }",call this method when you have encountered the user,src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/template/PresenceNonConstant.java,"[{'Syntax': 'PresenceEvent.createPresenceEvent(id, strict, known, firstPresent, descriptors, lastSeen)', 'FunctionName': 'createPresenceEvent', 'ArgsCount': 6, 'MethodBody': 'public static Optional<PresenceEvent> createPresenceEvent(Identification source, boolean strict, boolean known,\n                                                              boolean firstEncounter, List<String> descriptors, Long timePassed) {\n        try {\n            if (strict) {\n                descriptors.add(STRICT_DESCRIPTOR);\n            } else {\n                descriptors.add(GENERAL_DESCRIPTOR);\n            }\n            if (known) {\n                descriptors.add(KNOWN_DESCRIPTOR);\n            } else {\n                descriptors.add(UNKNOWN_DESCRIPTOR);\n            }\n            if (firstEncounter)\n                descriptors.add(FIRST_ENCOUNTER_DESCRIPTOR);\n            descriptors.add(ID);\n            PresenceEvent presenceEvent = new PresenceEvent(source, descriptors);\n            presenceEvent.addResource(new LastEncountered(source, timePassed));\n            return Optional.of(presenceEvent);\n        } catch (IllegalArgumentException e) {\n            return Optional.empty();\n        }\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/presence/events/PresenceEvent.java'}, {'Syntax': 'event.addEventLifeCycleListener(EventLifeCycle.APPROVED, lifeCycle -> {\n                    if (known) {\n                        this.lastSeen = LocalDateTime.now();\n                        if (strict)\n                            this.strictPresent = true;\n                        present = true;\n                    }\n                })', 'FunctionName': 'addEventLifeCycleListener', 'ArgsCount': 2, 'MethodBody': '@SuppressWarnings(""unused"")\n    public Event addEventLifeCycleListener(EventLifeCycle eventLifeCycle, Consumer<EventLifeCycle> cycleCallback) {\n        lifeCycleListeners.compute(eventLifeCycle, (unused, list) -> {\n            if (list == null)\n                list = new ArrayList<>();\n            list.add(cycleCallback);\n            return list;\n        });\n        return this;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/events/Event.java'}, {'Syntax': 'presenceEvent.isPresent()', 'FunctionName': 'isPresent', 'ArgsCount': 0, 'MethodBody': 'boolean isPresent();', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/PresenceProvider.java'}, {'Syntax': 'error(""unable to create PresenceEvent"")', 'FunctionName': 'error', 'ArgsCount': 1, 'MethodBody': 'void error(String msg);', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/util/ContextProvider.java'}, {'Syntax': 'fire(presenceEvent.get(), 5)', 'FunctionName': 'fire', 'ArgsCount': 2, 'MethodBody': 'default boolean fire(String type, String descriptor) {\n        return fire(type, Collections.singletonList(descriptor), 5);\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/util/FireEvent.java'}]"
6621cda4cda9bd4817b11276,Koekiebox-PTY-LTD/Fluid,"public void shutdown()
	{
		if(this.memcachedClient != null &&
				!this.memcachedClient.isShutdown())
		{
			try {
				this.memcachedClient.shutdown();
			}
			//
			catch (IOException eParam) {

				throw new FluidCacheException(
						""Unable to create shutdown MemCache client. ""+eParam.getMessage(), eParam);
			}
		}
	}",Closes the Memcached client connection .,fluid-api/src/main/java/com/fluidbpm/program/api/util/cache/CacheUtil.java,"[{'Syntax': 'this.memcachedClient.shutdown()', 'FunctionName': 'shutdown', 'ArgsCount': 0, 'MethodBody': 'public void shutdown() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase REDIS:\r\n\t\t\t\tif (this.jedisCluster != null) {\r\n\t\t\t\t\tthis.jedisCluster.close();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.jedis != null) {\r\n\t\t\t\t\tthis.jedis.close();\r\n\t\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase MEMCACHED:\r\n\t\t\t\tif (this.memcachedClient != null &&\r\n\t\t\t\t\t\t!this.memcachedClient.isShutdown()) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.memcachedClient.shutdown();\r\n\t\t\t\t\t} catch (IOException eParam) {\r\n\t\t\t\t\t\tthrow new FluidCacheException(\r\n\t\t\t\t\t\t\t\t""Unable to create shutdown MemCache client. ""+eParam.getMessage(), eParam);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/util/cache/CacheUtil.java'}, {'Syntax': 'eParam.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\n\t\treturn this.message;\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/form/Collaboration.java'}]"
6621cda4cda9bd4817b11277,GojaFramework/goja,"public void setParam(String field, Object value) {
        this.setParam(field, Condition.EQ, value);
    }",Adding custom query equal value .,goja-web/src/main/java/goja/mvc/datatables/DTCriterias.java,"[{'Syntax': 'this.setParam(field, Condition.EQ, value)', 'FunctionName': 'setParam', 'ArgsCount': 3, 'MethodBody': 'public void setParam(String field, Condition condition, Object value) {\n        this.params.add(Triple.of(field, condition, value));\n    }', 'FileName': '/GojaFramework/goja/goja-web/src/main/java/goja/mvc/datatables/DTCriterias.java'}]"
6621cda4cda9bd4817b11278,tiefaces/TieFaces,"public static void parseCommentToMap(final String cellKey,
			final String newComment,
			final Map<String, Map<String, String>> sheetCommentMap,
			final boolean normalComment) {
		if ((newComment != null) && (!newComment.trim().isEmpty())) {
			// normal comment key is $$
			String commentKey = TieConstants.NORMAL_COMMENT_KEY_IN_MAP;
			if (!normalComment) {
				// not normal comment. e.g. ${... or $init{... or
				// key = $ or key = $init
				commentKey = newComment.substring(0,
						newComment.indexOf(TieConstants.EL_START_BRACKET));
			}
			Map<String, String> map = sheetCommentMap.get(commentKey);
			if (map == null) {
				map = new HashMap<>();
			}
			// inner map's key is sheetName!$columnIndex$rowIndex
			map.put(cellKey, newComment);
			sheetCommentMap.put(commentKey, map);
		}
	}",Parse Comment To Map,src/org/tiefaces/components/websheet/utility/ParserUtility.java,"[{'Syntax': 'newComment.trim().isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final boolean isEmpty() {\r\n\t\treturn false;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'sheetCommentMap.get(commentKey)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'map.put(cellKey, newComment)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\r\n\tpublic final Object put(final Object key, final Object value) {\r\n\t\ttry {\r\n\t\t\tCellMapKey mkey = new CellMapKey((String) key);\r\n\t\t\tif (!mkey.isParseSuccess()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tCell poiCell = parent.getCellHelper()\r\n\t\t\t\t\t.getPoiCellWithRowColFromCurrentPage(mkey.getRowIndex(),\r\n\t\t\t\t\t\t\tmkey.getColIndex());\r\n\t\t\tif (poiCell == null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tString oldValue = CellUtility\r\n\t\t\t\t\t.getCellValueWithoutFormat(poiCell);\r\n\t\t\tFacesCell facesCell = parent.getCellHelper()\r\n\t\t\t\t\t.getFacesCellWithRowColFromCurrentPage(\r\n\t\t\t\t\t\t\tmkey.getRowIndex(), mkey.getColIndex());\r\n\t\t\tString newValue = assembleNewValue(value, facesCell);\r\n\t\t\tif (newValue != null && !newValue.equals(oldValue)) {\r\n\t\t\t\tCellUtility.setCellValue(poiCell, newValue);\r\n\t\t\t\tif (facesCell.isHasSaveAttr()) {\r\n\t\t\t\t\tparent.getCellHelper().saveDataInContext(poiCell,\r\n\t\t\t\t\t\t\tnewValue);\r\n\t\t\t\t}\r\n\t\t\t\t// patch to avoid not updated downloaded file\r\n\t\t\t\tCellUtility.copyCell(poiCell.getSheet(), poiCell.getRow(), poiCell.getRow(), poiCell.getColumnIndex(),false);\r\n\t\t\t\tparent.getCellHelper().reCalc();\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t} catch (Exception ex) {\r\n\t\t\tLOG.log(Level.SEVERE,\r\n\t\t\t\t\t""Save cell data error : "" + ex.getLocalizedMessage(),\r\n\t\t\t\t\tex);\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'sheetCommentMap.put(commentKey, map)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\r\n\tpublic final Object put(final Object key, final Object value) {\r\n\t\ttry {\r\n\t\t\tCellMapKey mkey = new CellMapKey((String) key);\r\n\t\t\tif (!mkey.isParseSuccess()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tCell poiCell = parent.getCellHelper()\r\n\t\t\t\t\t.getPoiCellWithRowColFromCurrentPage(mkey.getRowIndex(),\r\n\t\t\t\t\t\t\tmkey.getColIndex());\r\n\t\t\tif (poiCell == null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tString oldValue = CellUtility\r\n\t\t\t\t\t.getCellValueWithoutFormat(poiCell);\r\n\t\t\tFacesCell facesCell = parent.getCellHelper()\r\n\t\t\t\t\t.getFacesCellWithRowColFromCurrentPage(\r\n\t\t\t\t\t\t\tmkey.getRowIndex(), mkey.getColIndex());\r\n\t\t\tString newValue = assembleNewValue(value, facesCell);\r\n\t\t\tif (newValue != null && !newValue.equals(oldValue)) {\r\n\t\t\t\tCellUtility.setCellValue(poiCell, newValue);\r\n\t\t\t\tif (facesCell.isHasSaveAttr()) {\r\n\t\t\t\t\tparent.getCellHelper().saveDataInContext(poiCell,\r\n\t\t\t\t\t\t\tnewValue);\r\n\t\t\t\t}\r\n\t\t\t\t// patch to avoid not updated downloaded file\r\n\t\t\t\tCellUtility.copyCell(poiCell.getSheet(), poiCell.getRow(), poiCell.getRow(), poiCell.getColumnIndex(),false);\r\n\t\t\t\tparent.getCellHelper().reCalc();\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t} catch (Exception ex) {\r\n\t\t\tLOG.log(Level.SEVERE,\r\n\t\t\t\t\t""Save cell data error : "" + ex.getLocalizedMessage(),\r\n\t\t\t\t\tex);\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}]"
6621cda4cda9bd4817b11279,rupertlssmith/lojix,"public SearchNode search(QueueSearchState<O, T> initSearch, Collection<T> startStates, int maxSteps,
        int searchSteps) throws SearchNotExhaustiveException
    {
        // Iteratively increase the bound until a search succeeds.
        for (float bound = startBound;;)
        {
            // Set up the maximum bound for this iteration.
            maxBound = bound;

            // Use a try block as the depth bounded search will throw a MaxBoundException if it fails but there
            // are successors states known to exist beyond the current max depth fringe.
            try
            {
                // Get the number of search steps taken so far and pass this into the underlying depth bounded search
                // so that the step count limit carries over between successive iterations.
                int numStepsSoFar = initSearch.getStepsTaken();

                // Call the super class search method to perform a depth bounded search on this maximum bound starting
                // from the initial search state.
                initSearch.resetEnqueuedOnceFlag();

                SearchNode node = super.search(initSearch, startStates, maxSteps, numStepsSoFar);

                // Check if the current depth found a goal node
                if (node != null)
                {
                    return node;
                }

                // The depth bounded search returned null, so it has exhausted the search space. Return with null.
                else
                {
                    return null;
                }
            }

            // The depth bounded search failed but it knows that there are more successor states at deeper levels.
            catch (MaxBoundException e)
            {
                // Do nothing, no node found at this depth so continue at the next depth level
                e = null;
            }

            // Check if the bound should be increased by epsilon or to the next smallest bound property value
            // beyond the fringe and update the bound for the next iteration.
            if (useEpsilon)
            {
                bound = bound + epsilon;
            }
            else
            {
                bound = getMinBeyondBound();
            }
        }
    }",Search iteratively on increasing maximum bound limits until the search space is exhausted or a goal state is found .,lojix/search/src/main/com/thesett/aima/search/impl/IterativeBoundAlgorithm.java,"[{'Syntax': 'initSearch.getStepsTaken()', 'FunctionName': 'getStepsTaken', 'ArgsCount': 0, 'MethodBody': 'public int getStepsTaken()\n    {\n        return searchSteps;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/impl/BaseQueueSearch.java'}, {'Syntax': 'initSearch.resetEnqueuedOnceFlag()', 'FunctionName': 'resetEnqueuedOnceFlag', 'ArgsCount': 0, 'MethodBody': 'public void resetEnqueuedOnceFlag()\n    {\n        enqueuedOnce = false;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/impl/BaseQueueSearch.java'}, {'Syntax': 'super.search(initSearch, startStates, maxSteps, numStepsSoFar)', 'FunctionName': 'search', 'ArgsCount': 4, 'MethodBody': 'public SearchNode search(QueueSearchState<O, T> initSearch, Collection<T> startStates, int maxSteps,\n        int searchSteps) throws SearchNotExhaustiveException\n    {\n        // Iteratively increase the bound until a search succeeds.\n        for (float bound = startBound;;)\n        {\n            // Set up the maximum bound for this iteration.\n            maxBound = bound;\n\n            // Use a try block as the depth bounded search will throw a MaxBoundException if it fails but there\n            // are successors states known to exist beyond the current max depth fringe.\n            try\n            {\n                // Get the number of search steps taken so far and pass this into the underlying depth bounded search\n                // so that the step count limit carries over between successive iterations.\n                int numStepsSoFar = initSearch.getStepsTaken();\n\n                // Call the super class search method to perform a depth bounded search on this maximum bound starting\n                // from the initial search state.\n                initSearch.resetEnqueuedOnceFlag();\n\n                SearchNode node = super.search(initSearch, startStates, maxSteps, numStepsSoFar);\n\n                // Check if the current depth found a goal node\n                if (node != null)\n                {\n                    return node;\n                }\n\n                // The depth bounded search returned null, so it has exhausted the search space. Return with null.\n                else\n                {\n                    return null;\n                }\n            }\n\n            // The depth bounded search failed but it knows that there are more successor states at deeper levels.\n            catch (MaxBoundException e)\n            {\n                // Do nothing, no node found at this depth so continue at the next depth level\n                e = null;\n            }\n\n            // Check if the bound should be increased by epsilon or to the next smallest bound property value\n            // beyond the fringe and update the bound for the next iteration.\n            if (useEpsilon)\n            {\n                bound = bound + epsilon;\n            }\n            else\n            {\n                bound = getMinBeyondBound();\n            }\n        }\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/impl/IterativeBoundAlgorithm.java'}, {'Syntax': 'getMinBeyondBound()', 'FunctionName': 'getMinBeyondBound', 'ArgsCount': 0, 'MethodBody': 'public float getMinBeyondBound()\n    {\n        return minBeyondBound;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/impl/BoundedAlgorithm.java'}]"
6621cda4cda9bd4817b1127a,Koekiebox-PTY-LTD/Fluid,"public Flow deleteFlow(Flow flowParam)
    {
        if(flowParam != null && this.serviceTicket != null)
        {
            flowParam.setServiceTicket(this.serviceTicket);
        }

        return new Flow(this.postJson(flowParam, WS.Path.Flow.Version1.flowDelete()));
    }",Delete an existing Flow .,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/FlowClient.java,"[{'Syntax': 'flowParam.setServiceTicket(this.serviceTicket)', 'FunctionName': 'setServiceTicket', 'ArgsCount': 1, 'MethodBody': 'public void setServiceTicket(String serviceTicketParam) {\r\n\t\tthis.serviceTicket = serviceTicketParam;\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ABaseFluidVO.java'}, {'Syntax': 'this.postJson(flowParam, WS.Path.Flow.Version1.flowDelete())', 'FunctionName': 'postJson', 'ArgsCount': 2, 'MethodBody': 'protected JSONObject postJson(ABaseFluidJSONObject baseDomainParam, String postfixUrlParam) {\n\t\t//No need to check connection...\n\t\treturn this.postJson(false, baseDomainParam, postfixUrlParam);\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/ABaseClientWS.java'}, {'Syntax': 'WS.Path.Flow.Version1.flowDelete()', 'FunctionName': 'flowDelete', 'ArgsCount': 0, 'MethodBody': 'public static final String flowDelete() {\n\t\t\t\t\treturn flowDelete(false);\n\t\t\t\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ws/WS.java'}]"
6621cda4cda9bd4817b1127b,wro4j/wro4j,"private Map<String, ResourcePostProcessor> toPostProcessors(
      final Map<String, ResourcePreProcessor> preProcessorsMap) {
    final Map<String, ResourcePostProcessor> map = new HashMap<String, ResourcePostProcessor>();
    for (final Entry<String, ResourcePreProcessor> entry : preProcessorsMap.entrySet()) {
      map.put(entry.getKey(), new ProcessorDecorator(entry.getValue()));
    }
    return map;
  }",Creates a map of postProcessors form a map of preProcessors . This method will be removed in 1 . 5 . 0 release when there will be no differences between pre & post processor interface .,wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/DefaultProcessorProvider.java,"[{'Syntax': 'map.put(entry.getKey(), new ProcessorDecorator(entry.getValue()))', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(final K key, final V value);', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/cache/CacheStrategy.java'}]"
6621cda4cda9bd4817b1127c,Unidata/thredds,"public boolean isValidFile(ucar.unidata.io.RandomAccessFile raf) {
    try {
      raf.order(RandomAccessFile.LITTLE_ENDIAN);
      // The first struct in the file is the product_hdr, which will have the
      // standard structure_header, followed by other embedded structures.
      // Each of these structures also have a structure header. To validate
      // the file we check for a product_hdr (by looking for type 27 in the
      // structure_header), then a product_configuration structure (by looking
      // for type 26 in its structure_header), then checking that that
      // the product_configuration does indicate a type of RAW data (type 15)
      raf.seek(0);
      short[] data = new short[13];
      raf.readShort(data, 0, 13);
      return (data[0] == (short) 27 &&
              data[6] == (short) 26 &&
              data[12] ==(short) 15);
    } catch (IOException ioe) {
      System.out.println(""In isValidFile(): "" + ioe.toString());
      return false;
    }
  }",Check if this is a valid SIGMET - IRIS file for this IOServiceProvider .,cdm/src/main/java/ucar/nc2/iosp/sigmet/SigmetIOServiceProvider.java,[]
6621cda4cda9bd4817b1127d,DigitalPebble/storm-crawler,"private static String getCharsetFromBOM(final byte[] byteData) {
        BOMInputStream bomIn = new BOMInputStream(new ByteArrayInputStream(
                byteData));
        try {
            ByteOrderMark bom = bomIn.getBOM();
            if (bom != null) {
                return bom.getCharsetName();
            }
        } catch (IOException e) {
            return null;
        }
        return null;
    }",Detects any BOMs and returns the corresponding charset,core/src/main/java/com/digitalpebble/stormcrawler/util/CharsetIdentification.java,[]
6621cda4cda9bd4817b1127e,Enterprise-Content-Management/infoarchive-sip-sdk,"protected ST prepareTemplate(ST prototype, D domainObject, Map<String, ContentInfo> contentInfo) {
    ST template = new ST(prototype);
    template.add(MODEL_VARIABLE, domainObject);
    template.add(CONTENT_VARIABLE, contentInfo);
    return template;
  }",Prepares the template by adding the variables .,stringtemplate/src/main/java/com/opentext/ia/sip/assembly/stringtemplate/StringTemplate.java,"[{'Syntax': 'template.add(MODEL_VARIABLE, domainObject)', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': '@Override\n  public void add(int index, Value item) {\n    data.add(index, unpack(item));\n  }', 'FileName': '/Enterprise-Content-Management/infoarchive-sip-sdk/yaml/src/main/java/com/opentext/ia/yaml/core/YamlSequence.java'}, {'Syntax': 'template.add(CONTENT_VARIABLE, contentInfo)', 'FunctionName': 'add', 'ArgsCount': 2, 'MethodBody': '@Override\n  public void add(int index, Value item) {\n    data.add(index, unpack(item));\n  }', 'FileName': '/Enterprise-Content-Management/infoarchive-sip-sdk/yaml/src/main/java/com/opentext/ia/yaml/core/YamlSequence.java'}]"
6621cda4cda9bd4817b1127f,wildfly/wildfly,"public List<Resource> list(String path) {
        try {
            final List<Resource> ret = new ArrayList<>();

            Resource res = deploymentResourceManager.getResource(path);
            if (res != null) {
                for (Resource child : res.list()) {
                    ret.add(new ServletResource(this, child));
                }
            }
            String p = path;
            if (p.startsWith(""/"")) {
                p = p.substring(1);
            }
            if (overlays != null) {
                for (VirtualFile overlay : overlays) {
                    VirtualFile child = overlay.getChild(p);
                    if (child.exists()) {
                        VirtualFileResource vfsResource = new VirtualFileResource(overlay.getPhysicalFile(), child, path);
                        for (Resource c : vfsResource.list()) {
                            ret.add(new ServletResource(this, c));
                        }
                    }
                }
            }
            return ret;
        } catch (IOException e) {
            throw new RuntimeException(e); //this method really should have thrown IOException
        }
    }",Lists all children of a particular path taking overlays into account,undertow/src/main/java/org/wildfly/extension/undertow/deployment/ServletResourceManager.java,"[{'Syntax': 'deploymentResourceManager.getResource(path)', 'FunctionName': 'getResource', 'ArgsCount': 1, 'MethodBody': 'private InputStream getResource(String location) {\n        InputStream is = getClass().getResourceAsStream(location);\n        if (is == null) {\n            is = Thread.currentThread().getContextClassLoader().getResourceAsStream(location);\n        }\n        return is;\n    }', 'FileName': '/wildfly/wildfly/metrics/src/main/java/org/wildfly/extension/metrics/jmx/JmxMetricCollector.java'}, {'Syntax': 'res.list()', 'FunctionName': 'list', 'ArgsCount': 0, 'MethodBody': 'public List<Resource> list() {\n                                return Collections.emptyList();\n                            }', 'FileName': '/wildfly/wildfly/elytron-oidc-client/src/main/java/org/wildfly/extension/elytron/oidc/SecureServerDefinition.java'}, {'Syntax': 'ret.add(new ServletResource(this, child))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Consumer<Supplier<Node>> add(ServiceName name) {\n        return this.registry.add(name);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/NodeServiceExecutorRegistry.java'}, {'Syntax': 'overlay.getChild(p)', 'FunctionName': 'getChild', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Resource getChild(final PathElement element) {\n        if (BatchJobExecutionResourceDefinition.EXECUTION.equals(element.getKey())) {\n            if (hasJobExecution(element.getValue())) {\n                return PlaceholderResource.INSTANCE;\n            }\n            return null;\n        }\n        return delegate.getChild(element);\n    }', 'FileName': '/wildfly/wildfly/batch-jberet/src/main/java/org/wildfly/extension/batch/jberet/deployment/BatchJobExecutionResource.java'}, {'Syntax': 'child.exists()', 'FunctionName': 'exists', 'ArgsCount': 0, 'MethodBody': 'public boolean exists() {\n                return true;\n            }', 'FileName': '/wildfly/wildfly/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/http/CustomRealm.java'}, {'Syntax': 'vfsResource.list()', 'FunctionName': 'list', 'ArgsCount': 0, 'MethodBody': 'public List<Resource> list() {\n                                return Collections.emptyList();\n                            }', 'FileName': '/wildfly/wildfly/elytron-oidc-client/src/main/java/org/wildfly/extension/elytron/oidc/SecureServerDefinition.java'}, {'Syntax': 'ret.add(new ServletResource(this, c))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': '@Override\n    public Consumer<Supplier<Node>> add(ServiceName name) {\n        return this.registry.add(name);\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/NodeServiceExecutorRegistry.java'}]"
6621cda4cda9bd4817b11280,wro4j/wro4j,"private void generateDataURI(final byte[] bytes, final Writer out, final String mimeType)
      throws IOException {
    // create the output
    final StringBuffer buffer = new StringBuffer();
    buffer.append(DATA_URI_PREFIX);
    
    // add MIME type
    buffer.append(mimeType);
    
    // output base64-encoding
    buffer.append("";base64,"");
    buffer.append(Base64.encodeBytes(bytes));
    
    // output to writer
    out.write(buffer.toString());
  }",Generates a data URI from a byte array and outputs to the given writer .,wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/DataUriGenerator.java,"[{'Syntax': 'Base64.encodeBytes(bytes)', 'FunctionName': 'encodeBytes', 'ArgsCount': 1, 'MethodBody': ""public static String encodeBytes(final byte[] source) {\r\n    // Since we're not going to have the GZIP encoding turned on,\r\n    // we're not going to have an java.io.IOException thrown, so\r\n    // we should not force the user to have to catch it.\r\n    String encoded = null;\r\n    try {\r\n      encoded = encodeBytes(source, 0, source.length, NO_OPTIONS);\r\n    } catch (final java.io.IOException ex) {\r\n      assert false : ex.getMessage();\r\n    } // end catch\r\n    assert encoded != null;\r\n    return encoded;\r\n  }"", 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/util/Base64.java'}, {'Syntax': 'out.write(buffer.toString())', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'public final void write(final OutputStream outputStream) {\n    buildDocument();\n    writeReport(outputStream);\n  }', 'FileName': '/wro4j/wro4j/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/support/lint/AbstractReportXmlFormatter.java'}, {'Syntax': 'buffer.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n      public String toString() {\n        return CssImportPreProcessor.class.getSimpleName();\n      }', 'FileName': '/wro4j/wro4j/wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/support/ResourceChangeHandler.java'}]"
6621cda5cda9bd4817b11281,oaqa/baseqa,"public void setOriginalText(String v) {
    if (AtomicQueryConcept_Type.featOkTst && ((AtomicQueryConcept_Type)jcasType).casFeat_originalText == null)
      jcasType.jcas.throwFeatMissing(""originalText"", ""edu.cmu.lti.oaqa.type.retrieval.AtomicQueryConcept"");
    jcasType.ll_cas.ll_setStringValue(addr, ((AtomicQueryConcept_Type)jcasType).casFeatCode_originalText, v);}",setter for originalText - sets The lexical string in the question .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/AtomicQueryConcept.java,[]
6621cda5cda9bd4817b11282,arnohaase/a-foundation,"static WorkQueue commonSubmitterQueue() {
        ForkJoinPool p = common;
        int r = ThreadLocalRandomHelper.getProbe();
        WorkQueue[] ws; int m;
        return (p != null && (ws = p.workQueues) != null &&
                (m = ws.length - 1) >= 0) ?
            ws[m & r & SQMASK] : null;
    }",Returns common pool queue for an external thread .,a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java,"[{'Syntax': 'ThreadLocalRandomHelper.getProbe()', 'FunctionName': 'getProbe', 'ArgsCount': 0, 'MethodBody': 'public static int getProbe () {\n        return UNSAFE.getInt (Thread.currentThread (), PROBE);\n    }', 'FileName': '/arnohaase/a-foundation/a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/ThreadLocalRandomHelper.java'}]"
6621cda5cda9bd4817b11283,Unidata/thredds,"@Override
  public int[] findXYindexFromCoordBounded(double x_coord, double y_coord, int[] result) {
    if (result == null)
      result = new int[2];

    if ((horizXaxis instanceof CoordinateAxis1D) && (horizYaxis instanceof CoordinateAxis1D)) {
      result[0] = ((CoordinateAxis1D) horizXaxis).findCoordElementBounded(x_coord);
      result[1] = ((CoordinateAxis1D) horizYaxis).findCoordElementBounded(y_coord);
      return result;

    } else if ((horizXaxis instanceof CoordinateAxis2D) && (horizYaxis instanceof CoordinateAxis2D)) {
      if (g2d == null)
        g2d = new GridCoordinate2D((CoordinateAxis2D) horizYaxis, (CoordinateAxis2D) horizXaxis);

      int[] result2 = new int[2];
      g2d.findCoordElement(y_coord, x_coord, result2); // returns best guess
      result[0] = result2[1];
      result[1] = result2[0];
      return result;
    }

    // cant happen
    throw new IllegalStateException(""GridCoordSystem.findXYindexFromCoord"");
  }",Given a point in x y coordinate space find the x y index in the coordinate system . If outside the range the closest point is returned eg 0 or n - 1 depending on if the coordinate is too small or too large .,cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java,[]
6621cda5cda9bd4817b11284,rupertlssmith/lojix,"public void clearChildren()
    {
        // Check that their are children to clear.
        if (children != null)
        {
            // Loop over all the children setting their parent to null.
            for (Tree<E> child : children)
            {
                child.setParent(null);
            }

            // Clear out the children collection.
            children.clear();

            // Mark this as a leaf node.
            nodeOrLeaf = Type.Leaf;
        }
    }",Clears all the children of this point in the tree . If this point is a leaf it will have no children so this operation does nothing . If this point is a node it will be reduced to a leaf by this operation . This implementation supports turning nodes into leaves .,base/common/src/main/com/thesett/common/util/SimpleTree.java,"[{'Syntax': 'child.setParent(null)', 'FunctionName': 'setParent', 'ArgsCount': 1, 'MethodBody': 'void setParent(Node<E> parent);', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/Tree.java'}, {'Syntax': 'children.clear()', 'FunctionName': 'clear', 'ArgsCount': 0, 'MethodBody': 'public void clear()\n        {\n            table.clear();\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/unittests/com/thesett/common/util/doublemaps/SymbolTableTestBase.java'}]"
6621cda5cda9bd4817b11285,Unidata/thredds,"public List<String> getStationKeyNames() {
    List<String> keys = new ArrayList<>();
    if ((stationKeys != null) && !stationKeys.isEmpty()) {
      for (Key key : stationKeys) {
        keys.add(key.name);
      }
    }
    return keys;
  }",Get the station key names,visad/src/main/java/ucar/nc2/iosp/gempak/AbstractGempakStationFileReader.java,[]
6621cda5cda9bd4817b11286,wildfly/wildfly,"public <T> void putPrivateData(final Class<T> type, T data ) {
        privateData.put(type, data);
    }",Attaches arbitrary private data to this view instance,ee/src/main/java/org/jboss/as/ee/component/ViewConfiguration.java,"[{'Syntax': 'privateData.put(type, data)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\n    public String put(String key, String value) {\n        Value old = this.get().put(new Key(key), new Value(value));\n        return (old != null) ? old.getValue() : null;\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/infinispan/bean/CacheBean.java'}]"
6621cda5cda9bd4817b11287,Unidata/thredds,"public Array readIntData(LayoutRegular index, Variable v2) throws IOException {
    int[] var = (int[]) (v2.read().get1DJavaArray(v2.getDataType()));
    int[] data = new int[(int) index.getTotalNelems()];
    while (index.hasNext()) {
      Layout.Chunk chunk = index.next();
      System.arraycopy(var, (int) chunk.getSrcPos() / 4, data, (int) chunk.getDestElem(), chunk.getNelems());
    }
    return Array.factory(v2.getDataType(), new int[] {(int) index.getTotalNelems()}, data);
  }",Read data from a top level Variable of INTEGER data type and return a memory resident Array .,cdm/src/main/java/ucar/nc2/iosp/sigmet/SigmetIOServiceProvider.java,[]
6621cda5cda9bd4817b11288,deeplearning4j/nd4j,"public static FunctionProperties fromFlatProperties(FlatProperties properties) {
        val props = new FunctionProperties();

        for (int e = 0; e < properties.iLength(); e++)
            props.getI().add(properties.i(e));

        for (int e = 0; e < properties.lLength(); e++)
            props.getL().add(properties.l(e));

        for (int e = 0; e < properties.dLength(); e++)
            props.getD().add(properties.d(e));

        for (int e = 0; e < properties.iLength(); e++)
            props.getA().add(Nd4j.createFromFlatArray(properties.a(e)));

        return props;
    }",This method creates new FunctionProperties instance from FlatBuffers representation,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/functions/FunctionProperties.java,[]
6621cda5cda9bd4817b11289,rupertlssmith/lojix,"public static Properties getProperties(URL url) throws IOException
    {
        /*log.fine(""getProperties(URL): called"");*/

        // Open the URL as an input stream
        InputStream is = url.openStream();

        // Create properties object loaded from the stream
        Properties properties = getProperties(is);

        // Close the url
        is.close();

        return properties;
    }",Get properties from a url .,base/common/src/main/com/thesett/common/util/PropertiesHelper.java,"[{'Syntax': 'getProperties(is)', 'FunctionName': 'getProperties', 'ArgsCount': 1, 'MethodBody': 'public String[] getProperties(String key)\n    {\n        // Try to get the callers class name and method name by throwing an exception an searching the stack frames.\n        String className = null;\n        String methodName = null;\n\n        /* Java 1.4 onwards only.\n           try {\n             throw new Exception();\n           } catch (Exception e) {\n             StackTraceElement[] stack = e.getStackTrace();\n             // Check that the stack trace contains at least two elements, one for this method and one for the caller.\n             if (stack.length >= 2) {\n               className = stack[1].getClassName();\n               methodName = stack[1].getMethodName();\n             }\n           }*/\n        return getProperties(className, methodName, key);\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}, {'Syntax': 'is.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': 'public void close()\n    {\n    }', 'FileName': '/rupertlssmith/lojix/base/base/src/main/com/thesett/util/log4j/LoggingToLog4JHandler.java'}]"
6621cda5cda9bd4817b1128a,tiefaces/TieFaces,"public static void changeIndexNumberInHiddenColumn(
			final ConfigBuildRef configBuildRef, final int startRowIndex,
			final String fullName, final Map<String, String> changeMap,
			final int steps) {
		String searchName = fullName.substring(0,
				fullName.lastIndexOf('.') + 1);
		Sheet sheet = configBuildRef.getSheet();
		for (int i = startRowIndex; i <= sheet.getLastRowNum(); i++) {
			Row row = sheet.getRow(i);
			String fname = getFullNameFromRow(row);
			if ((fname != null) && (fname.indexOf(searchName) >= 0)) {
				int sindex = fname.indexOf(searchName);
				String snum = fname.substring(sindex + searchName.length());
				int sufindex = snum.indexOf(':');
				String suffix = """";
				if (sufindex > 0) {
					snum = snum.substring(0, sufindex);
					suffix = "":"";
				}
				int increaseNum = Integer.parseInt(snum) + steps;
				String realFullName = fname.substring(sindex);
				String changeName = fname.replace(
						searchName + snum + suffix,
						searchName + increaseNum + suffix);
				if (changeMap.get(realFullName) == null) {
					changeMap.put(realFullName,
							changeName.substring(sindex));
				}
				setFullNameInHiddenColumn(row, changeName);
			} else {
				return;
			}
		}
	}",Change index number in hidden column .,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,"[{'Syntax': 'configBuildRef.getSheet()', 'FunctionName': 'getSheet', 'ArgsCount': 0, 'MethodBody': 'public final Sheet getSheet() {\r\n\t\treturn sheet;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/ConfigBuildRef.java'}, {'Syntax': 'getFullNameFromRow(row)', 'FunctionName': 'getFullNameFromRow', 'ArgsCount': 1, 'MethodBody': 'public static String getFullNameFromRow(final Row row) {\r\n\t\tif (row != null) {\r\n\t\t\tCell cell = row.getCell(TieConstants.HIDDEN_FULL_NAME_COLUMN);\r\n\t\t\tif (cell != null) {\r\n\t\t\t\treturn cell.getStringCellValue();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java'}, {'Syntax': 'changeMap.get(realFullName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public final List<SerialRow> get(final Integer sourceRowNum) {\r\n\t\treturn rowsMap.get(sourceRowNum);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/RowsMapping.java'}, {'Syntax': 'changeMap.put(realFullName,\r\n\t\t\t\t\t\t\tchangeName.substring(sindex))', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': '@Override\r\n\tpublic final Object put(final Object key, final Object value) {\r\n\t\ttry {\r\n\t\t\tCellMapKey mkey = new CellMapKey((String) key);\r\n\t\t\tif (!mkey.isParseSuccess()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tCell poiCell = parent.getCellHelper()\r\n\t\t\t\t\t.getPoiCellWithRowColFromCurrentPage(mkey.getRowIndex(),\r\n\t\t\t\t\t\t\tmkey.getColIndex());\r\n\t\t\tif (poiCell == null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tString oldValue = CellUtility\r\n\t\t\t\t\t.getCellValueWithoutFormat(poiCell);\r\n\t\t\tFacesCell facesCell = parent.getCellHelper()\r\n\t\t\t\t\t.getFacesCellWithRowColFromCurrentPage(\r\n\t\t\t\t\t\t\tmkey.getRowIndex(), mkey.getColIndex());\r\n\t\t\tString newValue = assembleNewValue(value, facesCell);\r\n\t\t\tif (newValue != null && !newValue.equals(oldValue)) {\r\n\t\t\t\tCellUtility.setCellValue(poiCell, newValue);\r\n\t\t\t\tif (facesCell.isHasSaveAttr()) {\r\n\t\t\t\t\tparent.getCellHelper().saveDataInContext(poiCell,\r\n\t\t\t\t\t\t\tnewValue);\r\n\t\t\t\t}\r\n\t\t\t\t// patch to avoid not updated downloaded file\r\n\t\t\t\tCellUtility.copyCell(poiCell.getSheet(), poiCell.getRow(), poiCell.getRow(), poiCell.getColumnIndex(),false);\r\n\t\t\t\tparent.getCellHelper().reCalc();\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t} catch (Exception ex) {\r\n\t\t\tLOG.log(Level.SEVERE,\r\n\t\t\t\t\t""Save cell data error : "" + ex.getLocalizedMessage(),\r\n\t\t\t\t\tex);\r\n\t\t}\r\n\t\treturn null;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'setFullNameInHiddenColumn(row, changeName)', 'FunctionName': 'setFullNameInHiddenColumn', 'ArgsCount': 2, 'MethodBody': 'public static void setFullNameInHiddenColumn(final Row row,\r\n\t\t\tfinal String fullName) {\r\n\t\tCell cell = row.getCell(TieConstants.HIDDEN_FULL_NAME_COLUMN,\r\n\t\t\t\tMissingCellPolicy.CREATE_NULL_AS_BLANK);\r\n\r\n\t\tcell.setCellValue(fullName);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java'}]"
6621cda5cda9bd4817b1128b,tiefaces/TieFaces,"private void buildWatchListForCell(
			final XSSFEvaluationWorkbook wbWrapper, final int sheetIndex,
			final Cell cell, final List<Integer> watchList, final int lastStaticRow) {
		String formula = cell.getCellFormula();

		Ptg[] ptgs = FormulaParser.parse(formula, wbWrapper,
				FormulaType.CELL, sheetIndex);

		for (int k = 0; k < ptgs.length; k++) {
			Object ptg = ptgs[k];
			// For area formula, only first row is watched.
			// Reason is the lastRow must shift same rows with
			// firstRow.
			// Otherwise it's difficult to calculate.
			// In case some situation cannot fit, then should make
			// change to the formula.
			int areaInt = ShiftFormulaUtility
					.getFirstSupportedRowNumFromPtg(ptg);
			if (areaInt >= 0) {
				addToWatchList(areaInt, lastStaticRow, watchList);
			}
		}

		// when insert row, the formula may changed. so here is the
		// workaround.
		// change formula to user formula to preserve the row
		// changes.
		cell.setCellType(CellType.STRING);
		cell.setCellValue(TieConstants.USER_FORMULA_PREFIX + formula
				+ TieConstants.USER_FORMULA_SUFFIX);
	}",Builds the watch list for cell .,src/org/tiefaces/components/websheet/configuration/FormCommand.java,"[{'Syntax': 'ShiftFormulaUtility\r\n\t\t\t\t\t.getFirstSupportedRowNumFromPtg(ptg)', 'FunctionName': 'getFirstSupportedRowNumFromPtg', 'ArgsCount': 1, 'MethodBody': 'public static int getFirstSupportedRowNumFromPtg(final Object ptg) {\r\n\r\n\t\tint rCode = -1;\r\n\t\tif (ptg instanceof RefPtgBase) {\r\n\t\t\tif (!(ptg instanceof Ref3DPxg) && !(ptg instanceof Ref3DPtg)) {\r\n\t\t\t\trCode = ((RefPtgBase) ptg).getRow();\r\n\t\t\t}\r\n\t\t} else if (ptg instanceof AreaPtgBase && !(ptg instanceof Area3DPxg)\r\n\t\t\t\t&& !(ptg instanceof Area3DPtg)) {\r\n\t\t\trCode = ((AreaPtgBase) ptg).getFirstRow();\r\n\r\n\t\t}\r\n\r\n\t\treturn rCode;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java'}, {'Syntax': 'addToWatchList(areaInt, lastStaticRow, watchList)', 'FunctionName': 'addToWatchList', 'ArgsCount': 3, 'MethodBody': 'private void addToWatchList(final int addRow, final int lastStaticRow,\r\n\t\t\tfinal List<Integer> watchList) {\r\n\t\tif ((addRow > lastStaticRow) && !(watchList.contains(addRow))) {\r\n\t\t\twatchList.add(addRow);\r\n\t\t}\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/configuration/FormCommand.java'}, {'Syntax': 'cell.setCellValue(TieConstants.USER_FORMULA_PREFIX + formula\r\n\t\t\t\t+ TieConstants.USER_FORMULA_SUFFIX)', 'FunctionName': 'setCellValue', 'ArgsCount': 1, 'MethodBody': 'public final void setCellValue(final String pcellValue) {\r\n\t\tthis.cellValue = pcellValue;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/HeaderCell.java'}]"
6621cda5cda9bd4817b1128c,deeplearning4j/nd4j,"@Override
    public IComplexNDArray sub(INDArray other, INDArray result) {
        return dup().subi(other, result);
    }",copy subtraction of two matrices,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/complex/BaseComplexNDArray.java,[]
6621cda5cda9bd4817b1128d,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setLager(JAXBElement<Object> value) {
        this.lager = value;
    }",Sets the value of the lager property .,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/GrundstueckEmpfohleneNutzung.java,[]
6621cda5cda9bd4817b1128e,ReactiveX/RxJava,"@CheckReturnValue
    @NonNull
    @SchedulerSupport(SchedulerSupport.NONE)
    public static <T> Maybe<T> fromSingle(SingleSource<T> singleSource) {
        ObjectHelper.requireNonNull(singleSource, ""singleSource is null"");
        return RxJavaPlugins.onAssembly(new MaybeFromSingle<T>(singleSource));
    }",Wraps a SingleSource into a Maybe .,src/main/java/io/reactivex/Maybe.java,"[{'Syntax': 'RxJavaPlugins.onAssembly(new MaybeFromSingle<T>(singleSource))', 'FunctionName': 'onAssembly', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\n    @NonNull\n    public static <@NonNull T> Maybe<T> onAssembly(@NonNull Maybe<T> source) {\n        Function<? super Maybe, ? extends Maybe> f = onMaybeAssembly;\n        if (f != null) {\n            return apply(f, source);\n        }\n        return source;\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/plugins/RxJavaPlugins.java'}]"
6621cda5cda9bd4817b1128f,yunify/qingstor-sdk-java,"private void sign(RequestHandler requestHandler) throws QSException {
        if (callBack != null) {
            String signed = callBack.onSignature(requestHandler.getStringToSignature());
            if (!QSStringUtil.isEmpty(signed))
                requestHandler.setSignature(callBack.onAccessKey(), signed);
            String correctTime = callBack.onCorrectTime(requestHandler.getStringToSignature());
            if (correctTime != null && correctTime.trim().length() > 0)
                requestHandler.getBuilder().setHeader(QSConstant.HEADER_PARAM_KEY_DATE, correctTime);
        }
    }",When sending a request will call this method to sign with server .,src/main/java/com/qingstor/sdk/upload/UploadManager.java,"[{'Syntax': 'callBack.onSignature(requestHandler.getStringToSignature())', 'FunctionName': 'onSignature', 'ArgsCount': 1, 'MethodBody': 'String onSignature(String strToSign) {\n        return null;\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/upload/UploadManagerCallback.java'}, {'Syntax': 'requestHandler.getStringToSignature()', 'FunctionName': 'getStringToSignature', 'ArgsCount': 0, 'MethodBody': 'public String getStringToSignature() {\n        return QSSignatureUtil.getStringToSignature(\n                this.httpMethod, resourcePathForSign(), this.paramsQuery, this.paramsHeaders);\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/request/QSBuilder.java'}, {'Syntax': 'QSStringUtil.isEmpty(signed)', 'FunctionName': 'isEmpty', 'ArgsCount': 1, 'MethodBody': 'public static boolean isEmpty(String str) {\n        return str == null || """".equals(str.trim()) || ""null"".equalsIgnoreCase(str);\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/utils/QSStringUtil.java'}, {'Syntax': 'requestHandler.setSignature(callBack.onAccessKey(), signed)', 'FunctionName': 'setSignature', 'ArgsCount': 2, 'MethodBody': 'public void setSignature(String accessKey, String signature) throws QSException {\n        try {\n            if (this.checkExpiresParam()) {\n                signature = URLEncoder.encode(signature, QSConstant.ENCODING_UTF8);\n            } else {\n                signature = String.format(""QS %s:%s"", accessKey, signature);\n            }\n            this.paramsHeaders.put(QSConstant.HEADER_PARAM_KEY_AUTHORIZATION, signature);\n        } catch (UnsupportedEncodingException e) {\n            throw new QSException(""Auth signature error"", e);\n        }\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/request/QSBuilder.java'}, {'Syntax': 'callBack.onAccessKey()', 'FunctionName': 'onAccessKey', 'ArgsCount': 0, 'MethodBody': 'String onAccessKey() {\n        return null;\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/upload/UploadManagerCallback.java'}, {'Syntax': 'callBack.onCorrectTime(requestHandler.getStringToSignature())', 'FunctionName': 'onCorrectTime', 'ArgsCount': 1, 'MethodBody': 'String onCorrectTime(String strToSign) {\n        return null;\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/upload/UploadManagerCallback.java'}, {'Syntax': 'requestHandler.getStringToSignature()', 'FunctionName': 'getStringToSignature', 'ArgsCount': 0, 'MethodBody': 'public String getStringToSignature() {\n        return QSSignatureUtil.getStringToSignature(\n                this.httpMethod, resourcePathForSign(), this.paramsQuery, this.paramsHeaders);\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/request/QSBuilder.java'}, {'Syntax': 'requestHandler.getBuilder().setHeader(QSConstant.HEADER_PARAM_KEY_DATE, correctTime)', 'FunctionName': 'setHeader', 'ArgsCount': 2, 'MethodBody': 'public void setHeader(String name, String value) {\n        this.paramsHeaders.put(name, value);\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/request/QSBuilder.java'}, {'Syntax': 'requestHandler.getBuilder()', 'FunctionName': 'getBuilder', 'ArgsCount': 0, 'MethodBody': 'public QSBuilder getBuilder() {\n        return this.builder;\n    }', 'FileName': '/yunify/qingstor-sdk-java/src/main/java/com/qingstor/sdk/request/RequestHandler.java'}]"
6621cda5cda9bd4817b11290,rupertlssmith/lojix,"public void put(Class cls, String attr, Object val)
    {
        /*log.fine(""public void put(Class cls, String attr, Object val): called"");*/
        /*log.fine(""class name is "" + cls.getName());*/
        /*log.fine(""attribute is "" + attr);*/
        /*log.fine(""value to set is "" + val);*/

        HashMap map;

        // Check that the cache for the class exists in the cache.
        if (values.containsKey(cls))
        {
            // Get the cache of field for the class.
            map = (HashMap) values.get(cls);
        }
        else
        {
            // The class does not already exist in the cache to create a new cache for its fields.
            map = new HashMap();

            // Cache the new field cache against the class.
            values.put(cls, map);
        }

        // Store the attribute in the field cache for the class.
        map.put(attr, val);
    }",Places the specified value into the memento based on the field s declaring class and name .,base/common/src/main/com/thesett/common/reflect/DirectMemento.java,"[{'Syntax': 'values.containsKey(cls)', 'FunctionName': 'containsKey', 'ArgsCount': 1, 'MethodBody': 'public boolean containsKey(Object key)\n        {\n            return table.containsKey((K) key, field);\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/unittests/com/thesett/common/util/doublemaps/SymbolTableTestBase.java'}, {'Syntax': 'values.get(cls)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name)\n    {\n        return pageContext.getAttribute(name, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}, {'Syntax': 'values.put(cls, map)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(String name, Object value)\n    {\n        pageContext.setAttribute(name, value, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}, {'Syntax': 'map.put(attr, val)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(String name, Object value)\n    {\n        pageContext.setAttribute(name, value, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}]"
6621cda5cda9bd4817b11291,Unidata/thredds,"public void setList ( ArrayList rowList) {
    this.list = rowList;
    if (list.size() > 0)
      jtable.setRowSelectionInterval(0, 0);
    else
      jtable.clearSelection();

    model.sort();
    jtable.revalidate();
  }",Replace the rowList with this one .,ui/src/main/java/ucar/nc2/ui/table/JTableSorted.java,[]
6621cda5cda9bd4817b11292,oblac/jodd,"protected void dumpClassInDebugFolder(final byte[] bytes) {
		File debugFolder = proxetta.getDebugFolder();
		if (debugFolder == null) {
			return;
		}

		if (!debugFolder.exists() || !debugFolder.isDirectory()) {
			log.warn(""Invalid debug folder: "" + debugFolder);
		}

		String fileName = proxyClassName;
		if (fileName == null) {
			fileName = ""proxetta-"" + System.currentTimeMillis();
		}

		fileName += "".class"";

		File file = new File(debugFolder, fileName);
		try {
			FileUtil.writeBytes(file, bytes);
		} catch (IOException ioex) {
			log.warn(""Error writing class as "" + file, ioex);
		}
	}",Writes created class content to output folder for debugging purposes .,jodd-proxetta/src/main/java/jodd/proxetta/ProxettaFactory.java,"[{'Syntax': 'debugFolder.exists()', 'FunctionName': 'exists', 'ArgsCount': 0, 'MethodBody': 'public HttpStatus400 exists() {\n\t\t\tmessage = ""Resource already exists."";\n\t\t\treturn this;\n\t\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/result/HttpStatus.java'}]"
6621cda5cda9bd4817b11293,kiegroup/droolsjbpm-tools,"public void write(OutputStream os) throws IOException {
        if (requestBodyWriter == null) {
            if (inputRead) {
                is.reset();
                inputRead = false;
            }
            super.write(os);
        } else {
            requestBodyWriter.writeRequestBody(os);
        }
    }",Writes this request s body to the given output stream . This method may be called more than once during the lifetime of this request .,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/Request.java,"[{'Syntax': 'is.reset()', 'FunctionName': 'reset', 'ArgsCount': 0, 'MethodBody': 'public void reset() {\n        this.imports = null;\n        this.globals = null;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/flow/ruleflow/view/property/action/ActionCompletionProcessor.java'}, {'Syntax': 'super.write(os)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'public void write(int b) throws IOException {\n            // do nothing\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/internal/authentication/DigestOutputStream.java'}, {'Syntax': 'requestBodyWriter.writeRequestBody(os)', 'FunctionName': 'writeRequestBody', 'ArgsCount': 1, 'MethodBody': 'public void writeRequestBody(OutputStream os) throws IOException {\n        IDocumentMarshaler marshaler = new DocumentMarshaler();\n        OutputStreamWriter writer = new OutputStreamWriter(os, characterEncoding);\n        marshaler.print(body, writer, ""utf-8""); //$NON-NLS-1$\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/RequestBodyWriter.java'}]"
6621cda5cda9bd4817b11294,oblac/jodd,"public static URL[] of(ClassLoader classLoader, Class clazz) {
		if (clazz == null) {
			clazz = ClassPathURLs.class;
		}
		if (classLoader == null) {
			classLoader = clazz.getClassLoader();
		}
		final Set<URL> urls = new LinkedHashSet<>();

		while (classLoader != null) {
			if (classLoader instanceof URLClassLoader) {
				final URLClassLoader urlClassLoader = (URLClassLoader) classLoader;
				return urlClassLoader.getURLs();
			}

			final URL url = classModuleUrl(classLoader, clazz);

			if (url != null) {
				urls.add(url);
			}

			classLoader = classLoader.getParent();
		}

		return urls.toArray(new URL[0]);
	}",Returns urls for the classloader,jodd-core/src/main/java/jodd/bridge/ClassPathURLs.java,"[{'Syntax': 'classModuleUrl(classLoader, clazz)', 'FunctionName': 'classModuleUrl', 'ArgsCount': 2, 'MethodBody': 'private static URL classModuleUrl(final ClassLoader classLoader, final Class clazz) {\n\t\tif (clazz == null) {\n\t\t\treturn null;\n\t\t}\n\t\tfinal String name = clazz.getName().replace(\'.\', \'/\') + "".class"";\n\n\t\tfinal URL url = classLoader.getResource(name);\n\n\t\tif (url == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// use root\n\t\tString urlString = url.toString();\n\t\tfinal int ndx = urlString.indexOf(name);\n\t\turlString = urlString.substring(0, ndx) + urlString.substring(ndx + name.length());\n\n\t\ttry {\n\t\t\treturn new URL(urlString);\n\t\t} catch (final MalformedURLException ignore) {\n\t\t\treturn null;\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/ClassPathURLs.java'}, {'Syntax': 'urls.add(url)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cda5cda9bd4817b11295,kocakosm/pitaya,"public static <T> T[] copyOf(T[] original)
	{
		return Arrays.copyOf(original, original.length);
	}",Returns a copy of the given array . The original array and the returned copy will have identical length and content .,src/org/kocakosm/pitaya/util/XArrays.java,[]
6621cda5cda9bd4817b11296,oblac/jodd,"public String on(final String string) {
		if (!enabled) {
			return string;
		}

		final StringBuilder sb = new StringBuilder();

		if (prefix != null) {
			sb.append(prefix).append(""m"");
		}

		sb.append(string);

		if (suffix != null) {
			sb.append(suffix).append(""m"");
		}

		return sb.toString();
	}",Returns chalked string .,jodd-core/src/main/java/jodd/chalk/Chalk.java,"[{'Syntax': 'sb.append(prefix).append(""m"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'sb.append(prefix)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'sb.append(string)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'sb.append(suffix).append(""m"")', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'sb.append(suffix)', 'FunctionName': 'append', 'ArgsCount': 1, 'MethodBody': 'public StringBand append(final boolean b) {\n\t\treturn append(b ? StringPool.TRUE : StringPool.FALSE);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/StringBand.java'}, {'Syntax': 'sb.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String toString() {\n\t\tString out = """";\n\t\tif (shortName != null) {\n\t\t\tout += ""-"" + shortName;\n\t\t}\n\t\tif (longName != null) {\n\t\t\tif (!out.isEmpty()) {\n\t\t\t\tout += "" | "";\n\t\t\t}\n\t\t\tout += ""--"" + longName;\n\t\t}\n\t\treturn out;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cli/Option.java'}]"
6621cda6cda9bd4817b11297,hawkular/hawkular-metrics,"private void onRequestResult(HttpServerExchange serverExchange, PooledConnection connection, boolean allowed) {
        connectionPools.get(serverExchange.getIoThread()).release(connection);
        // Remove attachment early to make it eligible for GC
        AuthContext context = serverExchange.removeAttachment(AUTH_CONTEXT_KEY);
        apiLatency.update(context.getClientResponseTime(), NANOSECONDS);
        authLatency.update(context.getLatency(), NANOSECONDS);
        if (allowed) {
            serverExchange.dispatch(containerHandler);
        } else {
            endExchange(serverExchange, FORBIDDEN);
        }
    }",Called when the Kubernetes master server reponse has been inspected .,containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java,"[{'Syntax': 'connectionPools.get(serverExchange.getIoThread()).release(connection)', 'FunctionName': 'release', 'ArgsCount': 1, 'MethodBody': ""private void release(PooledConnection connection) {\n            connection.idle = true;\n            if (stop) {\n                return;\n            }\n            // Don't keep the connection in the pool if we can't reuse it\n            if (!connection.canReuse(System.currentTimeMillis())) {\n                connections.remove(connection);\n                IoUtils.safeClose(connection);\n            }\n            removeTimedOutWaiters();\n            // Stop here if no client is waiting for a connection\n            if (!waiters.isEmpty()) {\n                PooledConnection selected = selectIdleConnection();\n                if (selected != null) {\n                    // Got a connection, can poll a waiter now\n                    PooledConnectionWaiter waiter = waiters.poll();\n                    waiter.onGet.accept(selected);\n                } else if (!isFull()) {\n                    createConnection();\n                }\n            }\n        }"", 'FileName': '/hawkular/hawkular-metrics/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java'}, {'Syntax': 'connectionPools.get(serverExchange.getIoThread())', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public String get(String name) {\n        return properties.get(name);\n    }', 'FileName': '/hawkular/hawkular-metrics/core/configuration-service/src/main/java/org/hawkular/metrics/sysconfig/Configuration.java'}, {'Syntax': 'context.getClientResponseTime()', 'FunctionName': 'getClientResponseTime', 'ArgsCount': 0, 'MethodBody': 'private long getClientResponseTime() {\n            return requestStop - requestStart;\n        }', 'FileName': '/hawkular/hawkular-metrics/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java'}, {'Syntax': 'context.getLatency()', 'FunctionName': 'getLatency', 'ArgsCount': 0, 'MethodBody': 'private long getLatency() {\n            return requestStop - creation;\n        }', 'FileName': '/hawkular/hawkular-metrics/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java'}, {'Syntax': 'endExchange(serverExchange, FORBIDDEN)', 'FunctionName': 'endExchange', 'ArgsCount': 2, 'MethodBody': 'public static void endExchange(HttpServerExchange exchange, int statusCode) {\n        endExchange(exchange, statusCode, null);\n    }', 'FileName': '/hawkular/hawkular-metrics/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/Utils.java'}]"
6621cda6cda9bd4817b11298,artclarke/humble-video,"private static void deleteTemporaryFiles() {
    final File dir = getTmpDir();
    final FilenameFilter filter = new FilenameFilter() {
      public boolean accept(File dir, String name) {
        return name.endsWith(HUMBLE_TEMP_EXTENSION);
      }
    };
    final File markers[] = dir.listFiles(filter);
    for (File marker : markers) {
      final String markerName = marker.getName();
      final String libName = markerName.substring(0, markerName.length()
          - HUMBLE_TEMP_EXTENSION.length());
      final File lib = new File(marker.getParentFile(), libName);
      if (!lib.exists() || lib.delete())
        marker.delete();
    }
  }",Finds all . humble temp files in the temp directory and nukes them .,humble-video-noarch/src/main/java/io/humble/ferry/JNILibrary.java,"[{'Syntax': 'getTmpDir()', 'FunctionName': 'getTmpDir', 'ArgsCount': 0, 'MethodBody': 'private static File getTmpDir() {\n    final File tmpdir = new File(System.getProperty(""java.io.tmpdir""));\n    return tmpdir;\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/ferry/JNILibrary.java'}, {'Syntax': 'marker.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n    return VideoJNI.CodecProfile_getName(swigCPtr, this);\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/CodecProfile.java'}, {'Syntax': 'lib.delete()', 'FunctionName': 'delete', 'ArgsCount': 0, 'MethodBody': 'public void delete() {\n    if (mResampleMediaPicture != null)\n      mResampleMediaPicture.delete();\n    mResampleMediaPicture = null;\n    \n    super.delete();\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/awt/BgrConverter.java'}, {'Syntax': 'marker.delete()', 'FunctionName': 'delete', 'ArgsCount': 0, 'MethodBody': 'public void delete() {\n    if (mResampleMediaPicture != null)\n      mResampleMediaPicture.delete();\n    mResampleMediaPicture = null;\n    \n    super.delete();\n  }', 'FileName': '/artclarke/humble-video/humble-video-noarch/src/main/java/io/humble/video/awt/BgrConverter.java'}]"
6621cda6cda9bd4817b11299,Unidata/thredds,"public boolean searchForward(KMPMatch match, int maxBytes) throws IOException {
    long start = getFilePointer();
    long last = (maxBytes < 0) ? length() : Math.min(length(), start + maxBytes);
    long needToScan = last - start;

    // check what ever is now in the buffer
    int bytesAvailable = (int) (dataEnd - filePosition);
    if (bytesAvailable < 1) {
      seek(filePosition); // read a new buffer
      bytesAvailable = (int) (dataEnd - filePosition);
    }
    int bufStart = (int) (filePosition - bufferStart);
    int scanBytes = (int) Math.min(bytesAvailable, needToScan);
    int pos = match.indexOf(buffer, bufStart, scanBytes);
    if (pos >= 0) {
      seek(bufferStart + pos);
      return true;
    }

    int matchLen = match.getMatchLength();
    needToScan -= scanBytes - matchLen;

    while (needToScan > matchLen) {
      readBuffer(dataEnd - matchLen); // force new buffer

      scanBytes = (int) Math.min(buffer.length, needToScan);
      pos = match.indexOf(buffer, 0, scanBytes);
      if (pos > 0) {
        seek(bufferStart + pos);
        return true;
      }

      needToScan -= scanBytes - matchLen;
    }

    // failure
    seek(last);
    return false;
  }",Search forward from the current pos looking for a match .,cdm/src/main/java/ucar/unidata/io/RandomAccessFile.java,[]
6621cda6cda9bd4817b1129a,ReactiveX/RxJava,"@CheckReturnValue
    @NonNull
    public static <T> UnicastSubject<T> create() {
        return new UnicastSubject<T>(bufferSize(), true);
    }",Creates an UnicastSubject with an internal buffer capacity hint 16 .,src/main/java/io/reactivex/subjects/UnicastSubject.java,"[{'Syntax': 'bufferSize()', 'FunctionName': 'bufferSize', 'ArgsCount': 0, 'MethodBody': '@CheckReturnValue\n    public static int bufferSize() {\n        return BUFFER_SIZE;\n    }', 'FileName': '/ReactiveX/RxJava/src/main/java/io/reactivex/rxjava3/core/Flowable.java'}]"
6621cda6cda9bd4817b1129b,cologneintelligence/FitGoodies,"public int dirDepth(final File path) {
		final String stringPath = path.getPath();
		return stringPath.length() - stringPath.replaceAll(""[/\\\\]"", """").length();
	}",Counts the number of directories in a given path .,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java,[]
6621cda6cda9bd4817b1129c,oblac/jodd,"public CtorDescriptor getCtorDescriptor(final Class... args) {
		ctors:
		for (CtorDescriptor ctorDescriptor : allCtors) {
			Class[] arg = ctorDescriptor.getParameters();

			if (arg.length != args.length) {
				continue;
			}

			for (int j = 0; j < arg.length; j++) {
				if (arg[j] != args[j]) {
					continue ctors;
				}
			}

			return ctorDescriptor;
		}
		return null;
	}",Finds constructor description that matches given argument types .,jodd-bean/src/main/java/jodd/introspector/Ctors.java,[]
6621cda6cda9bd4817b1129d,intellimate/IzouSDK,"public static Optional<CommandResource> createCommandResource(Identification provider, String command, Capabilities capabilities, Context context) {
        CommandResource commandResource = new CommandResource(provider, command, capabilities);
        if (!verifyCommand(command)) {
            context.getLogger().error(""IllegalCommand!"");
            return Optional.empty();
        }
        if (!verifyCapabilities(command, capabilities)) {
            context.getLogger().error(""Player is not able to handle Command!"");
            return Optional.empty();
        }
        return Optional.of(commandResource);
    }",creates a new Resource .,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java,"[{'Syntax': 'verifyCommand(command)', 'FunctionName': 'verifyCommand', 'ArgsCount': 1, 'MethodBody': 'public static boolean verifyCommand(String command) {\n        return command.equals(PLAY) ||\n                command.equals(PAUSE) ||\n                command.equals(STOP) ||\n                command.equals(SELECT_TRACK) ||\n                command.equals(NEXT) ||\n                command.equals(PREVIOUS) ||\n                command.equals(CHANGE_PLAYBACK) ||\n                command.equals(CHANGE_VOLUME);\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java'}, {'Syntax': 'context.getLogger().error(""IllegalCommand!"")', 'FunctionName': 'error', 'ArgsCount': 1, 'MethodBody': 'void error(String msg);', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/util/ContextProvider.java'}, {'Syntax': 'context.getLogger()', 'FunctionName': 'getLogger', 'ArgsCount': 0, 'MethodBody': '@Override\n    public ExtendedLogger getLogger() {\n        return context.getLogger();\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/Context.java'}, {'Syntax': 'verifyCapabilities(command, capabilities)', 'FunctionName': 'verifyCapabilities', 'ArgsCount': 2, 'MethodBody': 'public static boolean verifyCapabilities(String command, Capabilities capabilities) {\n        switch (command) {\n            case PLAY: return capabilities.hasPlayPauseControl();\n            case PAUSE: return capabilities.hasPlayPauseControl();\n            case SELECT_TRACK: return capabilities.isAbleToSelectTrack();\n            case NEXT: return capabilities.hasNextPrevious();\n            case PREVIOUS: return capabilities.hasNextPrevious();\n            case JUMP: return capabilities.isAbleToJump();\n            case CHANGE_PLAYBACK: return capabilities.isPlaybackChangeable();\n            case CHANGE_VOLUME: return capabilities.canChangeVolume();\n            case STOP: return true;\n        }\n        return false;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java'}, {'Syntax': 'context.getLogger().error(""Player is not able to handle Command!"")', 'FunctionName': 'error', 'ArgsCount': 1, 'MethodBody': 'void error(String msg);', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/util/ContextProvider.java'}, {'Syntax': 'context.getLogger()', 'FunctionName': 'getLogger', 'ArgsCount': 0, 'MethodBody': '@Override\n    public ExtendedLogger getLogger() {\n        return context.getLogger();\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/Context.java'}]"
6621cda6cda9bd4817b1129e,1gravity/Android-RTEditor,"private Bitmap rotateImage(Bitmap src, float degree) {
        // create new matrix
        Matrix matrix = new Matrix();
        // setup rotation degree
        matrix.postRotate(degree);
        Bitmap bmp = Bitmap.createBitmap(src, 0, 0, src.getWidth(),
                src.getHeight(), matrix, true);
        return bmp;
    }",Thong added for rotate,RTEditor/src/main/java/com/onegravity/rteditor/media/crop/CropImageActivity.java,"[{'Syntax': 'src.getWidth()', 'FunctionName': 'getWidth', 'ArgsCount': 0, 'MethodBody': '@Override\n    public int getWidth() {\n        return getWidth(mAudioPreviewImage);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/api/media/RTAudioImpl.java'}, {'Syntax': 'src.getHeight()', 'FunctionName': 'getHeight', 'ArgsCount': 0, 'MethodBody': '@Override\n    public int getHeight() {\n        return getHeight(mAudioPreviewImage);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/api/media/RTAudioImpl.java'}]"
6621cda6cda9bd4817b1129f,wro4j/wro4j,"private String computeNewImageLocation(final String cssUri, final String imageUrl) {
    LOG.debug(""cssUri: {}, imageUrl {}"", cssUri, imageUrl);
    final String cleanImageUrl = cleanImageUrl(imageUrl);
    // TODO move to ServletContextUriLocator as a helper method?
    // for the following input: /a/b/c/1.css => /a/b/c/
    int idxLastSeparator = cssUri.lastIndexOf(ServletContextUriLocator.PREFIX);
    if (idxLastSeparator == -1) {
      if (ClasspathUriLocator.isValid(cssUri)) {
        idxLastSeparator = cssUri.lastIndexOf(ClasspathUriLocator.PREFIX);
        // find the index of ':' character used by classpath prefix
        if (idxLastSeparator >= 0) {
          idxLastSeparator += ClasspathUriLocator.PREFIX.length() - 1;
        }
      }
      if (idxLastSeparator < 0) {
        throw new IllegalStateException(""Invalid cssUri: "" + cssUri + "". Should contain at least one '/' character!"");
      }
    }
    final String cssUriFolder = cssUri.substring(0, idxLastSeparator + 1);
    // remove '/' from imageUrl if it starts with one.
    final String processedImageUrl = cleanImageUrl.startsWith(ServletContextUriLocator.PREFIX) ? cleanImageUrl.substring(1)
        : cleanImageUrl;
    final String computedImageLocation = cleanPath(cssUriFolder + processedImageUrl);
    LOG.debug(""computedImageLocation: {}"", computedImageLocation);
    return computedImageLocation;
  }",Concatenates cssUri and imageUrl after few changes are applied to both input parameters .,wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/ImageUrlRewriter.java,"[{'Syntax': 'cleanImageUrl(imageUrl)', 'FunctionName': 'cleanImageUrl', 'ArgsCount': 1, 'MethodBody': 'public static final String cleanImageUrl(final String imageUrl) {\r\n    notNull(imageUrl);\r\n    return imageUrl.replace(\'\\\'\', \' \').replace(\'\\""\', \' \').trim();\r\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/util/WroUtil.java'}, {'Syntax': 'ClasspathUriLocator.isValid(cssUri)', 'FunctionName': 'isValid', 'ArgsCount': 1, 'MethodBody': ""public static boolean isValid(final String uri) {\n    // if creation of URL object doesn't throw an exception, the uri can be\n    // accepted.\n    try {\n      new URL(uri);\n    } catch (final MalformedURLException e) {\n      return false;\n    }\n    return true;\n  }"", 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/model/resource/locator/UrlUriLocator.java'}, {'Syntax': 'cleanPath(cssUriFolder + processedImageUrl)', 'FunctionName': 'cleanPath', 'ArgsCount': 1, 'MethodBody': 'public static String cleanPath(final String path) {\n    if (path == null) {\n      return null;\n    }\n    String pathToUse = replace(path, WINDOWS_FOLDER_SEPARATOR, FOLDER_SEPARATOR);\n\n    // Strip prefix from path to analyze, to not treat it as part of the\n    // first path element. This is necessary to correctly parse paths like\n    // ""file:core/../core/io/Resource.class"", where the "".."" should just\n    // strip the first ""core"" directory while keeping the ""file:"" prefix.\n    final int prefixIndex = pathToUse.indexOf("":"");\n    String prefix = EMPTY;\n    if (prefixIndex != -1) {\n      prefix = pathToUse.substring(0, prefixIndex + 1);\n      pathToUse = pathToUse.substring(prefixIndex + 1);\n    }\n    if (pathToUse.startsWith(FOLDER_SEPARATOR)) {\n      prefix = prefix + FOLDER_SEPARATOR;\n      pathToUse = pathToUse.substring(1);\n    }\n\n    final String[] pathArray = delimitedListToStringArray(pathToUse,\n        FOLDER_SEPARATOR);\n    final List<String> pathElements = new ArrayList<>();\n    int tops = 0;\n\n    for (int i = pathArray.length - 1; i >= 0; i--) {\n      final String element = pathArray[i];\n      if (CURRENT_PATH.equals(element)) {\n        // Points to current directory - drop it.\n      } else if (TOP_PATH.equals(element)) {\n        // Registering top path found.\n        tops++;\n      } else {\n        if (tops > 0) {\n          // Merging path element with element corresponding to top path.\n          tops--;\n        } else {\n          // Normal path element found.\n          pathElements.add(0, element);\n        }\n      }\n    }\n\n    // Remaining top paths need to be retained.\n    for (int i = 0; i < tops; i++) {\n      pathElements.add(0, TOP_PATH);\n    }\n\n    return prefix + collectionToDelimitedString(pathElements, FOLDER_SEPARATOR);\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/util/StringUtils.java'}]"
6621cda6cda9bd4817b112a0,coinbase/coinbase-java,"public CoinbaseBuilder withApiKey(String api_key, String api_secret) {
    	this.api_key = api_key;
    	this.api_secret = api_secret;
    	return this;
    }",Specify the HMAC api key and secret to be used for authenticated requests,src/main/java/com/coinbase/api/CoinbaseBuilder.java,[]
6621cda6cda9bd4817b112a1,stanfy/enroscar,"protected void memCacheImage(final String url, final Bitmap bitmap) {
    if (debug) { Log.d(TAG, ""Memcache for "" + url); }
    memCache.putElement(url, bitmap);
  }",Add image to memory cache .,images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java,"[{'Syntax': 'memCache.putElement(url, bitmap)', 'FunctionName': 'putElement', 'ArgsCount': 2, 'MethodBody': '@Override\n  public void putElement(final String url, final Bitmap image) {\n    cache.put(url, image);\n  }', 'FileName': '/stanfy/enroscar/images/src/main/java/com/stanfy/enroscar/images/cache/SupportLruImageMemoryCache.java'}]"
6621cda6cda9bd4817b112a2,oblac/jodd,"public static Cookie[] getAllCookies(final HttpServletRequest request, final String cookieName) {
		Cookie[] cookies = request.getCookies();
		if (cookies == null) {
			return null;
		}
		ArrayList<Cookie> list = new ArrayList<>(cookies.length);
		for (Cookie cookie : cookies) {
			if (cookie.getName().equals(cookieName)) {
				list.add(cookie);
			}
		}
		if (list.isEmpty()) {
			return null;
		}
		return list.toArray(new Cookie[0]);
	}",Returns all cookies from client that matches provided name .,jodd-servlet/src/main/java/jodd/servlet/ServletUtil.java,"[{'Syntax': 'cookie.getName().equals(cookieName)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'cookie.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n\t\treturn name;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'list.add(cookie)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> add(final Consumer<T> consumer) {\n\t\tconsumerList.add(consumer);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}, {'Syntax': 'list.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic boolean isEmpty() {\n\t\treturn size() == 0;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cda6cda9bd4817b112a3,Unidata/thredds,"static synchronized public void closeAll() {

    List<MetadataManager> closeDatabases = new ArrayList<>(openDatabases);
    for (MetadataManager mm : closeDatabases) {
      if (debug) System.out.println(""  close database "" + mm.collectionName);
      mm.close();
    }
    openDatabases = new ArrayList<>(); // empty

    if (myEnv != null) {
      try {
        // Finally, close the store and environment.
        myEnv.close();
        myEnv = null;
        logger.info(""closed bdb caching"");

      } catch (DatabaseException dbe) {
        logger.error(""Error closing bdb: "", dbe);
      }
    }
  }",this is called on TDS shutdown and reinit,clcommon/src/main/java/thredds/inventory/bdb/MetadataManager.java,[]
6621cda6cda9bd4817b112a4,intellimate/IzouSDK,"public static boolean verifyCapabilities(String command, Capabilities capabilities) {
        switch (command) {
            case PLAY: return capabilities.hasPlayPauseControl();
            case PAUSE: return capabilities.hasPlayPauseControl();
            case SELECT_TRACK: return capabilities.isAbleToSelectTrack();
            case NEXT: return capabilities.hasNextPrevious();
            case PREVIOUS: return capabilities.hasNextPrevious();
            case JUMP: return capabilities.isAbleToJump();
            case CHANGE_PLAYBACK: return capabilities.isPlaybackChangeable();
            case CHANGE_VOLUME: return capabilities.canChangeVolume();
            case STOP: return true;
        }
        return false;
    }",verifies that the player is capable of handling the command,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java,"[{'Syntax': 'capabilities.hasPlayPauseControl()', 'FunctionName': 'hasPlayPauseControl', 'ArgsCount': 0, 'MethodBody': 'public boolean hasPlayPauseControl() {\n        return playPauseControl;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}, {'Syntax': 'capabilities.hasPlayPauseControl()', 'FunctionName': 'hasPlayPauseControl', 'ArgsCount': 0, 'MethodBody': 'public boolean hasPlayPauseControl() {\n        return playPauseControl;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}, {'Syntax': 'capabilities.isAbleToSelectTrack()', 'FunctionName': 'isAbleToSelectTrack', 'ArgsCount': 0, 'MethodBody': 'public boolean isAbleToSelectTrack() {\n        return ableToSelectTrack;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}, {'Syntax': 'capabilities.hasNextPrevious()', 'FunctionName': 'hasNextPrevious', 'ArgsCount': 0, 'MethodBody': 'public boolean hasNextPrevious() {\n        return nextPrevious;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}, {'Syntax': 'capabilities.hasNextPrevious()', 'FunctionName': 'hasNextPrevious', 'ArgsCount': 0, 'MethodBody': 'public boolean hasNextPrevious() {\n        return nextPrevious;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}, {'Syntax': 'capabilities.isAbleToJump()', 'FunctionName': 'isAbleToJump', 'ArgsCount': 0, 'MethodBody': 'public boolean isAbleToJump() {\n        return ableToJump;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}, {'Syntax': 'capabilities.isPlaybackChangeable()', 'FunctionName': 'isPlaybackChangeable', 'ArgsCount': 0, 'MethodBody': 'public boolean isPlaybackChangeable() {\n        return playbackChangeable;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}, {'Syntax': 'capabilities.canChangeVolume()', 'FunctionName': 'canChangeVolume', 'ArgsCount': 0, 'MethodBody': 'public boolean canChangeVolume() {\n        return changeVolume;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/music/Capabilities.java'}]"
6621cda6cda9bd4817b112a5,rupertlssmith/lojix,"public String getPageScope()
    {
        Map info = new TreeMap();
        Enumeration names = pageContext.getAttributeNamesInScope(PageContext.PAGE_SCOPE);

        while (names.hasMoreElements())
        {
            String name = (String) names.nextElement();
            Object value = pageContext.getAttribute(name);

            info.put(name, toStringValue(value));
        }

        return toHTMLTable(""page scope"", info);
    }",Returns a String with all page scope variables .,base/struts-tools/src/main/com/thesett/common/webapp/tags/DebugTag.java,"[{'Syntax': 'names.hasMoreElements()', 'FunctionName': 'hasMoreElements', 'ArgsCount': 0, 'MethodBody': 'public boolean hasMoreElements()\n        {\n            return names.hasMoreElements();\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/jndi/SimpleContext.java'}, {'Syntax': 'names.nextElement()', 'FunctionName': 'nextElement', 'ArgsCount': 0, 'MethodBody': 'public Object nextElement()\n        {\n            String name = (String) names.nextElement();\n            String className = bindings.get(name).getClass().getName();\n\n            return new NameClassPair(name, className);\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/jndi/SimpleContext.java'}, {'Syntax': 'info.put(name, toStringValue(value))', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(String name, Object value)\n    {\n        pageContext.setAttribute(name, value, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}, {'Syntax': 'toStringValue(value)', 'FunctionName': 'toStringValue', 'ArgsCount': 1, 'MethodBody': 'private String toStringValue(Object value)\n    {\n        // Check if the value is null\n        if (value == null)\n        {\n            return ""null"";\n        }\n\n        StringBuffer sb = new StringBuffer();\n\n        Class type = value.getClass();\n\n        if (type.isArray())\n        {\n            Class componentType = type.getComponentType();\n\n            sb.append(componentType.getName());\n            sb.append(""[]: {"");\n\n            if (!componentType.isPrimitive())\n            {\n                Object[] arr = (Object[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Boolean.TYPE)\n            {\n                boolean[] arr = (boolean[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Byte.TYPE)\n            {\n                byte[] arr = (byte[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Character.TYPE)\n            {\n                char[] arr = (char[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Double.TYPE)\n            {\n                double[] arr = (double[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Float.TYPE)\n            {\n                float[] arr = (float[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Integer.TYPE)\n            {\n                int[] arr = (int[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Long.TYPE)\n            {\n                long[] arr = (long[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n            else if (componentType == Short.TYPE)\n            {\n                short[] arr = (short[]) value;\n\n                for (int i = 0; i < arr.length; i++)\n                {\n                    if (i != 0)\n                    {\n                        sb.append("", "");\n                    }\n\n                    sb.append(arr[i]);\n                }\n            }\n\n            sb.append(""}"");\n        }\n        else\n        {\n            // Obtain the objects value using toString, but protect this against null pointer exceptions, to harden\n            // this implementation.\n            String stringValue = null;\n\n            try\n            {\n                stringValue = value.toString();\n            }\n            catch (NullPointerException e)\n            {\n                stringValue = """";\n            }\n\n            sb.append(value.getClass().getName()).append("": "").append(stringValue);\n        }\n\n        return sb.toString();\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/DebugTag.java'}, {'Syntax': 'toHTMLTable(""page scope"", info)', 'FunctionName': 'toHTMLTable', 'ArgsCount': 2, 'MethodBody': 'private String toHTMLTable(String propName, Map values)\n    {\n        StringBuffer tableSB = new StringBuffer();\n\n        tableSB.append(""<tr class=\\""debug\\""><th class=\\""debug\\"">"").append(propName).append(""</th></tr>"");\n\n        for (Iterator it = values.keySet().iterator(); it.hasNext();)\n        {\n            Object o = it.next();\n            String key = (String) o;\n\n            tableSB.append(""<tr class=\\""debug\\""><td class=\\""debug\\"">"").append(key).append(""</td><td>"").append(\n                values.get(key)).append(""</td></tr>"");\n        }\n\n        return tableSB.toString();\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/DebugTag.java'}]"
6621cda6cda9bd4817b112a6,buschmais/jqa-commandline-tool,"private static String getErrorMessage(CliExecutionException e) {
        StringBuffer messageBuilder = new StringBuffer();
        Throwable current = e;
        do {
            messageBuilder.append(""-> "");
            messageBuilder.append(current.getMessage());
            current = current.getCause();
        }
        while (current != null);
        return messageBuilder.toString();
    }",Extract an error message from the given exception and its causes .,application/src/main/java/com/buschmais/jqassistant/commandline/Main.java,[]
6621cda6cda9bd4817b112a7,agentsoz/jill,"public boolean push(Object obj) {
    // Cannot add beyond maximum capacity
    if (isFull()) {
      return false;
    }
    // Grow if we are at capacity
    if (size == objects.length) {
      grow();
    }
    objects[size++] = obj;
    return true;
  }",Pushes an object on to the top of the stack .,jill/src/main/java/io/github/agentsoz/jill/util/Stack255.java,"[{'Syntax': 'isFull()', 'FunctionName': 'isFull', 'ArgsCount': 0, 'MethodBody': 'public boolean isFull() {\n    return size == MAXIMUM_CAPACITY;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/util/Stack255.java'}, {'Syntax': 'grow()', 'FunctionName': 'grow', 'ArgsCount': 0, 'MethodBody': 'private void grow() {\n    AObject[] temp = new AObject[objects.length + increment];\n    System.arraycopy(objects, 0, temp, 0, objects.length);\n    objects = temp;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/util/AObjectCatalog.java'}]"
6621cda6cda9bd4817b112a8,phax/ph-math,"protected String timestamp (final long time)
  {
    // Current time followed by elapsed time as (hh:mm:ss).
    final LocalDateTime aLDT = PDTFactory.getCurrentLocalDateTime ();
    final LocalDateTime aOld = PDTFactory.createLocalDateTime (time);

    return aLDT.toLocalTime ().toString () + "" ("" + Duration.between (aOld, aLDT).toString () + "")"";
  }",Return a timestamp string that contains the elapsed time period .,ph-math/src/main/java/com/helger/numbercruncher/piutils/AbstractPiFormula.java,"[{'Syntax': 'aLDT.toLocalTime ().toString ()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString ()\n    {\n      return m_aPart.toString ();\n    }', 'FileName': '/phax/ph-math/ph-math/src/main/java/com/helger/numbercruncher/mathutils/IEEE754.java'}, {'Syntax': 'Duration.between (aOld, aLDT).toString ()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String toString ()\n    {\n      return m_aPart.toString ();\n    }', 'FileName': '/phax/ph-math/ph-math/src/main/java/com/helger/numbercruncher/mathutils/IEEE754.java'}]"
6621cda6cda9bd4817b112a9,tiefaces/TieFaces,"private void setDataTablePage(final int first) {
		if (parent.getWebFormClientId() != null) {
			final DataTable d = (DataTable) FacesContext.getCurrentInstance().getViewRoot()
					.findComponent(parent.getWebFormClientId());
			if (d != null) {
				d.setFirst(first);
			}
		}
	}",Sets the data table page .,src/org/tiefaces/components/websheet/service/WebSheetLoader.java,"[{'Syntax': 'parent.getWebFormClientId()', 'FunctionName': 'getWebFormClientId', 'ArgsCount': 0, 'MethodBody': 'public String getWebFormClientId() {\r\n\t\treturn webFormClientId;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}, {'Syntax': 'parent.getWebFormClientId()', 'FunctionName': 'getWebFormClientId', 'ArgsCount': 0, 'MethodBody': 'public String getWebFormClientId() {\r\n\t\treturn webFormClientId;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/TieWebSheetView.java'}]"
6621cda6cda9bd4817b112aa,intellimate/IzouSDK,"public static Optional<Progress> importResource(ResourceModel resourceModel) {
        Object resource = resourceModel.getResource();
        try {
            //noinspection unchecked
            HashMap<String, Long> data = (HashMap<String, Long>) resource;
            long length = data.get(lengthDescriptor);
            long knownPosition = data.get(knownPositionDescriptor);
            long knownTimestamp = data.get(knownMillisTimeStampDescriptor);
            return Optional.of(new Progress(length, knownPosition, knownTimestamp));
        } catch (Exception e) {
            return Optional.empty();
        }
    }",creates a Progress - object from the resourceModel,src/main/java/org/intellimate/izou/sdk/frameworks/music/player/Progress.java,"[{'Syntax': 'resourceModel.getResource()', 'FunctionName': 'getResource', 'ArgsCount': 0, 'MethodBody': '@Override\n    public T getResource() {\n        return resource;\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/resource/Resource.java'}]"
6621cda6cda9bd4817b112ab,RestComm/jain-slee,"public void remove(boolean isUninstall) throws SLEEException {

		if (logger.isTraceEnabled()) {
			logger.trace(""removeProfileTable: removing profileTable=""
					+ profileTableName);
		}
		
		// remove the table profiles, at this stage they may use notification source, lets leave it.
		for (ProfileID profileID : getProfiles()) {
			// don't invoke the profile concrete object, to avoid evil profile lifecycle impls 
			// that rollbacks tx, as Test1110251Test
			this.removeProfile(profileID.getProfileName(), false, isUninstall);
		}

		// remove default profile
		if (getDefaultProfileEntity() != null) {
			this.removeProfile(null, false, false);
		}
		
		// add action after commit to remove tracer and close uncommitted mbeans
		TransactionalAction commitAction = new TransactionalAction() {
			public void execute() {
				// remove notification sources for profile table
				final TraceManagement traceMBeanImpl = sleeContainer.getTraceManagement();
				traceMBeanImpl.deregisterNotificationSource(new ProfileTableNotification(profileTableName));
				// close uncommitted mbeans
				closeUncommittedProfileMBeans();					
			}
		};
		sleeContainer.getTransactionManager().getTransactionContext().getAfterCommitActions().add(commitAction);
		

		if (sleeContainer.getSleeState() == SleeState.RUNNING) {
			endActivity();
		}

		// unregister mbean
		unregisterUsageMBean();

		// remove object pool
		profileManagement.getObjectPoolManagement().removeObjectPool(this, sleeContainer.getTransactionManager());

	}",Triggers remove operation on this profile table .,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java,"[{'Syntax': 'getProfiles()', 'FunctionName': 'getProfiles', 'ArgsCount': 0, 'MethodBody': 'public Collection<ProfileID> getProfiles() {\n\t\tList<ProfileID> result = new ArrayList<ProfileID>();\n\t\tfor (ProfileEntity profileEntity : component.getProfileEntityFramework().findAll(this.getProfileTableName())) {\n\t\t\tresult.add(new ProfileID(profileTableName,profileEntity.getProfileName()));\n\t\t}\n\t\treturn Collections.unmodifiableCollection(result);\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'this.removeProfile(profileID.getProfileName(), false, isUninstall)', 'FunctionName': 'removeProfile', 'ArgsCount': 3, 'MethodBody': 'public boolean removeProfile(String profileName, boolean invokeConcreteSbb, boolean isUninstall)\n\t\t\tthrows TransactionRequiredLocalException, SLEEException {\n\t\t\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(""[remove] on: "" + this + "" Profile["" + profileName\n\t\t\t\t\t+ ""]"");\n\t\t}\n\t\t\n\t\tProfileObjectImpl profileObject = getProfile(profileName);\n\t\tif (profileObject != null) {\n\t\t\t// remove using object\n\t\t\tprofileObject.profileRemove(invokeConcreteSbb, isUninstall);\n\t\t\t// close mbean if exists\n\t\t\tAbstractProfileMBeanImpl.close(profileTableName,profileName);\t\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'profileID.getProfileName()', 'FunctionName': 'getProfileName', 'ArgsCount': 0, 'MethodBody': 'public final String getProfileName() {\n        return profileName;\n    }', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/profile/ProfileID.java'}, {'Syntax': 'getDefaultProfileEntity()', 'FunctionName': 'getDefaultProfileEntity', 'ArgsCount': 0, 'MethodBody': 'public ProfileEntity getDefaultProfileEntity() {\n\t\treturn defaultProfileEntity;\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'this.removeProfile(null, false, false)', 'FunctionName': 'removeProfile', 'ArgsCount': 3, 'MethodBody': 'public boolean removeProfile(String profileName, boolean invokeConcreteSbb, boolean isUninstall)\n\t\t\tthrows TransactionRequiredLocalException, SLEEException {\n\t\t\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(""[remove] on: "" + this + "" Profile["" + profileName\n\t\t\t\t\t+ ""]"");\n\t\t}\n\t\t\n\t\tProfileObjectImpl profileObject = getProfile(profileName);\n\t\tif (profileObject != null) {\n\t\t\t// remove using object\n\t\t\tprofileObject.profileRemove(invokeConcreteSbb, isUninstall);\n\t\t\t// close mbean if exists\n\t\t\tAbstractProfileMBeanImpl.close(profileTableName,profileName);\t\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'sleeContainer.getTraceManagement()', 'FunctionName': 'getTraceManagement', 'ArgsCount': 0, 'MethodBody': 'public TraceManagement getTraceManagement() {\n\t\treturn traceMBeanImpl;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'traceMBeanImpl.deregisterNotificationSource(new ProfileTableNotification(profileTableName))', 'FunctionName': 'deregisterNotificationSource', 'ArgsCount': 1, 'MethodBody': 'public void deregisterNotificationSource(final NotificationSource src) {\r\n\t\t\r\n\t\tthis.tracerStorage.remove(src);\r\n\t\t\r\n\t}', 'FileName': '/RestComm/jain-slee/container/common/src/main/java/org/mobicents/slee/container/management/jmx/TraceMBeanImpl.java'}, {'Syntax': 'closeUncommittedProfileMBeans()', 'FunctionName': 'closeUncommittedProfileMBeans', 'ArgsCount': 0, 'MethodBody': 'private void closeUncommittedProfileMBeans() {\n\t\t// run it in a new thread to ensure no nested transactions\n\t\tRunnable r = new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\tfor (AbstractProfileMBean profileMBean : uncommittedProfileMBeans) {\n\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\tlogger.debug(""Closing uncommitted mbean ""+profileMBean);\n\t\t\t\t\t}\n\t\t\t\t\t// just rollback the profile creation, since in that use case there is a rollback action to unregister the bean\n\t\t\t\t\ttry {\n\t\t\t\t\t\tprofileMBean.restoreProfile();\n\t\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\t\tlogger.error(e.getMessage(),e);\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tnew Thread(r).start();\n\t\t\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'sleeContainer.getTransactionManager().getTransactionContext().getAfterCommitActions().add(commitAction)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(Button button) {\r\n    rootPanel.add(button);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/common/ToolBar.java'}, {'Syntax': 'sleeContainer.getTransactionManager().getTransactionContext().getAfterCommitActions()', 'FunctionName': 'getAfterCommitActions', 'ArgsCount': 0, 'MethodBody': 'public List<TransactionalAction> getAfterCommitActions() {\r\n\t\tif (afterCommitActions == null) {\r\n\t\t\tafterCommitActions = new ArrayList<TransactionalAction>();\r\n\t\t}\r\n\t\treturn afterCommitActions;\r\n\t}', 'FileName': '/RestComm/jain-slee/container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/TransactionContextImpl.java'}, {'Syntax': 'sleeContainer.getTransactionManager().getTransactionContext()', 'FunctionName': 'getTransactionContext', 'ArgsCount': 0, 'MethodBody': 'public TransactionContext getTransactionContext() {\n\t\tTransactionContext txContext = TransactionContextThreadLocal.getTransactionContext();\n\t\tif (txContext == null) {\n\t\t\ttry {\n\t\t\t\tfinal Transaction tx = transactionManager.getTransaction();\n\t\t\t\tif (tx != null && tx.getStatus() == Status.STATUS_ACTIVE) {\n\t\t\t\t\t// a tx was started with the real tx manager, lets try to hook the sync handler and a new tx context\n\t\t\t\t\ttxContext = bindToTransaction(tx);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Throwable e) {\n\t\t\t\tthrow new SLEEException(e.getMessage(), e);\n\t\t\t}\n\t\t}\n\t\treturn txContext;\n\t}', 'FileName': '/RestComm/jain-slee/container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/SleeTransactionManagerImpl.java'}, {'Syntax': 'sleeContainer.getTransactionManager()', 'FunctionName': 'getTransactionManager', 'ArgsCount': 0, 'MethodBody': 'public SleeTransactionManager getTransactionManager() {\n\t\treturn sleeTransactionManager;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'sleeContainer.getSleeState()', 'FunctionName': 'getSleeState', 'ArgsCount': 0, 'MethodBody': 'public SleeState getSleeState() {\n\t\treturn this.sleeState;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}, {'Syntax': 'endActivity()', 'FunctionName': 'endActivity', 'ArgsCount': 0, 'MethodBody': 'public void endActivity()\n        throws TransactionRequiredLocalException, SLEEException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/nullactivity/NullActivity.java'}, {'Syntax': 'unregisterUsageMBean()', 'FunctionName': 'unregisterUsageMBean', 'ArgsCount': 0, 'MethodBody': 'public void unregisterUsageMBean() {\n\t\tif (this.profileTableUsageMBean != null) {\n\t\t\ttry {\n\t\t\t\tthis.profileTableUsageMBean.remove();\n\t\t\t}\n\t\t\tcatch (Throwable e) {\n\t\t\t\tthrow new SLEEException(e.getMessage(),e);\n\t\t\t}\n\t\t}\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java'}, {'Syntax': 'profileManagement.getObjectPoolManagement().removeObjectPool(this, sleeContainer.getTransactionManager())', 'FunctionName': 'removeObjectPool', 'ArgsCount': 2, 'MethodBody': 'private void removeObjectPool(final ServiceID serviceID, final SbbID sbbID) {\n\t\tObjectPoolMapKey key = new ObjectPoolMapKey(serviceID,sbbID);\n\t\tfinal SbbObjectPoolImpl objectPool = pools.remove(key);\n\t\tif (objectPool != null) {\n\t\t\ttry {\n\t\t\t\tobjectPool.close();\n\t\t\t} catch (Exception e) {\n\t\t\t\tlogger.error(""failed to close pool"",e);\n\t\t\t}\n\t\t}\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(""Removed Pool for "" + key);\n\t\t}\n\t}', 'FileName': '/RestComm/jain-slee/container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbObjectPoolManagementImpl.java'}, {'Syntax': 'profileManagement.getObjectPoolManagement()', 'FunctionName': 'getObjectPoolManagement', 'ArgsCount': 0, 'MethodBody': 'public ProfileObjectPoolManagement getObjectPoolManagement() {\n\t\treturn objectPoolManagement;\n\t}', 'FileName': '/RestComm/jain-slee/container/profiles/src/main/java/org/mobicents/slee/container/management/ProfileManagementImpl.java'}, {'Syntax': 'sleeContainer.getTransactionManager()', 'FunctionName': 'getTransactionManager', 'ArgsCount': 0, 'MethodBody': 'public SleeTransactionManager getTransactionManager() {\n\t\treturn sleeTransactionManager;\n\t}', 'FileName': '/RestComm/jain-slee/container/spi/src/main/java/org/mobicents/slee/container/SleeContainer.java'}]"
6621cda7cda9bd4817b112ac,blademainer/common_utils,"private String consume(String line) {
        int index = (this.inComment ? endComment(line) : startComment(line));
        return (index == -1 ? null : line.substring(index));
    }",Consume the next comment token update the inComment flag and return the remaining content .,common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java,"[{'Syntax': 'endComment(line)', 'FunctionName': 'endComment', 'ArgsCount': 1, 'MethodBody': 'private int endComment(String line) {\n        return commentToken(line, END_COMMENT, false);\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java'}, {'Syntax': 'startComment(line)', 'FunctionName': 'startComment', 'ArgsCount': 1, 'MethodBody': 'private int startComment(String line) {\n        return commentToken(line, START_COMMENT, true);\n    }', 'FileName': '/blademainer/common_utils/common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java'}]"
6621cda7cda9bd4817b112ad,Unidata/thredds,"boolean isChildOf(H5Group that) {
      if (parent == null) return false;
      if (parent == that) return true;
      return parent.isChildOf(that);
    }",is this a child of that ?,cdm/src/main/java/ucar/nc2/iosp/hdf5/H5header.java,[]
6621cda7cda9bd4817b112ae,rupertlssmith/lojix,"public static void restoreValues(Object ob, Map<String, Object> values) throws NoSuchFieldException
    {
        /*log.fine(""public void restore(Object ob): called"");*/
        /*log.fine(""Object to restore to has the type: "" + ob.getClass());*/

        // Get the class of th object to restore to.
        Class obClass = ob.getClass();

        // Loop over all the stored properties.
        for (String propName : values.keySet())
        {
            // Get the cached property from this mementos store.
            Object nextValue = values.get(propName);
            /*log.fine(""Next property to restore is: "" + propName);*/
            /*log.fine(""Next value to restore is: "" + nextValue);*/

            // Used to hold the value to set.
            Object paramValue;

            // Used to hold the type of the value to set.
            Class paramType;

            // Check if the value store is a null.
            if (nextValue == null)
            {
                paramValue = null;
                paramType = null;
            }

            // Check if the value to store is a multi type data object.
            else if (nextValue instanceof TypeConverter.MultiTypeData)
            {
                /*log.fine(""The value to restore is a multi typed data object."");*/

                TypeConverter.MultiTypeData multiValue = (TypeConverter.MultiTypeData) nextValue;

                // Get the types (classes) of all the possible 'setter' methods for the property.
                Set<Class> setterTypes = ReflectionUtils.findMatchingSetters(ob.getClass(), propName);
                /*log.fine(""setterTypes = "" + setterTypes);*/

                // Use the type converter to get the best matching type with the multi data.
                paramType = TypeConverter.bestMatchingConversion(multiValue, setterTypes);

                // Convert the multi data to an object of the appropriate type.
                paramValue = TypeConverter.convert(multiValue, paramType);
            }

            // The value to store is not a multi type.
            else
            {
                /*log.fine(""The value to restore is a simply typed data object."");*/

                // Get the type and value of the plain type to set.
                paramValue = nextValue;
                paramType = nextValue.getClass();
            }

            /*log.fine(""paramValue = "" + paramValue);*/
            /*log.fine(""paramType = "" + paramType);*/

            // Call the setter method with the new property value, checking first that the property has a matching
            // 'setter' method.
            Method setterMethod;

            try
            {
                // Convert the first letter of the property name to upper case to match against the upper case version
                // of it that will be in the setter method name. For example the property test will have a setter method
                // called setTest.
                String upperPropertyName = Character.toUpperCase(propName.charAt(0)) + propName.substring(1);

                // Try to find an appropriate setter method on the object to call.
                setterMethod = obClass.getMethod(""set"" + upperPropertyName, paramType);

                // Call the setter method with the new property value.
                Object[] params = new Object[] { paramValue };
                setterMethod.invoke(ob, params);
            }
            catch (NoSuchMethodException e)
            {
                // Do nothing as properties may have getters but no setter for read only properties.
                /*log.log(java.util.logging.Level.FINE, ""A setter method could not be found for "" + propName + ""."", e);*/

                /*
                // The object does not have a matching setter method for the type.
                NoSuchFieldException nsfe = new NoSuchFieldException(""The object does not have a matching setter "" +
                                                                     ""method 'set"" + propName + ""'."");
                nsfe.initCause(e);
                throw nsfe;
                */
            }
            catch (IllegalAccessException e)
            {
                /*log.log(java.util.logging.Level.FINE, ""IllegalAccessException during call to setter method."", e);*/
            }
            catch (InvocationTargetException e)
            {
                /*log.log(java.util.logging.Level.FINE, ""InvocationTargetException during call to setter method."", e);*/
            }
        }
    }",Restores the properties currently in this memento to the specified object .,base/common/src/main/com/thesett/common/reflect/BeanMemento.java,"[{'Syntax': 'values.keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': 'public Set keySet()\n    {\n        // Synchronize on the cache to ensure its integrity in a multi-threaded environment.\n        synchronized (cache)\n        {\n            return cache.keySet();\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/TimeoutMap.java'}, {'Syntax': 'values.get(propName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(String name)\n    {\n        return pageContext.getAttribute(name, scope);\n    }', 'FileName': '/rupertlssmith/lojix/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java'}, {'Syntax': 'ReflectionUtils.findMatchingSetters(ob.getClass(), propName)', 'FunctionName': 'findMatchingSetters', 'ArgsCount': 2, 'MethodBody': 'public static Set<Class> findMatchingSetters(Class obClass, String propertyName)\n    {\n        /*log.fine(""private Set<Class> findMatchingSetters(Object ob, String propertyName): called"");*/\n        Set<Class> types = new HashSet<Class>();\n\n        // Convert the first letter of the property name to upper case to match against the upper case version of\n        // it that will be in the setter method name. For example the property test will have a setter method called\n        // setTest.\n        String upperPropertyName = Character.toUpperCase(propertyName.charAt(0)) + propertyName.substring(1);\n\n        // Scan through all the objects methods.\n        Method[] methods = obClass.getMethods();\n\n        for (Method nextMethod : methods)\n        {\n            // Get the next method.\n            /*log.fine(""nextMethod = "" + nextMethod.getName());*/\n            // Check if a method has the correct name, accessibility and the correct number of arguments to be a setter\n            // method for the property.\n            String methodName = nextMethod.getName();\n\n            if (methodName.equals(""set"" + upperPropertyName) && Modifier.isPublic(nextMethod.getModifiers()) &&\n                    (nextMethod.getParameterTypes().length == 1))\n            {\n                /*log.fine(methodName + "" is a valid setter method for the property "" + propertyName +\n                        "" with argument of type "" + nextMethod.getParameterTypes()[0]);*/\n\n                // Add its argument type to the array of setter types.\n                types.add(nextMethod.getParameterTypes()[0]);\n            }\n        }\n\n        return types;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/ReflectionUtils.java'}, {'Syntax': 'TypeConverter.bestMatchingConversion(multiValue, setterTypes)', 'FunctionName': 'bestMatchingConversion', 'ArgsCount': 2, 'MethodBody': 'public static Class bestMatchingConversion(MultiTypeData d, Collection<Class> types)\n    {\n        /*log.fine(""public static Class bestMatchingConvertion(MultiTypeData d, Set<Class> types): called"");*/\n        /*log.fine(""d = "" + d);*/\n        /*log.fine(""types = "" + types);*/\n\n        // Try to match the native type first before trying the convertions.\n        switch (d.nativeType)\n        {\n        case OBJECT:\n        {\n            // Check if the matching Object class can be found in the set of possible classes.\n            if (types.contains(d.objectValue.getClass()))\n            {\n                return d.objectValue.getClass();\n            }\n\n            break;\n        }\n\n        case BOOLEAN:\n        {\n            // Check if boolean is in the set of possible classes to match.\n            if (types.contains(boolean.class))\n            {\n                return boolean.class;\n            }\n            else if (types.contains(Boolean.class))\n            {\n                return Boolean.class;\n            }\n\n            break;\n        }\n\n        case CHAR:\n        {\n            // Check if char is in the set of possible classes to match.\n            if (types.contains(char.class))\n            {\n                return char.class;\n            }\n            else if (types.contains(Character.class))\n            {\n                return Character.class;\n            }\n\n            break;\n        }\n\n        case BYTE:\n        {\n            // Check if byte is in the set of possible classes to match.\n            if (types.contains(byte.class))\n            {\n                return byte.class;\n            }\n            else if (types.contains(Byte.class))\n            {\n                return Byte.class;\n            }\n\n            break;\n        }\n\n        case SHORT:\n        {\n            // Check if short is in the set of possible classes to match.\n            if (types.contains(short.class))\n            {\n                return short.class;\n            }\n            else if (types.contains(Short.class))\n            {\n                return Short.class;\n            }\n\n            break;\n        }\n\n        case INT:\n        {\n            // Check if int is in the set of possible classes to match.\n            if (types.contains(int.class))\n            {\n                return int.class;\n            }\n            else if (types.contains(Integer.class))\n            {\n                return Integer.class;\n            }\n\n            break;\n        }\n\n        case LONG:\n        {\n            // Check if long is in the set of possible classes to match.\n            if (types.contains(long.class))\n            {\n                return long.class;\n            }\n            else if (types.contains(Long.class))\n            {\n                return Long.class;\n            }\n\n            break;\n        }\n\n        case FLOAT:\n        {\n            // Check if float is in the set of possible classes to match.\n            if (types.contains(float.class))\n            {\n                return float.class;\n            }\n            else if (types.contains(Float.class))\n            {\n                return Float.class;\n            }\n\n            break;\n        }\n\n        case DOUBLE:\n        {\n            // Check if double is in the set of possible classes to match.\n            if (types.contains(double.class))\n            {\n                return double.class;\n            }\n            else if (types.contains(Double.class))\n            {\n                return Double.class;\n            }\n\n            break;\n        }\n\n        case STRING:\n        {\n            // Check if String is in the set of possible classes to match.\n            if (types.contains(String.class))\n            {\n                return String.class;\n            }\n\n            break;\n        }\n\n        default:\n        {\n            throw new IllegalStateException(""Unknown MultiTypeData type."");\n        }\n        }\n\n        // Check if the multi type can be converted to a boolean and boolean is in the set of possible convertions.\n        if (((d.typeFlags & BOOLEAN) != 0) && types.contains(boolean.class))\n        {\n            return boolean.class;\n        }\n        else if (((d.typeFlags & BOOLEAN) != 0) && types.contains(Boolean.class))\n        {\n            return Boolean.class;\n        }\n\n        // Check if the multi type can be converted to a byte and byte is in the set of possible convertions.\n        else if (((d.typeFlags & BYTE) != 0) && types.contains(byte.class))\n        {\n            return byte.class;\n        }\n        else if (((d.typeFlags & BYTE) != 0) && types.contains(Byte.class))\n        {\n            return Byte.class;\n        }\n\n        // Check if the multi type can be converted to a char and char is in the set of possible convertions.\n        else if (((d.typeFlags & CHAR) != 0) && types.contains(char.class))\n        {\n            return char.class;\n        }\n        else if (((d.typeFlags & CHAR) != 0) && types.contains(Character.class))\n        {\n            return Character.class;\n        }\n\n        // Check if the multi type can be converted to a short and short is in the set of possible convertions.\n        else if (((d.typeFlags & SHORT) != 0) && types.contains(short.class))\n        {\n            return short.class;\n        }\n        else if (((d.typeFlags & SHORT) != 0) && types.contains(Short.class))\n        {\n            return Short.class;\n        }\n\n        // Check if the multi type can be converted to a int and int is in the set of possible convertions.\n        else if (((d.typeFlags & INT) != 0) && types.contains(int.class))\n        {\n            return int.class;\n        }\n        else if (((d.typeFlags & INT) != 0) && types.contains(Integer.class))\n        {\n            return Integer.class;\n        }\n\n        // Check if the multi type can be converted to a long and long is in the set of possible convertions.\n        else if (((d.typeFlags & LONG) != 0) && types.contains(long.class))\n        {\n            return long.class;\n        }\n        else if (((d.typeFlags & LONG) != 0) && types.contains(Long.class))\n        {\n            return Long.class;\n        }\n\n        // Check if the multi type can be converted to a float and float is in the set of possible convertions.\n        else if (((d.typeFlags & FLOAT) != 0) && types.contains(float.class))\n        {\n            return float.class;\n        }\n        else if (((d.typeFlags & FLOAT) != 0) && types.contains(Float.class))\n        {\n            return Float.class;\n        }\n\n        // Check if the multi type can be converted to a double and double is in the set of possible convertions.\n        else if (((d.typeFlags & DOUBLE) != 0) && types.contains(double.class))\n        {\n            return double.class;\n        }\n        else if (((d.typeFlags & DOUBLE) != 0) && types.contains(Double.class))\n        {\n            return Double.class;\n        }\n\n        // Check if the multi type can be converted to a String and String is in the set of possible convertions.\n        else if (((d.typeFlags & STRING) != 0) && types.contains(String.class))\n        {\n            return String.class;\n        }\n\n        // No matching type convertion found so return null.\n        else\n        {\n            return null;\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/TypeConverter.java'}, {'Syntax': 'TypeConverter.convert(multiValue, paramType)', 'FunctionName': 'convert', 'ArgsCount': 2, 'MethodBody': 'public static Object convert(MultiTypeData d, Class c)\n    {\n        // Check if it is an boolean convertion.\n        if (((d.typeFlags & BOOLEAN) != 0) && (Boolean.TYPE.equals(c) || Boolean.class.equals(c)))\n        {\n            return d.booleanValue;\n        }\n\n        // Check if it is an int convertion.\n        else if (((d.typeFlags & INT) != 0) && (Integer.TYPE.equals(c) || Integer.class.equals(c)))\n        {\n            return d.intValue;\n        }\n\n        // Check if it is an char convertion.\n        else if (((d.typeFlags & CHAR) != 0) && (Character.TYPE.equals(c) || Character.class.equals(c)))\n        {\n            return d.charValue;\n        }\n\n        // Check if it is an byte convertion.\n        else if (((d.typeFlags & BYTE) != 0) && (Byte.TYPE.equals(c) || Byte.class.equals(c)))\n        {\n            return d.byteValue;\n        }\n\n        // Check if it is an short convertion.\n        else if (((d.typeFlags & SHORT) != 0) && (Short.TYPE.equals(c) || Short.class.equals(c)))\n        {\n            return d.shortValue;\n        }\n\n        // Check if it is an long convertion.\n        else if (((d.typeFlags & LONG) != 0) && (Long.TYPE.equals(c) || Long.class.equals(c)))\n        {\n            return d.longValue;\n        }\n\n        // Check if it is an float convertion.\n        else if (((d.typeFlags & FLOAT) != 0) && (Float.TYPE.equals(c) || Float.class.equals(c)))\n        {\n            return d.floatValue;\n        }\n\n        // Check if it is an double convertion.\n        else if (((d.typeFlags & DOUBLE) != 0) && (Double.TYPE.equals(c) || Double.class.equals(c)))\n        {\n            return d.doubleValue;\n        }\n\n        // Check if it is a string convertion.\n        else if (((d.typeFlags & STRING) != 0) && String.class.equals(c))\n        {\n            return d.stringValue;\n        }\n\n        // Check if it is an object convertion and th object types match.\n        else if (((d.typeFlags & OBJECT) != 0) && d.objectValue.getClass().equals(c))\n        {\n            return d.objectValue;\n        }\n\n        // Throw a class cast exception if the multi data type cannot be converted to the specified class.\n        else\n        {\n            throw new ClassCastException(""The multi data type, "" + d + "", cannot be converted to the class, "" + c +\n                ""."");\n        }\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/TypeConverter.java'}, {'Syntax': 'propName.charAt(0)', 'FunctionName': 'charAt', 'ArgsCount': 1, 'MethodBody': 'public char charAt(int index)\n    {\n        return (char) data.get(offset + index);\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/ASCIIByteBufferString.java'}]"
6621cda7cda9bd4817b112af,oaqa/baseqa,"public FSList getTypes() {
    if (Concept_Type.featOkTst && ((Concept_Type)jcasType).casFeat_types == null)
      jcasType.jcas.throwFeatMissing(""types"", ""edu.cmu.lti.oaqa.type.kb.Concept"");
    return (FSList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((Concept_Type)jcasType).casFeatCode_types)));}",getter for types - gets A list of concept types that the concept belongs to .,src/main/java/edu/cmu/lti/oaqa/type/kb/Concept.java,[]
6621cda7cda9bd4817b112b0,streamsets/datacollector,"public void logDetails() {
    if(isValid()) {
      return;
    }

    LOG.warn(""Validation results for {}"", name);

    if(!unparseablePaths.isEmpty()) {
      LOG.warn(""Can't parse the following artifacts:"");
      for(String path : unparseablePaths) {
        LOG.warn(""  {}"", path);
      }
    }

    if(!versionCollisions.isEmpty()) {
      LOG.warn(""Detected colliding dependency versions:"");
      for(Map.Entry<String, Map<String, List<Dependency>>> entry : versionCollisions.entrySet()) {
        LOG.warn(""  Dependency {} have versions: {}"", entry.getKey(), StringUtils.join(entry.getValue().keySet(), "", ""));
        for(Map.Entry<String, List<Dependency>> versionEntry : entry.getValue().entrySet()) {
          LOG.warn(""    Version: {}"", versionEntry.getKey());
          for(Dependency dependency: versionEntry.getValue()) {
            LOG.warn(""      {}"", dependency.getSourceName());
          }
        }
      }
    }
  }",Generate small report into log .,container/src/main/java/com/streamsets/datacollector/classpath/ClasspathValidatorResult.java,[]
6621cda7cda9bd4817b112b1,streamsets/datacollector,"public static boolean getCustomLocation(Record metadataRecord) throws HiveStageCheckedException{
    if (metadataRecord.get(SEP + VERSION).getValueAsInteger() < 3) {
      return DEFAULT_CUSTOM_LOCATION;
    }

    if (metadataRecord.has(SEP + CUSTOM_LOCATION)) {
      return metadataRecord.get(SEP + CUSTOM_LOCATION).getValueAsBoolean();
    }
    throw new HiveStageCheckedException(Errors.HIVE_17, CUSTOM_LOCATION, metadataRecord);
  }",Get the customLocation flag from the metadata record . This flag marks whether or not the Hive database object is stored into a custom path on the Hadoop filesystem . In both cases the path is stored in the location field of the metadata record .,hive-protolib/src/main/java/com/streamsets/pipeline/stage/lib/hive/HiveMetastoreUtil.java,[]
6621cda7cda9bd4817b112b2,eclipse/packagedrone,"private String findAlias(String varName) {

	if (aliases == null)
	    return varName;

	String alias = aliases.get(varName);
	if (alias == null) {
	    return varName;
	}
	return alias;
    }",Checks to see if the given variable name is used as an alias and if so returns the variable name for which it is used as an alias .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspContextWrapper.java,"[{'Syntax': 'aliases.get(varName)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'protected void get ( final String url )\n    {\n        System.out.println ( ""Getting: "" + url );\n        this.context.getResolved ( url );\n    }', 'FileName': '/eclipse/packagedrone/testing/server-test/src/test/java/org/eclipse/packagedrone/testing/server/channel/ChannelTester.java'}]"
6621cda7cda9bd4817b112b3,js-lib-com/tiny-container,"@Override
	public Object read(InputStream inputStream, Type type) throws IOException {
		try {
			return json.parse(new InputStreamReader(inputStream, ""UTF-8""), type);
		} catch (JsonException | ClassCastException | UnsupportedEncodingException e) {
			throw new IllegalArgumentException(e.getMessage());
		}
	}",Parse JSON from input stream accordingly given type . Return parsed object .,src/main/java/js/http/encoder/JsonArgumentsReader.java,"[{'Syntax': 'json.parse(new InputStreamReader(inputStream, ""UTF-8""), type)', 'FunctionName': 'parse', 'ArgsCount': 2, 'MethodBody': '@Override\n\tpublic void parse(Schedule schedule, CalendarEx calendar) {\n\t\tParams.notNull(schedule, ""Schedule"");\n\t\tParams.notNull(calendar, ""Calendar"");\n\n\t\tint minimum = calendar.getActualMinimum(CalendarUnit.MONTH);\n\t\tint maximum = calendar.getActualMaximum(CalendarUnit.MONTH);\n\n\t\tITextualParser textualParser = value -> ALIASES.get(value.toLowerCase());\n\t\tExpressionParser expressionParser = new ExpressionParser(textualParser);\n\t\tvalues = expressionParser.parseExpression(schedule.month(), minimum, maximum);\n\t}', 'FileName': '/js-lib-com/tiny-container/tiny-timer/src/main/java/com/jslib/container/timer/MonthExpressionParser.java'}]"
6621cda7cda9bd4817b112b4,intellimate/IzouSDK,"public static Optional<EndedEvent> createEndedEvent(Identification source) {
        try {
            EndedEvent stopRequest = new EndedEvent(source);
            return Optional.of(stopRequest);
        } catch (IllegalArgumentException e) {
            return Optional.empty();
        }
    }",creates a new EndedEvent,src/main/java/org/intellimate/izou/sdk/frameworks/permanentSoundOutput/events/EndedEvent.java,[]
6621cda7cda9bd4817b112b5,kiegroup/droolsjbpm-tools,"public static ImageDescriptor getImageDescriptor(String id) {
        ImageDescriptor retVal = getDefault().getImageRegistry().getDescriptor(id);
        if (retVal == null) {
            retVal = loadImageDescriptor(id);
            getDefault().getImageRegistry().put(id, retVal);
        }
        return retVal;
    }",Returns an image descriptor for the image file at the given plug - in relative path,drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/Activator.java,"[{'Syntax': 'getDefault().getImageRegistry()', 'FunctionName': 'getImageRegistry', 'ArgsCount': 0, 'MethodBody': 'public static ImageRegistry getImageRegistry() {\n        if (imageRegistry == null) {\n            initializeImageRegistry();\n        }\n        return imageRegistry;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsPluginImages.java'}, {'Syntax': 'getDefault()', 'FunctionName': 'getDefault', 'ArgsCount': 0, 'MethodBody': 'public static DroolsEclipsePlugin getDefault() {\n        return plugin;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsEclipsePlugin.java'}, {'Syntax': 'loadImageDescriptor(id)', 'FunctionName': 'loadImageDescriptor', 'ArgsCount': 1, 'MethodBody': 'private static ImageDescriptor loadImageDescriptor(String id) {\n        String iconPath = ""icons/""; //$NON-NLS-1$\n\n        try {\n            URL installURL = Activator.getDefault().getBundle().getEntry(""/""); //$NON-NLS-1$\n            URL url = new URL(installURL, iconPath + id);\n            return ImageDescriptor.createFromURL(url);\n        } catch (MalformedURLException e) {\n            return ImageDescriptor.getMissingImageDescriptor();\n        }\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/Activator.java'}, {'Syntax': 'getDefault().getImageRegistry().put(id, retVal)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public void put(String key, String value);', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/IContext.java'}, {'Syntax': 'getDefault().getImageRegistry()', 'FunctionName': 'getImageRegistry', 'ArgsCount': 0, 'MethodBody': 'public static ImageRegistry getImageRegistry() {\n        if (imageRegistry == null) {\n            initializeImageRegistry();\n        }\n        return imageRegistry;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsPluginImages.java'}, {'Syntax': 'getDefault()', 'FunctionName': 'getDefault', 'ArgsCount': 0, 'MethodBody': 'public static DroolsEclipsePlugin getDefault() {\n        return plugin;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/DroolsEclipsePlugin.java'}]"
6621cda7cda9bd4817b112b6,Unidata/thredds,"public Field.Date addDateField(String fldName, String label, Date defValue) {
    Field.Date fld = new Field.Date(fldName, label, defValue, storeData);
    addField( new FieldResizable(fld, this));
    return fld;
  }",Add a field that edits a date,ui/src/main/java/ucar/util/prefs/ui/PrefPanel.java,[]
6621cda7cda9bd4817b112b7,ngageoint/geopackage-android,"public void setStyleDefault(FeatureRow featureRow, StyleRow style) {
        setStyle(featureRow.getTable().getTableName(), featureRow.getId(),
                null, style);
    }",Set the default style of the feature row,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,"[{'Syntax': 'setStyle(featureRow.getTable().getTableName(), featureRow.getId(),\n                null, style)', 'FunctionName': 'setStyle', 'ArgsCount': 4, 'MethodBody': 'public void setStyle(String featureTable, long featureId,\n                         GeometryType geometryType, StyleRow style) {\n        deleteStyle(featureTable, featureId, geometryType);\n        if (style != null) {\n\n            createStyleRelationship(featureTable);\n\n            long styleId = getOrInsertStyle(style);\n\n            StyleMappingDao mappingDao = getStyleMappingDao(featureTable);\n            insertStyleMapping(mappingDao, featureId, styleId, geometryType);\n\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}, {'Syntax': 'featureRow.getTable().getTableName()', 'FunctionName': 'getTableName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getTableName() {\n        return table.getTableName();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}, {'Syntax': 'featureRow.getTable()', 'FunctionName': 'getTable', 'ArgsCount': 0, 'MethodBody': 'public TTable getTable() {\n        return table;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserConnection.java'}, {'Syntax': 'featureRow.getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': '@Override\n    public long getId() {\n        long id = -1;\n\n        TColumn pkColumn = columns.getPkColumn();\n        if (pkColumn == null) {\n            StringBuilder error = new StringBuilder(\n                    ""No primary key column in "");\n            if (columns.isCustom()) {\n                error.append(""custom specified table columns. "");\n            }\n            error.append(""table: "" + columns.getTableName());\n            if (columns.isCustom()) {\n                error.append("", columns: "" + columns.getColumnNames());\n            }\n            throw new GeoPackageException(error.toString());\n        }\n\n        Object objectValue = getValue(pkColumn);\n        if (objectValue instanceof Number) {\n            id = ((Number) objectValue).longValue();\n        } else {\n            throw new GeoPackageException(\n                    ""Primary Key value was not a number. table: ""\n                            + columns.getTableName() + "", index: ""\n                            + pkColumn.getIndex() + "", name: ""\n                            + pkColumn.getName() + "", value: "" + objectValue);\n        }\n\n        return id;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}]"
6621cda7cda9bd4817b112b8,objectify/objectify,"public FullEntity<?> save(final P pojo, final SaveContext ctx) {
		try {
			return translator.save(pojo, false, ctx, Path.root()).get();
		}
		catch (SaveException ex) { throw ex; }
		catch (Exception ex) {
			throw new SaveException(pojo, ex);
		}
	}",Converts an object to a datastore Entity with the appropriate Key type .,src/main/java/com/googlecode/objectify/impl/EntityMetadata.java,"[{'Syntax': 'translator.save(pojo, false, ctx, Path.root()).get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public T get() {\r\n\t\treturn factory.ofy().load().now(key());\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/Ref.java'}, {'Syntax': 'translator.save(pojo, false, ctx, Path.root())', 'FunctionName': 'save', 'ArgsCount': 4, 'MethodBody': ""@Override\n\t\t\tpublic Value<List<? extends Value<?>>> save(final Map<Object, Object> pojo, final boolean index, final SaveContext ctx, final Path path) throws SkipException {\n\n\t\t\t\t// If it's empty, might as well skip it - the datastore doesn't store empty lists\n\t\t\t\tif (pojo == null || pojo.isEmpty())\n\t\t\t\t\tthrow new SkipException();\n\n\t\t\t\tfinal List<Value<?>> list = new ArrayList<>(pojo.size());\n\n\t\t\t\tfor (final Object obj: pojo.values()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfinal Value<?> child = componentTranslator.save(obj, index, ctx, path);\n\t\t\t\t\t\tlist.add(child);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SkipException ex) {\n\t\t\t\t\t\t// Just skip that node, no prob\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tValues.homogenizeIndexes(list);\n\t\t\t\treturn ListValue.of(list);\n\t\t\t}"", 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/translate/MapifyTranslatorFactory.java'}, {'Syntax': 'Path.root()', 'FunctionName': 'root', 'ArgsCount': 0, 'MethodBody': 'public static Path root() {\n\t\treturn ROOT;\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/Path.java'}]"
6621cda7cda9bd4817b112b9,Unidata/thredds,"void
    passReserved(XMLAttributeMap map, DapNode node)
            throws ParseException
    {
	try {
           DapAttribute attr = null;
           for(Map.Entry<String, SaxEvent> entry : map.entrySet()) {
                SaxEvent event = entry.getValue();
		String key = entry.getKey();
		String value = event.value;
		if(isReserved(key))
		    node.addXMLAttribute(key,value);
           }
       } catch (DapException de) {
           throw new ParseException(de);
       }
    }",add any reserved xml attributes to a node unchanged,dap4/d4core/src/main/java/dap4/core/dmr/parser/bison/Dap4ParserImpl.java,[]
6621cda7cda9bd4817b112ba,robeio/robe,"public static Restriction le(String name, Object value){
        return new Restriction(Operator.LESS_OR_EQUALS_THAN, name, value);
    }",< = less or equals than operator,robe-hibernate/src/main/java/io/robe/hibernate/criteria/api/criterion/Restrictions.java,[]
6621cda7cda9bd4817b112bb,kocakosm/pitaya,"public static boolean verify(String password, byte[] hash)
	{
		byte[] h = Arrays.copyOf(hash, HASH_LENGTH + SALT_LENGTH + 3);
		int n = 1 << (h[HASH_LENGTH + SALT_LENGTH] & 0xFF);
		int r = h[HASH_LENGTH + SALT_LENGTH + 1] & 0xFF;
		int p = h[HASH_LENGTH + SALT_LENGTH + 2] & 0xFF;
		if (n > N || n < N_MIN || r > R || r < R_MIN || p > P || p < P_MIN) {
			n = N;
			r = R;
			p = P;
		}
		byte[] salt = new byte[SALT_LENGTH];
		System.arraycopy(h, HASH_LENGTH, salt, 0, SALT_LENGTH);
		byte[] expected = hash(password, salt, r, n, p);
		int result = 0;
		for (int i = 0; i < h.length; i++) {
			result |= h[i] ^ expected[i];
		}
		return result == 0;
	}",Verifies that the given password matches the hashed one .,src/org/kocakosm/pitaya/security/Passwords.java,"[{'Syntax': 'hash(password, salt, r, n, p)', 'FunctionName': 'hash', 'ArgsCount': 5, 'MethodBody': 'private static byte[] hash(char[] password, byte[] salt, int r, int n, int p)\n\t{\n\t\tKDF scrypt = KDFs.scrypt(r, n, p, HASH_LENGTH);\n\t\tByteBuffer buf = new ByteBuffer(HASH_LENGTH + SALT_LENGTH + 3);\n\t\tbuf.append(scrypt.deriveKey(UTF8.encode(password), salt));\n\t\tbuf.append(salt);\n\t\tbuf.append((byte) Math.round(Math.log(n) / Math.log(2)));\n\t\tbuf.append((byte) r, (byte) p);\n\t\treturn buf.toByteArray();\n\t}', 'FileName': '/kocakosm/pitaya/src/org/kocakosm/pitaya/security/Passwords.java'}]"
6621cda7cda9bd4817b112bc,orientechnologies/orientdb,"@Override
  public OIndexFullText put(Object key, final OIdentifiable singleValue) {
    if (key == null) {
      return this;
    }

    key = getCollatingValue(key);

    final Set<String> words = splitIntoWords(key.toString());

    // FOREACH WORD CREATE THE LINK TO THE CURRENT DOCUMENT
    for (final String word : words) {
      acquireSharedLock();
      try {
        if (apiVersion == 0) {
          doPutV0(singleValue, word);
        } else if (apiVersion == 1) {
          doPutV1(singleValue, word);
        } else {
          throw new IllegalStateException(""Invalid API version, "" + apiVersion);
        }

      } finally {
        releaseSharedLock();
      }
    }

    return this;
  }",Indexes a value and save the index . Splits the value in single words and index each one . Save of the index is responsibility of the caller .,core/src/main/java/com/orientechnologies/orient/core/index/OIndexFullText.java,"[{'Syntax': 'getCollatingValue(key)', 'FunctionName': 'getCollatingValue', 'ArgsCount': 1, 'MethodBody': 'Object getCollatingValue(final Object key);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexInternal.java'}, {'Syntax': 'splitIntoWords(key.toString())', 'FunctionName': 'splitIntoWords', 'ArgsCount': 1, 'MethodBody': ""private Set<String> splitIntoWords(final String iKey) {\n    final Set<String> result = new HashSet<>();\n\n    final List<String> words = new ArrayList<>();\n    OStringSerializerHelper.split(words, iKey, 0, -1, separatorChars);\n\n    final StringBuilder buffer = new StringBuilder(64);\n    // FOREACH WORD CREATE THE LINK TO THE CURRENT DOCUMENT\n\n    char c;\n    boolean ignore;\n    for (String word : words) {\n      buffer.setLength(0);\n\n      for (int i = 0; i < word.length(); ++i) {\n        c = word.charAt(i);\n        ignore = false;\n        for (int k = 0; k < ignoreChars.length(); ++k) {\n          if (c == ignoreChars.charAt(k)) {\n            ignore = true;\n            break;\n          }\n        }\n\n        if (!ignore) {\n          buffer.append(c);\n        }\n      }\n\n      int length = buffer.length();\n\n      while (length >= minWordLength) {\n        buffer.setLength(length);\n        word = buffer.toString();\n\n        // CHECK IF IT'S A STOP WORD\n        if (!stopWords.contains(word))\n        // ADD THE WORD TO THE RESULT SET\n        {\n          result.add(word);\n        }\n\n        if (indexRadix) {\n          length--;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return result;\n  }"", 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexFullText.java'}, {'Syntax': 'key.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'acquireSharedLock()', 'FunctionName': 'acquireSharedLock', 'ArgsCount': 0, 'MethodBody': 'private void acquireSharedLock() {\n    lock.readLock().lock();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexManagerShared.java'}, {'Syntax': 'releaseSharedLock()', 'FunctionName': 'releaseSharedLock', 'ArgsCount': 0, 'MethodBody': 'private void releaseSharedLock() {\n    lock.readLock().unlock();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/index/OIndexManagerShared.java'}]"
6621cda7cda9bd4817b112bd,rest-assured/rest-assured,"public DetailedCookieMatcher secured(Matcher<? super Boolean> securedMatcher) {
        return new DetailedCookieMatcher(and(Matchers.hasProperty(""secured"", securedMatcher)));
    }",Verifies whether secured property of cookie satisfies specified matcher .,rest-assured/src/main/java/io/restassured/matcher/DetailedCookieMatcher.java,[]
6621cda7cda9bd4817b112be,streamsets/datacollector,"public LiveFile scan(LiveFile current) throws IOException {
    try {
      return scanInternal(current);
    } catch (NoSuchFileException ex) {
      // this could happen because there has been a file rotation/deletion after the search/filter/sort and before
      // the creation of the nen current. Lets sleep for 50ms and try again, if fails again give up.
      ThreadUtil.sleep(50);
      return scanInternal(current);
    }
  }",Scans the directory of for the next file .,commonlib/src/main/java/com/streamsets/pipeline/lib/io/LiveDirectoryScanner.java,[]
6621cda7cda9bd4817b112bf,andrealbinop/fitnesse-jdbc-slim,"public boolean runInTheSql(String database, final String sql) {
		getDatabaseJdbcTemplate(database).update(sql);
		return true;
	}",Simply runs a SQL command used for udpates inserts which the result doesn t matter .,src/main/java/com/github/andreptb/fitnesse/JdbcFixture.java,"[{'Syntax': 'getDatabaseJdbcTemplate(database)', 'FunctionName': 'getDatabaseJdbcTemplate', 'ArgsCount': 1, 'MethodBody': 'private JdbcTemplate getDatabaseJdbcTemplate(String database) {\n\t\tJdbcTemplate template = this.templateMap.get(database);\n\t\tif(template == null) {\n\t\t\tthrow new IllegalArgumentException(String.format(""No database registered for name \'%s\'. Registered databases: %s"", database, this.templateMap.keySet()));\n\t\t}\n\t\treturn template;\n\t}', 'FileName': '/andrealbinop/fitnesse-jdbc-slim/src/main/java/com/github/andreptb/fitnesse/JdbcFixture.java'}]"
6621cda7cda9bd4817b112c0,oblac/jodd,"@SuppressWarnings(""unchecked"")
	protected Object convertToCollection(final Object value, final Class destinationType, final Class componentType) {
		return typeConverterManager.convertToCollection(value, destinationType, componentType);
	}",Converter to collection .,jodd-bean/src/main/java/jodd/bean/BeanUtilUtil.java,[]
6621cda7cda9bd4817b112c1,lessthanoptimal/GeoRegression,"public static void convexHull( List<Point2D_F64> points , Polygon2D_F64 hull ) {
		Point2D_F64[] array = new Point2D_F64[points.size()];

		for (int i = 0; i < points.size(); i++) {
			array[i] = points.get(i);
		}

		AndrewMonotoneConvexHull_F64 andrew = new AndrewMonotoneConvexHull_F64();
		andrew.process(array,array.length,hull);
	}",Computes the convex hull of the set of points .,main/src/georegression/geometry/UtilPolygons2D_F64.java,"[{'Syntax': 'points.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic int size() {\n\t\treturn 3;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/curve/PolynomialQuadratic1D_F64.java'}, {'Syntax': 'points.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic int size() {\n\t\treturn 3;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/curve/PolynomialQuadratic1D_F64.java'}, {'Syntax': 'points.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic double get(int coefficient) {\n\t\tswitch( coefficient ) {\n\t\t\tcase 0: return a;\n\t\t\tcase 1: return b;\n\t\t\tcase 2: return c;\n\t\t}\n\t\tthrow new IllegalArgumentException(""Coefficient out of range. ""+coefficient);\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/curve/PolynomialQuadratic1D_F64.java'}, {'Syntax': 'andrew.process(array,array.length,hull)', 'FunctionName': 'process', 'ArgsCount': 3, 'MethodBody': 'boolean process(List<Point> points , double weights[], Shape output );', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/fitting/FitShapeToPoints_F64.java'}]"
6621cda8cda9bd4817b112c2,intellimate/IzouSDK,"public static boolean verify(EventModel eventModel, Identifiable player) {
        if (!eventModel.containsDescriptor(StopMusic.ID))
            return false;
        return SelectorResource.isTarget(eventModel, player)
                .orElse(true);
    }",verifies that the StopMusicRequest is correct and checks whether the you are meant to react to it,src/main/java/org/intellimate/izou/sdk/frameworks/music/events/StopMusic.java,"[{'Syntax': 'eventModel.containsDescriptor(StopMusic.ID)', 'FunctionName': 'containsDescriptor', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean containsDescriptor(String descriptor) {\n        return descriptors.contains(descriptor) || type.equals(descriptor);\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/events/Event.java'}, {'Syntax': 'SelectorResource.isTarget(eventModel, player)', 'FunctionName': 'isTarget', 'ArgsCount': 2, 'MethodBody': 'public static Optional<Boolean> isTarget(EventModel eventModel, Identifiable identifiable) {\n        if (eventModel.getListResourceContainer()\n                .providesResource(Collections.singletonList(SelectorResource.RESOURCE_ID))) {\n               return Optional.of(eventModel.getListResourceContainer()\n                       .provideResource(SelectorResource.RESOURCE_ID)\n                       .stream()\n                       .map(ResourceModel::getResource)\n                       .filter(resource -> resource instanceof Identification)\n                       .map(object -> (Identification) object)\n                       .anyMatch(identifiable::isOwner));\n        } else {\n            return Optional.empty();\n        }\n    }', 'FileName': '/intellimate/IzouSDK/src/main/java/org/intellimate/izou/sdk/frameworks/common/resources/SelectorResource.java'}]"
6621cda8cda9bd4817b112c3,wro4j/wro4j,"private void reloadCacheWithNewValue(final Long newValue) {
    final long newValueAsPrimitive = newValue == null ? getCacheUpdatePeriod() : newValue;
    LOG.debug(""invoking {} listeners"", cacheUpdatePeriodListeners.size());
    for (final PropertyChangeListener listener : cacheUpdatePeriodListeners) {
      final PropertyChangeEvent event = new PropertyChangeEvent(this, ""cache"", getCacheUpdatePeriod(),
          newValueAsPrimitive);
      listener.propertyChange(event);
    }
  }",Notify all listeners about cachePeriod property changed . If passed newValue is null the oldValue is taken as new value . This is the case when the reloadCache is invoked .,wro4j-core/src/main/java/ro/isdc/wro/config/jmx/WroConfiguration.java,"[{'Syntax': 'getCacheUpdatePeriod()', 'FunctionName': 'getCacheUpdatePeriod', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic long getCacheUpdatePeriod() {\n\t\treturn cacheUpdatePeriod;\n\t}', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/jmx/WroConfiguration.java'}, {'Syntax': 'getCacheUpdatePeriod()', 'FunctionName': 'getCacheUpdatePeriod', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic long getCacheUpdatePeriod() {\n\t\treturn cacheUpdatePeriod;\n\t}', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/config/jmx/WroConfiguration.java'}, {'Syntax': 'listener.propertyChange(event)', 'FunctionName': 'propertyChange', 'ArgsCount': 1, 'MethodBody': 'public void propertyChange(final PropertyChangeEvent event) {\n        // reset cache headers when any property is changed in order to avoid browser caching\n        headersConfigurer = newResponseHeadersConfigurer();\n        wroManagerFactory.onCachePeriodChanged(valueAsLong(event.getNewValue()));\n      }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/http/WroFilter.java'}]"
6621cda8cda9bd4817b112c4,ReactiveX/RxJava,"@Nullable
    public Disposable get() {
        Disposable d = resource.get();
        if (d == DisposableHelper.DISPOSED) {
            return Disposables.disposed();
        }
        return d;
    }",Returns the currently contained Disposable or null if this container is empty .,src/main/java/io/reactivex/disposables/SerialDisposable.java,"[{'Syntax': 'resource.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': '@Override\n                    public Publisher<Long> get() throws Exception {\n                        return Flowable.fromIterable(iterate(elements));\n                    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/tck/DeferTckTest.java'}, {'Syntax': 'Disposables.disposed()', 'FunctionName': 'disposed', 'ArgsCount': 0, 'MethodBody': '@Test\n    public void disposed() {\n        SchedulerWhen sw = new SchedulerWhen(new Function<Flowable<Flowable<Completable>>, Completable>() {\n            @Override\n            public Completable apply(Flowable<Flowable<Completable>> v)\n                    throws Exception {\n                return Completable.never();\n            }\n        }, Schedulers.single());\n\n        assertFalse(sw.isDisposed());\n\n        sw.dispose();\n\n        assertTrue(sw.isDisposed());\n    }', 'FileName': '/ReactiveX/RxJava/src/test/java/io/reactivex/rxjava3/internal/schedulers/SchedulerWhenTest.java'}]"
6621cda8cda9bd4817b112c5,streamsets/datacollector,"public static void addJarsToJob(Configuration conf, boolean allowMultiple, String... jarPatterns) {
    final ClassLoader loader = MapreduceUtils.class.getClassLoader();
    if (!(loader instanceof URLClassLoader)) {
      throw new IllegalStateException(String.format(
          ""ClassLoader for %s is not an instance of URLClassLoader (it is %s), and thus this method cannot be used"",
          MapreduceUtils.class.getCanonicalName(),
          loader.getClass().getCanonicalName()
      ));
    }
    final URLClassLoader urlClassLoader = (URLClassLoader) loader;

    addJarsToJob(conf, allowMultiple, urlClassLoader.getURLs(), jarPatterns);
  }",Add jars whose names contain the given patterns to the job s classpath .,mapreduce-protolib/src/main/java/com/streamsets/pipeline/stage/destination/mapreduce/MapreduceUtils.java,[]
6621cda8cda9bd4817b112c6,RestComm/jain-slee,"public static CtClass createClass(String className, String[] interfaces) throws Exception
  {
    if(className == null)
    {
      throw new NullPointerException(""Class name cannot be null"");
    }

    CtClass clazz = classPool.makeClass(className);

    if(interfaces != null && interfaces.length > 0)
    {
      clazz.setInterfaces( classPool.get( interfaces ) );
    }
    
    return clazz;
  }",Creates a class with the desired name and linked to the mentioned interfaces .,container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/ClassGeneratorUtils.java,"[{'Syntax': 'classPool.makeClass(className)', 'FunctionName': 'makeClass', 'ArgsCount': 1, 'MethodBody': 'public CtClass makeClass(String classname) throws RuntimeException {\t\t\n\t\t//classLoaderDomain.flushCaches();\n\t\tCtClass ctClass = classPool.makeClass(classname);\n\t\tclassesMade.add(classname);\n\t\treturn ctClass;\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/ClassPool.java'}, {'Syntax': 'classPool.get( interfaces )', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public ComponentID get(String key) throws ManagementConsoleException {\r\n    ComponentID id = map.get(key);\r\n    if (id == null)\r\n      throw new ManagementConsoleException(""Component "" + key + "" not found"");\r\n    return id;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/server/src/main/java/org/mobicents/slee/container/management/console/server/components/ComponentIDMap.java'}]"
6621cda8cda9bd4817b112c7,jbundle/util,"public static Properties parseArgs(Properties properties, String[] args)
    {
    	if (properties == null)
    		properties = new Properties();
        if (args == null)
            return properties;
        for (int i = 0; i < args.length; i++)
        	AppUtilities.addParam(properties, args[i], false);
        return properties;
    }",Parse this URL formatted string into properties .,apprunner/src/main/java/org/jbundle/util/apprunner/AppUtilities.java,"[{'Syntax': 'AppUtilities.addParam(properties, args[i], false)', 'FunctionName': 'addParam', 'ArgsCount': 3, 'MethodBody': ""public static void addParam(Properties properties, String strParams, boolean bDecodeString)\n    {\n        int iIndex = strParams.indexOf('=');\n        int iEndIndex = strParams.length();\n        if (iIndex != -1)\n        {\n            String strParam = strParams.substring(0, iIndex);\n            String strValue = strParams.substring(iIndex + 1, iEndIndex);\n            if (bDecodeString)\n            {\n                try {\n                    strParam = URLDecoder.decode(strParam, URL_ENCODING);\n                    strValue = URLDecoder.decode(strValue, URL_ENCODING);\n                } catch (java.io.UnsupportedEncodingException ex) {\n                    ex.printStackTrace();\n                }\n            }\n            properties.put(strParam, strValue);\n        }\n    }"", 'FileName': '/jbundle/util/apprunner/src/main/java/org/jbundle/util/apprunner/AppUtilities.java'}]"
6621cda8cda9bd4817b112c8,playframework/playframework,"@Override
  public CompletionStage<Result> onClientError(
      RequestHeader request, int statusCode, String message) {
    if (statusCode == 400) {
      return onBadRequest(request, message);
    } else if (statusCode == 403) {
      return onForbidden(request, message);
    } else if (statusCode == 404) {
      return onNotFound(request, message);
    } else if (statusCode >= 400 && statusCode < 500) {
      return onOtherClientError(request, statusCode, message);
    } else {
      throw new IllegalArgumentException(
          ""onClientError invoked with non client error status code "" + statusCode + "": "" + message);
    }
  }",Invoked when a client error occurs that is an error in the 4xx series .,core/play/src/main/java/play/http/DefaultHttpErrorHandler.java,"[{'Syntax': 'onBadRequest(request, message)', 'FunctionName': 'onBadRequest', 'ArgsCount': 2, 'MethodBody': 'protected CompletionStage<Result> onBadRequest(RequestHeader request, String message) {\n    return CompletableFuture.completedFuture(\n        Results.badRequest(\n            views.html.defaultpages.badRequest.render(\n                request.method(), request.uri(), message, request.asScala())));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/http/DefaultHttpErrorHandler.java'}, {'Syntax': 'onForbidden(request, message)', 'FunctionName': 'onForbidden', 'ArgsCount': 2, 'MethodBody': 'protected CompletionStage<Result> onForbidden(RequestHeader request, String message) {\n    return CompletableFuture.completedFuture(\n        Results.forbidden(views.html.defaultpages.unauthorized.render(request.asScala())));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/http/DefaultHttpErrorHandler.java'}, {'Syntax': 'onNotFound(request, message)', 'FunctionName': 'onNotFound', 'ArgsCount': 2, 'MethodBody': 'protected CompletionStage<Result> onNotFound(RequestHeader request, String message) {\n    if (environment.isProd()) {\n      return CompletableFuture.completedFuture(\n          Results.notFound(\n              views.html.defaultpages.notFound.render(\n                  request.method(), request.uri(), request.asScala())));\n    } else {\n      return CompletableFuture.completedFuture(\n          Results.notFound(\n              views.html.defaultpages.devNotFound.render(\n                  request.method(), request.uri(), Some.apply(routes.get()), request.asScala())));\n    }\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/http/DefaultHttpErrorHandler.java'}, {'Syntax': 'onOtherClientError(request, statusCode, message)', 'FunctionName': 'onOtherClientError', 'ArgsCount': 3, 'MethodBody': 'protected CompletionStage<Result> onOtherClientError(\n      RequestHeader request, int statusCode, String message) {\n    return CompletableFuture.completedFuture(\n        Results.status(\n            statusCode,\n            views.html.defaultpages.badRequest.render(\n                request.method(), request.uri(), message, request.asScala())));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/http/DefaultHttpErrorHandler.java'}]"
6621cda8cda9bd4817b112c9,orientechnologies/orientdb,"@SuppressWarnings({ ""rawtypes"" })
  @Override
  public <T extends Element> void createKeyIndex(final String key, final Class<T> elementClass,
      final Parameter... indexParameters) {
    makeActive();

    if (elementClass == null)
      throw ExceptionFactory.classForElementCannotBeNull();

    executeOutsideTx(new OCallable<OClass, OrientBaseGraph>() {
      @Override
      public OClass call(final OrientBaseGraph g) {

        String indexType = OClass.INDEX_TYPE.NOTUNIQUE.name();
        OType keyType = OType.STRING;
        String className = null;
        String collate = null;
        ODocument metadata = null;

        final String ancestorClassName = getClassName(elementClass);

        // READ PARAMETERS
        for (Parameter<?, ?> p : indexParameters) {
          if (p.getKey().equals(""type""))
            indexType = p.getValue().toString().toUpperCase(Locale.ENGLISH);
          else if (p.getKey().equals(""keytype""))
            keyType = OType.valueOf(p.getValue().toString().toUpperCase(Locale.ENGLISH));
          else if (p.getKey().equals(""class""))
            className = p.getValue().toString();
          else if (p.getKey().equals(""collate""))
            collate = p.getValue().toString();
          else if (p.getKey().toString().startsWith(""metadata."")) {
            if (metadata == null)
              metadata = new ODocument();
            metadata.field(p.getKey().toString().substring(""metadata."".length()), p.getValue());
          }
        }

        if (className == null)
          className = ancestorClassName;

        final ODatabaseDocument db = getRawGraph();
        final OSchema schema = db.getMetadata().getSchema();

        final OClass cls = schema.getOrCreateClass(className, schema.getClass(ancestorClassName));
        final OProperty property = cls.getProperty(key);
        if (property != null)
          keyType = property.getType();

        OPropertyIndexDefinition indexDefinition = new OPropertyIndexDefinition(className, key, keyType);
        if (collate != null)
          indexDefinition.setCollate(collate);
        db.getMetadata().getIndexManager()
            .createIndex(className + ""."" + key, indexType, indexDefinition, cls.getPolymorphicClusterIds(), null, metadata);
        return null;

      }
    }, ""create key index on '"", elementClass.getSimpleName(), ""."", key, ""'"");
  }",Creates an automatic indexing structure for indexing provided key for element class .,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java,"[{'Syntax': 'makeActive()', 'FunctionName': 'makeActive', 'ArgsCount': 0, 'MethodBody': 'public void makeActive() {\n    if (database == null) {\n      throw new ODatabaseException(""Database is closed"");\n    }\n\n    activeGraph.set(this);\n\n    final ODatabaseDocument tlDb = ODatabaseRecordThreadLocal.instance().getIfDefined();\n    if (tlDb != database) ODatabaseRecordThreadLocal.instance().set(getDatabase());\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'OClass.INDEX_TYPE.NOTUNIQUE.name()', 'FunctionName': 'name', 'ArgsCount': 0, 'MethodBody': '@Test(expected = IllegalArgumentException.class)\n  public void name() throws Exception {\n    OAbstractPaginatedStorage.checkName(""/name/with,"");\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/storage/StorageNamingTests.java'}, {'Syntax': 'getClassName(elementClass)', 'FunctionName': 'getClassName', 'ArgsCount': 1, 'MethodBody': 'public String getClassName(String content) {\n    content = content.trim();\n\n    if (content.length() == 0) return null;\n\n    final int posFirstValue = content.indexOf(OStringSerializerHelper.ENTRY_SEPARATOR);\n    final int pos = content.indexOf(OStringSerializerHelper.CLASS_SEPARATOR);\n\n    if (pos > -1 && (pos < posFirstValue || posFirstValue == -1)) return content.substring(0, pos);\n\n    return null;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/string/ORecordSerializerSchemaAware2CSV.java'}, {'Syntax': 'p.getKey().equals(""type"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'p.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'p.getValue().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'p.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EV getValue() {\n    return value;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'p.getKey().equals(""keytype"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'p.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'OType.valueOf(p.getValue().toString().toUpperCase(Locale.ENGLISH))', 'FunctionName': 'valueOf', 'ArgsCount': 1, 'MethodBody': 'public static ResourceGeneric valueOf(String name) {\n      return nameToGenericMap.get(name);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/security/ORule.java'}, {'Syntax': 'p.getValue().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'p.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EV getValue() {\n    return value;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'p.getKey().equals(""class"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'p.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'p.getValue().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'p.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EV getValue() {\n    return value;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'p.getKey().equals(""collate"")', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'p.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'p.getValue().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'p.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EV getValue() {\n    return value;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'p.getKey().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'p.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'metadata.field(p.getKey().toString().substring(""metadata."".length()), p.getValue())', 'FunctionName': 'field', 'ArgsCount': 2, 'MethodBody': 'protected OBinaryField field(final OType type, final Object value) {\n    return field(type, value, null);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/AbstractComparatorTest.java'}, {'Syntax': 'p.getKey().toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    return name + ""="" + value;\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerParameterConfiguration.java'}, {'Syntax': 'p.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': '""metadata."".length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public long length() throws SQLException {\n    return this.length;\n  }', 'FileName': '/orientechnologies/orientdb/jdbc/src/main/java/com/orientechnologies/orient/jdbc/OrientBlob.java'}, {'Syntax': 'p.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EV getValue() {\n    return value;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'getRawGraph()', 'FunctionName': 'getRawGraph', 'ArgsCount': 0, 'MethodBody': 'public ODatabaseDocument getRawGraph() {\n    return graph.getRawGraph();\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/orientechnologies/orient/graph/script/OScriptGraphWrapper.java'}, {'Syntax': 'db.getMetadata().getSchema()', 'FunctionName': 'getSchema', 'ArgsCount': 0, 'MethodBody': 'public ODocument getSchema() {\n    return schema;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OPushSchemaRequest.java'}, {'Syntax': 'db.getMetadata()', 'FunctionName': 'getMetadata', 'ArgsCount': 0, 'MethodBody': 'public ORecordMetadata getMetadata() {\n    return metadata;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OGetRecordMetadataResponse.java'}, {'Syntax': 'schema.getOrCreateClass(className, schema.getClass(ancestorClassName))', 'FunctionName': 'getOrCreateClass', 'ArgsCount': 2, 'MethodBody': 'OClass getOrCreateClass(String iClassName, OClass iSuperClass);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OSchema.java'}, {'Syntax': 'schema.getClass(ancestorClassName)', 'FunctionName': 'getClass', 'ArgsCount': 1, 'MethodBody': 'OClass getClass(Class<?> iClass);', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OSchema.java'}, {'Syntax': 'cls.getProperty(key)', 'FunctionName': 'getProperty', 'ArgsCount': 1, 'MethodBody': 'public String getProperty(final String iName) {\n    return getProperty(iName, null);\n  }', 'FileName': '/orientechnologies/orientdb/tools/src/main/java/com/orientechnologies/orient/server/config/OServerConfiguration.java'}, {'Syntax': 'property.getType()', 'FunctionName': 'getType', 'ArgsCount': 0, 'MethodBody': 'public String getType() {\n    return OEngineRemote.NAME;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java'}, {'Syntax': 'indexDefinition.setCollate(collate)', 'FunctionName': 'setCollate', 'ArgsCount': 1, 'MethodBody': 'public OProperty setCollate(String collate) {\n    if (collate == null) collate = ODefaultCollate.NAME;\n\n    getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA, ORole.PERMISSION_UPDATE);\n\n    acquireSchemaWriteLock();\n    try {\n      final ODatabaseDocumentInternal database = getDatabase();\n      final String cmd =\n          String.format(""alter property %s collate %s"", getFullNameQuoted(), quoteString(collate));\n      database.command(cmd).close();\n    } finally {\n      releaseSchemaWriteLock();\n    }\n\n    return this;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/metadata/schema/OPropertyRemote.java'}, {'Syntax': 'db.getMetadata().getIndexManager()\n            .createIndex(className + ""."" + key, indexType, indexDefinition, cls.getPolymorphicClusterIds(), null, metadata)', 'FunctionName': 'createIndex', 'ArgsCount': 6, 'MethodBody': '@Override\n  public OIndex createIndex(\n      final String iName,\n      final String iType,\n      final OProgressListener iProgressListener,\n      final ODocument metadata,\n      String algorithm,\n      String... fields) {\n    return delegate.createIndex(iName, iType, iProgressListener, metadata, algorithm, fields);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OClassAbstractDelegate.java'}, {'Syntax': 'db.getMetadata().getIndexManager()', 'FunctionName': 'getIndexManager', 'ArgsCount': 0, 'MethodBody': 'public ODocument getIndexManager() {\n    return indexManager;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OPushIndexManagerRequest.java'}, {'Syntax': 'db.getMetadata()', 'FunctionName': 'getMetadata', 'ArgsCount': 0, 'MethodBody': 'public ORecordMetadata getMetadata() {\n    return metadata;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OGetRecordMetadataResponse.java'}, {'Syntax': 'cls.getPolymorphicClusterIds()', 'FunctionName': 'getPolymorphicClusterIds', 'ArgsCount': 0, 'MethodBody': '@Override\n  public int[] getPolymorphicClusterIds() {\n    return delegate.getPolymorphicClusterIds();\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/metadata/schema/OClassAbstractDelegate.java'}]"
6621cda8cda9bd4817b112ca,Unidata/thredds,"int countBits() {
    int total_nbits = 0;
    total_nbytesCDM = 0;

    for (DataDescriptor dd : subKeys) {
      if (dd.subKeys != null) {
        total_nbits += dd.countBits();
        total_nbytesCDM += dd.total_nbytesCDM;

      } else if (dd.f == 0) {
        total_nbits += dd.bitWidth;
        total_nbytesCDM += dd.getByteWidthCDM();
      }
    }

    // replication
    if (replication > 1) {
      total_nbits *= replication;
      total_nbytesCDM *= replication;
    }

    return total_nbits;
  }",count the bits used by the data in this dd and its children only accurate for not compressed and not variable length,bufr/src/main/java/ucar/nc2/iosp/bufr/DataDescriptor.java,[]
6621cda8cda9bd4817b112cb,oblac/jodd,"public void addClassChecks(final Class target) {
		final List<Check> list = cache.get(target, () -> {
			final List<Check> newList = new ArrayList<>();
			final ClassDescriptor cd = ClassIntrospector.get().lookup(target);
			final PropertyDescriptor[] allProperties = cd.getAllPropertyDescriptors();
			for (PropertyDescriptor propertyDescriptor : allProperties) {
				collectPropertyAnnotationChecks(newList, propertyDescriptor);
			}
			return newList;
		});
		addAll(list);
	}",Parses class annotations and adds all checks .,jodd-vtor/src/main/java/jodd/vtor/ValidationContext.java,"[{'Syntax': 'ClassIntrospector.get().lookup(target)', 'FunctionName': 'lookup', 'ArgsCount': 1, 'MethodBody': 'public ActionConfig lookup(final Class actionTypeOrAnnotationType) {\n\t\tfinal ActionConfig actionConfig = actionConfigs.get(actionTypeOrAnnotationType);\n\n\t\tif (actionConfig == null) {\n\t\t\tthrow new MadvocException(""ActionConfiguration not registered:"" + actionTypeOrAnnotationType.getName());\n\t\t}\n\t\treturn actionConfig;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionConfigManager.java'}, {'Syntax': 'ClassIntrospector.get()', 'FunctionName': 'get', 'ArgsCount': 0, 'MethodBody': 'public boolean get() {\n\t\treturn value;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}, {'Syntax': 'collectPropertyAnnotationChecks(newList, propertyDescriptor)', 'FunctionName': 'collectPropertyAnnotationChecks', 'ArgsCount': 2, 'MethodBody': 'protected void collectPropertyAnnotationChecks(final List<Check> annChecks, final PropertyDescriptor propertyDescriptor) {\n\t\tfinal FieldDescriptor fd = propertyDescriptor.getFieldDescriptor();\n\n\t\tif (fd != null) {\n\t\t\tfinal Annotation[] annotations = fd.getField().getAnnotations();\n\t\t\tcollectAnnotationChecks(annChecks, propertyDescriptor.getType(), propertyDescriptor.getName(), annotations);\n\t\t}\n\n\t\tMethodDescriptor md = propertyDescriptor.getReadMethodDescriptor();\n\t\tif (md != null) {\n\t\t\tfinal Annotation[] annotations = md.getMethod().getAnnotations();\n\t\t\tcollectAnnotationChecks(annChecks, propertyDescriptor.getType(), propertyDescriptor.getName(), annotations);\n\t\t}\n\n\t\tmd = propertyDescriptor.getWriteMethodDescriptor();\n\t\tif (md != null) {\n\t\t\tfinal Annotation[] annotations = md.getMethod().getAnnotations();\n\t\t\tcollectAnnotationChecks(annChecks, propertyDescriptor.getType(), propertyDescriptor.getName(), annotations);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-vtor/src/main/java/jodd/vtor/ValidationContext.java'}, {'Syntax': 'addAll(list)', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': 'public Consumers<T> addAll(final Consumer<T>... consumers) {\n\t\tCollections.addAll(consumerList, consumers);\n\t\treturn this;\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/util/Consumers.java'}]"
6621cda8cda9bd4817b112cc,klakegg/pkix-ocsp,"public static Builder<OcspFetcher> builder() {
        return new Builder<>(new BuildHandler<OcspFetcher>() {
            @Override
            public OcspFetcher build(Properties properties) {
                return new ApacheOcspFetcher(properties);
            }
        });
    }",Builder to create an instance of OcspFetcher using Apache HttpClient for connectivity .,src/main/java/net/klakegg/pkix/ocsp/fetcher/ApacheOcspFetcher.java,[]
6621cda8cda9bd4817b112cd,streamsets/datacollector,"public EnrichedEvent poll(long timeout, TimeUnit unit) throws StageException {
    try {
      return queue.poll(timeout, unit);
    } catch (InterruptedException e) {
      LOG.error(Errors.MYSQL_001.getMessage(), e.toString(), e);
      Thread.currentThread().interrupt();
      throw new StageException(Errors.MYSQL_001, e.toString(), e);
    }
  }",Read next event from buffer with respect to maximum timeout .,mysql-binlog-lib/src/main/java/com/streamsets/pipeline/stage/origin/mysql/EventBuffer.java,[]
6621cda8cda9bd4817b112ce,jboss/jboss-common-core,"private Object getObject(final int index) {
      Object obj = list.get(index);

      return Objects.deref(obj);
   }",Dereference the object at the given index .,src/main/java/org/jboss/util/collection/CachedList.java,"[{'Syntax': 'list.get(index)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Object get(Object key) \n   {\n      TimedEntry entry = (TimedEntry) entryMap.get(key);\n      if( entry == null )\n         return null;\n\n      if( entry.isCurrent(now) == false )\n      {   // Try to refresh the entry\n         if( entry.refresh() == false )\n         {   // Failed, remove the entry and return null\n            entry.destroy();\n            entryMap.remove(key);\n            return null;\n         }\n      }\n      Object value = entry.getValue();\n      return value;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}, {'Syntax': 'Objects.deref(obj)', 'FunctionName': 'deref', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings(""unchecked"")\n   public static Object deref(final Object obj) {\n      if (obj != null && obj instanceof Reference) {\n         Reference ref = (Reference)obj;\n         return ref.get();\n      }\n\n      return obj;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Objects.java'}]"
6621cda8cda9bd4817b112cf,playframework/playframework,"public static final HttpEntity fromString(String content, String charset) {
    return new Strict(
        ByteString.fromString(content, charset), Optional.of(""text/plain; charset="" + charset));
  }",Create an entity from the given String .,core/play/src/main/java/play/http/HttpEntity.java,"[{'Syntax': 'ByteString.fromString(content, charset)', 'FunctionName': 'fromString', 'ArgsCount': 2, 'MethodBody': 'public static final HttpEntity fromString(String content, String charset) {\n    return new Strict(\n        ByteString.fromString(content, charset), Optional.of(""text/plain; charset="" + charset));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/http/HttpEntity.java'}, {'Syntax': 'Optional.of(""text/plain; charset="" + charset)', 'FunctionName': 'of', 'ArgsCount': 1, 'MethodBody': 'public static ALogger of(String name) {\n    return new ALogger(play.api.Logger.apply(name));\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/Logger.java'}]"
6621cda8cda9bd4817b112d0,braintree/braintree_android,"public BillingAgreementRecipe getBrowserBillingAgreementConfig() {
        for (BillingAgreementRecipe recipe : mBillingAgreementRecipesInDecreasingPriorityOrder) {
            if (recipe.getTarget() == RequestTarget.browser) {
                return recipe;
            }
        }

        return null;
    }",Returns the browser recipe that can handle billing agreement or null if there is none .,PayPalOneTouch/src/main/java/com/paypal/android/sdk/onetouch/core/config/OtcConfiguration.java,[]
6621cda8cda9bd4817b112d1,OpenEstate/OpenEstate-IO,"@Override
    public void upgradeFromPreviousVersion(KyeroDocument doc) {
        doc.setDocumentVersion(KyeroVersion.V3);

        try {
            this.removeCustomElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't remove <custom> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeNewBuildElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <new_build> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeTypeElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <type> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeCurrencyElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <currency> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeUrlElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <url> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }
    }",Upgrade a Kyero document to version 3 .,Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java,"[{'Syntax': 'doc.setDocumentVersion(KyeroVersion.V3)', 'FunctionName': 'setDocumentVersion', 'ArgsCount': 1, 'MethodBody': 'public abstract void setDocumentVersion(VersionType version);', 'FileName': '/OpenEstate/OpenEstate-IO/Core/src/main/java/org/openestate/io/core/XmlConvertableDocument.java'}, {'Syntax': 'this.removeCustomElements(doc.getDocument())', 'FunctionName': 'removeCustomElements', 'ArgsCount': 1, 'MethodBody': 'protected void removeCustomElements(Document doc) throws XPathExpressionException {\n        final String xpath = ""/io:root/io:property/io:custom | "" +\n                ""/io:root/io:agent/io:custom"";\n\n        XmlUtils.xPathElementsProcess(XmlUtils.xPath(xpath, doc, ""io""), doc,\n                (element) -> element.getParentNode().removeChild(element));\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java'}, {'Syntax': 'doc.getDocument()', 'FunctionName': 'getDocument', 'ArgsCount': 0, 'MethodBody': 'public final Document getDocument() {\n        return this.document;\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Core/src/main/java/org/openestate/io/core/XmlDocument.java'}, {'Syntax': 'this.upgradeNewBuildElements(doc.getDocument())', 'FunctionName': 'upgradeNewBuildElements', 'ArgsCount': 1, 'MethodBody': 'protected void upgradeNewBuildElements(Document doc) throws XPathExpressionException {\n        final String xpath = ""/io:root/io:property/io:price_freq"";\n\n        XmlUtils.xPathElementsProcess(XmlUtils.xPath(xpath, doc, ""io""), doc, (element) -> {\n            final Element parent = (Element) element.getParentNode();\n\n            if (!""new_build"".equalsIgnoreCase(element.getTextContent()))\n                return;\n\n            element.setTextContent(""sale"");\n\n            final Element newBuildNode = doc.createElementNS(KyeroUtils.NAMESPACE, ""new_build"");\n            newBuildNode.setTextContent(""1"");\n            parent.appendChild(newBuildNode);\n        });\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java'}, {'Syntax': 'doc.getDocument()', 'FunctionName': 'getDocument', 'ArgsCount': 0, 'MethodBody': 'public final Document getDocument() {\n        return this.document;\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Core/src/main/java/org/openestate/io/core/XmlDocument.java'}, {'Syntax': 'this.upgradeTypeElements(doc.getDocument())', 'FunctionName': 'upgradeTypeElements', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings(""Duplicates"")\n    protected void upgradeTypeElements(Document doc) throws XPathExpressionException {\n        final String xpath = ""/io:root/io:property/io:type"";\n\n        XmlUtils.xPathElementsProcess(XmlUtils.xPath(xpath, doc, ""io""), doc, (element) -> {\n            final Map<String, String> values = new HashMap<>();\n            values.put(""enTypeValue"", null);\n            values.put(""fallbackTypeValue"", null);\n\n            XmlUtils.xPathElementsProcess(XmlUtils.xPath(""*"", doc), element, (child) -> {\n                if (""en"".equalsIgnoreCase(child.getLocalName()))\n                    values.put(""enTypeValue"", StringUtils.trimToNull(child.getTextContent()));\n                else if (values.get(""fallbackTypeValue"") == null)\n                    values.put(""fallbackTypeValue"", StringUtils.trimToNull(child.getTextContent()));\n                element.removeChild(child);\n            });\n\n            element.setTextContent(StringUtils.defaultIfBlank(\n                    values.get(""enTypeValue""),\n                    values.get(""fallbackTypeValue"")\n            ));\n        });\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java'}, {'Syntax': 'doc.getDocument()', 'FunctionName': 'getDocument', 'ArgsCount': 0, 'MethodBody': 'public final Document getDocument() {\n        return this.document;\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Core/src/main/java/org/openestate/io/core/XmlDocument.java'}, {'Syntax': 'this.upgradeCurrencyElements(doc.getDocument())', 'FunctionName': 'upgradeCurrencyElements', 'ArgsCount': 1, 'MethodBody': 'protected void upgradeCurrencyElements(Document doc) throws XPathExpressionException {\n        final String xpath = ""/io:root/io:property/io:currency"";\n\n        XmlUtils.xPathElementsProcess(XmlUtils.xPath(xpath, doc, ""io""), doc, (element) -> {\n            final Element parent = (Element) element.getParentNode();\n            final String value = StringUtils.trimToNull(element.getTextContent());\n\n            if (""EUR"".equalsIgnoreCase(value))\n                element.setTextContent(""EUR"");\n            else if (""GBP"".equalsIgnoreCase(value))\n                element.setTextContent(""GBP"");\n            else if (""USD"".equalsIgnoreCase(value))\n                element.setTextContent(""USD"");\n            else\n                parent.removeChild(element);\n        });\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java'}, {'Syntax': 'doc.getDocument()', 'FunctionName': 'getDocument', 'ArgsCount': 0, 'MethodBody': 'public final Document getDocument() {\n        return this.document;\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Core/src/main/java/org/openestate/io/core/XmlDocument.java'}, {'Syntax': 'this.upgradeUrlElements(doc.getDocument())', 'FunctionName': 'upgradeUrlElements', 'ArgsCount': 1, 'MethodBody': 'protected void upgradeUrlElements(Document doc) throws XPathExpressionException {\n        final String xpath = ""/io:root/io:property/io:url"";\n\n        XmlUtils.xPathElementsProcess(XmlUtils.xPath(xpath, doc, ""io""), doc, (element) -> {\n            final String value = StringUtils.trimToNull(element.getTextContent());\n\n            element.setTextContent(null);\n            if (value == null) {\n                Element parentNode = (Element) element.getParentNode();\n                parentNode.removeChild(element);\n            } else {\n                Element childNode = doc.createElementNS(KyeroUtils.NAMESPACE, ""en"");\n                childNode.setTextContent(value);\n                element.appendChild(childNode);\n            }\n        });\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java'}, {'Syntax': 'doc.getDocument()', 'FunctionName': 'getDocument', 'ArgsCount': 0, 'MethodBody': 'public final Document getDocument() {\n        return this.document;\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Core/src/main/java/org/openestate/io/core/XmlDocument.java'}]"
6621cda8cda9bd4817b112d2,eclipse/packagedrone,"private Optional<ChannelInstance> findByName ( final String name )
    {
        if ( name == null )
        {
            return empty ();
        }

        final String id = this.manager.accessCall ( KEY_STORAGE, ChannelServiceAccess.class, channels -> {
            return channels.mapToId ( name );
        } );

        return findById ( id );
    }",Find a channel by name,bundles/org.eclipse.packagedrone.repo.channel.impl/src/org/eclipse/packagedrone/repo/channel/impl/ChannelServiceImpl.java,"[{'Syntax': 'this.manager.accessCall ( KEY_STORAGE, ChannelServiceAccess.class, channels -> {\n            return channels.mapToId ( name );\n        } )', 'FunctionName': 'accessCall', 'ArgsCount': 3, 'MethodBody': 'public <R, T> R accessCall ( By by, Class<T> clazz, ChannelOperation<R, T> operation );', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.channel/src/org/eclipse/packagedrone/repo/channel/ChannelService.java'}, {'Syntax': 'channels.mapToId ( name )', 'FunctionName': 'mapToId', 'ArgsCount': 1, 'MethodBody': 'public String mapToId ( String name );', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.channel.impl/src/org/eclipse/packagedrone/repo/channel/impl/ChannelServiceAccess.java'}, {'Syntax': 'findById ( id )', 'FunctionName': 'findById', 'ArgsCount': 1, 'MethodBody': 'public static MatchRule findById ( final String id )\n            {\n                for ( final MatchRule mr : values () )\n                {\n                    if ( mr.getId ().equals ( id ) )\n                    {\n                        return mr;\n                    }\n                }\n                return null;\n            }', 'FileName': '/eclipse/packagedrone/bundles/org.eclipse.packagedrone.repo.utils.osgi/src/org/eclipse/packagedrone/repo/utils/osgi/feature/FeatureInformation.java'}]"
6621cda8cda9bd4817b112d3,eiichiro/bootleg,"protected Object cookie(Type type, String name) {
		return parameter(type, name, new Function<String, Object>() {

			public Object apply(String name) {
				Cookie[] cookies = context.request().getCookies();
				
				if (cookies != null) {
					for (Cookie cookie : cookies) {
						if (cookie.getName().equals(name)) {
							return cookie.getValue();
						}
					}
				}
				
				return null;
			}
			
		}, new Function<String, Collection<Object>>() {

			public Collection<Object> apply(String name) {
				HttpServletRequest request = context.request();
				Map<String, Object> map = new TreeMap<String, Object>();
				Cookie[] cookies = request.getCookies();
				
				if (cookies != null) {
					for (Cookie cookie : cookies) {
						String key = cookie.getName();
						
						if (key.startsWith(name + ""["")) {
							map.put(key, cookie.getValue());
						}
					}
				}
				
				return (map.isEmpty()) ? null : map.values();
			}
			
		});
	}",Returns the Web endpoint method parameter from cookie in the HTTP request .,src/main/java/org/eiichiro/bootleg/AbstractRequest.java,"[{'Syntax': 'parameter(type, name, new Function<String, Object>() {\n\n\t\t\tpublic Object apply(String name) {\n\t\t\t\tCookie[] cookies = context.request().getCookies();\n\t\t\t\t\n\t\t\t\tif (cookies != null) {\n\t\t\t\t\tfor (Cookie cookie : cookies) {\n\t\t\t\t\t\tif (cookie.getName().equals(name)) {\n\t\t\t\t\t\t\treturn cookie.getValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t}, new Function<String, Collection<Object>>() {\n\n\t\t\tpublic Collection<Object> apply(String name) {\n\t\t\t\tHttpServletRequest request = context.request();\n\t\t\t\tMap<String, Object> map = new TreeMap<String, Object>();\n\t\t\t\tCookie[] cookies = request.getCookies();\n\t\t\t\t\n\t\t\t\tif (cookies != null) {\n\t\t\t\t\tfor (Cookie cookie : cookies) {\n\t\t\t\t\t\tString key = cookie.getName();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (key.startsWith(name + ""["")) {\n\t\t\t\t\t\t\tmap.put(key, cookie.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn (map.isEmpty()) ? null : map.values();\n\t\t\t}\n\t\t\t\n\t\t})', 'FunctionName': 'parameter', 'ArgsCount': 4, 'MethodBody': '@SuppressWarnings(""unchecked"")\n\tprotected Object parameter(Type type, String name,\n\t\t\tFunction<String, Object> value,\n\t\t\tFunction<String, Collection<Object>> values) {\n\t\tif (name != null && !name.isEmpty()) {\n\t\t\t// Named parameter construction.\n\t\t\tif (Types.isArray(type)) {\n\t\t\t\t// Named array type.\n\t\t\t\tlogger.debug(""Array type ["" + type + ""] is not supported in [""\n\t\t\t\t\t\t+ getClass() + ""]"");\n\t\t\t} else if (Types.isCollection(type)) {\n\t\t\t\t// Named collection type.\n\t\t\t\tif (Types.isSupportedCollection(type)) {\n\t\t\t\t\tCollection<Object> objects = values.apply(name);\n\t\t\t\t\t\n\t\t\t\t\tif (objects == null) {\n\t\t\t\t\t\tlogger.debug(""Collection named ["" + name + ""] not found"");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tClass<?> elementType = Types.getElementType(type);\n\t\t\t\t\t\tboolean coreValueType = Types.isCoreValueType(elementType);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!coreValueType && !Types.isUserDefinedValueType(elementType)) {\n\t\t\t\t\t\t\t// Named collection of user-defined object.\n\t\t\t\t\t\t\tlogger.debug(""Collection element type [""\n\t\t\t\t\t\t\t\t\t+ elementType + ""] is not supported in [""\n\t\t\t\t\t\t\t\t\t+ getClass() + ""]"");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tClass<?> implementationType = Types.getDefaultImplementationType(type);\n\t\t\t\t\t\t\t\tCollection<Object> collection = (Collection<Object>) implementationType.newInstance();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (Object object : objects) {\n\t\t\t\t\t\t\t\t\t// Named collection of core value type.\n\t\t\t\t\t\t\t\t\t// Named collection of user-defined value type.\n\t\t\t\t\t\t\t\t\tObject convert = (coreValueType) ? convert(object, elementType)\n\t\t\t\t\t\t\t\t\t\t\t: convertUserDefinedValueType(object, elementType);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (convert != null\n\t\t\t\t\t\t\t\t\t\t\t&& ClassUtils.primitiveToWrapper(elementType).isAssignableFrom(convert.getClass())) {\n\t\t\t\t\t\t\t\t\t\tcollection.add(convert);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlogger.debug(""Parameter ["" + convert\n\t\t\t\t\t\t\t\t\t\t\t\t+ ""] cannot be converted to [""\n\t\t\t\t\t\t\t\t\t\t\t\t+ elementType + ""]"");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn (!collection.isEmpty()) ? collection : null;\n\t\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t\tlogger.debug(""Cannot instantiate [""\n\t\t\t\t\t\t\t\t\t\t+ Types.getDefaultImplementationType(type)\n\t\t\t\t\t\t\t\t\t\t+ ""] (Default implementation type of [""\n\t\t\t\t\t\t\t\t\t\t+ type + ""])"", e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tlogger.debug(""Parameter type ["" + type\n\t\t\t\t\t\t\t+ ""] is not supported in ["" + getClass() + ""]"");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (Types.isCoreValueType(type)) {\n\t\t\t\t// Named core value type.\n\t\t\t\tClass<?> rawType = Types.getRawType(type);\n\t\t\t\tObject object = value.apply(name);\n\t\t\t\t\n\t\t\t\tif (object == null) {\n\t\t\t\t\tlogger.debug(""Value named ["" + name + ""] not found"");\n\t\t\t\t} else {\n\t\t\t\t\tObject convert = convert(object, rawType);\n\t\t\t\t\t\n\t\t\t\t\tif (convert != null \n\t\t\t\t\t\t\t&& ClassUtils.primitiveToWrapper(rawType).isAssignableFrom(convert.getClass())) {\n\t\t\t\t\t\treturn convert;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.warn(""Parameter ["" + convert\n\t\t\t\t\t\t\t\t+ ""] cannot be converted to ["" + type + ""]"");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (Types.isUserDefinedValueType(type)) {\n\t\t\t\t// Named user-defined value type.\n\t\t\t\tObject object = value.apply(name);\n\t\t\t\tClass<?> rawType = Types.getRawType(type);\n\t\t\t\t\n\t\t\t\tif (object == null) {\n\t\t\t\t\tlogger.debug(""Value named ["" + name + ""] not found"");\n\t\t\t\t} else {\n\t\t\t\t\tObject userDefinedValueType = convertUserDefinedValueType(object, rawType);\n\t\t\t\t\t\n\t\t\t\t\tif (userDefinedValueType == null) {\n\t\t\t\t\t\tlogger.warn(""Parameter ["" + object\n\t\t\t\t\t\t\t\t+ ""] cannot be converted to ["" + type + ""]"");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn userDefinedValueType;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// Named user-defined object type.\n\t\t\t\tObject object = value.apply(name);\n\t\t\t\t\n\t\t\t\tif (object == null) {\n\t\t\t\t\tlogger.debug(""Value named ["" + name + ""] not found"");\n\t\t\t\t} else if (Types.getRawType(type).isAssignableFrom(object.getClass())) {\n\t\t\t\t\treturn object;\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(""Parameter ["" + object\n\t\t\t\t\t\t\t+ ""] cannot be converted to ["" + type + ""]"");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t// Non-named parameter construction.\n\t\t\tif (Types.isArray(type) || Types.isCollection(type)\n\t\t\t\t\t|| Types.isCoreValueType(type)\n\t\t\t\t\t|| Types.isUserDefinedValueType(type)) {\n\t\t\t\t// Not named array type.\n\t\t\t\t// Not named collection (of core value type or user-defined object type).\n\t\t\t\t// Not named core value type.\n\t\t\t\t// Not named user-defined value type.\n\t\t\t\tlogger.debug(""Non-named parameter type ["" + type\n\t\t\t\t\t\t+ ""] is not supported in ["" + getClass() + ""]"");\n\t\t\t} else {\n\t\t\t\t// Not named user-defined object type.\n\t\t\t\tClass<?> rawType = Types.getRawType(type);\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tObject instance = rawType.newInstance();\n\t\t\t\t\t\n\t\t\t\t\tfor (Field field : rawType.getDeclaredFields()) {\n\t\t\t\t\t\tObject object = parameter(field.getGenericType(), field.getName(), value, values);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (object != null) {\n\t\t\t\t\t\t\tfield.setAccessible(true);\n\t\t\t\t\t\t\tfield.set(instance, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn instance;\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tlogger.warn(""Cannot instantiate ["" + type + ""]"", e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}', 'FileName': '/eiichiro/bootleg/src/main/java/org/eiichiro/bootleg/AbstractRequest.java'}, {'Syntax': 'context.request()', 'FunctionName': 'request', 'ArgsCount': 0, 'MethodBody': 'public HttpServletRequest request() {\n\t\treturn request;\n\t}', 'FileName': '/eiichiro/bootleg/src/main/java/org/eiichiro/bootleg/WebContext.java'}, {'Syntax': 'cookie.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\n\t\treturn value;\n\t}', 'FileName': '/eiichiro/bootleg/src/test/java/org/eiichiro/bootleg/SerializableObject.java'}, {'Syntax': 'context.request()', 'FunctionName': 'request', 'ArgsCount': 0, 'MethodBody': 'public HttpServletRequest request() {\n\t\treturn request;\n\t}', 'FileName': '/eiichiro/bootleg/src/main/java/org/eiichiro/bootleg/WebContext.java'}, {'Syntax': 'cookie.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public String getValue() {\n\t\treturn value;\n\t}', 'FileName': '/eiichiro/bootleg/src/test/java/org/eiichiro/bootleg/SerializableObject.java'}]"
6621cda8cda9bd4817b112d4,kiegroup/droolsjbpm-tools,"public LockEntry addLockEntry() {

        Element lockentry = addChild(root, ""lockentry"", childNames, false); //$NON-NLS-1$
        Element locktype = appendChild(lockentry, ""locktype""); //$NON-NLS-1$
        appendChild(locktype, ""write""); //$NON-NLS-1$

        LockEntry result = null;
        try {
            result = new LockEntry(lockentry);
        } catch (MalformedElementException e) {
            Assert.isTrue(false, Policy.bind(""assert.internalError"")); //$NON-NLS-1$
        }

        return result;
    }",Creates a new lockentry and adds it to this supported lock . Returns an editor on the new lockentry .,drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/SupportedLock.java,"[{'Syntax': 'addChild(root, ""lockentry"", childNames, false)', 'FunctionName': 'addChild', 'ArgsCount': 4, 'MethodBody': 'public static Element addChild(Element parent, String name, String[] names, boolean firstToLast) {\n        Assert.isTrue(isDAVElement(parent));\n        Assert.isNotNull(name);\n        Assert.isNotNull(names);\n        String nsPrefix = getNSPrefix(parent);\n        String tagName = nsPrefix == null ? name : nsPrefix + "":"" + name; //$NON-NLS-1$\n        Element child = parent.getOwnerDocument().createElement(tagName);\n        addChild(parent, child, names, firstToLast);\n        return child;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/ElementEditor.java'}, {'Syntax': 'appendChild(lockentry, ""locktype"")', 'FunctionName': 'appendChild', 'ArgsCount': 2, 'MethodBody': 'public static Element appendChild(Element parent, String name) {\n        Assert.isTrue(isDAVElement(parent));\n        Assert.isNotNull(name);\n        String nsPrefix = getNSPrefix(parent);\n        String tagName = nsPrefix == null ? name : nsPrefix + "":"" + name; //$NON-NLS-1$\n        Element child = parent.getOwnerDocument().createElement(tagName);\n        parent.appendChild(child);\n        return child;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/ElementEditor.java'}, {'Syntax': 'appendChild(locktype, ""write"")', 'FunctionName': 'appendChild', 'ArgsCount': 2, 'MethodBody': 'public static Element appendChild(Element parent, String name) {\n        Assert.isTrue(isDAVElement(parent));\n        Assert.isNotNull(name);\n        String nsPrefix = getNSPrefix(parent);\n        String tagName = nsPrefix == null ? name : nsPrefix + "":"" + name; //$NON-NLS-1$\n        Element child = parent.getOwnerDocument().createElement(tagName);\n        parent.appendChild(child);\n        return child;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/ElementEditor.java'}, {'Syntax': 'Assert.isTrue(false, Policy.bind(""assert.internalError""))', 'FunctionName': 'isTrue', 'ArgsCount': 2, 'MethodBody': 'public static boolean isTrue(boolean expression, String message) {\n        if (!expression)\n            throw new AssertionFailedException(Policy.bind(""assert.failed"", message)); //$NON-NLS-1$\n        return expression;\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/Assert.java'}, {'Syntax': 'Policy.bind(""assert.internalError"")', 'FunctionName': 'bind', 'ArgsCount': 1, 'MethodBody': 'public static String bind(String id) {\n        return bind(id, (String[]) null);\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/Policy.java'}]"
6621cda8cda9bd4817b112d5,wildfly/wildfly,"private boolean isInTransaction() {
        TransactionSynchronizationRegistry tsr = getTransactionSynchronizationRegistry();
        boolean inTx = tsr.getTransactionStatus() == Status.STATUS_ACTIVE;
        return inTx;
    }",check whether there is an active transaction .,messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/injection/InjectedJMSContext.java,"[{'Syntax': 'getTransactionSynchronizationRegistry()', 'FunctionName': 'getTransactionSynchronizationRegistry', 'ArgsCount': 0, 'MethodBody': 'public TransactionSynchronizationRegistry getTransactionSynchronizationRegistry() {\n        return transactionSynchronizationRegistry;\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/component/EJBComponent.java'}, {'Syntax': 'tsr.getTransactionStatus()', 'FunctionName': 'getTransactionStatus', 'ArgsCount': 0, 'MethodBody': 'private int getTransactionStatus() {\n        try {\n            return transactionManager.getStatus();\n        } catch (SystemException e) {\n            throw new RuntimeException(e);\n        }\n    }', 'FileName': '/wildfly/wildfly/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/transaction/annotation/AnnotatedTxBean.java'}]"
6621cda8cda9bd4817b112d6,orientechnologies/orientdb,"public void shutdown() {
    if (shutdownFlag.compareAndSet(false, true)) {
      try {
        if (LogManager.getLogManager() instanceof ShutdownLogManager)
          ((ShutdownLogManager) LogManager.getLogManager()).shutdown();
      } catch (NoClassDefFoundError ignore) {
        // Om nom nom. Some custom class loaders, like Tomcat's one, cannot load classes while in shutdown hooks, since their
        // runtime is already shutdown. Ignoring the exception, if ShutdownLogManager is not loaded at this point there are no instances
        // of it anyway and we have nothing to shutdown.
      }
    }
  }",Shutdowns this log manager .,core/src/main/java/com/orientechnologies/common/log/OLogManager.java,"[{'Syntax': '((ShutdownLogManager) LogManager.getLogManager()).shutdown()', 'FunctionName': 'shutdown', 'ArgsCount': 0, 'MethodBody': 'void shutdown() {\n      if (out != null) {\n        try {\n          stream.close();\n          out.close();\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n      }\n      console.close();\n    }', 'FileName': '/orientechnologies/orientdb/tools/src/test/java/com/orientechnologies/orient/console/OConsoleDatabaseAppTest.java'}]"
6621cda8cda9bd4817b112d7,deliveredtechnologies/rulebook,"GivenRuleBuilder<T, U> given(String name, T value) {
    return given(new Fact<T>(name, value));
  }",Adds a fact to the Rule .,rulebook-core/src/main/java/com/deliveredtechnologies/rulebook/lang/GivenRuleBuilder.java,"[{'Syntax': 'given(new Fact<T>(name, value))', 'FunctionName': 'given', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings(""all"")\n  Rule<T> given(Fact<T>... facts);', 'FileName': '/deliveredtechnologies/rulebook/rulebook-core/src/main/java/com/deliveredtechnologies/rulebook/Rule.java'}]"
6621cda9cda9bd4817b112d8,orientechnologies/orientdb,"private List<RecordInfo> getPositionsFromEmbeddedCollection(final BytesContainer bytes, int serializerVersion) {
    List<RecordInfo> retList = new ArrayList<>();

    int numberOfElements = OVarIntSerializer.readAsInteger(bytes);
    //read collection type
    readByte(bytes);

    for (int i = 0; i < numberOfElements; i++) {
      //read element

      //read data type      
      OType dataType = readOType(bytes, false);
      int fieldStart = bytes.offset;      

      RecordInfo fieldInfo = new RecordInfo();
      fieldInfo.fieldStartOffset = fieldStart;
      fieldInfo.fieldType = dataType;

      //TODO find better way to skip data bytes;
      deserializeValue(bytes, dataType, null, true, -1, serializerVersion, true);
      fieldInfo.fieldLength = bytes.offset - fieldStart;
      retList.add(fieldInfo);
    }

    return retList;
  }",returns begin position and length for each value in embedded collection,core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV0.java,"[{'Syntax': 'OVarIntSerializer.readAsInteger(bytes)', 'FunctionName': 'readAsInteger', 'ArgsCount': 1, 'MethodBody': 'public static int readAsInteger(final BytesContainer bytes) {\n    return (int) readSignedVarLong(bytes);\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/OVarIntSerializer.java'}, {'Syntax': 'readByte(bytes)', 'FunctionName': 'readByte', 'ArgsCount': 1, 'MethodBody': 'private byte readByte(final BytesContainer container) {\n    return container.bytes[container.offset++];\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerNetworkV37.java'}, {'Syntax': 'readOType(bytes, false)', 'FunctionName': 'readOType', 'ArgsCount': 2, 'MethodBody': 'public static OType readOType(final BytesContainer bytes, boolean justRunThrough) {\n    if (justRunThrough) {\n      bytes.offset++;\n      return null;\n    }\n    return OType.getById(readByte(bytes));\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/HelperClasses.java'}, {'Syntax': 'deserializeValue(bytes, dataType, null, true, -1, serializerVersion, true)', 'FunctionName': 'deserializeValue', 'ArgsCount': 7, 'MethodBody': 'protected Object deserializeValue(\n      final BytesContainer bytes,\n      final OType type,\n      final ORecordElement owner,\n      boolean embeddedAsDocument,\n      int valueLengthInBytes,\n      boolean justRunThrough,\n      OImmutableSchema schema) {\n    if (type == null) {\n      throw new ODatabaseException(""Invalid type value: null"");\n    }\n    Object value = null;\n    switch (type) {\n      case INTEGER:\n        value = OVarIntSerializer.readAsInteger(bytes);\n        break;\n      case LONG:\n        value = OVarIntSerializer.readAsLong(bytes);\n        break;\n      case SHORT:\n        value = OVarIntSerializer.readAsShort(bytes);\n        break;\n      case STRING:\n        if (justRunThrough) {\n          int length = OVarIntSerializer.readAsInteger(bytes);\n          bytes.skip(length);\n        } else {\n          value = readString(bytes);\n        }\n        break;\n      case DOUBLE:\n        if (justRunThrough) {\n          bytes.skip(OLongSerializer.LONG_SIZE);\n        } else {\n          value = Double.longBitsToDouble(readLong(bytes));\n        }\n        break;\n      case FLOAT:\n        if (justRunThrough) {\n          bytes.skip(OIntegerSerializer.INT_SIZE);\n        } else {\n          value = Float.intBitsToFloat(readInteger(bytes));\n        }\n        break;\n      case BYTE:\n        if (justRunThrough) bytes.offset++;\n        else value = readByte(bytes);\n        break;\n      case BOOLEAN:\n        if (justRunThrough) bytes.offset++;\n        else value = readByte(bytes) == 1;\n        break;\n      case DATETIME:\n        if (justRunThrough) OVarIntSerializer.readAsLong(bytes);\n        else value = new Date(OVarIntSerializer.readAsLong(bytes));\n        break;\n      case DATE:\n        if (justRunThrough) OVarIntSerializer.readAsLong(bytes);\n        else {\n          long savedTime = OVarIntSerializer.readAsLong(bytes) * MILLISEC_PER_DAY;\n          savedTime =\n              convertDayToTimezone(\n                  TimeZone.getTimeZone(""GMT""), ODateHelper.getDatabaseTimeZone(), savedTime);\n          value = new Date(savedTime);\n        }\n        break;\n      case EMBEDDED:\n        if (embeddedAsDocument) {\n          value = deserializeEmbeddedAsDocument(bytes, owner);\n        } else {\n          value = deserializeEmbeddedAsBytes(bytes, valueLengthInBytes, schema);\n        }\n        break;\n      case EMBEDDEDSET:\n        if (embeddedAsDocument) {\n          value = readEmbeddedSet(bytes, owner);\n        } else {\n          value = deserializeEmbeddedCollectionAsCollectionOfBytes(bytes, schema);\n        }\n        break;\n      case EMBEDDEDLIST:\n        if (embeddedAsDocument) {\n          value = readEmbeddedList(bytes, owner);\n        } else {\n          value = deserializeEmbeddedCollectionAsCollectionOfBytes(bytes, schema);\n        }\n        break;\n      case LINKSET:\n        ORecordLazySet collectionSet = null;\n        if (!justRunThrough) {\n          collectionSet = new ORecordLazySet(owner);\n        }\n        value = readLinkCollection(bytes, collectionSet, justRunThrough);\n        break;\n      case LINKLIST:\n        ORecordLazyList collectionList = null;\n        if (!justRunThrough) {\n          collectionList = new ORecordLazyList(owner);\n        }\n        value = readLinkCollection(bytes, collectionList, justRunThrough);\n        break;\n      case BINARY:\n        if (justRunThrough) {\n          int len = OVarIntSerializer.readAsInteger(bytes);\n          bytes.skip(len);\n        } else {\n          value = readBinary(bytes);\n        }\n        break;\n      case LINK:\n        value = readOptimizedLink(bytes, justRunThrough);\n        break;\n      case LINKMAP:\n        value = readLinkMap(bytes, owner, justRunThrough);\n        break;\n      case EMBEDDEDMAP:\n        if (embeddedAsDocument) {\n          value = readEmbeddedMap(bytes, owner);\n        } else {\n          value = deserializeEmbeddedMapAsMapOfBytes(bytes, schema);\n        }\n        break;\n      case DECIMAL:\n        value = ODecimalSerializer.INSTANCE.deserialize(bytes.bytes, bytes.offset);\n        bytes.skip(ODecimalSerializer.INSTANCE.getObjectSize(bytes.bytes, bytes.offset));\n        break;\n      case LINKBAG:\n        ORidBag bag = readRidbag(bytes);\n        bag.setOwner(owner);\n        value = bag;\n        break;\n      case TRANSIENT:\n        break;\n      case CUSTOM:\n        try {\n          String className = readString(bytes);\n          Class<?> clazz = Class.forName(className);\n          OSerializableStream stream = (OSerializableStream) clazz.newInstance();\n          byte[] bytesRepresentation = readBinary(bytes);\n          if (embeddedAsDocument) {\n            stream.fromStream(bytesRepresentation);\n            if (stream instanceof OSerializableWrapper)\n              value = ((OSerializableWrapper) stream).getSerializable();\n            else value = stream;\n          } else {\n            OResultBinary retVal =\n                new OResultBinary(schema, bytesRepresentation, 0, bytesRepresentation.length, this);\n            return retVal;\n          }\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n        break;\n      case ANY:\n        break;\n    }\n    return value;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV1.java'}, {'Syntax': 'retList.add(fieldInfo)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}]"
6621cda9cda9bd4817b112d9,mikepenz/CrossfadeDrawerLayout,"public void fadeDown(int duration) {
        //fade down
        mContainer.clearAnimation();
        ResizeWidthAnimation anim = new ResizeWidthAnimation(mContainer, mMinWidth, new ApplyTransformationListener() {
            @Override
            public void applyTransformation(int width) {
                overlapViews(width);
            }
        });
        anim.setDuration(duration);
        mContainer.startAnimation(anim);
    }",animate to the small view,library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java,"[{'Syntax': 'overlapViews(width)', 'FunctionName': 'overlapViews', 'ArgsCount': 1, 'MethodBody': ""private void overlapViews(int width) {\n        if (width == mWidth) {\n            return;\n        }\n        //remember this width so it is't processed twice\n        mWidth = width;\n\n\n        float percentage = calculatePercentage(width);\n        float alpha = percentage / 100;\n\n        mSmallView.setAlpha(1);\n        mSmallView.setClickable(false);\n        mLargeView.bringToFront();\n        mLargeView.setAlpha(alpha);\n        mLargeView.setClickable(true);\n        mLargeView.setVisibility(alpha > 0.01f ? View.VISIBLE : View.GONE);\n\n        //notify the crossfadeListener\n        if (mCrossfadeListener != null) {\n            mCrossfadeListener.onCrossfade(mContainer, calculatePercentage(width), width);\n        }\n    }"", 'FileName': '/mikepenz/CrossfadeDrawerLayout/library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java'}]"
6621cda9cda9bd4817b112da,Unidata/thredds,"public int[] getTimeStepsPerFile(String filename) {
    if (chsubs != null) {
      for (Chsub ch : chsubs) {
        if (filename.contains(ch.subString)) {
          return new int[]{ch.numTimes, ch.startTimeIndex};
        }
      }
    }
    return new int[]{timeStepsPerFile, 0};
  }",Get the number of timesteps per file and the starting offset,cdm/src/main/java/ucar/nc2/iosp/grads/GradsDataDescriptorFile.java,[]
6621cda9cda9bd4817b112db,real-logic/aeron,"public static String addSessionId(final String channel, final int sessionId)
    {
        final ChannelUri channelUri = ChannelUri.parse(channel);
        channelUri.put(CommonContext.SESSION_ID_PARAM_NAME, Integer.toString(sessionId));

        return channelUri.toString();
    }",Add a sessionId to a given channel .,aeron-client/src/main/java/io/aeron/ChannelUri.java,"[{'Syntax': 'ChannelUri.parse(channel)', 'FunctionName': 'parse', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings(""MethodLength"")\n    public static ChannelUri parse(final CharSequence cs)\n    {\n        int position = 0;\n        final String prefix;\n        if (startsWith(cs, 0, SPY_PREFIX))\n        {\n            prefix = SPY_QUALIFIER;\n            position = SPY_PREFIX.length();\n        }\n        else\n        {\n            prefix = """";\n        }\n\n        if (!startsWith(cs, position, AERON_PREFIX))\n        {\n            throw new IllegalArgumentException(""Aeron URIs must start with \'aeron:\', found: "" + cs);\n        }\n        else\n        {\n            position += AERON_PREFIX.length();\n        }\n\n        final StringBuilder builder = new StringBuilder();\n        final Object2ObjectHashMap<String, String> params = new Object2ObjectHashMap<>();\n        String media = null;\n        String key = null;\n\n        State state = State.MEDIA;\n        for (int i = position, length = cs.length(); i < length; i++)\n        {\n            final char c = cs.charAt(i);\n            switch (state)\n            {\n                case MEDIA:\n                    switch (c)\n                    {\n                        case \'?\':\n                            media = builder.toString();\n                            builder.setLength(0);\n                            state = State.PARAMS_KEY;\n                            break;\n\n                        case \':\':\n                        case \'|\':\n                        case \'=\':\n                            throw new IllegalArgumentException(\n                                ""encountered \'"" + c + ""\' within media definition at index "" + i + "" in "" + cs);\n\n                        default:\n                            builder.append(c);\n                    }\n                    break;\n\n                case PARAMS_KEY:\n                    if (c == \'=\')\n                    {\n                        if (0 == builder.length())\n                        {\n                            throw new IllegalStateException(""empty key not allowed at index "" + i + "" in "" + cs);\n                        }\n                        key = builder.toString();\n                        builder.setLength(0);\n                        state = State.PARAMS_VALUE;\n                    }\n                    else\n                    {\n                        if (c == \'|\')\n                        {\n                            throw new IllegalStateException(""invalid end of key at index "" + i + "" in "" + cs);\n                        }\n                        builder.append(c);\n                    }\n                    break;\n\n                case PARAMS_VALUE:\n                    if (c == \'|\')\n                    {\n                        params.put(key, builder.toString());\n                        builder.setLength(0);\n                        state = State.PARAMS_KEY;\n                    }\n                    else\n                    {\n                        builder.append(c);\n                    }\n                    break;\n\n                default:\n                    throw new IllegalStateException(""unexpected state="" + state + "" in "" + cs);\n            }\n        }\n\n        switch (state)\n        {\n            case MEDIA:\n                media = builder.toString();\n                validateMedia(media);\n                break;\n\n            case PARAMS_VALUE:\n                params.put(key, builder.toString());\n                break;\n\n            default:\n                throw new IllegalStateException(""no more input found, state="" + state + "" in "" + cs);\n        }\n\n        return new ChannelUri(prefix, media, params);\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUri.java'}, {'Syntax': 'channelUri.put(CommonContext.SESSION_ID_PARAM_NAME, Integer.toString(sessionId))', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public String put(final String key, final String value)\n    {\n        return params.put(key, value);\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUri.java'}, {'Syntax': 'channelUri.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': 'public String toString()\n    {\n        return ""Publication{"" +\n            ""originalRegistrationId="" + originalRegistrationId +\n            "", registrationId="" + registrationId +\n            "", isClosed="" + isClosed +\n            "", isConnected="" + isConnected() +\n            "", initialTermId="" + initialTermId +\n            "", termBufferLength="" + termBufferLength +\n            "", sessionId="" + sessionId +\n            "", streamId="" + streamId +\n            "", channel=\'"" + channel + \'\\\'\' +\n            "", position="" + position() +\n            \'}\';\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Publication.java'}]"
6621cda9cda9bd4817b112dc,Unidata/thredds,"public boolean containsAxis(String axisName) {
    for (CoordinateAxis ca : coordAxes) {
      if (ca.getFullName().equals(axisName))
        return true;
    }
    return false;
   }",Do we have the named axis?,cdm/src/main/java/ucar/nc2/dataset/CoordinateSystem.java,[]
6621cda9cda9bd4817b112dd,apache/parquet-mr,"public void output(String content, Logger console, String filename)
      throws IOException {
    if (filename == null || ""-"".equals(filename)) {
      console.info(content);
    } else {
      FSDataOutputStream outgoing = create(filename);
      try {
        outgoing.write(content.getBytes(StandardCharsets.UTF_8));
      } finally {
        outgoing.close();
      }
    }
  }",Output content to the console or a file .,parquet-cli/src/main/java/org/apache/parquet/cli/BaseCommand.java,"[{'Syntax': '""-"".equals(filename)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o == null || getClass() != o.getClass()) return false;\n\n      PathExpr pathExpr = (PathExpr) o;\n\n      if (type != pathExpr.type) return false;\n      if (value != null ? !value.equals(pathExpr.value) : pathExpr.value != null) return false;\n      return children != null ? children.equals(pathExpr.children) : pathExpr.children == null;\n    }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/util/Expressions.java'}, {'Syntax': 'console.info(content)', 'FunctionName': 'info', 'ArgsCount': 1, 'MethodBody': 'public void info(Object m) {\n    if (m instanceof Throwable) {\n      logger.info("""", (Throwable) m);\n    } else {\n      logger.info(String.valueOf(m));\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-common/src/main/java/org/apache/parquet/Log.java'}, {'Syntax': 'create(filename)', 'FunctionName': 'create', 'ArgsCount': 1, 'MethodBody': 'public FSDataOutputStream create(String filename) throws IOException {\n    return create(filename, true);\n  }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/BaseCommand.java'}, {'Syntax': 'outgoing.write(content.getBytes(StandardCharsets.UTF_8))', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': 'public void write(RecordConsumer consumer);', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/DirectWriterTest.java'}, {'Syntax': 'outgoing.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n  public void close() {\n    try {\n      reader.close();\n    } catch (IOException e) {\n      throw new RuntimeIOException(""Cannot close reader"", e);\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/csv/AvroCSVReader.java'}]"
6621cda9cda9bd4817b112de,OpenEstate/OpenEstate-IO,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setBlick(Ausblick.Blick value) {
        this.blick = value;
    }",Sets the value of the blick property .,OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Ausblick.java,[]
6621cda9cda9bd4817b112df,Unidata/thredds,"static public byte[] readFileToByteArray(String filename) throws IOException {
    try (FileInputStream fin = new FileInputStream(filename)) {
      InputStream in = new BufferedInputStream(fin);
      return readContentsToByteArray(in);
    }
  }",Read the file and place contents into a byte array with any error messages put in the return String .,cdm/src/main/java/ucar/nc2/util/IO.java,[]
6621cda9cda9bd4817b112e0,lightcouch/LightCouch,"public void synchronizeAllWithDb() {
		List<DesignDocument> documents = getAllFromDesk();
		for (DesignDocument dd : documents) {
			synchronizeWithDb(dd);
		}
	}",Synchronize all design documents on desk to the database .,src/main/java/org/lightcouch/CouchDbDesign.java,"[{'Syntax': 'getAllFromDesk()', 'FunctionName': 'getAllFromDesk', 'ArgsCount': 0, 'MethodBody': 'public List<DesignDocument> getAllFromDesk() {\n\t\tfinal List<DesignDocument> designDocsList = new ArrayList<DesignDocument>();\n\t\tfor (String docName : listResources(format(""%s/"", DESIGN_DOCS_DIR))) {\n\t\t\tdesignDocsList.add(getFromDesk(docName));\n\t\t} \n\t\treturn designDocsList;\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbDesign.java'}, {'Syntax': 'synchronizeWithDb(dd)', 'FunctionName': 'synchronizeWithDb', 'ArgsCount': 1, 'MethodBody': 'public Response synchronizeWithDb(DesignDocument document) {\n\t\tassertNotEmpty(document, ""Document"");\n\t\tDesignDocument documentFromDb = null;\n\t\ttry {\n\t\t\tdocumentFromDb = getFromDb(document.getId());\n\t\t} catch (NoDocumentException e) {\n\t\t\treturn dbc.save(document);\n\t\t}\n\t\tif(!document.equals(documentFromDb)) { \n\t\t\tdocument.setRevision(documentFromDb.getRevision());\n\t\t\treturn dbc.update(document);\n\t\t}\n\t\treturn null;\n\t}', 'FileName': '/lightcouch/LightCouch/src/main/java/org/lightcouch/CouchDbDesign.java'}]"
6621cda9cda9bd4817b112e1,orientechnologies/orientdb,"@Override
  public Object getId() {
    if (rawElement == null)
      // CREATE A TEMPORARY ID
      return vOut.getIdentity() + ""->"" + vIn.getIdentity();

    setCurrentGraphInThreadLocal();

    return super.getId();
  }",Returns the Edge Id assuring to save it if it s transient yet .,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientEdge.java,"[{'Syntax': 'vOut.getIdentity()', 'FunctionName': 'getIdentity', 'ArgsCount': 0, 'MethodBody': 'public ORID getIdentity() {\n    return identity;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordRequest.java'}, {'Syntax': 'vIn.getIdentity()', 'FunctionName': 'getIdentity', 'ArgsCount': 0, 'MethodBody': 'public ORID getIdentity() {\n    return identity;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/OLockRecordRequest.java'}, {'Syntax': 'setCurrentGraphInThreadLocal()', 'FunctionName': 'setCurrentGraphInThreadLocal', 'ArgsCount': 0, 'MethodBody': 'protected void setCurrentGraphInThreadLocal() {\n    if (getThreadMode() == THREAD_MODE.MANUAL) return;\n\n    final ODatabaseDocument tlDb = ODatabaseRecordThreadLocal.instance().getIfDefined();\n    if (getThreadMode() == THREAD_MODE.ALWAYS_AUTOSET || tlDb == null) {\n      if (getDatabase() != null && tlDb != getDatabase())\n        // SET IT\n        ODatabaseRecordThreadLocal.instance().set(getDatabase());\n    }\n  }', 'FileName': '/orientechnologies/orientdb/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java'}, {'Syntax': 'super.getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': 'public int getId() {\n    return id;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OClusterRemote.java'}]"
6621cda9cda9bd4817b112e2,apache/parquet-mr,"private MessageType resolveSchemaAccess(MessageType requestedSchema, MessageType fileSchema,
          Configuration configuration) {
    if(configuration.getBoolean(PARQUET_COLUMN_INDEX_ACCESS, false)) {
      final List<String> listColumns = getColumns(configuration.get(IOConstants.COLUMNS));

      List<Type> requestedTypes = new ArrayList<Type>();

      for(Type t : requestedSchema.getFields()) {
        int index = listColumns.indexOf(t.getName());
        requestedTypes.add(fileSchema.getType(index));
      }

      requestedSchema = new MessageType(requestedSchema.getName(), requestedTypes);
    }

    return requestedSchema;
  }",Determine the file column names based on the position within the requested columns and use that as the requested schema .,parquet-hive/parquet-hive-storage-handler/src/main/java/org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport.java,"[{'Syntax': 'configuration.getBoolean(PARQUET_COLUMN_INDEX_ACCESS, false)', 'FunctionName': 'getBoolean', 'ArgsCount': 2, 'MethodBody': '@Override\n  public boolean getBoolean(String name, boolean defaultValue) {\n    return configuration.getBoolean(name, defaultValue);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'getColumns(configuration.get(IOConstants.COLUMNS))', 'FunctionName': 'getColumns', 'ArgsCount': 1, 'MethodBody': 'private List<ColumnChunkMetaData> getColumns(BlockMetaData block) {\n    List<ColumnChunkMetaData> columns = block.getColumns();\n    if (ColumnPaths == null || ColumnPaths.isEmpty()) {\n      return columns;\n    }\n    Map<String, ColumnChunkMetaData> pathMap = new HashMap<>();\n    for (ColumnChunkMetaData column : columns) {\n      pathMap.put(column.getPath().toDotString(), column);\n    }\n\n    List<ColumnChunkMetaData> filtered = new ArrayList<>();\n    for (String path : ColumnPaths) {\n      ColumnChunkMetaData column = pathMap.get(path);\n      if (column != null) {\n        filtered.add(column);\n      }\n    }\n    return filtered;\n  }', 'FileName': '/apache/parquet-mr/parquet-cli/src/main/java/org/apache/parquet/cli/commands/ShowColumnIndexCommand.java'}, {'Syntax': 'configuration.get(IOConstants.COLUMNS)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n  public String get(String name) {\n    return configuration.get(name);\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/conf/HadoopParquetConfiguration.java'}, {'Syntax': 'requestedSchema.getFields()', 'FunctionName': 'getFields', 'ArgsCount': 0, 'MethodBody': 'public List<Type> getFields() {\n    return fields;\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/schema/GroupType.java'}, {'Syntax': 't.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n      return name;\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/filter2/recordlevel/PhoneBookWriter.java'}, {'Syntax': 'requestedTypes.add(fileSchema.getType(index))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'private static void add(ParquetMetadata footer) {\n    for (BlockMetaData blockMetaData : footer.getBlocks()) {\n      ++blockCount;\n      MessageType schema = footer.getFileMetaData().getSchema();\n      recordCount += blockMetaData.getRowCount();\n      List<ColumnChunkMetaData> columns = blockMetaData.getColumns();\n      for (ColumnChunkMetaData columnMetaData : columns) {\n        ColumnDescriptor desc =\n            schema.getColumnDescription(columnMetaData.getPath().toArray());\n        add(\n            desc,\n            columnMetaData.getValueCount(),\n            columnMetaData.getTotalSize(),\n            columnMetaData.getTotalUncompressedSize(),\n            columnMetaData.getEncodings(),\n            columnMetaData.getStatistics());\n      }\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/PrintFooter.java'}, {'Syntax': 'fileSchema.getType(index)', 'FunctionName': 'getType', 'ArgsCount': 1, 'MethodBody': 'Type getType(PrimitiveTypeName type) {\n    switch (type) {\n      case INT64:\n        return Type.INT64;\n      case INT32:\n        return Type.INT32;\n      case BOOLEAN:\n        return Type.BOOLEAN;\n      case BINARY:\n        return Type.BYTE_ARRAY;\n      case FLOAT:\n        return Type.FLOAT;\n      case DOUBLE:\n        return Type.DOUBLE;\n      case INT96:\n        return Type.INT96;\n      case FIXED_LEN_BYTE_ARRAY:\n        return Type.FIXED_LEN_BYTE_ARRAY;\n      default:\n        throw new RuntimeException(""Unknown primitive type "" + type);\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java'}, {'Syntax': 'requestedSchema.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n      return name;\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/filter2/recordlevel/PhoneBookWriter.java'}]"
6621cda9cda9bd4817b112e3,oblac/jodd,"public static void appendBytes(final File dest, final byte[] data, final int off, final int len) throws IOException {
		outBytes(dest, data, off, len, true);
	}",Appends bytes . append = true,jodd-core/src/main/java/jodd/io/FileUtil.java,[]
6621cda9cda9bd4817b112e4,jboss/jboss-common-core,"public static Class[] getAllUniqueInterfaces(Class c)
   {
      Set uniqueIfaces = new HashSet();
      while (c != null )
      {
         Class[] ifaces = c.getInterfaces();
         for (int n = 0; n < ifaces.length; n ++)
         {
            uniqueIfaces.add(ifaces[n]);
         }
         c = c.getSuperclass();
      }
      return (Class[])uniqueIfaces.toArray(new Class[uniqueIfaces.size()]);
   }",Returns an array containing all the unique interfaces implemented by the argument class c and all its superclasses . Interfaces that appear multiple times through inheritence are only accounted for once .,src/main/java/org/jboss/util/Classes.java,"[{'Syntax': 'uniqueIfaces.add(ifaces[n])', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public static void add(Throwable t) {\n      add(Type.UNKNOWN, t);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/ThrowableHandler.java'}, {'Syntax': 'uniqueIfaces.toArray(new Class[uniqueIfaces.size()])', 'FunctionName': 'toArray', 'ArgsCount': 1, 'MethodBody': 'public static Object[] toArray(final Object obj) {\n      // if the object is an array, the cast and return it.\n      if (obj instanceof Object[]) {\n         return (Object[])obj;\n      }\n\n      // if the object is an array of primitives then wrap the array\n      Class type = obj.getClass();\n      Object array; \n      if (type.isArray()) {\n         int length = Array.getLength(obj);\n         Class componentType = type.getComponentType();\n         array = Array.newInstance(componentType, length);\n         for (int i=0; i<length; i++) {\n            Array.set(array, i, Array.get(obj, i));\n         }\n      }\n      else {\n         array = Array.newInstance(type, 1);\n         Array.set(array, 0, obj);\n      }\n\n      return (Object[])array;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/Objects.java'}, {'Syntax': 'uniqueIfaces.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size()\n   {\n      return entryMap.size();\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/TimedCachePolicy.java'}]"
6621cda9cda9bd4817b112e5,oaqa/baseqa,"public void setQuery(String v) {
    if (Search_Type.featOkTst && ((Search_Type)jcasType).casFeat_query == null)
      jcasType.jcas.throwFeatMissing(""query"", ""edu.cmu.lti.oaqa.type.retrieval.Search"");
    jcasType.ll_cas.ll_setStringValue(addr, ((Search_Type)jcasType).casFeatCode_query, v);}",setter for query - sets The query in the native syntax of the corresponding search engine .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Search.java,[]
6621cda9cda9bd4817b112e6,TooTallNate/Java-WebSocket,"private void processFrameIsFin(WebSocketImpl webSocketImpl, Framedata frame) throws InvalidDataException {
		if( currentContinuousFrame == null ) {
			log.trace( ""Protocol error: Previous continuous frame sequence not completed."" );
			throw new InvalidDataException( CloseFrame.PROTOCOL_ERROR, ""Continuous frame sequence was not started."" );
		}
		addToBufferList(frame.getPayloadData());
		checkBufferLimit();
		if( currentContinuousFrame.getOpcode() == Opcode.TEXT ) {
			((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() );
			((FramedataImpl1) currentContinuousFrame).isValid();
			try {
				webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, Charsetfunctions.stringUtf8( currentContinuousFrame.getPayloadData() ) );
			} catch ( RuntimeException e ) {
				logRuntimeException(webSocketImpl, e);
			}
		} else if( currentContinuousFrame.getOpcode() == Opcode.BINARY ) {
			((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() );
			((FramedataImpl1) currentContinuousFrame).isValid();
			try {
				webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, currentContinuousFrame.getPayloadData() );
			} catch ( RuntimeException e ) {
				logRuntimeException(webSocketImpl, e);
			}
		}
		currentContinuousFrame = null;
		clearBufferList();
	}",Process the frame if it is the last frame,src/main/java/org/java_websocket/drafts/Draft_6455.java,"[{'Syntax': 'addToBufferList(frame.getPayloadData())', 'FunctionName': 'addToBufferList', 'ArgsCount': 1, 'MethodBody': 'private void addToBufferList(ByteBuffer payloadData) {\n    synchronized (byteBufferList) {\n      byteBufferList.add(payloadData);\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/drafts/Draft_6455.java'}, {'Syntax': 'frame.getPayloadData()', 'FunctionName': 'getPayloadData', 'ArgsCount': 0, 'MethodBody': '@Override\n  public ByteBuffer getPayloadData() {\n    if (code == NOCODE) {\n      return ByteBufferUtils.getEmptyByteBuffer();\n    }\n    return super.getPayloadData();\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/CloseFrame.java'}, {'Syntax': 'checkBufferLimit()', 'FunctionName': 'checkBufferLimit', 'ArgsCount': 0, 'MethodBody': 'private void checkBufferLimit() throws LimitExceededException {\n    long totalSize = getByteBufferListSize();\n    if (totalSize > maxFrameSize) {\n      clearBufferList();\n      log.trace(""Payload limit reached. Allowed: {} Current: {}"", maxFrameSize, totalSize);\n      throw new LimitExceededException(maxFrameSize);\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/drafts/Draft_6455.java'}, {'Syntax': 'currentContinuousFrame.getOpcode()', 'FunctionName': 'getOpcode', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Opcode getOpcode() {\n    return optcode;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/FramedataImpl1.java'}, {'Syntax': '((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() )', 'FunctionName': 'setPayload', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void setPayload(ByteBuffer payload) {\n    code = CloseFrame.NOCODE;\n    reason = """";\n    payload.mark();\n    if (payload.remaining() == 0) {\n      code = CloseFrame.NORMAL;\n    } else if (payload.remaining() == 1) {\n      code = CloseFrame.PROTOCOL_ERROR;\n    } else {\n      if (payload.remaining() >= 2) {\n        ByteBuffer bb = ByteBuffer.allocate(4);\n        bb.position(2);\n        bb.putShort(payload.getShort());\n        bb.position(0);\n        code = bb.getInt();\n      }\n      payload.reset();\n      try {\n        int mark = payload.position();// because stringUtf8 also creates a mark\n        validateUtf8(payload, mark);\n      } catch (InvalidDataException e) {\n        code = CloseFrame.NO_UTF8;\n        reason = null;\n      }\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/CloseFrame.java'}, {'Syntax': 'getPayloadFromByteBufferList()', 'FunctionName': 'getPayloadFromByteBufferList', 'ArgsCount': 0, 'MethodBody': 'private ByteBuffer getPayloadFromByteBufferList() throws LimitExceededException {\n    long totalSize = 0;\n    ByteBuffer resultingByteBuffer;\n    synchronized (byteBufferList) {\n      for (ByteBuffer buffer : byteBufferList) {\n        totalSize += buffer.limit();\n      }\n      checkBufferLimit();\n      resultingByteBuffer = ByteBuffer.allocate((int) totalSize);\n      for (ByteBuffer buffer : byteBufferList) {\n        resultingByteBuffer.put(buffer);\n      }\n    }\n    resultingByteBuffer.flip();\n    return resultingByteBuffer;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/drafts/Draft_6455.java'}, {'Syntax': '((FramedataImpl1) currentContinuousFrame).isValid()', 'FunctionName': 'isValid', 'ArgsCount': 0, 'MethodBody': '@Override\n  public void isValid() throws InvalidDataException {\n    super.isValid();\n    if (code == CloseFrame.NO_UTF8 && reason.isEmpty()) {\n      throw new InvalidDataException(CloseFrame.NO_UTF8, ""Received text is no valid utf8 string!"");\n    }\n    if (code == CloseFrame.NOCODE && 0 < reason.length()) {\n      throw new InvalidDataException(PROTOCOL_ERROR,\n          ""A close frame must have a closecode if it has a reason"");\n    }\n    //Intentional check for code != CloseFrame.TLS_ERROR just to make sure even if the code earlier changes\n    if ((code > CloseFrame.TLS_ERROR && code < 3000)) {\n      throw new InvalidDataException(PROTOCOL_ERROR, ""Trying to send an illegal close code!"");\n    }\n    if (code == CloseFrame.ABNORMAL_CLOSE || code == CloseFrame.TLS_ERROR\n        || code == CloseFrame.NOCODE || code > 4999 || code < 1000 || code == 1004) {\n      throw new InvalidFrameException(""closecode must not be sent over the wire: "" + code);\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/CloseFrame.java'}, {'Syntax': 'webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, Charsetfunctions.stringUtf8( currentContinuousFrame.getPayloadData() ) )', 'FunctionName': 'onWebsocketMessage', 'ArgsCount': 2, 'MethodBody': '@Override\n    public void onWebsocketMessage(WebSocket conn, String message) {\n\n    }', 'FileName': '/TooTallNate/Java-WebSocket/src/test/java/org/java_websocket/server/CustomSSLWebSocketServerFactoryTest.java'}, {'Syntax': 'webSocketImpl.getWebSocketListener()', 'FunctionName': 'getWebSocketListener', 'ArgsCount': 0, 'MethodBody': 'public WebSocketListener getWebSocketListener() {\n    return wsl;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'Charsetfunctions.stringUtf8( currentContinuousFrame.getPayloadData() )', 'FunctionName': 'stringUtf8', 'ArgsCount': 1, 'MethodBody': 'public static String stringUtf8(byte[] bytes) throws InvalidDataException {\n    return stringUtf8(ByteBuffer.wrap(bytes));\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/util/Charsetfunctions.java'}, {'Syntax': 'currentContinuousFrame.getPayloadData()', 'FunctionName': 'getPayloadData', 'ArgsCount': 0, 'MethodBody': '@Override\n  public ByteBuffer getPayloadData() {\n    if (code == NOCODE) {\n      return ByteBufferUtils.getEmptyByteBuffer();\n    }\n    return super.getPayloadData();\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/CloseFrame.java'}, {'Syntax': 'logRuntimeException(webSocketImpl, e)', 'FunctionName': 'logRuntimeException', 'ArgsCount': 2, 'MethodBody': 'private void logRuntimeException(WebSocketImpl webSocketImpl, RuntimeException e) {\n    log.error(""Runtime exception during onWebsocketMessage"", e);\n    webSocketImpl.getWebSocketListener().onWebsocketError(webSocketImpl, e);\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/drafts/Draft_6455.java'}, {'Syntax': 'currentContinuousFrame.getOpcode()', 'FunctionName': 'getOpcode', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Opcode getOpcode() {\n    return optcode;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/FramedataImpl1.java'}, {'Syntax': '((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() )', 'FunctionName': 'setPayload', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void setPayload(ByteBuffer payload) {\n    code = CloseFrame.NOCODE;\n    reason = """";\n    payload.mark();\n    if (payload.remaining() == 0) {\n      code = CloseFrame.NORMAL;\n    } else if (payload.remaining() == 1) {\n      code = CloseFrame.PROTOCOL_ERROR;\n    } else {\n      if (payload.remaining() >= 2) {\n        ByteBuffer bb = ByteBuffer.allocate(4);\n        bb.position(2);\n        bb.putShort(payload.getShort());\n        bb.position(0);\n        code = bb.getInt();\n      }\n      payload.reset();\n      try {\n        int mark = payload.position();// because stringUtf8 also creates a mark\n        validateUtf8(payload, mark);\n      } catch (InvalidDataException e) {\n        code = CloseFrame.NO_UTF8;\n        reason = null;\n      }\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/CloseFrame.java'}, {'Syntax': 'getPayloadFromByteBufferList()', 'FunctionName': 'getPayloadFromByteBufferList', 'ArgsCount': 0, 'MethodBody': 'private ByteBuffer getPayloadFromByteBufferList() throws LimitExceededException {\n    long totalSize = 0;\n    ByteBuffer resultingByteBuffer;\n    synchronized (byteBufferList) {\n      for (ByteBuffer buffer : byteBufferList) {\n        totalSize += buffer.limit();\n      }\n      checkBufferLimit();\n      resultingByteBuffer = ByteBuffer.allocate((int) totalSize);\n      for (ByteBuffer buffer : byteBufferList) {\n        resultingByteBuffer.put(buffer);\n      }\n    }\n    resultingByteBuffer.flip();\n    return resultingByteBuffer;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/drafts/Draft_6455.java'}, {'Syntax': '((FramedataImpl1) currentContinuousFrame).isValid()', 'FunctionName': 'isValid', 'ArgsCount': 0, 'MethodBody': '@Override\n  public void isValid() throws InvalidDataException {\n    super.isValid();\n    if (code == CloseFrame.NO_UTF8 && reason.isEmpty()) {\n      throw new InvalidDataException(CloseFrame.NO_UTF8, ""Received text is no valid utf8 string!"");\n    }\n    if (code == CloseFrame.NOCODE && 0 < reason.length()) {\n      throw new InvalidDataException(PROTOCOL_ERROR,\n          ""A close frame must have a closecode if it has a reason"");\n    }\n    //Intentional check for code != CloseFrame.TLS_ERROR just to make sure even if the code earlier changes\n    if ((code > CloseFrame.TLS_ERROR && code < 3000)) {\n      throw new InvalidDataException(PROTOCOL_ERROR, ""Trying to send an illegal close code!"");\n    }\n    if (code == CloseFrame.ABNORMAL_CLOSE || code == CloseFrame.TLS_ERROR\n        || code == CloseFrame.NOCODE || code > 4999 || code < 1000 || code == 1004) {\n      throw new InvalidFrameException(""closecode must not be sent over the wire: "" + code);\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/CloseFrame.java'}, {'Syntax': 'webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, currentContinuousFrame.getPayloadData() )', 'FunctionName': 'onWebsocketMessage', 'ArgsCount': 2, 'MethodBody': '@Override\n    public void onWebsocketMessage(WebSocket conn, String message) {\n\n    }', 'FileName': '/TooTallNate/Java-WebSocket/src/test/java/org/java_websocket/server/CustomSSLWebSocketServerFactoryTest.java'}, {'Syntax': 'webSocketImpl.getWebSocketListener()', 'FunctionName': 'getWebSocketListener', 'ArgsCount': 0, 'MethodBody': 'public WebSocketListener getWebSocketListener() {\n    return wsl;\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocketImpl.java'}, {'Syntax': 'currentContinuousFrame.getPayloadData()', 'FunctionName': 'getPayloadData', 'ArgsCount': 0, 'MethodBody': '@Override\n  public ByteBuffer getPayloadData() {\n    if (code == NOCODE) {\n      return ByteBufferUtils.getEmptyByteBuffer();\n    }\n    return super.getPayloadData();\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/framing/CloseFrame.java'}, {'Syntax': 'logRuntimeException(webSocketImpl, e)', 'FunctionName': 'logRuntimeException', 'ArgsCount': 2, 'MethodBody': 'private void logRuntimeException(WebSocketImpl webSocketImpl, RuntimeException e) {\n    log.error(""Runtime exception during onWebsocketMessage"", e);\n    webSocketImpl.getWebSocketListener().onWebsocketError(webSocketImpl, e);\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/drafts/Draft_6455.java'}, {'Syntax': 'clearBufferList()', 'FunctionName': 'clearBufferList', 'ArgsCount': 0, 'MethodBody': 'private void clearBufferList() {\n    synchronized (byteBufferList) {\n      byteBufferList.clear();\n    }\n  }', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/drafts/Draft_6455.java'}]"
6621cda9cda9bd4817b112e7,tiefaces/TieFaces,"public static XColor geColorFromSpPr(final int index,
			final CTShapeProperties ctSpPr, final ThemesTable themeTable,
			final boolean isLineColor) {

		CTSolidColorFillProperties colorFill = null;

		try {
			if (isLineColor) {
				colorFill = ctSpPr.getLn().getSolidFill();
			} else {
				colorFill = ctSpPr.getSolidFill();
			}
		} catch (Exception ex) {
			LOG.log(Level.FINE, ""No entry for solidFill"", ex);
		}
		XColor xcolor = findAutomaticFillColor(themeTable, colorFill);
		if (xcolor != null) {
			return xcolor;
		} else {
			return getXColorWithAutomaticFill(index, themeTable);
		}

	}",get line color of line chart from CTLineSer .,src/org/tiefaces/components/websheet/utility/ColorUtility.java,"[{'Syntax': 'findAutomaticFillColor(themeTable, colorFill)', 'FunctionName': 'findAutomaticFillColor', 'ArgsCount': 2, 'MethodBody': ""private static XColor findAutomaticFillColor(final ThemesTable themeTable,\r\n\t\t\tfinal CTSolidColorFillProperties colorFill) {\r\n\t\t// if there's no solidFill, then use automaticFill color\r\n\t\tif (colorFill == null) {\r\n\t\t\treturn null;\r\n\t\t}\t\r\n\t\tCTSchemeColor ctsColor = colorFill.getSchemeClr();\r\n\t\tif (ctsColor != null) {\r\n\t\t\treturn getXColorFromSchemeClr(ctsColor, themeTable);\r\n\t\t} else {\r\n\t\t\tCTSRgbColor ctrColor = colorFill.getSrgbClr();\r\n\t\t\tif (ctrColor != null) {\r\n\t\t\t\treturn getXColorFromRgbClr(ctrColor);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}"", 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ColorUtility.java'}, {'Syntax': 'getXColorWithAutomaticFill(index, themeTable)', 'FunctionName': 'getXColorWithAutomaticFill', 'ArgsCount': 2, 'MethodBody': 'private static XColor getXColorWithAutomaticFill(final int index,\r\n\t\t\tfinal ThemesTable themeTable) {\r\n\r\n\t\tint reminder = (index + 1) % AUTOCOLORSIZE;\r\n\t\tif (reminder == 0) {\r\n\t\t\treminder = AUTOCOLORSIZE;\r\n\t\t}\r\n\t\tString schema = AUTOCOLORNAME + reminder;\r\n\t\tdouble tint = getAutomaticTint(index);\r\n\t\treturn getXColorWithSchema(schema, tint, null, themeTable);\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/utility/ColorUtility.java'}]"
6621cda9cda9bd4817b112e8,Yubico/yubico-java-client,"public static String getPublicId(String otp) {
		if ((otp == null) || (otp.length() < OTP_MIN_LEN)){
			//not a valid OTP format, throw an exception
			throw new IllegalArgumentException(""The OTP is too short to be valid"");
		}
		
		Integer len = otp.length();

		/* The OTP part is always the last 32 bytes of otp. Whatever is before that
		 * (if anything) is the public ID of the YubiKey. The ID can be set to ''
		 * through personalization.
		 */
		return otp.substring(0, len - 32).toLowerCase();
	}",Extract the public ID of a YubiKey from an OTP it generated .,v2client/src/main/java/com/yubico/client/v2/YubicoClient.java,[]
6621cda9cda9bd4817b112e9,Unidata/thredds,"static public String filter7bits(String s) {
    if (s == null) return null;
    char[] bo = new char[s.length()];
    int count = 0;
    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      if ((c < 128) && (c > 31) || ((c == '\n') || (c == '\t'))) {
        bo[count++] = c;
      }
    }

    return new String(bo, 0, count);
  }",Remove all but printable ascii,cdm/src/main/java/ucar/unidata/util/StringUtil2.java,[]
6621cda9cda9bd4817b112ea,rupertlssmith/lojix,"public static long ticksWithSecondsSetTo(long ticks, int seconds)
    {
        long oldSeconds = ticksToSeconds(ticks);

        return ticks - (oldSeconds * MILLIS_PER_SECOND) + (seconds * MILLIS_PER_SECOND);
    }",Sets the seconds component of the timestamp returning the new timestamp with updated component .,lojix/power_model/src/main/com/thesett/aima/attribute/time/TimeUtils.java,"[{'Syntax': 'ticksToSeconds(ticks)', 'FunctionName': 'ticksToSeconds', 'ArgsCount': 1, 'MethodBody': 'public static int ticksToSeconds(long ticks)\n    {\n        return (int) (ticks % MILLIS_PER_MINUTE) / MILLIS_PER_SECOND;\n    }', 'FileName': '/rupertlssmith/lojix/lojix/power_model/src/main/com/thesett/aima/attribute/time/TimeUtils.java'}]"
6621cda9cda9bd4817b112eb,oblac/jodd,"public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible) {
    if (cv != null) {
      return cv.visitAnnotation(descriptor, visible);
    }
    return null;
  }",Visits an annotation of the class .,jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java,[]
6621cda9cda9bd4817b112ec,stanfy/enroscar,"public static String getMd5(final String text)  {
    try {

      final MessageDigest md = MessageDigest.getInstance(""MD5"");
      final byte[] utf8Bytes = text.getBytes(UTF_8_NAME);
      md.update(utf8Bytes, 0, utf8Bytes.length);
      final byte[] md5hash = md.digest();
      final int radix = 16;
      final int length = 32;

      final StringBuilder result = new StringBuilder(length).append(new BigInteger(1, md5hash).toString(radix));

      final int zeroBeginLen = length - result.length();
      if (zeroBeginLen > 0) {
        final char [] zeroBegin = new char[zeroBeginLen];
        Arrays.fill(zeroBegin, Character.forDigit(0, radix));
        result.insert(0, zeroBegin);
      }

      return result.toString();

    } catch (final NoSuchAlgorithmException|UnsupportedEncodingException e) {
      throw new AssertionError(e);
    }
  }",Calculate 32 bytes length MD5 digest .,net/src/main/java/com/stanfy/enroscar/net/cache/Md5.java,"[{'Syntax': 'new BigInteger(1, md5hash).toString(radix)', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'private static String toString(final Location loc) {\n    return loc.getLatitude() + "";"" + loc.getLongitude() + "";"" + loc.getProvider() + "";"" + loc.getAccuracy();\n  }', 'FileName': '/stanfy/enroscar/extras/location/src/main/java/com/stanfy/enroscar/location/LocationBinder.java'}, {'Syntax': 'result.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': '@Override public long length() {\n      return length;\n    }', 'FileName': '/stanfy/enroscar/net/src/main/java/com/stanfy/enroscar/net/retrofit/RetrofitClient.java'}, {'Syntax': 'result.insert(0, zeroBegin)', 'FunctionName': 'insert', 'ArgsCount': 2, 'MethodBody': '@Override\n  public Uri insert(final Uri uri, final ContentValues values) {\n    final Strategy<T> strategy = strategyMatcher.choose(uri);\n    return strategy != null ? strategy.insert(getDatabaseManager(getContext()), uri, values) : null;\n  }', 'FileName': '/stanfy/enroscar/content/src/main/java/com/stanfy/enroscar/content/StrategiesContentProvider.java'}, {'Syntax': 'result.toString()', 'FunctionName': 'toString', 'ArgsCount': 0, 'MethodBody': '@Override\n  public String toString() {\n    if (bitmap == null) { return ""not ready""; }\n    return ""Bitmap "" + bitmap.getWidth() + ""x"" + bitmap.getHeight() + "" from "" + type;\n  }', 'FileName': '/stanfy/enroscar/images/src/main/java/com/stanfy/enroscar/images/ImageResult.java'}]"
6621cda9cda9bd4817b112ed,RestComm/jain-slee,"public void detachSbbEntity(SbbEntityID sbbEntityId)
			throws javax.slee.TransactionRequiredLocalException {

		boolean detached = cacheData.detachSbbEntity(sbbEntityId);

		if (detached && acReferencesHandler != null && !isEnding()) {
			acReferencesHandler.sbbeReferenceRemoved();
			if (logger.isTraceEnabled()) {
				logger.trace(""Detached sbb entity "" + sbbEntityId
						+ "" from AC with handle "" + getActivityContextHandle());
			}
		}
	}",Detach the sbb entity,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java,"[{'Syntax': 'cacheData.detachSbbEntity(sbbEntityId)', 'FunctionName': 'detachSbbEntity', 'ArgsCount': 1, 'MethodBody': 'public boolean detachSbbEntity(SbbEntityID sbbEntityId) {\n\t\tfinal Node node  = getAttachedSbbsNode(false);\n\t\treturn node != null ? node.removeChild(sbbEntityId) : false;\t\t\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java'}, {'Syntax': 'isEnding()', 'FunctionName': 'isEnding', 'ArgsCount': 0, 'MethodBody': 'public boolean isEnding()\n        throws TransactionRequiredLocalException, SLEEException;', 'FileName': '/RestComm/jain-slee/api/jar/src/main/java/javax/slee/ActivityContextInterface.java'}, {'Syntax': 'acReferencesHandler.sbbeReferenceRemoved()', 'FunctionName': 'sbbeReferenceRemoved', 'ArgsCount': 0, 'MethodBody': 'public void sbbeReferenceRemoved() {\n\t\tif (txContext == null) {\n\t\t\tcheckReferences();\n\t\t}\n\t\telse {\n\t\t\t// we have tx, just decrement tx ref counter\n\t\t\ttxRefCounter.sbbeRefs--; \n\t\t}\n\t}', 'FileName': '/RestComm/jain-slee/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextReferencesHandler.java'}, {'Syntax': 'getActivityContextHandle()', 'FunctionName': 'getActivityContextHandle', 'ArgsCount': 0, 'MethodBody': 'public ActivityContextHandle getActivityContextHandle() {\n\t\treturn data.getLocalActivityContext().getActivityContextHandle();\n\t}', 'FileName': '/RestComm/jain-slee/container/events/src/main/java/org/mobicents/slee/container/event/EventContextImpl.java'}]"
6621cdaacda9bd4817b112ee,oblac/jodd,"protected EmailAttachmentBuilder setContentIdFromNameIfMissing() {
		if (contentId == null) {
			if (name != null) {
				contentId(FileNameUtil.getName(name));
			} else {
				contentId(NO_NAME);
			}
		}
		return this;
	}",Set content ID if it is missing .,jodd-mail/src/main/java/jodd/mail/EmailAttachmentBuilder.java,[]
6621cdaacda9bd4817b112ef,oblac/jodd,"protected void writeDecoratedPage(final Writer out, final char[] decoratorContent, final char[] pageContent, final DecoraTag[] decoraTags) throws IOException {
		int ndx = 0;

		for (DecoraTag decoraTag : decoraTags) {
			// [1] just copy content before the Decora tag
			int decoratorLen = decoraTag.getStartIndex() - ndx;
			if (decoratorLen <= 0) {
				continue;
			}
			out.write(decoratorContent, ndx, decoratorLen);

			ndx = decoraTag.getEndIndex();

			// [2] now write region at the place of Decora tag
			int regionLen = decoraTag.getRegionLength();

			if (regionLen == 0) {
				if (decoraTag.hasDefaultValue()) {
					out.write(decoratorContent, decoraTag.getDefaultValueStart(), decoraTag.getDefaultValueLength());
				}
			} else {
				writeRegion(out, pageContent, decoraTag, decoraTags);
			}

		}

		// write remaining content
		out.write(decoratorContent, ndx, decoratorContent.length - ndx);
	}",Writes decorated content .,jodd-decora/src/main/java/jodd/decora/parser/DecoraParser.java,"[{'Syntax': 'decoraTag.getStartIndex()', 'FunctionName': 'getStartIndex', 'ArgsCount': 0, 'MethodBody': 'public int getStartIndex() {\n\t\treturn start;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'out.write(decoratorContent, ndx, decoratorLen)', 'FunctionName': 'write', 'ArgsCount': 3, 'MethodBody': '@Override\n\tpublic void write(final char[] b, final int off, final int len) {\n\t\tbuffer.append(b, off, len);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/FastCharArrayWriter.java'}, {'Syntax': 'decoraTag.getEndIndex()', 'FunctionName': 'getEndIndex', 'ArgsCount': 0, 'MethodBody': 'public int getEndIndex() {\n\t\treturn end;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'decoraTag.getRegionLength()', 'FunctionName': 'getRegionLength', 'ArgsCount': 0, 'MethodBody': 'public int getRegionLength() {\n\t\treturn regionLength;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'decoraTag.hasDefaultValue()', 'FunctionName': 'hasDefaultValue', 'ArgsCount': 0, 'MethodBody': 'public boolean hasDefaultValue() {\n\t\treturn defaultValueStart != -1;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'out.write(decoratorContent, decoraTag.getDefaultValueStart(), decoraTag.getDefaultValueLength())', 'FunctionName': 'write', 'ArgsCount': 3, 'MethodBody': '@Override\n\tpublic void write(final char[] b, final int off, final int len) {\n\t\tbuffer.append(b, off, len);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/FastCharArrayWriter.java'}, {'Syntax': 'decoraTag.getDefaultValueStart()', 'FunctionName': 'getDefaultValueStart', 'ArgsCount': 0, 'MethodBody': 'public int getDefaultValueStart() {\n\t\treturn defaultValueStart;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'decoraTag.getDefaultValueLength()', 'FunctionName': 'getDefaultValueLength', 'ArgsCount': 0, 'MethodBody': 'public int getDefaultValueLength() {\n\t\treturn defaultValueLength;\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraTag.java'}, {'Syntax': 'writeRegion(out, pageContent, decoraTag, decoraTags)', 'FunctionName': 'writeRegion', 'ArgsCount': 4, 'MethodBody': 'protected void writeRegion(final Writer out, final char[] pageContent, final DecoraTag decoraTag, final DecoraTag[] decoraTags) throws IOException {\n\t\tint regionStart = decoraTag.getRegionStart();\n\t\tint regionLen = decoraTag.getRegionLength();\n\t\tint regionEnd = regionStart + regionLen;\n\n\t\tfor (DecoraTag innerDecoraTag : decoraTags) {\n\t\t\tif (decoraTag == innerDecoraTag) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (decoraTag.isRegionUndefined()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (innerDecoraTag.isInsideOtherTagRegion(decoraTag)) {\n\t\t\t\t// write everything from region start to the inner Decora tag\n\t\t\t\tout.write(pageContent, regionStart, innerDecoraTag.getRegionTagStart() - regionStart);\n\n\t\t\t\tregionStart = innerDecoraTag.getRegionTagEnd();\n\t\t\t}\n\t\t}\n\n\t\t// write remaining content of the region\n\t\tout.write(pageContent, regionStart, regionEnd - regionStart);\n\t}', 'FileName': '/oblac/jodd/jodd-decora/src/main/java/jodd/decora/parser/DecoraParser.java'}, {'Syntax': 'out.write(decoratorContent, ndx, decoratorContent.length - ndx)', 'FunctionName': 'write', 'ArgsCount': 3, 'MethodBody': '@Override\n\tpublic void write(final char[] b, final int off, final int len) {\n\t\tbuffer.append(b, off, len);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/io/FastCharArrayWriter.java'}]"
6621cdaacda9bd4817b112f0,eclipse/packagedrone,"public static String getTagHandlerClassName(String path,
						ErrorDispatcher err)
                throws JasperException {

        String className = null;
        int begin = 0;
        int index;
        
        index = path.lastIndexOf("".tag"");
        if (index == -1) {
            err.jspError(""jsp.error.tagfile.badSuffix"", path);
        }

        //It's tempting to remove the "".tag"" suffix here, but we can't.
        //If we remove it, the fully-qualified class name of this tag
        //could conflict with the package name of other tags.
        //For instance, the tag file
        //    /WEB-INF/tags/foo.tag
        //would have fully-qualified class name
        //    org.apache.jsp.tag.web.foo
        //which would conflict with the package name of the tag file
        //    /WEB-INF/tags/foo/bar.tag

        index = path.indexOf(WEB_INF_TAGS);
        if (index != -1) {
            className = ""org.apache.jsp.tag.web."";
            begin = index + WEB_INF_TAGS.length();
        } else {
	    index = path.indexOf(META_INF_TAGS);
	    if (index != -1) {
		className = ""org.apache.jsp.tag.meta."";
		begin = index + META_INF_TAGS.length();
	    } else {
		err.jspError(""jsp.error.tagfile.illegalPath"", path);
	    }
	}

        className += makeJavaPackage(path.substring(begin));
  
       return className;
    }",Gets the fully - qualified class name of the tag handler corresponding to the given tag file path .,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java,"[{'Syntax': 'err.jspError(""jsp.error.tagfile.badSuffix"", path)', 'FunctionName': 'jspError', 'ArgsCount': 2, 'MethodBody': 'public void jspError(String errMsg, Exception ex) throws JasperException {\n\tthrow new JasperException(errMsg, ex);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/DefaultErrorHandler.java'}, {'Syntax': 'WEB_INF_TAGS.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public long length() {\n        return uncompressedSize;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.tukani.xz/src/org/tukaani/xz/SeekableXZInputStream.java'}, {'Syntax': 'META_INF_TAGS.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public long length() {\n        return uncompressedSize;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.tukani.xz/src/org/tukaani/xz/SeekableXZInputStream.java'}, {'Syntax': 'err.jspError(""jsp.error.tagfile.illegalPath"", path)', 'FunctionName': 'jspError', 'ArgsCount': 2, 'MethodBody': 'public void jspError(String errMsg, Exception ex) throws JasperException {\n\tthrow new JasperException(errMsg, ex);\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/DefaultErrorHandler.java'}, {'Syntax': 'makeJavaPackage(path.substring(begin))', 'FunctionName': 'makeJavaPackage', 'ArgsCount': 1, 'MethodBody': 'public static final String makeJavaPackage(String path) {\n        String classNameComponents[] = split(path,""/"");\n        StringBuilder legalClassNames = new StringBuilder();\n        for (int i = 0; i < classNameComponents.length; i++) {\n            legalClassNames.append(makeJavaIdentifier(classNameComponents[i]));\n            if (i < classNameComponents.length - 1) {\n                legalClassNames.append(\'.\');\n            }\n        }\n        return legalClassNames.toString();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java'}]"
6621cdaacda9bd4817b112f1,real-logic/aeron,"public void tombstoneEntry(final long leadershipTermId, final int entryIndex)
    {
        int index = -1;
        for (int i = 0, size = entries.size(); i < size; i++)
        {
            final Entry entry = entries.get(i);
            if (entry.leadershipTermId == leadershipTermId && entry.entryIndex == entryIndex)
            {
                index = entry.entryIndex;

                if (ENTRY_TYPE_TERM == entry.type)
                {
                    indexByLeadershipTermIdMap.remove(leadershipTermId);
                }

                break;
            }
        }

        if (-1 == index)
        {
            throw new ClusterException(""unknown entry index: "" + entryIndex);
        }

        buffer.putInt(0, NULL_VALUE, LITTLE_ENDIAN);
        byteBuffer.limit(SIZE_OF_INT).position(0);
        final long filePosition = (index * (long)ENTRY_LENGTH) + ENTRY_TYPE_OFFSET;

        try
        {
            if (SIZE_OF_INT != fileChannel.write(byteBuffer, filePosition))
            {
                throw new ClusterException(""failed to write field atomically"");
            }
        }
        catch (final Exception ex)
        {
            LangUtil.rethrowUnchecked(ex);
        }
    }",Tombstone an entry in the log so it is no longer valid .,aeron-cluster/src/main/java/io/aeron/cluster/RecordingLog.java,"[{'Syntax': 'entries.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'int size()\n    {\n        return count;\n    }', 'FileName': '/real-logic/aeron/aeron-archive/src/main/java/io/aeron/archive/CatalogIndex.java'}, {'Syntax': 'entries.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public String get(final String key)\n    {\n        return params.get(key);\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUri.java'}, {'Syntax': 'indexByLeadershipTermIdMap.remove(leadershipTermId)', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': 'public String remove(final String key)\n    {\n        return params.remove(key);\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/ChannelUri.java'}, {'Syntax': 'byteBuffer.limit(SIZE_OF_INT).position(0)', 'FunctionName': 'position', 'ArgsCount': 1, 'MethodBody': 'public void position(final long newPosition)\n    {\n        if (!isClosed)\n        {\n            validatePosition(newPosition);\n            subscriberPosition.setOrdered(newPosition);\n        }\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/Image.java'}, {'Syntax': 'byteBuffer.limit(SIZE_OF_INT)', 'FunctionName': 'limit', 'ArgsCount': 1, 'MethodBody': 'public void limit(final int limit)\n    {\n        if (limit < 0 || limit >= buffer.capacity())\n        {\n            throw new IllegalArgumentException(\n                ""limit outside range: capacity="" + buffer.capacity() + "" limit="" + limit);\n        }\n\n        this.limit = limit;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/BufferBuilder.java'}, {'Syntax': 'fileChannel.write(byteBuffer, filePosition)', 'FunctionName': 'write', 'ArgsCount': 2, 'MethodBody': 'private static void write(final ByteBuffer buffer, final FileChannel fileChannel)\n    {\n        try\n        {\n            buffer.flip();\n\n            do\n            {\n                fileChannel.write(buffer);\n            }\n            while (buffer.remaining() > 0);\n        }\n        catch (final Exception ex)\n        {\n            LangUtil.rethrowUnchecked(ex);\n        }\n        finally\n        {\n            buffer.clear();\n        }\n    }', 'FileName': '/real-logic/aeron/aeron-agent/src/main/java/io/aeron/agent/EventLogReaderAgent.java'}]"
6621cdaacda9bd4817b112f2,ngageoint/geopackage-android,"public void setIconDefault(FeatureRow featureRow, IconRow icon) {
        setIcon(featureRow.getTable().getTableName(), featureRow.getId(), null,
                icon);
    }",Set the default icon of the feature row,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,"[{'Syntax': 'setIcon(featureRow.getTable().getTableName(), featureRow.getId(), null,\n                icon)', 'FunctionName': 'setIcon', 'ArgsCount': 4, 'MethodBody': 'public void setIcon(String featureTable, long featureId,\n                        GeometryType geometryType, IconRow icon) {\n        deleteIcon(featureTable, featureId, geometryType);\n        if (icon != null) {\n\n            createIconRelationship(featureTable);\n\n            long iconId = getOrInsertIcon(icon);\n\n            StyleMappingDao mappingDao = getIconMappingDao(featureTable);\n            insertStyleMapping(mappingDao, featureId, iconId, geometryType);\n\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}, {'Syntax': 'featureRow.getTable().getTableName()', 'FunctionName': 'getTableName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getTableName() {\n        return table.getTableName();\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}, {'Syntax': 'featureRow.getTable()', 'FunctionName': 'getTable', 'ArgsCount': 0, 'MethodBody': 'public TTable getTable() {\n        return table;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserConnection.java'}, {'Syntax': 'featureRow.getId()', 'FunctionName': 'getId', 'ArgsCount': 0, 'MethodBody': '@Override\n    public long getId() {\n        long id = -1;\n\n        TColumn pkColumn = columns.getPkColumn();\n        if (pkColumn == null) {\n            StringBuilder error = new StringBuilder(\n                    ""No primary key column in "");\n            if (columns.isCustom()) {\n                error.append(""custom specified table columns. "");\n            }\n            error.append(""table: "" + columns.getTableName());\n            if (columns.isCustom()) {\n                error.append("", columns: "" + columns.getColumnNames());\n            }\n            throw new GeoPackageException(error.toString());\n        }\n\n        Object objectValue = getValue(pkColumn);\n        if (objectValue instanceof Number) {\n            id = ((Number) objectValue).longValue();\n        } else {\n            throw new GeoPackageException(\n                    ""Primary Key value was not a number. table: ""\n                            + columns.getTableName() + "", index: ""\n                            + pkColumn.getIndex() + "", name: ""\n                            + pkColumn.getName() + "", value: "" + objectValue);\n        }\n\n        return id;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/user/UserCursor.java'}]"
6621cdaacda9bd4817b112f3,wildfly/wildfly,"public boolean isMethodLevel(MethodIntf methodIntf, Method method, MethodIntf defaultMethodIntf) {
        assert methodIntf != null : ""methodIntf is null"";
        assert method != null : ""method is null"";

        Method classMethod = resolveRealMethod(method);
        String[] methodParams = MethodInfoHelper.getCanonicalParameterTypes(classMethod);
        final String methodName = classMethod.getName();
        final String className = classMethod.getDeclaringClass().getName();

        ArrayKey methodParamsKey = new ArrayKey((Object[]) methodParams);
        T attr = get(get(get(perViewStyle3, methodIntf), methodName), methodParamsKey);
        if (attr != null)
            return true;
        attr = get(get(perViewStyle2, methodIntf), methodName);
        if (attr != null)
            return true;
        attr = get(perViewStyle1, methodIntf);
        if (attr != null)
            return false;
        attr = get(get(get(style3, className), methodName), methodParamsKey);
        if (attr != null)
            return true;
        attr = get(style2, methodName);
        if (attr != null)
            return true;
        attr = get(style1, className);
        if (attr != null)
            return false;
        if(defaultMethodIntf == null) {
            return false;
        } else {
            return isMethodLevel(defaultMethodIntf, method, null);
        }
    }",Returns true if the given transaction specification was expliitly specified at a method level returns false if it was inherited from the default,ejb3/src/main/java/org/jboss/as/ejb3/deployment/ApplicableMethodInformation.java,"[{'Syntax': 'resolveRealMethod(method)', 'FunctionName': 'resolveRealMethod', 'ArgsCount': 1, 'MethodBody': 'private Method resolveRealMethod(final Method method) {\n        if (method.isBridge() || method.isSynthetic()) {\n            Method[] declaredMethods =  WildFlySecurityManager.doUnchecked(new PrivilegedAction<Method[]>() {\n                @Override\n                public Method[] run() {\n                    return method.getDeclaringClass().getDeclaredMethods();\n                }\n            });\n            methodLoop:\n            for (Method m : declaredMethods) {\n                if (m.getName().equals(method.getName())\n                        && m.getParameterCount() == method.getParameterCount()\n                        && !m.isBridge()\n                        && !m.isSynthetic()) {\n                    if(!method.getReturnType().isAssignableFrom(m.getReturnType())) {\n                        continue methodLoop;\n                    }\n                    for(int i = 0; i < method.getParameterCount(); ++i) {\n                        if(!method.getParameterTypes()[i].isAssignableFrom(m.getParameterTypes()[i])) {\n                            continue methodLoop;\n                        }\n                    }\n                    return m;\n                }\n            }\n        }\n        return method;\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/deployment/ApplicableMethodInformation.java'}, {'Syntax': 'MethodInfoHelper.getCanonicalParameterTypes(classMethod)', 'FunctionName': 'getCanonicalParameterTypes', 'ArgsCount': 1, 'MethodBody': 'public static String[] getCanonicalParameterTypes(Method viewMethod) {\n        Class<?>[] parameterTypes = viewMethod.getParameterTypes();\n        if (parameterTypes.length == 0) {\n            return EMPTY_STRING_ARRAY;\n        }\n        String[] canonicalNames = new String[parameterTypes.length];\n        for (int i = 0; i < parameterTypes.length; i++) {\n            canonicalNames[i] = parameterTypes[i].getCanonicalName();\n        }\n        return canonicalNames;\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/util/MethodInfoHelper.java'}, {'Syntax': 'classMethod.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'classMethod.getDeclaringClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'classMethod.getDeclaringClass()', 'FunctionName': 'getDeclaringClass', 'ArgsCount': 0, 'MethodBody': 'public String getDeclaringClass() {\n        return declaringClass;\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/persistence/TimeoutMethod.java'}, {'Syntax': 'get(get(get(perViewStyle3, methodIntf), methodName), methodParamsKey)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(get(perViewStyle3, methodIntf), methodName)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(perViewStyle3, methodIntf)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(get(perViewStyle2, methodIntf), methodName)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(perViewStyle2, methodIntf)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(perViewStyle1, methodIntf)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(get(get(style3, className), methodName), methodParamsKey)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(get(style3, className), methodName)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(style3, className)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(style2, methodName)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'get(style1, className)', 'FunctionName': 'get', 'ArgsCount': 2, 'MethodBody': 'V get(Object key, int hash) {\n            if (count != 0) { // read-volatile\n                HashEntry<K,V> e = getFirst(hash);\n                while (e != null) {\n                    if (e.hash == hash && keyEq(key, e.key())) {\n                        Object opaque = e.valueRef;\n                        if (opaque != null)\n                            return e.dereferenceValue(opaque);\n\n                        return readValueUnderLock(e);  // recheck\n                    }\n                    e = e.next;\n                }\n            }\n            return null;\n        }', 'FileName': '/wildfly/wildfly/web-common/src/main/java/org/jboss/as/web/common/ConcurrentReferenceHashMap.java'}, {'Syntax': 'isMethodLevel(defaultMethodIntf, method, null)', 'FunctionName': 'isMethodLevel', 'ArgsCount': 3, 'MethodBody': 'public boolean isMethodLevel(MethodInterfaceType methodIntf, Method method, MethodInterfaceType defaultMethodIntf) {\n        assert methodIntf != null : ""methodIntf is null"";\n        assert method != null : ""method is null"";\n\n        Method classMethod = resolveRealMethod(method);\n        String[] methodParams = MethodInfoHelper.getCanonicalParameterTypes(classMethod);\n        final String methodName = classMethod.getName();\n        final String className = classMethod.getDeclaringClass().getName();\n\n        ArrayKey methodParamsKey = new ArrayKey((Object[]) methodParams);\n        T attr = get(get(get(perViewStyle3, methodIntf), methodName), methodParamsKey);\n        if (attr != null)\n            return true;\n        attr = get(get(perViewStyle2, methodIntf), methodName);\n        if (attr != null)\n            return true;\n        attr = get(perViewStyle1, methodIntf);\n        if (attr != null)\n            return false;\n        attr = get(get(get(style3, className), methodName), methodParamsKey);\n        if (attr != null)\n            return true;\n        attr = get(style2, methodName);\n        if (attr != null)\n            return true;\n        attr = get(style1, className);\n        if (attr != null)\n            return false;\n        if(defaultMethodIntf == null) {\n            return false;\n        } else {\n            return isMethodLevel(defaultMethodIntf, method, null);\n        }\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/deployment/ApplicableMethodInformation.java'}]"
6621cdaacda9bd4817b112f4,square/retrofit,"public Response<?> createErrorResponse() {
    Response<?> call;
    try {
      call = errorFactory.call();
    } catch (Exception e) {
      throw new IllegalStateException(""Error factory threw an exception."", e);
    }
    if (call == null) {
      throw new IllegalStateException(""Error factory returned null."");
    }
    if (call.isSuccessful()) {
      throw new IllegalStateException(""Error factory returned successful response."");
    }
    return call;
  }",The HTTP error to be used when an error is triggered .,retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java,"[{'Syntax': 'errorFactory.call()', 'FunctionName': 'call', 'ArgsCount': 0, 'MethodBody': '@Override\n          public Response<?> call() throws Exception {\n            return Response.error(code++, ResponseBody.create(null, new byte[0]));\n          }', 'FileName': '/square/retrofit/retrofit-mock/src/test/java/retrofit2/mock/NetworkBehaviorTest.java'}, {'Syntax': 'call.isSuccessful()', 'FunctionName': 'isSuccessful', 'ArgsCount': 0, 'MethodBody': 'public boolean isSuccessful() {\n    return rawResponse.isSuccessful();\n  }', 'FileName': '/square/retrofit/retrofit/src/main/java/retrofit2/Response.java'}]"
6621cdaacda9bd4817b112f5,oblac/jodd,"public <ID> void decreaseProperty(final Class entityType, final ID id, final String name, final Number delta) {
		query(dbOom.entities().increaseColumn(entityType, id, name, delta, false)).autoClose().executeUpdate();
	}",Decreases a property .,jodd-db/src/main/java/jodd/db/oom/dao/GenericDao.java,[]
6621cdaacda9bd4817b112f6,streamsets/datacollector,"public static final LoginManager acquireLoginManager(LoginType loginType, Map<String, ?> configs) throws IOException, LoginException {
        synchronized (LoginManager.class) {
            LoginManager loginManager = CACHED_INSTANCES.get(loginType);
            if (loginManager == null) {
                loginManager = new LoginManager(loginType, configs);
                CACHED_INSTANCES.put(loginType, loginManager);
            }
            return loginManager.acquire();
        }
    }",Returns an instance of LoginManager and increases its reference count .,apache-kafka_0_9-lib/src/main/java/org/apache/kafka/common/security/kerberos/LoginManager.java,[]
6621cdaacda9bd4817b112f7,moparisthebest/aptIn16,"public DeclarationFilter and(DeclarationFilter f) {
		final DeclarationFilter f1 = this;
		final DeclarationFilter f2 = f;
		return new DeclarationFilter() {
			public boolean matches(Declaration d) {
				return f1.matches(d) && f2.matches(d);
			}
		};
	}",Returns a filter that selects those declarations selected by both this filter and another .,apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java,"[{'Syntax': 'f1.matches(d)', 'FunctionName': 'matches', 'ArgsCount': 1, 'MethodBody': 'public boolean matches(Declaration d) {\r\n\t\t\t\treturn d.getModifiers().containsAll(mods);\r\n\t\t\t}', 'FileName': '/moparisthebest/aptIn16/apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java'}, {'Syntax': 'f2.matches(d)', 'FunctionName': 'matches', 'ArgsCount': 1, 'MethodBody': 'public boolean matches(Declaration d) {\r\n\t\t\t\treturn d.getModifiers().containsAll(mods);\r\n\t\t\t}', 'FileName': '/moparisthebest/aptIn16/apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java'}]"
6621cdaacda9bd4817b112f8,ngageoint/geopackage-android,"public void setIcons(String featureTable, long featureId, Icons icons) {
        deleteIcons(featureTable, featureId);

        if (icons != null) {

            if (icons.getDefault() != null) {
                setIconDefault(featureTable, featureId, icons.getDefault());
            }

            for (Entry<GeometryType, IconRow> icon : icons.getIcons()
                    .entrySet()) {
                setIcon(featureTable, featureId, icon.getKey(), icon.getValue());
            }

        }
    }",Set the icons for the feature table and feature id,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,"[{'Syntax': 'deleteIcons(featureTable, featureId)', 'FunctionName': 'deleteIcons', 'ArgsCount': 2, 'MethodBody': 'public void deleteIcons(String featureTable, long featureId) {\n        deleteMappings(getIconMappingDao(featureTable), featureId);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}, {'Syntax': 'icons.getDefault()', 'FunctionName': 'getDefault', 'ArgsCount': 0, 'MethodBody': 'public IconRow getDefault() {\n        return defaultIcon;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/Icons.java'}, {'Syntax': 'setIconDefault(featureTable, featureId, icons.getDefault())', 'FunctionName': 'setIconDefault', 'ArgsCount': 3, 'MethodBody': 'public void setIconDefault(String featureTable, long featureId, IconRow icon) {\n        setIcon(featureTable, featureId, null, icon);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}, {'Syntax': 'icons.getDefault()', 'FunctionName': 'getDefault', 'ArgsCount': 0, 'MethodBody': 'public IconRow getDefault() {\n        return defaultIcon;\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/Icons.java'}, {'Syntax': 'icons.getIcons()', 'FunctionName': 'getIcons', 'ArgsCount': 0, 'MethodBody': 'public Map<Long, IconRow> getIcons() {\n        return featureStyleExtension.getIcons(tableName);\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureTableStyles.java'}, {'Syntax': 'setIcon(featureTable, featureId, icon.getKey(), icon.getValue())', 'FunctionName': 'setIcon', 'ArgsCount': 4, 'MethodBody': 'public void setIcon(String featureTable, long featureId,\n                        GeometryType geometryType, IconRow icon) {\n        deleteIcon(featureTable, featureId, geometryType);\n        if (icon != null) {\n\n            createIconRelationship(featureTable);\n\n            long iconId = getOrInsertIcon(icon);\n\n            StyleMappingDao mappingDao = getIconMappingDao(featureTable);\n            insertStyleMapping(mappingDao, featureId, iconId, geometryType);\n\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/nga/style/FeatureStyleExtension.java'}]"
6621cdaacda9bd4817b112f9,wildfly/wildfly,"private ArchiveDeployment newDeployment(final DeploymentUnit unit) {
        WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit);
        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);
        final VirtualFile root = deploymentRoot != null ? deploymentRoot.getRoot() : null;
        final ClassLoader classLoader;
        final Module module = unit.getAttachment(Attachments.MODULE);
        if (module == null) {
            classLoader = unit.getAttachment(CLASSLOADER_KEY);
            if (classLoader == null) {
                throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(unit);
            }
        } else {
            classLoader = module.getClassLoader();
        }

        ArchiveDeployment parentDep = null;
        if (unit.getParent() != null) {
            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);
            if (parentModule == null) {
                throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(deploymentRoot);
            }
            WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit.getParent());
            parentDep = this.newDeployment(null, unit.getParent().getName(), parentModule.getClassLoader(), null);
        }

        final UnifiedVirtualFile uvf = root != null ? new VirtualFileAdaptor(root) : new ResourceLoaderAdapter(classLoader);
        final ArchiveDeployment dep = this.newDeployment(parentDep, unit.getName(), classLoader, uvf);

        //add an AnnotationInfo attachment that uses composite jandex index
        dep.addAttachment(AnnotationsInfo.class, new JandexAnnotationsInfo(unit));

        return dep;
    }",Creates new Web Service deployment .,webservices/server-integration/src/main/java/org/jboss/as/webservices/deployers/deployment/AbstractDeploymentModelBuilder.java,"[{'Syntax': 'WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit)', 'FunctionName': 'tracef', 'ArgsCount': 2, 'MethodBody': 'private static void tracef(final String format, final Object... params) {\n        if (EjbLogger.EJB3_INVOCATION_LOGGER.isTraceEnabled())\n            EjbLogger.EJB3_INVOCATION_LOGGER.tracef(format, params);\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/iiop/stub/DynamicIIOPStub.java'}, {'Syntax': 'deploymentRoot.getRoot()', 'FunctionName': 'getRoot', 'ArgsCount': 0, 'MethodBody': 'protected HttpHandler getRoot() {\n        return root;\n    }', 'FileName': '/wildfly/wildfly/undertow/src/main/java/org/wildfly/extension/undertow/Server.java'}, {'Syntax': 'WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(unit)', 'FunctionName': 'classLoaderResolutionFailed', 'ArgsCount': 1, 'MethodBody': '@Message(id = 25, value = ""Cannot resolve module or classloader for deployment %s"")\n    IllegalStateException classLoaderResolutionFailed(Object o);', 'FileName': '/wildfly/wildfly/webservices/server-integration/src/main/java/org/jboss/as/webservices/logging/WSLogger.java'}, {'Syntax': 'module.getClassLoader()', 'FunctionName': 'getClassLoader', 'ArgsCount': 0, 'MethodBody': '@Override\n    public ClassLoader getClassLoader() {\n        throw BatchLogger.LOGGER.noBatchEnvironmentFound(WildFlySecurityManager.getCurrentContextClassLoaderPrivileged());\n    }', 'FileName': '/wildfly/wildfly/batch-jberet/src/main/java/org/wildfly/extension/batch/jberet/DefaultBatchEnvironment.java'}, {'Syntax': 'unit.getParent()', 'FunctionName': 'getParent', 'ArgsCount': 0, 'MethodBody': 'SFSBInjectedXPCs getParent() {\n        return parent;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/container/SFSBInjectedXPCs.java'}, {'Syntax': 'unit.getParent()', 'FunctionName': 'getParent', 'ArgsCount': 0, 'MethodBody': 'SFSBInjectedXPCs getParent() {\n        return parent;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/container/SFSBInjectedXPCs.java'}, {'Syntax': 'WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(deploymentRoot)', 'FunctionName': 'classLoaderResolutionFailed', 'ArgsCount': 1, 'MethodBody': '@Message(id = 25, value = ""Cannot resolve module or classloader for deployment %s"")\n    IllegalStateException classLoaderResolutionFailed(Object o);', 'FileName': '/wildfly/wildfly/webservices/server-integration/src/main/java/org/jboss/as/webservices/logging/WSLogger.java'}, {'Syntax': 'WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit.getParent())', 'FunctionName': 'tracef', 'ArgsCount': 2, 'MethodBody': 'private static void tracef(final String format, final Object... params) {\n        if (EjbLogger.EJB3_INVOCATION_LOGGER.isTraceEnabled())\n            EjbLogger.EJB3_INVOCATION_LOGGER.tracef(format, params);\n    }', 'FileName': '/wildfly/wildfly/ejb3/src/main/java/org/jboss/as/ejb3/iiop/stub/DynamicIIOPStub.java'}, {'Syntax': 'unit.getParent()', 'FunctionName': 'getParent', 'ArgsCount': 0, 'MethodBody': 'SFSBInjectedXPCs getParent() {\n        return parent;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/container/SFSBInjectedXPCs.java'}, {'Syntax': 'this.newDeployment(null, unit.getParent().getName(), parentModule.getClassLoader(), null)', 'FunctionName': 'newDeployment', 'ArgsCount': 4, 'MethodBody': 'private ArchiveDeployment newDeployment(final ArchiveDeployment parent, final String name, final ClassLoader loader, final UnifiedVirtualFile rootFile) {\n        if (parent != null) {\n            return (ArchiveDeployment) this.deploymentModelFactory.newDeployment(parent, name, loader, rootFile);\n        } else {\n            return (ArchiveDeployment) this.deploymentModelFactory.newDeployment(name, loader, rootFile);\n        }\n\n    }', 'FileName': '/wildfly/wildfly/webservices/server-integration/src/main/java/org/jboss/as/webservices/deployers/deployment/AbstractDeploymentModelBuilder.java'}, {'Syntax': 'unit.getParent().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}, {'Syntax': 'unit.getParent()', 'FunctionName': 'getParent', 'ArgsCount': 0, 'MethodBody': 'SFSBInjectedXPCs getParent() {\n        return parent;\n    }', 'FileName': '/wildfly/wildfly/jpa/subsystem/src/main/java/org/jboss/as/jpa/container/SFSBInjectedXPCs.java'}, {'Syntax': 'parentModule.getClassLoader()', 'FunctionName': 'getClassLoader', 'ArgsCount': 0, 'MethodBody': '@Override\n    public ClassLoader getClassLoader() {\n        throw BatchLogger.LOGGER.noBatchEnvironmentFound(WildFlySecurityManager.getCurrentContextClassLoaderPrivileged());\n    }', 'FileName': '/wildfly/wildfly/batch-jberet/src/main/java/org/wildfly/extension/batch/jberet/DefaultBatchEnvironment.java'}, {'Syntax': 'this.newDeployment(parentDep, unit.getName(), classLoader, uvf)', 'FunctionName': 'newDeployment', 'ArgsCount': 4, 'MethodBody': 'private ArchiveDeployment newDeployment(final ArchiveDeployment parent, final String name, final ClassLoader loader, final UnifiedVirtualFile rootFile) {\n        if (parent != null) {\n            return (ArchiveDeployment) this.deploymentModelFactory.newDeployment(parent, name, loader, rootFile);\n        } else {\n            return (ArchiveDeployment) this.deploymentModelFactory.newDeployment(name, loader, rootFile);\n        }\n\n    }', 'FileName': '/wildfly/wildfly/webservices/server-integration/src/main/java/org/jboss/as/webservices/deployers/deployment/AbstractDeploymentModelBuilder.java'}, {'Syntax': 'unit.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\n        return name;\n    }', 'FileName': '/wildfly/wildfly/sar/src/main/java/org/jboss/as/service/descriptor/JBossServiceConfig.java'}]"
6621cdaacda9bd4817b112fa,abmargb/jamppa,"public static List<Class<? extends SASLMechanism>> getRegisterSASLMechanisms() {
        List<Class<? extends SASLMechanism>> answer = new ArrayList<Class<? extends SASLMechanism>>();
        for (String mechanismsPreference : mechanismsPreferences) {
            answer.add(implementedMechanisms.get(mechanismsPreference));
        }
        return answer;
    }",Returns the registerd SASLMechanism classes sorted by the level of preference .,src/main/java/org/jivesoftware/smack/SASLAuthentication.java,"[{'Syntax': 'answer.add(implementedMechanisms.get(mechanismsPreference))', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(E obj) {\n        throw new UnsupportedOperationException(\n                ""add() not supported for empty Iterator"");\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/smack/util/collections/AbstractEmptyIterator.java'}, {'Syntax': 'implementedMechanisms.get(mechanismsPreference)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': ""public synchronized V get(Object key) {\n        // First, clear all entries that have been in cache longer than the\n        // maximum defined age.\n        deleteExpiredEntries();\n\n        CacheObject<V> cacheObject = map.get(key);\n        if (cacheObject == null) {\n            // The object didn't exist in cache, so increment cache misses.\n            cacheMisses++;\n            return null;\n        }\n        // Remove the object from it's current place in the cache order list,\n        // and re-insert it at the front of the list.\n        cacheObject.lastAccessedListNode.remove();\n        lastAccessedList.addFirst(cacheObject.lastAccessedListNode);\n\n        // The object exists in cache, so increment cache hits. Also, increment\n        // the object's read count.\n        cacheHits++;\n        cacheObject.readCount++;\n\n        return cacheObject.object;\n    }"", 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/smack/util/Cache.java'}]"
6621cdaacda9bd4817b112fb,abmargb/jamppa,"private void setOfflinePresences() {
        Presence packetUnavailable;
        for (String user : presenceMap.keySet()) {
            Map<String, Presence> resources = presenceMap.get(user);
            if (resources != null) {
                for (String resource : resources.keySet()) {
                    packetUnavailable = new Presence(Presence.Type.unavailable);
                    packetUnavailable.setFrom(user + ""/"" + resource);
                    presencePacketListener.processPacket(packetUnavailable);
                }
            }
        }
    }",Changes the presence of available contacts offline by simulating an unavailable presence sent from the server . After a disconnection every Presence is set to offline .,src/main/java/org/jivesoftware/smack/UserRoster.java,"[{'Syntax': 'presenceMap.keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': 'public synchronized Set<K> keySet() {\n        // First, clear all entries that have been in cache longer than the\n        // maximum defined age.\n        deleteExpiredEntries();\n\n        return Collections.unmodifiableSet(map.keySet());\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/smack/util/Cache.java'}, {'Syntax': 'presenceMap.get(user)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': ""public synchronized V get(Object key) {\n        // First, clear all entries that have been in cache longer than the\n        // maximum defined age.\n        deleteExpiredEntries();\n\n        CacheObject<V> cacheObject = map.get(key);\n        if (cacheObject == null) {\n            // The object didn't exist in cache, so increment cache misses.\n            cacheMisses++;\n            return null;\n        }\n        // Remove the object from it's current place in the cache order list,\n        // and re-insert it at the front of the list.\n        cacheObject.lastAccessedListNode.remove();\n        lastAccessedList.addFirst(cacheObject.lastAccessedListNode);\n\n        // The object exists in cache, so increment cache hits. Also, increment\n        // the object's read count.\n        cacheHits++;\n        cacheObject.readCount++;\n\n        return cacheObject.object;\n    }"", 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/smack/util/Cache.java'}, {'Syntax': 'resources.keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': 'public synchronized Set<K> keySet() {\n        // First, clear all entries that have been in cache longer than the\n        // maximum defined age.\n        deleteExpiredEntries();\n\n        return Collections.unmodifiableSet(map.keySet());\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/smack/util/Cache.java'}, {'Syntax': 'presencePacketListener.processPacket(packetUnavailable)', 'FunctionName': 'processPacket', 'ArgsCount': 1, 'MethodBody': 'public void processPacket(final Packet packet) {\n        threadPool.execute(new Runnable() {\n            public void run() {\n                if (packet instanceof IQ) {\n                    IQ iq = (IQ) packet;\n                    IQ.Type iqType = iq.getType();\n                    if (IQ.Type.result == iqType || IQ.Type.error == iqType) {\n                        // The server got an answer to an IQ packet that was\n                        // sent from the component\n                        IQResultListener iqResultListener = resultListeners\n                                .remove(iq.getID());\n                        resultTimeout.remove(iq.getID());\n                        if (iqResultListener != null) {\n                            try {\n                                iqResultListener.receivedAnswer(iq);\n                            } catch (Exception e) {\n                                manager.getLog()\n                                        .error(""Error processing answer of remote entity"",\n                                                e);\n                            }\n                            return;\n                        }\n                    }\n                }\n                component.processPacket(packet);\n            }\n        });\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/whack/ExternalComponent.java'}]"
6621cdaacda9bd4817b112fc,TooTallNate/Java-WebSocket,"public void stop( int timeout ) throws InterruptedException {
		if( !isclosed.compareAndSet( false, true ) ) { // this also makes sure that no further connections will be added to this.connections
			return;
		}

		List<WebSocket> socketsToClose;

		// copy the connections in a list (prevent callback deadlocks)
		synchronized ( connections ) {
			socketsToClose = new ArrayList<WebSocket>( connections );
		}

		for( WebSocket ws : socketsToClose ) {
			ws.close( CloseFrame.GOING_AWAY );
		}

		wsf.close();

		synchronized ( this ) {
			if( selectorthread != null  && selector != null) {
				selector.wakeup();
				selectorthread.join( timeout );
			}
		}
	}",Closes all connected clients sockets then closes the underlying ServerSocketChannel effectively killing the server socket selectorthread freeing the port the server was bound to and stops all internal workerthreads .,src/main/java/org/java_websocket/server/WebSocketServer.java,"[{'Syntax': 'ws.close( CloseFrame.GOING_AWAY )', 'FunctionName': 'close', 'ArgsCount': 1, 'MethodBody': 'void close(int code);', 'FileName': '/TooTallNate/Java-WebSocket/src/main/java/org/java_websocket/WebSocket.java'}, {'Syntax': 'wsf.close()', 'FunctionName': 'close', 'ArgsCount': 0, 'MethodBody': '@Override\n    public void close() throws IOException {\n      throw new IOException();\n    }', 'FileName': '/TooTallNate/Java-WebSocket/src/test/java/org/java_websocket/issues/Issue900Test.java'}]"
6621cdaacda9bd4817b112fd,apache/parquet-mr,"public static <E extends Exception> void throwIfInstance(Throwable t,
                                                           Class<E> excClass)
      throws E {
    if (excClass.isAssignableFrom(t.getClass())) {
      // the throwable is already an exception, so return it
      throw excClass.cast(t);
    }
  }",If the given throwable is an instance of E throw it as an E .,parquet-common/src/main/java/org/apache/parquet/Exceptions.java,[]
6621cdaacda9bd4817b112fe,RuedigerMoeller/fast-serialization,"public static FSTConfiguration createJsonConfiguration(boolean prettyPrint, boolean shareReferences ) {
        if ( shareReferences && prettyPrint ) {
            throw new RuntimeException(""unsupported flag combination"");
        }
        return createJsonConfiguration(prettyPrint,shareReferences,null);
    }",create a json conf with given attributes . Note that shared refs = true for jason might be not as stable as for binary encodings as fst relies on stream positions to identify objects within a given input so any inbetween formatting will break proper reference resolution .,src/main/java/org/nustaq/serialization/FSTConfiguration.java,"[{'Syntax': 'createJsonConfiguration(prettyPrint,shareReferences,null)', 'FunctionName': 'createJsonConfiguration', 'ArgsCount': 3, 'MethodBody': 'protected static FSTConfiguration createJsonConfiguration(boolean prettyPrint, boolean shareReferences, ConcurrentHashMap<FieldKey,FSTClazzInfo.FSTFieldInfo> shared ) {\n        if ( prettyPrint && shareReferences ) {\n            throw new RuntimeException(""cannot use prettyPrint with shared refs to \'true\'. Set shareRefs to false."");\n        }\n        return constructJsonConf(prettyPrint, shareReferences, shared);\n    }', 'FileName': '/RuedigerMoeller/fast-serialization/src/main/java/org/nustaq/serialization/FSTConfiguration.java'}]"
6621cdaacda9bd4817b112ff,wro4j/wro4j,"public BaseWroManagerFactory addModelTransformer(final Transformer<WroModel> modelTransformer) {
    if (modelTransformers == null) {
      modelTransformers = new ArrayList<Transformer<WroModel>>();
    }
    this.modelTransformers.add(modelTransformer);
    return this;
  }",Add a single model transformer .,wro4j-core/src/main/java/ro/isdc/wro/manager/factory/BaseWroManagerFactory.java,"[{'Syntax': 'this.modelTransformers.add(modelTransformer)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(final String uri) {\n    notNull(uri);\n    LOG.debug(""authorize: {}"", uri);\n    //ignore query string added to authorized resources list.\n    authorizedResources.add(WroUtil.removeQueryString(uri));\n  }', 'FileName': '/wro4j/wro4j/wro4j-core/src/main/java/ro/isdc/wro/model/resource/support/DefaultResourceAuthorizationManager.java'}]"
6621cdaacda9bd4817b11300,tiefaces/TieFaces,"public static ChartType getChartType(final CTChart ctChart) {
        CTPlotArea plotArea = ctChart.getPlotArea();

        for (ChartType chartType : ChartType.values()) {
            if (chartType.isThisType(plotArea)) {
                return chartType;
            }
        }
        return null;
    }",return chart type from CTChart object .,src/org/tiefaces/components/websheet/utility/ChartUtility.java,"[{'Syntax': 'ChartType.values()', 'FunctionName': 'values', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\tpublic final Collection values() {\r\n\t\treturn emptySet;\r\n\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/dataobjects/CellMap.java'}, {'Syntax': 'chartType.isThisType(plotArea)', 'FunctionName': 'isThisType', 'ArgsCount': 1, 'MethodBody': '@SuppressWarnings(""rawtypes"")\r\n\t\t@Override\r\n\t\tpublic boolean isThisType(final CTPlotArea plotArea) {\r\n\t\t\tfinal List<CTAreaChart> areas = plotArea.getAreaChartList();\r\n\t\t\tif (!AppUtils.emptyList((List) areas)) {\r\n\t\t\t\tint grouping = areas.get(0).getGrouping().getVal()\r\n\t\t\t\t\t\t.intValue();\r\n\t\t\t\tif (grouping != STGrouping.INT_STACKED) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}', 'FileName': '/tiefaces/TieFaces/src/org/tiefaces/components/websheet/chart/ChartType.java'}]"
6621cdaacda9bd4817b11301,OpenEstate/OpenEstate-IO,"public static String getCountryName(String country, Locale language) {
        country = StringUtils.trimToNull(country);
        if (country == null) return null;

        String iso2Code = LocaleUtils.getCountryISO2(country);
        if (iso2Code != null) {
            String name = StringUtils.trimToNull(
                    new Locale(iso2Code, iso2Code).getDisplayCountry(language));
            if (name != null) return name;
        }
        return null;
    }",Return a country name in another language .,Core/src/main/java/org/openestate/io/core/LocaleUtils.java,"[{'Syntax': 'LocaleUtils.getCountryISO2(country)', 'FunctionName': 'getCountryISO2', 'ArgsCount': 1, 'MethodBody': 'public static String getCountryISO2(String country) {\n        country = StringUtils.trimToNull(country);\n        if (country == null)\n            return null;\n        if (country.length() == 2)\n            return country;\n\n        String[] iso2Codes = Locale.getISOCountries();\n        if (country.length() == 3) {\n            String iso2Code = LocaleUtils.getCountryISO2FromISO3(country);\n            if (iso2Code != null) return iso2Code;\n        }\n\n        for (String iso2Code : iso2Codes) {\n            Locale countryLocale = new Locale(iso2Code, iso2Code);\n            for (Locale translationLocale : LocaleUtils.availableLocaleList()) {\n                String name = StringUtils.trimToNull(countryLocale.getDisplayCountry(translationLocale));\n                if (name != null && name.equalsIgnoreCase(country)) return iso2Code;\n            }\n        }\n        return null;\n    }', 'FileName': '/OpenEstate/OpenEstate-IO/Core/src/main/java/org/openestate/io/core/LocaleUtils.java'}]"
6621cdaacda9bd4817b11302,deeplearning4j/nd4j,"public SDVariable gru(String baseName, GRUCellConfiguration configuration) {
        return new GRUCell(this, configuration).outputVariables(baseName)[0];
    }",The gru cell,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/samediff/SameDiff.java,[]
6621cdabcda9bd4817b11303,oaqa/baseqa,"public int getOffsetInBeginSection() {
    if (Passage_Type.featOkTst && ((Passage_Type)jcasType).casFeat_offsetInBeginSection == null)
      jcasType.jcas.throwFeatMissing(""offsetInBeginSection"", ""edu.cmu.lti.oaqa.type.retrieval.Passage"");
    return jcasType.ll_cas.ll_getIntValue(addr, ((Passage_Type)jcasType).casFeatCode_offsetInBeginSection);}",getter for offsetInBeginSection - gets Character offset of the start of this passage within the section that contains this passage .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Passage.java,[]
6621cdabcda9bd4817b11304,wildfly/wildfly,"public void insertValue(Any any) {
        if (type == String.class)
            any.insert_wstring((String) value); // 1.3.5.10 Map to wstring
        else
            Util.insertAnyPrimitive(any, value);
    }",Insert the constant value into the argument Any .,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ConstantAnalysis.java,"[{'Syntax': 'Util.insertAnyPrimitive(any, value)', 'FunctionName': 'insertAnyPrimitive', 'ArgsCount': 2, 'MethodBody': 'public static void insertAnyPrimitive(Any any, Object primitive) {\n        Class type = primitive.getClass();\n\n        if (type == Boolean.class)\n            any.insert_boolean((Boolean) primitive);\n        else if (type == Character.class)\n            any.insert_wchar((Character) primitive);\n        else if (type == Byte.class)\n            any.insert_octet((Byte) primitive);\n        else if (type == Short.class)\n            any.insert_short((Short) primitive);\n        else if (type == Integer.class)\n            any.insert_long((Integer) primitive);\n        else if (type == Long.class)\n            any.insert_longlong((Long) primitive);\n        else if (type == Float.class)\n            any.insert_float((Float) primitive);\n        else if (type == Double.class)\n            any.insert_double((Double) primitive);\n        else\n            throw IIOPLogger.ROOT_LOGGER.notAPrimitive(type.getName());\n    }', 'FileName': '/wildfly/wildfly/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/Util.java'}]"
6621cdabcda9bd4817b11305,deeplearning4j/nd4j,"public static INDArray col2im(INDArray col, int sy, int sx, int ph, int pw, int h, int w) {
        if (col.rank() != 6)
            throw new IllegalArgumentException(""col2im input array must be rank 6"");

        INDArray output = Nd4j.create(new long[]{col.size(0), col.size(1), h, w});

        Col2Im col2Im = Col2Im.builder()
                .inputArrays(new  INDArray[]{col})
                .outputs(new INDArray[]{output})
                .conv2DConfig(Conv2DConfig.builder()
                        .sy(sy)
                        .sx(sx)
                        .dw(1)
                        .dh(1)
                        .kh(h)
                        .kw(w)
                        .ph(ph)
                        .pw(pw)
                        .build())
                .build();

        Nd4j.getExecutioner().exec(col2Im);
        return col2Im.outputArguments()[0];
    }",Rearrange matrix columns into blocks,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/convolution/Convolution.java,[]
6621cdabcda9bd4817b11306,1gravity/Android-RTEditor,"public synchronized int write(InputStream in) throws IOException {
        int readCount = 0;
        int inBufferPos = count - filledBufferSum;
        int n = in.read(currentBuffer, inBufferPos, currentBuffer.length - inBufferPos);
        while (n != -1) {
            readCount += n;
            inBufferPos += n;
            count += n;
            if (inBufferPos == currentBuffer.length) {
                needNewBuffer(currentBuffer.length);
                inBufferPos = 0;
            }
            n = in.read(currentBuffer, inBufferPos, currentBuffer.length - inBufferPos);
        }
        return readCount;
    }",Writes the entire contents of the specified input stream to this byte stream . Bytes from the input stream are read directly into the internal buffers of this streams .,RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java,"[{'Syntax': 'needNewBuffer(currentBuffer.length)', 'FunctionName': 'needNewBuffer', 'ArgsCount': 1, 'MethodBody': 'private void needNewBuffer(int newcount) {\n        if (currentBufferIndex < buffers.size() - 1) {\n            //Recycling old buffer\n            filledBufferSum += currentBuffer.length;\n            \n            currentBufferIndex++;\n            currentBuffer = buffers.get(currentBufferIndex);\n        } else {\n            //Creating new buffer\n            int newBufferSize;\n            if (currentBuffer == null) {\n                newBufferSize = newcount;\n                filledBufferSum = 0;\n            } else {\n                newBufferSize = Math.max(\n                    currentBuffer.length << 1, \n                    newcount - filledBufferSum);\n                filledBufferSum += currentBuffer.length;\n            }\n            \n            currentBufferIndex++;\n            currentBuffer = new byte[newBufferSize];\n            buffers.add(currentBuffer);\n        }\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java'}]"
6621cdabcda9bd4817b11307,Unidata/thredds,"public float[] DM_RPKG(int isword, int nword, int decimalScale)
          throws IOException {
    // from DM_RPKG
    // read the data packing type
    float[] data;
    int ipktyp = DM_RINT(isword);
    int iiword = isword + 1;
    int lendat = nword - 1;
    if (ipktyp == MDGNON) {  // no packing
      data = new float[lendat];
      DM_RFLT(iiword, data);
      return data;
    }
    int iiw;
    int irw;
    if (ipktyp == MDGDIF) {
      iiw = 4;
      irw = 3;
    } else if (ipktyp == MDGRB2) {
      iiw = 4;
      irw = 1;
    } else {
      iiw = 3;
      irw = 2;
    }
    int[] iarray = new int[iiw];
    float[] rarray = new float[irw];
    DM_RINT(iiword, iarray);
    iiword = iiword + iiw;
    lendat = lendat - iiw;
    DM_RFLT(iiword, rarray);
    iiword = iiword + irw;
    lendat = lendat - irw;

    if (ipktyp == MDGRB2) {
      data = unpackGrib2Data(iiword, lendat, iarray, rarray);
      return data;
    }
    int nbits = iarray[0];
    int misflg = iarray[1];
    boolean miss = misflg != 0;
    int kxky = iarray[2];
    // int mword = kxky;
    int kx = 0;
    if (iiw == 4) {
      kx = iarray[3];
    }
    float ref = rarray[0];
    float scale = rarray[1];
    float difmin = 0;
    if (irw == 3) {
      difmin = rarray[2];
    }
    data = unpackData(iiword, lendat, ipktyp, kxky, nbits, ref, scale,
            miss, difmin, kx, decimalScale);
    return data;

  }",Unpack a packed grid,visad/src/main/java/ucar/nc2/iosp/gempak/GempakGridReader.java,[]
6621cdabcda9bd4817b11308,workplacesystems/utilsj,"public static <K,V> void reverse(Map<K,V> source, Map<V,K> target)
    {
        Iterator<K> i = source.keySet().iterator();
        while (i.hasNext())
        {
            K key = i.next();
            V value = source.get(key);
            target.put(value, key);
        }
    }",Take key and value pairs from source and create map from value to key in target .,src/main/java/com/workplacesystems/utilsj/collections/helpers/CollectionUtilities.java,"[{'Syntax': 'source.keySet().iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': '@Override\r\n            public Iterator<E> iterator() {\r\n\r\n                return new FilterableArrayIterator(filter);\r\n            }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/FilterableArrayList.java'}, {'Syntax': 'source.keySet()', 'FunctionName': 'keySet', 'ArgsCount': 0, 'MethodBody': '@Override\r\n    public Set<K> keySet() {\r\n\r\n        if (setOfKeysByKey == null) {\r\n            setOfKeysByKey = new AbstractFilterableSet<K>() {\r\n\r\n                @Override\r\n                public Iterator<K> iterator() {\r\n\r\n                    return new TransactionalBidiTreeMapIterator<K>(KEY) {\r\n\r\n                        @Override\r\n                        protected K doGetNext() {\r\n                            return (K)lastReturnedNode.getData(KEY);\r\n                        }\r\n                    };\r\n                }\r\n\r\n                @Override\r\n                public int size() {\r\n                    return TransactionalBidiTreeMap.this.size();\r\n                }\r\n\r\n                @Override\r\n                public boolean contains(Object o) {\r\n                    return containsKey(o);\r\n                }\r\n\r\n                @Override\r\n                public boolean remove(Object o) {\r\n\r\n                    int oldNodeCount = nodeCount;\r\n\r\n                    TransactionalBidiTreeMap.this.remove(o);\r\n\r\n                    return nodeCount != oldNodeCount;\r\n                }\r\n\r\n                @Override\r\n                public void clear() {\r\n                    TransactionalBidiTreeMap.this.clear();\r\n                }\r\n            };\r\n        }\r\n\r\n        return setOfKeysByKey;\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}, {'Syntax': 'i.hasNext()', 'FunctionName': 'hasNext', 'ArgsCount': 0, 'MethodBody': 'public boolean hasNext() {\r\n                    return nextObject != null;\r\n                }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/FilterableArrayList.java'}, {'Syntax': 'i.next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public E next()\r\n                        throws NoSuchElementException {\r\n\r\n                    if (nextObject == null) {\r\n                        throw new NoSuchElementException();\r\n                    }\r\n\r\n                    lastReturnedObject = nextObject;\r\n                    nextObject = getNextValidObject();\r\n                    return lastReturnedObject;\r\n                }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/FilterableArrayList.java'}, {'Syntax': 'source.get(key)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\r\n    public V get(final Object key)\r\n            throws ClassCastException, NullPointerException {\r\n\r\n        checkKey(key);\r\n\r\n        return (V)doGet(key, KEY);\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java'}, {'Syntax': 'target.put(value, key)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'public MapBuilder<K,V> put(K key, V value)\r\n    {\r\n        map.put(key, value);\r\n        return this;\r\n    }', 'FileName': '/workplacesystems/utilsj/src/main/java/com/workplacesystems/utilsj/collections/MapBuilder.java'}]"
6621cdabcda9bd4817b11309,tony19/logback-android,"private String[] enabledCipherSuites(String[] supportedCipherSuites,
      String[] defaultCipherSuites) {
    if (enabledCipherSuites == null) {
      // we're assuming that the same engine is used for all configurables
      // so once we determine the enabled set, we won't do it again
      if (OptionHelper.isEmpty(getIncludedCipherSuites())
          && OptionHelper.isEmpty(getExcludedCipherSuites())) {
        enabledCipherSuites = Arrays.copyOf(defaultCipherSuites,
            defaultCipherSuites.length);
      }
      else {
        enabledCipherSuites = includedStrings(supportedCipherSuites,
            getIncludedCipherSuites(), getExcludedCipherSuites());
      }
      for (String cipherSuite : enabledCipherSuites) {
        addInfo(""enabled cipher suite: "" + cipherSuite);
      }
    }
    return enabledCipherSuites;
  }",Gets the set of enabled cipher suites based on the configuration .,logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java,"[{'Syntax': 'OptionHelper.isEmpty(getIncludedCipherSuites())', 'FunctionName': 'isEmpty', 'ArgsCount': 1, 'MethodBody': 'public static boolean isEmpty(String str) {\n    return ((str == null) || CoreConstants.EMPTY_STRING.equals(str));\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/util/OptionHelper.java'}, {'Syntax': 'getIncludedCipherSuites()', 'FunctionName': 'getIncludedCipherSuites', 'ArgsCount': 0, 'MethodBody': 'public String getIncludedCipherSuites() {\n    return includedCipherSuites;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java'}, {'Syntax': 'OptionHelper.isEmpty(getExcludedCipherSuites())', 'FunctionName': 'isEmpty', 'ArgsCount': 1, 'MethodBody': 'public static boolean isEmpty(String str) {\n    return ((str == null) || CoreConstants.EMPTY_STRING.equals(str));\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/util/OptionHelper.java'}, {'Syntax': 'getExcludedCipherSuites()', 'FunctionName': 'getExcludedCipherSuites', 'ArgsCount': 0, 'MethodBody': 'public String getExcludedCipherSuites() {\n    return excludedCipherSuites;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java'}, {'Syntax': 'includedStrings(supportedCipherSuites,\n            getIncludedCipherSuites(), getExcludedCipherSuites())', 'FunctionName': 'includedStrings', 'ArgsCount': 3, 'MethodBody': 'private String[] includedStrings(String[] defaults, String included,\n      String excluded) {\n    List<String> values = new ArrayList<String>(defaults.length);\n    values.addAll(Arrays.asList(defaults));\n    if (included != null) {\n      StringCollectionUtil.retainMatching(values, stringToArray(included));\n    }\n    if (excluded != null) {\n      StringCollectionUtil.removeMatching(values, stringToArray(excluded));\n    }\n    return values.toArray(new String[values.size()]);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java'}, {'Syntax': 'getIncludedCipherSuites()', 'FunctionName': 'getIncludedCipherSuites', 'ArgsCount': 0, 'MethodBody': 'public String getIncludedCipherSuites() {\n    return includedCipherSuites;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java'}, {'Syntax': 'getExcludedCipherSuites()', 'FunctionName': 'getExcludedCipherSuites', 'ArgsCount': 0, 'MethodBody': 'public String getExcludedCipherSuites() {\n    return excludedCipherSuites;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java'}, {'Syntax': 'addInfo(""enabled cipher suite: "" + cipherSuite)', 'FunctionName': 'addInfo', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void addInfo(String msg) {\n    info.add(msg);\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/core/net/ssl/mock/MockContextAware.java'}]"
6621cdabcda9bd4817b1130a,oblac/jodd,"protected Class replaceWithMappedTypeForPath(final Class target) {
		if (mappings == null) {
			return target;
		}

		Class newType;

		// first try alt paths

		Path altPath = path.getAltPath();

		if (altPath != null) {
			if (!altPath.equals(path)) {
				newType = mappings.get(altPath);

				if (newType != null) {
					return newType;
				}
			}
		}

		// now check regular paths

		newType = mappings.get(path);

		if (newType != null) {
			return newType;
		}

		return target;
	}",Replaces type with mapped type for current path .,jodd-json/src/main/java/jodd/json/JsonParser.java,"[{'Syntax': 'altPath.equals(path)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic boolean equals(final Object o) {\n\t\t\tif (this == o) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfinal Rule rule = (Rule) o;\n\n\t\t\tif (include != rule.include) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!value.equals(rule.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/inex/InExRules.java'}, {'Syntax': 'mappings.get(altPath)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}, {'Syntax': 'mappings.get(path)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic V get(final K key) {\n\t\tlong stamp = lock.readLock();\n\n\t\ttry {\n\t\t\tfinal CacheObject<K,V> co = cacheMap.get(key);\n\t\t\tif (co == null) {\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (co.isExpired()) {\n\t\t\t\tfinal long newStamp = lock.tryConvertToWriteLock(stamp);\n\n\t\t\t\tif (newStamp != 0L) {\n\t\t\t\t\tstamp = newStamp;\n\t\t\t\t\t// lock is upgraded to write lock\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// manually upgrade lock to write lock\n\t\t\t\t\tlock.unlockRead(stamp);\n\t\t\t\t\tstamp = lock.writeLock();\n\t\t\t\t}\n\n\t\t\t\tfinal CacheObject<K,V> removedCo = cacheMap.remove(key);\n\t\t\t\tif (removedCo != null) {\n\t\t\t\t\tonRemove(removedCo.key, removedCo.cachedObject);\n\t\t\t\t}\n\n\t\t\t\tmissCount++;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\thitCount++;\n\t\t\treturn co.getObject();\n\t\t}\n\t\tfinally {\n\t\t\tlock.unlock(stamp);\n\t\t}\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/cache/AbstractCacheMap.java'}]"
6621cdabcda9bd4817b1130b,streamsets/datacollector,"public Map<Aggregator, AggregatorData> roll(long newDataWindowEndTimeMillis) {
    Utils.checkState(started, ""Not started"");
    Utils.checkState(!stopped, ""Already stopped"");
    return dataProvider.roll(newDataWindowEndTimeMillis);
  }",Atomically rolls the DataWindow of all aggregators associated with the Aggregators instance .,basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/aggregation/aggregator/Aggregators.java,[]
6621cdabcda9bd4817b1130c,tony19/logback-android,"public synchronized int getEffectiveLevel() {
    int result = level;
    int effLevel;

    Iterator it = iterator();
    Status s;
    while (it.hasNext()) {
      s = (Status) it.next();
      effLevel = s.getEffectiveLevel();
      if (effLevel > result) {
        result = effLevel;
      }
    }
    return result;
  }",different status objects lying on the same cycle,logback-android/src/main/java/ch/qos/logback/core/status/StatusBase.java,"[{'Syntax': 'iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': 'Iterator<Status> iterator();', 'FileName': '/tony19/logback-android/logback-android/src/main/java/ch/qos/logback/core/status/Status.java'}, {'Syntax': 's.getEffectiveLevel()', 'FunctionName': 'getEffectiveLevel', 'ArgsCount': 0, 'MethodBody': 'Level getEffectiveLevel() {\n    return effectiveLevel;\n  }', 'FileName': '/tony19/logback-android/logback-android/src/test/java/ch/qos/logback/classic/HLogger.java'}]"
6621cdabcda9bd4817b1130d,oblac/jodd,"protected JsonResult login() {
		T authToken;

		authToken = loginViaBasicAuth(servletRequest);

		if (authToken == null) {
			authToken = loginViaRequestParams(servletRequest);
		}

		if (authToken == null) {
			log.warn(""Login failed."");

			return JsonResult.of(HttpStatus.error401().unauthorized(""Login failed.""));
		}

		log.info(""login OK!"");

		final UserSession<T> userSession = new UserSession<>(authToken, userAuth.tokenValue(authToken));

		userSession.start(servletRequest, servletResponse);

		// return token

		return tokenAsJson(authToken);
	}",Authenticate user and start user session .,jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java,"[{'Syntax': 'loginViaBasicAuth(servletRequest)', 'FunctionName': 'loginViaBasicAuth', 'ArgsCount': 1, 'MethodBody': 'protected T loginViaBasicAuth(final HttpServletRequest servletRequest) {\n\t\tfinal String username = ServletUtil.resolveAuthUsername(servletRequest);\n\t\tif (username == null) {\n\t\t\treturn null;\n\t\t}\n\t\tfinal String password = ServletUtil.resolveAuthPassword(servletRequest);\n\n\t\treturn userAuth.login(username, password);\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java'}, {'Syntax': 'loginViaRequestParams(servletRequest)', 'FunctionName': 'loginViaRequestParams', 'ArgsCount': 1, 'MethodBody': 'protected T loginViaRequestParams(final HttpServletRequest servletRequest) {\n\t\tfinal String username = servletRequest.getParameter(PARAM_USERNAME).trim();\n\t\tif (StringUtil.isEmpty(username)) {\n\t\t\treturn null;\n\t\t}\n\t\tfinal String password = servletRequest.getParameter(PARAM_PASSWORD).trim();\n\n\t\treturn userAuth.login(username, password);\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java'}, {'Syntax': 'JsonResult.of(HttpStatus.error401().unauthorized(""Login failed.""))', 'FunctionName': 'of', 'ArgsCount': 1, 'MethodBody': 'public static MutableBoolean of(final boolean value) {\n\t\treturn new MutableBoolean(value);\n\t}', 'FileName': '/oblac/jodd/jodd-core/src/main/java/jodd/mutable/MutableBoolean.java'}, {'Syntax': 'HttpStatus.error401().unauthorized(""Login failed."")', 'FunctionName': 'unauthorized', 'ArgsCount': 1, 'MethodBody': 'public HttpStatus401 unauthorized(String message) {\n\t\t\tmessage = ""Access is denied due to invalid credentials."";\n\t\t\treturn this;\n\t\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/result/HttpStatus.java'}, {'Syntax': 'HttpStatus.error401()', 'FunctionName': 'error401', 'ArgsCount': 0, 'MethodBody': 'public static HttpStatus401 error401() {\n\t\treturn new HttpStatus401();\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/result/HttpStatus.java'}, {'Syntax': 'userAuth.tokenValue(authToken)', 'FunctionName': 'tokenValue', 'ArgsCount': 1, 'MethodBody': '@Override\n\tpublic String tokenValue(final SimTok authToken) {\n\t\treturn new SimTokCoder().encode(authToken);\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/test/java/jodd/joy/fixtures/MyUserAuth.java'}, {'Syntax': 'userSession.start(servletRequest, servletResponse)', 'FunctionName': 'start', 'ArgsCount': 2, 'MethodBody': 'public void start(final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse) {\n\t\tfinal HttpSession httpSession = httpServletRequest.getSession(true);\n\t\thttpSession.setAttribute(AUTH_SESSION_NAME, this);\n\n\t\tfinal Cookie cookie = new Cookie(AUTH_COOKIE_NAME, authTokenValue);\n\t\t//cookie.setDomain(SSORealm.SSO_DOMAIN);\n\t\tcookie.setMaxAge(cookieMaxAge);\n\t\tcookie.setPath(""/"");\n\t\thttpServletResponse.addCookie(cookie);\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/auth/UserSession.java'}, {'Syntax': 'tokenAsJson(authToken)', 'FunctionName': 'tokenAsJson', 'ArgsCount': 1, 'MethodBody': 'protected JsonResult tokenAsJson(final T authToken) {\n\t\tfinal JsonObject jsonObject = new JsonObject();\n\n\t\tjsonObject.put(""token"", userAuth.tokenValue(authToken));\n\n\t\treturn JsonResult.of(jsonObject);\n\t}', 'FileName': '/oblac/jodd/jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java'}]"
6621cdabcda9bd4817b1130e,1gravity/Android-RTEditor,"protected float maxZoom() {
        if (mBitmapDisplayed.getBitmap() == null) {
            return 1F;
        }

        float fw = (float) mBitmapDisplayed.getWidth() / (float) mThisWidth;
        float fh = (float) mBitmapDisplayed.getHeight() / (float) mThisHeight;
        float max = Math.max(fw, fh) * 4;
        return max;
    }",rather than the current 1024x768 this should be changed down to 200% .,RTEditor/src/main/java/com/onegravity/rteditor/media/crop/ImageViewTouchBase.java,"[{'Syntax': 'mBitmapDisplayed.getBitmap()', 'FunctionName': 'getBitmap', 'ArgsCount': 0, 'MethodBody': 'public Bitmap getBitmap() {\n\n        return mBitmap;\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/media/crop/RotateBitmap.java'}, {'Syntax': 'mBitmapDisplayed.getWidth()', 'FunctionName': 'getWidth', 'ArgsCount': 0, 'MethodBody': '@Override\n    public int getWidth() {\n        return getWidth(mAudioPreviewImage);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/api/media/RTAudioImpl.java'}, {'Syntax': 'mBitmapDisplayed.getHeight()', 'FunctionName': 'getHeight', 'ArgsCount': 0, 'MethodBody': '@Override\n    public int getHeight() {\n        return getHeight(mAudioPreviewImage);\n    }', 'FileName': '/1gravity/Android-RTEditor/RTEditor/src/main/java/com/onegravity/rteditor/api/media/RTAudioImpl.java'}]"
6621cdabcda9bd4817b1130f,mikepenz/CrossfadeDrawerLayout,"public void fadeUp(int duration) {
        //animate up
        mContainer.clearAnimation();
        ResizeWidthAnimation anim = new ResizeWidthAnimation(mContainer, mMaxWidth, new ApplyTransformationListener() {
            @Override
            public void applyTransformation(int width) {
                overlapViews(width);
            }
        });
        anim.setDuration(duration);
        mContainer.startAnimation(anim);
    }",animate to the large view,library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java,"[{'Syntax': 'overlapViews(width)', 'FunctionName': 'overlapViews', 'ArgsCount': 1, 'MethodBody': ""private void overlapViews(int width) {\n        if (width == mWidth) {\n            return;\n        }\n        //remember this width so it is't processed twice\n        mWidth = width;\n\n\n        float percentage = calculatePercentage(width);\n        float alpha = percentage / 100;\n\n        mSmallView.setAlpha(1);\n        mSmallView.setClickable(false);\n        mLargeView.bringToFront();\n        mLargeView.setAlpha(alpha);\n        mLargeView.setClickable(true);\n        mLargeView.setVisibility(alpha > 0.01f ? View.VISIBLE : View.GONE);\n\n        //notify the crossfadeListener\n        if (mCrossfadeListener != null) {\n            mCrossfadeListener.onCrossfade(mContainer, calculatePercentage(width), width);\n        }\n    }"", 'FileName': '/mikepenz/CrossfadeDrawerLayout/library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java'}]"
6621cdabcda9bd4817b11310,RestComm/jain-slee,"protected void executeBeforeCommitActions() {
		if (beforeCommitActions != null) {
			if (trace) {
				logger.trace(""Executing before commit actions"");
			}
			executeActions(beforeCommitActions,trace);
			beforeCommitActions = null;
		} 
	}",Executes actions scheduled for before commit,container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/TransactionContextImpl.java,"[{'Syntax': 'executeActions(beforeCommitActions,trace)', 'FunctionName': 'executeActions', 'ArgsCount': 2, 'MethodBody': 'private void executeActions(List<TransactionalAction> actions,boolean trace) {\r\n\t\tfor (TransactionalAction action : actions) {\r\n\t\t\tif (trace)\r\n\t\t\t\tlogger.trace(""Executing action:"" + action);\r\n\t\t\taction.execute();\r\n\t\t}\r\n\t}', 'FileName': '/RestComm/jain-slee/container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/TransactionContextImpl.java'}]"
6621cdabcda9bd4817b11311,basis-technology-corp/tcl-regex-java,"int dumprarcs(Arc a, State s, int pos, StringBuilder sb) {
        if (a.outchain != null) {
            pos = dumprarcs(a.outchain, s, pos, sb);
        }
        dumparc(a, s, sb);
        if (pos == 5) {
            sb.append(""\n"");
            pos = 1;
        } else {
            pos++;
        }
        return pos;
    }",dumprarcs - dump remaining outarcs recursively in reverse order,src/main/java/com/basistech/tclre/Nfa.java,"[{'Syntax': 'dumprarcs(a.outchain, s, pos, sb)', 'FunctionName': 'dumprarcs', 'ArgsCount': 4, 'MethodBody': 'int dumprarcs(Arc a, State s, int pos, StringBuilder sb) {\n        if (a.outchain != null) {\n            pos = dumprarcs(a.outchain, s, pos, sb);\n        }\n        dumparc(a, s, sb);\n        if (pos == 5) {\n            sb.append(""\\n"");\n            pos = 1;\n        } else {\n            pos++;\n        }\n        return pos;\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Nfa.java'}, {'Syntax': 'dumparc(a, s, sb)', 'FunctionName': 'dumparc', 'ArgsCount': 3, 'MethodBody': 'void dumparc(Arc a, State s, StringBuilder sb) {\n\n        sb.append(""\\t"");\n        switch (a.type) {\n        case Compiler.PLAIN:\n            sb.append(String.format(""[%d]"", a.co));\n            break;\n        case Compiler.AHEAD:\n            sb.append(String.format("">%d>"", a.co));\n            break;\n        case Compiler.BEHIND:\n            sb.append(String.format(""<%d<"", a.co));\n            break;\n        case Compiler.LACON:\n            sb.append(String.format("":%d:"", a.co));\n            break;\n        case \'^\':\n        case \'$\':\n            sb.append(String.format(""%c%d"", (char)a.type, a.co));\n            break;\n        case Compiler.EMPTY:\n            break;\n        default:\n            sb.append(String.format(""0x%x/0%d"", a.type, a.co));\n            break;\n        }\n        if (a.from != s) {\n            sb.append(String.format(""?%d?"", a.from.no));\n        }\n        sb.append(""->"");\n        if (a.to == null) {\n            sb.append(""null"");\n            Arc aa;\n            for (aa = a.to.ins; aa != null; aa = aa.inchain) {\n                if (aa == a) {\n                    break;      /* NOTE BREAK OUT */\n                }\n            }\n            if (aa == null) {\n                LOG.debug(""?!?"");   /* missing from in-chain */\n            }\n        } else {\n            sb.append(String.format(""%d"", a.to.no));\n        }\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Nfa.java'}]"
6621cdabcda9bd4817b11312,oblac/jodd,"@SuppressWarnings(""unchecked"")
	public <T extends ActionFilter> MadvocRouter filter(final Class<T> actionFilterClass) {
		filtersManager.resolve(actionFilterClass);
		return this;
	}",Returns action filter instance for further configuration .,jodd-madvoc/src/main/java/jodd/madvoc/MadvocRouter.java,"[{'Syntax': 'filtersManager.resolve(actionFilterClass)', 'FunctionName': 'resolve', 'ArgsCount': 1, 'MethodBody': 'public T resolve(final Class<? extends T> wrapperClass) {\n\t\tString wrapperClassName = wrapperClass.getName();\n\n\t\tT wrapper = lookup(wrapperClassName);\n\n\t\tif (wrapper == null) {\n\t\t\twrapper = createWrapper(wrapperClass);\n\n\t\t\tinitializeWrapper(wrapper);\n\n\t\t\twrappers.put(wrapperClassName, wrapper);\n\t\t}\n\t\treturn wrapper;\n\t}', 'FileName': '/oblac/jodd/jodd-madvoc/src/main/java/jodd/madvoc/component/WrapperManager.java'}]"
6621cdabcda9bd4817b11313,Unidata/thredds,"public Index set(int[] index) {
    if (index.length != rank)
      throw new ArrayIndexOutOfBoundsException();
    if (rank == 0) return this;
    int prefixrank = (hasvlen ? rank : rank - 1);
    System.arraycopy(index, 0, current, 0, prefixrank);
    if (hasvlen) current[prefixrank] = -1;
    return this;
  }",Set the current element s index . General - rank case .,cdm/src/main/java/ucar/ma2/Index.java,[]
6621cdabcda9bd4817b11314,oblac/jodd,"protected void makeStaticInitBlock() {
		if (wd.adviceClinits != null) {
			MethodVisitor mv = wd.dest.visitMethod(AsmUtil.ACC_STATIC, CLINIT, DESC_VOID, null, null);
			mv.visitCode();
			for (String name : wd.adviceClinits) {
				mv.visitMethodInsn(
					INVOKESTATIC,
					wd.thisReference,
					name, DESC_VOID,
					false);
			}
			mv.visitInsn(RETURN);
			mv.visitMaxs(0, 0);
			mv.visitEnd();
		}
	}",Creates static initialization block that simply calls all advice static init methods in correct order .,jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxettaClassBuilder.java,[]
6621cdabcda9bd4817b11315,google/guice,"public static void main(String[] args) throws Exception {
    if (args.length != 1) {
      System.err.println(
          ""Usage: java -Dcom.sun.management.jmxremote ""
              + Manager.class.getName()
              + "" [module class name]"");
      System.err.println(""Then run 'jconsole' to connect."");
      System.exit(1);
    }

    Module module = (Module) Class.forName(args[0]).newInstance();
    Injector injector = Guice.createInjector(module);

    manage(args[0], injector);

    System.out.println(""Press Ctrl+C to exit..."");

    // Sleep forever.
    Thread.sleep(Long.MAX_VALUE);
  }",Run with no arguments for usage instructions .,extensions/jmx/src/com/google/inject/tools/jmx/Manager.java,"[{'Syntax': 'Manager.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': '@Override\n    public String getName() {\n      return name;\n    }', 'FileName': '/google/guice/extensions/assistedinject/test/com/google/inject/assistedinject/ManyConstructorsTest.java'}, {'Syntax': 'Guice.createInjector(module)', 'FunctionName': 'createInjector', 'ArgsCount': 1, 'MethodBody': 'private Injector createInjector(Module... modules) throws CreationException {\n    return Guice.createInjector(\n        Lists.<Module>asList(\n            new AbstractModule() {\n              @Override\n              protected void configure() {\n                install(new ServletModule());\n                bind(InSession.class);\n                bind(IN_SESSION_NULL_KEY)\n                    .toProvider(Providers.<InSession>of(null))\n                    .in(SessionScoped.class);\n                bind(InRequest.class);\n                bind(IN_REQUEST_NULL_KEY)\n                    .toProvider(Providers.<InRequest>of(null))\n                    .in(RequestScoped.class);\n              }\n            },\n            modules));\n  }', 'FileName': '/google/guice/extensions/servlet/test/com/google/inject/servlet/ServletTest.java'}, {'Syntax': 'manage(args[0], injector)', 'FunctionName': 'manage', 'ArgsCount': 2, 'MethodBody': 'public static void manage(String domain, Injector injector) {\n    manage(ManagementFactory.getPlatformMBeanServer(), domain, injector);\n  }', 'FileName': '/google/guice/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java'}]"
6621cdabcda9bd4817b11316,rupertlssmith/lojix,"public Long getPropertyAsLong(String propName)
    {
        String prop = getProperty(propName);

        return (prop != null) ? Long.valueOf(prop) : null;
    }",Parses a property as a long .,base/common/src/main/com/thesett/common/properties/ParsedProperties.java,"[{'Syntax': 'getProperty(propName)', 'FunctionName': 'getProperty', 'ArgsCount': 1, 'MethodBody': 'public String getProperty(String key)\n    {\n        // Try to get the callers class name and method name by examing the stack.\n        String className = null;\n        String methodName = null;\n\n        // Java 1.4 onwards only.\n        /*try\n        {\n            throw new Exception();\n        }\n        catch (Exception e)\n        {\n            StackTraceElement[] stack = e.getStackTrace();\n\n            // Check that the stack trace contains at least two elements, one for this method and one for the caller.\n            if (stack.length >= 2)\n            {\n                className = stack[1].getClassName();\n                methodName = stack[1].getMethodName();\n            }\n        }*/\n\n        // Java 1.5 onwards only.\n        StackTraceElement[] stack = Thread.currentThread().getStackTrace();\n\n        // Check that the stack trace contains at least two elements, one for this method and one for the caller.\n        if (stack.length >= 2)\n        {\n            className = stack[1].getClassName();\n            methodName = stack[1].getMethodName();\n        }\n\n        // Java 1.3 and before? Not sure, some horrible thing that parses the text spat out by printStackTrace?\n\n        return getProperty(className, methodName, key);\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}]"
6621cdabcda9bd4817b11317,abmargb/jamppa,"private Packet nextPacket() {
        Packet packet = null;
        // Wait until there's a packet or we're done.
        while (!done && (packet = queue.poll()) == null) {
            try {
                synchronized (queue) {
                    queue.wait();
                }
            } catch (InterruptedException ie) {
                // Do nothing
            }
        }
        return packet;
    }",Returns the next available packet from the queue for writing .,src/main/java/org/jivesoftware/smack/PacketWriter.java,[]
6621cdabcda9bd4817b11318,Netflix/hollow,"public int orderedCopy(long srcPos, byte[] data, int destPos, int length) {
        int segmentSize = 1 << log2OfSegmentSize;
        int remainingBytesInSegment = (int)(segmentSize - (srcPos & bitmask));
        int dataPosition = destPos;

        while(length > 0) {
            byte[] segment = segments[(int)(srcPos >>> log2OfSegmentSize)];

            int bytesToCopyFromSegment = Math.min(remainingBytesInSegment, length);

            orderedCopy(segment, (int)(srcPos & bitmask), data, dataPosition, bytesToCopyFromSegment);

            dataPosition += bytesToCopyFromSegment;
            srcPos += bytesToCopyFromSegment;
            remainingBytesInSegment = segmentSize - (int)(srcPos & bitmask);
            length -= bytesToCopyFromSegment;
        }

        return dataPosition - destPos;
    }",copies exactly data . length bytes from this SegmentedByteArray into the provided byte array guaranteeing that if the update is seen by another thread then all other writes prior to this call are also visible to that thread .,hollow/src/main/java/com/netflix/hollow/core/memory/SegmentedByteArray.java,"[{'Syntax': 'orderedCopy(segment, (int)(srcPos & bitmask), data, dataPosition, bytesToCopyFromSegment)', 'FunctionName': 'orderedCopy', 'ArgsCount': 5, 'MethodBody': 'private void orderedCopy(byte[] src, int srcPos, byte[] dest, int destPos, int length) {\n        int endSrcPos = srcPos + length;\n        destPos += Unsafe.ARRAY_BYTE_BASE_OFFSET;\n\n        while(srcPos < endSrcPos) {\n            unsafe.putByteVolatile(dest, destPos++, src[srcPos++]);\n        }\n    }', 'FileName': '/Netflix/hollow/hollow/src/main/java/com/netflix/hollow/core/memory/SegmentedByteArray.java'}]"
6621cdaccda9bd4817b11319,playframework/playframework,"public static NodeList selectNodes(String path, Object node) {
    return selectNodes(path, node, null);
  }",Select all nodes that are selected by this XPath expression . If multiple nodes match multiple nodes will be returned . Nodes will be returned in document - order,core/play-java/src/main/java/play/libs/XPath.java,"[{'Syntax': 'selectNodes(path, node, null)', 'FunctionName': 'selectNodes', 'ArgsCount': 3, 'MethodBody': 'public static NodeList selectNodes(String path, Object node, Map<String, String> namespaces) {\n    try {\n      XPathFactory factory = XPathFactory.newInstance();\n      javax.xml.xpath.XPath xpath = factory.newXPath();\n\n      if (namespaces != null) {\n        PlayNamespaceContext nsContext = new PlayNamespaceContext();\n        bindUnboundedNamespaces(nsContext, namespaces);\n        xpath.setNamespaceContext(nsContext);\n      }\n\n      return (NodeList) xpath.evaluate(path, node, XPathConstants.NODESET);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }', 'FileName': '/playframework/playframework/core/play-java/src/main/java/play/libs/XPath.java'}]"
6621cdaccda9bd4817b1131a,RestComm/jain-slee,"private void verifyConfigProperties(ConfigProperties newProperties)
			throws InvalidConfigurationException {

		if (doTraceLogs) {
			logger.trace(""verifyConfigProperties( newProperties = ""
					+ newProperties + "" )"");
		}

		// merge properties
		for (ConfigProperties.Property configProperty : configProperties
				.getProperties()) {
			if (newProperties.getProperty(configProperty.getName()) == null) {
				newProperties.addProperty(configProperty);
			}
		}
		// validate result
		for (ConfigProperties.Property entityProperty : newProperties
				.getProperties()) {
			if (entityProperty.getValue() == null) {
				throw new InvalidConfigurationException(""the property ""
						+ entityProperty.getName() + "" has null value"");
			}
		}
		// validate in ra object
		object.raVerifyConfiguration(newProperties);
		// ok, switch config
		configProperties = newProperties;
	}",Merges the current properties values with the new ones and uses the ra to verify the configuration,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java,"[{'Syntax': 'configProperties\n\t\t\t\t.getProperties()', 'FunctionName': 'getProperties', 'ArgsCount': 0, 'MethodBody': 'public Property[] getProperties() {\n        return (Property[])properties.values().toArray(new Property[properties.size()]);\n    }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'newProperties.getProperty(configProperty.getName())', 'FunctionName': 'getProperty', 'ArgsCount': 1, 'MethodBody': 'public String getProperty(String name) {\r\n    return (String) get(name);\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/PropertiesInfo.java'}, {'Syntax': 'configProperty.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'newProperties.addProperty(configProperty)', 'FunctionName': 'addProperty', 'ArgsCount': 1, 'MethodBody': 'public void addProperty(Property property) {\n        if (property == null) throw new NullPointerException(""property is null"");\n        if (properties.containsKey(property.getName())) throw new IllegalArgumentException(""A property with the name "" + property.getName() + "" is already present"");\n        properties.put(property.getName(), property);\n    }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'newProperties\n\t\t\t\t.getProperties()', 'FunctionName': 'getProperties', 'ArgsCount': 0, 'MethodBody': 'public Property[] getProperties() {\n        return (Property[])properties.values().toArray(new Property[properties.size()]);\n    }', 'FileName': '/RestComm/jain-slee/api/extensions/src/main/java/org/mobicents/slee/ConfigProperties.java'}, {'Syntax': 'entityProperty.getValue()', 'FunctionName': 'getValue', 'ArgsCount': 0, 'MethodBody': 'public long getValue() {\r\n    return value;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/usage/CounterTypeUsageParameterInfo.java'}, {'Syntax': 'entityProperty.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'object.raVerifyConfiguration(newProperties)', 'FunctionName': 'raVerifyConfiguration', 'ArgsCount': 1, 'MethodBody': 'public void raVerifyConfiguration(ConfigProperties properties)\r\n\t\t\tthrows javax.slee.resource.InvalidConfigurationException {\r\n\t}', 'FileName': '/RestComm/jain-slee/tools/statistics/ra/src/main/java/org/restcomm/slee/resource/statistics/StatisticsResourceAdaptor.java'}]"
6621cdaccda9bd4817b1131b,Unidata/thredds,"public void setStationInfo(String stnIdVName, String stnDescVName) {
    this.stnIdVName = stnIdVName;
    this.stnDescVName = stnDescVName;

    Variable stationVar = ncfile.findVariable(stnIdVName);
    stationIdType = stationVar.getDataType();
  }",Set extra information used by station obs datasets .,legacy/src/main/java/ucar/nc2/dt/point/RecordDatasetHelper.java,[]
6621cdaccda9bd4817b1131c,RestComm/jain-slee,"protected void createGetSbbActivityContextInterfaceMethod(
			CtClass activityContextInterface,
			Class<?> concreteActivityContextInterfaceClass)
			throws DeploymentException {
		String methodToAdd = ""public ""
				+ activityContextInterface.getName()
				+ "" asSbbActivityContextInterface(javax.slee.ActivityContextInterface aci) {""
				+ ""if(aci==null)""
				+ ""     throw new ""
				+ IllegalStateException.class.getName()
				+ ""(\""Passed argument can not be of null value.\"");""
				+ "" if(sbbEntity == null || sbbEntity.getSbbObject().getState() != ""
				+ SbbObjectState.class.getName() + "".READY) { throw new ""
				+ IllegalStateException.class.getName()
				+ ""(\""Cannot call asSbbActivityContextInterface\""); } ""
				+ ""else if ( aci instanceof ""
				+ concreteActivityContextInterfaceClass.getName()
				+ "") return aci;"" + ""else return  new ""
				+ concreteActivityContextInterfaceClass.getName() + "" ( ("" + ActivityContextInterface.class.getName() + "") $1, ""
				+ ""sbbEntity.getSbbComponent());"" + ""}"";
		CtMethod methodTest;
		try {
			methodTest = CtNewMethod.make(methodToAdd, sbbConcreteClass);
			sbbConcreteClass.addMethod(methodTest);
			if (logger.isTraceEnabled()) {
				logger.trace(""Method "" + methodToAdd + "" added"");
			}
		} catch (CannotCompileException e) {
			throw new DeploymentException(e.getMessage(), e);
		}
	}",Create the narrow method to get the activity context interface,container/services/src/main/java/org/mobicents/slee/container/deployment/ConcreteSbbGenerator.java,"[{'Syntax': 'activityContextInterface.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'IllegalStateException.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'SbbObjectState.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'IllegalStateException.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'concreteActivityContextInterfaceClass.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'concreteActivityContextInterfaceClass.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'ActivityContextInterface.class.getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() {\r\n    return name;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ComponentSearchParams.java'}, {'Syntax': 'e.getMessage()', 'FunctionName': 'getMessage', 'ArgsCount': 0, 'MethodBody': 'public String getMessage() {\r\n    return message;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/ManagementConsoleException.java'}]"
6621cdaccda9bd4817b1131d,apache/parquet-mr,"void writeColumnChunk(ColumnDescriptor descriptor,
      long valueCount,
      CompressionCodecName compressionCodecName,
      DictionaryPage dictionaryPage,
      BytesInput bytes,
      long uncompressedTotalPageSize,
      long compressedTotalPageSize,
      Statistics<?> totalStats,
      ColumnIndexBuilder columnIndexBuilder,
      OffsetIndexBuilder offsetIndexBuilder,
      Set<Encoding> rlEncodings,
      Set<Encoding> dlEncodings,
      List<Encoding> dataEncodings) throws IOException {
    startColumn(descriptor, valueCount, compressionCodecName);

    state = state.write();
    if (dictionaryPage != null) {
      writeDictionaryPage(dictionaryPage);
    }
    LOG.debug(""{}: write data pages"", out.getPos());
    long headersSize = bytes.size() - compressedTotalPageSize;
    this.uncompressedLength += uncompressedTotalPageSize + headersSize;
    this.compressedLength += compressedTotalPageSize + headersSize;
    LOG.debug(""{}: write data pages content"", out.getPos());
    firstPageOffset = out.getPos();
    bytes.writeAllTo(out);
    encodingStatsBuilder.addDataEncodings(dataEncodings);
    if (rlEncodings.isEmpty()) {
      encodingStatsBuilder.withV2Pages();
    }
    currentEncodings.addAll(rlEncodings);
    currentEncodings.addAll(dlEncodings);
    currentEncodings.addAll(dataEncodings);
    currentStatistics = totalStats;

    this.columnIndexBuilder = columnIndexBuilder;
    this.offsetIndexBuilder = offsetIndexBuilder;

    endColumn();
  }",Writes a column chunk at once,parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java,"[{'Syntax': 'startColumn(descriptor, valueCount, compressionCodecName)', 'FunctionName': 'startColumn', 'ArgsCount': 3, 'MethodBody': 'public void startColumn(ColumnDescriptor descriptor, long valueCount, CompressionCodecName compressionCodecName)\n      throws IOException {\n    state = state.startColumn();\n    encodingStatsBuilder.clear();\n    currentEncodings = new HashSet<Encoding>();\n    currentChunkPath = ColumnPath.get(descriptor.getPath());\n    currentChunkType = descriptor.getPrimitiveType();\n    currentChunkCodec = compressionCodecName;\n    currentChunkValueCount = valueCount;\n    currentChunkFirstDataPage = -1;\n    compressedLength = 0;\n    uncompressedLength = 0;\n    // The statistics will be copied from the first one added at writeDataPage(s) so we have the correct typed one\n    currentStatistics = null;\n    currentSizeStatistics = SizeStatistics.newBuilder(\n            descriptor.getPrimitiveType(),\n            descriptor.getMaxRepetitionLevel(),\n            descriptor.getMaxDefinitionLevel())\n        .build();\n\n    columnIndexBuilder = ColumnIndexBuilder.getBuilder(currentChunkType, columnIndexTruncateLength);\n    offsetIndexBuilder = OffsetIndexBuilder.getBuilder();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java'}, {'Syntax': 'state.write()', 'FunctionName': 'write', 'ArgsCount': 0, 'MethodBody': 'STATE write() {\n        return this;\n      }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java'}, {'Syntax': 'writeDictionaryPage(dictionaryPage)', 'FunctionName': 'writeDictionaryPage', 'ArgsCount': 1, 'MethodBody': '@Override\n    public void writeDictionaryPage(DictionaryPage dictionaryPage) throws IOException {\n      if (this.dictionaryPage != null) {\n        throw new ParquetEncodingException(""Only one dictionary page is allowed"");\n      }\n      BytesInput dictionaryBytes = dictionaryPage.getBytes();\n      int uncompressedSize = (int) dictionaryBytes.size();\n      BytesInput compressedBytes = compressor.compress(dictionaryBytes);\n      if (null != pageBlockEncryptor) {\n        byte[] dictonaryPageAAD = AesCipher.createModuleAAD(\n            fileAAD, ModuleType.DictionaryPage, rowGroupOrdinal, columnOrdinal, -1);\n        compressedBytes =\n            BytesInput.from(pageBlockEncryptor.encrypt(compressedBytes.toByteArray(), dictonaryPageAAD));\n      }\n      this.dictionaryPage = new DictionaryPage(\n          compressedBytes.copy(releaser),\n          uncompressedSize,\n          dictionaryPage.getDictionarySize(),\n          dictionaryPage.getEncoding());\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ColumnChunkPageWriteStore.java'}, {'Syntax': 'LOG.debug(""{}: write data pages"", out.getPos())', 'FunctionName': 'debug', 'ArgsCount': 2, 'MethodBody': 'public void debug(Object m, Throwable t) {\n    logger.debug(String.valueOf(m), t);\n  }', 'FileName': '/apache/parquet-mr/parquet-common/src/main/java/org/apache/parquet/Log.java'}, {'Syntax': 'out.getPos()', 'FunctionName': 'getPos', 'ArgsCount': 0, 'MethodBody': 'public long getPos() throws IOException {\n      return delegate.getPos();\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/hadoop/DeprecatedInputFormatTest.java'}, {'Syntax': 'bytes.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n    return cacheMap.size();\n  }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/LruCache.java'}, {'Syntax': 'LOG.debug(""{}: write data pages content"", out.getPos())', 'FunctionName': 'debug', 'ArgsCount': 2, 'MethodBody': 'public void debug(Object m, Throwable t) {\n    logger.debug(String.valueOf(m), t);\n  }', 'FileName': '/apache/parquet-mr/parquet-common/src/main/java/org/apache/parquet/Log.java'}, {'Syntax': 'out.getPos()', 'FunctionName': 'getPos', 'ArgsCount': 0, 'MethodBody': 'public long getPos() throws IOException {\n      return delegate.getPos();\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/hadoop/DeprecatedInputFormatTest.java'}, {'Syntax': 'out.getPos()', 'FunctionName': 'getPos', 'ArgsCount': 0, 'MethodBody': 'public long getPos() throws IOException {\n      return delegate.getPos();\n    }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/test/java/org/apache/parquet/hadoop/DeprecatedInputFormatTest.java'}, {'Syntax': 'bytes.writeAllTo(out)', 'FunctionName': 'writeAllTo', 'ArgsCount': 1, 'MethodBody': '@Override\n  public void writeAllTo(OutputStream out) throws IOException {\n    for (byte[] slab : slabs) {\n      out.write(slab);\n    }\n  }', 'FileName': '/apache/parquet-mr/parquet-common/src/main/java/org/apache/parquet/bytes/ConcatenatingByteArrayCollector.java'}, {'Syntax': 'encodingStatsBuilder.addDataEncodings(dataEncodings)', 'FunctionName': 'addDataEncodings', 'ArgsCount': 1, 'MethodBody': 'public Builder addDataEncodings(Collection<Encoding> encodings) {\n      for (Encoding encoding : encodings) {\n        addDataEncoding(encoding);\n      }\n      return this;\n    }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/EncodingStats.java'}, {'Syntax': 'rlEncodings.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': 'public boolean isEmpty() {\n    return !hasNonNullValue && !isNumNullsSet();\n  }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/statistics/Statistics.java'}, {'Syntax': 'encodingStatsBuilder.withV2Pages()', 'FunctionName': 'withV2Pages', 'ArgsCount': 0, 'MethodBody': 'public Builder withV2Pages() {\n      this.usesV2Pages = true;\n      return this;\n    }', 'FileName': '/apache/parquet-mr/parquet-column/src/main/java/org/apache/parquet/column/EncodingStats.java'}, {'Syntax': 'currentEncodings.addAll(rlEncodings)', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': 'public void addAll(Collection<TProtocol> events) {\n    this.events.addAll(events);\n  }', 'FileName': '/apache/parquet-mr/parquet-thrift/src/main/java/org/apache/parquet/thrift/ParquetReadProtocol.java'}, {'Syntax': 'currentEncodings.addAll(dlEncodings)', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': 'public void addAll(Collection<TProtocol> events) {\n    this.events.addAll(events);\n  }', 'FileName': '/apache/parquet-mr/parquet-thrift/src/main/java/org/apache/parquet/thrift/ParquetReadProtocol.java'}, {'Syntax': 'currentEncodings.addAll(dataEncodings)', 'FunctionName': 'addAll', 'ArgsCount': 1, 'MethodBody': 'public void addAll(Collection<TProtocol> events) {\n    this.events.addAll(events);\n  }', 'FileName': '/apache/parquet-mr/parquet-thrift/src/main/java/org/apache/parquet/thrift/ParquetReadProtocol.java'}, {'Syntax': 'endColumn()', 'FunctionName': 'endColumn', 'ArgsCount': 0, 'MethodBody': 'STATE endColumn() {\n        return BLOCK;\n      }', 'FileName': '/apache/parquet-mr/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java'}]"
6621cdaccda9bd4817b1131e,agentsoz/jill,"public static void reset() {
    agentTypes = new AObjectCatalog(""agentTypes"", 5, 5);
    goalTypes = new AObjectCatalog(""goalTypes"", 10, 5);
    planTypes = new AObjectCatalog(""planTypes"", 20, 5);
    agents = null;
    beliefbase = null;
    eventHandlers = new HashSet<JillExtension>();
  }",Resets the global state .,jill/src/main/java/io/github/agentsoz/jill/core/GlobalState.java,[]
6621cdaccda9bd4817b1131f,Unidata/thredds,"public static CalendarDate of(Calendar cal, int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute) {
    Chronology base = Calendar.getChronology(cal);
    /* if (base == null)
      base = ISOChronology.getInstanceUTC(); // already in UTC
    else
      base = ZonedChronology.getInstance( base, DateTimeZone.UTC); // otherwise wrap it to be in UTC  */

    DateTime dt = new DateTime(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, base);
    if (!Calendar.isDefaultChronology(cal)) dt = dt.withChronology(Calendar.getChronology(cal));
    dt = dt.withZone(DateTimeZone.UTC);
    return new CalendarDate(cal, dt);
  }",Get Calendar date from fields . Uses UTZ time zone,cdm/src/main/java/ucar/nc2/time/CalendarDate.java,[]
6621cdaccda9bd4817b11320,Unidata/thredds,"public static void returnString(String contents, HttpServletResponse res)
          throws IOException {

    try {
      ServletOutputStream out = res.getOutputStream();
      IO.copy(new ByteArrayInputStream(contents.getBytes(CDM.utf8Charset)), out);
    } catch (IOException e) {
      log.error("" IOException sending string: "", e);
      res.sendError(HttpServletResponse.SC_NOT_FOUND, ""Problem sending string: "" + e.getMessage());
    }
  }",Send given content string as the HTTP response .,tds/src/main/java/thredds/servlet/ServletUtil.java,[]
6621cdaccda9bd4817b11321,wildfly/wildfly,"public void addViewInterceptor(InterceptorFactory interceptorFactory, int priority) {
        for (Method method : proxyFactory.getCachedMethods()) {
            addViewInterceptor(method, interceptorFactory, priority);
        }
    }",Adds an interceptor factory to all methods of a view,ee/src/main/java/org/jboss/as/ee/component/ViewConfiguration.java,"[{'Syntax': 'addViewInterceptor(method, interceptorFactory, priority)', 'FunctionName': 'addViewInterceptor', 'ArgsCount': 3, 'MethodBody': 'public void addViewInterceptor(Method method, InterceptorFactory interceptorFactory, int priority) {\n        OrderedItemContainer<InterceptorFactory> container = viewInterceptors.get(method);\n        if (container == null) {\n            viewInterceptors.put(method, container = new OrderedItemContainer<InterceptorFactory>());\n        }\n        container.add(interceptorFactory, priority);\n    }', 'FileName': '/wildfly/wildfly/ee/src/main/java/org/jboss/as/ee/component/ViewConfiguration.java'}]"
6621cdaccda9bd4817b11322,oaqa/baseqa,"public CandidateAnswerVariant getCandidateAnswers(int i) {
    if (SearchResult_Type.featOkTst && ((SearchResult_Type)jcasType).casFeat_candidateAnswers == null)
      jcasType.jcas.throwFeatMissing(""candidateAnswers"", ""edu.cmu.lti.oaqa.type.retrieval.SearchResult"");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((SearchResult_Type)jcasType).casFeatCode_candidateAnswers), i);
    return (CandidateAnswerVariant)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((SearchResult_Type)jcasType).casFeatCode_candidateAnswers), i)));}",indexed getter for candidateAnswers - gets an indexed value - CandidateAnswerVariants generated from this SearchResult .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/SearchResult.java,[]
6621cdaccda9bd4817b11323,real-logic/aeron,"public static void validatePageSize(final int pageSize)
    {
        if (pageSize < PAGE_MIN_SIZE)
        {
            throw new ConfigurationException(
                ""page size less than min size of "" + PAGE_MIN_SIZE + "": "" + pageSize);
        }

        if (pageSize > PAGE_MAX_SIZE)
        {
            throw new ConfigurationException(
                ""page size greater than max size of "" + PAGE_MAX_SIZE + "": "" + pageSize);
        }

        if (!BitUtil.isPowerOfTwo(pageSize))
        {
            throw new ConfigurationException(""page size not a power of 2: "" + pageSize);
        }
    }",Validate that page size is valid and alignment is valid .,aeron-driver/src/main/java/io/aeron/driver/Configuration.java,[]
6621cdaccda9bd4817b11324,agentsoz/jill,"public void run() {
    Set<Integer> toRemove = new HashSet<Integer>();
    do {
      boolean idle = true;
      // Remove agents that have have become idle due to an external event
      removeInactiveAgents();
      // Add agents that have have become active due to an external event
      addActiveAgents();
      for (Integer i : activeAgents) {
        Agent agent = (Agent) GlobalState.agents.get(i);
        Stack255 agentExecutionStack = (Stack255) (agent).getExecutionStack();
        if (!isStackValid(agent, agentExecutionStack)) {
          // Mark this agent for removal
          toRemove.add(i);
          continue;
        }
        // At least one agent is active
        idle = false;
        // Get the item at the top of the stack
        Object node = (Object) agentExecutionStack.get((byte) (agentExecutionStack.size() - 1));
        if (node instanceof Plan) {
          // If it is a plan then execute a plan step; and if it finished then remove it
          managePlan(i, agentExecutionStack, (Plan) node, toRemove);
        } else if (node instanceof Goal) {
          // If it is a goal then find a plan for it and put it on the stack
          manageGoal(i, agent, agentExecutionStack, (Goal) node);
        }
        agent.nextActiveStack(); // select the next active stack for next time
      }
      // remove agents that have finished executing plans and have gone idle in this cycle
      removeFinishedAgents(toRemove);
      if (idle) {
        waitOnExternalMessage();
        if (shutdown) {
          break;
        }
      }
    } 
    while (true);
    logger.debug(""Pool {} is exiting"", poolid);
  }",Runs this intentions selction thread .,jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java,"[{'Syntax': 'removeInactiveAgents()', 'FunctionName': 'removeInactiveAgents', 'ArgsCount': 0, 'MethodBody': 'private void removeInactiveAgents() {\n    synchronized (extToRemove) {\n      if (!extToRemove.isEmpty()) {\n        for (int i : extToRemove) {\n          activeAgents.remove(i);\n        }\n        extToRemove.clear();\n      }\n    }\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java'}, {'Syntax': 'addActiveAgents()', 'FunctionName': 'addActiveAgents', 'ArgsCount': 0, 'MethodBody': 'private void addActiveAgents() {\n    synchronized (extToAdd) {\n      if (!extToAdd.isEmpty()) {\n        for (int i : extToAdd) {\n          activeAgents.add(i);\n        }\n        extToAdd.clear();\n      }\n    }\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java'}, {'Syntax': 'GlobalState.agents.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public AObject get(int index) {\n    if (index >= 0 && index < objects.length) {\n      return objects[index];\n    }\n    return null;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/util/AObjectCatalog.java'}, {'Syntax': '(agent).getExecutionStack()', 'FunctionName': 'getExecutionStack', 'ArgsCount': 0, 'MethodBody': 'public Stack255 getExecutionStack() {\n    return stacks.getActiveStack();\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/lang/Agent.java'}, {'Syntax': 'isStackValid(agent, agentExecutionStack)', 'FunctionName': 'isStackValid', 'ArgsCount': 2, 'MethodBody': 'private boolean isStackValid(Agent agent, Stack255 agentExecutionStack) {\n    if (agentExecutionStack == null) {\n      return false;\n    }\n    final int esSize = agentExecutionStack.size();\n    logger.trace(""{} execution stack is {}/255 full"", Log.logPrefix(agent.getId()), esSize);\n    if (esSize == 0) {\n      return false;\n    }\n    if (esSize >= 255) {\n      logger.error(""{} execution stack reached size limit of 255. Cannot continue."",\n          Log.logPrefix(agent.getId()));\n      return false;\n    }\n    return true;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java'}, {'Syntax': 'agentExecutionStack.get((byte) (agentExecutionStack.size() - 1))', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public AObject get(int index) {\n    if (index >= 0 && index < objects.length) {\n      return objects[index];\n    }\n    return null;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/util/AObjectCatalog.java'}, {'Syntax': 'agentExecutionStack.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n    return cachedsize;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/lang/PlanBindings.java'}, {'Syntax': 'managePlan(i, agentExecutionStack, (Plan) node, toRemove)', 'FunctionName': 'managePlan', 'ArgsCount': 4, 'MethodBody': 'private void managePlan(int agentIndex, Stack255 agentExecutionStack, Plan node,\n      Set<Integer> toRemove) {\n    // If done then pop this plan/goal\n    if (node.hasfinished()) {\n      logger.debug(Log.logPrefix(agentIndex) + "" finished executing plan ""\n          + node.getClass().getSimpleName());\n      synchronized (agentExecutionStack) {\n        // Pop the plan off the stack\n        agentExecutionStack.pop();\n        // Pop the goal off the stack\n        agentExecutionStack.pop();\n        if (agentExecutionStack.isEmpty()) {\n          // remove empty intention stacks\n          Agent agent = (Agent) GlobalState.agents.get(agentIndex);\n          int size = agent.cleanupStacks();\n          // If we are left with only one stack and that is empty, then agent is idle\n          if (size == 1 && agent.getExecutionStack().isEmpty()) {\n            // Mark this agent as idle\n            // Main.setAgentIdle(i, true);\n            toRemove.add(agentIndex);\n          }\n        }\n      }\n    } else {\n      logger.debug(Log.logPrefix(agentIndex) + "" is executing a step of plan ""\n          + node.getClass().getSimpleName());\n      node.step();\n    }\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java'}, {'Syntax': 'manageGoal(i, agent, agentExecutionStack, (Goal) node)', 'FunctionName': 'manageGoal', 'ArgsCount': 4, 'MethodBody': 'private boolean manageGoal(int agentIndex, Agent agent, Stack255 agentExecutionStack, Goal node) {\n    // Get the goal type for this goal\n    GoalType gtype = (GoalType) GlobalState.goalTypes.find(node.getClass().getName());\n    if (gtype == null) {\n      throw new JillException(Log.logPrefix(agent.getId())\n              + "" has no goal matching "" + node.getClass().getName());\n    }\n    byte[] ptypes = gtype.getChildren();\n    if (ptypes == null) {\n      throw new JillException(Log.logPrefix(agent.getId())\n              + "" has no plans for handling goal "" + node.getClass().getName());\n    }\n    // Clear any previous plan bindings before adding any new ones\n    bindings.clear();\n    for (int p = 0; p < ptypes.length; p++) {\n      PlanType ptype = (PlanType) GlobalState.planTypes.get(ptypes[p]);\n\n      try {\n        // Create an object of this Plan type, so we can\n        // access its context condition\n        Plan planInstance =\n            (Plan) (ptype.getPlanClass().getConstructor(Agent.class, Goal.class, String.class)\n                .newInstance(GlobalState.agents.get(agentIndex), node, ""p""));\n        // Clear previously buffered context results if any\n        agent.clearLastResults();\n        // Evaluate the context condition\n        if (planInstance.context()) {\n          // Get the results of context query just performed\n          Set<Belief> results = agent.getLastResults();\n          // Add the results to the bindings\n          bindings.add(planInstance, (results == null) ? null : new LinkedHashSet<Belief>(results));\n        }\n      } catch (NoSuchMethodException | SecurityException | InstantiationException\n          | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n        logger.error(""Could not create plan object of type "" + ptype.getClass().getName(), e);\n      }\n    }\n    int numBindings = bindings.size();\n    if (numBindings == 0) {\n      // No plan options for this goal at this point in time, so move to the next agent\n      logger.debug(Log.logPrefix(agent.getId()) + "" has no applicable plans for goal "" + gtype\n          + "" and will continue to wait indefinitely"");\n      return false;\n    }\n    // Call the meta-level planning prior to plan selection\n    agent.notifyAgentPrePlanSelection(bindings);\n    // Pick a plan option using specified policy\n    Plan planInstance = bindings.selectPlan(GlobalConstant.PLAN_SELECTION_POLICY);\n    // Now push the plan on to the intention stack\n    synchronized (agentExecutionStack) {\n      logger.debug(Log.logPrefix(agent.getId()) + "" choose an instance of plan ""\n          + planInstance.getClass().getSimpleName() + "" to handle goal ""\n          + node.getClass().getSimpleName());\n      agentExecutionStack.push(planInstance);\n    }\n    return true;\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java'}, {'Syntax': 'agent.nextActiveStack()', 'FunctionName': 'nextActiveStack', 'ArgsCount': 0, 'MethodBody': 'Stack255 nextActiveStack() {\n    activeStack = (activeStack + 1) % stacks.size();\n    return (Stack255) stacks.get(activeStack);\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/lang/IntentionStacks.java'}, {'Syntax': 'removeFinishedAgents(toRemove)', 'FunctionName': 'removeFinishedAgents', 'ArgsCount': 1, 'MethodBody': 'private void removeFinishedAgents(Set<Integer> toRemove) {\n    if (!toRemove.isEmpty()) {\n      for (int i : toRemove) {\n        activeAgents.remove(i);\n      }\n      toRemove.clear();\n    }\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java'}, {'Syntax': 'waitOnExternalMessage()', 'FunctionName': 'waitOnExternalMessage', 'ArgsCount': 0, 'MethodBody': 'private void waitOnExternalMessage() {\n    synchronized (lock) {\n      while (!hasMessage) {\n        try {\n          logger.debug(""Pool {} is idle; will wait on external message"", poolid);\n          // Main.incrementPoolsIdle();\n          isIdle = true;\n          Main.flagPoolIdle();\n          lock.wait();\n          isIdle = false;\n          // Main.decrementPoolsIdle();\n          logger.debug(""Pool {} just woke up on external message"", poolid);\n        } catch (InterruptedException e) {\n          logger.error(""Pool "" + poolid + "" failed to wait on external message: "", e);\n        }\n      }\n      hasMessage = false;\n    }\n  }', 'FileName': '/agentsoz/jill/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java'}]"
6621cdaccda9bd4817b11325,Unidata/thredds,"public static boolean isRadialCoordSys( Formatter parseInfo, CoordinateSystem cs) {
    return (cs.getAzimuthAxis() != null) && (cs.getRadialAxis() != null) && (cs.getElevationAxis() != null);
  }",Determine if this CoordinateSystem can be made into a RadialCoordSys .,cdm/src/main/java/ucar/nc2/dt/radial/RadialCoordSys.java,[]
6621cdaccda9bd4817b11326,Unidata/thredds,"public static LatLonPointImpl findPoint(double lat1, double lon1,
                                            double az, double dist,
                                            LatLonPointImpl result) {
        return findPoint(defaultEarth, lat1, lon1, az, dist, result);
    }",Calculate a position given an azimuth and distance from another point . See details below . Uses default Earth .,cdm/src/main/java/ucar/unidata/geoloc/Bearing.java,[]
6621cdaccda9bd4817b11327,playframework/playframework,"public CompletionStage<ByteString> consumeData(Materializer mat) {
    return dataStream().runFold(ByteString.empty(), ByteString::concat, mat);
  }",Consumes the data .,core/play/src/main/java/play/http/HttpEntity.java,"[{'Syntax': 'dataStream()', 'FunctionName': 'dataStream', 'ArgsCount': 0, 'MethodBody': 'public abstract Source<ByteString, ?> dataStream();', 'FileName': '/playframework/playframework/core/play/src/main/java/play/http/HttpEntity.java'}, {'Syntax': 'ByteString.empty()', 'FunctionName': 'empty', 'ArgsCount': 0, 'MethodBody': 'static Router empty() {\n    return play.api.routing.Router$.MODULE$.empty().asJava();\n  }', 'FileName': '/playframework/playframework/core/play/src/main/java/play/routing/Router.java'}]"
6621cdaccda9bd4817b11328,orientechnologies/orientdb,"public void onStorageUnregistered(final OStorage iStorage) {
    final String storageURL = iStorage.getURL();

    lock();
    try {
      Set<String> poolToClose = null;

      for (Entry<String, OReentrantResourcePool<String, DB>> e : pools.entrySet()) {
        final int pos = e.getKey().indexOf(""@"");
        final String dbName = e.getKey().substring(pos + 1);
        if (storageURL.equals(dbName)) {
          if (poolToClose == null)
            poolToClose = new HashSet<String>();

          poolToClose.add(e.getKey());
        }
      }

      if (poolToClose != null)
        for (String pool : poolToClose)
          remove(pool);

    } finally {
      unlock();
    }
  }",Removes from memory the pool associated to the closed storage . This avoids pool open against closed storages .,core/src/main/java/com/orientechnologies/orient/core/db/ODatabasePoolAbstract.java,"[{'Syntax': 'iStorage.getURL()', 'FunctionName': 'getURL', 'ArgsCount': 0, 'MethodBody': 'public String getURL() {\n    return OEngineRemote.NAME + "":"" + url;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java'}, {'Syntax': 'lock()', 'FunctionName': 'lock', 'ArgsCount': 0, 'MethodBody': 'public void lock();', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/common/concur/lock/OLock.java'}, {'Syntax': 'pools.entrySet()', 'FunctionName': 'entrySet', 'ArgsCount': 0, 'MethodBody': '@Override\n  public Set<Entry<String, Object>> entrySet() {\n    return null;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/command/script/OPolyglotScriptBinding.java'}, {'Syntax': 'e.getKey().indexOf(""@"")', 'FunctionName': 'indexOf', 'ArgsCount': 1, 'MethodBody': '@Override\n  public int indexOf(Object o) {\n    Node item = first;\n    for (int i = 0; i < size; i++) {\n      if (item.entry.equals(o)) {\n        return i;\n      }\n      item = item.next;\n    }\n\n    return -1;\n  }', 'FileName': '/orientechnologies/orientdb/core/src/main/java/com/orientechnologies/orient/core/tx/OTxIndexChangesList.java'}, {'Syntax': 'e.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'e.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'storageURL.equals(dbName)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\n    public boolean equals(Object obj) {\n      return obj != null\n          && obj instanceof ODocumentSchemalessBinarySerializationTest.Custom\n          && Arrays.equals(bytes, ((ODocumentSchemalessBinarySerializationTest.Custom) obj).bytes);\n    }', 'FileName': '/orientechnologies/orientdb/core/src/test/java/com/orientechnologies/orient/core/record/impl/ODocumentSerializerDeltaTest.java'}, {'Syntax': 'poolToClose.add(e.getKey())', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(OResultInternal item) {\n    currentPage.add(item);\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/message/ORemoteResultSet.java'}, {'Syntax': 'e.getKey()', 'FunctionName': 'getKey', 'ArgsCount': 0, 'MethodBody': '@Override\n  public EK getKey() {\n    return key;\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/TreeEntry.java'}, {'Syntax': 'remove(pool)', 'FunctionName': 'remove', 'ArgsCount': 1, 'MethodBody': 'public void remove(final OChannelBinaryAsynchClient conn) {\n    if (conn == null) return;\n\n    final ORemoteConnectionPool pool = connections.get(conn.getServerURL());\n    if (pool == null)\n      throw new IllegalStateException(\n          ""Connection cannot be released because the pool doesn\'t exist anymore"");\n\n    pool.getPool().remove(conn);\n\n    try {\n      conn.unlock();\n    } catch (Exception e) {\n      OLogManager.instance().debug(this, ""Cannot unlock connection lock"", e);\n    }\n\n    try {\n      conn.close();\n    } catch (Exception e) {\n      OLogManager.instance().debug(this, ""Cannot close connection"", e);\n    }\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/remote/ORemoteConnectionManager.java'}, {'Syntax': 'unlock()', 'FunctionName': 'unlock', 'ArgsCount': 0, 'MethodBody': 'public void unlock() {\n    getLockWrite().unlock();\n  }', 'FileName': '/orientechnologies/orientdb/client/src/main/java/com/orientechnologies/orient/client/binary/OChannelBinaryClientAbstract.java'}]"
6621cdaccda9bd4817b11329,Unidata/thredds,"public CoordinateAxis2D section(Range r1, Range r2) throws InvalidRangeException {
    List<Range> section = new ArrayList<>();
    section.add(r1);
    section.add(r2);
    return (CoordinateAxis2D) section(section);
  }",Create a new CoordinateAxis2D as a section of this CoordinateAxis2D .,cdm/src/main/java/ucar/nc2/dataset/CoordinateAxis2D.java,[]
6621cdaccda9bd4817b1132a,stanfy/enroscar,"protected void sendDispositionHeader(final OutputStream out) throws IOException {
    if (DEBUG) { Log.v(TAG, ""enter sendDispositionHeader(OutputStream out)""); }
    out.write(CONTENT_DISPOSITION_BYTES);
    out.write(QUOTE_BYTES);
    out.write(EncodingUtils.getAsciiBytes(getName()));
    out.write(QUOTE_BYTES);
  }",Write the content disposition header to the specified output stream .,net/src/main/java/com/stanfy/enroscar/rest/request/net/multipart/Part.java,"[{'Syntax': 'out.write(CONTENT_DISPOSITION_BYTES)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public synchronized void write(final int oneByte) throws IOException {\n    checkNotClosed();\n    if (count == buf.length) {\n      out.write(buf, 0, count);\n      count = 0;\n    }\n    buf[count++] = (byte) oneByte;\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/PoolableBufferedOutputStream.java'}, {'Syntax': 'out.write(QUOTE_BYTES)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public synchronized void write(final int oneByte) throws IOException {\n    checkNotClosed();\n    if (count == buf.length) {\n      out.write(buf, 0, count);\n      count = 0;\n    }\n    buf[count++] = (byte) oneByte;\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/PoolableBufferedOutputStream.java'}, {'Syntax': 'out.write(EncodingUtils.getAsciiBytes(getName()))', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public synchronized void write(final int oneByte) throws IOException {\n    checkNotClosed();\n    if (count == buf.length) {\n      out.write(buf, 0, count);\n      count = 0;\n    }\n    buf[count++] = (byte) oneByte;\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/PoolableBufferedOutputStream.java'}, {'Syntax': 'getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': 'public String getName() { return name; }', 'FileName': '/stanfy/enroscar/net/src/test/java/com/stanfy/enroscar/net/test/cache/SimpleFileCache.java'}, {'Syntax': 'out.write(QUOTE_BYTES)', 'FunctionName': 'write', 'ArgsCount': 1, 'MethodBody': '@Override\n  public synchronized void write(final int oneByte) throws IOException {\n    checkNotClosed();\n    if (count == buf.length) {\n      out.write(buf, 0, count);\n      count = 0;\n    }\n    buf[count++] = (byte) oneByte;\n  }', 'FileName': '/stanfy/enroscar/io/src/main/java/com/stanfy/enroscar/io/PoolableBufferedOutputStream.java'}]"
6621cdaccda9bd4817b1132b,rupertlssmith/lojix,"protected void initialize() throws LearningFailureException
    {
        // Check that at least one training example has been set.
        if (inputExamples.isEmpty())
        {
            throw new LearningFailureException(""No training examples to learn from."", null);
        }

        // Check if an output property set to override the default was not set.
        if (!outputPropertiesSet)
        {
            // Set the 'goal' property as the default.
            addGoalProperty(""goal"");
        }

        // Check if an input property set to override the default was not set.
        if (!inputPropertiesSet)
        {
            // Extract all properties from the first example in the training data set as the input property set,
            // automatically excluding any properties which are in the output set.
            State example = inputExamples.iterator().next();
            Set<String> allProperties = example.getComponentType().getAllPropertyNames();

            inputProperties = new HashSet<String>(allProperties);
            inputProperties.removeAll(outputProperties);

            inputPropertiesSet = true;
        }

        // Check all the training examples have all the required input and output properties.
        for (State example : inputExamples)
        {
            Set<String> properties = example.getComponentType().getAllPropertyNames();

            String errorMessage = """";

            for (String inputProperty : inputProperties)
            {
                if (!properties.contains(inputProperty))
                {
                    errorMessage +=
                        ""The training example, "" + example + "" does not contain the specified input property, "" +
                        inputProperty + ""\n"";
                }
            }

            for (String outputProperty : outputProperties)
            {
                if (!properties.contains(outputProperty))
                {
                    errorMessage +=
                        ""The training example, "" + example + "" does not contain the specified output property, "" +
                        outputProperty + ""\n"";
                }
            }

            if (!"""".equals(errorMessage))
            {
                throw new LearningFailureException(errorMessage, null);
            }
        }
    }",This should be called at the start of the learn method to initialize the input and output property sets .,lojix/learning/src/main/com/thesett/aima/learning/AbstractLearningMethod.java,"[{'Syntax': 'inputExamples.isEmpty()', 'FunctionName': 'isEmpty', 'ArgsCount': 0, 'MethodBody': 'public boolean isEmpty()\n        {\n            return table.isEmpty();\n        }', 'FileName': '/rupertlssmith/lojix/base/common/src/unittests/com/thesett/common/util/doublemaps/SymbolTableTestBase.java'}, {'Syntax': 'addGoalProperty(""goal"")', 'FunctionName': 'addGoalProperty', 'ArgsCount': 1, 'MethodBody': 'public void addGoalProperty(String property)\n    {\n        outputPropertiesSet = true;\n\n        // Add the goal property to the existing ones.\n        outputProperties.add(property);\n    }', 'FileName': '/rupertlssmith/lojix/lojix/learning/src/main/com/thesett/aima/learning/AbstractLearningMethod.java'}, {'Syntax': 'inputExamples.iterator().next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'public Object next()\n                {\n                    // Check that there is a next element and return null if not.\n                    if (!hasNext())\n                    {\n                        return null;\n                    }\n\n                    // Get the next ordering count.\n                    int o = ORDER[i];\n\n                    // Do bit matching on the count to choose which elements to include in the key.\n                    String result =\n                        (((o & E) != 0) ? (environment + ""."") : """") + (((o & B) != 0) ? (base + ""."") : """") +\n                        (((o & M) != 0) ? (modifier + ""."") : """") + key;\n\n                    // Increment the iterator to get the next key on the next call.\n                    i++;\n\n                    return result;\n                }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/properties/ContextualProperties.java'}, {'Syntax': 'inputExamples.iterator()', 'FunctionName': 'iterator', 'ArgsCount': 0, 'MethodBody': 'public abstract Iterator<E> iterator();', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}, {'Syntax': 'example.getComponentType().getAllPropertyNames()', 'FunctionName': 'getAllPropertyNames', 'ArgsCount': 0, 'MethodBody': 'Set<String> getAllPropertyNames();', 'FileName': '/rupertlssmith/lojix/lojix/state/src/main/com/thesett/aima/state/ComponentType.java'}, {'Syntax': 'example.getComponentType()', 'FunctionName': 'getComponentType', 'ArgsCount': 0, 'MethodBody': 'public ComponentType getComponentType()\n    {\n        throw new NotImplementedException();\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/TraversableState.java'}, {'Syntax': 'inputProperties.removeAll(outputProperties)', 'FunctionName': 'removeAll', 'ArgsCount': 1, 'MethodBody': 'public boolean removeAll(Collection<?> c)\n    {\n        boolean modified = false;\n        Iterator<?> e = iterator();\n\n        while (e.hasNext())\n        {\n            if (c.contains(e.next()))\n            {\n                e.remove();\n                modified = true;\n            }\n        }\n\n        return modified;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}, {'Syntax': 'example.getComponentType().getAllPropertyNames()', 'FunctionName': 'getAllPropertyNames', 'ArgsCount': 0, 'MethodBody': 'Set<String> getAllPropertyNames();', 'FileName': '/rupertlssmith/lojix/lojix/state/src/main/com/thesett/aima/state/ComponentType.java'}, {'Syntax': 'example.getComponentType()', 'FunctionName': 'getComponentType', 'ArgsCount': 0, 'MethodBody': 'public ComponentType getComponentType()\n    {\n        throw new NotImplementedException();\n    }', 'FileName': '/rupertlssmith/lojix/lojix/search/src/main/com/thesett/aima/search/TraversableState.java'}, {'Syntax': 'properties.contains(inputProperty)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(Object o)\n    {\n        // Get an iterator over the whole heap.\n        Iterator<E> e = iterator();\n\n        // Check if the element to be scanned for is null.\n        if (o == null)\n        {\n            while (e.hasNext())\n            {\n                if (e.next() == null)\n                {\n                    return true;\n                }\n            }\n        }\n\n        // Its not a null element so check for it by the equality method.\n        else\n        {\n            while (e.hasNext())\n            {\n                if (o.equals(e.next()))\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}, {'Syntax': 'properties.contains(outputProperty)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(Object o)\n    {\n        // Get an iterator over the whole heap.\n        Iterator<E> e = iterator();\n\n        // Check if the element to be scanned for is null.\n        if (o == null)\n        {\n            while (e.hasNext())\n            {\n                if (e.next() == null)\n                {\n                    return true;\n                }\n            }\n        }\n\n        // Its not a null element so check for it by the equality method.\n        else\n        {\n            while (e.hasNext())\n            {\n                if (o.equals(e.next()))\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/main/com/thesett/common/util/AbstractHeap.java'}, {'Syntax': '"""".equals(errorMessage)', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object o)\n    {\n        if (this == o)\n        {\n            return true;\n        }\n\n        if ((o == null) || (getClass() != o.getClass()))\n        {\n            return false;\n        }\n\n        TestObject that = (TestObject) o;\n\n        if (id != that.id)\n        {\n            return false;\n        }\n\n        return true;\n    }', 'FileName': '/rupertlssmith/lojix/base/common/src/unittests/com/thesett/common/util/maps/SequentialCuckooFunctionTest.java'}]"
6621cdaccda9bd4817b1132c,Unidata/thredds,"public final void writeDouble(double[] pa, int start, int n) throws IOException {
    for (int i = 0; i < n; i++) {
      writeDouble(pa[start + i]);
    }
  }",Write an array of doubles,cdm/src/main/java/ucar/unidata/io/RandomAccessFile.java,[]
6621cdaccda9bd4817b1132d,passy/Android-DirectoryChooser,"private FileObserver createFileObserver(final String path) {
        return new FileObserver(path, FileObserver.CREATE | FileObserver.DELETE
                | FileObserver.MOVED_FROM | FileObserver.MOVED_TO) {

            @Override
            public void onEvent(final int event, final String path) {
                debug(""FileObserver received event %d"", event);
                final Activity activity = getActivity();

                if (activity != null) {
                    activity.runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            refreshDirectory();
                        }
                    });
                }
            }
        };
    }",Sets up a FileObserver to watch the current directory .,library/src/main/java/net/rdrei/android/dirchooser/DirectoryChooserFragment.java,"[{'Syntax': 'debug(""FileObserver received event %d"", event)', 'FunctionName': 'debug', 'ArgsCount': 2, 'MethodBody': 'private static void debug(final String message, final Object... args) {\n        Log.d(TAG, String.format(message, args));\n    }', 'FileName': '/passy/Android-DirectoryChooser/library/src/main/java/net/rdrei/android/dirchooser/DirectoryChooserFragment.java'}, {'Syntax': 'refreshDirectory()', 'FunctionName': 'refreshDirectory', 'ArgsCount': 0, 'MethodBody': 'private void refreshDirectory() {\n        if (mSelectedDir != null) {\n            changeDirectory(mSelectedDir);\n        }\n    }', 'FileName': '/passy/Android-DirectoryChooser/library/src/main/java/net/rdrei/android/dirchooser/DirectoryChooserFragment.java'}]"
6621cdaccda9bd4817b1132e,oblac/jodd,"public ByteVector putByte(final int byteValue) {
    int currentLength = length;
    if (currentLength + 1 > data.length) {
      enlarge(1);
    }
    data[currentLength++] = (byte) byteValue;
    length = currentLength;
    return this;
  }",Puts a byte into this byte vector . The byte vector is automatically enlarged if necessary .,jodd-proxetta/src/main/java/jodd/asm7/ByteVector.java,[]
6621cdaccda9bd4817b1132f,deeplearning4j/nd4j,"protected Integer getNextDevice(long threadId) {
        Integer device = null;
        if (!CudaEnvironment.getInstance().getConfiguration().isForcedSingleGPU() && getNumberOfDevices() > 0) {
            // simple round-robin here
            synchronized (this) {
                device = CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().get(devPtr.getAndIncrement());

                // We check only for number of entries here, not their actual values
                if (devPtr.get() >= CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().size())
                    devPtr.set(0);

                logger.debug(""Mapping thread [{}] to device [{}], out of [{}] devices..."", threadId, device,
                        CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().size());
            }
        } else {
            device = CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().get(0);
            logger.debug(""Single device is forced, mapping to device [{}]"", device);
        }

        return device;
    }",This method returns device id available . Round - robin balancing used here .,nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/concurrency/CudaAffinityManager.java,[]
6621cdadcda9bd4817b11330,spring-projects/spring-security,"private void addGrantedAuthorityCollection(Collection<GrantedAuthority> result,
			Object value) {
		if (value == null) {
			return;
		}
		if (value instanceof Collection<?>) {
			addGrantedAuthorityCollection(result, (Collection<?>) value);
		}
		else if (value instanceof Object[]) {
			addGrantedAuthorityCollection(result, (Object[]) value);
		}
		else if (value instanceof String) {
			addGrantedAuthorityCollection(result, (String) value);
		}
		else if (value instanceof GrantedAuthority) {
			result.add((GrantedAuthority) value);
		}
		else {
			throw new IllegalArgumentException(""Invalid object type: ""
					+ value.getClass().getName());
		}
	}",Convert the given value to a collection of Granted Authorities adding the result to the given result collection .,core/src/main/java/org/springframework/security/core/authority/mapping/MapBasedAttributes2GrantedAuthoritiesMapper.java,"[{'Syntax': 'addGrantedAuthorityCollection(result, (Collection<?>) value)', 'FunctionName': 'addGrantedAuthorityCollection', 'ArgsCount': 2, 'MethodBody': 'private void addGrantedAuthorityCollection(Collection<GrantedAuthority> result, Object value) {\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (value instanceof Collection<?>) {\n\t\t\taddGrantedAuthorityCollection(result, (Collection<?>) value);\n\t\t}\n\t\telse if (value instanceof Object[]) {\n\t\t\taddGrantedAuthorityCollection(result, (Object[]) value);\n\t\t}\n\t\telse if (value instanceof String) {\n\t\t\taddGrantedAuthorityCollection(result, (String) value);\n\t\t}\n\t\telse if (value instanceof GrantedAuthority) {\n\t\t\tresult.add((GrantedAuthority) value);\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(""Invalid object type: "" + value.getClass().getName());\n\t\t}\n\t}', 'FileName': '/spring-projects/spring-security/core/src/main/java/org/springframework/security/core/authority/mapping/MapBasedAttributes2GrantedAuthoritiesMapper.java'}, {'Syntax': 'addGrantedAuthorityCollection(result, (Object[]) value)', 'FunctionName': 'addGrantedAuthorityCollection', 'ArgsCount': 2, 'MethodBody': 'private void addGrantedAuthorityCollection(Collection<GrantedAuthority> result, Object value) {\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (value instanceof Collection<?>) {\n\t\t\taddGrantedAuthorityCollection(result, (Collection<?>) value);\n\t\t}\n\t\telse if (value instanceof Object[]) {\n\t\t\taddGrantedAuthorityCollection(result, (Object[]) value);\n\t\t}\n\t\telse if (value instanceof String) {\n\t\t\taddGrantedAuthorityCollection(result, (String) value);\n\t\t}\n\t\telse if (value instanceof GrantedAuthority) {\n\t\t\tresult.add((GrantedAuthority) value);\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(""Invalid object type: "" + value.getClass().getName());\n\t\t}\n\t}', 'FileName': '/spring-projects/spring-security/core/src/main/java/org/springframework/security/core/authority/mapping/MapBasedAttributes2GrantedAuthoritiesMapper.java'}, {'Syntax': 'addGrantedAuthorityCollection(result, (String) value)', 'FunctionName': 'addGrantedAuthorityCollection', 'ArgsCount': 2, 'MethodBody': 'private void addGrantedAuthorityCollection(Collection<GrantedAuthority> result, Object value) {\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (value instanceof Collection<?>) {\n\t\t\taddGrantedAuthorityCollection(result, (Collection<?>) value);\n\t\t}\n\t\telse if (value instanceof Object[]) {\n\t\t\taddGrantedAuthorityCollection(result, (Object[]) value);\n\t\t}\n\t\telse if (value instanceof String) {\n\t\t\taddGrantedAuthorityCollection(result, (String) value);\n\t\t}\n\t\telse if (value instanceof GrantedAuthority) {\n\t\t\tresult.add((GrantedAuthority) value);\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(""Invalid object type: "" + value.getClass().getName());\n\t\t}\n\t}', 'FileName': '/spring-projects/spring-security/core/src/main/java/org/springframework/security/core/authority/mapping/MapBasedAttributes2GrantedAuthoritiesMapper.java'}, {'Syntax': 'result.add((GrantedAuthority) value)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public PayloadExchangeMatcherReactiveAuthorizationManager.Builder add(\n\t\t\t\tPayloadExchangeMatcherEntry<ReactiveAuthorizationManager<PayloadExchangeAuthorizationContext>> entry) {\n\t\t\tthis.mappings.add(entry);\n\t\t\treturn this;\n\t\t}', 'FileName': '/spring-projects/spring-security/rsocket/src/main/java/org/springframework/security/rsocket/authorization/PayloadExchangeMatcherReactiveAuthorizationManager.java'}, {'Syntax': 'value.getClass().getName()', 'FunctionName': 'getName', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic String getName() {\n\t\treturn this.name;\n\t}', 'FileName': '/spring-projects/spring-security/saml2/saml2-service-provider/src/main/java/org/springframework/security/saml2/provider/service/authentication/DefaultSaml2AuthenticatedPrincipal.java'}]"
6621cdadcda9bd4817b11331,Unidata/thredds,"static public String findCoordNameByType(NetcdfDataset ds, AxisType atype) {
     CoordinateAxis coordAxis = findCoordByType(ds, atype);
     return coordAxis == null ? null : coordAxis.getFullName();
   }",search for Axis by Type .,cdm/src/main/java/ucar/nc2/ft/point/standard/CoordSysEvaluator.java,[]
6621cdadcda9bd4817b11332,Unidata/thredds,"public double getValue() {
    if (!(uu instanceof ScaledUnit)) return Double.NaN;
    ScaledUnit offset = (ScaledUnit) uu;
    return offset.getScale();
  }",Extract the value can only be called for ScaledUnit .,cdm/src/main/java/ucar/nc2/units/SimpleUnit.java,[]
6621cdadcda9bd4817b11333,jboss/jboss-common-core,"private static String stringReplace(String str,
				      String oldStr,
				      String newStr) {

    String result = """";
    int pos = str.indexOf(oldStr);

    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);

    while (pos >= 0) {
      //      System.out.println(str + "" ("" + pos + "")"");
      result += str.substring(0, pos);
      result += newStr;
      str = str.substring(pos+1);

      pos = str.indexOf(oldStr);
    }

    return result + str;
  }",Replace one string with another .,src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java,"[{'Syntax': 'str.indexOf(oldStr)', 'FunctionName': 'indexOf', 'ArgsCount': 1, 'MethodBody': 'public int indexOf(String string)\n   {\n      return indexOf(string, 0);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'str.substring(0, pos)', 'FunctionName': 'substring', 'ArgsCount': 2, 'MethodBody': 'public String substring(int start, int end)\n   {\n      if (start < 0 || end < 0 || start > end || end > pos)\n         throw new IndexOutOfBoundsException(""Invalid start="" + start + "" end="" + end + "" length="" + pos);\n\n      return new String(chars, start, end - start);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'str.substring(pos+1)', 'FunctionName': 'substring', 'ArgsCount': 1, 'MethodBody': 'public String substring(int start)\n   {\n      return substring(start, pos);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}, {'Syntax': 'str.indexOf(oldStr)', 'FunctionName': 'indexOf', 'ArgsCount': 1, 'MethodBody': 'public int indexOf(String string)\n   {\n      return indexOf(string, 0);\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/JBossStringBuilder.java'}]"
6621cdadcda9bd4817b11334,objectify/objectify,"private <T> KeyRange<T> allocate(final IncompleteKey incompleteKey, final int num) {
		final IncompleteKey[] allocations = new IncompleteKey[num];
		Arrays.fill(allocations, incompleteKey);

		final List<Key<T>> typedKeys = datastore().allocateId(allocations).stream()
				.map(Key::<T>create)
				.collect(Collectors.toList());

		return new KeyRange<>(typedKeys);
	}",Allocate num copies of the incompleteKey,src/main/java/com/googlecode/objectify/ObjectifyFactory.java,"[{'Syntax': 'datastore().allocateId(allocations).stream()\r\n\t\t\t\t.map(Key::<T>create)', 'FunctionName': 'map', 'ArgsCount': 1, 'MethodBody': 'Type map(Type type) {\n\t\tif (type instanceof Class) {\n\t\t\treturn type;\n\t\t} else if (type instanceof TypeVariable) {\n\t\t\tTypeVariable<?> tv = (TypeVariable<?>) type;\n\t\t\tif (!map.containsKey(type)) {\n\t\t\t\tthrow new UnresolvedTypeVariableException(tv);\n\t\t\t}\n\t\t\treturn map.get(type);\n\t\t} else if (type instanceof ParameterizedType) {\n\t\t\tParameterizedType pType = (ParameterizedType) type;\n\t\t\treturn new ParameterizedTypeImpl((Class<?>)pType.getRawType(), map(pType.getActualTypeArguments()), pType.getOwnerType() == null ? pType.getOwnerType() : map(pType.getOwnerType()));\n\t\t} else if (type instanceof WildcardType) {\n\t\t\tWildcardType wType = (WildcardType) type;\n\t\t\treturn new WildcardTypeImpl(map(wType.getUpperBounds()), map(wType.getLowerBounds()));\n\t\t} else if (type instanceof GenericArrayType) {\n\t\t\treturn GenericArrayTypeImpl.createArrayType(map(((GenericArrayType)type).getGenericComponentType()));\n\t\t} else {\n\t\t\tthrow new RuntimeException(""not implemented: mapping "" + type.getClass() + "" ("" + type + "")"");\n\t\t}\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/repackaged/gentyref/VarMap.java'}, {'Syntax': 'datastore().allocateId(allocations).stream()', 'FunctionName': 'stream', 'ArgsCount': 0, 'MethodBody': 'default Stream<T> stream() {\r\n\t\treturn StreamSupport.stream(iterable().spliterator(), false);\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/cmd/QueryExecute.java'}, {'Syntax': 'datastore().allocateId(allocations)', 'FunctionName': 'allocateId', 'ArgsCount': 1, 'MethodBody': 'public <T> Key<T> allocateId(final Class<T> clazz) {\r\n\t\treturn allocateIds(clazz, 1).iterator().next();\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/ObjectifyFactory.java'}, {'Syntax': 'datastore()', 'FunctionName': 'datastore', 'ArgsCount': 0, 'MethodBody': 'protected Datastore datastore() {\r\n\t\treturn factory().datastore();\r\n\t}', 'FileName': '/objectify/objectify/src/test/java/com/googlecode/objectify/test/util/TestBase.java'}]"
6621cdadcda9bd4817b11335,real-logic/aeron,"public static boolean isDriverActive(
        final File directory, final long driverTimeoutMs, final Consumer<String> logger)
    {
        final File cncFile = new File(directory, CncFileDescriptor.CNC_FILE);

        if (cncFile.exists() && cncFile.length() > 0)
        {
            logger.accept(""INFO: Aeron CnC file exists: "" + cncFile);

            final MappedByteBuffer cncByteBuffer = IoUtil.mapExistingFile(cncFile, ""CnC file"");
            try
            {
                return isDriverActive(driverTimeoutMs, logger, cncByteBuffer);
            }
            finally
            {
                IoUtil.unmap(cncByteBuffer);
            }
        }

        return false;
    }",Is a media driver active in the given directory?,aeron-client/src/main/java/io/aeron/CommonContext.java,"[{'Syntax': 'cncFile.length()', 'FunctionName': 'length', 'ArgsCount': 0, 'MethodBody': 'public int length()\n    {\n        return length;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/DirectBufferVector.java'}, {'Syntax': 'isDriverActive(driverTimeoutMs, logger, cncByteBuffer)', 'FunctionName': 'isDriverActive', 'ArgsCount': 3, 'MethodBody': 'public static boolean isDriverActive(\n        final File directory, final long driverTimeoutMs, final Consumer<String> logger)\n    {\n        final File cncFile = new File(directory, CncFileDescriptor.CNC_FILE);\n\n        if (cncFile.exists() && cncFile.length() > CncFileDescriptor.END_OF_METADATA_OFFSET)\n        {\n            logger.accept(""INFO: Aeron CnC file exists: "" + cncFile);\n\n            final MappedByteBuffer cncByteBuffer = IoUtil.mapExistingFile(cncFile, ""CnC file"");\n            try\n            {\n                return isDriverActive(driverTimeoutMs, logger, cncByteBuffer);\n            }\n            finally\n            {\n                BufferUtil.free(cncByteBuffer);\n            }\n        }\n\n        return false;\n    }', 'FileName': '/real-logic/aeron/aeron-client/src/main/java/io/aeron/CommonContext.java'}]"
6621cdadcda9bd4817b11336,Unidata/thredds,"public List<String> getFilenames() {
    List<String> result = new ArrayList<>();
    for (MFile file : fileMap.values())
      result.add(file.getPath());
    Collections.sort(result);
    return result;
  }",The files that comprise the collection . Actual paths including the grib cache if used .,grib/src/main/java/ucar/nc2/grib/collection/GribCollectionMutable.java,[]
6621cdadcda9bd4817b11337,wro4j/wro4j,"public static void safeCopy(final Reader reader, final Writer writer)
      throws IOException {
    try {
      IOUtils.copy(reader, writer);
    } finally {
      IOUtils.closeQuietly(reader);
      IOUtils.closeQuietly(writer);
    }
  }",Copy and close the reader and writer streams .,wro4j-core/src/main/java/ro/isdc/wro/util/WroUtil.java,[]
6621cdadcda9bd4817b11338,basis-technology-corp/tcl-regex-java,"void lexstart() throws RegexException {
        prefixes();         /* may turn on new type bits etc. */

        if (0 != (v.cflags & Flags.REG_QUOTE)) {
            assert 0 == (v.cflags & (Flags.REG_ADVANCED | Flags.REG_EXPANDED | Flags.REG_NEWLINE));
            intocon(L_Q);
        } else if (0 != (v.cflags & Flags.REG_EXTENDED)) {
            assert 0 == (v.cflags & Flags.REG_QUOTE);
            intocon(L_ERE);
        } else {
            assert 0 == (v.cflags & (Flags.REG_QUOTE | Flags.REG_ADVF));
            intocon(L_BRE);
        }

        v.nexttype = Compiler.EMPTY;        /* remember we were at the start */
        next();         /* set up the first token */
    }",lexstart - set up lexical stuff scan leading options,src/main/java/com/basistech/tclre/Lex.java,"[{'Syntax': 'prefixes()', 'FunctionName': 'prefixes', 'ArgsCount': 0, 'MethodBody': 'void prefixes() throws RegexException {\n    /* literal string doesn\'t get any of this stuff */\n        if (0 != (v.cflags & Flags.REG_QUOTE)) {\n            return;\n        }\n\n    /* initial ""***"" gets special things */\n        if (have(4) && next3(\'*\', \'*\', \'*\')) {\n            switch (charAtNowPlus(3)) {\n            case \'?\':       /* ""***?"" error, msg shows version */\n                throw new RegexException(""REG_BADPAT"");\n            case \'=\':       /* ""***="" shifts to literal string */\n                v.note(Flags.REG_UNONPOSIX);\n                v.cflags |= Flags.REG_QUOTE;\n                v.cflags &= ~(Flags.REG_ADVANCED | Flags.REG_EXPANDED | Flags.REG_NEWLINE);\n                v.now += 4;\n                return;     /* and there can be no more prefixes */\n            case \':\':       /* ""***:"" shifts to AREs */\n                v.note(Flags.REG_UNONPOSIX);\n                v.cflags |= Flags.REG_ADVANCED;\n                v.now += 4;\n                break;\n            default:        /* otherwise *** is just an error */\n                throw new RegexException(""REG_BADRPT"");\n            }\n        }\n\n    /* BREs and EREs don\'t get embedded options */\n        if ((v.cflags & Flags.REG_ADVANCED) != Flags.REG_ADVANCED) {\n            return;\n        }\n\n    /* embedded options (AREs only) */\n        if (have(3) && next2(\'(\', \'?\') && iscalpha(charAtNowPlus(2))) {\n            v.note(Flags.REG_UNONPOSIX);\n            v.now += 2;\n            for (; !ateos() && iscalpha(charAtNow()); v.now++) {\n                switch (charAtNow()) {\n                case \'b\':       /* BREs (but why???) */\n                    v.cflags &= ~(Flags.REG_ADVANCED | Flags.REG_QUOTE);\n                    break;\n                case \'c\':       /* case sensitive */\n                    v.cflags &= ~Flags.REG_ICASE;\n                    break;\n                case \'e\':       /* plain EREs */\n                    v.cflags |= Flags.REG_EXTENDED;\n                    v.cflags &= ~(Flags.REG_ADVF | Flags.REG_QUOTE);\n                    break;\n                case \'i\':       /* case insensitive */\n                    v.cflags |= Flags.REG_ICASE;\n                    break;\n                case \'m\':       /* Perloid synonym for n */\n                case \'n\':       /* \\n affects ^ $ . [^ */\n                    v.cflags |= Flags.REG_NEWLINE;\n                    break;\n                case \'p\':       /* ~Perl, \\n affects . [^ */\n                    v.cflags |= Flags.REG_NLSTOP;\n                    v.cflags &= ~Flags.REG_NLANCH;\n                    break;\n                case \'q\':       /* literal string */\n                    v.cflags |= Flags.REG_QUOTE;\n                    v.cflags &= ~Flags.REG_ADVANCED;\n                    break;\n                case \'s\':       /* single line, \\n ordinary */\n                    v.cflags &= ~Flags.REG_NEWLINE;\n                    break;\n                case \'t\':       /* tight syntax */\n                    v.cflags &= ~Flags.REG_EXPANDED;\n                    break;\n                case \'w\':       /* weird, \\n affects ^ $ only */\n                    v.cflags &= ~Flags.REG_NLSTOP;\n                    v.cflags |= Flags.REG_NLANCH;\n                    break;\n                case \'x\':       /* expanded syntax */\n                    v.cflags |= Flags.REG_EXPANDED;\n                    break;\n                default:\n                    throw new RegexException(""REG_BADOPT"");\n                }\n            }\n\n            if (!next1(\')\')) {\n                throw new RegexException(""REG_BADOPT"");\n            }\n            v.now++;\n            if (0 != (v.cflags & Flags.REG_QUOTE)) {\n                v.cflags &= ~(Flags.REG_EXPANDED | Flags.REG_NEWLINE);\n            }\n        }\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Lex.java'}, {'Syntax': 'intocon(L_Q)', 'FunctionName': 'intocon', 'ArgsCount': 1, 'MethodBody': 'void intocon(int c) {\n        v.lexcon = c;\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Lex.java'}, {'Syntax': 'intocon(L_ERE)', 'FunctionName': 'intocon', 'ArgsCount': 1, 'MethodBody': 'void intocon(int c) {\n        v.lexcon = c;\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Lex.java'}, {'Syntax': 'intocon(L_BRE)', 'FunctionName': 'intocon', 'ArgsCount': 1, 'MethodBody': 'void intocon(int c) {\n        v.lexcon = c;\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Lex.java'}, {'Syntax': 'next()', 'FunctionName': 'next', 'ArgsCount': 0, 'MethodBody': 'boolean next() throws RegexException {\n        char c;\n\n    /* remember flavor of last token */\n        v.lasttype = v.nexttype;\n\n    /* REG_BOSONLY */\n        if (v.nexttype == Compiler.EMPTY && (0 != (v.cflags & Flags.REG_BOSONLY))) {\n        /* at start of a REG_BOSONLY RE */\n            return retv(Compiler.SBEGIN, (char)0);      /* same as \\A */\n        }\n\n    /* if we\'re nested and we\'ve hit end, return to outer level */\n        if (v.savepattern != null && ateos()) {\n            v.now = v.savenow;\n            v.stop = v.savestop;\n            v.savenow = -1;\n            v.savestop = -1;\n            v.pattern = v.savepattern;\n            v.savepattern = null; // mark that it\'s not saved.\n        }\n\n    /* skip white space etc. if appropriate (not in literal or []) */\n        if (0 != (v.cflags & Flags.REG_EXPANDED)) {\n            switch (v.lexcon) {\n            case L_ERE:\n            case L_BRE:\n            case L_EBND:\n            case L_BBND:\n                skip();\n                break;\n            }\n        }\n\n    /* handle EOS, depending on context */\n        if (ateos()) {\n            switch (v.lexcon) {\n            case L_ERE:\n            case L_BRE:\n            case L_Q:\n                return ret(Compiler.EOS);\n            case L_EBND:\n            case L_BBND:\n                throw new RegexException(""Unbalanced braces."");\n            case L_BRACK:\n            case L_CEL:\n            case L_ECL:\n            case L_CCL:\n                throw new RegexException(""Unbalanced brackets."");\n            }\n            assert false;\n        }\n\n    /* okay, time to actually get a character */\n        c = charAtNowAdvance();\n\n    /* deal with the easy contexts, punt EREs to code below */\n        switch (v.lexcon) {\n        case L_BRE:         /* punt BREs to separate function */\n            return brenext(c);\n        case L_ERE:         /* see below */\n            break;\n        case L_Q:           /* literal strings are easy */\n            return retv(Compiler.PLAIN, c);\n        case L_BBND:            /* bounds are fairly simple */\n        case L_EBND:\n            switch (c) {\n            case \'0\':\n            case \'1\':\n            case \'2\':\n            case \'3\':\n            case \'4\':\n            case \'5\':\n            case \'6\':\n            case \'7\':\n            case \'8\':\n            case \'9\':\n                return retv(Compiler.DIGIT, digitval(c));\n            case \',\':\n                return ret(\',\');\n            case \'}\':       /* ERE bound ends with } */\n                if (incon(L_EBND)) {\n                    intocon(L_ERE);\n                    if (0 != (v.cflags & Flags.REG_ADVF) && next1(\'?\')) {\n                        v.now++;\n                        note(Flags.REG_UNONPOSIX);\n                        return retv(\'}\', 0);\n                    }\n                    return retv(\'}\', 1);\n                } else {\n                    throw new RegexException(""Errors.REG_BADBR"");\n                }\n            case \'\\\\\':      /* BRE bound ends with \\} */\n                if (incon(L_BBND) && next1(\'}\')) {\n                    v.now++;\n                    intocon(L_BRE);\n                    return ret(\'}\');\n                } else {\n                    throw new RegexException(""Errors.REG_BADBR"");\n                }\n            default:\n                throw new RegexException(""Errors.REG_BADBR"");\n            }\n\n        case L_BRACK:           /* brackets are not too hard */\n            switch (c) {\n            case \']\':\n                if (lasttype(\'[\')) {\n                    return retv(Compiler.PLAIN, c);\n                } else {\n                    intocon(0 != (v.cflags & Flags.REG_EXTENDED) ? L_ERE : L_BRE);\n                    return ret(\']\');\n                }\n            case \'\\\\\':\n                note(Flags.REG_UBBS);\n                if (0 == (v.cflags & Flags.REG_ADVF)) {\n                    return retv(Compiler.PLAIN, c);\n                }\n                note(Flags.REG_UNONPOSIX);\n                if (ateos()) {\n                    throw new RegexException(""REG_EESCAPE"");\n                }\n                lexescape();\n\n                switch (v.nexttype) {   /* not all escapes okay here */\n                case Compiler.PLAIN:\n                    return true;\n\n                case Compiler.CCLASS:\n                    switch (v.nextvalue) {\n                    case \'d\':\n                        lexnest(brbackd);\n                        break;\n                    case \'s\':\n                        lexnest(brbacks);\n                        break;\n                    case \'w\':\n                        lexnest(brbackw);\n                        break;\n                    default:\n                        throw new RegexException(""Errors.REG_EESCAPE"");\n                    }\n                /* lexnest done, back up and try again */\n                    v.nexttype = v.lasttype;\n                    return next();\n\n                }\n            /* not one of the acceptable escapes */\n                throw new RegexException(""Errors.REG_EESCAPE"");\n\n            case \'-\':\n                if (lasttype(\'[\') || next1(\']\')) {\n                    return retv(Compiler.PLAIN, c);\n                } else {\n                    return retv(Compiler.RANGE, c);\n                }\n\n            case \'[\':\n                if (ateos()) {\n                    throw new RegexException(""Errors.REG_EBRACK"");\n                }\n\n                switch (charAtNowAdvance()) {\n                case \'.\':\n                    intocon(L_CEL);\n                /* might or might not be locale-specific */\n                    return ret(Compiler.COLLEL);\n\n                case \'=\':\n                    intocon(L_ECL);\n                    note(Flags.REG_ULOCALE);\n                    return ret(Compiler.ECLASS);\n\n                case \':\':\n                    intocon(L_CCL);\n                    note(Flags.REG_ULOCALE);\n                    return ret(Compiler.CCLASS);\n\n                default:            /* oops */\n                    v.now--;\n                    return retv(Compiler.PLAIN, c);\n\n                }\n\n            default:\n                return retv(Compiler.PLAIN, c);\n\n            }\n\n        case L_CEL:         /* collating elements are easy */\n            if (c == \'.\' && next1(\']\')) {\n                v.now++;\n                intocon(L_BRACK);\n                return retv(Compiler.END, \'.\');\n            } else {\n                return retv(Compiler.PLAIN, c);\n            }\n\n        case L_ECL:         /* ditto equivalence classes */\n            if (c == \'=\' && next1(\']\')) {\n                v.now++;\n                intocon(L_BRACK);\n                return retv(Compiler.END, \'=\');\n            } else {\n                return retv(Compiler.PLAIN, c);\n            }\n\n        case L_CCL:         /* ditto character classes */\n            if (c == \':\' && next1(\']\')) {\n                v.now++;\n                intocon(L_BRACK);\n                return retv(Compiler.END, \':\');\n            } else {\n                return retv(Compiler.PLAIN, c);\n            }\n\n        default:\n            assert false;\n            break;\n        }\n\n    /* that got rid of everything except EREs and AREs */\n        assert incon(L_ERE);\n\n    /* deal with EREs and AREs, except for backslashes */\n        switch (c) {\n        case \'|\':\n            return ret(\'|\');\n\n        case \'*\':\n            if (0 != (v.cflags & Flags.REG_ADVF) && next1(\'?\')) {\n                v.now++;\n                note(Flags.REG_UNONPOSIX);\n                return retv(\'*\', 0);\n            }\n            return retv(\'*\', 1);\n\n        case \'+\':\n            if (0 != (v.cflags & Flags.REG_ADVF) && next1(\'?\')) {\n                v.now++;\n                note(Flags.REG_UNONPOSIX);\n                return retv(\'+\', 0);\n            }\n            return retv(\'+\', 1);\n\n        case \'?\':\n            if (0 != (v.cflags & Flags.REG_ADVF) && next1(\'?\')) {\n                v.now++;\n                note(Flags.REG_UNONPOSIX);\n                return retv(\'?\', 0);\n            }\n            return retv(\'?\', 1);\n\n        case \'{\':       /* bounds start or plain character */\n            if (0 != (v.cflags & Flags.REG_EXPANDED)) {\n                skip();\n            }\n            if (ateos() || !iscdigit(charAtNow())) {\n                note(Flags.REG_UBRACES);\n                note(Flags.REG_UUNSPEC);\n                return retv(Compiler.PLAIN, c);\n            } else {\n                note(Flags.REG_UBOUNDS);\n                intocon(L_EBND);\n                return ret(\'{\');\n            }\n\n        case \'(\':       /* parenthesis, or advanced extension */\n            if (0 != (v.cflags & Flags.REG_ADVF) && next1(\'?\')) {\n                note(Flags.REG_UNONPOSIX);\n                v.now++;\n                char flagChar = charAtNowAdvance();\n                switch (flagChar) {\n                case \':\':       /* non-capturing paren */\n                    return retv(\'(\', 0);\n\n                case \'#\':       /* comment */\n                    while (!ateos() && charAtNow() != \')\') {\n                        v.now++;\n                    }\n                    if (!ateos()) {\n                        v.now++;\n                    }\n                    assert v.nexttype == v.lasttype;\n                    return next();\n\n                case \'=\':       /* positive lookahead */\n                    note(Flags.REG_ULOOKAHEAD);\n                    return retv(Compiler.LACON, 1);\n\n                case \'!\':       /* negative lookahead */\n                    note(Flags.REG_ULOOKAHEAD);\n                    return retv(Compiler.LACON, 0);\n\n                default:\n                    throw new RegexException(String.format(""Invalid flag after \'(?\': %c"", flagChar));\n                }\n            }\n            if (0 != (v.cflags & Flags.REG_NOSUB) || 0 != (v.cflags & Flags.REG_NOCAPT)) {\n                return retv(\'(\', 0);        /* all parens non-capturing */\n            } else {\n                return retv(\'(\', 1);\n            }\n\n        case \')\':\n            if (lasttype(\'(\')) {\n                note(Flags.REG_UUNSPEC);\n            }\n            return retv(\')\', c);\n\n        case \'[\':       /* easy except for [[:<:]] and [[:>:]] */\n            if (have(6) && charAtNow() == \'[\'\n                    && charAtNowPlus(1) == \':\'\n                    && (charAtNowPlus(2) == \'<\' || charAtNowPlus(2) == \'>\')\n                    && charAtNowPlus(3) == \':\'\n                    && charAtNowPlus(4) == \']\'\n                    && charAtNowPlus(5) == \']\') {\n                c = charAtNowPlus(2);\n                v.now += 6;\n                note(Flags.REG_UNONPOSIX);\n                return ret((c == \'<\') ? \'<\' : \'>\');\n            }\n            intocon(L_BRACK);\n            if (next1(\'^\')) {\n                v.now++;\n                return retv(\'[\', 0);\n            }\n            return retv(\'[\', 1);\n\n        case \'.\':\n            return ret(\'.\');\n\n        case \'^\':\n            return ret(\'^\');\n\n        case \'$\':\n            return ret(\'$\');\n\n        case \'\\\\\':      /* mostly punt backslashes to code below */\n            if (ateos()) {\n                throw new RegexException(""REG_EESCAPE"");\n            }\n            break;\n        default:        /* ordinary character */\n            return retv(Compiler.PLAIN, c);\n\n        }\n\n    /* ERE/ARE backslash handling; backslash already eaten */\n        assert !ateos();\n        if (0 == (v.cflags & Flags.REG_ADVF)) { /* only AREs have non-trivial escapes */\n            if (iscalnum(charAtNow())) {\n                note(Flags.REG_UBSALNUM);\n                note(Flags.REG_UUNSPEC);\n            }\n            return retv(Compiler.PLAIN, charAtNowAdvance());\n        }\n\n        lexescape();\n\n        if (v.nexttype == Compiler.CCLASS) {    /* fudge at lexical level */\n            switch (v.nextvalue) {\n            case \'d\':\n                lexnest(backd);\n                break;\n            case \'D\':\n                lexnest(backD);\n                break;\n            case \'s\':\n                lexnest(backs);\n                break;\n            case \'S\':\n                lexnest(backS);\n                break;\n            case \'w\':\n                lexnest(backw);\n                break;\n            case \'W\':\n                lexnest(backW);\n                break;\n\n            default:\n                throw new RuntimeException(""Invalid escape "" + Character.toString((char)v.nextvalue));\n            }\n        /* lexnest done, back up and try again */\n            v.nexttype = v.lasttype;\n            return next();\n        }\n    /* otherwise, lexescape has already done the work */\n        return true;\n    }', 'FileName': '/basis-technology-corp/tcl-regex-java/src/main/java/com/basistech/tclre/Lex.java'}]"
6621cdadcda9bd4817b11339,geomajas/geomajas-project-sld-editor,"public void validate(StyledLayerDescriptorInfo sld) throws SldException {
		try {
			parseSldI(sld);
		} catch (JiBXException e) {
			throw new SldException(""Validation error"", e);
		}
	}",Test by marshalling .,expert-common/src/main/java/org/geomajas/sld/editor/expert/common/server/service/InMemorySldServiceImpl.java,"[{'Syntax': 'parseSldI(sld)', 'FunctionName': 'parseSldI', 'ArgsCount': 1, 'MethodBody': 'private RawSld parseSldI(StyledLayerDescriptorInfo sld) throws JiBXException {\n\t\tRawSld res = new RawSld();\n\t\tIBindingFactory bfact;\n\t\tbfact = BindingDirectory.getFactory(StyledLayerDescriptorInfo.class);\n\t\tIMarshallingContext mctx = bfact.createMarshallingContext();\n\t\tStringWriter writer = new StringWriter();\n\t\tmctx.setOutput(writer);\n\t\tmctx.getXmlWriter().setIndentSpaces(2, ""\\n"", \' \');\n\t\tmctx.marshalDocument(sld);\n\t\tres.setXml(writer.toString());\n\t\tres.setName(sld.getName());\n\t\tres.setVersion(sld.getVersion());\n\t\tres.setTitle(sld.getTitle() == null ? getTitle(sld, ""?"") : sld.getTitle());\n\t\treturn res;\n\t}', 'FileName': '/geomajas/geomajas-project-sld-editor/expert-common/src/main/java/org/geomajas/sld/editor/expert/common/server/service/InMemorySldServiceImpl.java'}]"
6621cdadcda9bd4817b1133a,ieb/sparsemapcontent,"static void info(String message, Throwable t) {
		log(System.out, ""*INFO*"", message, t);
	}",emit an informational message to standard out,app/src/main/java/org/sakaiproject/nakamura/app/NakamuraMain.java,[]
6621cdadcda9bd4817b1133b,kiegroup/droolsjbpm-tools,"public Object getPropertyValue(Object propertyId) {
        if ( XPOS_PROP.equals( propertyId ) ) {
            return Integer.toString( location.x );
        }
        if ( YPOS_PROP.equals( propertyId ) ) {
            return Integer.toString( location.y );
        }
        if ( HEIGHT_PROP.equals( propertyId ) ) {
            return Integer.toString( size.height );
        }
        if ( WIDTH_PROP.equals( propertyId ) ) {
            return Integer.toString( size.width );
        }
        return null;
    }",Return the property value for the given propertyId or null .,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/GraphicalVertex.java,"[{'Syntax': 'XPOS_PROP.equals( propertyId )', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': 'Integer.toString( location.x )', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'protected String toString(String pattern) {\n        dateFormat.applyPattern(pattern);\n        return dateFormat.format(toDate());\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/utils/DateTime.java'}, {'Syntax': 'YPOS_PROP.equals( propertyId )', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': 'Integer.toString( location.y )', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'protected String toString(String pattern) {\n        dateFormat.applyPattern(pattern);\n        return dateFormat.format(toDate());\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/utils/DateTime.java'}, {'Syntax': 'HEIGHT_PROP.equals( propertyId )', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': 'Integer.toString( size.height )', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'protected String toString(String pattern) {\n        dateFormat.applyPattern(pattern);\n        return dateFormat.format(toDate());\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/utils/DateTime.java'}, {'Syntax': 'WIDTH_PROP.equals( propertyId )', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': 'public boolean equals(Object obj) {\n            if (obj instanceof VariableWrapper) {\n                VariableWrapper var = (VariableWrapper) obj;\n                return var.getName().equals(getName());\n            }\n            return false;\n        }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/AgendaViewContentProvider.java'}, {'Syntax': 'Integer.toString( size.width )', 'FunctionName': 'toString', 'ArgsCount': 1, 'MethodBody': 'protected String toString(String pattern) {\n        dateFormat.applyPattern(pattern);\n        return dateFormat.format(toDate());\n    }', 'FileName': '/kiegroup/droolsjbpm-tools/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/utils/DateTime.java'}]"
6621cdadcda9bd4817b1133c,Koekiebox-PTY-LTD/Fluid,"public Field createFieldParagraphTextPlain(Field routeFieldParam) {
		if(routeFieldParam != null && this.serviceTicket != null) {
			routeFieldParam.setServiceTicket(this.serviceTicket);
		}

		if(routeFieldParam != null) {
			routeFieldParam.setTypeAsEnum(Field.Type.ParagraphText);
			routeFieldParam.setTypeMetaData(FieldMetaData.ParagraphText.PLAIN);
		}

		return new Field(this.putJson(
				routeFieldParam, Version1.routeFieldCreate()));
	}",Create a new Paragraph Text field .,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/RouteFieldClient.java,"[{'Syntax': 'routeFieldParam.setServiceTicket(this.serviceTicket)', 'FunctionName': 'setServiceTicket', 'ArgsCount': 1, 'MethodBody': 'public void setServiceTicket(String serviceTicketParam) {\r\n\t\tthis.serviceTicket = serviceTicketParam;\r\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ABaseFluidVO.java'}, {'Syntax': 'routeFieldParam.setTypeAsEnum(Field.Type.ParagraphText)', 'FunctionName': 'setTypeAsEnum', 'ArgsCount': 1, 'MethodBody': '@XmlTransient\n\t@JsonIgnore\n\tpublic void setTypeAsEnum(Type typeParam) {\n\t\tif (typeParam == null) {\n\t\t\tthis.fieldType = null;\n\t\t\treturn;\n\t\t}\n\t\tthis.fieldType = typeParam.name();\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/field/Field.java'}, {'Syntax': 'routeFieldParam.setTypeMetaData(FieldMetaData.ParagraphText.PLAIN)', 'FunctionName': 'setTypeMetaData', 'ArgsCount': 1, 'MethodBody': 'public void setTypeMetaData(String typeMetaData) {\n\t\tthis.typeMetaData = typeMetaData;\n\t\tthis.decimalMetaFormat = DecimalMetaFormat.parse(this.typeMetaData);\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/field/Field.java'}, {'Syntax': 'this.putJson(\n\t\t\t\trouteFieldParam, Version1.routeFieldCreate())', 'FunctionName': 'putJson', 'ArgsCount': 2, 'MethodBody': 'protected JSONObject putJson(\n\t\t\tABaseFluidJSONObject baseDomainParam,\n\t\t\tString postfixUrlParam\n\t) {\n\t\t//Create without connection check...\n\t\treturn this.putJson(false, baseDomainParam, postfixUrlParam);\n\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/ABaseClientWS.java'}, {'Syntax': 'Version1.routeFieldCreate()', 'FunctionName': 'routeFieldCreate', 'ArgsCount': 0, 'MethodBody': 'public static final String routeFieldCreate() {\n\t\t\t\t\treturn Version.VERSION_1.concat(ROOT).concat(CREATE);\n\t\t\t\t}', 'FileName': '/Koekiebox-PTY-LTD/Fluid/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ws/WS.java'}]"
6621cdadcda9bd4817b1133d,ngageoint/geopackage-android,"public float getPixelValue(byte[] imageBytes, int x, int y) {

        TIFFImage tiffImage = TiffReader.readTiff(imageBytes);
        FileDirectory directory = tiffImage.getFileDirectory();
        validateImageType(directory);
        Rasters rasters = directory.readRasters();
        float pixelValue = rasters.getFirstPixelSample(x, y).floatValue();

        return pixelValue;
    }",Get the pixel value as a float from the image and the coordinate,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataTiff.java,"[{'Syntax': 'validateImageType(directory)', 'FunctionName': 'validateImageType', 'ArgsCount': 1, 'MethodBody': 'public static void validateImageType(PngReader reader) {\n        if (reader == null) {\n            throw new GeoPackageException(""The image is null"");\n        }\n        if (reader.imgInfo.channels != 1 || reader.imgInfo.bitDepth != 16) {\n            throw new GeoPackageException(\n                    ""The coverage data tile is expected to be a single channel 16 bit unsigned short, channels: ""\n                            + reader.imgInfo.channels + "", bits: "" + reader.imgInfo.bitDepth);\n        }\n    }', 'FileName': '/ngageoint/geopackage-android/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataPng.java'}]"
6621cdadcda9bd4817b1133e,jboss/jboss-common-core,"public Vertex<T> findVertexByData(T data, Comparator<T> compare)
   {
      Vertex<T> match = null;
      for(Vertex<T> v : verticies.values())
      {
         if( compare.compare(data, v.getData()) == 0 )
         {
            match = v;
            break;
         }
      }
      return match;
   }",Search the verticies for one with data .,src/main/java/org/jboss/util/graph/Graph.java,"[{'Syntax': 'verticies.values()', 'FunctionName': 'values', 'ArgsCount': 0, 'MethodBody': 'public Collection<V> values()\n   {\n      if (values == null)\n         values = new Values();\n\n      return values;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/collection/FastCopyHashMap.java'}, {'Syntax': 'compare.compare(data, v.getData())', 'FunctionName': 'compare', 'ArgsCount': 2, 'MethodBody': 'public int compare(Object o1, Object o2)\n      {\n         String[] a1 = (String[]) o1;\n         String[] a2 = (String[]) o2;\n         int compare = a1.length - a2.length;\n         for(int n = 0; n < a1.length; n ++)\n            compare += a1[n].compareTo(a2[n]);\n         return compare;\n      }', 'FileName': '/jboss/jboss-common-core/src/test/java/org/jboss/test/util/test/propertyeditor/PropertyEditorsUnitTestCase.java'}, {'Syntax': 'v.getData()', 'FunctionName': 'getData', 'ArgsCount': 0, 'MethodBody': 'public Object getData()\n   {\n      return data;\n   }', 'FileName': '/jboss/jboss-common-core/src/main/java/org/jboss/util/state/State.java'}]"
6621cdadcda9bd4817b1133f,rest-assured/rest-assured,"public static Cookies cookies(Cookie cookie, Cookie... additionalCookies) {
        AssertParameter.notNull(cookie, ""Cookie"");
        final List<Cookie> cookieList = new LinkedList<Cookie>();
        cookieList.add(cookie);
        Collections.addAll(cookieList, additionalCookies);
        return new Cookies(cookieList);
    }",An alternative way to create a Cookies object from the constructor .,rest-assured/src/main/java/io/restassured/http/Cookies.java,"[{'Syntax': 'cookieList.add(cookie)', 'FunctionName': 'add', 'ArgsCount': 1, 'MethodBody': 'public void add(BodyMatcherGroup group) {\n        bodyAssertions.addAll(group.bodyAssertions);\n    }', 'FileName': '/rest-assured/rest-assured/rest-assured/src/main/java/io/restassured/internal/assertion/BodyMatcherGroup.java'}]"
6621cdadcda9bd4817b11340,lessthanoptimal/GeoRegression,"public static Point3D_F64 mean( List<Point3D_F64> points , Point3D_F64 mean ) {
      if( mean == null )
         mean = new Point3D_F64();

		double x = 0, y = 0, z = 0;

		for( Point3D_F64 p : points ) {
			x += p.x;
			y += p.y;
			z += p.z;
		}

		mean.x = x / points.size();
		mean.y = y / points.size();
		mean.z = z / points.size();

		return mean;
	}",Computes the mean of the list of points .,main/src/georegression/geometry/UtilPoint3D_F64.java,"[{'Syntax': 'points.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic int size() {\n\t\treturn 3;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/curve/PolynomialQuadratic1D_F64.java'}, {'Syntax': 'points.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic int size() {\n\t\treturn 3;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/curve/PolynomialQuadratic1D_F64.java'}, {'Syntax': 'points.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': '@Override\n\tpublic int size() {\n\t\treturn 3;\n\t}', 'FileName': '/lessthanoptimal/GeoRegression/main/src/georegression/struct/curve/PolynomialQuadratic1D_F64.java'}]"
6621cdadcda9bd4817b11341,abmargb/jamppa,"public void connectionLost() {
        // Ensure that only one thread will try to reconnect.
        synchronized (this) {
            if (reconnecting) {
                return;
            }
            reconnecting = true;
        }
        readerThread = null;
        boolean isConnected = false;
        if (!shutdown) {
            // Notify the component that connection was lost so it needs to
            // shutdown. The component is
            // still registered in the local component manager but just not
            // connected to the server
            component.shutdown();
        }
        while (!isConnected && !shutdown) {
            try {
                connect(host, port, subdomain);
                isConnected = true;
                // It may be possible that while a new connection was being
                // established the
                // component was required to shutdown so in this case we need to
                // close the new
                // connection
                if (shutdown) {
                    disconnect();
                } else {
                    // Component is back again working so start it up again
                    start();
                }
            } catch (ComponentException e) {
                manager.getLog().error(
                        ""Error trying to reconnect with the server"", e);
                // Wait for 5 seconds until the next retry
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException e1) {
                    // Do nothing
                }
            }
        }
        reconnecting = false;
    }",Notification message that the connection with the server was lost unexpectedly . We will try to reestablish the connection for ever until the connection has been reestablished or this thread has been stopped .,src/main/java/org/jivesoftware/whack/ExternalComponent.java,"[{'Syntax': 'component.shutdown()', 'FunctionName': 'shutdown', 'ArgsCount': 0, 'MethodBody': 'public void shutdown() {\n        shutdown = true;\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/whack/SocketReadThread.java'}, {'Syntax': 'connect(host, port, subdomain)', 'FunctionName': 'connect', 'ArgsCount': 3, 'MethodBody': 'public void connect(String host, int port, String subdomain)\n            throws ComponentException {\n        try {\n            // Open a socket to the server\n            this.socket = new Socket();\n            socket.connect(new InetSocketAddress(host, port),\n                    manager.getConnectTimeout());\n            if (manager.getServerName() != null) {\n                this.domain = subdomain + ""."" + manager.getServerName();\n            } else {\n                this.domain = subdomain;\n            }\n            this.subdomain = subdomain;\n            // Keep these variables that will be used in case a reconnection is\n            // required\n            this.host = host;\n            this.port = port;\n\n            try {\n                factory = XmlPullParserFactory.newInstance();\n                reader = new XPPPacketReader();\n                reader.setXPPFactory(factory);\n\n                reader.getXPPParser()\n                        .setInput(\n                                new InputStreamReader(socket.getInputStream(),\n                                        CHARSET));\n\n                // Get a writer for sending the open stream tag\n                writer = new BufferedWriter(new OutputStreamWriter(\n                        socket.getOutputStream(), CHARSET));\n                // Open the stream.\n                StringBuilder stream = new StringBuilder();\n                stream.append(""<stream:stream"");\n                stream.append("" xmlns=\\""jabber:component:accept\\"""");\n                stream.append("" xmlns:stream=\\""http://etherx.jabber.org/streams\\"""");\n                if (manager.isMultipleAllowed(subdomain)) {\n                    stream.append("" allowMultiple=\\""true\\"""");\n                }\n                stream.append("" to=\\"""").append(domain).append(""\\"">"");\n                writer.write(stream.toString());\n                writer.flush();\n                stream = null;\n\n                // Get the answer from the server\n                XmlPullParser xpp = reader.getXPPParser();\n                for (int eventType = xpp.getEventType(); eventType != XmlPullParser.START_TAG;) {\n                    eventType = xpp.next();\n                }\n\n                // Set the streamID returned from the server\n                connectionID = xpp.getAttributeValue("""", ""id"");\n                if (xpp.getAttributeValue("""", ""from"") != null) {\n                    this.domain = xpp.getAttributeValue("""", ""from"");\n                }\n                xmlSerializer = new XMLWriter(writer);\n\n                // Handshake with the server\n                stream = new StringBuilder();\n                stream.append(""<handshake>"");\n                stream.append(StringUtils.hash(connectionID\n                        + manager.getSecretKey(subdomain)));\n                stream.append(""</handshake>"");\n                writer.write(stream.toString());\n                writer.flush();\n                stream = null;\n\n                // Get the answer from the server\n                try {\n                    Element doc = reader.parseDocument().getRootElement();\n                    if (""error"".equals(doc.getName())) {\n                        StreamError error = new StreamError(doc);\n                        // Close the connection\n                        socket.close();\n                        socket = null;\n                        // throw the exception with the wrapped error\n                        throw new ComponentException(error);\n                    }\n                    // Everything went fine\n                    // Start keep alive thread to send every 30 seconds of\n                    // inactivity a heart beat\n                    keepAliveTask = new KeepAliveTask();\n                    TaskEngine.getInstance().scheduleAtFixedRate(keepAliveTask,\n                            15000, 30000);\n\n                    timeoutTask = new TimeoutTask();\n                    TaskEngine.getInstance().scheduleAtFixedRate(timeoutTask,\n                            2000, 2000);\n\n                } catch (DocumentException e) {\n                    try {\n                        socket.close();\n                    } catch (IOException ioe) {\n                        // Do nothing\n                    }\n                    throw new ComponentException(e);\n                } catch (XmlPullParserException e) {\n                    try {\n                        socket.close();\n                    } catch (IOException ioe) {\n                        // Do nothing\n                    }\n                    throw new ComponentException(e);\n                }\n            } catch (XmlPullParserException e) {\n                try {\n                    socket.close();\n                } catch (IOException ioe) {\n                    // Do nothing\n                }\n                throw new ComponentException(e);\n            }\n        } catch (UnknownHostException uhe) {\n            try {\n                if (socket != null)\n                    socket.close();\n            } catch (IOException e) {\n                // Do nothing\n            }\n            throw new ComponentException(uhe);\n        } catch (IOException ioe) {\n            try {\n                if (socket != null)\n                    socket.close();\n            } catch (IOException e) {\n                // Do nothing\n            }\n            throw new ComponentException(ioe);\n        }\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/whack/ExternalComponent.java'}, {'Syntax': 'disconnect()', 'FunctionName': 'disconnect', 'ArgsCount': 0, 'MethodBody': 'private void disconnect() {\n        if (readerThread != null) {\n            readerThread.shutdown();\n        }\n        threadPool.shutdown();\n        TaskEngine.getInstance().cancelScheduledTask(keepAliveTask);\n        TaskEngine.getInstance().cancelScheduledTask(timeoutTask);\n        if (socket != null && !socket.isClosed()) {\n            try {\n                synchronized (writer) {\n                    try {\n                        writer.write(""</stream:stream>"");\n                        xmlSerializer.flush();\n                    } catch (IOException e) {\n                        // Do nothing\n                    }\n                }\n            } catch (Exception e) {\n                // Do nothing\n            }\n            try {\n                socket.close();\n            } catch (Exception e) {\n                manager.getLog().error(e);\n            }\n        }\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/whack/ExternalComponent.java'}, {'Syntax': 'start()', 'FunctionName': 'start', 'ArgsCount': 0, 'MethodBody': 'public void start() {\n        // Everything went fine so start reading packets from the server\n        readerThread = new SocketReadThread(this, reader);\n        readerThread.setDaemon(true);\n        readerThread.start();\n        // Notify the component that it will be notified of new received packets\n        component.start();\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/whack/ExternalComponent.java'}, {'Syntax': 'manager.getLog().error(\n                        ""Error trying to reconnect with the server"", e)', 'FunctionName': 'error', 'ArgsCount': 2, 'MethodBody': 'public static IQ error(IQ iq, String errorMessage) {\n        return XMPPUtils.createErrorResponse(iq, errorMessage,\n                Condition.bad_request, Type.modify);\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jamppa/component/utils/XMPPUtils.java'}, {'Syntax': 'manager.getLog()', 'FunctionName': 'getLog', 'ArgsCount': 0, 'MethodBody': 'public Logger getLog() {\n        return LOG;\n    }', 'FileName': '/abmargb/jamppa/src/main/java/org/jivesoftware/whack/ExternalComponentManager.java'}]"
6621cdadcda9bd4817b11342,oaqa/baseqa,"public void setOffsetInEndSection(int v) {
    if (Passage_Type.featOkTst && ((Passage_Type)jcasType).casFeat_offsetInEndSection == null)
      jcasType.jcas.throwFeatMissing(""offsetInEndSection"", ""edu.cmu.lti.oaqa.type.retrieval.Passage"");
    jcasType.ll_cas.ll_setIntValue(addr, ((Passage_Type)jcasType).casFeatCode_offsetInEndSection, v);}",setter for offsetInEndSection - sets Character offset of the end of this passage within the section that contains this passage .,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Passage.java,[]
6621cdadcda9bd4817b11343,RestComm/jain-slee,"public Set<SbbID> getSbbIDs(ComponentRepository componentRepository) {
		Set<SbbID> result = new HashSet<SbbID>();
		buildSbbTree(descriptor.getRootSbbID(), result,
				componentRepository);
		return result;
	}",Retrieves the set of sbbs used by this service,container/components/components/src/main/java/org/mobicents/slee/container/component/ServiceComponentImpl.java,"[{'Syntax': 'buildSbbTree(descriptor.getRootSbbID(), result,\r\n\t\t\t\tcomponentRepository)', 'FunctionName': 'buildSbbTree', 'ArgsCount': 3, 'MethodBody': 'private void buildSbbTree(SbbID sbbID, Set<SbbID> result,\r\n\t\t\tComponentRepository componentRepository) {\r\n\t\tresult.add(sbbID);\r\n\t\tSbbComponent sbbComponent = componentRepository.getComponentByID(sbbID);\r\n\t\tfor (ComponentID componentID : sbbComponent.getDependenciesSet()) {\r\n\t\t\tif (componentID instanceof SbbID) {\r\n\t\t\t\tSbbID anotherSbbID = (SbbID) componentID;\r\n\t\t\t\tif (!result.contains(anotherSbbID)) {\r\n\t\t\t\t\tbuildSbbTree(anotherSbbID, result, componentRepository);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}', 'FileName': '/RestComm/jain-slee/container/components/components/src/main/java/org/mobicents/slee/container/component/ServiceComponentImpl.java'}, {'Syntax': 'descriptor.getRootSbbID()', 'FunctionName': 'getRootSbbID', 'ArgsCount': 0, 'MethodBody': 'public String getRootSbbID() {\r\n    return rootSbbID;\r\n  }', 'FileName': '/RestComm/jain-slee/tools/slee-management-console/rpc/src/main/java/org/mobicents/slee/container/management/console/client/components/info/ServiceInfo.java'}]"
6621cdadcda9bd4817b11344,spring-projects/spring-security,"@RequestMapping(value = ""/secure/adminPermission.htm"", method = RequestMethod.GET)
	public ModelAndView displayAdminPage(@RequestParam(""contactId"") int contactId) {
		Contact contact = contactManager.getById(Long.valueOf(contactId));
		Acl acl = aclService.readAclById(new ObjectIdentityImpl(contact));

		Map<String, Object> model = new HashMap<>();
		model.put(""contact"", contact);
		model.put(""acl"", acl);

		return new ModelAndView(""adminPermission"", ""model"", model);
	}",Displays the permission admin page for a particular contact .,samples/xml/contacts/src/main/java/sample/contact/AdminPermissionController.java,"[{'Syntax': 'aclService.readAclById(new ObjectIdentityImpl(contact))', 'FunctionName': 'readAclById', 'ArgsCount': 1, 'MethodBody': '@Override\n\t\tpublic Acl readAclById(ObjectIdentity object) throws NotFoundException {\n\t\t\treturn null;\n\t\t}', 'FileName': '/spring-projects/spring-security/acl/src/test/java/org/springframework/security/acls/domain/AclImplTests.java'}, {'Syntax': 'model.put(""contact"", contact)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(Class<? extends Filter> filter, int position) {\n\t\tthis.filterToOrder.putIfAbsent(filter.getName(), position);\n\t}', 'FileName': '/spring-projects/spring-security/config/src/main/java/org/springframework/security/config/annotation/web/builders/FilterOrderRegistration.java'}, {'Syntax': 'model.put(""acl"", acl)', 'FunctionName': 'put', 'ArgsCount': 2, 'MethodBody': 'void put(Class<? extends Filter> filter, int position) {\n\t\tthis.filterToOrder.putIfAbsent(filter.getName(), position);\n\t}', 'FileName': '/spring-projects/spring-security/config/src/main/java/org/springframework/security/config/annotation/web/builders/FilterOrderRegistration.java'}]"
6621cdadcda9bd4817b11345,eclipse/packagedrone,"public static void main(String arg[]) {
        if (arg.length == 0) {
           System.out.println(Localizer.getMessage(""jspc.usage""));
        } else {
            JspC jspc = new JspC();
            try {
                jspc.setArgs(arg);
                if (jspc.helpNeeded) {
                    System.out.println(Localizer.getMessage(""jspc.usage""));
                } else {
                    jspc.execute();
                }
            } catch (JasperException je) {
                System.err.println(je);
                //System.err.println(je.getMessage());
                if (jspc.getDieLevel() != NO_DIE_LEVEL) {
                    System.exit(jspc.getDieLevel());
                }
            }
        }
    }",END GlassFish 750,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspC.java,"[{'Syntax': 'System.out.println(Localizer.getMessage(""jspc.usage""))', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public void println(boolean x) throws IOException {\n        print(x);\n        println();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspWriterImpl.java'}, {'Syntax': 'Localizer.getMessage(""jspc.usage"")', 'FunctionName': 'getMessage', 'ArgsCount': 1, 'MethodBody': 'public static String getMessage(String errCode) {\n\tString errMsg = errCode;\n\ttry {\n\t    errMsg = bundle.getString(errCode);\n\t} catch (MissingResourceException e) {\n\t}\n\treturn errMsg;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Localizer.java'}, {'Syntax': 'jspc.setArgs(arg)', 'FunctionName': 'setArgs', 'ArgsCount': 1, 'MethodBody': 'public void setArgs(String[] arg) throws JasperException {\n        args = arg;\n        String tok;\n\n        dieLevel = NO_DIE_LEVEL;\n\n        while ((tok = nextArg()) != null) {\n            if (tok.equals(SWITCH_VERBOSE)) {\n                verbose = true;\n                showSuccess = true;\n                listErrors = true;\n            } else if (tok.equals(SWITCH_OUTPUT_DIR)) {\n                tok = nextArg();\n                setOutputDir( tok );\n            } else if (tok.equals(SWITCH_PACKAGE_NAME)) {\n                targetPackage = nextArg();\n            } else if (tok.equals(SWITCH_COMPILE)) {\n                compile=true;\n            } else if (tok.equals(SWITCH_CLASS_NAME)) {\n                targetClassName = nextArg();\n            } else if (tok.equals(SWITCH_URI_BASE)) {\n                uriBase=nextArg();\n            } else if (tok.equals(SWITCH_URI_ROOT)) {\n                setUriroot( nextArg());\n            // START IASRI 4660687\n            } else if (tok.equals(SWITCH_GENERATE_CLASSES)) {\n                compile = true;\n            // END IASRI 4660687\n            } else if (tok.equals(SWITCH_FILE_WEBAPP)) {\n                setUriroot( nextArg());\n            } else if ( tok.equals( SHOW_SUCCESS ) ) {\n                showSuccess = true;\n            } else if ( tok.equals( LIST_ERRORS ) ) {\n                listErrors = true;\n            } else if (tok.equals(SWITCH_WEBAPP_INC)) {\n                webxmlFile = nextArg();\n                if (webxmlFile != null) {\n                    webxmlLevel = INC_WEBXML;\n                }\n            } else if (tok.equals(SWITCH_WEBAPP_XML)) {\n                webxmlFile = nextArg();\n                if (webxmlFile != null) {\n                    webxmlLevel = ALL_WEBXML;\n                }\n            } else if (tok.equals(SWITCH_MAPPED)) {\n                mappedFile = true;\n            } else if (tok.equals(SWITCH_XPOWERED_BY)) {\n                xpoweredBy = true;\n            } else if (tok.equals(SWITCH_TRIM_SPACES)) {\n                setTrimSpaces(true);\n            } else if (tok.equals(SWITCH_CLASSPATH)) {\n                setClassPath(nextArg());\n            } else if (tok.equals(SWITCH_SYSCLASSPATH)) {\n                setSystemClassPath(nextArg());\n            } else if (tok.startsWith(SWITCH_DIE)) {\n                try {\n                    dieLevel = Integer.parseInt(\n                        tok.substring(SWITCH_DIE.length()));\n                } catch (NumberFormatException nfe) {\n                    dieLevel = DEFAULT_DIE_LEVEL;\n                }\n            } else if (tok.equals(SWITCH_HELP)) {\n                helpNeeded = true;\n            } else if (tok.equals(SWITCH_SOURCE)) {\n                setCompilerSourceVM(nextArg());\n            } else if (tok.equals(SWITCH_TARGET)) {\n                setCompilerTargetVM(nextArg());\n            } else if (tok.equals(SWITCH_SMAP)) {\n                smapSuppressed = false;\n            } else if (tok.equals(SWITCH_DUMP_SMAP)) {\n                smapDumped = true;\n                smapSuppressed = false;\n            // START PWC 6386258\n            } else if (tok.equals(SWITCH_SCHEMAS_PREFIX)) {\n                setSchemaResourcePrefix(nextArg());\n            } else if (tok.equals(SWITCH_DTDS_PREFIX)) {\n                setDtdResourcePrefix(nextArg());\n            // END PWC 6386258\n            // START PWC 6385018\n            } else if (tok.equals(SWITCH_VALIDATE)) {\n                setValidateXml(true);\n            // END PWC 6385018\n            // START SJSAS 6393940\n            } else if (tok.equals(SWITCH_IGNORE_JSP_FRAGMENTS)) {\n                setIgnoreJspFragmentErrors(true);\n            // END SJSAS 6393940\n            } else if (tok.equals(SWITCH_DISABLE_POOLING)) {\n                setPoolingEnabled(false);\n            } else {\n                if (tok.startsWith(""-"")) {\n                    throw new JasperException(""Unrecognized option: "" + tok +\n                        "".  Use -help for help."");\n                }\n                if (!fullstop) {\n                    argPos--;\n                }\n                // Start treating the rest as JSP Pages\n                break;\n            }\n        }\n\n        // Add all extra arguments to the list of files\n        while( true ) {\n            String file = nextFile();\n            if( file==null ) break;\n            pages.add( file );\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspC.java'}, {'Syntax': 'System.out.println(Localizer.getMessage(""jspc.usage""))', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public void println(boolean x) throws IOException {\n        print(x);\n        println();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspWriterImpl.java'}, {'Syntax': 'Localizer.getMessage(""jspc.usage"")', 'FunctionName': 'getMessage', 'ArgsCount': 1, 'MethodBody': 'public static String getMessage(String errCode) {\n\tString errMsg = errCode;\n\ttry {\n\t    errMsg = bundle.getString(errCode);\n\t} catch (MissingResourceException e) {\n\t}\n\treturn errMsg;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Localizer.java'}, {'Syntax': 'jspc.execute()', 'FunctionName': 'execute', 'ArgsCount': 0, 'MethodBody': 'public void execute() throws JasperException {\n\n        // START SJSAS 6329723\n        jspErrors.clear();\n        // END SJSAS 6329723\n        // START SJSAS 6393940\n        dependents.clear();\n        // END SJSAS 6393940\n\n        try {\n\t    if (uriRoot == null) {\n\t\tif( pages.size() == 0 ) {\n\t\t    throw new JasperException(\n                        Localizer.getMessage(""jsp.error.jspc.missingTarget""));\n\t\t}\n\t\tString firstJsp=pages.get( 0 );\n                File firstJspF = new File( firstJsp );\n                if (!firstJspF.exists()) {\n                   throw new JasperException(\n                       Localizer.getMessage(""jspc.error.fileDoesNotExist"",\n                                            firstJsp));\n                }\n                locateUriRoot( firstJspF );\n\t    }\n\n            if (uriRoot == null) {\n\t\tthrow new JasperException(\n                    Localizer.getMessage(""jsp.error.jspc.no_uriroot""));\n\t    }\n\n\t    if( context==null )\n\t\tinitServletContext();\n\n\t    // No explicit pages, we\'ll process all .jsp in the webapp\n\t    if (pages.size() == 0) {\n\t\tscanFiles( new File( uriRoot ));\n\t    }\n\n\t    File uriRootF = new File(uriRoot);\n\t    if (!uriRootF.exists() || !uriRootF.isDirectory()) {\n\t\tthrow new JasperException(\n                    Localizer.getMessage(""jsp.error.jspc.uriroot_not_dir""));\n\t    }\n\n\t    initWebXml();\n\n            for (String nextjsp: pages) {\n                File fjsp = new File(nextjsp);\n                if (!fjsp.isAbsolute()) {\n                    fjsp = new File(uriRootF, nextjsp);\n                }\n                if (!fjsp.exists()) {\n                    if (log.isLoggable(Level.WARNING)) {\n                        log.warning(Localizer.getMessage\n                            (""jspc.error.fileDoesNotExist"", fjsp.toString()));\n                    }\n                    continue;\n                }\n                String s = fjsp.getAbsolutePath();\n                if (s.startsWith(uriRoot)) {\n                    nextjsp = s.substring(uriRoot.length());\n                }\n                if (nextjsp.startsWith(""."" + File.separatorChar)) {\n                    nextjsp = nextjsp.substring(2);\n                }\n\t\tprocessFile(nextjsp);\n\t    }\n\n            // START SJSAS 6393940\n            if (ignoreJspFragmentErrors) {\n                purgeJspFragmentErrors();\n            }\n            if (getFailOnError() && !jspErrors.isEmpty()) {\n                throw jspErrors.values().iterator().next();\n            }\n            // END SJJAS 6393940\n\n\t    completeWebXml();\n\t    \n            if (addWebXmlMappings) {\n                mergeIntoWebXml();\n            }\n\n        } catch (IOException ioe) {\n            throw new JasperException(ioe);\n\n        } catch (JasperException je) {\n            Throwable rootCause = je;\n            while (rootCause instanceof JasperException\n                    && ((JasperException) rootCause).getRootCause() != null) {\n                rootCause = ((JasperException) rootCause).getRootCause();\n            }\n            if (rootCause != je) {\n                rootCause.printStackTrace();\n            }\n            throw je;\n        } finally {\n            // START S1AS 5032338\n            if (loader != null) {\n                // XXX APACHE-COMMONS-LOGGING-PATCH\n                // LogFactory.release(loader);\n                // START SJSAS 6258619\n                // ClassLoaderUtil.releaseLoader(loader);\n                // END SJSAS 6258619\n            }\n            // END S1AS 5032338\n            // START SJSAS 6356052\n            if (rctxt != null) {\n                rctxt.destroy();\n            }\n            // END SJSAS 6356052\n\n            // START GlassFish 750\n            if (taglibs != null) {\n                taglibs.clear();\n            }\n            if (tagFileJarUrls != null) {\n                tagFileJarUrls.clear();\n            }\n            // END GlassFish 750\n        }\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspC.java'}, {'Syntax': 'System.err.println(je)', 'FunctionName': 'println', 'ArgsCount': 1, 'MethodBody': 'public void println(boolean x) throws IOException {\n        print(x);\n        println();\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspWriterImpl.java'}, {'Syntax': 'jspc.getDieLevel()', 'FunctionName': 'getDieLevel', 'ArgsCount': 0, 'MethodBody': 'public int getDieLevel() {\n        return dieLevel;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspC.java'}, {'Syntax': 'jspc.getDieLevel()', 'FunctionName': 'getDieLevel', 'ArgsCount': 0, 'MethodBody': 'public int getDieLevel() {\n        return dieLevel;\n    }', 'FileName': '/eclipse/packagedrone/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspC.java'}]"
6621cdaecda9bd4817b11346,objectify/objectify,"public AsyncDatastore asyncDatastore(final boolean enableGlobalCache) {
		if (this.entityMemcache != null && enableGlobalCache && this.registrar.isCacheEnabled())
			return new CachingAsyncDatastore(asyncDatastore(), this.entityMemcache);
		else
			return asyncDatastore();
	}",Might produce a caching version if caching is enabled .,src/main/java/com/googlecode/objectify/ObjectifyFactory.java,"[{'Syntax': 'this.registrar.isCacheEnabled()', 'FunctionName': 'isCacheEnabled', 'ArgsCount': 0, 'MethodBody': 'public boolean isCacheEnabled()\r\n\t{\r\n\t\treturn this.cacheEnabled;\r\n\t}', 'FileName': '/objectify/objectify/src/main/java/com/googlecode/objectify/impl/Registrar.java'}, {'Syntax': 'asyncDatastore()', 'FunctionName': 'asyncDatastore', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\t\t\tpublic AsyncDatastore asyncDatastore() {\r\n\t\t\t\treturn (AsyncDatastore)Proxy.newProxyInstance(this.getClass().getClassLoader(), new Class[]{AsyncDatastore.class}, new CountingProxy(super.asyncDatastore()));\r\n\t\t\t}', 'FileName': '/objectify/objectify/src/test/java/com/googlecode/objectify/test/QueryPerformanceTests.java'}, {'Syntax': 'asyncDatastore()', 'FunctionName': 'asyncDatastore', 'ArgsCount': 0, 'MethodBody': '@Override\r\n\t\t\tpublic AsyncDatastore asyncDatastore() {\r\n\t\t\t\treturn (AsyncDatastore)Proxy.newProxyInstance(this.getClass().getClassLoader(), new Class[]{AsyncDatastore.class}, new CountingProxy(super.asyncDatastore()));\r\n\t\t\t}', 'FileName': '/objectify/objectify/src/test/java/com/googlecode/objectify/test/QueryPerformanceTests.java'}]"
6621cdaecda9bd4817b11347,Unidata/thredds,"public TableRow getSelected() {
    if (list.size() == 0)
      return null;
    int sel = jtable.getSelectedRow();
    if (sel >= 0)
      return (TableRow) list.get(sel);
    else
      return null;
  }",Get the currently selected row .,ui/src/main/java/ucar/nc2/ui/table/JTableSorted.java,[]
6621cdaecda9bd4817b11348,cologneintelligence/FitGoodies,"public File getCommonDir(final File dir1, final File dir2) throws IOException {
		List<File> parts1 = getParentDirs(dir1);
		List<File> parts2 = getParentDirs(dir2);
		File matched = null;

		final int maxCommonSize = Math.min(parts1.size(), parts2.size());
		for (int i = 0; i < maxCommonSize; ++i) {
			if (parts1.get(i).equals(parts2.get(i))) {
				matched = parts1.get(i);
			} else {
				break;
			}
		}

		return matched;
	}",Gets the longest common parent directory path of two paths .,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java,"[{'Syntax': 'getParentDirs(dir1)', 'FunctionName': 'getParentDirs', 'ArgsCount': 1, 'MethodBody': 'private List<File> getParentDirs(File dir) throws IOException {\n\t\tList<File> dirs = new LinkedList<>();\n\n\t\tFile currentDir = dir.getCanonicalFile();\n\t\tFile lastDir;\n\t\tdo {\n\t\t\tdirs.add(0, currentDir);\n\t\t\tlastDir = currentDir;\n\t\t\tcurrentDir = currentDir.getParentFile();\n\t\t} while (currentDir != null && !currentDir.equals(lastDir));\n\n\t\treturn dirs;\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java'}, {'Syntax': 'getParentDirs(dir2)', 'FunctionName': 'getParentDirs', 'ArgsCount': 1, 'MethodBody': 'private List<File> getParentDirs(File dir) throws IOException {\n\t\tList<File> dirs = new LinkedList<>();\n\n\t\tFile currentDir = dir.getCanonicalFile();\n\t\tFile lastDir;\n\t\tdo {\n\t\t\tdirs.add(0, currentDir);\n\t\t\tlastDir = currentDir;\n\t\t\tcurrentDir = currentDir.getParentFile();\n\t\t} while (currentDir != null && !currentDir.equals(lastDir));\n\n\t\treturn dirs;\n\t}', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java'}, {'Syntax': 'parts1.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n        return cells.size();\n    }', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/htmlparser/FitRow.java'}, {'Syntax': 'parts2.size()', 'FunctionName': 'size', 'ArgsCount': 0, 'MethodBody': 'public int size() {\n        return cells.size();\n    }', 'FileName': '/cologneintelligence/FitGoodies/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/htmlparser/FitRow.java'}, {'Syntax': 'parts1.get(i).equals(parts2.get(i))', 'FunctionName': 'equals', 'ArgsCount': 1, 'MethodBody': '@Override\r\n    public boolean equals(final Object other) {\r\n        if (other == null) {\r\n            return false;\r\n        } else if (!(other instanceof ISBN)) {\r\n            return false;\r\n        } else {\r\n            return stripped().equals(((ISBN) other).stripped());\r\n        }\r\n    }', 'FileName': '/cologneintelligence/FitGoodies/archetype-fitgoodies-quickstart/src/main/resources/archetype-resources/src/main/java/ISBN.java'}, {'Syntax': 'parts1.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Book get(final Integer lookup) {\r\n        return books.get(lookup);\r\n    }', 'FileName': '/cologneintelligence/FitGoodies/archetype-fitgoodies-quickstart/src/main/resources/archetype-resources/src/main/java/Bookshelf.java'}, {'Syntax': 'parts2.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Book get(final Integer lookup) {\r\n        return books.get(lookup);\r\n    }', 'FileName': '/cologneintelligence/FitGoodies/archetype-fitgoodies-quickstart/src/main/resources/archetype-resources/src/main/java/Bookshelf.java'}, {'Syntax': 'parts1.get(i)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': 'public Book get(final Integer lookup) {\r\n        return books.get(lookup);\r\n    }', 'FileName': '/cologneintelligence/FitGoodies/archetype-fitgoodies-quickstart/src/main/resources/archetype-resources/src/main/java/Bookshelf.java'}]"
6621cdaecda9bd4817b11349,Unidata/thredds,"public static void cleanupBefore(String pathname, long trackerNumber) {
    for (long tnum = trackerNumber - 1; tnum > 0; tnum--) {
      File oldDatabaseFile = new File(pathname + datasetName + ""."" + tnum);
      if (!oldDatabaseFile.exists()) break;
      if (oldDatabaseFile.delete()) {
        catalogInitLog.info(""DatasetTrackerChronicle deleted {} "", oldDatabaseFile.getAbsolutePath());
      } else {
        catalogInitLog.error(""DatasetTrackerChronicle not able to delete {} "", oldDatabaseFile.getAbsolutePath());
      }
    }
  }",delete old databases,tdcommon/src/main/java/thredds/server/catalog/tracker/DatasetTrackerChronicle.java,[]
6621cdaecda9bd4817b1134a,glytching/junit-extensions,"public void restore() {
    for (String propertyName : propertyNames) {
      if (restoreProperties.containsKey(propertyName)) {
        // reinstate the original value
        System.setProperty(propertyName, restoreProperties.get(propertyName));
      } else {
        // remove the (previously unset) property
        System.clearProperty(propertyName);
      }
    }
  }",Reverse the system property sets performed on behalf of this restore context .,src/main/java/io/github/glytching/junit/extension/system/RestoreContext.java,[]
6621cdaecda9bd4817b1134b,rackerlabs/blueflood,"public boolean isAcceptValid(HttpHeaders headers) {
        String accept = headers.get(HttpHeaders.Names.ACCEPT);

        // if we get no Accept (which means */*), or */*,
        // or application/json, then it's valid
        return ( Strings.isNullOrEmpty(accept) ||
                accept.contains(ACCEPT_ALL) ||
                accept.toLowerCase().contains(MEDIA_TYPE_APPLICATION_JSON));
    }",Checks the Accept header to see if clients accept the correct media type,blueflood-http/src/main/java/com/rackspacecloud/blueflood/http/MediaTypeChecker.java,"[{'Syntax': 'headers.get(HttpHeaders.Names.ACCEPT)', 'FunctionName': 'get', 'ArgsCount': 1, 'MethodBody': '@Override\n            public MetricColumnFamily get(Granularity gran) {\n                return columnFamilyMap.get(gran);\n            }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/io/CassandraModel.java'}, {'Syntax': 'accept.contains(ACCEPT_ALL)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(Object obj) {\n        return hashes.contains(obj.hashCode());\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/types/BluefloodSetRollup.java'}, {'Syntax': 'accept.toLowerCase().contains(MEDIA_TYPE_APPLICATION_JSON)', 'FunctionName': 'contains', 'ArgsCount': 1, 'MethodBody': 'public boolean contains(Object obj) {\n        return hashes.contains(obj.hashCode());\n    }', 'FileName': '/rackerlabs/blueflood/blueflood-core/src/main/java/com/rackspacecloud/blueflood/types/BluefloodSetRollup.java'}]"
