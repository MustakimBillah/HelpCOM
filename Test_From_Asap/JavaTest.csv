repo,path,func_name,original_string,language,code,code_tokens,docstring,docstring_tokens,sha,url,partition
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/core/html/HTMLLayoutBase.java,HTMLLayoutBase.getEffectiveConverterMap,"public Map<String, String> getEffectiveConverterMap() {
    Map<String, String> effectiveMap = new HashMap<String, String>();

    // add the least specific map fist
    Map<String, String> defaultMap = getDefaultConverterMap();
    if (defaultMap != null) {
      effectiveMap.putAll(defaultMap);
    }

    // contextMap is more specific than the default map
    Context context = getContext();
    if (context != null) {
      @SuppressWarnings(""unchecked"")
      Map<String, String> contextMap = (Map<String, String>) context
          .getObject(CoreConstants.PATTERN_RULE_REGISTRY);
      if (contextMap != null) {
        effectiveMap.putAll(contextMap);
      }
    }
    return effectiveMap;
  }",java,"public Map<String, String> getEffectiveConverterMap() {
    Map<String, String> effectiveMap = new HashMap<String, String>();

    // add the least specific map fist
    Map<String, String> defaultMap = getDefaultConverterMap();
    if (defaultMap != null) {
      effectiveMap.putAll(defaultMap);
    }

    // contextMap is more specific than the default map
    Context context = getContext();
    if (context != null) {
      @SuppressWarnings(""unchecked"")
      Map<String, String> contextMap = (Map<String, String>) context
          .getObject(CoreConstants.PATTERN_RULE_REGISTRY);
      if (contextMap != null) {
        effectiveMap.putAll(contextMap);
      }
    }
    return effectiveMap;
  }","['public', 'Map', '<', 'String', ',', 'String', '>', 'getEffectiveConverterMap', '(', ')', '{', 'Map', '<', 'String', ',', 'String', '>', 'effectiveMap', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', '// add the least specific map fist', 'Map', '<', 'String', ',', 'String', '>', 'defaultMap', '=', 'getDefaultConverterMap', '(', ')', ';', 'if', '(', 'defaultMap', '!=', 'null', ')', '{', 'effectiveMap', '.', 'putAll', '(', 'defaultMap', ')', ';', '}', '// contextMap is more specific than the default map', 'Context', 'context', '=', 'getContext', '(', ')', ';', 'if', '(', 'context', '!=', 'null', ')', '{', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'Map', '<', 'String', ',', 'String', '>', 'contextMap', '=', '(', 'Map', '<', 'String', ',', 'String', '>', ')', 'context', '.', 'getObject', '(', 'CoreConstants', '.', 'PATTERN_RULE_REGISTRY', ')', ';', 'if', '(', 'contextMap', '!=', 'null', ')', '{', 'effectiveMap', '.', 'putAll', '(', 'contextMap', ')', ';', '}', '}', 'return', 'effectiveMap', ';', '}']","Returns a map where the default converter map is merged with the map
contained in the context.
@return the converter map","['Returns', 'a', 'map', 'where', 'the', 'default', 'converter', 'map', 'is', 'merged', 'with', 'the', 'map', 'contained', 'in', 'the', 'context', '.']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/html/HTMLLayoutBase.java#L110-L130,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/geoloc/vertical/WRFEta.java,WRFEta.addStagger,"private ArrayDouble.D3 addStagger(ArrayDouble.D3 array, int dimIndex) {

    //ADD: assert 0<=dimIndex<=2

    int[] shape = array.getShape();
    int[] newShape = new int[3];
    System.arraycopy(shape, 0, newShape, 0, 3);

    newShape[dimIndex]++;
    int ni = newShape[0];
    int nj = newShape[1];
    int nk = newShape[2];
    ArrayDouble.D3 newArray = new ArrayDouble.D3(ni, nj, nk);
    //Index newIndex = newArray.getIndex();

    //extract 1d array to be extended
    int n = shape[dimIndex];  //length of extracted array
    double[] d = new double[n];  //tmp array to hold extracted values
    int[] eshape = new int[3];       //shape of extracted array
    int[] neweshape = new int[3];  //shape of new array slice to write into
    for (int i = 0; i < 3; i++) {
      eshape[i] = (i == dimIndex)
          ? n
          : 1;
      neweshape[i] = (i == dimIndex)
          ? n + 1
          : 1;
    }
    int[] origin = new int[3];

    try {

      //loop through the other 2 dimensions and ""extrapinterpolate"" the other
      for (int i = 0; i < ((dimIndex == 0)
          ? 1
          : ni); i++) {
        for (int j = 0; j < ((dimIndex == 1)
            ? 1
            : nj); j++) {
          for (int k = 0; k < ((dimIndex == 2)
              ? 1
              : nk); k++) {
            origin[0] = i;
            origin[1] = j;
            origin[2] = k;
            IndexIterator it = array.section(origin,
                eshape).getIndexIterator();
            for (int l = 0; l < n; l++) {
              d[l] = it.getDoubleNext();  //get the original values
            }
            double[] d2 = extrapinterpolate(d);  //compute new values
            //define slice of new array to write into
            IndexIterator newit =
                newArray.section(origin,
                    neweshape).getIndexIterator();
            for (int l = 0; l < n + 1; l++) {
              newit.setDoubleNext(d2[l]);
            }
          }
        }
      }
    } catch (InvalidRangeException e) {
      //ADD: report error?
      return null;
    }

    return newArray;
  }",java,"private ArrayDouble.D3 addStagger(ArrayDouble.D3 array, int dimIndex) {

    //ADD: assert 0<=dimIndex<=2

    int[] shape = array.getShape();
    int[] newShape = new int[3];
    System.arraycopy(shape, 0, newShape, 0, 3);

    newShape[dimIndex]++;
    int ni = newShape[0];
    int nj = newShape[1];
    int nk = newShape[2];
    ArrayDouble.D3 newArray = new ArrayDouble.D3(ni, nj, nk);
    //Index newIndex = newArray.getIndex();

    //extract 1d array to be extended
    int n = shape[dimIndex];  //length of extracted array
    double[] d = new double[n];  //tmp array to hold extracted values
    int[] eshape = new int[3];       //shape of extracted array
    int[] neweshape = new int[3];  //shape of new array slice to write into
    for (int i = 0; i < 3; i++) {
      eshape[i] = (i == dimIndex)
          ? n
          : 1;
      neweshape[i] = (i == dimIndex)
          ? n + 1
          : 1;
    }
    int[] origin = new int[3];

    try {

      //loop through the other 2 dimensions and ""extrapinterpolate"" the other
      for (int i = 0; i < ((dimIndex == 0)
          ? 1
          : ni); i++) {
        for (int j = 0; j < ((dimIndex == 1)
            ? 1
            : nj); j++) {
          for (int k = 0; k < ((dimIndex == 2)
              ? 1
              : nk); k++) {
            origin[0] = i;
            origin[1] = j;
            origin[2] = k;
            IndexIterator it = array.section(origin,
                eshape).getIndexIterator();
            for (int l = 0; l < n; l++) {
              d[l] = it.getDoubleNext();  //get the original values
            }
            double[] d2 = extrapinterpolate(d);  //compute new values
            //define slice of new array to write into
            IndexIterator newit =
                newArray.section(origin,
                    neweshape).getIndexIterator();
            for (int l = 0; l < n + 1; l++) {
              newit.setDoubleNext(d2[l]);
            }
          }
        }
      }
    } catch (InvalidRangeException e) {
      //ADD: report error?
      return null;
    }

    return newArray;
  }","['private', 'ArrayDouble', '.', 'D3', 'addStagger', '(', 'ArrayDouble', '.', 'D3', 'array', ',', 'int', 'dimIndex', ')', '{', '//ADD: assert 0<=dimIndex<=2\r', 'int', '[', ']', 'shape', '=', 'array', '.', 'getShape', '(', ')', ';', 'int', '[', ']', 'newShape', '=', 'new', 'int', '[', '3', ']', ';', 'System', '.', 'arraycopy', '(', 'shape', ',', '0', ',', 'newShape', ',', '0', ',', '3', ')', ';', 'newShape', '[', 'dimIndex', ']', '++', ';', 'int', 'ni', '=', 'newShape', '[', '0', ']', ';', 'int', 'nj', '=', 'newShape', '[', '1', ']', ';', 'int', 'nk', '=', 'newShape', '[', '2', ']', ';', 'ArrayDouble', '.', 'D3', 'newArray', '=', 'new', 'ArrayDouble', '.', 'D3', '(', 'ni', ',', 'nj', ',', 'nk', ')', ';', '//Index newIndex = newArray.getIndex();\r', '//extract 1d array to be extended\r', 'int', 'n', '=', 'shape', '[', 'dimIndex', ']', ';', '//length of extracted array\r', 'double', '[', ']', 'd', '=', 'new', 'double', '[', 'n', ']', ';', '//tmp array to hold extracted values\r', 'int', '[', ']', 'eshape', '=', 'new', 'int', '[', '3', ']', ';', '//shape of extracted array\r', 'int', '[', ']', 'neweshape', '=', 'new', 'int', '[', '3', ']', ';', '//shape of new array slice to write into\r', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '3', ';', 'i', '++', ')', '{', 'eshape', '[', 'i', ']', '=', '(', 'i', '==', 'dimIndex', ')', '?', 'n', ':', '1', ';', 'neweshape', '[', 'i', ']', '=', '(', 'i', '==', 'dimIndex', ')', '?', 'n', '+', '1', ':', '1', ';', '}', 'int', '[', ']', 'origin', '=', 'new', 'int', '[', '3', ']', ';', 'try', '{', '//loop through the other 2 dimensions and ""extrapinterpolate"" the other\r', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '(', '(', 'dimIndex', '==', '0', ')', '?', '1', ':', 'ni', ')', ';', 'i', '++', ')', '{', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', '(', '(', 'dimIndex', '==', '1', ')', '?', '1', ':', 'nj', ')', ';', 'j', '++', ')', '{', 'for', '(', 'int', 'k', '=', '0', ';', 'k', '<', '(', '(', 'dimIndex', '==', '2', ')', '?', '1', ':', 'nk', ')', ';', 'k', '++', ')', '{', 'origin', '[', '0', ']', '=', 'i', ';', 'origin', '[', '1', ']', '=', 'j', ';', 'origin', '[', '2', ']', '=', 'k', ';', 'IndexIterator', 'it', '=', 'array', '.', 'section', '(', 'origin', ',', 'eshape', ')', '.', 'getIndexIterator', '(', ')', ';', 'for', '(', 'int', 'l', '=', '0', ';', 'l', '<', 'n', ';', 'l', '++', ')', '{', 'd', '[', 'l', ']', '=', 'it', '.', 'getDoubleNext', '(', ')', ';', '//get the original values\r', '}', 'double', '[', ']', 'd2', '=', 'extrapinterpolate', '(', 'd', ')', ';', '//compute new values\r', '//define slice of new array to write into\r', 'IndexIterator', 'newit', '=', 'newArray', '.', 'section', '(', 'origin', ',', 'neweshape', ')', '.', 'getIndexIterator', '(', ')', ';', 'for', '(', 'int', 'l', '=', '0', ';', 'l', '<', 'n', '+', '1', ';', 'l', '++', ')', '{', 'newit', '.', 'setDoubleNext', '(', 'd2', '[', 'l', ']', ')', ';', '}', '}', '}', '}', '}', 'catch', '(', 'InvalidRangeException', 'e', ')', '{', '//ADD: report error?\r', 'return', 'null', ';', '}', 'return', 'newArray', ';', '}']","Add 1 to the size of the array for the given dimension.
Use linear average and interpolation to fill in the values.

@param array    use this array
@param dimIndex use this dimension
@return new array with stagger","['Add', '1', 'to', 'the', 'size', 'of', 'the', 'array', 'for', 'the', 'given', 'dimension', '.', 'Use', 'linear', 'average', 'and', 'interpolation', 'to', 'fill', 'in', 'the', 'values', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/geoloc/vertical/WRFEta.java#L189-L256,test
streamsets/datacollector,stagesupport/src/main/java/com/streamsets/pipeline/lib/util/OffsetUtil.java,OffsetUtil.deserializeOffsetMap,"@SuppressWarnings(""unchecked"")
  public static Map<String, String> deserializeOffsetMap(String lastSourceOffset) throws IOException {
    Map<String, String> offsetMap;
    if (lastSourceOffset == null || lastSourceOffset.isEmpty()) {
      offsetMap = new HashMap<>();
    } else {
      offsetMap = JSON_MAPPER.readValue(lastSourceOffset, Map.class);
    }
    return offsetMap;
  }",java,"@SuppressWarnings(""unchecked"")
  public static Map<String, String> deserializeOffsetMap(String lastSourceOffset) throws IOException {
    Map<String, String> offsetMap;
    if (lastSourceOffset == null || lastSourceOffset.isEmpty()) {
      offsetMap = new HashMap<>();
    } else {
      offsetMap = JSON_MAPPER.readValue(lastSourceOffset, Map.class);
    }
    return offsetMap;
  }","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', 'Map', '<', 'String', ',', 'String', '>', 'deserializeOffsetMap', '(', 'String', 'lastSourceOffset', ')', 'throws', 'IOException', '{', 'Map', '<', 'String', ',', 'String', '>', 'offsetMap', ';', 'if', '(', 'lastSourceOffset', '==', 'null', '||', 'lastSourceOffset', '.', 'isEmpty', '(', ')', ')', '{', 'offsetMap', '=', 'new', 'HashMap', '<>', '(', ')', ';', '}', 'else', '{', 'offsetMap', '=', 'JSON_MAPPER', '.', 'readValue', '(', 'lastSourceOffset', ',', 'Map', '.', 'class', ')', ';', '}', 'return', 'offsetMap', ';', '}']","Deserialize String offset to Map of table to offset
@param lastSourceOffset Serialized offset String
@return Map of table to lastOffset
@throws StageException When Deserialization exception happens","['Deserialize', 'String', 'offset', 'to', 'Map', 'of', 'table', 'to', 'offset']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/stagesupport/src/main/java/com/streamsets/pipeline/lib/util/OffsetUtil.java#L47-L56,test
abmargb/jamppa,src/main/java/org/jivesoftware/smack/Connection.java,Connection.addPacketInterceptor,"public void addPacketInterceptor(PacketInterceptor packetInterceptor,
            PacketFilter packetFilter) {
        if (packetInterceptor == null) {
            throw new NullPointerException(""Packet interceptor is null."");
        }
        interceptors.put(packetInterceptor, new InterceptorWrapper(
                packetInterceptor, packetFilter));
    }",java,"public void addPacketInterceptor(PacketInterceptor packetInterceptor,
            PacketFilter packetFilter) {
        if (packetInterceptor == null) {
            throw new NullPointerException(""Packet interceptor is null."");
        }
        interceptors.put(packetInterceptor, new InterceptorWrapper(
                packetInterceptor, packetFilter));
    }","['public', 'void', 'addPacketInterceptor', '(', 'PacketInterceptor', 'packetInterceptor', ',', 'PacketFilter', 'packetFilter', ')', '{', 'if', '(', 'packetInterceptor', '==', 'null', ')', '{', 'throw', 'new', 'NullPointerException', '(', '""Packet interceptor is null.""', ')', ';', '}', 'interceptors', '.', 'put', '(', 'packetInterceptor', ',', 'new', 'InterceptorWrapper', '(', 'packetInterceptor', ',', 'packetFilter', ')', ')', ';', '}']","Registers a packet interceptor with this connection. The interceptor will
be invoked every time a packet is about to be sent by this connection.
Interceptors may modify the packet to be sent. A packet filter determines
which packets will be delivered to the interceptor.

<p>
NOTE: For a similar functionality on incoming packets, see
{@link #addPacketListener(PacketListener, PacketFilter)}.

@param packetInterceptor
the packet interceptor to notify of packets about to be sent.
@param packetFilter
the packet filter to use.","['Registers', 'a', 'packet', 'interceptor', 'with', 'this', 'connection', '.', 'The', 'interceptor', 'will', 'be', 'invoked', 'every', 'time', 'a', 'packet', 'is', 'about', 'to', 'be', 'sent', 'by', 'this', 'connection', '.', 'Interceptors', 'may', 'modify', 'the', 'packet', 'to', 'be', 'sent', '.', 'A', 'packet', 'filter', 'determines', 'which', 'packets', 'will', 'be', 'delivered', 'to', 'the', 'interceptor', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/Connection.java#L752-L759,test
rupertlssmith/lojix,lojix/power_model/src/main/com/thesett/aima/attribute/time/BitHackUtils.java,BitHackUtils.getCharacterCountDecimal,"public static int getCharacterCountDecimal(long integerValue, int scale)
    {
        boolean isNeg = integerValue < 0;

        // Work out how many digits will be needed for the number, adding space for the minus sign, the decimal
        // point and leading zeros if needed.
        int totalDigits = BitHackUtils.getCharacterCountInt64(integerValue);
        int totalLength = totalDigits;

        if (isNeg)
        {
            totalDigits--; // Minus sign already accounted for.
        }

        if (scale > 0)
        {
            totalLength++; // For the decimal point.

            if (scale >= totalDigits)
            {
                // For the leading zeros (+ 1 for the zero before decimal point).
                totalLength += (scale - totalDigits) + 1;
            }
        }
        else
        {
            // Add a zero for each negative point in scale
            totalLength -= scale;
        }

        return totalLength;
    }",java,"public static int getCharacterCountDecimal(long integerValue, int scale)
    {
        boolean isNeg = integerValue < 0;

        // Work out how many digits will be needed for the number, adding space for the minus sign, the decimal
        // point and leading zeros if needed.
        int totalDigits = BitHackUtils.getCharacterCountInt64(integerValue);
        int totalLength = totalDigits;

        if (isNeg)
        {
            totalDigits--; // Minus sign already accounted for.
        }

        if (scale > 0)
        {
            totalLength++; // For the decimal point.

            if (scale >= totalDigits)
            {
                // For the leading zeros (+ 1 for the zero before decimal point).
                totalLength += (scale - totalDigits) + 1;
            }
        }
        else
        {
            // Add a zero for each negative point in scale
            totalLength -= scale;
        }

        return totalLength;
    }","['public', 'static', 'int', 'getCharacterCountDecimal', '(', 'long', 'integerValue', ',', 'int', 'scale', ')', '{', 'boolean', 'isNeg', '=', 'integerValue', '<', '0', ';', '// Work out how many digits will be needed for the number, adding space for the minus sign, the decimal', '// point and leading zeros if needed.', 'int', 'totalDigits', '=', 'BitHackUtils', '.', 'getCharacterCountInt64', '(', 'integerValue', ')', ';', 'int', 'totalLength', '=', 'totalDigits', ';', 'if', '(', 'isNeg', ')', '{', 'totalDigits', '--', ';', '// Minus sign already accounted for.', '}', 'if', '(', 'scale', '>', '0', ')', '{', 'totalLength', '++', ';', '// For the decimal point.', 'if', '(', 'scale', '>=', 'totalDigits', ')', '{', '// For the leading zeros (+ 1 for the zero before decimal point).', 'totalLength', '+=', '(', 'scale', '-', 'totalDigits', ')', '+', '1', ';', '}', '}', 'else', '{', '// Add a zero for each negative point in scale', 'totalLength', '-=', 'scale', ';', '}', 'return', 'totalLength', ';', '}']","Calculates the number of ASCII characters that will be needed to represent a specified signed decimal number.

@param  integerValue The integer component of the decimal number.
@param  scale        The scale component of the decimal number.

@return The number of ASCII character need to represent a signed decimal number.","['Calculates', 'the', 'number', 'of', 'ASCII', 'characters', 'that', 'will', 'be', 'needed', 'to', 'represent', 'a', 'specified', 'signed', 'decimal', 'number', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/power_model/src/main/com/thesett/aima/attribute/time/BitHackUtils.java#L419-L450,test
real-logic/aeron,aeron-archive/src/main/java/io/aeron/archive/status/RecordingPos.java,RecordingPos.isActive,"public static boolean isActive(final CountersReader countersReader, final int counterId, final long recordingId)
    {
        final DirectBuffer buffer = countersReader.metaDataBuffer();

        if (countersReader.getCounterState(counterId) == RECORD_ALLOCATED)
        {
            final int recordOffset = CountersReader.metaDataOffset(counterId);

            return
                buffer.getInt(recordOffset + TYPE_ID_OFFSET) == RECORDING_POSITION_TYPE_ID &&
                buffer.getLong(recordOffset + KEY_OFFSET + RECORDING_ID_OFFSET) == recordingId;
        }

        return false;
    }",java,"public static boolean isActive(final CountersReader countersReader, final int counterId, final long recordingId)
    {
        final DirectBuffer buffer = countersReader.metaDataBuffer();

        if (countersReader.getCounterState(counterId) == RECORD_ALLOCATED)
        {
            final int recordOffset = CountersReader.metaDataOffset(counterId);

            return
                buffer.getInt(recordOffset + TYPE_ID_OFFSET) == RECORDING_POSITION_TYPE_ID &&
                buffer.getLong(recordOffset + KEY_OFFSET + RECORDING_ID_OFFSET) == recordingId;
        }

        return false;
    }","['public', 'static', 'boolean', 'isActive', '(', 'final', 'CountersReader', 'countersReader', ',', 'final', 'int', 'counterId', ',', 'final', 'long', 'recordingId', ')', '{', 'final', 'DirectBuffer', 'buffer', '=', 'countersReader', '.', 'metaDataBuffer', '(', ')', ';', 'if', '(', 'countersReader', '.', 'getCounterState', '(', 'counterId', ')', '==', 'RECORD_ALLOCATED', ')', '{', 'final', 'int', 'recordOffset', '=', 'CountersReader', '.', 'metaDataOffset', '(', 'counterId', ')', ';', 'return', 'buffer', '.', 'getInt', '(', 'recordOffset', '+', 'TYPE_ID_OFFSET', ')', '==', 'RECORDING_POSITION_TYPE_ID', '&&', 'buffer', '.', 'getLong', '(', 'recordOffset', '+', 'KEY_OFFSET', '+', 'RECORDING_ID_OFFSET', ')', '==', 'recordingId', ';', '}', 'return', 'false', ';', '}']","Is the recording counter still active.

@param countersReader to search within.
@param counterId      to search for.
@param recordingId    to confirm it is still the same value.
@return true if the counter is still active otherwise false.","['Is', 'the', 'recording', 'counter', 'still', 'active', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-archive/src/main/java/io/aeron/archive/status/RecordingPos.java#L215-L229,test
phax/ph-genericode,src/main/java/com/helger/genericode/Genericode10Helper.java,Genericode10Helper.isKeyColumn,"public static boolean isKeyColumn (@Nonnull final ColumnSet aColumnSet, @Nullable final String sColumnID)
  {
    if (sColumnID != null)
      for (final Key aKey : getAllKeys (aColumnSet))
        for (final KeyColumnRef aColumnRef : aKey.getColumnRef ())
          if (aColumnRef.getRef () instanceof Column)
            if (((Column) aColumnRef.getRef ()).getId ().equals (sColumnID))
              return true;
    return false;
  }",java,"public static boolean isKeyColumn (@Nonnull final ColumnSet aColumnSet, @Nullable final String sColumnID)
  {
    if (sColumnID != null)
      for (final Key aKey : getAllKeys (aColumnSet))
        for (final KeyColumnRef aColumnRef : aKey.getColumnRef ())
          if (aColumnRef.getRef () instanceof Column)
            if (((Column) aColumnRef.getRef ()).getId ().equals (sColumnID))
              return true;
    return false;
  }","['public', 'static', 'boolean', 'isKeyColumn', '(', '@', 'Nonnull', 'final', 'ColumnSet', 'aColumnSet', ',', '@', 'Nullable', 'final', 'String', 'sColumnID', ')', '{', 'if', '(', 'sColumnID', '!=', 'null', ')', 'for', '(', 'final', 'Key', 'aKey', ':', 'getAllKeys', '(', 'aColumnSet', ')', ')', 'for', '(', 'final', 'KeyColumnRef', 'aColumnRef', ':', 'aKey', '.', 'getColumnRef', '(', ')', ')', 'if', '(', 'aColumnRef', '.', 'getRef', '(', ')', 'instanceof', 'Column', ')', 'if', '(', '(', '(', 'Column', ')', 'aColumnRef', '.', 'getRef', '(', ')', ')', '.', 'getId', '(', ')', '.', 'equals', '(', 'sColumnID', ')', ')', 'return', 'true', ';', 'return', 'false', ';', '}']","Check if the passed column ID is a key column in the specified column set

@param aColumnSet
The column set to scan. May not be <code>null</code>.
@param sColumnID
The column ID to search. May be <code>null</code>.
@return <code>true</code> if the passed column ID is a key column","['Check', 'if', 'the', 'passed', 'column', 'ID', 'is', 'a', 'key', 'column', 'in', 'the', 'specified', 'column', 'set']",76ef5bb0744af42bd3decd41c2bf0829c87ae71d,https://github.com/phax/ph-genericode/blob/76ef5bb0744af42bd3decd41c2bf0829c87ae71d/src/main/java/com/helger/genericode/Genericode10Helper.java#L291-L300,test
orientechnologies/orientdb,server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java,ODistributedConfiguration.getClustersOwnedByServer,"public Set<String> getClustersOwnedByServer(final String iNodeName) {
    final Set<String> clusters = new HashSet<String>();
    for (String cl : getClusterNames()) {
      if (iNodeName.equals(getClusterOwner(cl)))
        clusters.add(cl);
    }
    return clusters;
  }",java,"public Set<String> getClustersOwnedByServer(final String iNodeName) {
    final Set<String> clusters = new HashSet<String>();
    for (String cl : getClusterNames()) {
      if (iNodeName.equals(getClusterOwner(cl)))
        clusters.add(cl);
    }
    return clusters;
  }","['public', 'Set', '<', 'String', '>', 'getClustersOwnedByServer', '(', 'final', 'String', 'iNodeName', ')', '{', 'final', 'Set', '<', 'String', '>', 'clusters', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'for', '(', 'String', 'cl', ':', 'getClusterNames', '(', ')', ')', '{', 'if', '(', 'iNodeName', '.', 'equals', '(', 'getClusterOwner', '(', 'cl', ')', ')', ')', 'clusters', '.', 'add', '(', 'cl', ')', ';', '}', 'return', 'clusters', ';', '}']","Returns the set of clusters where server is the owner.

@param iNodeName Server name","['Returns', 'the', 'set', 'of', 'clusters', 'where', 'server', 'is', 'the', 'owner', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java#L434-L441,test
cglib/cglib,cglib/src/main/java/net/sf/cglib/util/ParallelSorter.java,ParallelSorter.mergeSort,"public void mergeSort(int index, int lo, int hi, Comparator cmp) {
        chooseComparer(index, cmp);
        super.mergeSort(lo, hi - 1);
    }",java,"public void mergeSort(int index, int lo, int hi, Comparator cmp) {
        chooseComparer(index, cmp);
        super.mergeSort(lo, hi - 1);
    }","['public', 'void', 'mergeSort', '(', 'int', 'index', ',', 'int', 'lo', ',', 'int', 'hi', ',', 'Comparator', 'cmp', ')', '{', 'chooseComparer', '(', 'index', ',', 'cmp', ')', ';', 'super', '.', 'mergeSort', '(', 'lo', ',', 'hi', '-', '1', ')', ';', '}']","Sort the arrays using an in-place merge sort.
@param index array (column) to sort by
@param lo starting array index (row), inclusive
@param hi ending array index (row), exclusive
@param cmp Comparator to use if the specified column is non-primitive","['Sort', 'the', 'arrays', 'using', 'an', 'in', '-', 'place', 'merge', 'sort', '.']",cd01695c11fd3c66641b295b9596f74cf13c548b,https://github.com/cglib/cglib/blob/cd01695c11fd3c66641b295b9596f74cf13c548b/cglib/src/main/java/net/sf/cglib/util/ParallelSorter.java#L148-L151,test
real-logic/aeron,aeron-driver/src/main/java/io/aeron/driver/MediaDriver.java,MediaDriver.main,"public static void main(final String[] args)
    {
        loadPropertiesFiles(args);

        final ShutdownSignalBarrier barrier = new ShutdownSignalBarrier();
        final MediaDriver.Context ctx = new MediaDriver.Context();

        ctx.terminationHook(barrier::signal);

        try (MediaDriver ignore = MediaDriver.launch(ctx))
        {
            barrier.await();

            System.out.println(""Shutdown Driver..."");
        }
    }",java,"public static void main(final String[] args)
    {
        loadPropertiesFiles(args);

        final ShutdownSignalBarrier barrier = new ShutdownSignalBarrier();
        final MediaDriver.Context ctx = new MediaDriver.Context();

        ctx.terminationHook(barrier::signal);

        try (MediaDriver ignore = MediaDriver.launch(ctx))
        {
            barrier.await();

            System.out.println(""Shutdown Driver..."");
        }
    }","['public', 'static', 'void', 'main', '(', 'final', 'String', '[', ']', 'args', ')', '{', 'loadPropertiesFiles', '(', 'args', ')', ';', 'final', 'ShutdownSignalBarrier', 'barrier', '=', 'new', 'ShutdownSignalBarrier', '(', ')', ';', 'final', 'MediaDriver', '.', 'Context', 'ctx', '=', 'new', 'MediaDriver', '.', 'Context', '(', ')', ';', 'ctx', '.', 'terminationHook', '(', 'barrier', '::', 'signal', ')', ';', 'try', '(', 'MediaDriver', 'ignore', '=', 'MediaDriver', '.', 'launch', '(', 'ctx', ')', ')', '{', 'barrier', '.', 'await', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Shutdown Driver...""', ')', ';', '}', '}']","Start Media Driver as a stand-alone process.

@param args command line arguments","['Start', 'Media', 'Driver', 'as', 'a', 'stand', '-', 'alone', 'process', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-driver/src/main/java/io/aeron/driver/MediaDriver.java#L81-L96,test
ToastShaman/dropwizard-auth-jwt,src/main/java/com/github/toastshaman/dropwizard/auth/jwt/CachingJwtAuthenticator.java,CachingJwtAuthenticator.invalidateAll,"public void invalidateAll(Predicate<? super JwtContext> predicate) {
        cache.asMap().entrySet().stream()
            .map(entry -> entry.getValue().getKey())
            .filter(predicate::test)
            .map(JwtContext::getJwt)
            .forEach(cache::invalidate);
    }",java,"public void invalidateAll(Predicate<? super JwtContext> predicate) {
        cache.asMap().entrySet().stream()
            .map(entry -> entry.getValue().getKey())
            .filter(predicate::test)
            .map(JwtContext::getJwt)
            .forEach(cache::invalidate);
    }","['public', 'void', 'invalidateAll', '(', 'Predicate', '<', '?', 'super', 'JwtContext', '>', 'predicate', ')', '{', 'cache', '.', 'asMap', '(', ')', '.', 'entrySet', '(', ')', '.', 'stream', '(', ')', '.', 'map', '(', 'entry', '->', 'entry', '.', 'getValue', '(', ')', '.', 'getKey', '(', ')', ')', '.', 'filter', '(', 'predicate', '::', 'test', ')', '.', 'map', '(', 'JwtContext', '::', 'getJwt', ')', '.', 'forEach', '(', 'cache', '::', 'invalidate', ')', ';', '}']","Discards any cached principal for the collection of credentials satisfying the given predicate.

@param predicate a predicate to filter credentials","['Discards', 'any', 'cached', 'principal', 'for', 'the', 'collection', 'of', 'credentials', 'satisfying', 'the', 'given', 'predicate', '.']",17850c4ad75d1209b1218d140dcef399f4061988,https://github.com/ToastShaman/dropwizard-auth-jwt/blob/17850c4ad75d1209b1218d140dcef399f4061988/src/main/java/com/github/toastshaman/dropwizard/auth/jwt/CachingJwtAuthenticator.java#L99-L105,test
RestComm/jain-slee,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java,ActivityContextCacheData.attachTimer,"public boolean attachTimer(TimerID timerID) {
		final Node node = getAttachedTimersNode(true);
		if (!node.hasChild(timerID)) {
			node.addChild(Fqn.fromElements(timerID));
			return true;
		}
		else {
			return false;
		}
	}",java,"public boolean attachTimer(TimerID timerID) {
		final Node node = getAttachedTimersNode(true);
		if (!node.hasChild(timerID)) {
			node.addChild(Fqn.fromElements(timerID));
			return true;
		}
		else {
			return false;
		}
	}","['public', 'boolean', 'attachTimer', '(', 'TimerID', 'timerID', ')', '{', 'final', 'Node', 'node', '=', 'getAttachedTimersNode', '(', 'true', ')', ';', 'if', '(', '!', 'node', '.', 'hasChild', '(', 'timerID', ')', ')', '{', 'node', '.', 'addChild', '(', 'Fqn', '.', 'fromElements', '(', 'timerID', ')', ')', ';', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","Attaches a timer

@param timerID","['Attaches', 'a', 'timer']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java#L255-L264,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspWriterImpl.java,JspWriterImpl.allocateCharBuffer,"private void allocateCharBuffer() {
        if (bufferSize == 0) return;
        
        if (bufferSize > MAX_BUFFER_SIZE) {
            buf =  new CharBuffer(new char[bufferSize], 0, bufferSize);
        } else {
            buf = getCharBufferThreadLocalPool().allocate(bufferSize);
        }
    }",java,"private void allocateCharBuffer() {
        if (bufferSize == 0) return;
        
        if (bufferSize > MAX_BUFFER_SIZE) {
            buf =  new CharBuffer(new char[bufferSize], 0, bufferSize);
        } else {
            buf = getCharBufferThreadLocalPool().allocate(bufferSize);
        }
    }","['private', 'void', 'allocateCharBuffer', '(', ')', '{', 'if', '(', 'bufferSize', '==', '0', ')', 'return', ';', 'if', '(', 'bufferSize', '>', 'MAX_BUFFER_SIZE', ')', '{', 'buf', '=', 'new', 'CharBuffer', '(', 'new', 'char', '[', 'bufferSize', ']', ',', '0', ',', 'bufferSize', ')', ';', '}', 'else', '{', 'buf', '=', 'getCharBufferThreadLocalPool', '(', ')', '.', 'allocate', '(', 'bufferSize', ')', ';', '}', '}']",END PWC 6512276,"['END', 'PWC', '6512276']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspWriterImpl.java#L734-L742,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ncml/NcMLGWriter.java,NcMLGWriter.writeXML,"public void writeXML(NetcdfDataset ncd, OutputStream os, boolean showCoords, String uri) throws IOException {

    // Output the document, use standard formatter
    //XMLOutputter fmt = new XMLOutputter(""  "", true);
    //fmt.setLineSeparator(""\n"");
    XMLOutputter fmt = new XMLOutputter( Format.getPrettyFormat());
    fmt.output(makeDocument(ncd, showCoords, uri), os);
  }",java,"public void writeXML(NetcdfDataset ncd, OutputStream os, boolean showCoords, String uri) throws IOException {

    // Output the document, use standard formatter
    //XMLOutputter fmt = new XMLOutputter(""  "", true);
    //fmt.setLineSeparator(""\n"");
    XMLOutputter fmt = new XMLOutputter( Format.getPrettyFormat());
    fmt.output(makeDocument(ncd, showCoords, uri), os);
  }","['public', 'void', 'writeXML', '(', 'NetcdfDataset', 'ncd', ',', 'OutputStream', 'os', ',', 'boolean', 'showCoords', ',', 'String', 'uri', ')', 'throws', 'IOException', '{', '// Output the document, use standard formatter\r', '//XMLOutputter fmt = new XMLOutputter(""  "", true);\r', '//fmt.setLineSeparator(""\\n"");\r', 'XMLOutputter', 'fmt', '=', 'new', 'XMLOutputter', '(', 'Format', '.', 'getPrettyFormat', '(', ')', ')', ';', 'fmt', '.', 'output', '(', 'makeDocument', '(', 'ncd', ',', 'showCoords', ',', 'uri', ')', ',', 'os', ')', ';', '}']","Write a NetcdfDataset as an NcML-G document to the specified stream.

@param ncd write this dataset; should have opened with ""add coordinates"".
@param os write to this OutputStream
@param showCoords show 1D coordinate values
@param uri use this url, if null use getLocation()
@throws IOException on io error","['Write', 'a', 'NetcdfDataset', 'as', 'an', 'NcML', '-', 'G', 'document', 'to', 'the', 'specified', 'stream', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ncml/NcMLGWriter.java#L43-L50,test
RestComm/jain-slee,container/resource/src/main/java/org/mobicents/slee/resource/AbstractActivityContextInterfaceFactory.java,AbstractActivityContextInterfaceFactory.getACI,"protected ActivityContextInterface getACI(Object activity)
			throws NullPointerException, UnrecognizedActivityException,
			FactoryException {
		if (activity == null) {
			throw new NullPointerException(""null activity object"");
		}
		ActivityHandle handle = null;
		for (ResourceAdaptorEntity raEntity : sleeContainer
				.getResourceManagement().getResourceAdaptorEntitiesPerType(resourceAdaptorTypeID)) {
			handle = raEntity.getResourceAdaptorObject().getActivityHandle(
					activity);
			if (handle != null) {
				ActivityContextHandle ach = new ResourceAdaptorActivityContextHandleImpl(raEntity, handle);
				ActivityContext ac = sleeContainer.getActivityContextFactory()
						.getActivityContext(ach);
				if (ac != null) {
					return ac.getActivityContextInterface();
				}
				break;
			}
		}

		throw new UnrecognizedActivityException(activity.toString());
	}",java,"protected ActivityContextInterface getACI(Object activity)
			throws NullPointerException, UnrecognizedActivityException,
			FactoryException {
		if (activity == null) {
			throw new NullPointerException(""null activity object"");
		}
		ActivityHandle handle = null;
		for (ResourceAdaptorEntity raEntity : sleeContainer
				.getResourceManagement().getResourceAdaptorEntitiesPerType(resourceAdaptorTypeID)) {
			handle = raEntity.getResourceAdaptorObject().getActivityHandle(
					activity);
			if (handle != null) {
				ActivityContextHandle ach = new ResourceAdaptorActivityContextHandleImpl(raEntity, handle);
				ActivityContext ac = sleeContainer.getActivityContextFactory()
						.getActivityContext(ach);
				if (ac != null) {
					return ac.getActivityContextInterface();
				}
				break;
			}
		}

		throw new UnrecognizedActivityException(activity.toString());
	}","['protected', 'ActivityContextInterface', 'getACI', '(', 'Object', 'activity', ')', 'throws', 'NullPointerException', ',', 'UnrecognizedActivityException', ',', 'FactoryException', '{', 'if', '(', 'activity', '==', 'null', ')', '{', 'throw', 'new', 'NullPointerException', '(', '""null activity object""', ')', ';', '}', 'ActivityHandle', 'handle', '=', 'null', ';', 'for', '(', 'ResourceAdaptorEntity', 'raEntity', ':', 'sleeContainer', '.', 'getResourceManagement', '(', ')', '.', 'getResourceAdaptorEntitiesPerType', '(', 'resourceAdaptorTypeID', ')', ')', '{', 'handle', '=', 'raEntity', '.', 'getResourceAdaptorObject', '(', ')', '.', 'getActivityHandle', '(', 'activity', ')', ';', 'if', '(', 'handle', '!=', 'null', ')', '{', 'ActivityContextHandle', 'ach', '=', 'new', 'ResourceAdaptorActivityContextHandleImpl', '(', 'raEntity', ',', 'handle', ')', ';', 'ActivityContext', 'ac', '=', 'sleeContainer', '.', 'getActivityContextFactory', '(', ')', '.', 'getActivityContext', '(', 'ach', ')', ';', 'if', '(', 'ac', '!=', 'null', ')', '{', 'return', 'ac', '.', 'getActivityContextInterface', '(', ')', ';', '}', 'break', ';', '}', '}', 'throw', 'new', 'UnrecognizedActivityException', '(', 'activity', '.', 'toString', '(', ')', ')', ';', '}']","This method returns the aci for the specified activity, if exists, it
should be invoked by each impl of methods of an ra type aci factory.

@param activity
@return
@throws NullPointerException
@throws UnrecognizedActivityException
@throws FactoryException","['This', 'method', 'returns', 'the', 'aci', 'for', 'the', 'specified', 'activity', 'if', 'exists', 'it', 'should', 'be', 'invoked', 'by', 'each', 'impl', 'of', 'methods', 'of', 'an', 'ra', 'type', 'aci', 'factory', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/resource/src/main/java/org/mobicents/slee/resource/AbstractActivityContextInterfaceFactory.java#L86-L109,test
Unidata/thredds,dap4/d4core/src/main/java/dap4/core/util/DapUtil.java,DapUtil.fqnPrefix,"static public String fqnPrefix(String fqn)
    {
        int structindex = fqn.lastIndexOf('.');
        int groupindex = fqn.lastIndexOf('/');
        if(structindex >= 0)
            return fqn.substring(0, structindex);
        else
            return fqn.substring(0, groupindex);
    }",java,"static public String fqnPrefix(String fqn)
    {
        int structindex = fqn.lastIndexOf('.');
        int groupindex = fqn.lastIndexOf('/');
        if(structindex >= 0)
            return fqn.substring(0, structindex);
        else
            return fqn.substring(0, groupindex);
    }","['static', 'public', 'String', 'fqnPrefix', '(', 'String', 'fqn', ')', '{', 'int', 'structindex', '=', 'fqn', '.', 'lastIndexOf', '(', ""'"", ""'"", ')', ';', 'int', 'groupindex', '=', 'fqn', '.', 'lastIndexOf', '(', ""'"", ""'"", ')', ';', 'if', '(', 'structindex', '>=', '0', ')', 'return', 'fqn', '.', 'substring', '(', '0', ',', 'structindex', ')', ';', 'else', 'return', 'fqn', '.', 'substring', '(', '0', ',', 'groupindex', ')', ';', '}']",return prefix name part of an fqn; result will be escaped.,"['return', 'prefix', 'name', 'part', 'of', 'an', 'fqn', ';', 'result', 'will', 'be', 'escaped', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/util/DapUtil.java#L75-L83,test
boonproject/boon,boon/src/main/java/org/boon/Str.java,Str.insideOf,"public static boolean insideOf(String start, String inStr, String end) {
        return Chr.insideOf(FastStringUtils.toCharArray(start), FastStringUtils.toCharArray(inStr), FastStringUtils.toCharArray(end));
    }",java,"public static boolean insideOf(String start, String inStr, String end) {
        return Chr.insideOf(FastStringUtils.toCharArray(start), FastStringUtils.toCharArray(inStr), FastStringUtils.toCharArray(end));
    }","['public', 'static', 'boolean', 'insideOf', '(', 'String', 'start', ',', 'String', 'inStr', ',', 'String', 'end', ')', '{', 'return', 'Chr', '.', 'insideOf', '(', 'FastStringUtils', '.', 'toCharArray', '(', 'start', ')', ',', 'FastStringUtils', '.', 'toCharArray', '(', 'inStr', ')', ',', 'FastStringUtils', '.', 'toCharArray', '(', 'end', ')', ')', ';', '}']","Checks to see if a string is inside of another
@param start start
@param inStr input string
@param end index at end
@return","['Checks', 'to', 'see', 'if', 'a', 'string', 'is', 'inside', 'of', 'another']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/Str.java#L527-L529,test
oblac/jodd,jodd-http/src/main/java/jodd/http/HttpRequest.java,HttpRequest.head,"public static HttpRequest head(final String destination) {
		return new HttpRequest()
				.method(HttpMethod.HEAD)
				.set(destination);
	}",java,"public static HttpRequest head(final String destination) {
		return new HttpRequest()
				.method(HttpMethod.HEAD)
				.set(destination);
	}","['public', 'static', 'HttpRequest', 'head', '(', 'final', 'String', 'destination', ')', '{', 'return', 'new', 'HttpRequest', '(', ')', '.', 'method', '(', 'HttpMethod', '.', 'HEAD', ')', '.', 'set', '(', 'destination', ')', ';', '}']",Builds a HEAD request.,"['Builds', 'a', 'HEAD', 'request', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-http/src/main/java/jodd/http/HttpRequest.java#L267-L271,test
streamsets/datacollector,commonlib/src/main/java/com/streamsets/pipeline/lib/util/AvroSchemaHelper.java,AvroSchemaHelper.getDefaultValues,"public static Map<String, Object> getDefaultValues(Schema schema) throws SchemaRegistryException {
    Map<String, Object> defaultValues = new HashMap<>();
    try {
      defaultValues.putAll(AvroTypeUtil.getDefaultValuesFromSchema(schema, new HashSet<String>()));
    } catch (IOException e) {
      throw new SchemaRegistryException(e);
    }
    return defaultValues;
  }",java,"public static Map<String, Object> getDefaultValues(Schema schema) throws SchemaRegistryException {
    Map<String, Object> defaultValues = new HashMap<>();
    try {
      defaultValues.putAll(AvroTypeUtil.getDefaultValuesFromSchema(schema, new HashSet<String>()));
    } catch (IOException e) {
      throw new SchemaRegistryException(e);
    }
    return defaultValues;
  }","['public', 'static', 'Map', '<', 'String', ',', 'Object', '>', 'getDefaultValues', '(', 'Schema', 'schema', ')', 'throws', 'SchemaRegistryException', '{', 'Map', '<', 'String', ',', 'Object', '>', 'defaultValues', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'try', '{', 'defaultValues', '.', 'putAll', '(', 'AvroTypeUtil', '.', 'getDefaultValuesFromSchema', '(', 'schema', ',', 'new', 'HashSet', '<', 'String', '>', '(', ')', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'SchemaRegistryException', '(', 'e', ')', ';', '}', 'return', 'defaultValues', ';', '}']","Helper method to extract default values from a Schema. This is normally done
in DataGeneratorFormat validation, however we have to do it at runtime for
Schema Registry.
@param schema schema to extract default values from
@return map of default value
@throws SchemaRegistryException","['Helper', 'method', 'to', 'extract', 'default', 'values', 'from', 'a', 'Schema', '.', 'This', 'is', 'normally', 'done', 'in', 'DataGeneratorFormat', 'validation', 'however', 'we', 'have', 'to', 'do', 'it', 'at', 'runtime', 'for', 'Schema', 'Registry', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/commonlib/src/main/java/com/streamsets/pipeline/lib/util/AvroSchemaHelper.java#L244-L252,test
wildfly/wildfly,clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/AbstractProtocolResourceDefinition.java,AbstractProtocolResourceDefinition.addTransformations,"@SuppressWarnings(""deprecation"")
    static void addTransformations(ModelVersion version, ResourceTransformationDescriptionBuilder builder) {

        if (JGroupsModel.VERSION_5_0_0.requiresTransformation(version)) {
            builder.getAttributeBuilder()
                    .setDiscard(DiscardAttributeChecker.UNDEFINED, Attribute.STATISTICS_ENABLED.getDefinition())
                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.STATISTICS_ENABLED.getDefinition())
                    .end();
        }

        if (JGroupsModel.VERSION_3_0_0.requiresTransformation(version)) {
            AttributeConverter typeConverter = new AttributeConverter.DefaultAttributeConverter() {
                @Override
                protected void convertAttribute(PathAddress address, String name, ModelNode value, TransformationContext context) {
                    if (!value.isDefined()) {
                        value.set(address.getLastElement().getValue());
                    }
                }
            };
            builder.getAttributeBuilder()
                    .setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(Attribute.MODULE.getDefinition().getDefaultValue()), Attribute.MODULE.getDefinition())
                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.MODULE.getDefinition())
                    .setValueConverter(typeConverter, DeprecatedAttribute.TYPE.getDefinition())
                    .end();

            builder.addRawOperationTransformationOverride(MapOperations.MAP_GET_DEFINITION.getName(), new SimpleOperationTransformer(new LegacyPropertyMapGetOperationTransformer()));

            for (String opName : Operations.getAllWriteAttributeOperationNames()) {
                builder.addOperationTransformationOverride(opName)
                        .inheritResourceAttributeDefinitions()
                        .setCustomOperationTransformer(new LegacyPropertyWriteOperationTransformer());
            }
        }

        PropertyResourceDefinition.buildTransformation(version, builder);
    }",java,"@SuppressWarnings(""deprecation"")
    static void addTransformations(ModelVersion version, ResourceTransformationDescriptionBuilder builder) {

        if (JGroupsModel.VERSION_5_0_0.requiresTransformation(version)) {
            builder.getAttributeBuilder()
                    .setDiscard(DiscardAttributeChecker.UNDEFINED, Attribute.STATISTICS_ENABLED.getDefinition())
                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.STATISTICS_ENABLED.getDefinition())
                    .end();
        }

        if (JGroupsModel.VERSION_3_0_0.requiresTransformation(version)) {
            AttributeConverter typeConverter = new AttributeConverter.DefaultAttributeConverter() {
                @Override
                protected void convertAttribute(PathAddress address, String name, ModelNode value, TransformationContext context) {
                    if (!value.isDefined()) {
                        value.set(address.getLastElement().getValue());
                    }
                }
            };
            builder.getAttributeBuilder()
                    .setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(Attribute.MODULE.getDefinition().getDefaultValue()), Attribute.MODULE.getDefinition())
                    .addRejectCheck(RejectAttributeChecker.DEFINED, Attribute.MODULE.getDefinition())
                    .setValueConverter(typeConverter, DeprecatedAttribute.TYPE.getDefinition())
                    .end();

            builder.addRawOperationTransformationOverride(MapOperations.MAP_GET_DEFINITION.getName(), new SimpleOperationTransformer(new LegacyPropertyMapGetOperationTransformer()));

            for (String opName : Operations.getAllWriteAttributeOperationNames()) {
                builder.addOperationTransformationOverride(opName)
                        .inheritResourceAttributeDefinitions()
                        .setCustomOperationTransformer(new LegacyPropertyWriteOperationTransformer());
            }
        }

        PropertyResourceDefinition.buildTransformation(version, builder);
    }","['@', 'SuppressWarnings', '(', '""deprecation""', ')', 'static', 'void', 'addTransformations', '(', 'ModelVersion', 'version', ',', 'ResourceTransformationDescriptionBuilder', 'builder', ')', '{', 'if', '(', 'JGroupsModel', '.', 'VERSION_5_0_0', '.', 'requiresTransformation', '(', 'version', ')', ')', '{', 'builder', '.', 'getAttributeBuilder', '(', ')', '.', 'setDiscard', '(', 'DiscardAttributeChecker', '.', 'UNDEFINED', ',', 'Attribute', '.', 'STATISTICS_ENABLED', '.', 'getDefinition', '(', ')', ')', '.', 'addRejectCheck', '(', 'RejectAttributeChecker', '.', 'DEFINED', ',', 'Attribute', '.', 'STATISTICS_ENABLED', '.', 'getDefinition', '(', ')', ')', '.', 'end', '(', ')', ';', '}', 'if', '(', 'JGroupsModel', '.', 'VERSION_3_0_0', '.', 'requiresTransformation', '(', 'version', ')', ')', '{', 'AttributeConverter', 'typeConverter', '=', 'new', 'AttributeConverter', '.', 'DefaultAttributeConverter', '(', ')', '{', '@', 'Override', 'protected', 'void', 'convertAttribute', '(', 'PathAddress', 'address', ',', 'String', 'name', ',', 'ModelNode', 'value', ',', 'TransformationContext', 'context', ')', '{', 'if', '(', '!', 'value', '.', 'isDefined', '(', ')', ')', '{', 'value', '.', 'set', '(', 'address', '.', 'getLastElement', '(', ')', '.', 'getValue', '(', ')', ')', ';', '}', '}', '}', ';', 'builder', '.', 'getAttributeBuilder', '(', ')', '.', 'setDiscard', '(', 'new', 'DiscardAttributeChecker', '.', 'DiscardAttributeValueChecker', '(', 'Attribute', '.', 'MODULE', '.', 'getDefinition', '(', ')', '.', 'getDefaultValue', '(', ')', ')', ',', 'Attribute', '.', 'MODULE', '.', 'getDefinition', '(', ')', ')', '.', 'addRejectCheck', '(', 'RejectAttributeChecker', '.', 'DEFINED', ',', 'Attribute', '.', 'MODULE', '.', 'getDefinition', '(', ')', ')', '.', 'setValueConverter', '(', 'typeConverter', ',', 'DeprecatedAttribute', '.', 'TYPE', '.', 'getDefinition', '(', ')', ')', '.', 'end', '(', ')', ';', 'builder', '.', 'addRawOperationTransformationOverride', '(', 'MapOperations', '.', 'MAP_GET_DEFINITION', '.', 'getName', '(', ')', ',', 'new', 'SimpleOperationTransformer', '(', 'new', 'LegacyPropertyMapGetOperationTransformer', '(', ')', ')', ')', ';', 'for', '(', 'String', 'opName', ':', 'Operations', '.', 'getAllWriteAttributeOperationNames', '(', ')', ')', '{', 'builder', '.', 'addOperationTransformationOverride', '(', 'opName', ')', '.', 'inheritResourceAttributeDefinitions', '(', ')', '.', 'setCustomOperationTransformer', '(', 'new', 'LegacyPropertyWriteOperationTransformer', '(', ')', ')', ';', '}', '}', 'PropertyResourceDefinition', '.', 'buildTransformation', '(', 'version', ',', 'builder', ')', ';', '}']",Builds transformations common to both stack protocols and transport.,"['Builds', 'transformations', 'common', 'to', 'both', 'stack', 'protocols', 'and', 'transport', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/AbstractProtocolResourceDefinition.java#L127-L162,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/functions/DifferentialFunction.java,DifferentialFunction.diff,"public List<SDVariable> diff(List<SDVariable> i_v1) {
        List<SDVariable> vals = doDiff(i_v1);
        if(vals == null){
            throw new IllegalStateException(""Error executing diff operation: doDiff returned null for op: "" + this.opName());
        }

        val outputVars = args();
        for(int i = 0; i < vals.size(); i++) {
            SDVariable var = outputVars[i];
            SDVariable grad = var.getGradient();
            if(grad != null) {
                SDVariable gradVar =  f().add(grad, vals.get(i));
                try {
                    vals.set(i, gradVar);
                } catch (UnsupportedOperationException e){
                    throw new UnsupportedOperationException(""Use a mutable list when returning values from ""+this.getClass().getSimpleName()+"".doDiff (e.g. Arrays.asList instead of Collections.singletonList)"", e);
                }
                sameDiff.setGradientForVariableName(var.getVarName(), gradVar);
            } else {
                SDVariable gradVar = vals.get(i);
                sameDiff.updateVariableNameAndReference(gradVar,var.getVarName() + ""-grad"");
                sameDiff.setGradientForVariableName(var.getVarName(), gradVar);
                sameDiff.setForwardVariableForVarName(gradVar.getVarName(),var);

            }
        }

        return vals;
    }",java,"public List<SDVariable> diff(List<SDVariable> i_v1) {
        List<SDVariable> vals = doDiff(i_v1);
        if(vals == null){
            throw new IllegalStateException(""Error executing diff operation: doDiff returned null for op: "" + this.opName());
        }

        val outputVars = args();
        for(int i = 0; i < vals.size(); i++) {
            SDVariable var = outputVars[i];
            SDVariable grad = var.getGradient();
            if(grad != null) {
                SDVariable gradVar =  f().add(grad, vals.get(i));
                try {
                    vals.set(i, gradVar);
                } catch (UnsupportedOperationException e){
                    throw new UnsupportedOperationException(""Use a mutable list when returning values from ""+this.getClass().getSimpleName()+"".doDiff (e.g. Arrays.asList instead of Collections.singletonList)"", e);
                }
                sameDiff.setGradientForVariableName(var.getVarName(), gradVar);
            } else {
                SDVariable gradVar = vals.get(i);
                sameDiff.updateVariableNameAndReference(gradVar,var.getVarName() + ""-grad"");
                sameDiff.setGradientForVariableName(var.getVarName(), gradVar);
                sameDiff.setForwardVariableForVarName(gradVar.getVarName(),var);

            }
        }

        return vals;
    }","['public', 'List', '<', 'SDVariable', '>', 'diff', '(', 'List', '<', 'SDVariable', '>', 'i_v1', ')', '{', 'List', '<', 'SDVariable', '>', 'vals', '=', 'doDiff', '(', 'i_v1', ')', ';', 'if', '(', 'vals', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Error executing diff operation: doDiff returned null for op: ""', '+', 'this', '.', 'opName', '(', ')', ')', ';', '}', 'val', 'outputVars', '=', 'args', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'vals', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'SDVariable', 'var', '=', 'outputVars', '[', 'i', ']', ';', 'SDVariable', 'grad', '=', 'var', '.', 'getGradient', '(', ')', ';', 'if', '(', 'grad', '!=', 'null', ')', '{', 'SDVariable', 'gradVar', '=', 'f', '(', ')', '.', 'add', '(', 'grad', ',', 'vals', '.', 'get', '(', 'i', ')', ')', ';', 'try', '{', 'vals', '.', 'set', '(', 'i', ',', 'gradVar', ')', ';', '}', 'catch', '(', 'UnsupportedOperationException', 'e', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', '""Use a mutable list when returning values from ""', '+', 'this', '.', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', '+', '"".doDiff (e.g. Arrays.asList instead of Collections.singletonList)""', ',', 'e', ')', ';', '}', 'sameDiff', '.', 'setGradientForVariableName', '(', 'var', '.', 'getVarName', '(', ')', ',', 'gradVar', ')', ';', '}', 'else', '{', 'SDVariable', 'gradVar', '=', 'vals', '.', 'get', '(', 'i', ')', ';', 'sameDiff', '.', 'updateVariableNameAndReference', '(', 'gradVar', ',', 'var', '.', 'getVarName', '(', ')', '+', '""-grad""', ')', ';', 'sameDiff', '.', 'setGradientForVariableName', '(', 'var', '.', 'getVarName', '(', ')', ',', 'gradVar', ')', ';', 'sameDiff', '.', 'setForwardVariableForVarName', '(', 'gradVar', '.', 'getVarName', '(', ')', ',', 'var', ')', ';', '}', '}', 'return', 'vals', ';', '}']","Perform automatic differentiation
wrt the input variables
@param i_v1 the input variables
@return the differentiated output
wrt each input variable","['Perform', 'automatic', 'differentiation', 'wrt', 'the', 'input', 'variables']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/functions/DifferentialFunction.java#L504-L532,test
artclarke/humble-video,humble-video-noarch/src/main/java/io/humble/video/awt/AMediaPictureConverter.java,AMediaPictureConverter.validatePicture,"protected void validatePicture(MediaPicture picture)
  {
    // if the picture is NULL, throw up
    
    if (picture == null)
      throw new IllegalArgumentException(""The picture is NULL."");

    // if the picture is not complete, throw up
    
    if (!picture.isComplete())
      throw new IllegalArgumentException(""The picture is not complete."");

    // if the picture is an invalid type throw up

    PixelFormat.Type type = picture.getFormat();
    if ((type != getPictureType()) && (willResample() && 
        type != mToImageResampler.getOutputFormat()))
      throw new IllegalArgumentException(
        ""Picture is of type: "" + type + "", but must be "" + 
        getPictureType() + (willResample() 
          ? "" or "" + mToImageResampler.getOutputFormat()
          : """") +
        ""."");
  }",java,"protected void validatePicture(MediaPicture picture)
  {
    // if the picture is NULL, throw up
    
    if (picture == null)
      throw new IllegalArgumentException(""The picture is NULL."");

    // if the picture is not complete, throw up
    
    if (!picture.isComplete())
      throw new IllegalArgumentException(""The picture is not complete."");

    // if the picture is an invalid type throw up

    PixelFormat.Type type = picture.getFormat();
    if ((type != getPictureType()) && (willResample() && 
        type != mToImageResampler.getOutputFormat()))
      throw new IllegalArgumentException(
        ""Picture is of type: "" + type + "", but must be "" + 
        getPictureType() + (willResample() 
          ? "" or "" + mToImageResampler.getOutputFormat()
          : """") +
        ""."");
  }","['protected', 'void', 'validatePicture', '(', 'MediaPicture', 'picture', ')', '{', '// if the picture is NULL, throw up', 'if', '(', 'picture', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""The picture is NULL.""', ')', ';', '// if the picture is not complete, throw up', 'if', '(', '!', 'picture', '.', 'isComplete', '(', ')', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""The picture is not complete.""', ')', ';', '// if the picture is an invalid type throw up', 'PixelFormat', '.', 'Type', 'type', '=', 'picture', '.', 'getFormat', '(', ')', ';', 'if', '(', '(', 'type', '!=', 'getPictureType', '(', ')', ')', '&&', '(', 'willResample', '(', ')', '&&', 'type', '!=', 'mToImageResampler', '.', 'getOutputFormat', '(', ')', ')', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""Picture is of type: ""', '+', 'type', '+', '"", but must be ""', '+', 'getPictureType', '(', ')', '+', '(', 'willResample', '(', ')', '?', '"" or ""', '+', 'mToImageResampler', '.', 'getOutputFormat', '(', ')', ':', '""""', ')', '+', '"".""', ')', ';', '}']","Test that the passed picture is valid and conforms to the
converters specifications.

@param picture the picture to test

@throws IllegalArgumentException if the passed {@link
MediaPicture} is NULL;
@throws IllegalArgumentException if the passed {@link
MediaPicture} is not complete.
@throws IllegalArgumentException if the passed {@link
MediaPicture} is not the correct type.","['Test', 'that', 'the', 'passed', 'picture', 'is', 'valid', 'and', 'conforms', 'to', 'the', 'converters', 'specifications', '.']",aa349ae2d7ef74160b7074feac8d298cf90394d1,https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/awt/AMediaPictureConverter.java#L255-L278,test
Unidata/thredds,tds/src/main/java/thredds/server/reify/LoadCommon.java,LoadCommon.initOnce,"public void initOnce(HttpServletRequest req)
            throws SendError
    {
        if(once)
            return;
        once = true;
        log.info(getClass().getName() + "" GET initialization"");
        if(this.tdsContext == null)
            throw new SendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, ""Cannot find TDS Context"");
        // Get server host + port name
        StringBuilder buf = new StringBuilder();
        buf.append(req.getServerName());
        int port = req.getServerPort();
        if(port > 0) {
            buf.append("":"");
            buf.append(port);
        }
        this.server = buf.toString();

        // Obtain servlet path info
        String tmp = HTTPUtil.canonicalpath(req.getContextPath());
        this.threddsname = HTTPUtil.nullify(HTTPUtil.relpath(tmp));
        tmp = HTTPUtil.canonicalpath(req.getServletPath());
        this.requestname = HTTPUtil.nullify(HTTPUtil.relpath(tmp));

        if(this.threddsname == null)
            this.threddsname = DEFAULTSERVLETNAME;

        // Get the upload dir
        File updir = tdsContext.getUploadDir();
        if(updir == null) {
            log.warn(""No tds.upload.dir specified"");
            this.uploaddir = null;
        } else
            this.uploaddir = HTTPUtil.canonicalpath(updir.getAbsolutePath());
        // Get the download dir
        File downdir = tdsContext.getDownloadDir();
        if(downdir == null) {
            log.warn(""No tds.download.dir specified"");
            this.downloaddir = null;
        } else
            this.downloaddir = HTTPUtil.canonicalpath(downdir.getAbsolutePath());

    }",java,"public void initOnce(HttpServletRequest req)
            throws SendError
    {
        if(once)
            return;
        once = true;
        log.info(getClass().getName() + "" GET initialization"");
        if(this.tdsContext == null)
            throw new SendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, ""Cannot find TDS Context"");
        // Get server host + port name
        StringBuilder buf = new StringBuilder();
        buf.append(req.getServerName());
        int port = req.getServerPort();
        if(port > 0) {
            buf.append("":"");
            buf.append(port);
        }
        this.server = buf.toString();

        // Obtain servlet path info
        String tmp = HTTPUtil.canonicalpath(req.getContextPath());
        this.threddsname = HTTPUtil.nullify(HTTPUtil.relpath(tmp));
        tmp = HTTPUtil.canonicalpath(req.getServletPath());
        this.requestname = HTTPUtil.nullify(HTTPUtil.relpath(tmp));

        if(this.threddsname == null)
            this.threddsname = DEFAULTSERVLETNAME;

        // Get the upload dir
        File updir = tdsContext.getUploadDir();
        if(updir == null) {
            log.warn(""No tds.upload.dir specified"");
            this.uploaddir = null;
        } else
            this.uploaddir = HTTPUtil.canonicalpath(updir.getAbsolutePath());
        // Get the download dir
        File downdir = tdsContext.getDownloadDir();
        if(downdir == null) {
            log.warn(""No tds.download.dir specified"");
            this.downloaddir = null;
        } else
            this.downloaddir = HTTPUtil.canonicalpath(downdir.getAbsolutePath());

    }","['public', 'void', 'initOnce', '(', 'HttpServletRequest', 'req', ')', 'throws', 'SendError', '{', 'if', '(', 'once', ')', 'return', ';', 'once', '=', 'true', ';', 'log', '.', 'info', '(', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '"" GET initialization""', ')', ';', 'if', '(', 'this', '.', 'tdsContext', '==', 'null', ')', 'throw', 'new', 'SendError', '(', 'HttpServletResponse', '.', 'SC_INTERNAL_SERVER_ERROR', ',', '""Cannot find TDS Context""', ')', ';', '// Get server host + port name', 'StringBuilder', 'buf', '=', 'new', 'StringBuilder', '(', ')', ';', 'buf', '.', 'append', '(', 'req', '.', 'getServerName', '(', ')', ')', ';', 'int', 'port', '=', 'req', '.', 'getServerPort', '(', ')', ';', 'if', '(', 'port', '>', '0', ')', '{', 'buf', '.', 'append', '(', '"":""', ')', ';', 'buf', '.', 'append', '(', 'port', ')', ';', '}', 'this', '.', 'server', '=', 'buf', '.', 'toString', '(', ')', ';', '// Obtain servlet path info', 'String', 'tmp', '=', 'HTTPUtil', '.', 'canonicalpath', '(', 'req', '.', 'getContextPath', '(', ')', ')', ';', 'this', '.', 'threddsname', '=', 'HTTPUtil', '.', 'nullify', '(', 'HTTPUtil', '.', 'relpath', '(', 'tmp', ')', ')', ';', 'tmp', '=', 'HTTPUtil', '.', 'canonicalpath', '(', 'req', '.', 'getServletPath', '(', ')', ')', ';', 'this', '.', 'requestname', '=', 'HTTPUtil', '.', 'nullify', '(', 'HTTPUtil', '.', 'relpath', '(', 'tmp', ')', ')', ';', 'if', '(', 'this', '.', 'threddsname', '==', 'null', ')', 'this', '.', 'threddsname', '=', 'DEFAULTSERVLETNAME', ';', '// Get the upload dir', 'File', 'updir', '=', 'tdsContext', '.', 'getUploadDir', '(', ')', ';', 'if', '(', 'updir', '==', 'null', ')', '{', 'log', '.', 'warn', '(', '""No tds.upload.dir specified""', ')', ';', 'this', '.', 'uploaddir', '=', 'null', ';', '}', 'else', 'this', '.', 'uploaddir', '=', 'HTTPUtil', '.', 'canonicalpath', '(', 'updir', '.', 'getAbsolutePath', '(', ')', ')', ';', '// Get the download dir', 'File', 'downdir', '=', 'tdsContext', '.', 'getDownloadDir', '(', ')', ';', 'if', '(', 'downdir', '==', 'null', ')', '{', 'log', '.', 'warn', '(', '""No tds.download.dir specified""', ')', ';', 'this', '.', 'downloaddir', '=', 'null', ';', '}', 'else', 'this', '.', 'downloaddir', '=', 'HTTPUtil', '.', 'canonicalpath', '(', 'downdir', '.', 'getAbsolutePath', '(', ')', ')', ';', '}']","Invoked on first get so that everything is available,
especially Spring stuff.","['Invoked', 'on', 'first', 'get', 'so', 'that', 'everything', 'is', 'available', 'especially', 'Spring', 'stuff', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tds/src/main/java/thredds/server/reify/LoadCommon.java#L368-L411,test
spring-projects/spring-security,samples/xml/contacts/src/main/java/sample/contact/AdminPermissionController.java,AdminPermissionController.deletePermission,"@RequestMapping(value = ""/secure/deletePermission.htm"")
	public ModelAndView deletePermission(@RequestParam(""contactId"") long contactId,
			@RequestParam(""sid"") String sid, @RequestParam(""permission"") int mask) {

		Contact contact = contactManager.getById(contactId);

		Sid sidObject = new PrincipalSid(sid);
		Permission permission = permissionFactory.buildFromMask(mask);

		contactManager.deletePermission(contact, sidObject, permission);

		Map<String, Object> model = new HashMap<>();
		model.put(""contact"", contact);
		model.put(""sid"", sidObject);
		model.put(""permission"", permission);

		return new ModelAndView(""deletePermission"", ""model"", model);
	}",java,"@RequestMapping(value = ""/secure/deletePermission.htm"")
	public ModelAndView deletePermission(@RequestParam(""contactId"") long contactId,
			@RequestParam(""sid"") String sid, @RequestParam(""permission"") int mask) {

		Contact contact = contactManager.getById(contactId);

		Sid sidObject = new PrincipalSid(sid);
		Permission permission = permissionFactory.buildFromMask(mask);

		contactManager.deletePermission(contact, sidObject, permission);

		Map<String, Object> model = new HashMap<>();
		model.put(""contact"", contact);
		model.put(""sid"", sidObject);
		model.put(""permission"", permission);

		return new ModelAndView(""deletePermission"", ""model"", model);
	}","['@', 'RequestMapping', '(', 'value', '=', '""/secure/deletePermission.htm""', ')', 'public', 'ModelAndView', 'deletePermission', '(', '@', 'RequestParam', '(', '""contactId""', ')', 'long', 'contactId', ',', '@', 'RequestParam', '(', '""sid""', ')', 'String', 'sid', ',', '@', 'RequestParam', '(', '""permission""', ')', 'int', 'mask', ')', '{', 'Contact', 'contact', '=', 'contactManager', '.', 'getById', '(', 'contactId', ')', ';', 'Sid', 'sidObject', '=', 'new', 'PrincipalSid', '(', 'sid', ')', ';', 'Permission', 'permission', '=', 'permissionFactory', '.', 'buildFromMask', '(', 'mask', ')', ';', 'contactManager', '.', 'deletePermission', '(', 'contact', ',', 'sidObject', ',', 'permission', ')', ';', 'Map', '<', 'String', ',', 'Object', '>', 'model', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'model', '.', 'put', '(', '""contact""', ',', 'contact', ')', ';', 'model', '.', 'put', '(', '""sid""', ',', 'sidObject', ')', ';', 'model', '.', 'put', '(', '""permission""', ',', 'permission', ')', ';', 'return', 'new', 'ModelAndView', '(', '""deletePermission""', ',', '""model""', ',', 'model', ')', ';', '}']",Deletes a permission,"['Deletes', 'a', 'permission']",98a8467e4c2ae05b3e09c67ece856944fa48ed23,https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/samples/xml/contacts/src/main/java/sample/contact/AdminPermissionController.java#L143-L160,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/converter/ConverterSpannedToHtml.java,ConverterSpannedToHtml.convert,"public RTHtml<RTImage, RTAudio, RTVideo> convert(final Spanned text, RTFormat.Html rtFormat) {
        mText = text;
        mRTFormat = rtFormat;

        mOut = new StringBuilder();
        mImages = new ArrayList<>();
        mParagraphStyles.clear();

        // convert paragraphs
        convertParagraphs();

        return new RTHtml<>(rtFormat, mOut.toString(), mImages);
    }",java,"public RTHtml<RTImage, RTAudio, RTVideo> convert(final Spanned text, RTFormat.Html rtFormat) {
        mText = text;
        mRTFormat = rtFormat;

        mOut = new StringBuilder();
        mImages = new ArrayList<>();
        mParagraphStyles.clear();

        // convert paragraphs
        convertParagraphs();

        return new RTHtml<>(rtFormat, mOut.toString(), mImages);
    }","['public', 'RTHtml', '<', 'RTImage', ',', 'RTAudio', ',', 'RTVideo', '>', 'convert', '(', 'final', 'Spanned', 'text', ',', 'RTFormat', '.', 'Html', 'rtFormat', ')', '{', 'mText', '=', 'text', ';', 'mRTFormat', '=', 'rtFormat', ';', 'mOut', '=', 'new', 'StringBuilder', '(', ')', ';', 'mImages', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'mParagraphStyles', '.', 'clear', '(', ')', ';', '// convert paragraphs', 'convertParagraphs', '(', ')', ';', 'return', 'new', 'RTHtml', '<>', '(', 'rtFormat', ',', 'mOut', '.', 'toString', '(', ')', ',', 'mImages', ')', ';', '}']",Converts a spanned text to HTML,"['Converts', 'a', 'spanned', 'text', 'to', 'HTML']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/converter/ConverterSpannedToHtml.java#L79-L91,test
boonproject/boon,boon/src/main/java/org/boon/validation/readers/AnnotationValidatorMetaDataReader.java,AnnotationValidatorMetaDataReader.extractValidatorMetaData,"private List<ValidatorMetaData> extractValidatorMetaData( Class<?> clazz, String propertyName, List<ValidatorMetaData> validatorMetaDataList ) {
        /* If the meta-data was not found, then generate it. */
        if ( validatorMetaDataList == null ) { // if not found
            /* Read the annotation from the class based on the property name. */
            Collection<AnnotationData> annotations = Annotations.getAnnotationDataForFieldAndProperty( clazz, propertyName, this.validationAnnotationPackages );

            /* Extract the POJO based meta-data from the annotation. */
            validatorMetaDataList =
                    extractMetaDataFromAnnotations( annotations );

        }
        return validatorMetaDataList;
    }",java,"private List<ValidatorMetaData> extractValidatorMetaData( Class<?> clazz, String propertyName, List<ValidatorMetaData> validatorMetaDataList ) {
        /* If the meta-data was not found, then generate it. */
        if ( validatorMetaDataList == null ) { // if not found
            /* Read the annotation from the class based on the property name. */
            Collection<AnnotationData> annotations = Annotations.getAnnotationDataForFieldAndProperty( clazz, propertyName, this.validationAnnotationPackages );

            /* Extract the POJO based meta-data from the annotation. */
            validatorMetaDataList =
                    extractMetaDataFromAnnotations( annotations );

        }
        return validatorMetaDataList;
    }","['private', 'List', '<', 'ValidatorMetaData', '>', 'extractValidatorMetaData', '(', 'Class', '<', '?', '>', 'clazz', ',', 'String', 'propertyName', ',', 'List', '<', 'ValidatorMetaData', '>', 'validatorMetaDataList', ')', '{', '/* If the meta-data was not found, then generate it. */', 'if', '(', 'validatorMetaDataList', '==', 'null', ')', '{', '// if not found\r', '/* Read the annotation from the class based on the property name. */', 'Collection', '<', 'AnnotationData', '>', 'annotations', '=', 'Annotations', '.', 'getAnnotationDataForFieldAndProperty', '(', 'clazz', ',', 'propertyName', ',', 'this', '.', 'validationAnnotationPackages', ')', ';', '/* Extract the POJO based meta-data from the annotation. */', 'validatorMetaDataList', '=', 'extractMetaDataFromAnnotations', '(', 'annotations', ')', ';', '}', 'return', 'validatorMetaDataList', ';', '}']","Extract BaseValidator Meta Data.

@param clazz                 class
@param propertyName          property name
@param validatorMetaDataList validatorMetaDataList
@return validator meta data","['Extract', 'BaseValidator', 'Meta', 'Data', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/validation/readers/AnnotationValidatorMetaDataReader.java#L148-L160,test
Unidata/thredds,dap4/d4core/src/main/java/dap4/core/dmr/parser/DOM4Parser.java,DOM4Parser.pull,"protected String
    pull(Node n, String name)
    {
        NamedNodeMap map = n.getAttributes();
        Node attr = map.getNamedItem(name);
        if(attr == null)
            return null;
        return attr.getNodeValue();
    }",java,"protected String
    pull(Node n, String name)
    {
        NamedNodeMap map = n.getAttributes();
        Node attr = map.getNamedItem(name);
        if(attr == null)
            return null;
        return attr.getNodeValue();
    }","['protected', 'String', 'pull', '(', 'Node', 'n', ',', 'String', 'name', ')', '{', 'NamedNodeMap', 'map', '=', 'n', '.', 'getAttributes', '(', ')', ';', 'Node', 'attr', '=', 'map', '.', 'getNamedItem', '(', 'name', ')', ';', 'if', '(', 'attr', '==', 'null', ')', 'return', 'null', ';', 'return', 'attr', '.', 'getNodeValue', '(', ')', ';', '}']",XML Attribute utilities,"['XML', 'Attribute', 'utilities']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/dmr/parser/DOM4Parser.java#L312-L320,test
oblac/jodd,jodd-core/src/main/java/jodd/util/ClassUtil.java,ClassUtil.childClassOf,"public static Class<?> childClassOf(final Class<?> parentClass, final Object instance) {

		if (instance == null || instance == Object.class) {
			return null;
		}

		if (parentClass != null) {
			if (parentClass.isInterface()) {
				return null;
			}
		}

		Class<?> childClass = instance.getClass();
		while (true) {
			Class<?> parent = childClass.getSuperclass();
			if (parent == parentClass) {
				return childClass;
			}
			if (parent == null) {
				return null;
			}
			childClass = parent;
		}
	}",java,"public static Class<?> childClassOf(final Class<?> parentClass, final Object instance) {

		if (instance == null || instance == Object.class) {
			return null;
		}

		if (parentClass != null) {
			if (parentClass.isInterface()) {
				return null;
			}
		}

		Class<?> childClass = instance.getClass();
		while (true) {
			Class<?> parent = childClass.getSuperclass();
			if (parent == parentClass) {
				return childClass;
			}
			if (parent == null) {
				return null;
			}
			childClass = parent;
		}
	}","['public', 'static', 'Class', '<', '?', '>', 'childClassOf', '(', 'final', 'Class', '<', '?', '>', 'parentClass', ',', 'final', 'Object', 'instance', ')', '{', 'if', '(', 'instance', '==', 'null', '||', 'instance', '==', 'Object', '.', 'class', ')', '{', 'return', 'null', ';', '}', 'if', '(', 'parentClass', '!=', 'null', ')', '{', 'if', '(', 'parentClass', '.', 'isInterface', '(', ')', ')', '{', 'return', 'null', ';', '}', '}', 'Class', '<', '?', '>', 'childClass', '=', 'instance', '.', 'getClass', '(', ')', ';', 'while', '(', 'true', ')', '{', 'Class', '<', '?', '>', 'parent', '=', 'childClass', '.', 'getSuperclass', '(', ')', ';', 'if', '(', 'parent', '==', 'parentClass', ')', '{', 'return', 'childClass', ';', '}', 'if', '(', 'parent', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'childClass', '=', 'parent', ';', '}', '}']","Returns the class of the immediate subclass of the given parent class for
the given object instance; or null if such immediate subclass cannot be
uniquely identified for the given object instance.","['Returns', 'the', 'class', 'of', 'the', 'immediate', 'subclass', 'of', 'the', 'given', 'parent', 'class', 'for', 'the', 'given', 'object', 'instance', ';', 'or', 'null', 'if', 'such', 'immediate', 'subclass', 'cannot', 'be', 'uniquely', 'identified', 'for', 'the', 'given', 'object', 'instance', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/ClassUtil.java#L1251-L1274,test
Unidata/thredds,dap4/d4servlet/src/main/java/dap4/servlet/SerialWriter.java,SerialWriter.writeBytes,"public void
    writeBytes(byte[] bytes, int len)
            throws IOException
    {
        outputBytes(bytes, 0, len);
        if(this.checksummode.enabled(ChecksumMode.DAP)) {
            this.checksum.update(bytes, 0, len);
            if(DUMPCSUM) {
                System.err.print(""SSS "");
                for(int i = 0; i < len; i++) {
                    System.err.printf(""%02x"", bytes[i]);
                }
                System.err.println();
            }
        }
    }",java,"public void
    writeBytes(byte[] bytes, int len)
            throws IOException
    {
        outputBytes(bytes, 0, len);
        if(this.checksummode.enabled(ChecksumMode.DAP)) {
            this.checksum.update(bytes, 0, len);
            if(DUMPCSUM) {
                System.err.print(""SSS "");
                for(int i = 0; i < len; i++) {
                    System.err.printf(""%02x"", bytes[i]);
                }
                System.err.println();
            }
        }
    }","['public', 'void', 'writeBytes', '(', 'byte', '[', ']', 'bytes', ',', 'int', 'len', ')', 'throws', 'IOException', '{', 'outputBytes', '(', 'bytes', ',', '0', ',', 'len', ')', ';', 'if', '(', 'this', '.', 'checksummode', '.', 'enabled', '(', 'ChecksumMode', '.', 'DAP', ')', ')', '{', 'this', '.', 'checksum', '.', 'update', '(', 'bytes', ',', '0', ',', 'len', ')', ';', 'if', '(', 'DUMPCSUM', ')', '{', 'System', '.', 'err', '.', 'print', '(', '""SSS ""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'len', ';', 'i', '++', ')', '{', 'System', '.', 'err', '.', 'printf', '(', '""%02x""', ',', 'bytes', '[', 'i', ']', ')', ';', '}', 'System', '.', 'err', '.', 'println', '(', ')', ';', '}', '}', '}']","Write out a set of bytes

@param bytes
@param len
@throws IOException","['Write', 'out', 'a', 'set', 'of', 'bytes']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4servlet/src/main/java/dap4/servlet/SerialWriter.java#L321-L336,test
jillesvangurp/urlbuilder,src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java,UrlBuilder.queryParam,"public UrlBuilder queryParam(String name, Number value) {
        if(value != null) {
            return queryParam(name, value.toString());
        } else {
            return null;
        }
    }",java,"public UrlBuilder queryParam(String name, Number value) {
        if(value != null) {
            return queryParam(name, value.toString());
        } else {
            return null;
        }
    }","['public', 'UrlBuilder', 'queryParam', '(', 'String', 'name', ',', 'Number', 'value', ')', '{', 'if', '(', 'value', '!=', 'null', ')', '{', 'return', 'queryParam', '(', 'name', ',', 'value', '.', 'toString', '(', ')', ')', ';', '}', 'else', '{', 'return', 'null', ';', '}', '}']","Create a query parameter with a number value.
@param name parameter name
@param value value
@return the builder","['Create', 'a', 'query', 'parameter', 'with', 'a', 'number', 'value', '.']",22a8a4edf74a08b07cb17aad08c58c9feec8a2c0,https://github.com/jillesvangurp/urlbuilder/blob/22a8a4edf74a08b07cb17aad08c58c9feec8a2c0/src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java#L149-L155,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java,FeatureTiles.drawTile,"public Bitmap drawTile(int x, int y, int zoom) {
        Bitmap bitmap;
        if (isIndexQuery()) {
            bitmap = drawTileQueryIndex(x, y, zoom);
        } else {
            bitmap = drawTileQueryAll(x, y, zoom);
        }
        return bitmap;
    }",java,"public Bitmap drawTile(int x, int y, int zoom) {
        Bitmap bitmap;
        if (isIndexQuery()) {
            bitmap = drawTileQueryIndex(x, y, zoom);
        } else {
            bitmap = drawTileQueryAll(x, y, zoom);
        }
        return bitmap;
    }","['public', 'Bitmap', 'drawTile', '(', 'int', 'x', ',', 'int', 'y', ',', 'int', 'zoom', ')', '{', 'Bitmap', 'bitmap', ';', 'if', '(', 'isIndexQuery', '(', ')', ')', '{', 'bitmap', '=', 'drawTileQueryIndex', '(', 'x', ',', 'y', ',', 'zoom', ')', ';', '}', 'else', '{', 'bitmap', '=', 'drawTileQueryAll', '(', 'x', ',', 'y', ',', 'zoom', ')', ';', '}', 'return', 'bitmap', ';', '}']","Draw a tile bitmap from the x, y, and zoom level

@param x    x coordinate
@param y    y coordinate
@param zoom zoom level
@return tile bitmap, or null","['Draw', 'a', 'tile', 'bitmap', 'from', 'the', 'x', 'y', 'and', 'zoom', 'level']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java#L1064-L1072,test
rupertlssmith/lojix,base/base/src/main/com/thesett/util/log4j/SilentFailSocketAppender.java,SilentFailSocketAppender.cleanUp,"public void cleanUp()
    {
        if (oos != null)
        {
            try
            {
                oos.close();
            }
            catch (IOException e)
            {
                LogLog.error(""Could not close oos."", e);
            }

            oos = null;
        }

        if (connector != null)
        {
            // LogLog.debug(""Interrupting the connector."");
            connector.interrupted = true;
            connector = null; // allow gc
        }
    }",java,"public void cleanUp()
    {
        if (oos != null)
        {
            try
            {
                oos.close();
            }
            catch (IOException e)
            {
                LogLog.error(""Could not close oos."", e);
            }

            oos = null;
        }

        if (connector != null)
        {
            // LogLog.debug(""Interrupting the connector."");
            connector.interrupted = true;
            connector = null; // allow gc
        }
    }","['public', 'void', 'cleanUp', '(', ')', '{', 'if', '(', 'oos', '!=', 'null', ')', '{', 'try', '{', 'oos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'LogLog', '.', 'error', '(', '""Could not close oos.""', ',', 'e', ')', ';', '}', 'oos', '=', 'null', ';', '}', 'if', '(', 'connector', '!=', 'null', ')', '{', '// LogLog.debug(""Interrupting the connector."");', 'connector', '.', 'interrupted', '=', 'true', ';', 'connector', '=', 'null', ';', '// allow gc', '}', '}']",Drop the connection to the remote host and release the underlying connector thread if it has been created.,"['Drop', 'the', 'connection', 'to', 'the', 'remote', 'host', 'and', 'release', 'the', 'underlying', 'connector', 'thread', 'if', 'it', 'has', 'been', 'created', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/base/src/main/com/thesett/util/log4j/SilentFailSocketAppender.java#L140-L162,test
streamsets/datacollector,bootstrap/src/main/java/com/streamsets/pipeline/SystemPackage.java,SystemPackage.isSystemClass,"private static boolean isSystemClass(String name, List<String> packageList) {
    boolean result = false;
    if (packageList != null) {
      String canonicalName = ClassLoaderUtil.canonicalizeClassOrResource(name);
      for (String c : packageList) {
        boolean shouldInclude = true;
        if (c.startsWith(""-"")) {
          c = c.substring(1);
          shouldInclude = false;
        }
        if (canonicalName.startsWith(c)) {
          if ( c.endsWith(""."")                                   // package
            || canonicalName.length() == c.length()              // class
            ||    canonicalName.length() > c.length()            // nested
            && canonicalName.charAt(c.length()) == '$' ) {
            if (shouldInclude) {
              result = true;
            } else {
              return false;
            }
          }
        }
      }
    }
    return result;
  }",java,"private static boolean isSystemClass(String name, List<String> packageList) {
    boolean result = false;
    if (packageList != null) {
      String canonicalName = ClassLoaderUtil.canonicalizeClassOrResource(name);
      for (String c : packageList) {
        boolean shouldInclude = true;
        if (c.startsWith(""-"")) {
          c = c.substring(1);
          shouldInclude = false;
        }
        if (canonicalName.startsWith(c)) {
          if ( c.endsWith(""."")                                   // package
            || canonicalName.length() == c.length()              // class
            ||    canonicalName.length() > c.length()            // nested
            && canonicalName.charAt(c.length()) == '$' ) {
            if (shouldInclude) {
              result = true;
            } else {
              return false;
            }
          }
        }
      }
    }
    return result;
  }","['private', 'static', 'boolean', 'isSystemClass', '(', 'String', 'name', ',', 'List', '<', 'String', '>', 'packageList', ')', '{', 'boolean', 'result', '=', 'false', ';', 'if', '(', 'packageList', '!=', 'null', ')', '{', 'String', 'canonicalName', '=', 'ClassLoaderUtil', '.', 'canonicalizeClassOrResource', '(', 'name', ')', ';', 'for', '(', 'String', 'c', ':', 'packageList', ')', '{', 'boolean', 'shouldInclude', '=', 'true', ';', 'if', '(', 'c', '.', 'startsWith', '(', '""-""', ')', ')', '{', 'c', '=', 'c', '.', 'substring', '(', '1', ')', ';', 'shouldInclude', '=', 'false', ';', '}', 'if', '(', 'canonicalName', '.', 'startsWith', '(', 'c', ')', ')', '{', 'if', '(', 'c', '.', 'endsWith', '(', '"".""', ')', '// package', '||', 'canonicalName', '.', 'length', '(', ')', '==', 'c', '.', 'length', '(', ')', '// class', '||', 'canonicalName', '.', 'length', '(', ')', '>', 'c', '.', 'length', '(', ')', '// nested', '&&', 'canonicalName', '.', 'charAt', '(', 'c', '.', 'length', '(', ')', ')', '==', ""'"", ""'"", ')', '{', 'if', '(', 'shouldInclude', ')', '{', 'result', '=', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', '}', '}', '}', 'return', 'result', ';', '}']","Checks if a class should be included as a system class.

A class is a system class if and only if it matches one of the positive
patterns and none of the negative ones.

@param name the class name to check
@param packageList a list of system class configurations.
@return true if the class is a system class","['Checks', 'if', 'a', 'class', 'should', 'be', 'included', 'as', 'a', 'system', 'class', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/bootstrap/src/main/java/com/streamsets/pipeline/SystemPackage.java#L47-L72,test
oblac/jodd,jodd-json/src/main/java/jodd/json/JsonParserBase.java,JsonParserBase.convertType,"protected Object convertType(final Object value, final Class targetType) {
		final Class valueClass = value.getClass();

		if (valueClass == targetType) {
			return value;
		}

		try {
			return TypeConverterManager.get().convertType(value, targetType);
		}
		catch (Exception ex) {
			if (!strictTypes) {
				return null;
			}
			throw new JsonException(""Type conversion failed"", ex);
		}
	}",java,"protected Object convertType(final Object value, final Class targetType) {
		final Class valueClass = value.getClass();

		if (valueClass == targetType) {
			return value;
		}

		try {
			return TypeConverterManager.get().convertType(value, targetType);
		}
		catch (Exception ex) {
			if (!strictTypes) {
				return null;
			}
			throw new JsonException(""Type conversion failed"", ex);
		}
	}","['protected', 'Object', 'convertType', '(', 'final', 'Object', 'value', ',', 'final', 'Class', 'targetType', ')', '{', 'final', 'Class', 'valueClass', '=', 'value', '.', 'getClass', '(', ')', ';', 'if', '(', 'valueClass', '==', 'targetType', ')', '{', 'return', 'value', ';', '}', 'try', '{', 'return', 'TypeConverterManager', '.', 'get', '(', ')', '.', 'convertType', '(', 'value', ',', 'targetType', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'if', '(', '!', 'strictTypes', ')', '{', 'return', 'null', ';', '}', 'throw', 'new', 'JsonException', '(', '""Type conversion failed""', ',', 'ex', ')', ';', '}', '}']",Converts type of the given value.,"['Converts', 'type', 'of', 'the', 'given', 'value', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-json/src/main/java/jodd/json/JsonParserBase.java#L151-L167,test
jkuhnert/ognl,src/main/java/ognl/OgnlRuntime.java,OgnlRuntime.getPackageName,"public static String getPackageName(Object o)
    {
        return (o == null) ? null : getClassPackageName(o.getClass());
    }",java,"public static String getPackageName(Object o)
    {
        return (o == null) ? null : getClassPackageName(o.getClass());
    }","['public', 'static', 'String', 'getPackageName', '(', 'Object', 'o', ')', '{', 'return', '(', 'o', '==', 'null', ')', '?', 'null', ':', 'getClassPackageName', '(', 'o', '.', 'getClass', '(', ')', ')', ';', '}']",Returns the package name of the object's class.,"['Returns', 'the', 'package', 'name', 'of', 'the', 'object', 's', 'class', '.']",53d51a30c8c299b750dede779d05cb84beee73c3,https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/OgnlRuntime.java#L485-L488,test
fuinorg/srcgen4j-core,src/main/java/org/fuin/srcgen4j/core/velocity/ParameterizedTemplateModels.java,ParameterizedTemplateModels.addParamTemplate,"public final void addParamTemplate(final ParameterizedTemplateModel paramTemplate) {
        if (paramTemplates == null) {
            paramTemplates = new ArrayList<ParameterizedTemplateModel>();
        }
        paramTemplates.add(paramTemplate);
    }",java,"public final void addParamTemplate(final ParameterizedTemplateModel paramTemplate) {
        if (paramTemplates == null) {
            paramTemplates = new ArrayList<ParameterizedTemplateModel>();
        }
        paramTemplates.add(paramTemplate);
    }","['public', 'final', 'void', 'addParamTemplate', '(', 'final', 'ParameterizedTemplateModel', 'paramTemplate', ')', '{', 'if', '(', 'paramTemplates', '==', 'null', ')', '{', 'paramTemplates', '=', 'new', 'ArrayList', '<', 'ParameterizedTemplateModel', '>', '(', ')', ';', '}', 'paramTemplates', '.', 'add', '(', 'paramTemplate', ')', ';', '}']","Adds another template to the list. If the list does not exist,it will be created.

@param paramTemplate
Template to add - Cannot be NULL.","['Adds', 'another', 'template', 'to', 'the', 'list', '.', 'If', 'the', 'list', 'does', 'not', 'exist', 'it', 'will', 'be', 'created', '.']",da2bc58370993e6294ddc4eb7e696fe255f979db,https://github.com/fuinorg/srcgen4j-core/blob/da2bc58370993e6294ddc4eb7e696fe255f979db/src/main/java/org/fuin/srcgen4j/core/velocity/ParameterizedTemplateModels.java#L72-L77,test
RestComm/jain-slee,container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbAbstractMethodHandler.java,SbbAbstractMethodHandler.getSbbUsageParameterSet,"public static Object getSbbUsageParameterSet(SbbEntity sbbEntity, String name)
			throws UnrecognizedUsageParameterSetNameException {
		if (logger.isTraceEnabled()) {
			logger.trace(""getSbbUsageParameterSet(): serviceId = ""
					+ sbbEntity.getSbbEntityId().getServiceID() + "" , sbbID = ""
					+ sbbEntity.getSbbId() + "" , name = "" + name);
		}
		return getServiceUsageMBeanImpl(sbbEntity.getSbbEntityId().getServiceID())
				.getInstalledUsageParameterSet(sbbEntity.getSbbId(), name);
	}",java,"public static Object getSbbUsageParameterSet(SbbEntity sbbEntity, String name)
			throws UnrecognizedUsageParameterSetNameException {
		if (logger.isTraceEnabled()) {
			logger.trace(""getSbbUsageParameterSet(): serviceId = ""
					+ sbbEntity.getSbbEntityId().getServiceID() + "" , sbbID = ""
					+ sbbEntity.getSbbId() + "" , name = "" + name);
		}
		return getServiceUsageMBeanImpl(sbbEntity.getSbbEntityId().getServiceID())
				.getInstalledUsageParameterSet(sbbEntity.getSbbId(), name);
	}","['public', 'static', 'Object', 'getSbbUsageParameterSet', '(', 'SbbEntity', 'sbbEntity', ',', 'String', 'name', ')', 'throws', 'UnrecognizedUsageParameterSetNameException', '{', 'if', '(', 'logger', '.', 'isTraceEnabled', '(', ')', ')', '{', 'logger', '.', 'trace', '(', '""getSbbUsageParameterSet(): serviceId = ""', '+', 'sbbEntity', '.', 'getSbbEntityId', '(', ')', '.', 'getServiceID', '(', ')', '+', '"" , sbbID = ""', '+', 'sbbEntity', '.', 'getSbbId', '(', ')', '+', '"" , name = ""', '+', 'name', ')', ';', '}', 'return', 'getServiceUsageMBeanImpl', '(', 'sbbEntity', '.', 'getSbbEntityId', '(', ')', '.', 'getServiceID', '(', ')', ')', '.', 'getInstalledUsageParameterSet', '(', 'sbbEntity', '.', 'getSbbId', '(', ')', ',', 'name', ')', ';', '}']",SBB USAGE PARAMS,"['SBB', 'USAGE', 'PARAMS']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbAbstractMethodHandler.java#L590-L599,test
apache/parquet-mr,parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftMetaData.java,ThriftMetaData.toExtraMetaData,"public Map<String, String> toExtraMetaData() {
    final Map<String, String> map = new HashMap<String, String>();
    map.put(THRIFT_CLASS, getThriftClass().getName());
    map.put(THRIFT_DESCRIPTOR, descriptor.toJSON());
    return map;
  }",java,"public Map<String, String> toExtraMetaData() {
    final Map<String, String> map = new HashMap<String, String>();
    map.put(THRIFT_CLASS, getThriftClass().getName());
    map.put(THRIFT_DESCRIPTOR, descriptor.toJSON());
    return map;
  }","['public', 'Map', '<', 'String', ',', 'String', '>', 'toExtraMetaData', '(', ')', '{', 'final', 'Map', '<', 'String', ',', 'String', '>', 'map', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'map', '.', 'put', '(', 'THRIFT_CLASS', ',', 'getThriftClass', '(', ')', '.', 'getName', '(', ')', ')', ';', 'map', '.', 'put', '(', 'THRIFT_DESCRIPTOR', ',', 'descriptor', '.', 'toJSON', '(', ')', ')', ';', 'return', 'map', ';', '}']","generates a map of key values to store in the footer
@return the key values","['generates', 'a', 'map', 'of', 'key', 'values', 'to', 'store', 'in', 'the', 'footer']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftMetaData.java#L128-L133,test
Unidata/thredds,opendap/src/main/java/opendap/dap/HeaderInputStream.java,HeaderInputStream.getMoreBytes,"private void getMoreBytes() throws IOException {
        currentOffset = 0;   // reset current array offset to 0
        int bytesRead = 0;   // bytes read so far
        int lookingFor = 0;  // character in endSequence to look for
        for (; bytesRead < lineBuf.length; bytesRead++) {
            int c = in.read();
            if (c == -1)
                break;  // break on EOL and return what we have so far

            lineBuf[bytesRead] = (byte) c;
            if (lineBuf[bytesRead] == endSequence[lookingFor]) {
                lookingFor++;
                if (lookingFor == endSequence.length) {
                    endFound = true;
                    break;
                }
            } else if (lineBuf[bytesRead] == endSequence[0]) { // CHANGED JC
                lookingFor = 1;
            } else {
                lookingFor = 0;
            }
        }
        bytesRemaining = bytesRead;  // number of bytes we've read
    }",java,"private void getMoreBytes() throws IOException {
        currentOffset = 0;   // reset current array offset to 0
        int bytesRead = 0;   // bytes read so far
        int lookingFor = 0;  // character in endSequence to look for
        for (; bytesRead < lineBuf.length; bytesRead++) {
            int c = in.read();
            if (c == -1)
                break;  // break on EOL and return what we have so far

            lineBuf[bytesRead] = (byte) c;
            if (lineBuf[bytesRead] == endSequence[lookingFor]) {
                lookingFor++;
                if (lookingFor == endSequence.length) {
                    endFound = true;
                    break;
                }
            } else if (lineBuf[bytesRead] == endSequence[0]) { // CHANGED JC
                lookingFor = 1;
            } else {
                lookingFor = 0;
            }
        }
        bytesRemaining = bytesRead;  // number of bytes we've read
    }","['private', 'void', 'getMoreBytes', '(', ')', 'throws', 'IOException', '{', 'currentOffset', '=', '0', ';', '// reset current array offset to 0\r', 'int', 'bytesRead', '=', '0', ';', '// bytes read so far\r', 'int', 'lookingFor', '=', '0', ';', '// character in endSequence to look for\r', 'for', '(', ';', 'bytesRead', '<', 'lineBuf', '.', 'length', ';', 'bytesRead', '++', ')', '{', 'int', 'c', '=', 'in', '.', 'read', '(', ')', ';', 'if', '(', 'c', '==', '-', '1', ')', 'break', ';', '// break on EOL and return what we have so far\r', 'lineBuf', '[', 'bytesRead', ']', '=', '(', 'byte', ')', 'c', ';', 'if', '(', 'lineBuf', '[', 'bytesRead', ']', '==', 'endSequence', '[', 'lookingFor', ']', ')', '{', 'lookingFor', '++', ';', 'if', '(', 'lookingFor', '==', 'endSequence', '.', 'length', ')', '{', 'endFound', '=', 'true', ';', 'break', ';', '}', '}', 'else', 'if', '(', 'lineBuf', '[', 'bytesRead', ']', '==', 'endSequence', '[', '0', ']', ')', '{', '// CHANGED JC\r', 'lookingFor', '=', '1', ';', '}', 'else', '{', 'lookingFor', '=', '0', ';', '}', '}', 'bytesRemaining', '=', 'bytesRead', ';', ""// number of bytes we've read\r"", '}']",Get more bytes into buffer.  Stop when endSequence is found.,"['Get', 'more', 'bytes', 'into', 'buffer', '.', 'Stop', 'when', 'endSequence', 'is', 'found', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/HeaderInputStream.java#L130-L153,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/gis/shapefile/DbaseFile.java,DbaseFile.loadData,"private int loadData() {
    if (!headerLoaded) return -1;
    if (dataLoaded) return 0;
    InputStream s = stream;
    if (s == null) return -1;
    try {
      /* read in the data */
      for (int i = 0; i < nrecords; i++) {
        /* read the data record indicator */
        byte recbyte = ds.readByte();
        if (recbyte == 0x20) {
          for (int j = 0; j < nfields; j++) {
            data[j].readRowN(ds, i);
          }
        } else {
          /* a deleted record */
          nrecords--;
          i--;
        }
      }
      dataLoaded = true;
    } catch (java.io.IOException e) {
      close(s);
      return -1;
    } finally {
      close(s);
    }
    return 0;
  }",java,"private int loadData() {
    if (!headerLoaded) return -1;
    if (dataLoaded) return 0;
    InputStream s = stream;
    if (s == null) return -1;
    try {
      /* read in the data */
      for (int i = 0; i < nrecords; i++) {
        /* read the data record indicator */
        byte recbyte = ds.readByte();
        if (recbyte == 0x20) {
          for (int j = 0; j < nfields; j++) {
            data[j].readRowN(ds, i);
          }
        } else {
          /* a deleted record */
          nrecords--;
          i--;
        }
      }
      dataLoaded = true;
    } catch (java.io.IOException e) {
      close(s);
      return -1;
    } finally {
      close(s);
    }
    return 0;
  }","['private', 'int', 'loadData', '(', ')', '{', 'if', '(', '!', 'headerLoaded', ')', 'return', '-', '1', ';', 'if', '(', 'dataLoaded', ')', 'return', '0', ';', 'InputStream', 's', '=', 'stream', ';', 'if', '(', 's', '==', 'null', ')', 'return', '-', '1', ';', 'try', '{', '/* read in the data */', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'nrecords', ';', 'i', '++', ')', '{', '/* read the data record indicator */', 'byte', 'recbyte', '=', 'ds', '.', 'readByte', '(', ')', ';', 'if', '(', 'recbyte', '==', '0x20', ')', '{', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'nfields', ';', 'j', '++', ')', '{', 'data', '[', 'j', ']', '.', 'readRowN', '(', 'ds', ',', 'i', ')', ';', '}', '}', 'else', '{', '/* a deleted record */', 'nrecords', '--', ';', 'i', '--', ';', '}', '}', 'dataLoaded', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'e', ')', '{', 'close', '(', 's', ')', ';', 'return', '-', '1', ';', '}', 'finally', '{', 'close', '(', 's', ')', ';', '}', 'return', '0', ';', '}']","Load the dbase file data.

@return 0 for success, -1 for failure","['Load', 'the', 'dbase', 'file', 'data', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/gis/shapefile/DbaseFile.java#L132-L160,test
oblac/jodd,jodd-vtor/src/main/java/jodd/vtor/Vtor.java,Vtor.useProfile,"public void useProfile(final String profile) {
		if (profile == null) {
			return;
		}
		if (this.enabledProfiles == null) {
			this.enabledProfiles = new HashSet<>();
		}
		this.enabledProfiles.add(profile);
	}",java,"public void useProfile(final String profile) {
		if (profile == null) {
			return;
		}
		if (this.enabledProfiles == null) {
			this.enabledProfiles = new HashSet<>();
		}
		this.enabledProfiles.add(profile);
	}","['public', 'void', 'useProfile', '(', 'final', 'String', 'profile', ')', '{', 'if', '(', 'profile', '==', 'null', ')', '{', 'return', ';', '}', 'if', '(', 'this', '.', 'enabledProfiles', '==', 'null', ')', '{', 'this', '.', 'enabledProfiles', '=', 'new', 'HashSet', '<>', '(', ')', ';', '}', 'this', '.', 'enabledProfiles', '.', 'add', '(', 'profile', ')', ';', '}']",Enables single profile.,"['Enables', 'single', 'profile', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-vtor/src/main/java/jodd/vtor/Vtor.java#L155-L163,test
streamsets/datacollector,jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/multithread/util/DirectedGraph.java,DirectedGraph.getInwardEdgeVertices,"public Collection<V> getInwardEdgeVertices(V vertex) {
    Collection<V> inwardEdgeVerticesForVertex =  inwardEdgesVertices.get(vertex);
    return inwardEdgeVerticesForVertex != null ? inwardEdgeVerticesForVertex : Collections.<V>emptySet();
  }",java,"public Collection<V> getInwardEdgeVertices(V vertex) {
    Collection<V> inwardEdgeVerticesForVertex =  inwardEdgesVertices.get(vertex);
    return inwardEdgeVerticesForVertex != null ? inwardEdgeVerticesForVertex : Collections.<V>emptySet();
  }","['public', 'Collection', '<', 'V', '>', 'getInwardEdgeVertices', '(', 'V', 'vertex', ')', '{', 'Collection', '<', 'V', '>', 'inwardEdgeVerticesForVertex', '=', 'inwardEdgesVertices', '.', 'get', '(', 'vertex', ')', ';', 'return', 'inwardEdgeVerticesForVertex', '!=', 'null', '?', 'inwardEdgeVerticesForVertex', ':', 'Collections', '.', '<', 'V', '>', 'emptySet', '(', ')', ';', '}']","Returns the inward flowing edge vertices.
@param vertex vertex
@return the inward flowing edge vertices.","['Returns', 'the', 'inward', 'flowing', 'edge', 'vertices', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/multithread/util/DirectedGraph.java#L65-L68,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java,LockFreeNQueue.poll,"public E poll()
    {
        /*log.fine(""public E poll(): called"");*/

        // This is used to keep track of the level of the list that is found to have data in it.
        int currentLevel = 0;

        while (true)
        {
            // This is used to locate the marker head of a list that contains data.
            Marker<E> h = null;

            // This is used to locate the potential data node of a list with data in it. Another thread may already
            // have taken this data.
            Node<E> first = null;

            // Second data item, may also be tail marker, first data item of next list, or null at end of last list.
            Node<E> second = null;

            // Loop down any empty lists at the front of the queue until a list with data in it is found.
            for (; currentLevel < n; currentLevel++)
            {
                h = markers[currentLevel];
                first = h.getNext();
                second = first.getNext();

                // Check if the list at the current level is not empty and should be tried for data.
                if (!h.isEmpty(markers[currentLevel + 1]))
                {
                    break;
                }

                // Check if the current level is empty and is the last level, in which case return null.
                else if (currentLevel == (n - 1))
                {
                    // log.info(""returning null from level loop."");

                    return null;
                }

                // Else if the current level is empty loop to the next one to see if it has data.
            }

            /*log.fine(""current poll level = "" + currentLevel);*/

            // This is used to locate the tail of the list that has been found with data in it.
            Node<E> t = markers[currentLevel + 1].getTail();

            // Check that the first data item has not yet been taken. Another thread may already have taken it,
            // in which case performing a relatively expensive cas on the head will fail. If first is still intact
            // then second will be intact too.
            if (first == h.getNext())
            {
                // Check if the queue has become empty.
                if (h.isEmpty(markers[currentLevel + 1]))
                {
                    // Another thread has managed to take data from the queue, leaving it empty.

                    // First won't be null. It may point to tail though...
                    if (first == null)
                    {
                        // Don't want to return here, want to try the next list. The list loop has a return null
                        // once it gets to the end to take care of that.
                        // log.info(""returning null as first == null"");

                        return null;
                    }
                    else
                    {
                        // Not sure yet why castail here? Does this repair a broken tail ref left after the last item
                        // was taken?
                        markers[currentLevel + 1].casTail(t, first);
                    }
                }

                // The queue contains data, so try to move its head marker reference from the first data item, onto the
                // second item (which may be data, or the tail marker). If this succeeds, then the first data node
                // has been atomically extracted from the head of the queue.
                else if (h.casNext(first, second))
                {
                    // h Does not refer to an empty queue, so first must be a data node.
                    DataNode<E> firstDataNode = ((DataNode<E>) first);
                    E item = firstDataNode.getItem();

                    // Even though the empty test did not indicate that the list was empty, it may contain null
                    // data items, because the remove method doesn't extract nodes on a remove. These need to be skipped
                    // over. Could they be removed here?
                    if (item != null)
                    {
                        firstDataNode.setItem(null);

                        /*log.fine(""returing item = "" + item);*/

                        // Decrement the queue size count.
                        count.decrementAndGet();

                        return item;
                    }

                    // else skip over deleted item, continue trying at this level. Go back an retry starting from same
                    // level. List at this level may now be empty, or may get the next item from it.

                    // else skip over marker element. just make markers return null for item to skip them? No, because
                    // need to advance currentLevel and get head and tail markers for the next level. but then, next
                    // level advance will occur when this level is retried and found to be empty won't it?
                }
            }
        }
    }",java,"public E poll()
    {
        /*log.fine(""public E poll(): called"");*/

        // This is used to keep track of the level of the list that is found to have data in it.
        int currentLevel = 0;

        while (true)
        {
            // This is used to locate the marker head of a list that contains data.
            Marker<E> h = null;

            // This is used to locate the potential data node of a list with data in it. Another thread may already
            // have taken this data.
            Node<E> first = null;

            // Second data item, may also be tail marker, first data item of next list, or null at end of last list.
            Node<E> second = null;

            // Loop down any empty lists at the front of the queue until a list with data in it is found.
            for (; currentLevel < n; currentLevel++)
            {
                h = markers[currentLevel];
                first = h.getNext();
                second = first.getNext();

                // Check if the list at the current level is not empty and should be tried for data.
                if (!h.isEmpty(markers[currentLevel + 1]))
                {
                    break;
                }

                // Check if the current level is empty and is the last level, in which case return null.
                else if (currentLevel == (n - 1))
                {
                    // log.info(""returning null from level loop."");

                    return null;
                }

                // Else if the current level is empty loop to the next one to see if it has data.
            }

            /*log.fine(""current poll level = "" + currentLevel);*/

            // This is used to locate the tail of the list that has been found with data in it.
            Node<E> t = markers[currentLevel + 1].getTail();

            // Check that the first data item has not yet been taken. Another thread may already have taken it,
            // in which case performing a relatively expensive cas on the head will fail. If first is still intact
            // then second will be intact too.
            if (first == h.getNext())
            {
                // Check if the queue has become empty.
                if (h.isEmpty(markers[currentLevel + 1]))
                {
                    // Another thread has managed to take data from the queue, leaving it empty.

                    // First won't be null. It may point to tail though...
                    if (first == null)
                    {
                        // Don't want to return here, want to try the next list. The list loop has a return null
                        // once it gets to the end to take care of that.
                        // log.info(""returning null as first == null"");

                        return null;
                    }
                    else
                    {
                        // Not sure yet why castail here? Does this repair a broken tail ref left after the last item
                        // was taken?
                        markers[currentLevel + 1].casTail(t, first);
                    }
                }

                // The queue contains data, so try to move its head marker reference from the first data item, onto the
                // second item (which may be data, or the tail marker). If this succeeds, then the first data node
                // has been atomically extracted from the head of the queue.
                else if (h.casNext(first, second))
                {
                    // h Does not refer to an empty queue, so first must be a data node.
                    DataNode<E> firstDataNode = ((DataNode<E>) first);
                    E item = firstDataNode.getItem();

                    // Even though the empty test did not indicate that the list was empty, it may contain null
                    // data items, because the remove method doesn't extract nodes on a remove. These need to be skipped
                    // over. Could they be removed here?
                    if (item != null)
                    {
                        firstDataNode.setItem(null);

                        /*log.fine(""returing item = "" + item);*/

                        // Decrement the queue size count.
                        count.decrementAndGet();

                        return item;
                    }

                    // else skip over deleted item, continue trying at this level. Go back an retry starting from same
                    // level. List at this level may now be empty, or may get the next item from it.

                    // else skip over marker element. just make markers return null for item to skip them? No, because
                    // need to advance currentLevel and get head and tail markers for the next level. but then, next
                    // level advance will occur when this level is retried and found to be empty won't it?
                }
            }
        }
    }","['public', 'E', 'poll', '(', ')', '{', '/*log.fine(""public E poll(): called"");*/', '// This is used to keep track of the level of the list that is found to have data in it.', 'int', 'currentLevel', '=', '0', ';', 'while', '(', 'true', ')', '{', '// This is used to locate the marker head of a list that contains data.', 'Marker', '<', 'E', '>', 'h', '=', 'null', ';', '// This is used to locate the potential data node of a list with data in it. Another thread may already', '// have taken this data.', 'Node', '<', 'E', '>', 'first', '=', 'null', ';', '// Second data item, may also be tail marker, first data item of next list, or null at end of last list.', 'Node', '<', 'E', '>', 'second', '=', 'null', ';', '// Loop down any empty lists at the front of the queue until a list with data in it is found.', 'for', '(', ';', 'currentLevel', '<', 'n', ';', 'currentLevel', '++', ')', '{', 'h', '=', 'markers', '[', 'currentLevel', ']', ';', 'first', '=', 'h', '.', 'getNext', '(', ')', ';', 'second', '=', 'first', '.', 'getNext', '(', ')', ';', '// Check if the list at the current level is not empty and should be tried for data.', 'if', '(', '!', 'h', '.', 'isEmpty', '(', 'markers', '[', 'currentLevel', '+', '1', ']', ')', ')', '{', 'break', ';', '}', '// Check if the current level is empty and is the last level, in which case return null.', 'else', 'if', '(', 'currentLevel', '==', '(', 'n', '-', '1', ')', ')', '{', '// log.info(""returning null from level loop."");', 'return', 'null', ';', '}', '// Else if the current level is empty loop to the next one to see if it has data.', '}', '/*log.fine(""current poll level = "" + currentLevel);*/', '// This is used to locate the tail of the list that has been found with data in it.', 'Node', '<', 'E', '>', 't', '=', 'markers', '[', 'currentLevel', '+', '1', ']', '.', 'getTail', '(', ')', ';', '// Check that the first data item has not yet been taken. Another thread may already have taken it,', '// in which case performing a relatively expensive cas on the head will fail. If first is still intact', '// then second will be intact too.', 'if', '(', 'first', '==', 'h', '.', 'getNext', '(', ')', ')', '{', '// Check if the queue has become empty.', 'if', '(', 'h', '.', 'isEmpty', '(', 'markers', '[', 'currentLevel', '+', '1', ']', ')', ')', '{', '// Another thread has managed to take data from the queue, leaving it empty.', ""// First won't be null. It may point to tail though..."", 'if', '(', 'first', '==', 'null', ')', '{', ""// Don't want to return here, want to try the next list. The list loop has a return null"", '// once it gets to the end to take care of that.', '// log.info(""returning null as first == null"");', 'return', 'null', ';', '}', 'else', '{', '// Not sure yet why castail here? Does this repair a broken tail ref left after the last item', '// was taken?', 'markers', '[', 'currentLevel', '+', '1', ']', '.', 'casTail', '(', 't', ',', 'first', ')', ';', '}', '}', '// The queue contains data, so try to move its head marker reference from the first data item, onto the', '// second item (which may be data, or the tail marker). If this succeeds, then the first data node', '// has been atomically extracted from the head of the queue.', 'else', 'if', '(', 'h', '.', 'casNext', '(', 'first', ',', 'second', ')', ')', '{', '// h Does not refer to an empty queue, so first must be a data node.', 'DataNode', '<', 'E', '>', 'firstDataNode', '=', '(', '(', 'DataNode', '<', 'E', '>', ')', 'first', ')', ';', 'E', 'item', '=', 'firstDataNode', '.', 'getItem', '(', ')', ';', '// Even though the empty test did not indicate that the list was empty, it may contain null', ""// data items, because the remove method doesn't extract nodes on a remove. These need to be skipped"", '// over. Could they be removed here?', 'if', '(', 'item', '!=', 'null', ')', '{', 'firstDataNode', '.', 'setItem', '(', 'null', ')', ';', '/*log.fine(""returing item = "" + item);*/', '// Decrement the queue size count.', 'count', '.', 'decrementAndGet', '(', ')', ';', 'return', 'item', ';', '}', '// else skip over deleted item, continue trying at this level. Go back an retry starting from same', '// level. List at this level may now be empty, or may get the next item from it.', '// else skip over marker element. just make markers return null for item to skip them? No, because', '// need to advance currentLevel and get head and tail markers for the next level. but then, next', ""// level advance will occur when this level is retried and found to be empty won't it?"", '}', '}', '}', '}']","Retrieves and removes the head of this queue, or null if this queue is empty.

<p/>This method will make a single pass down the queue, starting from the highest priority and working down to
the lowest. If it fails to extract an element from the queue on this single pass, it will return null. It is
possible that the queue contains transient data during this pass that this method does not manage to extract,
because other threads managed to take the data, or because other threads inserted higher priority data once this
pass was already further down the queue.

@return The head of this queue, or null if this queue is empty.","['Retrieves', 'and', 'removes', 'the', 'head', 'of', 'this', 'queue', 'or', 'null', 'if', 'this', 'queue', 'is', 'empty', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/concurrent/LockFreeNQueue.java#L288-L396,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/internal/authentication/Parser.java,Parser.skipWhiteSpace,"public void skipWhiteSpace() {
        while (pos < s.length() && Character.isWhitespace(s.charAt(pos)))
            ++pos;
    }",java,"public void skipWhiteSpace() {
        while (pos < s.length() && Character.isWhitespace(s.charAt(pos)))
            ++pos;
    }","['public', 'void', 'skipWhiteSpace', '(', ')', '{', 'while', '(', 'pos', '<', 's', '.', 'length', '(', ')', '&&', 'Character', '.', 'isWhitespace', '(', 's', '.', 'charAt', '(', 'pos', ')', ')', ')', '++', 'pos', ';', '}']","Skips the next sequence of white space in s. An exception is not
thrown if there is no matching white space.","['Skips', 'the', 'next', 'sequence', 'of', 'white', 'space', 'in', 's', '.', 'An', 'exception', 'is', 'not', 'thrown', 'if', 'there', 'is', 'no', 'matching', 'white', 'space', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/internal/authentication/Parser.java#L138-L141,test
boonproject/boon,boon/src/main/java/org/boon/StringScanner.java,StringScanner.parseInt,"public static int parseInt( String buffer, int from, int to ) {
        return CharScanner.parseInt( FastStringUtils.toCharArray(buffer), from , to );
    }",java,"public static int parseInt( String buffer, int from, int to ) {
        return CharScanner.parseInt( FastStringUtils.toCharArray(buffer), from , to );
    }","['public', 'static', 'int', 'parseInt', '(', 'String', 'buffer', ',', 'int', 'from', ',', 'int', 'to', ')', '{', 'return', 'CharScanner', '.', 'parseInt', '(', 'FastStringUtils', '.', 'toCharArray', '(', 'buffer', ')', ',', 'from', ',', 'to', ')', ';', '}']","parse an int within a range
@param buffer input string
@return value","['parse', 'an', 'int', 'within', 'a', 'range']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/StringScanner.java#L234-L236,test
basis-technology-corp/tcl-regex-java,src/main/java/com/basistech/tclre/Nfa.java,Nfa.copyins,"void copyins(State old, State newState) {
        Arc a;

        assert old != newState;

        for (a = old.ins; a != null; a = a.inchain) {
            cparc(a, a.from, newState);
        }
    }",java,"void copyins(State old, State newState) {
        Arc a;

        assert old != newState;

        for (a = old.ins; a != null; a = a.inchain) {
            cparc(a, a.from, newState);
        }
    }","['void', 'copyins', '(', 'State', 'old', ',', 'State', 'newState', ')', '{', 'Arc', 'a', ';', 'assert', 'old', '!=', 'newState', ';', 'for', '(', 'a', '=', 'old', '.', 'ins', ';', 'a', '!=', 'null', ';', 'a', '=', 'a', '.', 'inchain', ')', '{', 'cparc', '(', 'a', ',', 'a', '.', 'from', ',', 'newState', ')', ';', '}', '}']",copyins - copy all in arcs of a state to another state,"['copyins', '-', 'copy', 'all', 'in', 'arcs', 'of', 'a', 'state', 'to', 'another', 'state']",de0d5eaccf9a61b694cb8793f234cc229c395b43,https://github.com/basis-technology-corp/tcl-regex-java/blob/de0d5eaccf9a61b694cb8793f234cc229c395b43/src/main/java/com/basistech/tclre/Nfa.java#L177-L185,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,FeatureStyleExtension.setFeatureStyles,"public void setFeatureStyles(String featureTable, long featureId,
                                 FeatureStyles featureStyles) {
        if (featureStyles != null) {
            setStyles(featureTable, featureId, featureStyles.getStyles());
            setIcons(featureTable, featureId, featureStyles.getIcons());
        } else {
            deleteStyles(featureTable, featureId);
            deleteIcons(featureTable, featureId);
        }
    }",java,"public void setFeatureStyles(String featureTable, long featureId,
                                 FeatureStyles featureStyles) {
        if (featureStyles != null) {
            setStyles(featureTable, featureId, featureStyles.getStyles());
            setIcons(featureTable, featureId, featureStyles.getIcons());
        } else {
            deleteStyles(featureTable, featureId);
            deleteIcons(featureTable, featureId);
        }
    }","['public', 'void', 'setFeatureStyles', '(', 'String', 'featureTable', ',', 'long', 'featureId', ',', 'FeatureStyles', 'featureStyles', ')', '{', 'if', '(', 'featureStyles', '!=', 'null', ')', '{', 'setStyles', '(', 'featureTable', ',', 'featureId', ',', 'featureStyles', '.', 'getStyles', '(', ')', ')', ';', 'setIcons', '(', 'featureTable', ',', 'featureId', ',', 'featureStyles', '.', 'getIcons', '(', ')', ')', ';', '}', 'else', '{', 'deleteStyles', '(', 'featureTable', ',', 'featureId', ')', ';', 'deleteIcons', '(', 'featureTable', ',', 'featureId', ')', ';', '}', '}']","Set the feature styles for the feature table and feature id

@param featureTable  feature table
@param featureId     feature id
@param featureStyles feature styles","['Set', 'the', 'feature', 'styles', 'for', 'the', 'feature', 'table', 'and', 'feature', 'id']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L991-L1000,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/kb/ConceptType.java,ConceptType.setId,"public void setId(String v) {
    if (ConceptType_Type.featOkTst && ((ConceptType_Type)jcasType).casFeat_id == null)
      jcasType.jcas.throwFeatMissing(""id"", ""edu.cmu.lti.oaqa.type.kb.ConceptType"");
    jcasType.ll_cas.ll_setStringValue(addr, ((ConceptType_Type)jcasType).casFeatCode_id, v);}",java,"public void setId(String v) {
    if (ConceptType_Type.featOkTst && ((ConceptType_Type)jcasType).casFeat_id == null)
      jcasType.jcas.throwFeatMissing(""id"", ""edu.cmu.lti.oaqa.type.kb.ConceptType"");
    jcasType.ll_cas.ll_setStringValue(addr, ((ConceptType_Type)jcasType).casFeatCode_id, v);}","['public', 'void', 'setId', '(', 'String', 'v', ')', '{', 'if', '(', 'ConceptType_Type', '.', 'featOkTst', '&&', '(', '(', 'ConceptType_Type', ')', 'jcasType', ')', '.', 'casFeat_id', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""id""', ',', '""edu.cmu.lti.oaqa.type.kb.ConceptType""', ')', ';', 'jcasType', '.', 'll_cas', '.', 'll_setStringValue', '(', 'addr', ',', '(', '(', 'ConceptType_Type', ')', 'jcasType', ')', '.', 'casFeatCode_id', ',', 'v', ')', ';', '}']","setter for id - sets The id of the concept type.
@generated
@param v value to set into the feature","['setter', 'for', 'id', '-', 'sets', 'The', 'id', 'of', 'the', 'concept', 'type', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/kb/ConceptType.java#L83-L86,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/server/KieServiceDelegate.java,KieServiceDelegate.getJobStatus,"public String getJobStatus(final String jobId, final String title) throws IOException, InterruptedException {
		final AtomicReference<String> ar = new AtomicReference<String>();

		IWorkbench wb = PlatformUI.getWorkbench();
		IProgressService ps = wb.getProgressService();
		try {
			ps.busyCursorWhile(new IRunnableWithProgress() {
				public void run(IProgressMonitor pm) throws InterruptedException {
					pm.beginTask(""Waiting for Job ""+jobId+"":\n\n""+title, STATUS_REQUEST_TIMEOUT);
					pm.subTask(title);
					long startTime = System.currentTimeMillis();
					long stopTime = startTime;
					do {
						try {
							// send a Job Status request every STATUS_REQUEST_DELAY milliseconds
							Thread.sleep(STATUS_REQUEST_DELAY);
							String response = httpGet(""jobs/"" + jobId);
							JsonObject jo = JsonObject.readFrom(response);
							String status = jo.get(""status"").asString();
							String result = jo.get(""result"").asString();
							if (""null"".equals(result)) {
								if (!""SUCCESS"".equals(status))
									result = null;
							}
							if (status!=null && result!=null)
								ar.set(status + "":"" + result);
							stopTime = System.currentTimeMillis();
							pm.worked(STATUS_REQUEST_DELAY);

							Activator.println(""status=""+status);
							Activator.println(""result=""+result);
						}
						catch (Exception e) {
							e.printStackTrace();
						}
						if (pm.isCanceled())
							throw new InterruptedException(""Operation canceled"");
					}
					while (ar.get()==null && stopTime - startTime < STATUS_REQUEST_TIMEOUT);
					pm.done();
					Activator.println(
							""\n----------------------------------\n""+
							""Job ""+jobId+""\n""+title+""\ncompleted in ""+(stopTime - startTime) / 1000.0+"" sec\n""+
							""Status: "" + ar.get()+
							""\n----------------------------------\n"");
				}
			});
		}
		catch (InvocationTargetException e) {
			e.printStackTrace();
			return null;
		}

		return ar.get();
	}",java,"public String getJobStatus(final String jobId, final String title) throws IOException, InterruptedException {
		final AtomicReference<String> ar = new AtomicReference<String>();

		IWorkbench wb = PlatformUI.getWorkbench();
		IProgressService ps = wb.getProgressService();
		try {
			ps.busyCursorWhile(new IRunnableWithProgress() {
				public void run(IProgressMonitor pm) throws InterruptedException {
					pm.beginTask(""Waiting for Job ""+jobId+"":\n\n""+title, STATUS_REQUEST_TIMEOUT);
					pm.subTask(title);
					long startTime = System.currentTimeMillis();
					long stopTime = startTime;
					do {
						try {
							// send a Job Status request every STATUS_REQUEST_DELAY milliseconds
							Thread.sleep(STATUS_REQUEST_DELAY);
							String response = httpGet(""jobs/"" + jobId);
							JsonObject jo = JsonObject.readFrom(response);
							String status = jo.get(""status"").asString();
							String result = jo.get(""result"").asString();
							if (""null"".equals(result)) {
								if (!""SUCCESS"".equals(status))
									result = null;
							}
							if (status!=null && result!=null)
								ar.set(status + "":"" + result);
							stopTime = System.currentTimeMillis();
							pm.worked(STATUS_REQUEST_DELAY);

							Activator.println(""status=""+status);
							Activator.println(""result=""+result);
						}
						catch (Exception e) {
							e.printStackTrace();
						}
						if (pm.isCanceled())
							throw new InterruptedException(""Operation canceled"");
					}
					while (ar.get()==null && stopTime - startTime < STATUS_REQUEST_TIMEOUT);
					pm.done();
					Activator.println(
							""\n----------------------------------\n""+
							""Job ""+jobId+""\n""+title+""\ncompleted in ""+(stopTime - startTime) / 1000.0+"" sec\n""+
							""Status: "" + ar.get()+
							""\n----------------------------------\n"");
				}
			});
		}
		catch (InvocationTargetException e) {
			e.printStackTrace();
			return null;
		}

		return ar.get();
	}","['public', 'String', 'getJobStatus', '(', 'final', 'String', 'jobId', ',', 'final', 'String', 'title', ')', 'throws', 'IOException', ',', 'InterruptedException', '{', 'final', 'AtomicReference', '<', 'String', '>', 'ar', '=', 'new', 'AtomicReference', '<', 'String', '>', '(', ')', ';', 'IWorkbench', 'wb', '=', 'PlatformUI', '.', 'getWorkbench', '(', ')', ';', 'IProgressService', 'ps', '=', 'wb', '.', 'getProgressService', '(', ')', ';', 'try', '{', 'ps', '.', 'busyCursorWhile', '(', 'new', 'IRunnableWithProgress', '(', ')', '{', 'public', 'void', 'run', '(', 'IProgressMonitor', 'pm', ')', 'throws', 'InterruptedException', '{', 'pm', '.', 'beginTask', '(', '""Waiting for Job ""', '+', 'jobId', '+', '"":\\n\\n""', '+', 'title', ',', 'STATUS_REQUEST_TIMEOUT', ')', ';', 'pm', '.', 'subTask', '(', 'title', ')', ';', 'long', 'startTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'stopTime', '=', 'startTime', ';', 'do', '{', 'try', '{', '// send a Job Status request every STATUS_REQUEST_DELAY milliseconds', 'Thread', '.', 'sleep', '(', 'STATUS_REQUEST_DELAY', ')', ';', 'String', 'response', '=', 'httpGet', '(', '""jobs/""', '+', 'jobId', ')', ';', 'JsonObject', 'jo', '=', 'JsonObject', '.', 'readFrom', '(', 'response', ')', ';', 'String', 'status', '=', 'jo', '.', 'get', '(', '""status""', ')', '.', 'asString', '(', ')', ';', 'String', 'result', '=', 'jo', '.', 'get', '(', '""result""', ')', '.', 'asString', '(', ')', ';', 'if', '(', '""null""', '.', 'equals', '(', 'result', ')', ')', '{', 'if', '(', '!', '""SUCCESS""', '.', 'equals', '(', 'status', ')', ')', 'result', '=', 'null', ';', '}', 'if', '(', 'status', '!=', 'null', '&&', 'result', '!=', 'null', ')', 'ar', '.', 'set', '(', 'status', '+', '"":""', '+', 'result', ')', ';', 'stopTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'pm', '.', 'worked', '(', 'STATUS_REQUEST_DELAY', ')', ';', 'Activator', '.', 'println', '(', '""status=""', '+', 'status', ')', ';', 'Activator', '.', 'println', '(', '""result=""', '+', 'result', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'if', '(', 'pm', '.', 'isCanceled', '(', ')', ')', 'throw', 'new', 'InterruptedException', '(', '""Operation canceled""', ')', ';', '}', 'while', '(', 'ar', '.', 'get', '(', ')', '==', 'null', '&&', 'stopTime', '-', 'startTime', '<', 'STATUS_REQUEST_TIMEOUT', ')', ';', 'pm', '.', 'done', '(', ')', ';', 'Activator', '.', 'println', '(', '""\\n----------------------------------\\n""', '+', '""Job ""', '+', 'jobId', '+', '""\\n""', '+', 'title', '+', '""\\ncompleted in ""', '+', '(', 'stopTime', '-', 'startTime', ')', '/', '1000.0', '+', '"" sec\\n""', '+', '""Status: ""', '+', 'ar', '.', 'get', '(', ')', '+', '""\\n----------------------------------\\n""', ')', ';', '}', '}', ')', ';', '}', 'catch', '(', 'InvocationTargetException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'null', ';', '}', 'return', 'ar', '.', 'get', '(', ')', ';', '}']","Sends a job status request to the KIE Server.

@param jobId - the job ID from a previous HTTP POST or DELETE request
@return a string composed of a status word (e.g. ""SUCCESS"" or
""BAD_REQUEST"") followed by a colon delimiter and a detailed
message.
@throws IOException","['Sends', 'a', 'job', 'status', 'request', 'to', 'the', 'KIE', 'Server', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/server/KieServiceDelegate.java#L199-L253,test
GlenKPeterson/Paguro,src/main/java/org/organicdesign/fp/collections/PersistentTreeMap.java,PersistentTreeMap.empty,"public static <K,V> PersistentTreeMap<K,V> empty(Comparator<? super K> c) {
        return new PersistentTreeMap<>(c, null, 0);
    }",java,"public static <K,V> PersistentTreeMap<K,V> empty(Comparator<? super K> c) {
        return new PersistentTreeMap<>(c, null, 0);
    }","['public', 'static', '<', 'K', ',', 'V', '>', 'PersistentTreeMap', '<', 'K', ',', 'V', '>', 'empty', '(', 'Comparator', '<', '?', 'super', 'K', '>', 'c', ')', '{', 'return', 'new', 'PersistentTreeMap', '<>', '(', 'c', ',', 'null', ',', '0', ')', ';', '}']",Returns a new empty PersistentTreeMap that will use the specified comparator.,"['Returns', 'a', 'new', 'empty', 'PersistentTreeMap', 'that', 'will', 'use', 'the', 'specified', 'comparator', '.']",eac0d64b2eb9496967334f635cdb270cffb2197b,https://github.com/GlenKPeterson/Paguro/blob/eac0d64b2eb9496967334f635cdb270cffb2197b/src/main/java/org/organicdesign/fp/collections/PersistentTreeMap.java#L121-L123,test
oblac/jodd,jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java,AuthAction.tokenAsJson,"protected JsonResult tokenAsJson(final T authToken) {
		final JsonObject jsonObject = new JsonObject();

		jsonObject.put(""token"", userAuth.tokenValue(authToken));

		return JsonResult.of(jsonObject);
	}",java,"protected JsonResult tokenAsJson(final T authToken) {
		final JsonObject jsonObject = new JsonObject();

		jsonObject.put(""token"", userAuth.tokenValue(authToken));

		return JsonResult.of(jsonObject);
	}","['protected', 'JsonResult', 'tokenAsJson', '(', 'final', 'T', 'authToken', ')', '{', 'final', 'JsonObject', 'jsonObject', '=', 'new', 'JsonObject', '(', ')', ';', 'jsonObject', '.', 'put', '(', '""token""', ',', 'userAuth', '.', 'tokenValue', '(', 'authToken', ')', ')', ';', 'return', 'JsonResult', '.', 'of', '(', 'jsonObject', ')', ';', '}']",Prepares the JSON payload that carries on the token value.,"['Prepares', 'the', 'JSON', 'payload', 'that', 'carries', 'on', 'the', 'token', 'value', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java#L103-L109,test
RestComm/jain-slee,container/jmx-property-editors/src/main/java/org/mobicents/slee/container/management/jmx/editors/ComponentIDArrayPropertyEditor.java,ComponentIDArrayPropertyEditor.setAsText,"public void setAsText(String text ) {
        if ( text == null || text.equals("""")) {
            super.setValue( new ComponentID[0]);
        } else {
            java.util.ArrayList results = new java.util.ArrayList();
            // the format for component ID is name vendor version.
            java.util.StringTokenizer st = new java.util.StringTokenizer(text,CID_SEPARATOR,true);
            ComponentIDPropertyEditor cidPropEditor = new ComponentIDPropertyEditor();
            while (st.hasMoreTokens()) {
                cidPropEditor.setAsText(st.nextToken());
                if (st.hasMoreTokens()) {
                	st.nextToken();
                }
                results.add(cidPropEditor.getValue());
            }
            ComponentID[] cid = new ComponentID[results.size()];
            results.toArray(cid);
            this.setValue(cid);
        }
        
    }",java,"public void setAsText(String text ) {
        if ( text == null || text.equals("""")) {
            super.setValue( new ComponentID[0]);
        } else {
            java.util.ArrayList results = new java.util.ArrayList();
            // the format for component ID is name vendor version.
            java.util.StringTokenizer st = new java.util.StringTokenizer(text,CID_SEPARATOR,true);
            ComponentIDPropertyEditor cidPropEditor = new ComponentIDPropertyEditor();
            while (st.hasMoreTokens()) {
                cidPropEditor.setAsText(st.nextToken());
                if (st.hasMoreTokens()) {
                	st.nextToken();
                }
                results.add(cidPropEditor.getValue());
            }
            ComponentID[] cid = new ComponentID[results.size()];
            results.toArray(cid);
            this.setValue(cid);
        }
        
    }","['public', 'void', 'setAsText', '(', 'String', 'text', ')', '{', 'if', '(', 'text', '==', 'null', '||', 'text', '.', 'equals', '(', '""""', ')', ')', '{', 'super', '.', 'setValue', '(', 'new', 'ComponentID', '[', '0', ']', ')', ';', '}', 'else', '{', 'java', '.', 'util', '.', 'ArrayList', 'results', '=', 'new', 'java', '.', 'util', '.', 'ArrayList', '(', ')', ';', '// the format for component ID is name vendor version.\r', 'java', '.', 'util', '.', 'StringTokenizer', 'st', '=', 'new', 'java', '.', 'util', '.', 'StringTokenizer', '(', 'text', ',', 'CID_SEPARATOR', ',', 'true', ')', ';', 'ComponentIDPropertyEditor', 'cidPropEditor', '=', 'new', 'ComponentIDPropertyEditor', '(', ')', ';', 'while', '(', 'st', '.', 'hasMoreTokens', '(', ')', ')', '{', 'cidPropEditor', '.', 'setAsText', '(', 'st', '.', 'nextToken', '(', ')', ')', ';', 'if', '(', 'st', '.', 'hasMoreTokens', '(', ')', ')', '{', 'st', '.', 'nextToken', '(', ')', ';', '}', 'results', '.', 'add', '(', 'cidPropEditor', '.', 'getValue', '(', ')', ')', ';', '}', 'ComponentID', '[', ']', 'cid', '=', 'new', 'ComponentID', '[', 'results', '.', 'size', '(', ')', ']', ';', 'results', '.', 'toArray', '(', 'cid', ')', ';', 'this', '.', 'setValue', '(', 'cid', ')', ';', '}', '}']","Set the element as text value, parse it and setValue.
The separator is CID_SEPARATOR","['Set', 'the', 'element', 'as', 'text', 'value', 'parse', 'it', 'and', 'setValue', '.', 'The', 'separator', 'is', 'CID_SEPARATOR']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/jmx-property-editors/src/main/java/org/mobicents/slee/container/management/jmx/editors/ComponentIDArrayPropertyEditor.java#L55-L75,test
Unidata/thredds,tdcommon/src/main/java/thredds/server/catalog/DataRootPathMatcher.java,DataRootPathMatcher.convert2DataRoot,"public @Nonnull DataRoot convert2DataRoot(DataRootExt dataRootExt) {
    DataRoot dataRoot = dataRootExt.getDataRoot();
    if (dataRoot != null) return dataRoot;

    // otherwise must read the catalog that its in
    dataRoot = readDataRootFromCatalog(dataRootExt);
    dataRootExt.setDataRoot(dataRoot);
    return dataRoot;
  }",java,"public @Nonnull DataRoot convert2DataRoot(DataRootExt dataRootExt) {
    DataRoot dataRoot = dataRootExt.getDataRoot();
    if (dataRoot != null) return dataRoot;

    // otherwise must read the catalog that its in
    dataRoot = readDataRootFromCatalog(dataRootExt);
    dataRootExt.setDataRoot(dataRoot);
    return dataRoot;
  }","['public', '@', 'Nonnull', 'DataRoot', 'convert2DataRoot', '(', 'DataRootExt', 'dataRootExt', ')', '{', 'DataRoot', 'dataRoot', '=', 'dataRootExt', '.', 'getDataRoot', '(', ')', ';', 'if', '(', 'dataRoot', '!=', 'null', ')', 'return', 'dataRoot', ';', '// otherwise must read the catalog that its in', 'dataRoot', '=', 'readDataRootFromCatalog', '(', 'dataRootExt', ')', ';', 'dataRootExt', '.', 'setDataRoot', '(', 'dataRoot', ')', ';', 'return', 'dataRoot', ';', '}']",convert a dataRootExt to a dataRoot,"['convert', 'a', 'dataRootExt', 'to', 'a', 'dataRoot']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tdcommon/src/main/java/thredds/server/catalog/DataRootPathMatcher.java#L130-L138,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/AbstractResourceHandle.java,AbstractResourceHandle.versionControl,"public void versionControl() throws DAVException {
        IResponse response = null;
        try {
            response = davClient.versionControl(locator, newContext(), null);
            examineResponse(response);
        } catch (IOException e) {
            throw new SystemException(e);
        } finally {
            closeResponse(response);
        }
    }",java,"public void versionControl() throws DAVException {
        IResponse response = null;
        try {
            response = davClient.versionControl(locator, newContext(), null);
            examineResponse(response);
        } catch (IOException e) {
            throw new SystemException(e);
        } finally {
            closeResponse(response);
        }
    }","['public', 'void', 'versionControl', '(', ')', 'throws', 'DAVException', '{', 'IResponse', 'response', '=', 'null', ';', 'try', '{', 'response', '=', 'davClient', '.', 'versionControl', '(', 'locator', ',', 'newContext', '(', ')', ',', 'null', ')', ';', 'examineResponse', '(', 'response', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'SystemException', '(', 'e', ')', ';', '}', 'finally', '{', 'closeResponse', '(', 'response', ')', ';', '}', '}']","Bring the receiver under version control.  This means that
the receiver is replaced by a version-controlled resource.
Note that the client may send version control to a resource
that is already under version control with no adverse effects.

@throws DAVException if a problem occurs bringing the
resource under version control.","['Bring', 'the', 'receiver', 'under', 'version', 'control', '.', 'This', 'means', 'that', 'the', 'receiver', 'is', 'replaced', 'by', 'a', 'version', '-', 'controlled', 'resource', '.', 'Note', 'that', 'the', 'client', 'may', 'send', 'version', 'control', 'to', 'a', 'resource', 'that', 'is', 'already', 'under', 'version', 'control', 'with', 'no', 'adverse', 'effects', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/AbstractResourceHandle.java#L1295-L1305,test
Netflix/hollow,hollow/src/main/java/com/netflix/hollow/api/codegen/HollowAPIGenerator.java,HollowAPIGenerator.hasCollectionsInDataSet,"protected static boolean hasCollectionsInDataSet(HollowDataset dataset) {
        for(HollowSchema schema : dataset.getSchemas()) {
            if ((schema instanceof HollowListSchema) ||
                    (schema instanceof HollowSetSchema) ||
                    (schema instanceof HollowMapSchema)) {
                return true;
            }
        }
        return false;
    }",java,"protected static boolean hasCollectionsInDataSet(HollowDataset dataset) {
        for(HollowSchema schema : dataset.getSchemas()) {
            if ((schema instanceof HollowListSchema) ||
                    (schema instanceof HollowSetSchema) ||
                    (schema instanceof HollowMapSchema)) {
                return true;
            }
        }
        return false;
    }","['protected', 'static', 'boolean', 'hasCollectionsInDataSet', '(', 'HollowDataset', 'dataset', ')', '{', 'for', '(', 'HollowSchema', 'schema', ':', 'dataset', '.', 'getSchemas', '(', ')', ')', '{', 'if', '(', '(', 'schema', 'instanceof', 'HollowListSchema', ')', '||', '(', 'schema', 'instanceof', 'HollowSetSchema', ')', '||', '(', 'schema', 'instanceof', 'HollowMapSchema', ')', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","Determines whether DataSet contains any collections schema
@param dataset the data set
@return {@code true} if the data set contains any collections schema","['Determines', 'whether', 'DataSet', 'contains', 'any', 'collections', 'schema']",43ca100034a01050fb764170bd32b085ac9a3c22,https://github.com/Netflix/hollow/blob/43ca100034a01050fb764170bd32b085ac9a3c22/hollow/src/main/java/com/netflix/hollow/api/codegen/HollowAPIGenerator.java#L288-L297,test
streamsets/datacollector,kinesis-lib/src/main/java/com/streamsets/pipeline/stage/lib/kinesis/KinesisUtil.java,KinesisUtil.checkStreamExists,"public static long checkStreamExists(
      ClientConfiguration awsClientConfig,
      KinesisConfigBean conf,
      String streamName,
      List<Stage.ConfigIssue> issues,
      Stage.Context context
  ) {
    long numShards = 0;

    try {
      numShards = getShardCount(awsClientConfig, conf, streamName);
    } catch (AmazonClientException|StageException e) {
      LOG.error(Errors.KINESIS_01.getMessage(), e.toString(), e);
      issues.add(context.createConfigIssue(
          Groups.KINESIS.name(),
          KINESIS_CONFIG_BEAN + "".streamName"", Errors.KINESIS_01, e.toString()
      ));
    }
    return numShards;
  }",java,"public static long checkStreamExists(
      ClientConfiguration awsClientConfig,
      KinesisConfigBean conf,
      String streamName,
      List<Stage.ConfigIssue> issues,
      Stage.Context context
  ) {
    long numShards = 0;

    try {
      numShards = getShardCount(awsClientConfig, conf, streamName);
    } catch (AmazonClientException|StageException e) {
      LOG.error(Errors.KINESIS_01.getMessage(), e.toString(), e);
      issues.add(context.createConfigIssue(
          Groups.KINESIS.name(),
          KINESIS_CONFIG_BEAN + "".streamName"", Errors.KINESIS_01, e.toString()
      ));
    }
    return numShards;
  }","['public', 'static', 'long', 'checkStreamExists', '(', 'ClientConfiguration', 'awsClientConfig', ',', 'KinesisConfigBean', 'conf', ',', 'String', 'streamName', ',', 'List', '<', 'Stage', '.', 'ConfigIssue', '>', 'issues', ',', 'Stage', '.', 'Context', 'context', ')', '{', 'long', 'numShards', '=', '0', ';', 'try', '{', 'numShards', '=', 'getShardCount', '(', 'awsClientConfig', ',', 'conf', ',', 'streamName', ')', ';', '}', 'catch', '(', 'AmazonClientException', '|', 'StageException', 'e', ')', '{', 'LOG', '.', 'error', '(', 'Errors', '.', 'KINESIS_01', '.', 'getMessage', '(', ')', ',', 'e', '.', 'toString', '(', ')', ',', 'e', ')', ';', 'issues', '.', 'add', '(', 'context', '.', 'createConfigIssue', '(', 'Groups', '.', 'KINESIS', '.', 'name', '(', ')', ',', 'KINESIS_CONFIG_BEAN', '+', '"".streamName""', ',', 'Errors', '.', 'KINESIS_01', ',', 'e', '.', 'toString', '(', ')', ')', ')', ';', '}', 'return', 'numShards', ';', '}']","Checks for existence of the requested stream and adds
any configuration issues to the list.
@param conf
@param streamName
@param issues
@param context","['Checks', 'for', 'existence', 'of', 'the', 'requested', 'stream', 'and', 'adds', 'any', 'configuration', 'issues', 'to', 'the', 'list', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/kinesis-lib/src/main/java/com/streamsets/pipeline/stage/lib/kinesis/KinesisUtil.java#L66-L85,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java,WebApp.registerMadvocComponents,"protected void registerMadvocComponents() {
		if (madvocContainer == null) {
			throw new MadvocException(""Madvoc WebApp not initialized."");
		}

		log.debug(""Registering Madvoc WebApp components"");

		madvocContainer.registerComponent(MadvocEncoding.class);

		madvocContainer.registerComponentInstance(new ServletContextProvider(servletContext));

		madvocContainer.registerComponent(ActionConfigManager.class);
		madvocContainer.registerComponent(ActionMethodParamNameResolver.class);
		madvocContainer.registerComponent(ActionMethodParser.class);
		madvocContainer.registerComponent(ActionPathRewriter.class);
		madvocContainer.registerComponent(ActionsManager.class);
		madvocContainer.registerComponent(ContextInjectorComponent.class);
		madvocContainer.registerComponent(InterceptorsManager.class);
		madvocContainer.registerComponent(FiltersManager.class);
		madvocContainer.registerComponent(MadvocController.class);
		madvocContainer.registerComponent(RootPackages.class);
		madvocContainer.registerComponent(ResultsManager.class);
		madvocContainer.registerComponent(ResultMapper.class);
		madvocContainer.registerComponent(ScopeResolver.class);
		madvocContainer.registerComponent(ScopeDataInspector.class);
		madvocContainer.registerComponent(AsyncActionExecutor.class);
		madvocContainer.registerComponent(FileUploader.class);
	}",java,"protected void registerMadvocComponents() {
		if (madvocContainer == null) {
			throw new MadvocException(""Madvoc WebApp not initialized."");
		}

		log.debug(""Registering Madvoc WebApp components"");

		madvocContainer.registerComponent(MadvocEncoding.class);

		madvocContainer.registerComponentInstance(new ServletContextProvider(servletContext));

		madvocContainer.registerComponent(ActionConfigManager.class);
		madvocContainer.registerComponent(ActionMethodParamNameResolver.class);
		madvocContainer.registerComponent(ActionMethodParser.class);
		madvocContainer.registerComponent(ActionPathRewriter.class);
		madvocContainer.registerComponent(ActionsManager.class);
		madvocContainer.registerComponent(ContextInjectorComponent.class);
		madvocContainer.registerComponent(InterceptorsManager.class);
		madvocContainer.registerComponent(FiltersManager.class);
		madvocContainer.registerComponent(MadvocController.class);
		madvocContainer.registerComponent(RootPackages.class);
		madvocContainer.registerComponent(ResultsManager.class);
		madvocContainer.registerComponent(ResultMapper.class);
		madvocContainer.registerComponent(ScopeResolver.class);
		madvocContainer.registerComponent(ScopeDataInspector.class);
		madvocContainer.registerComponent(AsyncActionExecutor.class);
		madvocContainer.registerComponent(FileUploader.class);
	}","['protected', 'void', 'registerMadvocComponents', '(', ')', '{', 'if', '(', 'madvocContainer', '==', 'null', ')', '{', 'throw', 'new', 'MadvocException', '(', '""Madvoc WebApp not initialized.""', ')', ';', '}', 'log', '.', 'debug', '(', '""Registering Madvoc WebApp components""', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'MadvocEncoding', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponentInstance', '(', 'new', 'ServletContextProvider', '(', 'servletContext', ')', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ActionConfigManager', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ActionMethodParamNameResolver', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ActionMethodParser', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ActionPathRewriter', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ActionsManager', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ContextInjectorComponent', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'InterceptorsManager', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'FiltersManager', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'MadvocController', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'RootPackages', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ResultsManager', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ResultMapper', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ScopeResolver', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'ScopeDataInspector', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'AsyncActionExecutor', '.', 'class', ')', ';', 'madvocContainer', '.', 'registerComponent', '(', 'FileUploader', '.', 'class', ')', ';', '}']",Registers default Madvoc components.,"['Registers', 'default', 'Madvoc', 'components', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/WebApp.java#L290-L317,test
jboss/jboss-common-core,src/main/java/org/jboss/net/protocol/URLStreamHandlerFactory.java,URLStreamHandlerFactory.createURLStreamHandler,"public URLStreamHandler createURLStreamHandler(final String protocol)
   {
      // Check the handler map
      URLStreamHandler handler = (URLStreamHandler) handlerMap.get(protocol);
      if( handler != null )
         return handler;

      // Validate that createURLStreamHandler is not recursing
      String prevProtocol = (String) createURLStreamHandlerProtocol.get();
      if( prevProtocol != null && prevProtocol.equals(protocol) )
         return null;
      createURLStreamHandlerProtocol.set(protocol);

      // See if the handler pkgs definition has changed
      checkHandlerPkgs();

      // Search the handlerPkgs for a matching protocol handler
      ClassLoader ctxLoader = Thread.currentThread().getContextClassLoader();
      for(int p = 0; p < handlerPkgs.length; p ++)
      {
         try
         {
            // Form the standard protocol handler class name
            String classname = handlerPkgs[p] + ""."" + protocol + "".Handler"";
            Class<?> type = null;

            try
            {
               type = ctxLoader.loadClass(classname);
            }
            catch(ClassNotFoundException e)
            {
               // Try our class loader
               type = Class.forName(classname);
            }

            if( type != null )
            {
               handler = (URLStreamHandler) type.newInstance();
               handlerMap.put(protocol, handler);
               log.trace(""Found protocol:""+protocol+"" handler:""+handler);
            }
         }
         catch (Throwable ignore)
         {
         }
      }

      createURLStreamHandlerProtocol.set(null);
      return handler;
   }",java,"public URLStreamHandler createURLStreamHandler(final String protocol)
   {
      // Check the handler map
      URLStreamHandler handler = (URLStreamHandler) handlerMap.get(protocol);
      if( handler != null )
         return handler;

      // Validate that createURLStreamHandler is not recursing
      String prevProtocol = (String) createURLStreamHandlerProtocol.get();
      if( prevProtocol != null && prevProtocol.equals(protocol) )
         return null;
      createURLStreamHandlerProtocol.set(protocol);

      // See if the handler pkgs definition has changed
      checkHandlerPkgs();

      // Search the handlerPkgs for a matching protocol handler
      ClassLoader ctxLoader = Thread.currentThread().getContextClassLoader();
      for(int p = 0; p < handlerPkgs.length; p ++)
      {
         try
         {
            // Form the standard protocol handler class name
            String classname = handlerPkgs[p] + ""."" + protocol + "".Handler"";
            Class<?> type = null;

            try
            {
               type = ctxLoader.loadClass(classname);
            }
            catch(ClassNotFoundException e)
            {
               // Try our class loader
               type = Class.forName(classname);
            }

            if( type != null )
            {
               handler = (URLStreamHandler) type.newInstance();
               handlerMap.put(protocol, handler);
               log.trace(""Found protocol:""+protocol+"" handler:""+handler);
            }
         }
         catch (Throwable ignore)
         {
         }
      }

      createURLStreamHandlerProtocol.set(null);
      return handler;
   }","['public', 'URLStreamHandler', 'createURLStreamHandler', '(', 'final', 'String', 'protocol', ')', '{', '// Check the handler map', 'URLStreamHandler', 'handler', '=', '(', 'URLStreamHandler', ')', 'handlerMap', '.', 'get', '(', 'protocol', ')', ';', 'if', '(', 'handler', '!=', 'null', ')', 'return', 'handler', ';', '// Validate that createURLStreamHandler is not recursing', 'String', 'prevProtocol', '=', '(', 'String', ')', 'createURLStreamHandlerProtocol', '.', 'get', '(', ')', ';', 'if', '(', 'prevProtocol', '!=', 'null', '&&', 'prevProtocol', '.', 'equals', '(', 'protocol', ')', ')', 'return', 'null', ';', 'createURLStreamHandlerProtocol', '.', 'set', '(', 'protocol', ')', ';', '// See if the handler pkgs definition has changed', 'checkHandlerPkgs', '(', ')', ';', '// Search the handlerPkgs for a matching protocol handler', 'ClassLoader', 'ctxLoader', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', ';', 'for', '(', 'int', 'p', '=', '0', ';', 'p', '<', 'handlerPkgs', '.', 'length', ';', 'p', '++', ')', '{', 'try', '{', '// Form the standard protocol handler class name', 'String', 'classname', '=', 'handlerPkgs', '[', 'p', ']', '+', '"".""', '+', 'protocol', '+', '"".Handler""', ';', 'Class', '<', '?', '>', 'type', '=', 'null', ';', 'try', '{', 'type', '=', 'ctxLoader', '.', 'loadClass', '(', 'classname', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', '// Try our class loader', 'type', '=', 'Class', '.', 'forName', '(', 'classname', ')', ';', '}', 'if', '(', 'type', '!=', 'null', ')', '{', 'handler', '=', '(', 'URLStreamHandler', ')', 'type', '.', 'newInstance', '(', ')', ';', 'handlerMap', '.', 'put', '(', 'protocol', ',', 'handler', ')', ';', 'log', '.', 'trace', '(', '""Found protocol:""', '+', 'protocol', '+', '"" handler:""', '+', 'handler', ')', ';', '}', '}', 'catch', '(', 'Throwable', 'ignore', ')', '{', '}', '}', 'createURLStreamHandlerProtocol', '.', 'set', '(', 'null', ')', ';', 'return', 'handler', ';', '}']","Search the handlerPkgs for URLStreamHandler classes matching the
pkg + protocol + "".Handler"" naming convention.

@param protocol The protocol to create a stream handler for
@return The protocol handler or null if not found","['Search', 'the', 'handlerPkgs', 'for', 'URLStreamHandler', 'classes', 'matching', 'the', 'pkg', '+', 'protocol', '+', '.', 'Handler', 'naming', 'convention', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/net/protocol/URLStreamHandlerFactory.java#L146-L196,test
stanfy/enroscar,net/src/main/java/com/stanfy/enroscar/rest/request/net/multipart/StringPart.java,StringPart.sendData,"@Override
  protected void sendData(final OutputStream out) throws IOException {
    if (DEBUG) { Log.v(TAG, ""enter sendData(OutputStream)""); }
    out.write(getContent());
  }",java,"@Override
  protected void sendData(final OutputStream out) throws IOException {
    if (DEBUG) { Log.v(TAG, ""enter sendData(OutputStream)""); }
    out.write(getContent());
  }","['@', 'Override', 'protected', 'void', 'sendData', '(', 'final', 'OutputStream', 'out', ')', 'throws', 'IOException', '{', 'if', '(', 'DEBUG', ')', '{', 'Log', '.', 'v', '(', 'TAG', ',', '""enter sendData(OutputStream)""', ')', ';', '}', 'out', '.', 'write', '(', 'getContent', '(', ')', ')', ';', '}']","Writes the data to the given OutputStream.
@param out the OutputStream to write to
@throws IOException if there is a write error","['Writes', 'the', 'data', 'to', 'the', 'given', 'OutputStream', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/net/src/main/java/com/stanfy/enroscar/rest/request/net/multipart/StringPart.java#L98-L102,test
Unidata/thredds,cdm/src/main/java/ucar/atd/dorade/DoradeDescriptor.java,DoradeDescriptor.grabDouble,"protected double grabDouble(byte[] bytes, int offset)
          throws DescriptorException {
    try {
      byte[] src;
      if (littleEndianData) {
        src = new byte[8];
        src[0] = bytes[offset + 7];
        src[1] = bytes[offset + 6];
        src[2] = bytes[offset + 5];
        src[3] = bytes[offset + 4];
        src[4] = bytes[offset + 3];
        src[5] = bytes[offset + 2];
        src[6] = bytes[offset + 1];
        src[7] = bytes[offset];
        offset = 0;
      } else {
        src = bytes;
      }
      DataInputStream stream =
              new DataInputStream(new ByteArrayInputStream(src, offset, 8));
      return stream.readDouble();
    } catch (Exception ex) {
      throw new DescriptorException(ex);
    }
  }",java,"protected double grabDouble(byte[] bytes, int offset)
          throws DescriptorException {
    try {
      byte[] src;
      if (littleEndianData) {
        src = new byte[8];
        src[0] = bytes[offset + 7];
        src[1] = bytes[offset + 6];
        src[2] = bytes[offset + 5];
        src[3] = bytes[offset + 4];
        src[4] = bytes[offset + 3];
        src[5] = bytes[offset + 2];
        src[6] = bytes[offset + 1];
        src[7] = bytes[offset];
        offset = 0;
      } else {
        src = bytes;
      }
      DataInputStream stream =
              new DataInputStream(new ByteArrayInputStream(src, offset, 8));
      return stream.readDouble();
    } catch (Exception ex) {
      throw new DescriptorException(ex);
    }
  }","['protected', 'double', 'grabDouble', '(', 'byte', '[', ']', 'bytes', ',', 'int', 'offset', ')', 'throws', 'DescriptorException', '{', 'try', '{', 'byte', '[', ']', 'src', ';', 'if', '(', 'littleEndianData', ')', '{', 'src', '=', 'new', 'byte', '[', '8', ']', ';', 'src', '[', '0', ']', '=', 'bytes', '[', 'offset', '+', '7', ']', ';', 'src', '[', '1', ']', '=', 'bytes', '[', 'offset', '+', '6', ']', ';', 'src', '[', '2', ']', '=', 'bytes', '[', 'offset', '+', '5', ']', ';', 'src', '[', '3', ']', '=', 'bytes', '[', 'offset', '+', '4', ']', ';', 'src', '[', '4', ']', '=', 'bytes', '[', 'offset', '+', '3', ']', ';', 'src', '[', '5', ']', '=', 'bytes', '[', 'offset', '+', '2', ']', ';', 'src', '[', '6', ']', '=', 'bytes', '[', 'offset', '+', '1', ']', ';', 'src', '[', '7', ']', '=', 'bytes', '[', 'offset', ']', ';', 'offset', '=', '0', ';', '}', 'else', '{', 'src', '=', 'bytes', ';', '}', 'DataInputStream', 'stream', '=', 'new', 'DataInputStream', '(', 'new', 'ByteArrayInputStream', '(', 'src', ',', 'offset', ',', '8', ')', ')', ';', 'return', 'stream', '.', 'readDouble', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'throw', 'new', 'DescriptorException', '(', 'ex', ')', ';', '}', '}']","Unpack an eight-byte IEEE float from the given byte array.

@param bytes  byte array to be read
@param offset number of bytes to skip in the byte array before reading
@return the unpacked double value","['Unpack', 'an', 'eight', '-', 'byte', 'IEEE', 'float', 'from', 'the', 'given', 'byte', 'array', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/atd/dorade/DoradeDescriptor.java#L272-L296,test
RestComm/jain-slee,container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitBuilderImpl.java,DeployableUnitBuilderImpl.checkDependencies,"private void checkDependencies(SleeComponent sleeComponent,
			DeployableUnitImpl deployableUnit) throws DependencyException {
		for (ComponentID componentID : sleeComponent.getDependenciesSet()) {
			if (componentID instanceof EventTypeID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((EventTypeID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof LibraryID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((LibraryID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ProfileSpecificationID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ProfileSpecificationID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ResourceAdaptorID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ResourceAdaptorID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ResourceAdaptorTypeID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ResourceAdaptorTypeID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof SbbID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((SbbID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ServiceID) {
				throw new SLEEException(
						""Component ""
								+ sleeComponent.getComponentID()
								+ "" depends on a service component ""
								+ componentID
								+ "" which is not available in the component repository or in the deployable unit"");
			}
		}
	}",java,"private void checkDependencies(SleeComponent sleeComponent,
			DeployableUnitImpl deployableUnit) throws DependencyException {
		for (ComponentID componentID : sleeComponent.getDependenciesSet()) {
			if (componentID instanceof EventTypeID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((EventTypeID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof LibraryID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((LibraryID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ProfileSpecificationID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ProfileSpecificationID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ResourceAdaptorID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ResourceAdaptorID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ResourceAdaptorTypeID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((ResourceAdaptorTypeID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof SbbID) {
				if (deployableUnit.getDeployableUnitRepository()
						.getComponentByID((SbbID) componentID) == null) {
					throw new DependencyException(
							""Component ""
									+ sleeComponent.getComponentID()
									+ "" depends on ""
									+ componentID
									+ "" which is not available in the component repository or in the deployable unit"");
				}
			} else if (componentID instanceof ServiceID) {
				throw new SLEEException(
						""Component ""
								+ sleeComponent.getComponentID()
								+ "" depends on a service component ""
								+ componentID
								+ "" which is not available in the component repository or in the deployable unit"");
			}
		}
	}","['private', 'void', 'checkDependencies', '(', 'SleeComponent', 'sleeComponent', ',', 'DeployableUnitImpl', 'deployableUnit', ')', 'throws', 'DependencyException', '{', 'for', '(', 'ComponentID', 'componentID', ':', 'sleeComponent', '.', 'getDependenciesSet', '(', ')', ')', '{', 'if', '(', 'componentID', 'instanceof', 'EventTypeID', ')', '{', 'if', '(', 'deployableUnit', '.', 'getDeployableUnitRepository', '(', ')', '.', 'getComponentByID', '(', '(', 'EventTypeID', ')', 'componentID', ')', '==', 'null', ')', '{', 'throw', 'new', 'DependencyException', '(', '""Component ""', '+', 'sleeComponent', '.', 'getComponentID', '(', ')', '+', '"" depends on ""', '+', 'componentID', '+', '"" which is not available in the component repository or in the deployable unit""', ')', ';', '}', '}', 'else', 'if', '(', 'componentID', 'instanceof', 'LibraryID', ')', '{', 'if', '(', 'deployableUnit', '.', 'getDeployableUnitRepository', '(', ')', '.', 'getComponentByID', '(', '(', 'LibraryID', ')', 'componentID', ')', '==', 'null', ')', '{', 'throw', 'new', 'DependencyException', '(', '""Component ""', '+', 'sleeComponent', '.', 'getComponentID', '(', ')', '+', '"" depends on ""', '+', 'componentID', '+', '"" which is not available in the component repository or in the deployable unit""', ')', ';', '}', '}', 'else', 'if', '(', 'componentID', 'instanceof', 'ProfileSpecificationID', ')', '{', 'if', '(', 'deployableUnit', '.', 'getDeployableUnitRepository', '(', ')', '.', 'getComponentByID', '(', '(', 'ProfileSpecificationID', ')', 'componentID', ')', '==', 'null', ')', '{', 'throw', 'new', 'DependencyException', '(', '""Component ""', '+', 'sleeComponent', '.', 'getComponentID', '(', ')', '+', '"" depends on ""', '+', 'componentID', '+', '"" which is not available in the component repository or in the deployable unit""', ')', ';', '}', '}', 'else', 'if', '(', 'componentID', 'instanceof', 'ResourceAdaptorID', ')', '{', 'if', '(', 'deployableUnit', '.', 'getDeployableUnitRepository', '(', ')', '.', 'getComponentByID', '(', '(', 'ResourceAdaptorID', ')', 'componentID', ')', '==', 'null', ')', '{', 'throw', 'new', 'DependencyException', '(', '""Component ""', '+', 'sleeComponent', '.', 'getComponentID', '(', ')', '+', '"" depends on ""', '+', 'componentID', '+', '"" which is not available in the component repository or in the deployable unit""', ')', ';', '}', '}', 'else', 'if', '(', 'componentID', 'instanceof', 'ResourceAdaptorTypeID', ')', '{', 'if', '(', 'deployableUnit', '.', 'getDeployableUnitRepository', '(', ')', '.', 'getComponentByID', '(', '(', 'ResourceAdaptorTypeID', ')', 'componentID', ')', '==', 'null', ')', '{', 'throw', 'new', 'DependencyException', '(', '""Component ""', '+', 'sleeComponent', '.', 'getComponentID', '(', ')', '+', '"" depends on ""', '+', 'componentID', '+', '"" which is not available in the component repository or in the deployable unit""', ')', ';', '}', '}', 'else', 'if', '(', 'componentID', 'instanceof', 'SbbID', ')', '{', 'if', '(', 'deployableUnit', '.', 'getDeployableUnitRepository', '(', ')', '.', 'getComponentByID', '(', '(', 'SbbID', ')', 'componentID', ')', '==', 'null', ')', '{', 'throw', 'new', 'DependencyException', '(', '""Component ""', '+', 'sleeComponent', '.', 'getComponentID', '(', ')', '+', '"" depends on ""', '+', 'componentID', '+', '"" which is not available in the component repository or in the deployable unit""', ')', ';', '}', '}', 'else', 'if', '(', 'componentID', 'instanceof', 'ServiceID', ')', '{', 'throw', 'new', 'SLEEException', '(', '""Component ""', '+', 'sleeComponent', '.', 'getComponentID', '(', ')', '+', '"" depends on a service component ""', '+', 'componentID', '+', '"" which is not available in the component repository or in the deployable unit""', ')', ';', '}', '}', '}']","Checks if all dependencies of a DU component exists

@param sleeComponent
@param deployableUnit
@throws DependencyException
if a dependency is missing","['Checks', 'if', 'all', 'dependencies', 'of', 'a', 'DU', 'component', 'exists']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitBuilderImpl.java#L544-L616,test
CAFapi/caf-common,config-caf/src/main/java/com/hpe/caf/api/CafConfigurationSource.java,CafConfigurationSource.getConfig,"private <T> T getConfig(final Class<T> configClass)
        throws ConfigurationException
    {
        Iterator<Name> it = getServicePath().descendingPathIterator();
        while (it.hasNext()) {
            try (InputStream in = getConfigurationStream(configClass, it.next())) {
                return decoder.deserialise(in, configClass);
            } catch (final ConfigurationException e) {
                LOG.trace(""No configuration at this path level"", e);
            } catch (final CodecException | IOException e) {
                incrementErrors();
                throw new ConfigurationException(""Failed to get configuration for "" + configClass.getSimpleName(), e);
            }
        }
        incrementErrors();
        throw new ConfigurationException(""No configuration found for "" + configClass.getSimpleName());
    }",java,"private <T> T getConfig(final Class<T> configClass)
        throws ConfigurationException
    {
        Iterator<Name> it = getServicePath().descendingPathIterator();
        while (it.hasNext()) {
            try (InputStream in = getConfigurationStream(configClass, it.next())) {
                return decoder.deserialise(in, configClass);
            } catch (final ConfigurationException e) {
                LOG.trace(""No configuration at this path level"", e);
            } catch (final CodecException | IOException e) {
                incrementErrors();
                throw new ConfigurationException(""Failed to get configuration for "" + configClass.getSimpleName(), e);
            }
        }
        incrementErrors();
        throw new ConfigurationException(""No configuration found for "" + configClass.getSimpleName());
    }","['private', '<', 'T', '>', 'T', 'getConfig', '(', 'final', 'Class', '<', 'T', '>', 'configClass', ')', 'throws', 'ConfigurationException', '{', 'Iterator', '<', 'Name', '>', 'it', '=', 'getServicePath', '(', ')', '.', 'descendingPathIterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'try', '(', 'InputStream', 'in', '=', 'getConfigurationStream', '(', 'configClass', ',', 'it', '.', 'next', '(', ')', ')', ')', '{', 'return', 'decoder', '.', 'deserialise', '(', 'in', ',', 'configClass', ')', ';', '}', 'catch', '(', 'final', 'ConfigurationException', 'e', ')', '{', 'LOG', '.', 'trace', '(', '""No configuration at this path level""', ',', 'e', ')', ';', '}', 'catch', '(', 'final', 'CodecException', '|', 'IOException', 'e', ')', '{', 'incrementErrors', '(', ')', ';', 'throw', 'new', 'ConfigurationException', '(', '""Failed to get configuration for ""', '+', 'configClass', '.', 'getSimpleName', '(', ')', ',', 'e', ')', ';', '}', '}', 'incrementErrors', '(', ')', ';', 'throw', 'new', 'ConfigurationException', '(', '""No configuration found for ""', '+', 'configClass', '.', 'getSimpleName', '(', ')', ')', ';', '}']","Acquire, decode and decrypt a configuration object from a data stream.

@param configClass the class representing configuration to acquire
@param <T> the class representing configuration to acquire
@return the decoded configuration object
@throws ConfigurationException if the configuration cannot be acquired","['Acquire', 'decode', 'and', 'decrypt', 'a', 'configuration', 'object', 'from', 'a', 'data', 'stream', '.']",c9e617cd0b39e19d9480653f8c82efee53dee885,https://github.com/CAFapi/caf-common/blob/c9e617cd0b39e19d9480653f8c82efee53dee885/config-caf/src/main/java/com/hpe/caf/api/CafConfigurationSource.java#L213-L229,test
orientechnologies/orientdb,distributed-v2/src/main/java/com/orientechnologies/orient/distributed/impl/ODistributedAbstractPlugin.java,ODistributedAbstractPlugin.getNodesWithStatus,"@Override
  public int getNodesWithStatus(final Collection<String> iNodes, final String databaseName, final DB_STATUS... statuses) {
    for (Iterator<String> it = iNodes.iterator(); it.hasNext(); ) {
      final String node = it.next();

      if (!isNodeStatusEqualsTo(node, databaseName, statuses))
        it.remove();
    }
    return iNodes.size();
  }",java,"@Override
  public int getNodesWithStatus(final Collection<String> iNodes, final String databaseName, final DB_STATUS... statuses) {
    for (Iterator<String> it = iNodes.iterator(); it.hasNext(); ) {
      final String node = it.next();

      if (!isNodeStatusEqualsTo(node, databaseName, statuses))
        it.remove();
    }
    return iNodes.size();
  }","['@', 'Override', 'public', 'int', 'getNodesWithStatus', '(', 'final', 'Collection', '<', 'String', '>', 'iNodes', ',', 'final', 'String', 'databaseName', ',', 'final', 'DB_STATUS', '...', 'statuses', ')', '{', 'for', '(', 'Iterator', '<', 'String', '>', 'it', '=', 'iNodes', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'final', 'String', 'node', '=', 'it', '.', 'next', '(', ')', ';', 'if', '(', '!', 'isNodeStatusEqualsTo', '(', 'node', ',', 'databaseName', ',', 'statuses', ')', ')', 'it', '.', 'remove', '(', ')', ';', '}', 'return', 'iNodes', '.', 'size', '(', ')', ';', '}']",Returns the nodes with the requested status.,"['Returns', 'the', 'nodes', 'with', 'the', 'requested', 'status', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/distributed-v2/src/main/java/com/orientechnologies/orient/distributed/impl/ODistributedAbstractPlugin.java#L638-L647,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/sql/OCommandExecutorSQLCreateProperty.java,OCommandExecutorSQLCreateProperty.execute,"public Object execute(final Map<Object, Object> iArgs) {
    if (type == null)
      throw new OCommandExecutionException(""Cannot execute the command because it has not been parsed yet"");

    final ODatabaseDocument database = getDatabase();
    final OClassEmbedded sourceClass = (OClassEmbedded) database.getMetadata().getSchema().getClass(className);
    if (sourceClass == null)
      throw new OCommandExecutionException(""Source class '"" + className + ""' not found"");

    OPropertyImpl prop = (OPropertyImpl) sourceClass.getProperty(fieldName);

    if (prop != null) {
      if (ifNotExists) {
        return sourceClass.properties().size();
      }
      throw new OCommandExecutionException(
          ""Property '"" + className + ""."" + fieldName + ""' already exists. Remove it before to retry."");
    }

    // CREATE THE PROPERTY
    OClass linkedClass = null;
    OType linkedType = null;
    if (linked != null) {
      // FIRST SEARCH BETWEEN CLASSES
      linkedClass = database.getMetadata().getSchema().getClass(linked);

      if (linkedClass == null)
        // NOT FOUND: SEARCH BETWEEN TYPES
        linkedType = OType.valueOf(linked.toUpperCase(Locale.ENGLISH));
    }

    // CREATE IT LOCALLY
    OPropertyImpl internalProp = sourceClass.addPropertyInternal(fieldName, type, linkedType, linkedClass, unsafe);
    if (readonly) {
      internalProp.setReadonly(true);
    }

    if (mandatory) {
      internalProp.setMandatory(true);
    }

    if (notnull) {
      internalProp.setNotNull(true);
    }

    if (max != null) {
      internalProp.setMax(max);
    }

    if (min != null) {
      internalProp.setMin(min);
    }

    if (defaultValue != null) {
      internalProp.setDefaultValue(defaultValue);
    }

    return sourceClass.properties().size();
  }",java,"public Object execute(final Map<Object, Object> iArgs) {
    if (type == null)
      throw new OCommandExecutionException(""Cannot execute the command because it has not been parsed yet"");

    final ODatabaseDocument database = getDatabase();
    final OClassEmbedded sourceClass = (OClassEmbedded) database.getMetadata().getSchema().getClass(className);
    if (sourceClass == null)
      throw new OCommandExecutionException(""Source class '"" + className + ""' not found"");

    OPropertyImpl prop = (OPropertyImpl) sourceClass.getProperty(fieldName);

    if (prop != null) {
      if (ifNotExists) {
        return sourceClass.properties().size();
      }
      throw new OCommandExecutionException(
          ""Property '"" + className + ""."" + fieldName + ""' already exists. Remove it before to retry."");
    }

    // CREATE THE PROPERTY
    OClass linkedClass = null;
    OType linkedType = null;
    if (linked != null) {
      // FIRST SEARCH BETWEEN CLASSES
      linkedClass = database.getMetadata().getSchema().getClass(linked);

      if (linkedClass == null)
        // NOT FOUND: SEARCH BETWEEN TYPES
        linkedType = OType.valueOf(linked.toUpperCase(Locale.ENGLISH));
    }

    // CREATE IT LOCALLY
    OPropertyImpl internalProp = sourceClass.addPropertyInternal(fieldName, type, linkedType, linkedClass, unsafe);
    if (readonly) {
      internalProp.setReadonly(true);
    }

    if (mandatory) {
      internalProp.setMandatory(true);
    }

    if (notnull) {
      internalProp.setNotNull(true);
    }

    if (max != null) {
      internalProp.setMax(max);
    }

    if (min != null) {
      internalProp.setMin(min);
    }

    if (defaultValue != null) {
      internalProp.setDefaultValue(defaultValue);
    }

    return sourceClass.properties().size();
  }","['public', 'Object', 'execute', '(', 'final', 'Map', '<', 'Object', ',', 'Object', '>', 'iArgs', ')', '{', 'if', '(', 'type', '==', 'null', ')', 'throw', 'new', 'OCommandExecutionException', '(', '""Cannot execute the command because it has not been parsed yet""', ')', ';', 'final', 'ODatabaseDocument', 'database', '=', 'getDatabase', '(', ')', ';', 'final', 'OClassEmbedded', 'sourceClass', '=', '(', 'OClassEmbedded', ')', 'database', '.', 'getMetadata', '(', ')', '.', 'getSchema', '(', ')', '.', 'getClass', '(', 'className', ')', ';', 'if', '(', 'sourceClass', '==', 'null', ')', 'throw', 'new', 'OCommandExecutionException', '(', '""Source class \'""', '+', 'className', '+', '""\' not found""', ')', ';', 'OPropertyImpl', 'prop', '=', '(', 'OPropertyImpl', ')', 'sourceClass', '.', 'getProperty', '(', 'fieldName', ')', ';', 'if', '(', 'prop', '!=', 'null', ')', '{', 'if', '(', 'ifNotExists', ')', '{', 'return', 'sourceClass', '.', 'properties', '(', ')', '.', 'size', '(', ')', ';', '}', 'throw', 'new', 'OCommandExecutionException', '(', '""Property \'""', '+', 'className', '+', '"".""', '+', 'fieldName', '+', '""\' already exists. Remove it before to retry.""', ')', ';', '}', '// CREATE THE PROPERTY\r', 'OClass', 'linkedClass', '=', 'null', ';', 'OType', 'linkedType', '=', 'null', ';', 'if', '(', 'linked', '!=', 'null', ')', '{', '// FIRST SEARCH BETWEEN CLASSES\r', 'linkedClass', '=', 'database', '.', 'getMetadata', '(', ')', '.', 'getSchema', '(', ')', '.', 'getClass', '(', 'linked', ')', ';', 'if', '(', 'linkedClass', '==', 'null', ')', '// NOT FOUND: SEARCH BETWEEN TYPES\r', 'linkedType', '=', 'OType', '.', 'valueOf', '(', 'linked', '.', 'toUpperCase', '(', 'Locale', '.', 'ENGLISH', ')', ')', ';', '}', '// CREATE IT LOCALLY\r', 'OPropertyImpl', 'internalProp', '=', 'sourceClass', '.', 'addPropertyInternal', '(', 'fieldName', ',', 'type', ',', 'linkedType', ',', 'linkedClass', ',', 'unsafe', ')', ';', 'if', '(', 'readonly', ')', '{', 'internalProp', '.', 'setReadonly', '(', 'true', ')', ';', '}', 'if', '(', 'mandatory', ')', '{', 'internalProp', '.', 'setMandatory', '(', 'true', ')', ';', '}', 'if', '(', 'notnull', ')', '{', 'internalProp', '.', 'setNotNull', '(', 'true', ')', ';', '}', 'if', '(', 'max', '!=', 'null', ')', '{', 'internalProp', '.', 'setMax', '(', 'max', ')', ';', '}', 'if', '(', 'min', '!=', 'null', ')', '{', 'internalProp', '.', 'setMin', '(', 'min', ')', ';', '}', 'if', '(', 'defaultValue', '!=', 'null', ')', '{', 'internalProp', '.', 'setDefaultValue', '(', 'defaultValue', ')', ';', '}', 'return', 'sourceClass', '.', 'properties', '(', ')', '.', 'size', '(', ')', ';', '}']",Execute the CREATE PROPERTY.,"['Execute', 'the', 'CREATE', 'PROPERTY', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/sql/OCommandExecutorSQLCreateProperty.java#L279-L337,test
google/guice,extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java,FactoryProvider2.invoke,"@Override
  public Object invoke(Object proxy, final Method method, final Object[] args) throws Throwable {
    // If we setup a method handle earlier for this method, call it.
    // This is necessary for default methods that java8 creates, so we
    // can call the default method implementation (and not our proxied version of it).
    if (methodHandleByMethod.containsKey(method)) {
      return methodHandleByMethod.get(method).invokeWithArguments(args);
    }

    if (method.getDeclaringClass().equals(Object.class)) {
      if (""equals"".equals(method.getName())) {
        return proxy == args[0];
      } else if (""hashCode"".equals(method.getName())) {
        return System.identityHashCode(proxy);
      } else {
        return method.invoke(this, args);
      }
    }

    AssistData data = assistDataByMethod.get(method);
    checkState(data != null, ""No data for method: %s"", method);
    Provider<?> provider;
    if (data.cachedBinding != null) { // Try to get optimized form...
      provider = data.cachedBinding.getProvider();
    } else {
      provider = getBindingFromNewInjector(method, args, data).getProvider();
    }
    try {
      int p = 0;
      for (ThreadLocalProvider tlp : data.providers) {
        tlp.set(args[p++]);
      }
      return provider.get();
    } catch (ProvisionException e) {
      // if this is an exception declared by the factory method, throw it as-is
      if (e.getErrorMessages().size() == 1) {
        Message onlyError = getOnlyElement(e.getErrorMessages());
        Throwable cause = onlyError.getCause();
        if (cause != null && canRethrow(method, cause)) {
          throw cause;
        }
      }
      throw e;
    } finally {
      for (ThreadLocalProvider tlp : data.providers) {
        tlp.remove();
      }
    }
  }",java,"@Override
  public Object invoke(Object proxy, final Method method, final Object[] args) throws Throwable {
    // If we setup a method handle earlier for this method, call it.
    // This is necessary for default methods that java8 creates, so we
    // can call the default method implementation (and not our proxied version of it).
    if (methodHandleByMethod.containsKey(method)) {
      return methodHandleByMethod.get(method).invokeWithArguments(args);
    }

    if (method.getDeclaringClass().equals(Object.class)) {
      if (""equals"".equals(method.getName())) {
        return proxy == args[0];
      } else if (""hashCode"".equals(method.getName())) {
        return System.identityHashCode(proxy);
      } else {
        return method.invoke(this, args);
      }
    }

    AssistData data = assistDataByMethod.get(method);
    checkState(data != null, ""No data for method: %s"", method);
    Provider<?> provider;
    if (data.cachedBinding != null) { // Try to get optimized form...
      provider = data.cachedBinding.getProvider();
    } else {
      provider = getBindingFromNewInjector(method, args, data).getProvider();
    }
    try {
      int p = 0;
      for (ThreadLocalProvider tlp : data.providers) {
        tlp.set(args[p++]);
      }
      return provider.get();
    } catch (ProvisionException e) {
      // if this is an exception declared by the factory method, throw it as-is
      if (e.getErrorMessages().size() == 1) {
        Message onlyError = getOnlyElement(e.getErrorMessages());
        Throwable cause = onlyError.getCause();
        if (cause != null && canRethrow(method, cause)) {
          throw cause;
        }
      }
      throw e;
    } finally {
      for (ThreadLocalProvider tlp : data.providers) {
        tlp.remove();
      }
    }
  }","['@', 'Override', 'public', 'Object', 'invoke', '(', 'Object', 'proxy', ',', 'final', 'Method', 'method', ',', 'final', 'Object', '[', ']', 'args', ')', 'throws', 'Throwable', '{', '// If we setup a method handle earlier for this method, call it.', '// This is necessary for default methods that java8 creates, so we', '// can call the default method implementation (and not our proxied version of it).', 'if', '(', 'methodHandleByMethod', '.', 'containsKey', '(', 'method', ')', ')', '{', 'return', 'methodHandleByMethod', '.', 'get', '(', 'method', ')', '.', 'invokeWithArguments', '(', 'args', ')', ';', '}', 'if', '(', 'method', '.', 'getDeclaringClass', '(', ')', '.', 'equals', '(', 'Object', '.', 'class', ')', ')', '{', 'if', '(', '""equals""', '.', 'equals', '(', 'method', '.', 'getName', '(', ')', ')', ')', '{', 'return', 'proxy', '==', 'args', '[', '0', ']', ';', '}', 'else', 'if', '(', '""hashCode""', '.', 'equals', '(', 'method', '.', 'getName', '(', ')', ')', ')', '{', 'return', 'System', '.', 'identityHashCode', '(', 'proxy', ')', ';', '}', 'else', '{', 'return', 'method', '.', 'invoke', '(', 'this', ',', 'args', ')', ';', '}', '}', 'AssistData', 'data', '=', 'assistDataByMethod', '.', 'get', '(', 'method', ')', ';', 'checkState', '(', 'data', '!=', 'null', ',', '""No data for method: %s""', ',', 'method', ')', ';', 'Provider', '<', '?', '>', 'provider', ';', 'if', '(', 'data', '.', 'cachedBinding', '!=', 'null', ')', '{', '// Try to get optimized form...', 'provider', '=', 'data', '.', 'cachedBinding', '.', 'getProvider', '(', ')', ';', '}', 'else', '{', 'provider', '=', 'getBindingFromNewInjector', '(', 'method', ',', 'args', ',', 'data', ')', '.', 'getProvider', '(', ')', ';', '}', 'try', '{', 'int', 'p', '=', '0', ';', 'for', '(', 'ThreadLocalProvider', 'tlp', ':', 'data', '.', 'providers', ')', '{', 'tlp', '.', 'set', '(', 'args', '[', 'p', '++', ']', ')', ';', '}', 'return', 'provider', '.', 'get', '(', ')', ';', '}', 'catch', '(', 'ProvisionException', 'e', ')', '{', '// if this is an exception declared by the factory method, throw it as-is', 'if', '(', 'e', '.', 'getErrorMessages', '(', ')', '.', 'size', '(', ')', '==', '1', ')', '{', 'Message', 'onlyError', '=', 'getOnlyElement', '(', 'e', '.', 'getErrorMessages', '(', ')', ')', ';', 'Throwable', 'cause', '=', 'onlyError', '.', 'getCause', '(', ')', ';', 'if', '(', 'cause', '!=', 'null', '&&', 'canRethrow', '(', 'method', ',', 'cause', ')', ')', '{', 'throw', 'cause', ';', '}', '}', 'throw', 'e', ';', '}', 'finally', '{', 'for', '(', 'ThreadLocalProvider', 'tlp', ':', 'data', '.', 'providers', ')', '{', 'tlp', '.', 'remove', '(', ')', ';', '}', '}', '}']","When a factory method is invoked, we create a child injector that binds all parameters, then
use that to get an instance of the return type.","['When', 'a', 'factory', 'method', 'is', 'invoked', 'we', 'create', 'a', 'child', 'injector', 'that', 'binds', 'all', 'parameters', 'then', 'use', 'that', 'to', 'get', 'an', 'instance', 'of', 'the', 'return', 'type', '.']",a0552a16d813ead98fe73737fb001db336650251,https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java#L806-L854,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java,ConfigurationHandler.setFooterOfSheetConfiguration,"private void setFooterOfSheetConfiguration(final FormCommand fcommand, final SheetConfiguration sheetConfig,
			final int leftCol, final int rightCol) {
		String tempStr;
		if (fcommand.calcFooterLength() == 0) {
			tempStr = CellUtility.getCellIndexLetterKey(leftCol, 0) + "" : ""
					+ CellUtility.getCellIndexLetterKey(rightCol, 0);
		} else {
			tempStr = CellUtility.getCellIndexLetterKey(leftCol,
					fcommand.getTopRow() + fcommand.calcHeaderLength() + fcommand.calcBodyLength()) + "" : ""
					+ CellUtility.getCellIndexLetterKey(rightCol, fcommand.getTopRow() + fcommand.calcHeaderLength());
		}
		sheetConfig.setFormFooterRange(tempStr);
		sheetConfig.setFooterCellRange(new CellRange(tempStr));
	}",java,"private void setFooterOfSheetConfiguration(final FormCommand fcommand, final SheetConfiguration sheetConfig,
			final int leftCol, final int rightCol) {
		String tempStr;
		if (fcommand.calcFooterLength() == 0) {
			tempStr = CellUtility.getCellIndexLetterKey(leftCol, 0) + "" : ""
					+ CellUtility.getCellIndexLetterKey(rightCol, 0);
		} else {
			tempStr = CellUtility.getCellIndexLetterKey(leftCol,
					fcommand.getTopRow() + fcommand.calcHeaderLength() + fcommand.calcBodyLength()) + "" : ""
					+ CellUtility.getCellIndexLetterKey(rightCol, fcommand.getTopRow() + fcommand.calcHeaderLength());
		}
		sheetConfig.setFormFooterRange(tempStr);
		sheetConfig.setFooterCellRange(new CellRange(tempStr));
	}","['private', 'void', 'setFooterOfSheetConfiguration', '(', 'final', 'FormCommand', 'fcommand', ',', 'final', 'SheetConfiguration', 'sheetConfig', ',', 'final', 'int', 'leftCol', ',', 'final', 'int', 'rightCol', ')', '{', 'String', 'tempStr', ';', 'if', '(', 'fcommand', '.', 'calcFooterLength', '(', ')', '==', '0', ')', '{', 'tempStr', '=', 'CellUtility', '.', 'getCellIndexLetterKey', '(', 'leftCol', ',', '0', ')', '+', '"" : ""', '+', 'CellUtility', '.', 'getCellIndexLetterKey', '(', 'rightCol', ',', '0', ')', ';', '}', 'else', '{', 'tempStr', '=', 'CellUtility', '.', 'getCellIndexLetterKey', '(', 'leftCol', ',', 'fcommand', '.', 'getTopRow', '(', ')', '+', 'fcommand', '.', 'calcHeaderLength', '(', ')', '+', 'fcommand', '.', 'calcBodyLength', '(', ')', ')', '+', '"" : ""', '+', 'CellUtility', '.', 'getCellIndexLetterKey', '(', 'rightCol', ',', 'fcommand', '.', 'getTopRow', '(', ')', '+', 'fcommand', '.', 'calcHeaderLength', '(', ')', ')', ';', '}', 'sheetConfig', '.', 'setFormFooterRange', '(', 'tempStr', ')', ';', 'sheetConfig', '.', 'setFooterCellRange', '(', 'new', 'CellRange', '(', 'tempStr', ')', ')', ';', '}']","Sets the footer of sheet configuration.

@param fcommand
the fcommand
@param sheetConfig
the sheet config
@param leftCol
the left col
@param rightCol
the right col","['Sets', 'the', 'footer', 'of', 'sheet', 'configuration', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java#L847-L860,test
apache/parquet-mr,parquet-hive/parquet-hive-storage-handler/src/main/java/org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter.java,HiveSchemaConverter.convertArrayType,"private static GroupType convertArrayType(final String name, final ListTypeInfo typeInfo) {
    final TypeInfo subType = typeInfo.getListElementTypeInfo();
    return listWrapper(name, listType(), new GroupType(Repetition.REPEATED,
        ParquetHiveSerDe.ARRAY.toString(), convertType(""array_element"", subType)));
  }",java,"private static GroupType convertArrayType(final String name, final ListTypeInfo typeInfo) {
    final TypeInfo subType = typeInfo.getListElementTypeInfo();
    return listWrapper(name, listType(), new GroupType(Repetition.REPEATED,
        ParquetHiveSerDe.ARRAY.toString(), convertType(""array_element"", subType)));
  }","['private', 'static', 'GroupType', 'convertArrayType', '(', 'final', 'String', 'name', ',', 'final', 'ListTypeInfo', 'typeInfo', ')', '{', 'final', 'TypeInfo', 'subType', '=', 'typeInfo', '.', 'getListElementTypeInfo', '(', ')', ';', 'return', 'listWrapper', '(', 'name', ',', 'listType', '(', ')', ',', 'new', 'GroupType', '(', 'Repetition', '.', 'REPEATED', ',', 'ParquetHiveSerDe', '.', 'ARRAY', '.', 'toString', '(', ')', ',', 'convertType', '(', '""array_element""', ',', 'subType', ')', ')', ')', ';', '}']","1 anonymous element ""array_element""","['1', 'anonymous', 'element', 'array_element']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hive/parquet-hive-storage-handler/src/main/java/org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter.java#L109-L113,test
cglib/cglib,cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java,CodeEmitter.emit_field,"void emit_field(int opcode, Type ctype, String name, Type ftype) {
        mv.visitFieldInsn(opcode,
                          ctype.getInternalName(),
                          name,
                          ftype.getDescriptor());
    }",java,"void emit_field(int opcode, Type ctype, String name, Type ftype) {
        mv.visitFieldInsn(opcode,
                          ctype.getInternalName(),
                          name,
                          ftype.getDescriptor());
    }","['void', 'emit_field', '(', 'int', 'opcode', ',', 'Type', 'ctype', ',', 'String', 'name', ',', 'Type', 'ftype', ')', '{', 'mv', '.', 'visitFieldInsn', '(', 'opcode', ',', 'ctype', '.', 'getInternalName', '(', ')', ',', 'name', ',', 'ftype', '.', 'getDescriptor', '(', ')', ')', ';', '}']","package-protected for EmitUtils, try to fix","['package', '-', 'protected', 'for', 'EmitUtils', 'try', 'to', 'fix']",cd01695c11fd3c66641b295b9596f74cf13c548b,https://github.com/cglib/cglib/blob/cd01695c11fd3c66641b295b9596f74cf13c548b/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java#L467-L472,test
jboss/jboss-common-core,src/main/java/org/jboss/util/graph/Graph.java,Graph.addVertex,"public boolean addVertex(Vertex<T> v)
   {
      if( verticies.containsValue(v) == false )
      {
         verticies.put(v.getName(), v);
         return true;
      }
      return false;
   }",java,"public boolean addVertex(Vertex<T> v)
   {
      if( verticies.containsValue(v) == false )
      {
         verticies.put(v.getName(), v);
         return true;
      }
      return false;
   }","['public', 'boolean', 'addVertex', '(', 'Vertex', '<', 'T', '>', 'v', ')', '{', 'if', '(', 'verticies', '.', 'containsValue', '(', 'v', ')', '==', 'false', ')', '{', 'verticies', '.', 'put', '(', 'v', '.', 'getName', '(', ')', ',', 'v', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","Add a vertex to the graph
@param v the Vertex to add
@return true if the vertex was added, false if it was already in the graph.","['Add', 'a', 'vertex', 'to', 'the', 'graph']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/graph/Graph.java#L74-L82,test
wildfly/wildfly,naming/src/main/java/org/jboss/as/naming/util/NamingUtils.java,NamingUtils.isEmpty,"public static boolean isEmpty(final Name name) {
        return name.isEmpty() || (name.size() == 1 && """".equals(name.get(0)));
    }",java,"public static boolean isEmpty(final Name name) {
        return name.isEmpty() || (name.size() == 1 && """".equals(name.get(0)));
    }","['public', 'static', 'boolean', 'isEmpty', '(', 'final', 'Name', 'name', ')', '{', 'return', 'name', '.', 'isEmpty', '(', ')', '||', '(', 'name', '.', 'size', '(', ')', '==', '1', '&&', '""""', '.', 'equals', '(', 'name', '.', 'get', '(', '0', ')', ')', ')', ';', '}']","Determine if a name is empty, or if ot contains only one component which is the empty string.

@param name the name
@return {@code true} if the name is empty or contains one empty component","['Determine', 'if', 'a', 'name', 'is', 'empty', 'or', 'if', 'ot', 'contains', 'only', 'one', 'component', 'which', 'is', 'the', 'empty', 'string', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/naming/src/main/java/org/jboss/as/naming/util/NamingUtils.java#L88-L90,test
google/guice,extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java,Struts2Factory.hasScope,"private static boolean hasScope(Class<? extends Interceptor> interceptorClass) {
    for (Annotation annotation : interceptorClass.getAnnotations()) {
      if (Annotations.isScopeAnnotation(annotation.annotationType())) {
        return true;
      }
    }
    return false;
  }",java,"private static boolean hasScope(Class<? extends Interceptor> interceptorClass) {
    for (Annotation annotation : interceptorClass.getAnnotations()) {
      if (Annotations.isScopeAnnotation(annotation.annotationType())) {
        return true;
      }
    }
    return false;
  }","['private', 'static', 'boolean', 'hasScope', '(', 'Class', '<', '?', 'extends', 'Interceptor', '>', 'interceptorClass', ')', '{', 'for', '(', 'Annotation', 'annotation', ':', 'interceptorClass', '.', 'getAnnotations', '(', ')', ')', '{', 'if', '(', 'Annotations', '.', 'isScopeAnnotation', '(', 'annotation', '.', 'annotationType', '(', ')', ')', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']",Returns true if the given class has a scope annotation.,"['Returns', 'true', 'if', 'the', 'given', 'class', 'has', 'a', 'scope', 'annotation', '.']",a0552a16d813ead98fe73737fb001db336650251,https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java#L241-L248,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/maps/HashArray.java,HashArray.getIndexOf,"public int getIndexOf(Object key)
    {
        // Get the index from the map
        Integer index = keyToIndex.get(key);

        // Check that the key is in the map and return -1 if it is not.
        if (index == null)
        {
            return -1;
        }

        return index;
    }",java,"public int getIndexOf(Object key)
    {
        // Get the index from the map
        Integer index = keyToIndex.get(key);

        // Check that the key is in the map and return -1 if it is not.
        if (index == null)
        {
            return -1;
        }

        return index;
    }","['public', 'int', 'getIndexOf', '(', 'Object', 'key', ')', '{', '// Get the index from the map', 'Integer', 'index', '=', 'keyToIndex', '.', 'get', '(', 'key', ')', ';', '// Check that the key is in the map and return -1 if it is not.', 'if', '(', 'index', '==', 'null', ')', '{', 'return', '-', '1', ';', '}', 'return', 'index', ';', '}']","Returns the index to which this map maps the specified key.

@param  key The key to get the index from this map for.

@return The index of the specified key, or -1 if the key is not in this map.","['Returns', 'the', 'index', 'to', 'which', 'this', 'map', 'maps', 'the', 'specified', 'key', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/maps/HashArray.java#L290-L302,test
rest-assured/rest-assured,rest-assured/src/main/java/io/restassured/filter/log/ResponseLoggingFilter.java,ResponseLoggingFilter.logResponseToIfMatches,"public static Filter logResponseToIfMatches(PrintStream stream, Matcher<Integer> matcher) {
        return new ResponseLoggingFilter(stream, matcher);
    }",java,"public static Filter logResponseToIfMatches(PrintStream stream, Matcher<Integer> matcher) {
        return new ResponseLoggingFilter(stream, matcher);
    }","['public', 'static', 'Filter', 'logResponseToIfMatches', '(', 'PrintStream', 'stream', ',', 'Matcher', '<', 'Integer', '>', 'matcher', ')', '{', 'return', 'new', 'ResponseLoggingFilter', '(', 'stream', ',', 'matcher', ')', ';', '}']","Create a new logging filter without using the ""new"" operator.
Will make the DSL look nicer.

@param stream The print stream to log to
@param matcher The matcher that must be fulfilled in order for logging to occur
@return a new instance of the filter","['Create', 'a', 'new', 'logging', 'filter', 'without', 'using', 'the', 'new', 'operator', '.', 'Will', 'make', 'the', 'DSL', 'look', 'nicer', '.']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/filter/log/ResponseLoggingFilter.java#L228-L230,test
streamsets/datacollector,client-api/src/main/java/com/streamsets/datacollector/client/JSON.java,JSON.deserialize,"public <T> T deserialize(File file, TypeRef returnType) throws ApiException {
    JavaType javaType = mapper.constructType(returnType.getType());
    try {
      return mapper.readValue(file, javaType);
    } catch (IOException e) {
      throw new ApiException(500, e.getMessage(), null, ""File to read file"");
    }
  }",java,"public <T> T deserialize(File file, TypeRef returnType) throws ApiException {
    JavaType javaType = mapper.constructType(returnType.getType());
    try {
      return mapper.readValue(file, javaType);
    } catch (IOException e) {
      throw new ApiException(500, e.getMessage(), null, ""File to read file"");
    }
  }","['public', '<', 'T', '>', 'T', 'deserialize', '(', 'File', 'file', ',', 'TypeRef', 'returnType', ')', 'throws', 'ApiException', '{', 'JavaType', 'javaType', '=', 'mapper', '.', 'constructType', '(', 'returnType', '.', 'getType', '(', ')', ')', ';', 'try', '{', 'return', 'mapper', '.', 'readValue', '(', 'file', ',', 'javaType', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'ApiException', '(', '500', ',', 'e', '.', 'getMessage', '(', ')', ',', 'null', ',', '""File to read file""', ')', ';', '}', '}']","Deserialize the given File to Java object.

@param file The File path
@param returnType The type to deserialize inot
@return The deserialized Java object","['Deserialize', 'the', 'given', 'File', 'to', 'Java', 'object', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/client-api/src/main/java/com/streamsets/datacollector/client/JSON.java#L77-L84,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadataDataSource.java,GeometryMetadataDataSource.populate,"public GeometryMetadata populate(long geoPackageId, String tableName, long geomId, GeometryEnvelope envelope) {

        GeometryMetadata metadata = new GeometryMetadata();
        metadata.setGeoPackageId(geoPackageId);
        metadata.setTableName(tableName);
        metadata.setId(geomId);
        metadata.setMinX(envelope.getMinX());
        metadata.setMaxX(envelope.getMaxX());
        metadata.setMinY(envelope.getMinY());
        metadata.setMaxY(envelope.getMaxY());
        if (envelope.hasZ()) {
            metadata.setMinZ(envelope.getMinZ());
            metadata.setMaxZ(envelope.getMaxZ());
        }
        if (envelope.hasM()) {
            metadata.setMinM(envelope.getMinM());
            metadata.setMaxM(envelope.getMaxM());
        }
        return metadata;
    }",java,"public GeometryMetadata populate(long geoPackageId, String tableName, long geomId, GeometryEnvelope envelope) {

        GeometryMetadata metadata = new GeometryMetadata();
        metadata.setGeoPackageId(geoPackageId);
        metadata.setTableName(tableName);
        metadata.setId(geomId);
        metadata.setMinX(envelope.getMinX());
        metadata.setMaxX(envelope.getMaxX());
        metadata.setMinY(envelope.getMinY());
        metadata.setMaxY(envelope.getMaxY());
        if (envelope.hasZ()) {
            metadata.setMinZ(envelope.getMinZ());
            metadata.setMaxZ(envelope.getMaxZ());
        }
        if (envelope.hasM()) {
            metadata.setMinM(envelope.getMinM());
            metadata.setMaxM(envelope.getMaxM());
        }
        return metadata;
    }","['public', 'GeometryMetadata', 'populate', '(', 'long', 'geoPackageId', ',', 'String', 'tableName', ',', 'long', 'geomId', ',', 'GeometryEnvelope', 'envelope', ')', '{', 'GeometryMetadata', 'metadata', '=', 'new', 'GeometryMetadata', '(', ')', ';', 'metadata', '.', 'setGeoPackageId', '(', 'geoPackageId', ')', ';', 'metadata', '.', 'setTableName', '(', 'tableName', ')', ';', 'metadata', '.', 'setId', '(', 'geomId', ')', ';', 'metadata', '.', 'setMinX', '(', 'envelope', '.', 'getMinX', '(', ')', ')', ';', 'metadata', '.', 'setMaxX', '(', 'envelope', '.', 'getMaxX', '(', ')', ')', ';', 'metadata', '.', 'setMinY', '(', 'envelope', '.', 'getMinY', '(', ')', ')', ';', 'metadata', '.', 'setMaxY', '(', 'envelope', '.', 'getMaxY', '(', ')', ')', ';', 'if', '(', 'envelope', '.', 'hasZ', '(', ')', ')', '{', 'metadata', '.', 'setMinZ', '(', 'envelope', '.', 'getMinZ', '(', ')', ')', ';', 'metadata', '.', 'setMaxZ', '(', 'envelope', '.', 'getMaxZ', '(', ')', ')', ';', '}', 'if', '(', 'envelope', '.', 'hasM', '(', ')', ')', '{', 'metadata', '.', 'setMinM', '(', 'envelope', '.', 'getMinM', '(', ')', ')', ';', 'metadata', '.', 'setMaxM', '(', 'envelope', '.', 'getMaxM', '(', ')', ')', ';', '}', 'return', 'metadata', ';', '}']","Populate a new geometry metadata from an envelope

@param geoPackageId GeoPackage id
@param tableName    table name
@param geomId       geometry id
@param envelope     geometry envelope
@return geometry metadata","['Populate', 'a', 'new', 'geometry', 'metadata', 'from', 'an', 'envelope']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeometryMetadataDataSource.java#L135-L154,test
oblac/jodd,jodd-bean/src/main/java/jodd/typeconverter/impl/CollectionConverter.java,CollectionConverter.convertToSingleElementCollection,"protected Collection<T> convertToSingleElementCollection(final Object value) {
		Collection<T> collection = createCollection(0);

		//noinspection unchecked
		collection.add((T) value);

		return collection;
	}",java,"protected Collection<T> convertToSingleElementCollection(final Object value) {
		Collection<T> collection = createCollection(0);

		//noinspection unchecked
		collection.add((T) value);

		return collection;
	}","['protected', 'Collection', '<', 'T', '>', 'convertToSingleElementCollection', '(', 'final', 'Object', 'value', ')', '{', 'Collection', '<', 'T', '>', 'collection', '=', 'createCollection', '(', '0', ')', ';', '//noinspection unchecked', 'collection', '.', 'add', '(', '(', 'T', ')', 'value', ')', ';', 'return', 'collection', ';', '}']",Creates a collection with single element.,"['Creates', 'a', 'collection', 'with', 'single', 'element', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-bean/src/main/java/jodd/typeconverter/impl/CollectionConverter.java#L132-L139,test
streamsets/datacollector,cluster-common/src/main/java/com/streamsets/pipeline/cluster/Consumer.java,Consumer.commit,"public void commit(String offset) {
    batchCommitted = true;
    LOG.trace(""Last committed offset '{}', attempting to commit '{}'"", lastCommittedOffset, offset);
    Utils.checkState(null != lastCommittedOffset, ""Last committed offset cannot be null"");
    controlChannel.consumerCommit(offset);
    lastCommittedOffset = offset;
  }",java,"public void commit(String offset) {
    batchCommitted = true;
    LOG.trace(""Last committed offset '{}', attempting to commit '{}'"", lastCommittedOffset, offset);
    Utils.checkState(null != lastCommittedOffset, ""Last committed offset cannot be null"");
    controlChannel.consumerCommit(offset);
    lastCommittedOffset = offset;
  }","['public', 'void', 'commit', '(', 'String', 'offset', ')', '{', 'batchCommitted', '=', 'true', ';', 'LOG', '.', 'trace', '(', '""Last committed offset \'{}\', attempting to commit \'{}\'""', ',', 'lastCommittedOffset', ',', 'offset', ')', ';', 'Utils', '.', 'checkState', '(', 'null', '!=', 'lastCommittedOffset', ',', '""Last committed offset cannot be null""', ')', ';', 'controlChannel', '.', 'consumerCommit', '(', 'offset', ')', ';', 'lastCommittedOffset', '=', 'offset', ';', '}']",Commit the offset. Required after take has returned a non-null value.,"['Commit', 'the', 'offset', '.', 'Required', 'after', 'take', 'has', 'returned', 'a', 'non', '-', 'null', 'value', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/cluster-common/src/main/java/com/streamsets/pipeline/cluster/Consumer.java#L104-L110,test
TooTallNate/Java-WebSocket,src/main/java/org/java_websocket/server/WebSocketServer.java,WebSocketServer.doAdditionalRead,"private void doAdditionalRead() throws InterruptedException, IOException {
		WebSocketImpl conn;
		while ( !iqueue.isEmpty() ) {
			conn = iqueue.remove( 0 );
			WrappedByteChannel c = ( (WrappedByteChannel) conn.getChannel() );
			ByteBuffer buf = takeBuffer();
			try {
				if( SocketChannelIOHelper.readMore( buf, conn, c ) )
					iqueue.add( conn );
				if( buf.hasRemaining() ) {
					conn.inQueue.put( buf );
					queue( conn );
				} else {
					pushBuffer( buf );
				}
			} catch ( IOException e ) {
				pushBuffer( buf );
				throw e;
			}
		}
	}",java,"private void doAdditionalRead() throws InterruptedException, IOException {
		WebSocketImpl conn;
		while ( !iqueue.isEmpty() ) {
			conn = iqueue.remove( 0 );
			WrappedByteChannel c = ( (WrappedByteChannel) conn.getChannel() );
			ByteBuffer buf = takeBuffer();
			try {
				if( SocketChannelIOHelper.readMore( buf, conn, c ) )
					iqueue.add( conn );
				if( buf.hasRemaining() ) {
					conn.inQueue.put( buf );
					queue( conn );
				} else {
					pushBuffer( buf );
				}
			} catch ( IOException e ) {
				pushBuffer( buf );
				throw e;
			}
		}
	}","['private', 'void', 'doAdditionalRead', '(', ')', 'throws', 'InterruptedException', ',', 'IOException', '{', 'WebSocketImpl', 'conn', ';', 'while', '(', '!', 'iqueue', '.', 'isEmpty', '(', ')', ')', '{', 'conn', '=', 'iqueue', '.', 'remove', '(', '0', ')', ';', 'WrappedByteChannel', 'c', '=', '(', '(', 'WrappedByteChannel', ')', 'conn', '.', 'getChannel', '(', ')', ')', ';', 'ByteBuffer', 'buf', '=', 'takeBuffer', '(', ')', ';', 'try', '{', 'if', '(', 'SocketChannelIOHelper', '.', 'readMore', '(', 'buf', ',', 'conn', ',', 'c', ')', ')', 'iqueue', '.', 'add', '(', 'conn', ')', ';', 'if', '(', 'buf', '.', 'hasRemaining', '(', ')', ')', '{', 'conn', '.', 'inQueue', '.', 'put', '(', 'buf', ')', ';', 'queue', '(', 'conn', ')', ';', '}', 'else', '{', 'pushBuffer', '(', 'buf', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'pushBuffer', '(', 'buf', ')', ';', 'throw', 'e', ';', '}', '}', '}']","Do an additional read
@throws InterruptedException thrown by taking a buffer
@throws IOException if an error happened during read","['Do', 'an', 'additional', 'read']",73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9,https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/server/WebSocketServer.java#L383-L403,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectImpl.java,ProfileObjectImpl.fireAddOrUpdatedEventIfNeeded,"public void fireAddOrUpdatedEventIfNeeded() {
		
		if (state == ProfileObjectState.READY) {
			if (profileEntity.isDirty()) {
				// check the table fires events and the object is not assigned to a default profile
				if (profileTable.doesFireEvents() && profileEntity.getProfileName() != null && profileTable.getSleeContainer().getSleeState() == SleeState.RUNNING) {
					// Fire a Profile Added or Updated Event
					ActivityContext ac = profileTable.getActivityContext();
					AbstractProfileEvent event = null;
					if (profileEntity.isCreate()) {
						if (persisted) {
							event = new ProfileAddedEventImpl(profileEntity,profileTable.getProfileManagement());
							persisted = false;
							if (logger.isTraceEnabled()) {
								logger.trace(""firing profile added event for profile named ""+profileEntity);
							}
						}
						else {
							return;
						}
					}
					else {
						event = new ProfileUpdatedEventImpl(profileEntitySnapshot,profileEntity,profileTable.getProfileManagement());		
						if (logger.isTraceEnabled()) {
							logger.trace(""firing profile updated event for profile named ""+profileEntity);
						}
					}
					ac.fireEvent(event.getEventTypeID(), event,
							event.getProfileAddress(), null, null,null,null);
				}
			}
		}
		
	}",java,"public void fireAddOrUpdatedEventIfNeeded() {
		
		if (state == ProfileObjectState.READY) {
			if (profileEntity.isDirty()) {
				// check the table fires events and the object is not assigned to a default profile
				if (profileTable.doesFireEvents() && profileEntity.getProfileName() != null && profileTable.getSleeContainer().getSleeState() == SleeState.RUNNING) {
					// Fire a Profile Added or Updated Event
					ActivityContext ac = profileTable.getActivityContext();
					AbstractProfileEvent event = null;
					if (profileEntity.isCreate()) {
						if (persisted) {
							event = new ProfileAddedEventImpl(profileEntity,profileTable.getProfileManagement());
							persisted = false;
							if (logger.isTraceEnabled()) {
								logger.trace(""firing profile added event for profile named ""+profileEntity);
							}
						}
						else {
							return;
						}
					}
					else {
						event = new ProfileUpdatedEventImpl(profileEntitySnapshot,profileEntity,profileTable.getProfileManagement());		
						if (logger.isTraceEnabled()) {
							logger.trace(""firing profile updated event for profile named ""+profileEntity);
						}
					}
					ac.fireEvent(event.getEventTypeID(), event,
							event.getProfileAddress(), null, null,null,null);
				}
			}
		}
		
	}","['public', 'void', 'fireAddOrUpdatedEventIfNeeded', '(', ')', '{', 'if', '(', 'state', '==', 'ProfileObjectState', '.', 'READY', ')', '{', 'if', '(', 'profileEntity', '.', 'isDirty', '(', ')', ')', '{', '// check the table fires events and the object is not assigned to a default profile', 'if', '(', 'profileTable', '.', 'doesFireEvents', '(', ')', '&&', 'profileEntity', '.', 'getProfileName', '(', ')', '!=', 'null', '&&', 'profileTable', '.', 'getSleeContainer', '(', ')', '.', 'getSleeState', '(', ')', '==', 'SleeState', '.', 'RUNNING', ')', '{', '// Fire a Profile Added or Updated Event', 'ActivityContext', 'ac', '=', 'profileTable', '.', 'getActivityContext', '(', ')', ';', 'AbstractProfileEvent', 'event', '=', 'null', ';', 'if', '(', 'profileEntity', '.', 'isCreate', '(', ')', ')', '{', 'if', '(', 'persisted', ')', '{', 'event', '=', 'new', 'ProfileAddedEventImpl', '(', 'profileEntity', ',', 'profileTable', '.', 'getProfileManagement', '(', ')', ')', ';', 'persisted', '=', 'false', ';', 'if', '(', 'logger', '.', 'isTraceEnabled', '(', ')', ')', '{', 'logger', '.', 'trace', '(', '""firing profile added event for profile named ""', '+', 'profileEntity', ')', ';', '}', '}', 'else', '{', 'return', ';', '}', '}', 'else', '{', 'event', '=', 'new', 'ProfileUpdatedEventImpl', '(', 'profileEntitySnapshot', ',', 'profileEntity', ',', 'profileTable', '.', 'getProfileManagement', '(', ')', ')', ';', 'if', '(', 'logger', '.', 'isTraceEnabled', '(', ')', ')', '{', 'logger', '.', 'trace', '(', '""firing profile updated event for profile named ""', '+', 'profileEntity', ')', ';', '}', '}', 'ac', '.', 'fireEvent', '(', 'event', '.', 'getEventTypeID', '(', ')', ',', 'event', ',', 'event', '.', 'getProfileAddress', '(', ')', ',', 'null', ',', 'null', ',', 'null', ',', 'null', ')', ';', '}', '}', '}', '}']",Fires a profile added or updated event if the profile object state is ready and the persistent state is dirty,"['Fires', 'a', 'profile', 'added', 'or', 'updated', 'event', 'if', 'the', 'profile', 'object', 'state', 'is', 'ready', 'and', 'the', 'persistent', 'state', 'is', 'dirty']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectImpl.java#L769-L802,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/util/cache/SmartArrayInt.java,SmartArrayInt.findIdx,"public int findIdx(int want) {
    if (isConstant) return (want == start)  ? 0 : -1;
    if (isSequential) return want - start;
    if (isSorted) {
      return Arrays.binarySearch(raw, want);
    }
    // linear search
    for (int i=0; i<raw.length; i++)
      if (raw[i] == want) return i;
    return -1;
  }",java,"public int findIdx(int want) {
    if (isConstant) return (want == start)  ? 0 : -1;
    if (isSequential) return want - start;
    if (isSorted) {
      return Arrays.binarySearch(raw, want);
    }
    // linear search
    for (int i=0; i<raw.length; i++)
      if (raw[i] == want) return i;
    return -1;
  }","['public', 'int', 'findIdx', '(', 'int', 'want', ')', '{', 'if', '(', 'isConstant', ')', 'return', '(', 'want', '==', 'start', ')', '?', '0', ':', '-', '1', ';', 'if', '(', 'isSequential', ')', 'return', 'want', '-', 'start', ';', 'if', '(', 'isSorted', ')', '{', 'return', 'Arrays', '.', 'binarySearch', '(', 'raw', ',', 'want', ')', ';', '}', '// linear search', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'raw', '.', 'length', ';', 'i', '++', ')', 'if', '(', 'raw', '[', 'i', ']', '==', 'want', ')', 'return', 'i', ';', 'return', '-', '1', ';', '}']","Find which index holds the value want
@param want  value wanted
@return < 0 if not found, else the index. If duplicates, then return any match","['Find', 'which', 'index', 'holds', 'the', 'value', 'want']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/util/cache/SmartArrayInt.java#L80-L90,test
jryans/jless,src/main/java/com/bazaarvoice/jless/parser/Parser.java,Parser.pushVariableReference,"boolean pushVariableReference(String name) {
        if (!isParserTranslationEnabled()) {
            return push(new SimpleNode(name));
        }

        // Walk down the stack, looking for a scope node that knows about a given variable
        for (Node node : getContext().getValueStack()) {
            if (!(node instanceof ScopeNode)) {
                continue;
            }

            // Ensure that the variable exists
            ScopeNode scope = (ScopeNode) node;
            if (!scope.isVariableDefined(name)) {
                continue;
            }

            return push(new VariableReferenceNode(name));
        }

        // Record error location
        throw new UndefinedVariableException(name);
    }",java,"boolean pushVariableReference(String name) {
        if (!isParserTranslationEnabled()) {
            return push(new SimpleNode(name));
        }

        // Walk down the stack, looking for a scope node that knows about a given variable
        for (Node node : getContext().getValueStack()) {
            if (!(node instanceof ScopeNode)) {
                continue;
            }

            // Ensure that the variable exists
            ScopeNode scope = (ScopeNode) node;
            if (!scope.isVariableDefined(name)) {
                continue;
            }

            return push(new VariableReferenceNode(name));
        }

        // Record error location
        throw new UndefinedVariableException(name);
    }","['boolean', 'pushVariableReference', '(', 'String', 'name', ')', '{', 'if', '(', '!', 'isParserTranslationEnabled', '(', ')', ')', '{', 'return', 'push', '(', 'new', 'SimpleNode', '(', 'name', ')', ')', ';', '}', '// Walk down the stack, looking for a scope node that knows about a given variable', 'for', '(', 'Node', 'node', ':', 'getContext', '(', ')', '.', 'getValueStack', '(', ')', ')', '{', 'if', '(', '!', '(', 'node', 'instanceof', 'ScopeNode', ')', ')', '{', 'continue', ';', '}', '// Ensure that the variable exists', 'ScopeNode', 'scope', '=', '(', 'ScopeNode', ')', 'node', ';', 'if', '(', '!', 'scope', '.', 'isVariableDefined', '(', 'name', ')', ')', '{', 'continue', ';', '}', 'return', 'push', '(', 'new', 'VariableReferenceNode', '(', 'name', ')', ')', ';', '}', '// Record error location', 'throw', 'new', 'UndefinedVariableException', '(', 'name', ')', ';', '}']","Looks for a variable definition that matches the reference in the scope nodes on the stack.
If found, a reference node that can repeat this lookup later is placed on the stack, not the
current value itself. This is done because the value may change if the variable reference is
inside a mixin.","['Looks', 'for', 'a', 'variable', 'definition', 'that', 'matches', 'the', 'reference', 'in', 'the', 'scope', 'nodes', 'on', 'the', 'stack', '.', 'If', 'found', 'a', 'reference', 'node', 'that', 'can', 'repeat', 'this', 'lookup', 'later', 'is', 'placed', 'on', 'the', 'stack', 'not', 'the', 'current', 'value', 'itself', '.', 'This', 'is', 'done', 'because', 'the', 'value', 'may', 'change', 'if', 'the', 'variable', 'reference', 'is', 'inside', 'a', 'mixin', '.']",0e448fac752b4fc7bfef6b220ed1c64a490c29c0,https://github.com/jryans/jless/blob/0e448fac752b4fc7bfef6b220ed1c64a490c29c0/src/main/java/com/bazaarvoice/jless/parser/Parser.java#L955-L977,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,SymbolTable.addConstantNameAndType,"int addConstantNameAndType(final String name, final String descriptor) {
    final int tag = Symbol.CONSTANT_NAME_AND_TYPE_TAG;
    int hashCode = hash(tag, name, descriptor);
    Entry entry = get(hashCode);
    while (entry != null) {
      if (entry.tag == tag
          && entry.hashCode == hashCode
          && entry.name.equals(name)
          && entry.value.equals(descriptor)) {
        return entry.index;
      }
      entry = entry.next;
    }
    constantPool.put122(tag, addConstantUtf8(name), addConstantUtf8(descriptor));
    return put(new Entry(constantPoolCount++, tag, name, descriptor, hashCode)).index;
  }",java,"int addConstantNameAndType(final String name, final String descriptor) {
    final int tag = Symbol.CONSTANT_NAME_AND_TYPE_TAG;
    int hashCode = hash(tag, name, descriptor);
    Entry entry = get(hashCode);
    while (entry != null) {
      if (entry.tag == tag
          && entry.hashCode == hashCode
          && entry.name.equals(name)
          && entry.value.equals(descriptor)) {
        return entry.index;
      }
      entry = entry.next;
    }
    constantPool.put122(tag, addConstantUtf8(name), addConstantUtf8(descriptor));
    return put(new Entry(constantPoolCount++, tag, name, descriptor, hashCode)).index;
  }","['int', 'addConstantNameAndType', '(', 'final', 'String', 'name', ',', 'final', 'String', 'descriptor', ')', '{', 'final', 'int', 'tag', '=', 'Symbol', '.', 'CONSTANT_NAME_AND_TYPE_TAG', ';', 'int', 'hashCode', '=', 'hash', '(', 'tag', ',', 'name', ',', 'descriptor', ')', ';', 'Entry', 'entry', '=', 'get', '(', 'hashCode', ')', ';', 'while', '(', 'entry', '!=', 'null', ')', '{', 'if', '(', 'entry', '.', 'tag', '==', 'tag', '&&', 'entry', '.', 'hashCode', '==', 'hashCode', '&&', 'entry', '.', 'name', '.', 'equals', '(', 'name', ')', '&&', 'entry', '.', 'value', '.', 'equals', '(', 'descriptor', ')', ')', '{', 'return', 'entry', '.', 'index', ';', '}', 'entry', '=', 'entry', '.', 'next', ';', '}', 'constantPool', '.', 'put122', '(', 'tag', ',', 'addConstantUtf8', '(', 'name', ')', ',', 'addConstantUtf8', '(', 'descriptor', ')', ')', ';', 'return', 'put', '(', 'new', 'Entry', '(', 'constantPoolCount', '++', ',', 'tag', ',', 'name', ',', 'descriptor', ',', 'hashCode', ')', ')', '.', 'index', ';', '}']","Adds a CONSTANT_NameAndType_info to the constant pool of this symbol table. Does nothing if the
constant pool already contains a similar item.

@param name a field or method name.
@param descriptor a field or method descriptor.
@return a new or already existing Symbol with the given value.","['Adds', 'a', 'CONSTANT_NameAndType_info', 'to', 'the', 'constant', 'pool', 'of', 'this', 'symbol', 'table', '.', 'Does', 'nothing', 'if', 'the', 'constant', 'pool', 'already', 'contains', 'a', 'similar', 'item', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java#L727-L742,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/nowrad/NOWRadheader.java,NOWRadheader.readTop,"int readTop(ucar.unidata.io.RandomAccessFile raf) throws IOException {
        int pos = 0;

        // long     actualSize = 0;
        raf.seek(pos);

        int readLen = 35;

        // Read in the contents of the NEXRAD Level III product head
        byte[] b = new byte[readLen];

        int rc = raf.read(b);

        if (rc != readLen) {
            return 0;
        }

        // check
        if ((convertunsignedByte2Short(b[0]) != 0x00) || (convertunsignedByte2Short(b[1]) != 0xF0)
                || (convertunsignedByte2Short(b[2]) != 0x09)) {
            return 0;
        }

        String pidd  = new String(b, 15, 5, CDM.utf8Charset);

        if (pidd.contains(""NOWRA"") || pidd.contains(""USRAD"") || pidd.contains(""NEX"")) {
            return 1;
        } else {
            return 0;
        }
    }",java,"int readTop(ucar.unidata.io.RandomAccessFile raf) throws IOException {
        int pos = 0;

        // long     actualSize = 0;
        raf.seek(pos);

        int readLen = 35;

        // Read in the contents of the NEXRAD Level III product head
        byte[] b = new byte[readLen];

        int rc = raf.read(b);

        if (rc != readLen) {
            return 0;
        }

        // check
        if ((convertunsignedByte2Short(b[0]) != 0x00) || (convertunsignedByte2Short(b[1]) != 0xF0)
                || (convertunsignedByte2Short(b[2]) != 0x09)) {
            return 0;
        }

        String pidd  = new String(b, 15, 5, CDM.utf8Charset);

        if (pidd.contains(""NOWRA"") || pidd.contains(""USRAD"") || pidd.contains(""NEX"")) {
            return 1;
        } else {
            return 0;
        }
    }","['int', 'readTop', '(', 'ucar', '.', 'unidata', '.', 'io', '.', 'RandomAccessFile', 'raf', ')', 'throws', 'IOException', '{', 'int', 'pos', '=', '0', ';', '// long     actualSize = 0;\r', 'raf', '.', 'seek', '(', 'pos', ')', ';', 'int', 'readLen', '=', '35', ';', '// Read in the contents of the NEXRAD Level III product head\r', 'byte', '[', ']', 'b', '=', 'new', 'byte', '[', 'readLen', ']', ';', 'int', 'rc', '=', 'raf', '.', 'read', '(', 'b', ')', ';', 'if', '(', 'rc', '!=', 'readLen', ')', '{', 'return', '0', ';', '}', '// check\r', 'if', '(', '(', 'convertunsignedByte2Short', '(', 'b', '[', '0', ']', ')', '!=', '0x00', ')', '||', '(', 'convertunsignedByte2Short', '(', 'b', '[', '1', ']', ')', '!=', '0xF0', ')', '||', '(', 'convertunsignedByte2Short', '(', 'b', '[', '2', ']', ')', '!=', '0x09', ')', ')', '{', 'return', '0', ';', '}', 'String', 'pidd', '=', 'new', 'String', '(', 'b', ',', '15', ',', '5', ',', 'CDM', '.', 'utf8Charset', ')', ';', 'if', '(', 'pidd', '.', 'contains', '(', '""NOWRA""', ')', '||', 'pidd', '.', 'contains', '(', '""USRAD""', ')', '||', 'pidd', '.', 'contains', '(', '""NEX""', ')', ')', '{', 'return', '1', ';', '}', 'else', '{', 'return', '0', ';', '}', '}']","read the header of input file and parsing the NOWRAD part
@param raf    input file
@return        1 if checking passing
@throws IOException","['read', 'the', 'header', 'of', 'input', 'file', 'and', 'parsing', 'the', 'NOWRAD', 'part']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/nowrad/NOWRadheader.java#L104-L134,test
wavesplatform/WavesJ,src/main/java/com/wavesplatform/wavesj/Base58.java,Base58.decode,"public static byte[] decode(String input) throws IllegalArgumentException {
        if (input.startsWith(""base58:"")) input = input.substring(7);
        if (input.length() == 0) return new byte[0];

        // Convert the base58-encoded ASCII chars to a base58 byte sequence (base58 digits).
        byte[] input58 = new byte[input.length()];
        for (int i = 0; i < input.length(); ++i) {
            char c = input.charAt(i);
            int digit = c < 128 ? INDEXES[c] : -1;
            if (digit < 0) {
                throw new IllegalArgumentException(""Illegal character "" + c + "" at position "" + i);
            }
            input58[i] = (byte) digit;
        }
        // Count leading zeros.
        int zeros = 0;
        while (zeros < input58.length && input58[zeros] == 0) {
            ++zeros;
        }
        // Convert base-58 digits to base-256 digits.
        byte[] decoded = new byte[input.length()];
        int outputStart = decoded.length;
        for (int inputStart = zeros; inputStart < input58.length; ) {
            decoded[--outputStart] = divmod(input58, inputStart, 58, 256);
            if (input58[inputStart] == 0) {
                ++inputStart; // optimization - skip leading zeros
            }
        }
        // Ignore extra leading zeroes that were added during the calculation.
        while (outputStart < decoded.length && decoded[outputStart] == 0) {
            ++outputStart;
        }
        // Return decoded data (including original number of leading zeros).
        return Arrays.copyOfRange(decoded, outputStart - zeros, decoded.length);
    }",java,"public static byte[] decode(String input) throws IllegalArgumentException {
        if (input.startsWith(""base58:"")) input = input.substring(7);
        if (input.length() == 0) return new byte[0];

        // Convert the base58-encoded ASCII chars to a base58 byte sequence (base58 digits).
        byte[] input58 = new byte[input.length()];
        for (int i = 0; i < input.length(); ++i) {
            char c = input.charAt(i);
            int digit = c < 128 ? INDEXES[c] : -1;
            if (digit < 0) {
                throw new IllegalArgumentException(""Illegal character "" + c + "" at position "" + i);
            }
            input58[i] = (byte) digit;
        }
        // Count leading zeros.
        int zeros = 0;
        while (zeros < input58.length && input58[zeros] == 0) {
            ++zeros;
        }
        // Convert base-58 digits to base-256 digits.
        byte[] decoded = new byte[input.length()];
        int outputStart = decoded.length;
        for (int inputStart = zeros; inputStart < input58.length; ) {
            decoded[--outputStart] = divmod(input58, inputStart, 58, 256);
            if (input58[inputStart] == 0) {
                ++inputStart; // optimization - skip leading zeros
            }
        }
        // Ignore extra leading zeroes that were added during the calculation.
        while (outputStart < decoded.length && decoded[outputStart] == 0) {
            ++outputStart;
        }
        // Return decoded data (including original number of leading zeros).
        return Arrays.copyOfRange(decoded, outputStart - zeros, decoded.length);
    }","['public', 'static', 'byte', '[', ']', 'decode', '(', 'String', 'input', ')', 'throws', 'IllegalArgumentException', '{', 'if', '(', 'input', '.', 'startsWith', '(', '""base58:""', ')', ')', 'input', '=', 'input', '.', 'substring', '(', '7', ')', ';', 'if', '(', 'input', '.', 'length', '(', ')', '==', '0', ')', 'return', 'new', 'byte', '[', '0', ']', ';', '// Convert the base58-encoded ASCII chars to a base58 byte sequence (base58 digits).', 'byte', '[', ']', 'input58', '=', 'new', 'byte', '[', 'input', '.', 'length', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'input', '.', 'length', '(', ')', ';', '++', 'i', ')', '{', 'char', 'c', '=', 'input', '.', 'charAt', '(', 'i', ')', ';', 'int', 'digit', '=', 'c', '<', '128', '?', 'INDEXES', '[', 'c', ']', ':', '-', '1', ';', 'if', '(', 'digit', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Illegal character ""', '+', 'c', '+', '"" at position ""', '+', 'i', ')', ';', '}', 'input58', '[', 'i', ']', '=', '(', 'byte', ')', 'digit', ';', '}', '// Count leading zeros.', 'int', 'zeros', '=', '0', ';', 'while', '(', 'zeros', '<', 'input58', '.', 'length', '&&', 'input58', '[', 'zeros', ']', '==', '0', ')', '{', '++', 'zeros', ';', '}', '// Convert base-58 digits to base-256 digits.', 'byte', '[', ']', 'decoded', '=', 'new', 'byte', '[', 'input', '.', 'length', '(', ')', ']', ';', 'int', 'outputStart', '=', 'decoded', '.', 'length', ';', 'for', '(', 'int', 'inputStart', '=', 'zeros', ';', 'inputStart', '<', 'input58', '.', 'length', ';', ')', '{', 'decoded', '[', '--', 'outputStart', ']', '=', 'divmod', '(', 'input58', ',', 'inputStart', ',', '58', ',', '256', ')', ';', 'if', '(', 'input58', '[', 'inputStart', ']', '==', '0', ')', '{', '++', 'inputStart', ';', '// optimization - skip leading zeros', '}', '}', '// Ignore extra leading zeroes that were added during the calculation.', 'while', '(', 'outputStart', '<', 'decoded', '.', 'length', '&&', 'decoded', '[', 'outputStart', ']', '==', '0', ')', '{', '++', 'outputStart', ';', '}', '// Return decoded data (including original number of leading zeros).', 'return', 'Arrays', '.', 'copyOfRange', '(', 'decoded', ',', 'outputStart', '-', 'zeros', ',', 'decoded', '.', 'length', ')', ';', '}']","Decodes the given base58 string into the original data bytes.

@param input the base58-encoded string to decode
@return the decoded data bytes
@throws IllegalArgumentException if the given string is not a valid base58 string","['Decodes', 'the', 'given', 'base58', 'string', 'into', 'the', 'original', 'data', 'bytes', '.']",ae13a61c4e780b608c30a86e45c9a811549e11dd,https://github.com/wavesplatform/WavesJ/blob/ae13a61c4e780b608c30a86e45c9a811549e11dd/src/main/java/com/wavesplatform/wavesj/Base58.java#L84-L118,test
spring-projects/spring-security,ldap/src/main/java/org/springframework/security/ldap/authentication/SpringSecurityAuthenticationSource.java,SpringSecurityAuthenticationSource.getPrincipal,"public String getPrincipal() {
		Authentication authentication = SecurityContextHolder.getContext()
				.getAuthentication();

		if (authentication == null) {
			log.warn(""No Authentication object set in SecurityContext - returning empty String as Principal"");
			return """";
		}

		Object principal = authentication.getPrincipal();

		if (principal instanceof LdapUserDetails) {
			LdapUserDetails details = (LdapUserDetails) principal;
			return details.getDn();
		}
		else if (authentication instanceof AnonymousAuthenticationToken) {
			if (log.isDebugEnabled()) {
				log.debug(""Anonymous Authentication, returning empty String as Principal"");
			}
			return """";
		}
		else {
			throw new IllegalArgumentException(
					""The principal property of the authentication object""
							+ ""needs to be an LdapUserDetails."");
		}
	}",java,"public String getPrincipal() {
		Authentication authentication = SecurityContextHolder.getContext()
				.getAuthentication();

		if (authentication == null) {
			log.warn(""No Authentication object set in SecurityContext - returning empty String as Principal"");
			return """";
		}

		Object principal = authentication.getPrincipal();

		if (principal instanceof LdapUserDetails) {
			LdapUserDetails details = (LdapUserDetails) principal;
			return details.getDn();
		}
		else if (authentication instanceof AnonymousAuthenticationToken) {
			if (log.isDebugEnabled()) {
				log.debug(""Anonymous Authentication, returning empty String as Principal"");
			}
			return """";
		}
		else {
			throw new IllegalArgumentException(
					""The principal property of the authentication object""
							+ ""needs to be an LdapUserDetails."");
		}
	}","['public', 'String', 'getPrincipal', '(', ')', '{', 'Authentication', 'authentication', '=', 'SecurityContextHolder', '.', 'getContext', '(', ')', '.', 'getAuthentication', '(', ')', ';', 'if', '(', 'authentication', '==', 'null', ')', '{', 'log', '.', 'warn', '(', '""No Authentication object set in SecurityContext - returning empty String as Principal""', ')', ';', 'return', '""""', ';', '}', 'Object', 'principal', '=', 'authentication', '.', 'getPrincipal', '(', ')', ';', 'if', '(', 'principal', 'instanceof', 'LdapUserDetails', ')', '{', 'LdapUserDetails', 'details', '=', '(', 'LdapUserDetails', ')', 'principal', ';', 'return', 'details', '.', 'getDn', '(', ')', ';', '}', 'else', 'if', '(', 'authentication', 'instanceof', 'AnonymousAuthenticationToken', ')', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', '{', 'log', '.', 'debug', '(', '""Anonymous Authentication, returning empty String as Principal""', ')', ';', '}', 'return', '""""', ';', '}', 'else', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""The principal property of the authentication object""', '+', '""needs to be an LdapUserDetails.""', ')', ';', '}', '}']","Get the principals of the logged in user, in this case the distinguished name.

@return the distinguished name of the logged in user.","['Get', 'the', 'principals', 'of', 'the', 'logged', 'in', 'user', 'in', 'this', 'case', 'the', 'distinguished', 'name', '.']",98a8467e4c2ae05b3e09c67ece856944fa48ed23,https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/ldap/src/main/java/org/springframework/security/ldap/authentication/SpringSecurityAuthenticationSource.java#L47-L73,test
robeio/robe,robe-auth/src/main/java/io/robe/auth/token/BasicToken.java,BasicToken.generateTokenString,"private String generateTokenString() throws Exception {
        //Renew age
        //Stringify token data
        StringBuilder dataString = new StringBuilder();
        dataString
                .append(getUserId())
                .append(SEPARATOR)
                .append(getUsername())
                .append(SEPARATOR)
                .append(getExpirationDate().getTime())
                .append(SEPARATOR)
                .append(attributesHash);

        // Encrypt token data string
        String newTokenString = encryptor.encrypt(dataString.toString());
        newTokenString = BaseEncoding.base16().encode(newTokenString.getBytes());
        tokenString = newTokenString;
        return newTokenString;
    }",java,"private String generateTokenString() throws Exception {
        //Renew age
        //Stringify token data
        StringBuilder dataString = new StringBuilder();
        dataString
                .append(getUserId())
                .append(SEPARATOR)
                .append(getUsername())
                .append(SEPARATOR)
                .append(getExpirationDate().getTime())
                .append(SEPARATOR)
                .append(attributesHash);

        // Encrypt token data string
        String newTokenString = encryptor.encrypt(dataString.toString());
        newTokenString = BaseEncoding.base16().encode(newTokenString.getBytes());
        tokenString = newTokenString;
        return newTokenString;
    }","['private', 'String', 'generateTokenString', '(', ')', 'throws', 'Exception', '{', '//Renew age', '//Stringify token data', 'StringBuilder', 'dataString', '=', 'new', 'StringBuilder', '(', ')', ';', 'dataString', '.', 'append', '(', 'getUserId', '(', ')', ')', '.', 'append', '(', 'SEPARATOR', ')', '.', 'append', '(', 'getUsername', '(', ')', ')', '.', 'append', '(', 'SEPARATOR', ')', '.', 'append', '(', 'getExpirationDate', '(', ')', '.', 'getTime', '(', ')', ')', '.', 'append', '(', 'SEPARATOR', ')', '.', 'append', '(', 'attributesHash', ')', ';', '// Encrypt token data string', 'String', 'newTokenString', '=', 'encryptor', '.', 'encrypt', '(', 'dataString', '.', 'toString', '(', ')', ')', ';', 'newTokenString', '=', 'BaseEncoding', '.', 'base16', '(', ')', '.', 'encode', '(', 'newTokenString', '.', 'getBytes', '(', ')', ')', ';', 'tokenString', '=', 'newTokenString', ';', 'return', 'newTokenString', ';', '}']","Generates a tokenString with a new expiration date and assigns it.

@return new tokenString
@throws Exception","['Generates', 'a', 'tokenString', 'with', 'a', 'new', 'expiration', 'date', 'and', 'assigns', 'it', '.']",a0a8c7cebd1f70f78cf24a66a002859e937badfe,https://github.com/robeio/robe/blob/a0a8c7cebd1f70f78cf24a66a002859e937badfe/robe-auth/src/main/java/io/robe/auth/token/BasicToken.java#L166-L184,test
deeplearning4j/nd4j,nd4j-common/src/main/java/org/nd4j/util/StringUtils.java,StringUtils.getStrings,"public static String[] getStrings(String str, String delim){
        Collection<String> values = getStringCollection(str, delim);
        if(values.size() == 0) {
            return null;
        }
        return values.toArray(new String[values.size()]);
    }",java,"public static String[] getStrings(String str, String delim){
        Collection<String> values = getStringCollection(str, delim);
        if(values.size() == 0) {
            return null;
        }
        return values.toArray(new String[values.size()]);
    }","['public', 'static', 'String', '[', ']', 'getStrings', '(', 'String', 'str', ',', 'String', 'delim', ')', '{', 'Collection', '<', 'String', '>', 'values', '=', 'getStringCollection', '(', 'str', ',', 'delim', ')', ';', 'if', '(', 'values', '.', 'size', '(', ')', '==', '0', ')', '{', 'return', 'null', ';', '}', 'return', 'values', '.', 'toArray', '(', 'new', 'String', '[', 'values', '.', 'size', '(', ')', ']', ')', ';', '}']","Returns an arraylist of strings.
@param str the string values
@param delim delimiter to separate the values
@return the arraylist of the separated string values","['Returns', 'an', 'arraylist', 'of', 'strings', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-common/src/main/java/org/nd4j/util/StringUtils.java#L326-L332,test
objectify/objectify,src/main/java/com/googlecode/objectify/impl/ForwardPath.java,ForwardPath.of,"public static ForwardPath of(Path path) {
		ForwardPath next = new ForwardPath(path);
		if (path.getPrevious() == Path.root())
			return next;
		
		ForwardPath previous = of(path.getPrevious());
		previous.next = next;
		
		return previous;
	}",java,"public static ForwardPath of(Path path) {
		ForwardPath next = new ForwardPath(path);
		if (path.getPrevious() == Path.root())
			return next;
		
		ForwardPath previous = of(path.getPrevious());
		previous.next = next;
		
		return previous;
	}","['public', 'static', 'ForwardPath', 'of', '(', 'Path', 'path', ')', '{', 'ForwardPath', 'next', '=', 'new', 'ForwardPath', '(', 'path', ')', ';', 'if', '(', 'path', '.', 'getPrevious', '(', ')', '==', 'Path', '.', 'root', '(', ')', ')', 'return', 'next', ';', 'ForwardPath', 'previous', '=', 'of', '(', 'path', '.', 'getPrevious', '(', ')', ')', ';', 'previous', '.', 'next', '=', 'next', ';', 'return', 'previous', ';', '}']","Recursive method which reverses the path into a ForwardPath.
@param path cannot be the root path.","['Recursive', 'method', 'which', 'reverses', 'the', 'path', 'into', 'a', 'ForwardPath', '.']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/impl/ForwardPath.java#L27-L36,test
OpenEstate/OpenEstate-IO,ImmoXML/src/main/jaxb/org/openestate/io/immoxml/xml/Zimmer.java,Zimmer.setZimmertyp,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:50:55+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setZimmertyp(Zimmer.Zimmertyp value) {
        this.zimmertyp = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:50:55+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setZimmertyp(Zimmer.Zimmertyp value) {
        this.zimmertyp = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:50:55+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setZimmertyp', '(', 'Zimmer', '.', 'Zimmertyp', 'value', ')', '{', 'this', '.', 'zimmertyp', '=', 'value', ';', '}']","Sets the value of the zimmertyp property.

@param value
allowed object is
{@link Zimmer.Zimmertyp }","['Sets', 'the', 'value', 'of', 'the', 'zimmertyp', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/ImmoXML/src/main/jaxb/org/openestate/io/immoxml/xml/Zimmer.java#L63-L66,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/WebDAVFactory.java,WebDAVFactory.newLocator,"public ILocator newLocator(String resourceURL, String label) {
        return locatorFactory.newLocator(resourceURL, label);
    }",java,"public ILocator newLocator(String resourceURL, String label) {
        return locatorFactory.newLocator(resourceURL, label);
    }","['public', 'ILocator', 'newLocator', '(', 'String', 'resourceURL', ',', 'String', 'label', ')', '{', 'return', 'locatorFactory', '.', 'newLocator', '(', 'resourceURL', ',', 'label', ')', ';', '}']","Answer a new resource locator that identifies a particular
server resource by it's URL and label.

@param resourceURL the URL of the resource.
@param label the version label of the resource.
@return the Locator to the resource.","['Answer', 'a', 'new', 'resource', 'locator', 'that', 'identifies', 'a', 'particular', 'server', 'resource', 'by', 'it', 's', 'URL', 'and', 'label', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/WebDAVFactory.java#L68-L70,test
deeplearning4j/nd4j,nd4j-common/src/main/java/org/nd4j/util/StringUtils.java,StringUtils.getStackTrace,"public static String getStackTrace(Thread t) {
        final StackTraceElement[] stackTrace = t.getStackTrace();
        StringBuilder str = new StringBuilder();
        for (StackTraceElement e : stackTrace) {
            str.append(e.toString() + ""\n"");
        }
        return str.toString();
    }",java,"public static String getStackTrace(Thread t) {
        final StackTraceElement[] stackTrace = t.getStackTrace();
        StringBuilder str = new StringBuilder();
        for (StackTraceElement e : stackTrace) {
            str.append(e.toString() + ""\n"");
        }
        return str.toString();
    }","['public', 'static', 'String', 'getStackTrace', '(', 'Thread', 't', ')', '{', 'final', 'StackTraceElement', '[', ']', 'stackTrace', '=', 't', '.', 'getStackTrace', '(', ')', ';', 'StringBuilder', 'str', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'StackTraceElement', 'e', ':', 'stackTrace', ')', '{', 'str', '.', 'append', '(', 'e', '.', 'toString', '(', ')', '+', '""\\n""', ')', ';', '}', 'return', 'str', '.', 'toString', '(', ')', ';', '}']",Get stack trace for a given thread.,"['Get', 'stack', 'trace', 'for', 'a', 'given', 'thread', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-common/src/main/java/org/nd4j/util/StringUtils.java#L950-L957,test
fabric8io/fabric8-maven-plugin,plugin/src/main/java/io/fabric8/maven/plugin/mojo/build/ResourceMojo.java,ResourceMojo.getBuildReferenceDate,"private Date getBuildReferenceDate() throws MojoExecutionException {
        // Pick up an existing build date created by fabric8:build previously
        File tsFile = new File(project.getBuild().getDirectory(), AbstractDockerMojo.DOCKER_BUILD_TIMESTAMP);
        if (!tsFile.exists()) {
            return new Date();
        }
        try {
            return EnvUtil.loadTimestamp(tsFile);
        } catch (IOException e) {
            throw new MojoExecutionException(""Cannot read timestamp from "" + tsFile, e);
        }
    }",java,"private Date getBuildReferenceDate() throws MojoExecutionException {
        // Pick up an existing build date created by fabric8:build previously
        File tsFile = new File(project.getBuild().getDirectory(), AbstractDockerMojo.DOCKER_BUILD_TIMESTAMP);
        if (!tsFile.exists()) {
            return new Date();
        }
        try {
            return EnvUtil.loadTimestamp(tsFile);
        } catch (IOException e) {
            throw new MojoExecutionException(""Cannot read timestamp from "" + tsFile, e);
        }
    }","['private', 'Date', 'getBuildReferenceDate', '(', ')', 'throws', 'MojoExecutionException', '{', '// Pick up an existing build date created by fabric8:build previously', 'File', 'tsFile', '=', 'new', 'File', '(', 'project', '.', 'getBuild', '(', ')', '.', 'getDirectory', '(', ')', ',', 'AbstractDockerMojo', '.', 'DOCKER_BUILD_TIMESTAMP', ')', ';', 'if', '(', '!', 'tsFile', '.', 'exists', '(', ')', ')', '{', 'return', 'new', 'Date', '(', ')', ';', '}', 'try', '{', 'return', 'EnvUtil', '.', 'loadTimestamp', '(', 'tsFile', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'MojoExecutionException', '(', '""Cannot read timestamp from ""', '+', 'tsFile', ',', 'e', ')', ';', '}', '}']",get a reference date,"['get', 'a', 'reference', 'date']",b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3,https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/plugin/src/main/java/io/fabric8/maven/plugin/mojo/build/ResourceMojo.java#L625-L636,test
oblac/jodd,jodd-petite/src/main/java/jodd/petite/BeanData.java,BeanData.newBeanInstance,"public Object newBeanInstance() {
		if (beanDefinition.ctor == CtorInjectionPoint.EMPTY) {
			throw new PetiteException(""No constructor (annotated, single or default) founded as injection point for: "" + beanDefinition.type.getName());
		}

		int paramNo = beanDefinition.ctor.references.length;
		Object[] args = new Object[paramNo];

		// wiring
		if (beanDefinition.wiringMode != WiringMode.NONE) {
			for (int i = 0; i < paramNo; i++) {
				args[i] = pc.getBean(beanDefinition.ctor.references[i]);
				if (args[i] == null) {
					if ((beanDefinition.wiringMode == WiringMode.STRICT)) {
						throw new PetiteException(
							""Wiring constructor failed. References '"" + beanDefinition.ctor.references[i] +
								""' not found for constructor: "" + beanDefinition.ctor.constructor);
					}
				}
			}
		}

		// create instance
		final Object bean;
		try {
			bean = beanDefinition.ctor.constructor.newInstance(args);
		} catch (Exception ex) {
			throw new PetiteException(""Failed to create new bean instance '"" + beanDefinition.type.getName() + ""' using constructor: "" + beanDefinition.ctor.constructor, ex);
		}

		return bean;
	}",java,"public Object newBeanInstance() {
		if (beanDefinition.ctor == CtorInjectionPoint.EMPTY) {
			throw new PetiteException(""No constructor (annotated, single or default) founded as injection point for: "" + beanDefinition.type.getName());
		}

		int paramNo = beanDefinition.ctor.references.length;
		Object[] args = new Object[paramNo];

		// wiring
		if (beanDefinition.wiringMode != WiringMode.NONE) {
			for (int i = 0; i < paramNo; i++) {
				args[i] = pc.getBean(beanDefinition.ctor.references[i]);
				if (args[i] == null) {
					if ((beanDefinition.wiringMode == WiringMode.STRICT)) {
						throw new PetiteException(
							""Wiring constructor failed. References '"" + beanDefinition.ctor.references[i] +
								""' not found for constructor: "" + beanDefinition.ctor.constructor);
					}
				}
			}
		}

		// create instance
		final Object bean;
		try {
			bean = beanDefinition.ctor.constructor.newInstance(args);
		} catch (Exception ex) {
			throw new PetiteException(""Failed to create new bean instance '"" + beanDefinition.type.getName() + ""' using constructor: "" + beanDefinition.ctor.constructor, ex);
		}

		return bean;
	}","['public', 'Object', 'newBeanInstance', '(', ')', '{', 'if', '(', 'beanDefinition', '.', 'ctor', '==', 'CtorInjectionPoint', '.', 'EMPTY', ')', '{', 'throw', 'new', 'PetiteException', '(', '""No constructor (annotated, single or default) founded as injection point for: ""', '+', 'beanDefinition', '.', 'type', '.', 'getName', '(', ')', ')', ';', '}', 'int', 'paramNo', '=', 'beanDefinition', '.', 'ctor', '.', 'references', '.', 'length', ';', 'Object', '[', ']', 'args', '=', 'new', 'Object', '[', 'paramNo', ']', ';', '// wiring', 'if', '(', 'beanDefinition', '.', 'wiringMode', '!=', 'WiringMode', '.', 'NONE', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'paramNo', ';', 'i', '++', ')', '{', 'args', '[', 'i', ']', '=', 'pc', '.', 'getBean', '(', 'beanDefinition', '.', 'ctor', '.', 'references', '[', 'i', ']', ')', ';', 'if', '(', 'args', '[', 'i', ']', '==', 'null', ')', '{', 'if', '(', '(', 'beanDefinition', '.', 'wiringMode', '==', 'WiringMode', '.', 'STRICT', ')', ')', '{', 'throw', 'new', 'PetiteException', '(', '""Wiring constructor failed. References \'""', '+', 'beanDefinition', '.', 'ctor', '.', 'references', '[', 'i', ']', '+', '""\' not found for constructor: ""', '+', 'beanDefinition', '.', 'ctor', '.', 'constructor', ')', ';', '}', '}', '}', '}', '// create instance', 'final', 'Object', 'bean', ';', 'try', '{', 'bean', '=', 'beanDefinition', '.', 'ctor', '.', 'constructor', '.', 'newInstance', '(', 'args', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'throw', 'new', 'PetiteException', '(', '""Failed to create new bean instance \'""', '+', 'beanDefinition', '.', 'type', '.', 'getName', '(', ')', '+', '""\' using constructor: ""', '+', 'beanDefinition', '.', 'ctor', '.', 'constructor', ',', 'ex', ')', ';', '}', 'return', 'bean', ';', '}']",Creates a new instance.,"['Creates', 'a', 'new', 'instance', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-petite/src/main/java/jodd/petite/BeanData.java#L132-L163,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/record/impl/ODirtyManager.java,ODirtyManager.mergeSet,"private static Set<ORecord> mergeSet(Set<ORecord> target, Set<ORecord> source) {
    if (source != null) {
      if (target == null) {
        return source;
      } else {
        if (target.size() > source.size()) {
          target.addAll(source);
          return target;
        } else {
          source.addAll(target);
          return source;
        }
      }
    } else {
      return target;
    }
  }",java,"private static Set<ORecord> mergeSet(Set<ORecord> target, Set<ORecord> source) {
    if (source != null) {
      if (target == null) {
        return source;
      } else {
        if (target.size() > source.size()) {
          target.addAll(source);
          return target;
        } else {
          source.addAll(target);
          return source;
        }
      }
    } else {
      return target;
    }
  }","['private', 'static', 'Set', '<', 'ORecord', '>', 'mergeSet', '(', 'Set', '<', 'ORecord', '>', 'target', ',', 'Set', '<', 'ORecord', '>', 'source', ')', '{', 'if', '(', 'source', '!=', 'null', ')', '{', 'if', '(', 'target', '==', 'null', ')', '{', 'return', 'source', ';', '}', 'else', '{', 'if', '(', 'target', '.', 'size', '(', ')', '>', 'source', '.', 'size', '(', ')', ')', '{', 'target', '.', 'addAll', '(', 'source', ')', ';', 'return', 'target', ';', '}', 'else', '{', 'source', '.', 'addAll', '(', 'target', ')', ';', 'return', 'source', ';', '}', '}', '}', 'else', '{', 'return', 'target', ';', '}', '}']","Merge the two set try to use the optimum case

@param target
@param source

@return","['Merge', 'the', 'two', 'set', 'try', 'to', 'use', 'the', 'optimum', 'case']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/record/impl/ODirtyManager.java#L109-L125,test
orientechnologies/orientdb,server/src/main/java/com/orientechnologies/orient/server/network/OServerNetworkListener.java,OServerNetworkListener.readParameters,"private void readParameters(final OContextConfiguration iServerConfig, final OServerParameterConfiguration[] iParameters) {
    configuration = new OContextConfiguration(iServerConfig);

    // SET PARAMETERS
    if (iParameters != null && iParameters.length > 0) {
      // CONVERT PARAMETERS IN MAP TO INTIALIZE THE CONTEXT-CONFIGURATION
      for (OServerParameterConfiguration param : iParameters)
        configuration.setValue(param.name, param.value);
    }

    socketBufferSize = configuration.getValueAsInteger(OGlobalConfiguration.NETWORK_SOCKET_BUFFER_SIZE);
  }",java,"private void readParameters(final OContextConfiguration iServerConfig, final OServerParameterConfiguration[] iParameters) {
    configuration = new OContextConfiguration(iServerConfig);

    // SET PARAMETERS
    if (iParameters != null && iParameters.length > 0) {
      // CONVERT PARAMETERS IN MAP TO INTIALIZE THE CONTEXT-CONFIGURATION
      for (OServerParameterConfiguration param : iParameters)
        configuration.setValue(param.name, param.value);
    }

    socketBufferSize = configuration.getValueAsInteger(OGlobalConfiguration.NETWORK_SOCKET_BUFFER_SIZE);
  }","['private', 'void', 'readParameters', '(', 'final', 'OContextConfiguration', 'iServerConfig', ',', 'final', 'OServerParameterConfiguration', '[', ']', 'iParameters', ')', '{', 'configuration', '=', 'new', 'OContextConfiguration', '(', 'iServerConfig', ')', ';', '// SET PARAMETERS\r', 'if', '(', 'iParameters', '!=', 'null', '&&', 'iParameters', '.', 'length', '>', '0', ')', '{', '// CONVERT PARAMETERS IN MAP TO INTIALIZE THE CONTEXT-CONFIGURATION\r', 'for', '(', 'OServerParameterConfiguration', 'param', ':', 'iParameters', ')', 'configuration', '.', 'setValue', '(', 'param', '.', 'name', ',', 'param', '.', 'value', ')', ';', '}', 'socketBufferSize', '=', 'configuration', '.', 'getValueAsInteger', '(', 'OGlobalConfiguration', '.', 'NETWORK_SOCKET_BUFFER_SIZE', ')', ';', '}']","Initializes connection parameters by the reading XML configuration. If not specified, get the parameters defined as global
configuration.

@param iServerConfig","['Initializes', 'connection', 'parameters', 'by', 'the', 'reading', 'XML', 'configuration', '.', 'If', 'not', 'specified', 'get', 'the', 'parameters', 'defined', 'as', 'global', 'configuration', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/server/src/main/java/com/orientechnologies/orient/server/network/OServerNetworkListener.java#L368-L379,test
orientechnologies/orientdb,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraphFactory.java,OrientGraphFactory.getTx,"public OrientGraph getTx() {
    final OrientGraph g;
    if (pool == null) {
      g = (OrientGraph) getTxGraphImplFactory().getGraph(getDatabase(), user, password, settings);
    } else {
      // USE THE POOL
      g = (OrientGraph) getTxGraphImplFactory().getGraph(pool, settings);
    }

    initGraph(g);
    return g;
  }",java,"public OrientGraph getTx() {
    final OrientGraph g;
    if (pool == null) {
      g = (OrientGraph) getTxGraphImplFactory().getGraph(getDatabase(), user, password, settings);
    } else {
      // USE THE POOL
      g = (OrientGraph) getTxGraphImplFactory().getGraph(pool, settings);
    }

    initGraph(g);
    return g;
  }","['public', 'OrientGraph', 'getTx', '(', ')', '{', 'final', 'OrientGraph', 'g', ';', 'if', '(', 'pool', '==', 'null', ')', '{', 'g', '=', '(', 'OrientGraph', ')', 'getTxGraphImplFactory', '(', ')', '.', 'getGraph', '(', 'getDatabase', '(', ')', ',', 'user', ',', 'password', ',', 'settings', ')', ';', '}', 'else', '{', '// USE THE POOL', 'g', '=', '(', 'OrientGraph', ')', 'getTxGraphImplFactory', '(', ')', '.', 'getGraph', '(', 'pool', ',', 'settings', ')', ';', '}', 'initGraph', '(', 'g', ')', ';', 'return', 'g', ';', '}']","Gets transactional graph with the database from pool if pool is configured. Otherwise creates a graph with new db instance. The
Graph instance inherits the factory's configuration.

@return transactional graph","['Gets', 'transactional', 'graph', 'with', 'the', 'database', 'from', 'pool', 'if', 'pool', 'is', 'configured', '.', 'Otherwise', 'creates', 'a', 'graph', 'with', 'new', 'db', 'instance', '.', 'The', 'Graph', 'instance', 'inherits', 'the', 'factory', 's', 'configuration', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientGraphFactory.java#L218-L229,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagPluginManager.java,TagPluginManager.invokePlugin,"private void invokePlugin(Node.CustomTag n) {
	TagPlugin tagPlugin = tagPlugins.get(n.getTagHandlerClass().getName());
	if (tagPlugin == null) {
	    return;
	}

	TagPluginContext tagPluginContext = new TagPluginContextImpl(n, pageInfo);
	n.setTagPluginContext(tagPluginContext);
	tagPlugin.doTag(tagPluginContext);
    }",java,"private void invokePlugin(Node.CustomTag n) {
	TagPlugin tagPlugin = tagPlugins.get(n.getTagHandlerClass().getName());
	if (tagPlugin == null) {
	    return;
	}

	TagPluginContext tagPluginContext = new TagPluginContextImpl(n, pageInfo);
	n.setTagPluginContext(tagPluginContext);
	tagPlugin.doTag(tagPluginContext);
    }","['private', 'void', 'invokePlugin', '(', 'Node', '.', 'CustomTag', 'n', ')', '{', 'TagPlugin', 'tagPlugin', '=', 'tagPlugins', '.', 'get', '(', 'n', '.', 'getTagHandlerClass', '(', ')', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'tagPlugin', '==', 'null', ')', '{', 'return', ';', '}', 'TagPluginContext', 'tagPluginContext', '=', 'new', 'TagPluginContextImpl', '(', 'n', ',', 'pageInfo', ')', ';', 'n', '.', 'setTagPluginContext', '(', 'tagPluginContext', ')', ';', 'tagPlugin', '.', 'doTag', '(', 'tagPluginContext', ')', ';', '}']","Invoke tag plugin for the given custom tag, if a plugin exists for
the custom tag's tag handler.

The given custom tag node will be manipulated by the plugin.","['Invoke', 'tag', 'plugin', 'for', 'the', 'given', 'custom', 'tag', 'if', 'a', 'plugin', 'exists', 'for', 'the', 'custom', 'tag', 's', 'tag', 'handler', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagPluginManager.java#L168-L177,test
stanfy/enroscar,net/src/main/java/com/stanfy/enroscar/rest/request/binary/BinaryData.java,BinaryData.writeInputStreamToOutput,"protected static void writeInputStreamToOutput(final Context context, final InputStream source, final OutputStream output) throws IOException {
    BuffersPool pool = BeansManager.get(context).getContainer().getBean(BuffersPool.class);
    IoUtils.transfer(source, output, pool);
  }",java,"protected static void writeInputStreamToOutput(final Context context, final InputStream source, final OutputStream output) throws IOException {
    BuffersPool pool = BeansManager.get(context).getContainer().getBean(BuffersPool.class);
    IoUtils.transfer(source, output, pool);
  }","['protected', 'static', 'void', 'writeInputStreamToOutput', '(', 'final', 'Context', 'context', ',', 'final', 'InputStream', 'source', ',', 'final', 'OutputStream', 'output', ')', 'throws', 'IOException', '{', 'BuffersPool', 'pool', '=', 'BeansManager', '.', 'get', '(', 'context', ')', '.', 'getContainer', '(', ')', '.', 'getBean', '(', 'BuffersPool', '.', 'class', ')', ';', 'IoUtils', '.', 'transfer', '(', 'source', ',', 'output', ',', 'pool', ')', ';', '}']","Utility method for transferring input stream to output.
@param context application context (needed to retrieve a buffers pool)
@param source input stream
@param output output stream
@throws IOException if I/O error happens","['Utility', 'method', 'for', 'transferring', 'input', 'stream', 'to', 'output', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/net/src/main/java/com/stanfy/enroscar/rest/request/binary/BinaryData.java#L125-L128,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/template/PresenceConstant.java,PresenceConstant.setPresence,"public void setPresence(boolean present) {
        if (this.present == present)
            return;
        this.present = present;
        updateVague();
        if (present) {
            firePresence(true);
        } else {
            fireLeaving();
        }
    }",java,"public void setPresence(boolean present) {
        if (this.present == present)
            return;
        this.present = present;
        updateVague();
        if (present) {
            firePresence(true);
        } else {
            fireLeaving();
        }
    }","['public', 'void', 'setPresence', '(', 'boolean', 'present', ')', '{', 'if', '(', 'this', '.', 'present', '==', 'present', ')', 'return', ';', 'this', '.', 'present', '=', 'present', ';', 'updateVague', '(', ')', ';', 'if', '(', 'present', ')', '{', 'firePresence', '(', 'true', ')', ';', '}', 'else', '{', 'fireLeaving', '(', ')', ';', '}', '}']","sets the presence
@param present true for presence, false if not","['sets', 'the', 'presence']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/template/PresenceConstant.java#L147-L157,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CellUtility.java,CellUtility.setCellValueNumber,"private static void setCellValueNumber(final Cell c, final String value) {
		double val = Double.parseDouble(value.replace(Character.toString(','), """"));
		c.setCellType(CellType.NUMERIC);
		c.setCellValue(val);
	}",java,"private static void setCellValueNumber(final Cell c, final String value) {
		double val = Double.parseDouble(value.replace(Character.toString(','), """"));
		c.setCellType(CellType.NUMERIC);
		c.setCellValue(val);
	}","['private', 'static', 'void', 'setCellValueNumber', '(', 'final', 'Cell', 'c', ',', 'final', 'String', 'value', ')', '{', 'double', 'val', '=', 'Double', '.', 'parseDouble', '(', 'value', '.', 'replace', '(', 'Character', '.', 'toString', '(', ""'"", ""'"", ')', ',', '""""', ')', ')', ';', 'c', '.', 'setCellType', '(', 'CellType', '.', 'NUMERIC', ')', ';', 'c', '.', 'setCellValue', '(', 'val', ')', ';', '}']","Sets the cell value number.

@param c
the c
@param value
the value","['Sets', 'the', 'cell', 'value', 'number', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CellUtility.java#L269-L273,test
oblac/jodd,jodd-db/src/main/java/jodd/db/oom/mapper/DefaultResultSetMapper.java,DefaultResultSetMapper.cacheResultSetEntities,"protected void cacheResultSetEntities(final Object[] result) {
		if (entitiesCache == null) {
			entitiesCache = new HashMap<>();
		}

		for (int i = 0; i < result.length; i++) {
			Object object = result[i];

			if (object == null) {
				continue;
			}

			DbEntityDescriptor ded = cachedDbEntityDescriptors[i];

			if (ded == null) {	// not a type, continue
				continue;
			}

			// calculate key
			Object key;
			if (ded.hasIdColumn()) {
				//noinspection unchecked
				key = ded.getKeyValue(object);
			} else {
				key = object;
			}

			Object cachedObject = entitiesCache.get(key);

			if (cachedObject == null) {
				// object is not in the cache, add it
				entitiesCache.put(key, object);
			} else {
				// object is in the cache, replace it
				result[i] = cachedObject;
			}
		}
	}",java,"protected void cacheResultSetEntities(final Object[] result) {
		if (entitiesCache == null) {
			entitiesCache = new HashMap<>();
		}

		for (int i = 0; i < result.length; i++) {
			Object object = result[i];

			if (object == null) {
				continue;
			}

			DbEntityDescriptor ded = cachedDbEntityDescriptors[i];

			if (ded == null) {	// not a type, continue
				continue;
			}

			// calculate key
			Object key;
			if (ded.hasIdColumn()) {
				//noinspection unchecked
				key = ded.getKeyValue(object);
			} else {
				key = object;
			}

			Object cachedObject = entitiesCache.get(key);

			if (cachedObject == null) {
				// object is not in the cache, add it
				entitiesCache.put(key, object);
			} else {
				// object is in the cache, replace it
				result[i] = cachedObject;
			}
		}
	}","['protected', 'void', 'cacheResultSetEntities', '(', 'final', 'Object', '[', ']', 'result', ')', '{', 'if', '(', 'entitiesCache', '==', 'null', ')', '{', 'entitiesCache', '=', 'new', 'HashMap', '<>', '(', ')', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'result', '.', 'length', ';', 'i', '++', ')', '{', 'Object', 'object', '=', 'result', '[', 'i', ']', ';', 'if', '(', 'object', '==', 'null', ')', '{', 'continue', ';', '}', 'DbEntityDescriptor', 'ded', '=', 'cachedDbEntityDescriptors', '[', 'i', ']', ';', 'if', '(', 'ded', '==', 'null', ')', '{', '// not a type, continue', 'continue', ';', '}', '// calculate key', 'Object', 'key', ';', 'if', '(', 'ded', '.', 'hasIdColumn', '(', ')', ')', '{', '//noinspection unchecked', 'key', '=', 'ded', '.', 'getKeyValue', '(', 'object', ')', ';', '}', 'else', '{', 'key', '=', 'object', ';', '}', 'Object', 'cachedObject', '=', 'entitiesCache', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'cachedObject', '==', 'null', ')', '{', '// object is not in the cache, add it', 'entitiesCache', '.', 'put', '(', 'key', ',', 'object', ')', ';', '}', 'else', '{', '// object is in the cache, replace it', 'result', '[', 'i', ']', '=', 'cachedObject', ';', '}', '}', '}']",Caches returned entities. Replaces new instances with existing ones.,"['Caches', 'returned', 'entities', '.', 'Replaces', 'new', 'instances', 'with', 'existing', 'ones', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/oom/mapper/DefaultResultSetMapper.java#L485-L522,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/preferences/FieldEditorPropertyPage.java,FieldEditorPropertyPage.calcNumberOfColumns,"private int calcNumberOfColumns() {
		int result = 0;
		if (fields != null) {
			Iterator<FieldEditor> e = fields.iterator();
			while (e.hasNext()) {
				FieldEditor pe = e.next();
				result = Math.max(result, pe.getNumberOfControls());
			}
		}
		return result;
	}",java,"private int calcNumberOfColumns() {
		int result = 0;
		if (fields != null) {
			Iterator<FieldEditor> e = fields.iterator();
			while (e.hasNext()) {
				FieldEditor pe = e.next();
				result = Math.max(result, pe.getNumberOfControls());
			}
		}
		return result;
	}","['private', 'int', 'calcNumberOfColumns', '(', ')', '{', 'int', 'result', '=', '0', ';', 'if', '(', 'fields', '!=', 'null', ')', '{', 'Iterator', '<', 'FieldEditor', '>', 'e', '=', 'fields', '.', 'iterator', '(', ')', ';', 'while', '(', 'e', '.', 'hasNext', '(', ')', ')', '{', 'FieldEditor', 'pe', '=', 'e', '.', 'next', '(', ')', ';', 'result', '=', 'Math', '.', 'max', '(', 'result', ',', 'pe', '.', 'getNumberOfControls', '(', ')', ')', ';', '}', '}', 'return', 'result', ';', '}']","Calculates the number of columns needed to host all field editors.

@return the number of columns","['Calculates', 'the', 'number', 'of', 'columns', 'needed', 'to', 'host', 'all', 'field', 'editors', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/preferences/FieldEditorPropertyPage.java#L130-L140,test
alipay/sofa-bolt,src/main/java/com/alipay/remoting/util/RemotingUtil.java,RemotingUtil.parseRemoteIP,"public static String parseRemoteIP(final Channel channel) {
        if (null == channel) {
            return StringUtils.EMPTY;
        }
        final InetSocketAddress remote = (InetSocketAddress) channel.remoteAddress();
        if (remote != null) {
            return remote.getAddress().getHostAddress();
        }
        return StringUtils.EMPTY;
    }",java,"public static String parseRemoteIP(final Channel channel) {
        if (null == channel) {
            return StringUtils.EMPTY;
        }
        final InetSocketAddress remote = (InetSocketAddress) channel.remoteAddress();
        if (remote != null) {
            return remote.getAddress().getHostAddress();
        }
        return StringUtils.EMPTY;
    }","['public', 'static', 'String', 'parseRemoteIP', '(', 'final', 'Channel', 'channel', ')', '{', 'if', '(', 'null', '==', 'channel', ')', '{', 'return', 'StringUtils', '.', 'EMPTY', ';', '}', 'final', 'InetSocketAddress', 'remote', '=', '(', 'InetSocketAddress', ')', 'channel', '.', 'remoteAddress', '(', ')', ';', 'if', '(', 'remote', '!=', 'null', ')', '{', 'return', 'remote', '.', 'getAddress', '(', ')', '.', 'getHostAddress', '(', ')', ';', '}', 'return', 'StringUtils', '.', 'EMPTY', ';', '}']","Parse the remote host ip of the channel.

@param channel
@return","['Parse', 'the', 'remote', 'host', 'ip', 'of', 'the', 'channel', '.']",0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046,https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/util/RemotingUtil.java#L67-L76,test
stanfy/enroscar,net/src/main/java/com/stanfy/enroscar/net/cache/BaseFileResponseCache.java,BaseFileResponseCache.ensureWorkingDirectory,"private synchronized File ensureWorkingDirectory() throws IOException {
    File directory = getWorkingDirectory();
    if (!directory.exists()) {
      if (!directory.mkdirs()) {
        throw new IOException(""Working directory "" + directory + "" cannot be created"");
      }
    } else {
      if (!directory.isDirectory()) {
        if (!directory.delete()) {
          throw new IOException(directory + "" is not a directory and cannot be deleted"");
        }
        if (!directory.mkdirs()) {
          throw new IOException(""Working directory "" + directory + "" cannot be recreated"");
        }
      }
    }
    return directory;
  }",java,"private synchronized File ensureWorkingDirectory() throws IOException {
    File directory = getWorkingDirectory();
    if (!directory.exists()) {
      if (!directory.mkdirs()) {
        throw new IOException(""Working directory "" + directory + "" cannot be created"");
      }
    } else {
      if (!directory.isDirectory()) {
        if (!directory.delete()) {
          throw new IOException(directory + "" is not a directory and cannot be deleted"");
        }
        if (!directory.mkdirs()) {
          throw new IOException(""Working directory "" + directory + "" cannot be recreated"");
        }
      }
    }
    return directory;
  }","['private', 'synchronized', 'File', 'ensureWorkingDirectory', '(', ')', 'throws', 'IOException', '{', 'File', 'directory', '=', 'getWorkingDirectory', '(', ')', ';', 'if', '(', '!', 'directory', '.', 'exists', '(', ')', ')', '{', 'if', '(', '!', 'directory', '.', 'mkdirs', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', '""Working directory ""', '+', 'directory', '+', '"" cannot be created""', ')', ';', '}', '}', 'else', '{', 'if', '(', '!', 'directory', '.', 'isDirectory', '(', ')', ')', '{', 'if', '(', '!', 'directory', '.', 'delete', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', 'directory', '+', '"" is not a directory and cannot be deleted""', ')', ';', '}', 'if', '(', '!', 'directory', '.', 'mkdirs', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', '""Working directory ""', '+', 'directory', '+', '"" cannot be recreated""', ')', ';', '}', '}', '}', 'return', 'directory', ';', '}']",this method is synchronized in order to avoid concurrent calls to mkdir,"['this', 'method', 'is', 'synchronized', 'in', 'order', 'to', 'avoid', 'concurrent', 'calls', 'to', 'mkdir']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/net/src/main/java/com/stanfy/enroscar/net/cache/BaseFileResponseCache.java#L81-L98,test
jboss/jboss-common-core,src/main/java/org/jboss/util/graph/Vertex.java,Vertex.hasEdge,"public boolean hasEdge(Edge<T> e)
   {
      if (e.getFrom() == this)
         return outgoingEdges.contains(e);
      else if (e.getTo() == this)
         return incomingEdges.contains(e);
      else 
         return false;
   }",java,"public boolean hasEdge(Edge<T> e)
   {
      if (e.getFrom() == this)
         return outgoingEdges.contains(e);
      else if (e.getTo() == this)
         return incomingEdges.contains(e);
      else 
         return false;
   }","['public', 'boolean', 'hasEdge', '(', 'Edge', '<', 'T', '>', 'e', ')', '{', 'if', '(', 'e', '.', 'getFrom', '(', ')', '==', 'this', ')', 'return', 'outgoingEdges', '.', 'contains', '(', 'e', ')', ';', 'else', 'if', '(', 'e', '.', 'getTo', '(', ')', '==', 'this', ')', 'return', 'incomingEdges', '.', 'contains', '(', 'e', ')', ';', 'else', 'return', 'false', ';', '}']","Check the vertex for either an incoming or outgoing edge
mathcing e.

@param e the edge to check
@return true it has an edge","['Check', 'the', 'vertex', 'for', 'either', 'an', 'incoming', 'or', 'outgoing', 'edge', 'mathcing', 'e', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/graph/Vertex.java#L145-L153,test
oblac/jodd,jodd-petite/src/main/java/jodd/petite/BeanDefinition.java,BeanDefinition.addPropertyInjectionPoint,"protected void addPropertyInjectionPoint(final PropertyInjectionPoint pip) {
		if (properties == null) {
			properties = new PropertyInjectionPoint[1];
			properties[0] = pip;
		} else {
			properties = ArraysUtil.append(properties, pip);
		}
	}",java,"protected void addPropertyInjectionPoint(final PropertyInjectionPoint pip) {
		if (properties == null) {
			properties = new PropertyInjectionPoint[1];
			properties[0] = pip;
		} else {
			properties = ArraysUtil.append(properties, pip);
		}
	}","['protected', 'void', 'addPropertyInjectionPoint', '(', 'final', 'PropertyInjectionPoint', 'pip', ')', '{', 'if', '(', 'properties', '==', 'null', ')', '{', 'properties', '=', 'new', 'PropertyInjectionPoint', '[', '1', ']', ';', 'properties', '[', '0', ']', '=', 'pip', ';', '}', 'else', '{', 'properties', '=', 'ArraysUtil', '.', 'append', '(', 'properties', ',', 'pip', ')', ';', '}', '}']",Adds property injection point.,"['Adds', 'property', 'injection', 'point', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-petite/src/main/java/jodd/petite/BeanDefinition.java#L197-L204,test
Netflix/hollow,hollow/src/main/java/com/netflix/hollow/core/memory/encoding/HashCodes.java,HashCodes.hashTableSize,"public static int hashTableSize(int numElements) throws IllegalArgumentException {
        if (numElements < 0) {
            throw new IllegalArgumentException(""cannot be negative; numElements=""+numElements);
        } else if (numElements > HASH_TABLE_MAX_SIZE) {
            throw new IllegalArgumentException(""exceeds maximum number of buckets; numElements=""+numElements);
        }

        if (numElements == 0)
            return 1;
        if (numElements < 3)
            return numElements * 2;

        // Apply load factor to number of elements and determine next
        // largest power of 2 that fits in an int
        int sizeAfterLoadFactor = (int)((long)numElements * 10 / 7);
        int bits = 32 - Integer.numberOfLeadingZeros(sizeAfterLoadFactor - 1);
        return 1 << bits;
    }",java,"public static int hashTableSize(int numElements) throws IllegalArgumentException {
        if (numElements < 0) {
            throw new IllegalArgumentException(""cannot be negative; numElements=""+numElements);
        } else if (numElements > HASH_TABLE_MAX_SIZE) {
            throw new IllegalArgumentException(""exceeds maximum number of buckets; numElements=""+numElements);
        }

        if (numElements == 0)
            return 1;
        if (numElements < 3)
            return numElements * 2;

        // Apply load factor to number of elements and determine next
        // largest power of 2 that fits in an int
        int sizeAfterLoadFactor = (int)((long)numElements * 10 / 7);
        int bits = 32 - Integer.numberOfLeadingZeros(sizeAfterLoadFactor - 1);
        return 1 << bits;
    }","['public', 'static', 'int', 'hashTableSize', '(', 'int', 'numElements', ')', 'throws', 'IllegalArgumentException', '{', 'if', '(', 'numElements', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""cannot be negative; numElements=""', '+', 'numElements', ')', ';', '}', 'else', 'if', '(', 'numElements', '>', 'HASH_TABLE_MAX_SIZE', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""exceeds maximum number of buckets; numElements=""', '+', 'numElements', ')', ';', '}', 'if', '(', 'numElements', '==', '0', ')', 'return', '1', ';', 'if', '(', 'numElements', '<', '3', ')', 'return', 'numElements', '*', '2', ';', '// Apply load factor to number of elements and determine next', '// largest power of 2 that fits in an int', 'int', 'sizeAfterLoadFactor', '=', '(', 'int', ')', '(', '(', 'long', ')', 'numElements', '*', '10', '/', '7', ')', ';', 'int', 'bits', '=', '32', '-', 'Integer', '.', 'numberOfLeadingZeros', '(', 'sizeAfterLoadFactor', '-', '1', ')', ';', 'return', '1', '<<', 'bits', ';', '}']","Determine size of hash table capable of storing the specified number of elements with a load
factor applied.

@param numElements number of elements to be stored in the table
@return size of hash table, always a power of 2
@throws IllegalArgumentException when numElements is negative or exceeds
{@link com.netflix.hollow.core.HollowConstants#HASH_TABLE_MAX_SIZE}","['Determine', 'size', 'of', 'hash', 'table', 'capable', 'of', 'storing', 'the', 'specified', 'number', 'of', 'elements', 'with', 'a', 'load', 'factor', 'applied', '.']",43ca100034a01050fb764170bd32b085ac9a3c22,https://github.com/Netflix/hollow/blob/43ca100034a01050fb764170bd32b085ac9a3c22/hollow/src/main/java/com/netflix/hollow/core/memory/encoding/HashCodes.java#L183-L200,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft/point/standard/NestedTable.java,NestedTable.addParentJoin,"void addParentJoin(Cursor cursor) throws IOException {
    int level = cursor.currentIndex;
    Table t = getTable(level);
    if (t.extraJoins != null) {
      List<StructureData> sdata = new ArrayList<>(3);
      sdata.add(cursor.tableData[level]);
      for (Join j : t.extraJoins) {
        sdata.add(j.getJoinData(cursor));
      }
      cursor.tableData[level] = StructureDataFactory.make(sdata.toArray(new StructureData[sdata.size()]));  // LOOK should try to consolidate
    }
  }",java,"void addParentJoin(Cursor cursor) throws IOException {
    int level = cursor.currentIndex;
    Table t = getTable(level);
    if (t.extraJoins != null) {
      List<StructureData> sdata = new ArrayList<>(3);
      sdata.add(cursor.tableData[level]);
      for (Join j : t.extraJoins) {
        sdata.add(j.getJoinData(cursor));
      }
      cursor.tableData[level] = StructureDataFactory.make(sdata.toArray(new StructureData[sdata.size()]));  // LOOK should try to consolidate
    }
  }","['void', 'addParentJoin', '(', 'Cursor', 'cursor', ')', 'throws', 'IOException', '{', 'int', 'level', '=', 'cursor', '.', 'currentIndex', ';', 'Table', 't', '=', 'getTable', '(', 'level', ')', ';', 'if', '(', 't', '.', 'extraJoins', '!=', 'null', ')', '{', 'List', '<', 'StructureData', '>', 'sdata', '=', 'new', 'ArrayList', '<>', '(', '3', ')', ';', 'sdata', '.', 'add', '(', 'cursor', '.', 'tableData', '[', 'level', ']', ')', ';', 'for', '(', 'Join', 'j', ':', 't', '.', 'extraJoins', ')', '{', 'sdata', '.', 'add', '(', 'j', '.', 'getJoinData', '(', 'cursor', ')', ')', ';', '}', 'cursor', '.', 'tableData', '[', 'level', ']', '=', 'StructureDataFactory', '.', 'make', '(', 'sdata', '.', 'toArray', '(', 'new', 'StructureData', '[', 'sdata', '.', 'size', '(', ')', ']', ')', ')', ';', '// LOOK should try to consolidate', '}', '}']",add table join to this cursor level,"['add', 'table', 'join', 'to', 'this', 'cursor', 'level']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/NestedTable.java#L629-L640,test
wildfly/wildfly,messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/JMSConnectionFactoryDefinitionInjectionSource.java,JMSConnectionFactoryDefinitionInjectionSource.getActiveMQServerName,"static String getActiveMQServerName(Map<String, String> properties) {
        return properties.getOrDefault(SERVER, DEFAULT);
    }",java,"static String getActiveMQServerName(Map<String, String> properties) {
        return properties.getOrDefault(SERVER, DEFAULT);
    }","['static', 'String', 'getActiveMQServerName', '(', 'Map', '<', 'String', ',', 'String', '>', 'properties', ')', '{', 'return', 'properties', '.', 'getOrDefault', '(', 'SERVER', ',', 'DEFAULT', ')', ';', '}']","The JMS connection factory can specify another server to deploy its destinations
by passing a property server=&lt;name of the server>. Otherwise, ""default"" is used by default.","['The', 'JMS', 'connection', 'factory', 'can', 'specify', 'another', 'server', 'to', 'deploy', 'its', 'destinations', 'by', 'passing', 'a', 'property', 'server', '=', '&lt', ';', 'name', 'of', 'the', 'server', '>', '.', 'Otherwise', 'default', 'is', 'used', 'by', 'default', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/JMSConnectionFactoryDefinitionInjectionSource.java#L432-L434,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/properties/ContextualProperties.java,ContextualProperties.createArrayProperties,"protected void createArrayProperties()
    {
        // Scan through all defined properties.
        for (Object o : keySet())
        {
            String key = (String) o;
            String value = super.getProperty(key);

            // Split the property key into everything before the last '.' and after it.
            int lastDotIndex = key.lastIndexOf('.');
            String keyEnding = key.substring(lastDotIndex + 1, key.length());
            String keyStart = key.substring(0, (lastDotIndex == -1) ? 0 : lastDotIndex);

            // Check if the property key ends in an integer, in which case it is an array property.
            int index = 0;

            try
            {
                index = Integer.parseInt(keyEnding);
            }
            catch (NumberFormatException e)
            {
                // The ending is not an integer so its not an array.
                // Exception can be ignored as it means this property is not an array.
                e = null;

                continue;
            }

            // Check if an array property already exists for this base name and create one if not.
            ArrayList propArray = (ArrayList) arrayProperties.get(keyStart);

            if (propArray == null)
            {
                propArray = new ArrayList();
                arrayProperties.put(keyStart, propArray);
            }

            // Add the new property value to the array property for the index.
            propArray.set(index, value);
        }
    }",java,"protected void createArrayProperties()
    {
        // Scan through all defined properties.
        for (Object o : keySet())
        {
            String key = (String) o;
            String value = super.getProperty(key);

            // Split the property key into everything before the last '.' and after it.
            int lastDotIndex = key.lastIndexOf('.');
            String keyEnding = key.substring(lastDotIndex + 1, key.length());
            String keyStart = key.substring(0, (lastDotIndex == -1) ? 0 : lastDotIndex);

            // Check if the property key ends in an integer, in which case it is an array property.
            int index = 0;

            try
            {
                index = Integer.parseInt(keyEnding);
            }
            catch (NumberFormatException e)
            {
                // The ending is not an integer so its not an array.
                // Exception can be ignored as it means this property is not an array.
                e = null;

                continue;
            }

            // Check if an array property already exists for this base name and create one if not.
            ArrayList propArray = (ArrayList) arrayProperties.get(keyStart);

            if (propArray == null)
            {
                propArray = new ArrayList();
                arrayProperties.put(keyStart, propArray);
            }

            // Add the new property value to the array property for the index.
            propArray.set(index, value);
        }
    }","['protected', 'void', 'createArrayProperties', '(', ')', '{', '// Scan through all defined properties.', 'for', '(', 'Object', 'o', ':', 'keySet', '(', ')', ')', '{', 'String', 'key', '=', '(', 'String', ')', 'o', ';', 'String', 'value', '=', 'super', '.', 'getProperty', '(', 'key', ')', ';', ""// Split the property key into everything before the last '.' and after it."", 'int', 'lastDotIndex', '=', 'key', '.', 'lastIndexOf', '(', ""'"", ""'"", ')', ';', 'String', 'keyEnding', '=', 'key', '.', 'substring', '(', 'lastDotIndex', '+', '1', ',', 'key', '.', 'length', '(', ')', ')', ';', 'String', 'keyStart', '=', 'key', '.', 'substring', '(', '0', ',', '(', 'lastDotIndex', '==', '-', '1', ')', '?', '0', ':', 'lastDotIndex', ')', ';', '// Check if the property key ends in an integer, in which case it is an array property.', 'int', 'index', '=', '0', ';', 'try', '{', 'index', '=', 'Integer', '.', 'parseInt', '(', 'keyEnding', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '// The ending is not an integer so its not an array.', '// Exception can be ignored as it means this property is not an array.', 'e', '=', 'null', ';', 'continue', ';', '}', '// Check if an array property already exists for this base name and create one if not.', 'ArrayList', 'propArray', '=', '(', 'ArrayList', ')', 'arrayProperties', '.', 'get', '(', 'keyStart', ')', ';', 'if', '(', 'propArray', '==', 'null', ')', '{', 'propArray', '=', 'new', 'ArrayList', '(', ')', ';', 'arrayProperties', '.', 'put', '(', 'keyStart', ',', 'propArray', ')', ';', '}', '// Add the new property value to the array property for the index.', 'propArray', '.', 'set', '(', 'index', ',', 'value', ')', ';', '}', '}']","Scans all the properties in the parent Properties object and creates arrays for any array property definitions.

<p>Array properties are defined with indexes. For example:

<p><code>property.1=one<br/>
property.2=two<br/>
property.3=three<br/>
</code>

<p>Note that these properties will be stored as the 'empty string' or """" property array.

<p><code>.1=one<br/>
2=two<br/>
</code>","['Scans', 'all', 'the', 'properties', 'in', 'the', 'parent', 'Properties', 'object', 'and', 'creates', 'arrays', 'for', 'any', 'array', 'property', 'definitions', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/properties/ContextualProperties.java#L445-L486,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ncml/AggregationNew.java,AggregationNew.getCoordinateType,"private DataType getCoordinateType() {
    List<Dataset> nestedDatasets = getDatasets();
    DatasetOuterDimension first = (DatasetOuterDimension) nestedDatasets.get(0);
    return first.isStringValued ? DataType.STRING : DataType.DOUBLE;
  }",java,"private DataType getCoordinateType() {
    List<Dataset> nestedDatasets = getDatasets();
    DatasetOuterDimension first = (DatasetOuterDimension) nestedDatasets.get(0);
    return first.isStringValued ? DataType.STRING : DataType.DOUBLE;
  }","['private', 'DataType', 'getCoordinateType', '(', ')', '{', 'List', '<', 'Dataset', '>', 'nestedDatasets', '=', 'getDatasets', '(', ')', ';', 'DatasetOuterDimension', 'first', '=', '(', 'DatasetOuterDimension', ')', 'nestedDatasets', '.', 'get', '(', '0', ')', ';', 'return', 'first', '.', 'isStringValued', '?', 'DataType', '.', 'STRING', ':', 'DataType', '.', 'DOUBLE', ';', '}']","What is the data type of the aggregation coordinate ?

@return the data type of the aggregation coordinate","['What', 'is', 'the', 'data', 'type', 'of', 'the', 'aggregation', 'coordinate', '?']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ncml/AggregationNew.java#L131-L135,test
objectify/objectify,src/main/java/com/googlecode/objectify/impl/Keys.java,Keys.fromUrlSafe,"@SneakyThrows
	public static com.google.cloud.datastore.Key fromUrlSafe(final String urlSafeKey) {
		if (urlSafeKey.startsWith(""a"")) {
			return KeyFormat.INSTANCE.parseOldStyleAppEngineKey(urlSafeKey);
		} else {
			return com.google.cloud.datastore.Key.fromUrlSafe(urlSafeKey);
		}
	}",java,"@SneakyThrows
	public static com.google.cloud.datastore.Key fromUrlSafe(final String urlSafeKey) {
		if (urlSafeKey.startsWith(""a"")) {
			return KeyFormat.INSTANCE.parseOldStyleAppEngineKey(urlSafeKey);
		} else {
			return com.google.cloud.datastore.Key.fromUrlSafe(urlSafeKey);
		}
	}","['@', 'SneakyThrows', 'public', 'static', 'com', '.', 'google', '.', 'cloud', '.', 'datastore', '.', 'Key', 'fromUrlSafe', '(', 'final', 'String', 'urlSafeKey', ')', '{', 'if', '(', 'urlSafeKey', '.', 'startsWith', '(', '""a""', ')', ')', '{', 'return', 'KeyFormat', '.', 'INSTANCE', '.', 'parseOldStyleAppEngineKey', '(', 'urlSafeKey', ')', ';', '}', 'else', '{', 'return', 'com', '.', 'google', '.', 'cloud', '.', 'datastore', '.', 'Key', '.', 'fromUrlSafe', '(', 'urlSafeKey', ')', ';', '}', '}']","Understands both the legacy format ""ag1zfnZvb2Rvb2R5bmUwcgcLEgFCGAEM"" and new format,
providing the key either way.","['Understands', 'both', 'the', 'legacy', 'format', 'ag1zfnZvb2Rvb2R5bmUwcgcLEgFCGAEM', 'and', 'new', 'format', 'providing', 'the', 'key', 'either', 'way', '.']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/impl/Keys.java#L253-L260,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dataset/StructureDS.java,StructureDS.convertMemberInfo,"private void convertMemberInfo(StructureMembers wrapperSm) {
    for (StructureMembers.Member m : wrapperSm.getMembers()) {
      Variable v = findVariable(m.getName());
      if ((v == null) && (orgVar != null)) // may have been renamed
        v = (Variable) findVariableFromOrgName(m.getName());

      if (v != null) { // a section will have missing variables LOOK wrapperSm probably wrong in that case
        //  log.error(""Cant find "" + m.getName());
        //else
        m.setVariableInfo(v.getShortName(), v.getDescription(), v.getUnitsString(), v.getDataType());
      }

      // nested structures
      if (v instanceof StructureDS) {
        StructureDS innerStruct = (StructureDS) v;
        innerStruct.convertMemberInfo(m.getStructureMembers());
      }

    }
  }",java,"private void convertMemberInfo(StructureMembers wrapperSm) {
    for (StructureMembers.Member m : wrapperSm.getMembers()) {
      Variable v = findVariable(m.getName());
      if ((v == null) && (orgVar != null)) // may have been renamed
        v = (Variable) findVariableFromOrgName(m.getName());

      if (v != null) { // a section will have missing variables LOOK wrapperSm probably wrong in that case
        //  log.error(""Cant find "" + m.getName());
        //else
        m.setVariableInfo(v.getShortName(), v.getDescription(), v.getUnitsString(), v.getDataType());
      }

      // nested structures
      if (v instanceof StructureDS) {
        StructureDS innerStruct = (StructureDS) v;
        innerStruct.convertMemberInfo(m.getStructureMembers());
      }

    }
  }","['private', 'void', 'convertMemberInfo', '(', 'StructureMembers', 'wrapperSm', ')', '{', 'for', '(', 'StructureMembers', '.', 'Member', 'm', ':', 'wrapperSm', '.', 'getMembers', '(', ')', ')', '{', 'Variable', 'v', '=', 'findVariable', '(', 'm', '.', 'getName', '(', ')', ')', ';', 'if', '(', '(', 'v', '==', 'null', ')', '&&', '(', 'orgVar', '!=', 'null', ')', ')', '// may have been renamed\r', 'v', '=', '(', 'Variable', ')', 'findVariableFromOrgName', '(', 'm', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'v', '!=', 'null', ')', '{', '// a section will have missing variables LOOK wrapperSm probably wrong in that case\r', '//  log.error(""Cant find "" + m.getName());\r', '//else\r', 'm', '.', 'setVariableInfo', '(', 'v', '.', 'getShortName', '(', ')', ',', 'v', '.', 'getDescription', '(', ')', ',', 'v', '.', 'getUnitsString', '(', ')', ',', 'v', '.', 'getDataType', '(', ')', ')', ';', '}', '// nested structures\r', 'if', '(', 'v', 'instanceof', 'StructureDS', ')', '{', 'StructureDS', 'innerStruct', '=', '(', 'StructureDS', ')', 'v', ';', 'innerStruct', '.', 'convertMemberInfo', '(', 'm', '.', 'getStructureMembers', '(', ')', ')', ';', '}', '}', '}']",the wrapper StructureMembers must be converted to correspond to the wrapper Structure,"['the', 'wrapper', 'StructureMembers', 'must', 'be', 'converted', 'to', 'correspond', 'to', 'the', 'wrapper', 'Structure']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/StructureDS.java#L437-L456,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/TypeConverter.java,TypeConverter.getMultiTypeData,"public static MultiTypeData getMultiTypeData(boolean b)
    {
        // Convert the value to a String and return the set of types that that String can be converted to.
        MultiTypeData result = getMultiTypeData(Boolean.toString(b));
        result.nativeType = BOOLEAN;

        return result;
    }",java,"public static MultiTypeData getMultiTypeData(boolean b)
    {
        // Convert the value to a String and return the set of types that that String can be converted to.
        MultiTypeData result = getMultiTypeData(Boolean.toString(b));
        result.nativeType = BOOLEAN;

        return result;
    }","['public', 'static', 'MultiTypeData', 'getMultiTypeData', '(', 'boolean', 'b', ')', '{', '// Convert the value to a String and return the set of types that that String can be converted to.', 'MultiTypeData', 'result', '=', 'getMultiTypeData', '(', 'Boolean', '.', 'toString', '(', 'b', ')', ')', ';', 'result', '.', 'nativeType', '=', 'BOOLEAN', ';', 'return', 'result', ';', '}']","Converts a boolean into a multi type data object.

@param  b The boolean to convert.

@return A multi type data object holding all the types that the boolean can be converted into.","['Converts', 'a', 'boolean', 'into', 'a', 'multi', 'type', 'data', 'object', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/TypeConverter.java#L116-L123,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/component/ResultMapper.java,ResultMapper.lookupAlias,"protected String lookupAlias(final String alias) {
		String value = actionsManager.lookupPathAlias(alias);
		if (value == null) {
			ActionRuntime cfg = actionsManager.lookup(alias);
			if (cfg != null) {
				value = cfg.getActionPath();
			}
		}
		return value;
	}",java,"protected String lookupAlias(final String alias) {
		String value = actionsManager.lookupPathAlias(alias);
		if (value == null) {
			ActionRuntime cfg = actionsManager.lookup(alias);
			if (cfg != null) {
				value = cfg.getActionPath();
			}
		}
		return value;
	}","['protected', 'String', 'lookupAlias', '(', 'final', 'String', 'alias', ')', '{', 'String', 'value', '=', 'actionsManager', '.', 'lookupPathAlias', '(', 'alias', ')', ';', 'if', '(', 'value', '==', 'null', ')', '{', 'ActionRuntime', 'cfg', '=', 'actionsManager', '.', 'lookup', '(', 'alias', ')', ';', 'if', '(', 'cfg', '!=', 'null', ')', '{', 'value', '=', 'cfg', '.', 'getActionPath', '(', ')', ';', '}', '}', 'return', 'value', ';', '}']","Lookups value as an alias and, if not found, as a default alias.","['Lookups', 'value', 'as', 'an', 'alias', 'and', 'if', 'not', 'found', 'as', 'a', 'default', 'alias', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/component/ResultMapper.java#L56-L65,test
real-logic/aeron,aeron-client/src/main/java/io/aeron/logbuffer/LogBufferDescriptor.java,LogBufferDescriptor.applyDefaultHeader,"public static void applyDefaultHeader(
        final UnsafeBuffer metadataBuffer, final UnsafeBuffer termBuffer, final int termOffset)
    {
        termBuffer.putBytes(termOffset, metadataBuffer, LOG_DEFAULT_FRAME_HEADER_OFFSET, HEADER_LENGTH);
    }",java,"public static void applyDefaultHeader(
        final UnsafeBuffer metadataBuffer, final UnsafeBuffer termBuffer, final int termOffset)
    {
        termBuffer.putBytes(termOffset, metadataBuffer, LOG_DEFAULT_FRAME_HEADER_OFFSET, HEADER_LENGTH);
    }","['public', 'static', 'void', 'applyDefaultHeader', '(', 'final', 'UnsafeBuffer', 'metadataBuffer', ',', 'final', 'UnsafeBuffer', 'termBuffer', ',', 'final', 'int', 'termOffset', ')', '{', 'termBuffer', '.', 'putBytes', '(', 'termOffset', ',', 'metadataBuffer', ',', 'LOG_DEFAULT_FRAME_HEADER_OFFSET', ',', 'HEADER_LENGTH', ')', ';', '}']","Apply the default header for a message in a term.

@param metadataBuffer containing the default headers.
@param termBuffer     to which the default header should be applied.
@param termOffset     at which the default should be applied.","['Apply', 'the', 'default', 'header', 'for', 'a', 'message', 'in', 'a', 'term', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-client/src/main/java/io/aeron/logbuffer/LogBufferDescriptor.java#L618-L622,test
oblac/jodd,jodd-http/src/main/java/jodd/http/HttpMultiMap.java,HttpMultiMap.getAll,"public List<V> getAll(final String name) {
		LinkedList<V> values = new LinkedList<>();

		int h = hash(name);
		int i = index(h);
		MapEntry<V> e = entries[i];
		while (e != null) {
			if (e.hash == h && eq(name, e.key)) {
				values.addFirst(e.getValue());
			}
			e = e.next;
		}
		return values;
	}",java,"public List<V> getAll(final String name) {
		LinkedList<V> values = new LinkedList<>();

		int h = hash(name);
		int i = index(h);
		MapEntry<V> e = entries[i];
		while (e != null) {
			if (e.hash == h && eq(name, e.key)) {
				values.addFirst(e.getValue());
			}
			e = e.next;
		}
		return values;
	}","['public', 'List', '<', 'V', '>', 'getAll', '(', 'final', 'String', 'name', ')', '{', 'LinkedList', '<', 'V', '>', 'values', '=', 'new', 'LinkedList', '<>', '(', ')', ';', 'int', 'h', '=', 'hash', '(', 'name', ')', ';', 'int', 'i', '=', 'index', '(', 'h', ')', ';', 'MapEntry', '<', 'V', '>', 'e', '=', 'entries', '[', 'i', ']', ';', 'while', '(', 'e', '!=', 'null', ')', '{', 'if', '(', 'e', '.', 'hash', '==', 'h', '&&', 'eq', '(', 'name', ',', 'e', '.', 'key', ')', ')', '{', 'values', '.', 'addFirst', '(', 'e', '.', 'getValue', '(', ')', ')', ';', '}', 'e', '=', 'e', '.', 'next', ';', '}', 'return', 'values', ';', '}']",Returns all values associated with the name.,"['Returns', 'all', 'values', 'associated', 'with', 'the', 'name', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-http/src/main/java/jodd/http/HttpMultiMap.java#L339-L352,test
TypedRest/TypedRest-Java,vaadin/src/main/java/net/typedrest/vaadin/views/AbstractCollectionView.java,AbstractCollectionView.handle,"@Subscribe
    public void handle(ElementEvent<TEntity> message) {
        if (message.getEndpoint().getEntityType() == this.endpoint.getEntityType()) {
            refresh();
        }
    }",java,"@Subscribe
    public void handle(ElementEvent<TEntity> message) {
        if (message.getEndpoint().getEntityType() == this.endpoint.getEntityType()) {
            refresh();
        }
    }","['@', 'Subscribe', 'public', 'void', 'handle', '(', 'ElementEvent', '<', 'TEntity', '>', 'message', ')', '{', 'if', '(', 'message', '.', 'getEndpoint', '(', ')', '.', 'getEntityType', '(', ')', '==', 'this', '.', 'endpoint', '.', 'getEntityType', '(', ')', ')', '{', 'refresh', '(', ')', ';', '}', '}']",Refresh when child elements are created or updated,"['Refresh', 'when', 'child', 'elements', 'are', 'created', 'or', 'updated']",8ce8782d4b8bbe68a2fb4417928b18724f178705,https://github.com/TypedRest/TypedRest-Java/blob/8ce8782d4b8bbe68a2fb4417928b18724f178705/vaadin/src/main/java/net/typedrest/vaadin/views/AbstractCollectionView.java#L145-L150,test
DigitalPebble/storm-crawler,core/src/main/java/com/digitalpebble/stormcrawler/util/RobotsTags.java,RobotsTags.extractMetaTags,"public void extractMetaTags(DocumentFragment doc)
            throws XPathExpressionException {
        NodeList nodes = (NodeList) expression.evaluate(doc,
                XPathConstants.NODESET);
        if (nodes == null)
            return;
        int numNodes = nodes.getLength();
        for (int i = 0; i < numNodes; i++) {
            Node n = (Node) nodes.item(i);
            // iterate on the attributes
            // and check that it has name=robots and content
            // whatever the case is
            boolean isRobots = false;
            String content = null;
            NamedNodeMap attrs = n.getAttributes();
            for (int att = 0; att < attrs.getLength(); att++) {
                Node keyval = attrs.item(att);
                if (""name"".equalsIgnoreCase(keyval.getNodeName())
                        && ""robots"".equalsIgnoreCase(keyval.getNodeValue())) {
                    isRobots = true;
                    continue;
                }
                if (""content"".equalsIgnoreCase(keyval.getNodeName())) {
                    content = keyval.getNodeValue();
                    continue;
                }
            }

            if (isRobots && content != null) {
                // got a value - split it
                String[] vals = content.split("" *, *"");
                parseValues(vals);
                return;
            }
        }
    }",java,"public void extractMetaTags(DocumentFragment doc)
            throws XPathExpressionException {
        NodeList nodes = (NodeList) expression.evaluate(doc,
                XPathConstants.NODESET);
        if (nodes == null)
            return;
        int numNodes = nodes.getLength();
        for (int i = 0; i < numNodes; i++) {
            Node n = (Node) nodes.item(i);
            // iterate on the attributes
            // and check that it has name=robots and content
            // whatever the case is
            boolean isRobots = false;
            String content = null;
            NamedNodeMap attrs = n.getAttributes();
            for (int att = 0; att < attrs.getLength(); att++) {
                Node keyval = attrs.item(att);
                if (""name"".equalsIgnoreCase(keyval.getNodeName())
                        && ""robots"".equalsIgnoreCase(keyval.getNodeValue())) {
                    isRobots = true;
                    continue;
                }
                if (""content"".equalsIgnoreCase(keyval.getNodeName())) {
                    content = keyval.getNodeValue();
                    continue;
                }
            }

            if (isRobots && content != null) {
                // got a value - split it
                String[] vals = content.split("" *, *"");
                parseValues(vals);
                return;
            }
        }
    }","['public', 'void', 'extractMetaTags', '(', 'DocumentFragment', 'doc', ')', 'throws', 'XPathExpressionException', '{', 'NodeList', 'nodes', '=', '(', 'NodeList', ')', 'expression', '.', 'evaluate', '(', 'doc', ',', 'XPathConstants', '.', 'NODESET', ')', ';', 'if', '(', 'nodes', '==', 'null', ')', 'return', ';', 'int', 'numNodes', '=', 'nodes', '.', 'getLength', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numNodes', ';', 'i', '++', ')', '{', 'Node', 'n', '=', '(', 'Node', ')', 'nodes', '.', 'item', '(', 'i', ')', ';', '// iterate on the attributes', '// and check that it has name=robots and content', '// whatever the case is', 'boolean', 'isRobots', '=', 'false', ';', 'String', 'content', '=', 'null', ';', 'NamedNodeMap', 'attrs', '=', 'n', '.', 'getAttributes', '(', ')', ';', 'for', '(', 'int', 'att', '=', '0', ';', 'att', '<', 'attrs', '.', 'getLength', '(', ')', ';', 'att', '++', ')', '{', 'Node', 'keyval', '=', 'attrs', '.', 'item', '(', 'att', ')', ';', 'if', '(', '""name""', '.', 'equalsIgnoreCase', '(', 'keyval', '.', 'getNodeName', '(', ')', ')', '&&', '""robots""', '.', 'equalsIgnoreCase', '(', 'keyval', '.', 'getNodeValue', '(', ')', ')', ')', '{', 'isRobots', '=', 'true', ';', 'continue', ';', '}', 'if', '(', '""content""', '.', 'equalsIgnoreCase', '(', 'keyval', '.', 'getNodeName', '(', ')', ')', ')', '{', 'content', '=', 'keyval', '.', 'getNodeValue', '(', ')', ';', 'continue', ';', '}', '}', 'if', '(', 'isRobots', '&&', 'content', '!=', 'null', ')', '{', '// got a value - split it', 'String', '[', ']', 'vals', '=', 'content', '.', 'split', '(', '"" *, *""', ')', ';', 'parseValues', '(', 'vals', ')', ';', 'return', ';', '}', '}', '}']",called by the parser bolts,"['called', 'by', 'the', 'parser', 'bolts']",5d0465192ab8fbd89a90db32cb20960a282411ea,https://github.com/DigitalPebble/storm-crawler/blob/5d0465192ab8fbd89a90db32cb20960a282411ea/core/src/main/java/com/digitalpebble/stormcrawler/util/RobotsTags.java#L88-L123,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/queues/Queues.java,Queues.getTransactionalQueue,"public static <E> Queue<E> getTransactionalQueue(java.util.Queue<E> queue)
    {
        return new WrapperQueue<E>(queue, new LinkedList<E>(), true, false, false);
    }",java,"public static <E> Queue<E> getTransactionalQueue(java.util.Queue<E> queue)
    {
        return new WrapperQueue<E>(queue, new LinkedList<E>(), true, false, false);
    }","['public', 'static', '<', 'E', '>', 'Queue', '<', 'E', '>', 'getTransactionalQueue', '(', 'java', '.', 'util', '.', 'Queue', '<', 'E', '>', 'queue', ')', '{', 'return', 'new', 'WrapperQueue', '<', 'E', '>', '(', 'queue', ',', 'new', 'LinkedList', '<', 'E', '>', '(', ')', ',', 'true', ',', 'false', ',', 'false', ')', ';', '}']","Provides a transactional queue, that delays all queue manipulation operations until the transaction is committed,
or erases them if it is rolled back.

@param  queue The queue to make transactional.
@param  <E>   The type of queue element.

@return A transactional queue.","['Provides', 'a', 'transactional', 'queue', 'that', 'delays', 'all', 'queue', 'manipulation', 'operations', 'until', 'the', 'transaction', 'is', 'committed', 'or', 'erases', 'them', 'if', 'it', 'is', 'rolled', 'back', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/queues/Queues.java#L143-L146,test
OpenEstate/OpenEstate-IO,Filemaker/src/main/jaxb/org/openestate/io/filemaker/xml/layout/ValueListsType.java,ValueListsType.getVALUELIST,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:42:33+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<ValueListsType.VALUELIST> getVALUELIST() {
        if (valuelist == null) {
            valuelist = new ArrayList<ValueListsType.VALUELIST>();
        }
        return this.valuelist;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:42:33+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<ValueListsType.VALUELIST> getVALUELIST() {
        if (valuelist == null) {
            valuelist = new ArrayList<ValueListsType.VALUELIST>();
        }
        return this.valuelist;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:42:33+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'List', '<', 'ValueListsType', '.', 'VALUELIST', '>', 'getVALUELIST', '(', ')', '{', 'if', '(', 'valuelist', '==', 'null', ')', '{', 'valuelist', '=', 'new', 'ArrayList', '<', 'ValueListsType', '.', 'VALUELIST', '>', '(', ')', ';', '}', 'return', 'this', '.', 'valuelist', ';', '}']","Gets the value of the valuelist property.

<p>
This accessor method returns a reference to the live list,
not a snapshot. Therefore any modification you make to the
returned list will be present inside the JAXB object.
This is why there is not a <CODE>set</CODE> method for the valuelist property.

<p>
For example, to add a new item, do as follows:
<pre>
getVALUELIST().add(newItem);
</pre>


<p>
Objects of the following type(s) are allowed in the list
{@link ValueListsType.VALUELIST }","['Gets', 'the', 'value', 'of', 'the', 'valuelist', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Filemaker/src/main/jaxb/org/openestate/io/filemaker/xml/layout/ValueListsType.java#L90-L96,test
turbomanage/storm-gen,storm-apt/api/src/main/java/com/turbomanage/storm/DatabaseHelper.java,DatabaseHelper.restoreAllTablesFromCsv,"public void restoreAllTablesFromCsv(Context ctx, SQLiteDatabase db, String suffix) {
		for (TableHelper table : getTableHelpers()) {
			table.restore(db, ctx, suffix);
		}
	}",java,"public void restoreAllTablesFromCsv(Context ctx, SQLiteDatabase db, String suffix) {
		for (TableHelper table : getTableHelpers()) {
			table.restore(db, ctx, suffix);
		}
	}","['public', 'void', 'restoreAllTablesFromCsv', '(', 'Context', 'ctx', ',', 'SQLiteDatabase', 'db', ',', 'String', 'suffix', ')', '{', 'for', '(', 'TableHelper', 'table', ':', 'getTableHelpers', '(', ')', ')', '{', 'table', '.', 'restore', '(', 'db', ',', 'ctx', ',', 'suffix', ')', ';', '}', '}']","Restore all tables from CSV files, one per table

@param ctx
@param db
@param suffix Optional filename suffix, none if null","['Restore', 'all', 'tables', 'from', 'CSV', 'files', 'one', 'per', 'table']",22caa69439548a074d035745215bce5aff55853d,https://github.com/turbomanage/storm-gen/blob/22caa69439548a074d035745215bce5aff55853d/storm-apt/api/src/main/java/com/turbomanage/storm/DatabaseHelper.java#L216-L220,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/answer/CandidateAnswerVariant.java,CandidateAnswerVariant.getOccurrences,"public FSList getOccurrences() {
    if (CandidateAnswerVariant_Type.featOkTst && ((CandidateAnswerVariant_Type)jcasType).casFeat_occurrences == null)
      jcasType.jcas.throwFeatMissing(""occurrences"", ""edu.cmu.lti.oaqa.type.answer.CandidateAnswerVariant"");
    return (FSList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((CandidateAnswerVariant_Type)jcasType).casFeatCode_occurrences)));}",java,"public FSList getOccurrences() {
    if (CandidateAnswerVariant_Type.featOkTst && ((CandidateAnswerVariant_Type)jcasType).casFeat_occurrences == null)
      jcasType.jcas.throwFeatMissing(""occurrences"", ""edu.cmu.lti.oaqa.type.answer.CandidateAnswerVariant"");
    return (FSList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((CandidateAnswerVariant_Type)jcasType).casFeatCode_occurrences)));}","['public', 'FSList', 'getOccurrences', '(', ')', '{', 'if', '(', 'CandidateAnswerVariant_Type', '.', 'featOkTst', '&&', '(', '(', 'CandidateAnswerVariant_Type', ')', 'jcasType', ')', '.', 'casFeat_occurrences', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""occurrences""', ',', '""edu.cmu.lti.oaqa.type.answer.CandidateAnswerVariant""', ')', ';', 'return', '(', 'FSList', ')', '(', 'jcasType', '.', 'll_cas', '.', 'll_getFSForRef', '(', 'jcasType', '.', 'll_cas', '.', 'll_getRefValue', '(', 'addr', ',', '(', '(', 'CandidateAnswerVariant_Type', ')', 'jcasType', ')', '.', 'casFeatCode_occurrences', ')', ')', ')', ';', '}']","getter for occurrences - gets The occurrences of this variant.
@generated
@return value of the feature","['getter', 'for', 'occurrences', '-', 'gets', 'The', 'occurrences', 'of', 'this', 'variant', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/answer/CandidateAnswerVariant.java#L76-L79,test
Microsoft/thrifty,thrifty-runtime/src/main/java/com/microsoft/thrifty/protocol/JsonProtocol.java,JsonProtocol.writeJsonInteger,"private void writeJsonInteger(long num) throws IOException {
        context.write();
        String str = Long.toString(num);
        boolean escapeNum = context.escapeNum();
        if (escapeNum) {
            transport.write(QUOTE);
        }
        try {
            byte[] buf = str.getBytes(""UTF-8"");
            transport.write(buf);
        } catch (UnsupportedEncodingException e) {
            throw new AssertionError(e);
        }
        if (escapeNum) {
            transport.write(QUOTE);
        }
    }",java,"private void writeJsonInteger(long num) throws IOException {
        context.write();
        String str = Long.toString(num);
        boolean escapeNum = context.escapeNum();
        if (escapeNum) {
            transport.write(QUOTE);
        }
        try {
            byte[] buf = str.getBytes(""UTF-8"");
            transport.write(buf);
        } catch (UnsupportedEncodingException e) {
            throw new AssertionError(e);
        }
        if (escapeNum) {
            transport.write(QUOTE);
        }
    }","['private', 'void', 'writeJsonInteger', '(', 'long', 'num', ')', 'throws', 'IOException', '{', 'context', '.', 'write', '(', ')', ';', 'String', 'str', '=', 'Long', '.', 'toString', '(', 'num', ')', ';', 'boolean', 'escapeNum', '=', 'context', '.', 'escapeNum', '(', ')', ';', 'if', '(', 'escapeNum', ')', '{', 'transport', '.', 'write', '(', 'QUOTE', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'buf', '=', 'str', '.', 'getBytes', '(', '""UTF-8""', ')', ';', 'transport', '.', 'write', '(', 'buf', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'AssertionError', '(', 'e', ')', ';', '}', 'if', '(', 'escapeNum', ')', '{', 'transport', '.', 'write', '(', 'QUOTE', ')', ';', '}', '}']",wrapped in quotes to output as a Json string.,"['wrapped', 'in', 'quotes', 'to', 'output', 'as', 'a', 'Json', 'string', '.']",d0d906d91636bde074d5facb331b4e9164b77af9,https://github.com/Microsoft/thrifty/blob/d0d906d91636bde074d5facb331b4e9164b77af9/thrifty-runtime/src/main/java/com/microsoft/thrifty/protocol/JsonProtocol.java#L207-L223,test
basis-technology-corp/tcl-regex-java,src/main/java/com/basistech/tclre/Nfa.java,Nfa.freestate,"void freestate(State s) {
        assert s != null;
        assert s.nins == 0;
        assert s.nouts == 0;
        if (s.next != null) {
            s.next.prev = s.prev;
        } else {
            assert s == slast;
            slast = s.prev;
        }
        if (s.prev != null) {
            s.prev.next = s.next;
        } else {
            assert s == states;
            states = s.next;
        }
    }",java,"void freestate(State s) {
        assert s != null;
        assert s.nins == 0;
        assert s.nouts == 0;
        if (s.next != null) {
            s.next.prev = s.prev;
        } else {
            assert s == slast;
            slast = s.prev;
        }
        if (s.prev != null) {
            s.prev.next = s.next;
        } else {
            assert s == states;
            states = s.next;
        }
    }","['void', 'freestate', '(', 'State', 's', ')', '{', 'assert', 's', '!=', 'null', ';', 'assert', 's', '.', 'nins', '==', '0', ';', 'assert', 's', '.', 'nouts', '==', '0', ';', 'if', '(', 's', '.', 'next', '!=', 'null', ')', '{', 's', '.', 'next', '.', 'prev', '=', 's', '.', 'prev', ';', '}', 'else', '{', 'assert', 's', '==', 'slast', ';', 'slast', '=', 's', '.', 'prev', ';', '}', 'if', '(', 's', '.', 'prev', '!=', 'null', ')', '{', 's', '.', 'prev', '.', 'next', '=', 's', '.', 'next', ';', '}', 'else', '{', 'assert', 's', '==', 'states', ';', 'states', '=', 's', '.', 'next', ';', '}', '}']","Unwire a state from the NFA.

@param s the state","['Unwire', 'a', 'state', 'from', 'the', 'NFA', '.']",de0d5eaccf9a61b694cb8793f234cc229c395b43,https://github.com/basis-technology-corp/tcl-regex-java/blob/de0d5eaccf9a61b694cb8793f234cc229c395b43/src/main/java/com/basistech/tclre/Nfa.java#L234-L250,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/Structure.java,Structure.calcElementSize,"public void calcElementSize() {
    int total = 0;
    for (Variable v : members) {
      total += v.getElementSize() * v.getSize();
    }
    elementSize = total;
  }",java,"public void calcElementSize() {
    int total = 0;
    for (Variable v : members) {
      total += v.getElementSize() * v.getSize();
    }
    elementSize = total;
  }","['public', 'void', 'calcElementSize', '(', ')', '{', 'int', 'total', '=', '0', ';', 'for', '(', 'Variable', 'v', ':', 'members', ')', '{', 'total', '+=', 'v', '.', 'getElementSize', '(', ')', '*', 'v', '.', 'getSize', '(', ')', ';', '}', 'elementSize', '=', 'total', ';', '}']","Force recalculation of size of one element of this structure - equals the sum of sizes of its members.
This is used only by low level classes like IOSPs.","['Force', 'recalculation', 'of', 'size', 'of', 'one', 'element', 'of', 'this', 'structure', '-', 'equals', 'the', 'sum', 'of', 'sizes', 'of', 'its', 'members', '.', 'This', 'is', 'used', 'only', 'by', 'low', 'level', 'classes', 'like', 'IOSPs', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/Structure.java#L311-L317,test
streamsets/datacollector,common/src/main/java/com/streamsets/pipeline/lib/parser/shaded/com/google/code/regexp/Pattern.java,Pattern.groupNames,"public List<String> groupNames() {
        if (groupNames == null) {
            groupNames = new ArrayList<String>(groupInfo.keySet());
        }
        return groupNames;
    }",java,"public List<String> groupNames() {
        if (groupNames == null) {
            groupNames = new ArrayList<String>(groupInfo.keySet());
        }
        return groupNames;
    }","['public', 'List', '<', 'String', '>', 'groupNames', '(', ')', '{', 'if', '(', 'groupNames', '==', 'null', ')', '{', 'groupNames', '=', 'new', 'ArrayList', '<', 'String', '>', '(', 'groupInfo', '.', 'keySet', '(', ')', ')', ';', '}', 'return', 'groupNames', ';', '}']","Gets the names of all capture groups

@return the list of names","['Gets', 'the', 'names', 'of', 'all', 'capture', 'groups']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/common/src/main/java/com/streamsets/pipeline/lib/parser/shaded/com/google/code/regexp/Pattern.java#L191-L196,test
PistoiaHELM/HELMNotationParser,src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java,HELM2Notation.getPolymerAndGroupingIDs,"@JsonIgnore
  public List<String> getPolymerAndGroupingIDs() {
    List<String> listOfIDs = new ArrayList<String>();
    for (PolymerNotation polymer : listOfPolymers) {
      listOfIDs.add(polymer.getPolymerID().getId());
    }

    for (GroupingNotation grouping : listOfGroupings) {
      listOfIDs.add(grouping.getGroupID().getId());
    }
    return listOfIDs;
  }",java,"@JsonIgnore
  public List<String> getPolymerAndGroupingIDs() {
    List<String> listOfIDs = new ArrayList<String>();
    for (PolymerNotation polymer : listOfPolymers) {
      listOfIDs.add(polymer.getPolymerID().getId());
    }

    for (GroupingNotation grouping : listOfGroupings) {
      listOfIDs.add(grouping.getGroupID().getId());
    }
    return listOfIDs;
  }","['@', 'JsonIgnore', 'public', 'List', '<', 'String', '>', 'getPolymerAndGroupingIDs', '(', ')', '{', 'List', '<', 'String', '>', 'listOfIDs', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'for', '(', 'PolymerNotation', 'polymer', ':', 'listOfPolymers', ')', '{', 'listOfIDs', '.', 'add', '(', 'polymer', '.', 'getPolymerID', '(', ')', '.', 'getId', '(', ')', ')', ';', '}', 'for', '(', 'GroupingNotation', 'grouping', ':', 'listOfGroupings', ')', '{', 'listOfIDs', '.', 'add', '(', 'grouping', '.', 'getGroupID', '(', ')', '.', 'getId', '(', ')', ')', ';', '}', 'return', 'listOfIDs', ';', '}']","method to get the ID's from all polymers and groups

@return List of all ids from all polymers and groups","['method', 'to', 'get', 'the', 'ID', 's', 'from', 'all', 'polymers', 'and', 'groups']",685d7ab7886e9b5cc15fb904025fe6eee703f8f6,https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java#L330-L341,test
deeplearning4j/nd4j,nd4j-common/src/main/java/org/nd4j/util/StringUtils.java,StringUtils.findNext,"public static int findNext(String str, char separator, char escapeChar,
                               int start, StringBuilder split) {
        int numPreEscapes = 0;
        for (int i = start; i < str.length(); i++) {
            char curChar = str.charAt(i);
            if (numPreEscapes == 0 && curChar == separator) { // separator
                return i;
            } else {
                split.append(curChar);
                numPreEscapes = (curChar == escapeChar)
                        ? (++numPreEscapes) % 2
                        : 0;
            }
        }
        return -1;
    }",java,"public static int findNext(String str, char separator, char escapeChar,
                               int start, StringBuilder split) {
        int numPreEscapes = 0;
        for (int i = start; i < str.length(); i++) {
            char curChar = str.charAt(i);
            if (numPreEscapes == 0 && curChar == separator) { // separator
                return i;
            } else {
                split.append(curChar);
                numPreEscapes = (curChar == escapeChar)
                        ? (++numPreEscapes) % 2
                        : 0;
            }
        }
        return -1;
    }","['public', 'static', 'int', 'findNext', '(', 'String', 'str', ',', 'char', 'separator', ',', 'char', 'escapeChar', ',', 'int', 'start', ',', 'StringBuilder', 'split', ')', '{', 'int', 'numPreEscapes', '=', '0', ';', 'for', '(', 'int', 'i', '=', 'start', ';', 'i', '<', 'str', '.', 'length', '(', ')', ';', 'i', '++', ')', '{', 'char', 'curChar', '=', 'str', '.', 'charAt', '(', 'i', ')', ';', 'if', '(', 'numPreEscapes', '==', '0', '&&', 'curChar', '==', 'separator', ')', '{', '// separator', 'return', 'i', ';', '}', 'else', '{', 'split', '.', 'append', '(', 'curChar', ')', ';', 'numPreEscapes', '=', '(', 'curChar', '==', 'escapeChar', ')', '?', '(', '++', 'numPreEscapes', ')', '%', '2', ':', '0', ';', '}', '}', 'return', '-', '1', ';', '}']","Finds the first occurrence of the separator character ignoring the escaped
separators starting from the index. Note the substring between the index
and the position of the separator is passed.
@param str the source string
@param separator the character to find
@param escapeChar character used to escape
@param start from where to search
@param split used to pass back the extracted string","['Finds', 'the', 'first', 'occurrence', 'of', 'the', 'separator', 'character', 'ignoring', 'the', 'escaped', 'separators', 'starting', 'from', 'the', 'index', '.', 'Note', 'the', 'substring', 'between', 'the', 'index', 'and', 'the', 'position', 'of', 'the', 'separator', 'is', 'passed', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-common/src/main/java/org/nd4j/util/StringUtils.java#L477-L492,test
real-logic/aeron,aeron-cluster/src/main/java/io/aeron/cluster/ClusterMember.java,ClusterMember.haveVotersReachedPosition,"public static boolean haveVotersReachedPosition(
        final ClusterMember[] clusterMembers, final long position, final long leadershipTermId)
    {
        for (final ClusterMember member : clusterMembers)
        {
            if (member.vote != null && (member.logPosition < position || member.leadershipTermId != leadershipTermId))
            {
                return false;
            }
        }

        return true;
    }",java,"public static boolean haveVotersReachedPosition(
        final ClusterMember[] clusterMembers, final long position, final long leadershipTermId)
    {
        for (final ClusterMember member : clusterMembers)
        {
            if (member.vote != null && (member.logPosition < position || member.leadershipTermId != leadershipTermId))
            {
                return false;
            }
        }

        return true;
    }","['public', 'static', 'boolean', 'haveVotersReachedPosition', '(', 'final', 'ClusterMember', '[', ']', 'clusterMembers', ',', 'final', 'long', 'position', ',', 'final', 'long', 'leadershipTermId', ')', '{', 'for', '(', 'final', 'ClusterMember', 'member', ':', 'clusterMembers', ')', '{', 'if', '(', 'member', '.', 'vote', '!=', 'null', '&&', '(', 'member', '.', 'logPosition', '<', 'position', '||', 'member', '.', 'leadershipTermId', '!=', 'leadershipTermId', ')', ')', '{', 'return', 'false', ';', '}', '}', 'return', 'true', ';', '}']","Has the members of the cluster the voted reached the provided position in their log.

@param clusterMembers   to check.
@param position         to compare the {@link #logPosition()} against.
@param leadershipTermId expected of the members.
@return true if all members have reached this position otherwise false.","['Has', 'the', 'members', 'of', 'the', 'cluster', 'the', 'voted', 'reached', 'the', 'provided', 'position', 'in', 'their', 'log', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-cluster/src/main/java/io/aeron/cluster/ClusterMember.java#L751-L763,test
alipay/sofa-bolt,src/main/java/com/alipay/remoting/rpc/RpcResponseResolver.java,RpcResponseResolver.detailErrMsg,"private static String detailErrMsg(String clientErrMsg, ResponseCommand responseCommand) {
        RpcResponseCommand resp = (RpcResponseCommand) responseCommand;
        if (StringUtils.isNotBlank(resp.getErrorMsg())) {
            return String.format(""%s, ServerErrorMsg:%s"", clientErrMsg, resp.getErrorMsg());
        } else {
            return String.format(""%s, ServerErrorMsg:null"", clientErrMsg);
        }
    }",java,"private static String detailErrMsg(String clientErrMsg, ResponseCommand responseCommand) {
        RpcResponseCommand resp = (RpcResponseCommand) responseCommand;
        if (StringUtils.isNotBlank(resp.getErrorMsg())) {
            return String.format(""%s, ServerErrorMsg:%s"", clientErrMsg, resp.getErrorMsg());
        } else {
            return String.format(""%s, ServerErrorMsg:null"", clientErrMsg);
        }
    }","['private', 'static', 'String', 'detailErrMsg', '(', 'String', 'clientErrMsg', ',', 'ResponseCommand', 'responseCommand', ')', '{', 'RpcResponseCommand', 'resp', '=', '(', 'RpcResponseCommand', ')', 'responseCommand', ';', 'if', '(', 'StringUtils', '.', 'isNotBlank', '(', 'resp', '.', 'getErrorMsg', '(', ')', ')', ')', '{', 'return', 'String', '.', 'format', '(', '""%s, ServerErrorMsg:%s""', ',', 'clientErrMsg', ',', 'resp', '.', 'getErrorMsg', '(', ')', ')', ';', '}', 'else', '{', 'return', 'String', '.', 'format', '(', '""%s, ServerErrorMsg:null""', ',', 'clientErrMsg', ')', ';', '}', '}']",Detail your error msg with the error msg returned from response command,"['Detail', 'your', 'error', 'msg', 'with', 'the', 'error', 'msg', 'returned', 'from', 'response', 'command']",0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046,https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/rpc/RpcResponseResolver.java#L163-L170,test
jboss/jboss-common-core,src/main/java/org/jboss/util/xml/catalog/Resolver.java,Resolver.resolveExternalSystem,"protected String resolveExternalSystem(String systemId, String resolver)
	throws MalformedURLException, IOException {
	Resolver r = queryResolver(resolver, ""i2l"", systemId, null);
	if (r != null) {
	    return r.resolveSystem(systemId);
	} else {
	    return null;
	}
    }",java,"protected String resolveExternalSystem(String systemId, String resolver)
	throws MalformedURLException, IOException {
	Resolver r = queryResolver(resolver, ""i2l"", systemId, null);
	if (r != null) {
	    return r.resolveSystem(systemId);
	} else {
	    return null;
	}
    }","['protected', 'String', 'resolveExternalSystem', '(', 'String', 'systemId', ',', 'String', 'resolver', ')', 'throws', 'MalformedURLException', ',', 'IOException', '{', 'Resolver', 'r', '=', 'queryResolver', '(', 'resolver', ',', '""i2l""', ',', 'systemId', ',', 'null', ')', ';', 'if', '(', 'r', '!=', 'null', ')', '{', 'return', 'r', '.', 'resolveSystem', '(', 'systemId', ')', ';', '}', 'else', '{', 'return', 'null', ';', '}', '}']","Query an external RFC2483 resolver for a system identifier.

@param systemId The system ID to locate.
@param resolver The name of the resolver to use.

@return The system identifier to use for the systemId.
@throws MalformedURLException
@throws IOException","['Query', 'an', 'external', 'RFC2483', 'resolver', 'for', 'a', 'system', 'identifier', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/Resolver.java#L322-L330,test
oblac/jodd,jodd-petite/src/main/java/jodd/petite/PetiteBeans.java,PetiteBeans.forEachBeanType,"public void forEachBeanType(final Class type, final Consumer<String> beanNameConsumer) {
		forEachBean(bd -> {
			if (ClassUtil.isTypeOf(bd.type, type)) {
				beanNameConsumer.accept(bd.name);
			}
		});
	}",java,"public void forEachBeanType(final Class type, final Consumer<String> beanNameConsumer) {
		forEachBean(bd -> {
			if (ClassUtil.isTypeOf(bd.type, type)) {
				beanNameConsumer.accept(bd.name);
			}
		});
	}","['public', 'void', 'forEachBeanType', '(', 'final', 'Class', 'type', ',', 'final', 'Consumer', '<', 'String', '>', 'beanNameConsumer', ')', '{', 'forEachBean', '(', 'bd', '->', '{', 'if', '(', 'ClassUtil', '.', 'isTypeOf', '(', 'bd', '.', 'type', ',', 'type', ')', ')', '{', 'beanNameConsumer', '.', 'accept', '(', 'bd', '.', 'name', ')', ';', '}', '}', ')', ';', '}']",Iterates all beans that are of given type.,"['Iterates', 'all', 'beans', 'that', 'are', 'of', 'given', 'type', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-petite/src/main/java/jodd/petite/PetiteBeans.java#L792-L798,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/RTreeIndexTableDao.java,RTreeIndexTableDao.query,"public UserCustomCursor query(BoundingBox boundingBox,
                                  Projection projection) {
        BoundingBox featureBoundingBox = projectBoundingBox(boundingBox,
                projection);
        return query(featureBoundingBox);
    }",java,"public UserCustomCursor query(BoundingBox boundingBox,
                                  Projection projection) {
        BoundingBox featureBoundingBox = projectBoundingBox(boundingBox,
                projection);
        return query(featureBoundingBox);
    }","['public', 'UserCustomCursor', 'query', '(', 'BoundingBox', 'boundingBox', ',', 'Projection', 'projection', ')', '{', 'BoundingBox', 'featureBoundingBox', '=', 'projectBoundingBox', '(', 'boundingBox', ',', 'projection', ')', ';', 'return', 'query', '(', 'featureBoundingBox', ')', ';', '}']","Query for rows within the bounding box in the provided projection

@param boundingBox bounding box
@param projection  projection
@return cursor results","['Query', 'for', 'rows', 'within', 'the', 'bounding', 'box', 'in', 'the', 'provided', 'projection']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/RTreeIndexTableDao.java#L338-L343,test
oblac/jodd,jodd-json/src/main/java/jodd/json/JsonArray.java,JsonArray.addAll,"public JsonArray addAll(final JsonArray array) {
		Objects.requireNonNull(array);
		list.addAll(array.list);
		return this;
	}",java,"public JsonArray addAll(final JsonArray array) {
		Objects.requireNonNull(array);
		list.addAll(array.list);
		return this;
	}","['public', 'JsonArray', 'addAll', '(', 'final', 'JsonArray', 'array', ')', '{', 'Objects', '.', 'requireNonNull', '(', 'array', ')', ';', 'list', '.', 'addAll', '(', 'array', '.', 'list', ')', ';', 'return', 'this', ';', '}']",Appends all of the elements in the specified array to the end of this JSON array.,"['Appends', 'all', 'of', 'the', 'elements', 'in', 'the', 'specified', 'array', 'to', 'the', 'end', 'of', 'this', 'JSON', 'array', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-json/src/main/java/jodd/json/JsonArray.java#L316-L320,test
leanix/leanix-sdk-java,src/main/java/net/leanix/api/FactSheetsApi.java,FactSheetsApi.getFactSheets,"public FactSheetListResponse getFactSheets(String type, String relationTypes, Integer pageSize, String cursor, Boolean permissions) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = ""/factSheets"".replaceAll(""\\{format\\}"",""json"");

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""type"", type));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""relationTypes"", relationTypes));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""pageSize"", pageSize));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""cursor"", cursor));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""permissions"", permissions));

    
    
    final String[] localVarAccepts = {
      ""application/json""
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      ""application/json""
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { ""token"" };

    GenericType<FactSheetListResponse> localVarReturnType = new GenericType<FactSheetListResponse>() {};
    return apiClient.invokeAPI(localVarPath, ""GET"", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }",java,"public FactSheetListResponse getFactSheets(String type, String relationTypes, Integer pageSize, String cursor, Boolean permissions) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = ""/factSheets"".replaceAll(""\\{format\\}"",""json"");

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""type"", type));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""relationTypes"", relationTypes));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""pageSize"", pageSize));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""cursor"", cursor));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""permissions"", permissions));

    
    
    final String[] localVarAccepts = {
      ""application/json""
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      ""application/json""
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { ""token"" };

    GenericType<FactSheetListResponse> localVarReturnType = new GenericType<FactSheetListResponse>() {};
    return apiClient.invokeAPI(localVarPath, ""GET"", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }","['public', 'FactSheetListResponse', 'getFactSheets', '(', 'String', 'type', ',', 'String', 'relationTypes', ',', 'Integer', 'pageSize', ',', 'String', 'cursor', ',', 'Boolean', 'permissions', ')', 'throws', 'ApiException', '{', 'Object', 'localVarPostBody', '=', 'null', ';', '// create path and map variables', 'String', 'localVarPath', '=', '""/factSheets""', '.', 'replaceAll', '(', '""\\\\{format\\\\}""', ',', '""json""', ')', ';', '// query params', 'List', '<', 'Pair', '>', 'localVarQueryParams', '=', 'new', 'ArrayList', '<', 'Pair', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'String', '>', 'localVarHeaderParams', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'Object', '>', 'localVarFormParams', '=', 'new', 'HashMap', '<', 'String', ',', 'Object', '>', '(', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""type""', ',', 'type', ')', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""relationTypes""', ',', 'relationTypes', ')', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""pageSize""', ',', 'pageSize', ')', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""cursor""', ',', 'cursor', ')', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""permissions""', ',', 'permissions', ')', ')', ';', 'final', 'String', '[', ']', 'localVarAccepts', '=', '{', '""application/json""', '}', ';', 'final', 'String', 'localVarAccept', '=', 'apiClient', '.', 'selectHeaderAccept', '(', 'localVarAccepts', ')', ';', 'final', 'String', '[', ']', 'localVarContentTypes', '=', '{', '""application/json""', '}', ';', 'final', 'String', 'localVarContentType', '=', 'apiClient', '.', 'selectHeaderContentType', '(', 'localVarContentTypes', ')', ';', 'String', '[', ']', 'localVarAuthNames', '=', 'new', 'String', '[', ']', '{', '""token""', '}', ';', 'GenericType', '<', 'FactSheetListResponse', '>', 'localVarReturnType', '=', 'new', 'GenericType', '<', 'FactSheetListResponse', '>', '(', ')', '{', '}', ';', 'return', 'apiClient', '.', 'invokeAPI', '(', 'localVarPath', ',', '""GET""', ',', 'localVarQueryParams', ',', 'localVarPostBody', ',', 'localVarHeaderParams', ',', 'localVarFormParams', ',', 'localVarAccept', ',', 'localVarContentType', ',', 'localVarAuthNames', ',', 'localVarReturnType', ')', ';', '}']","getFactSheets
Retrieves all Fact Sheets
@param type Only list Fact Sheets with this type (optional)
@param relationTypes Comma separated list of relation types to show on the Fact Sheets (optional)
@param pageSize Number of Fact Sheets to return, maximum is 100 (optional, default to 40)
@param cursor Marks the position of the first element that should be returned (optional)
@param permissions Show a permission field for the Fact Sheet (optional, default to false)
@return FactSheetListResponse
@throws ApiException if fails to make API call","['getFactSheets', 'Retrieves', 'all', 'Fact', 'Sheets']",9516ac593d6a8f73baccc516a45877b4e5920c47,https://github.com/leanix/leanix-sdk-java/blob/9516ac593d6a8f73baccc516a45877b4e5920c47/src/main/java/net/leanix/api/FactSheetsApi.java#L326-L359,test
RestComm/jain-slee,container/common/src/main/java/org/mobicents/slee/runtime/facilities/ActivityContextNamingFacilityCacheData.java,ActivityContextNamingFacilityCacheData.lookupName,"public Object lookupName(String name) {
		final Node childNode = getNode().getChild(name);
		if (childNode == null) {
			return null;
		} else {
			return childNode.get(CACHE_NODE_MAP_KEY);
		}
	}",java,"public Object lookupName(String name) {
		final Node childNode = getNode().getChild(name);
		if (childNode == null) {
			return null;
		} else {
			return childNode.get(CACHE_NODE_MAP_KEY);
		}
	}","['public', 'Object', 'lookupName', '(', 'String', 'name', ')', '{', 'final', 'Node', 'childNode', '=', 'getNode', '(', ')', '.', 'getChild', '(', 'name', ')', ';', 'if', '(', 'childNode', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'else', '{', 'return', 'childNode', '.', 'get', '(', 'CACHE_NODE_MAP_KEY', ')', ';', '}', '}']","Lookup of the activity context id bound to the specified aci name
@param name
@return","['Lookup', 'of', 'the', 'activity', 'context', 'id', 'bound', 'to', 'the', 'specified', 'aci', 'name']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/runtime/facilities/ActivityContextNamingFacilityCacheData.java#L101-L108,test
OpenEstate/OpenEstate-IO,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/BefeuerungsArtTyp.java,BefeuerungsArtTyp.setErdwaerme,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setErdwaerme(JAXBElement<Object> value) {
        this.erdwaerme = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setErdwaerme(JAXBElement<Object> value) {
        this.erdwaerme = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:52:47+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setErdwaerme', '(', 'JAXBElement', '<', 'Object', '>', 'value', ')', '{', 'this', '.', 'erdwaerme', '=', 'value', ';', '}']","Sets the value of the erdwaerme property.

@param value
allowed object is
{@link JAXBElement }{@code <}{@link Object }{@code >}","['Sets', 'the', 'value', 'of', 'the', 'erdwaerme', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/BefeuerungsArtTyp.java#L134-L137,test
dschulten/hydra-java,hydra-jsonld/src/main/java/de/escalon/hypermedia/hydra/serialize/LdContextFactory.java,LdContextFactory.getVocab,"public String getVocab(MixinSource mixinSource, Object bean, Class<?> mixInClass) {
        if (proxyUnwrapper != null) {
            bean = proxyUnwrapper.unwrapProxy(bean);
        }

        // determine vocab in context
        String classVocab = bean == null ? null : vocabFromClassOrPackage(bean.getClass());

        final Vocab mixinVocab = findAnnotation(mixInClass, Vocab.class);

        Object nestedContextProviderFromMixin = getNestedContextProviderFromMixin(mixinSource, bean, mixInClass);
        String contextProviderVocab = null;
        if (nestedContextProviderFromMixin != null) {
            contextProviderVocab = getVocab(mixinSource, nestedContextProviderFromMixin, null);
        }

        String vocab;
        if (mixinVocab != null) {
            vocab = mixinVocab.value(); // wins over class
        } else if (classVocab != null) {
            vocab = classVocab; // wins over context provider
        } else if (contextProviderVocab != null) {
            vocab = contextProviderVocab; // wins over last resort
        } else {
            vocab = HTTP_SCHEMA_ORG;
        }
        return vocab;
    }",java,"public String getVocab(MixinSource mixinSource, Object bean, Class<?> mixInClass) {
        if (proxyUnwrapper != null) {
            bean = proxyUnwrapper.unwrapProxy(bean);
        }

        // determine vocab in context
        String classVocab = bean == null ? null : vocabFromClassOrPackage(bean.getClass());

        final Vocab mixinVocab = findAnnotation(mixInClass, Vocab.class);

        Object nestedContextProviderFromMixin = getNestedContextProviderFromMixin(mixinSource, bean, mixInClass);
        String contextProviderVocab = null;
        if (nestedContextProviderFromMixin != null) {
            contextProviderVocab = getVocab(mixinSource, nestedContextProviderFromMixin, null);
        }

        String vocab;
        if (mixinVocab != null) {
            vocab = mixinVocab.value(); // wins over class
        } else if (classVocab != null) {
            vocab = classVocab; // wins over context provider
        } else if (contextProviderVocab != null) {
            vocab = contextProviderVocab; // wins over last resort
        } else {
            vocab = HTTP_SCHEMA_ORG;
        }
        return vocab;
    }","['public', 'String', 'getVocab', '(', 'MixinSource', 'mixinSource', ',', 'Object', 'bean', ',', 'Class', '<', '?', '>', 'mixInClass', ')', '{', 'if', '(', 'proxyUnwrapper', '!=', 'null', ')', '{', 'bean', '=', 'proxyUnwrapper', '.', 'unwrapProxy', '(', 'bean', ')', ';', '}', '// determine vocab in context', 'String', 'classVocab', '=', 'bean', '==', 'null', '?', 'null', ':', 'vocabFromClassOrPackage', '(', 'bean', '.', 'getClass', '(', ')', ')', ';', 'final', 'Vocab', 'mixinVocab', '=', 'findAnnotation', '(', 'mixInClass', ',', 'Vocab', '.', 'class', ')', ';', 'Object', 'nestedContextProviderFromMixin', '=', 'getNestedContextProviderFromMixin', '(', 'mixinSource', ',', 'bean', ',', 'mixInClass', ')', ';', 'String', 'contextProviderVocab', '=', 'null', ';', 'if', '(', 'nestedContextProviderFromMixin', '!=', 'null', ')', '{', 'contextProviderVocab', '=', 'getVocab', '(', 'mixinSource', ',', 'nestedContextProviderFromMixin', ',', 'null', ')', ';', '}', 'String', 'vocab', ';', 'if', '(', 'mixinVocab', '!=', 'null', ')', '{', 'vocab', '=', 'mixinVocab', '.', 'value', '(', ')', ';', '// wins over class', '}', 'else', 'if', '(', 'classVocab', '!=', 'null', ')', '{', 'vocab', '=', 'classVocab', ';', '// wins over context provider', '}', 'else', 'if', '(', 'contextProviderVocab', '!=', 'null', ')', '{', 'vocab', '=', 'contextProviderVocab', ';', '// wins over last resort', '}', 'else', '{', 'vocab', '=', 'HTTP_SCHEMA_ORG', ';', '}', 'return', 'vocab', ';', '}']","Gets vocab for given bean.

@param bean
to inspect for vocab
@param mixInClass
for bean which might define a vocab or has a context provider
@return explicitly defined vocab or http://schema.org","['Gets', 'vocab', 'for', 'given', 'bean', '.']",21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a,https://github.com/dschulten/hydra-java/blob/21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a/hydra-jsonld/src/main/java/de/escalon/hypermedia/hydra/serialize/LdContextFactory.java#L40-L67,test
fabric8io/fabric8-maven-plugin,enricher/deprecated/src/main/java/io/fabric8/maven/enricher/deprecated/IconEnricher.java,IconEnricher.getDefaultIconRef,"private String getDefaultIconRef() {
        ProjectClassLoaders cls = getContext().getProjectClassLoaders();
        if (cls.isClassInCompileClasspath(false, ""io.fabric8.funktion.runtime.Main"") ||
            getContext().hasDependency( ""io.fabric8.funktion"", null)) {
            return ""funktion"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.apache.camel.CamelContext"")) {
            return ""camel"";
        }
        if (getContext().hasPlugin(null, SpringBootConfigurationHelper.SPRING_BOOT_MAVEN_PLUGIN_ARTIFACT_ID)  ||
            cls.isClassInCompileClasspath(false, ""org.springframework.boot.SpringApplication"")) {
            return ""spring-boot"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.springframework.core.Constants"")) {
            return ""spring"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.vertx.java.core.Handler"", ""io.vertx.core.Handler"")) {
            return ""vertx"";
        }

        if (getContext().hasPlugin(""org.wildfly.swarm"", ""wildfly-swarm-plugin"") ||
            getContext().hasDependency( ""org.wildfly.swarm"", null)) {
            return ""wildfly-swarm"";
        }
        if (getContext().hasPlugin( ""io.thorntail"", ""thorntail-maven-plugin"") ||
            getContext().hasDependency( ""io.thorntail"", null)) {
            // use the WildFly Swarm icon until there's a dedicated Thorntail icon
            // Thorntail is a new name of WildFly Swarm
            return ""wildfly-swarm"";
        }

        return null;
    }",java,"private String getDefaultIconRef() {
        ProjectClassLoaders cls = getContext().getProjectClassLoaders();
        if (cls.isClassInCompileClasspath(false, ""io.fabric8.funktion.runtime.Main"") ||
            getContext().hasDependency( ""io.fabric8.funktion"", null)) {
            return ""funktion"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.apache.camel.CamelContext"")) {
            return ""camel"";
        }
        if (getContext().hasPlugin(null, SpringBootConfigurationHelper.SPRING_BOOT_MAVEN_PLUGIN_ARTIFACT_ID)  ||
            cls.isClassInCompileClasspath(false, ""org.springframework.boot.SpringApplication"")) {
            return ""spring-boot"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.springframework.core.Constants"")) {
            return ""spring"";
        }
        if (cls.isClassInCompileClasspath(false, ""org.vertx.java.core.Handler"", ""io.vertx.core.Handler"")) {
            return ""vertx"";
        }

        if (getContext().hasPlugin(""org.wildfly.swarm"", ""wildfly-swarm-plugin"") ||
            getContext().hasDependency( ""org.wildfly.swarm"", null)) {
            return ""wildfly-swarm"";
        }
        if (getContext().hasPlugin( ""io.thorntail"", ""thorntail-maven-plugin"") ||
            getContext().hasDependency( ""io.thorntail"", null)) {
            // use the WildFly Swarm icon until there's a dedicated Thorntail icon
            // Thorntail is a new name of WildFly Swarm
            return ""wildfly-swarm"";
        }

        return null;
    }","['private', 'String', 'getDefaultIconRef', '(', ')', '{', 'ProjectClassLoaders', 'cls', '=', 'getContext', '(', ')', '.', 'getProjectClassLoaders', '(', ')', ';', 'if', '(', 'cls', '.', 'isClassInCompileClasspath', '(', 'false', ',', '""io.fabric8.funktion.runtime.Main""', ')', '||', 'getContext', '(', ')', '.', 'hasDependency', '(', '""io.fabric8.funktion""', ',', 'null', ')', ')', '{', 'return', '""funktion""', ';', '}', 'if', '(', 'cls', '.', 'isClassInCompileClasspath', '(', 'false', ',', '""org.apache.camel.CamelContext""', ')', ')', '{', 'return', '""camel""', ';', '}', 'if', '(', 'getContext', '(', ')', '.', 'hasPlugin', '(', 'null', ',', 'SpringBootConfigurationHelper', '.', 'SPRING_BOOT_MAVEN_PLUGIN_ARTIFACT_ID', ')', '||', 'cls', '.', 'isClassInCompileClasspath', '(', 'false', ',', '""org.springframework.boot.SpringApplication""', ')', ')', '{', 'return', '""spring-boot""', ';', '}', 'if', '(', 'cls', '.', 'isClassInCompileClasspath', '(', 'false', ',', '""org.springframework.core.Constants""', ')', ')', '{', 'return', '""spring""', ';', '}', 'if', '(', 'cls', '.', 'isClassInCompileClasspath', '(', 'false', ',', '""org.vertx.java.core.Handler""', ',', '""io.vertx.core.Handler""', ')', ')', '{', 'return', '""vertx""', ';', '}', 'if', '(', 'getContext', '(', ')', '.', 'hasPlugin', '(', '""org.wildfly.swarm""', ',', '""wildfly-swarm-plugin""', ')', '||', 'getContext', '(', ')', '.', 'hasDependency', '(', '""org.wildfly.swarm""', ',', 'null', ')', ')', '{', 'return', '""wildfly-swarm""', ';', '}', 'if', '(', 'getContext', '(', ')', '.', 'hasPlugin', '(', '""io.thorntail""', ',', '""thorntail-maven-plugin""', ')', '||', 'getContext', '(', ')', '.', 'hasDependency', '(', '""io.thorntail""', ',', 'null', ')', ')', '{', ""// use the WildFly Swarm icon until there's a dedicated Thorntail icon"", '// Thorntail is a new name of WildFly Swarm', 'return', '""wildfly-swarm""', ';', '}', 'return', 'null', ';', '}']","Lets use the project and its classpath to try figure out what default icon to use

@return the icon ref if we can detect one or return null","['Lets', 'use', 'the', 'project', 'and', 'its', 'classpath', 'to', 'try', 'figure', 'out', 'what', 'default', 'icon', 'to', 'use']",b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3,https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/enricher/deprecated/src/main/java/io/fabric8/maven/enricher/deprecated/IconEnricher.java#L212-L244,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/ConditionTerm.java,ConditionTerm.addConditionFactor,"public void addConditionFactor(ConditionFactor factor) throws WebDAVException {
        if (conditionFactors.contains(factor))
            throw new WebDAVException(IResponse.SC_BAD_REQUEST, Policy.bind(""error.parseDuplicateEntry"")); //$NON-NLS-1$
        conditionFactors.addElement(factor);
    }",java,"public void addConditionFactor(ConditionFactor factor) throws WebDAVException {
        if (conditionFactors.contains(factor))
            throw new WebDAVException(IResponse.SC_BAD_REQUEST, Policy.bind(""error.parseDuplicateEntry"")); //$NON-NLS-1$
        conditionFactors.addElement(factor);
    }","['public', 'void', 'addConditionFactor', '(', 'ConditionFactor', 'factor', ')', 'throws', 'WebDAVException', '{', 'if', '(', 'conditionFactors', '.', 'contains', '(', 'factor', ')', ')', 'throw', 'new', 'WebDAVException', '(', 'IResponse', '.', 'SC_BAD_REQUEST', ',', 'Policy', '.', 'bind', '(', '""error.parseDuplicateEntry""', ')', ')', ';', '//$NON-NLS-1$', 'conditionFactors', '.', 'addElement', '(', 'factor', ')', ';', '}']","Add a ConditionFactor to a ConditionTerm.

@param factor the factor to add
@exception WebDAVException thrown if the term already contains the factor","['Add', 'a', 'ConditionFactor', 'to', 'a', 'ConditionTerm', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/ConditionTerm.java#L48-L52,test
eclipse/packagedrone,bundles/org.eclipse.packagedrone.utils/src/org/eclipse/packagedrone/utils/io/OutputSpooler.java,OutputSpooler.getSize,"public long getSize ( final String fileName )
    {
        final Long result = this.sizes.get ( fileName );

        if ( result == null )
        {
            throw new IllegalStateException ( String.format ( ""Stream '%s' not closed or was not added"", fileName ) );
        }

        return result;
    }",java,"public long getSize ( final String fileName )
    {
        final Long result = this.sizes.get ( fileName );

        if ( result == null )
        {
            throw new IllegalStateException ( String.format ( ""Stream '%s' not closed or was not added"", fileName ) );
        }

        return result;
    }","['public', 'long', 'getSize', '(', 'final', 'String', 'fileName', ')', '{', 'final', 'Long', 'result', '=', 'this', '.', 'sizes', '.', 'get', '(', 'fileName', ')', ';', 'if', '(', 'result', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'String', '.', 'format', '(', '""Stream \'%s\' not closed or was not added""', ',', 'fileName', ')', ')', ';', '}', 'return', 'result', ';', '}']","Get the size of a closed file

@param fileName
the file name to get the size for
@return the size
@throws IllegalStateException
If the file is still open or was never opened","['Get', 'the', 'size', 'of', 'a', 'closed', 'file']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.eclipse.packagedrone.utils/src/org/eclipse/packagedrone/utils/io/OutputSpooler.java#L329-L339,test
wavesplatform/WavesJ,src/main/java/com/wavesplatform/wavesj/Node.java,Node.getAddressTransactions,"public List<Transaction> getAddressTransactions(String address, int limit) throws IOException {
        return getAddressTransactions(address, limit, null);
    }",java,"public List<Transaction> getAddressTransactions(String address, int limit) throws IOException {
        return getAddressTransactions(address, limit, null);
    }","['public', 'List', '<', 'Transaction', '>', 'getAddressTransactions', '(', 'String', 'address', ',', 'int', 'limit', ')', 'throws', 'IOException', '{', 'return', 'getAddressTransactions', '(', 'address', ',', 'limit', ',', 'null', ')', ';', '}']","Returns transactions by address with limit.
@param address address
@param limit transactions limit
@return list of transactions
@throws IOException if something going wrong","['Returns', 'transactions', 'by', 'address', 'with', 'limit', '.']",ae13a61c4e780b608c30a86e45c9a811549e11dd,https://github.com/wavesplatform/WavesJ/blob/ae13a61c4e780b608c30a86e45c9a811549e11dd/src/main/java/com/wavesplatform/wavesj/Node.java#L179-L181,test
RestComm/jain-slee,container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java,ClassUtils.checkInterfaces,"public static Class checkInterfaces(Class classOrInterfaceWithInterfaces, String interfaceSearched) {
		Class returnValue = null;

		if (classOrInterfaceWithInterfaces.getName().compareTo(interfaceSearched) == 0) {
			return classOrInterfaceWithInterfaces;

		}
		// we do check only on get interfaces
		for (Class iface : classOrInterfaceWithInterfaces.getInterfaces()) {
			if (iface.getName().compareTo(interfaceSearched) == 0) {
				returnValue = iface;

			} else {
				returnValue = checkInterfaces(iface, interfaceSearched);
			}

			if (returnValue != null)
				break;
		}

		if (!classOrInterfaceWithInterfaces.isInterface() && returnValue == null) {
			Class superClass = classOrInterfaceWithInterfaces.getSuperclass();
			if (superClass != null) {
				returnValue = checkInterfaces(superClass, interfaceSearched);
			}
		}

		return returnValue;
	}",java,"public static Class checkInterfaces(Class classOrInterfaceWithInterfaces, String interfaceSearched) {
		Class returnValue = null;

		if (classOrInterfaceWithInterfaces.getName().compareTo(interfaceSearched) == 0) {
			return classOrInterfaceWithInterfaces;

		}
		// we do check only on get interfaces
		for (Class iface : classOrInterfaceWithInterfaces.getInterfaces()) {
			if (iface.getName().compareTo(interfaceSearched) == 0) {
				returnValue = iface;

			} else {
				returnValue = checkInterfaces(iface, interfaceSearched);
			}

			if (returnValue != null)
				break;
		}

		if (!classOrInterfaceWithInterfaces.isInterface() && returnValue == null) {
			Class superClass = classOrInterfaceWithInterfaces.getSuperclass();
			if (superClass != null) {
				returnValue = checkInterfaces(superClass, interfaceSearched);
			}
		}

		return returnValue;
	}","['public', 'static', 'Class', 'checkInterfaces', '(', 'Class', 'classOrInterfaceWithInterfaces', ',', 'String', 'interfaceSearched', ')', '{', 'Class', 'returnValue', '=', 'null', ';', 'if', '(', 'classOrInterfaceWithInterfaces', '.', 'getName', '(', ')', '.', 'compareTo', '(', 'interfaceSearched', ')', '==', '0', ')', '{', 'return', 'classOrInterfaceWithInterfaces', ';', '}', '// we do check only on get interfaces', 'for', '(', 'Class', 'iface', ':', 'classOrInterfaceWithInterfaces', '.', 'getInterfaces', '(', ')', ')', '{', 'if', '(', 'iface', '.', 'getName', '(', ')', '.', 'compareTo', '(', 'interfaceSearched', ')', '==', '0', ')', '{', 'returnValue', '=', 'iface', ';', '}', 'else', '{', 'returnValue', '=', 'checkInterfaces', '(', 'iface', ',', 'interfaceSearched', ')', ';', '}', 'if', '(', 'returnValue', '!=', 'null', ')', 'break', ';', '}', 'if', '(', '!', 'classOrInterfaceWithInterfaces', '.', 'isInterface', '(', ')', '&&', 'returnValue', '==', 'null', ')', '{', 'Class', 'superClass', '=', 'classOrInterfaceWithInterfaces', '.', 'getSuperclass', '(', ')', ';', 'if', '(', 'superClass', '!=', 'null', ')', '{', 'returnValue', '=', 'checkInterfaces', '(', 'superClass', ',', 'interfaceSearched', ')', ';', '}', '}', 'return', 'returnValue', ';', '}']","Searches for provided interface in passed Class object - it can be class
or interface. If it finds, it return instance of it.

@param classOrInterfaceWithInterfaces
@param interfaceSearched
@return","['Searches', 'for', 'provided', 'interface', 'in', 'passed', 'Class', 'object', '-', 'it', 'can', 'be', 'class', 'or', 'interface', '.', 'If', 'it', 'finds', 'it', 'return', 'instance', 'of', 'it', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java#L70-L98,test
wildfly/wildfly,jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitParseProcessor.java,PersistenceUnitParseProcessor.postParseSteps,"private void postParseSteps(
        final VirtualFile persistence_xml,
        final PersistenceUnitMetadataHolder puHolder,
        final DeploymentUnit deploymentUnit ) {

        for (PersistenceUnitMetadata pu : puHolder.getPersistenceUnits()) {
            // set URLs
            List<URL> jarfilesUrls = new ArrayList<URL>();
            if (pu.getJarFiles() != null) {
                for (String jar : pu.getJarFiles()) {
                    jarfilesUrls.add(getRelativeURL(persistence_xml, jar));
                }
            }
            pu.setJarFileUrls(jarfilesUrls);
            URL url = getPersistenceUnitURL(persistence_xml);
            pu.setPersistenceUnitRootUrl(url);
            String scopedPersistenceUnitName;

            /**
             * WFLY-5478 allow custom scoped persistence unit name hint in persistence unit definition.
             * Specified scoped persistence unit name needs to be unique across application server deployments.
             * Application is responsible for picking a unique name.
             * Currently, a non-unique name will result in a DuplicateServiceException deployment failure:
             *   org.jboss.msc.service.DuplicateServiceException: Service jboss.persistenceunit.my2lccustom#test_pu.__FIRST_PHASE__ is already registered
             */
            scopedPersistenceUnitName = Configuration.getScopedPersistenceUnitName(pu);
            if (scopedPersistenceUnitName == null) {
                scopedPersistenceUnitName = createBeanName(deploymentUnit, pu.getPersistenceUnitName());
            } else {
                ROOT_LOGGER.tracef(""persistence unit '%s' specified a custom scoped persistence unit name hint "" +
                        ""(jboss.as.jpa.scopedname=%s).  The specified name *must* be unique across all application server deployments."",
                        pu.getPersistenceUnitName(),
                        scopedPersistenceUnitName);
                if (scopedPersistenceUnitName.indexOf('/') != -1) {
                    throw JpaLogger.ROOT_LOGGER.invalidScopedName(scopedPersistenceUnitName, '/');
                }
            }

            pu.setScopedPersistenceUnitName(scopedPersistenceUnitName);
        }
    }",java,"private void postParseSteps(
        final VirtualFile persistence_xml,
        final PersistenceUnitMetadataHolder puHolder,
        final DeploymentUnit deploymentUnit ) {

        for (PersistenceUnitMetadata pu : puHolder.getPersistenceUnits()) {
            // set URLs
            List<URL> jarfilesUrls = new ArrayList<URL>();
            if (pu.getJarFiles() != null) {
                for (String jar : pu.getJarFiles()) {
                    jarfilesUrls.add(getRelativeURL(persistence_xml, jar));
                }
            }
            pu.setJarFileUrls(jarfilesUrls);
            URL url = getPersistenceUnitURL(persistence_xml);
            pu.setPersistenceUnitRootUrl(url);
            String scopedPersistenceUnitName;

            /**
             * WFLY-5478 allow custom scoped persistence unit name hint in persistence unit definition.
             * Specified scoped persistence unit name needs to be unique across application server deployments.
             * Application is responsible for picking a unique name.
             * Currently, a non-unique name will result in a DuplicateServiceException deployment failure:
             *   org.jboss.msc.service.DuplicateServiceException: Service jboss.persistenceunit.my2lccustom#test_pu.__FIRST_PHASE__ is already registered
             */
            scopedPersistenceUnitName = Configuration.getScopedPersistenceUnitName(pu);
            if (scopedPersistenceUnitName == null) {
                scopedPersistenceUnitName = createBeanName(deploymentUnit, pu.getPersistenceUnitName());
            } else {
                ROOT_LOGGER.tracef(""persistence unit '%s' specified a custom scoped persistence unit name hint "" +
                        ""(jboss.as.jpa.scopedname=%s).  The specified name *must* be unique across all application server deployments."",
                        pu.getPersistenceUnitName(),
                        scopedPersistenceUnitName);
                if (scopedPersistenceUnitName.indexOf('/') != -1) {
                    throw JpaLogger.ROOT_LOGGER.invalidScopedName(scopedPersistenceUnitName, '/');
                }
            }

            pu.setScopedPersistenceUnitName(scopedPersistenceUnitName);
        }
    }","['private', 'void', 'postParseSteps', '(', 'final', 'VirtualFile', 'persistence_xml', ',', 'final', 'PersistenceUnitMetadataHolder', 'puHolder', ',', 'final', 'DeploymentUnit', 'deploymentUnit', ')', '{', 'for', '(', 'PersistenceUnitMetadata', 'pu', ':', 'puHolder', '.', 'getPersistenceUnits', '(', ')', ')', '{', '// set URLs', 'List', '<', 'URL', '>', 'jarfilesUrls', '=', 'new', 'ArrayList', '<', 'URL', '>', '(', ')', ';', 'if', '(', 'pu', '.', 'getJarFiles', '(', ')', '!=', 'null', ')', '{', 'for', '(', 'String', 'jar', ':', 'pu', '.', 'getJarFiles', '(', ')', ')', '{', 'jarfilesUrls', '.', 'add', '(', 'getRelativeURL', '(', 'persistence_xml', ',', 'jar', ')', ')', ';', '}', '}', 'pu', '.', 'setJarFileUrls', '(', 'jarfilesUrls', ')', ';', 'URL', 'url', '=', 'getPersistenceUnitURL', '(', 'persistence_xml', ')', ';', 'pu', '.', 'setPersistenceUnitRootUrl', '(', 'url', ')', ';', 'String', 'scopedPersistenceUnitName', ';', '/**\n             * WFLY-5478 allow custom scoped persistence unit name hint in persistence unit definition.\n             * Specified scoped persistence unit name needs to be unique across application server deployments.\n             * Application is responsible for picking a unique name.\n             * Currently, a non-unique name will result in a DuplicateServiceException deployment failure:\n             *   org.jboss.msc.service.DuplicateServiceException: Service jboss.persistenceunit.my2lccustom#test_pu.__FIRST_PHASE__ is already registered\n             */', 'scopedPersistenceUnitName', '=', 'Configuration', '.', 'getScopedPersistenceUnitName', '(', 'pu', ')', ';', 'if', '(', 'scopedPersistenceUnitName', '==', 'null', ')', '{', 'scopedPersistenceUnitName', '=', 'createBeanName', '(', 'deploymentUnit', ',', 'pu', '.', 'getPersistenceUnitName', '(', ')', ')', ';', '}', 'else', '{', 'ROOT_LOGGER', '.', 'tracef', '(', '""persistence unit \'%s\' specified a custom scoped persistence unit name hint ""', '+', '""(jboss.as.jpa.scopedname=%s).  The specified name *must* be unique across all application server deployments.""', ',', 'pu', '.', 'getPersistenceUnitName', '(', ')', ',', 'scopedPersistenceUnitName', ')', ';', 'if', '(', 'scopedPersistenceUnitName', '.', 'indexOf', '(', ""'"", ""'"", ')', '!=', '-', '1', ')', '{', 'throw', 'JpaLogger', '.', 'ROOT_LOGGER', '.', 'invalidScopedName', '(', 'scopedPersistenceUnitName', ',', ""'"", ""'"", ')', ';', '}', '}', 'pu', '.', 'setScopedPersistenceUnitName', '(', 'scopedPersistenceUnitName', ')', ';', '}', '}']","Some of this might need to move to the install phase

@param persistence_xml
@param puHolder","['Some', 'of', 'this', 'might', 'need', 'to', 'move', 'to', 'the', 'install', 'phase']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitParseProcessor.java#L247-L287,test
streamsets/datacollector,container/src/main/java/com/streamsets/datacollector/configupgrade/PipelineConfigurationUpgrader.java,PipelineConfigurationUpgrader.upgradeIfNecessary,"public PipelineConfiguration upgradeIfNecessary(
      StageLibraryTask library,
      PipelineConfiguration pipelineConf,
      List<Issue> issues
  ) {
    Preconditions.checkArgument(issues.isEmpty(), ""Given list of issues must be empty."");
    boolean upgrade;

    // Firstly upgrading schema if needed, then data
    upgrade = needsSchemaUpgrade(pipelineConf, issues);
    if(upgrade && issues.isEmpty()) {
      pipelineConf = upgradeSchema(library, pipelineConf, issues);
    }

    // Something went wrong with the schema upgrade
    if(!issues.isEmpty()) {
      return null;
    }

    // Upgrading data if needed
    upgrade = needsUpgrade(library, pipelineConf, issues);
    if (upgrade && issues.isEmpty()) {
      //we try to upgrade only if we have all defs for the pipelineConf
      pipelineConf = upgrade(library, pipelineConf, issues);
    }
    return (issues.isEmpty()) ? pipelineConf : null;
  }",java,"public PipelineConfiguration upgradeIfNecessary(
      StageLibraryTask library,
      PipelineConfiguration pipelineConf,
      List<Issue> issues
  ) {
    Preconditions.checkArgument(issues.isEmpty(), ""Given list of issues must be empty."");
    boolean upgrade;

    // Firstly upgrading schema if needed, then data
    upgrade = needsSchemaUpgrade(pipelineConf, issues);
    if(upgrade && issues.isEmpty()) {
      pipelineConf = upgradeSchema(library, pipelineConf, issues);
    }

    // Something went wrong with the schema upgrade
    if(!issues.isEmpty()) {
      return null;
    }

    // Upgrading data if needed
    upgrade = needsUpgrade(library, pipelineConf, issues);
    if (upgrade && issues.isEmpty()) {
      //we try to upgrade only if we have all defs for the pipelineConf
      pipelineConf = upgrade(library, pipelineConf, issues);
    }
    return (issues.isEmpty()) ? pipelineConf : null;
  }","['public', 'PipelineConfiguration', 'upgradeIfNecessary', '(', 'StageLibraryTask', 'library', ',', 'PipelineConfiguration', 'pipelineConf', ',', 'List', '<', 'Issue', '>', 'issues', ')', '{', 'Preconditions', '.', 'checkArgument', '(', 'issues', '.', 'isEmpty', '(', ')', ',', '""Given list of issues must be empty.""', ')', ';', 'boolean', 'upgrade', ';', '// Firstly upgrading schema if needed, then data', 'upgrade', '=', 'needsSchemaUpgrade', '(', 'pipelineConf', ',', 'issues', ')', ';', 'if', '(', 'upgrade', '&&', 'issues', '.', 'isEmpty', '(', ')', ')', '{', 'pipelineConf', '=', 'upgradeSchema', '(', 'library', ',', 'pipelineConf', ',', 'issues', ')', ';', '}', '// Something went wrong with the schema upgrade', 'if', '(', '!', 'issues', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'null', ';', '}', '// Upgrading data if needed', 'upgrade', '=', 'needsUpgrade', '(', 'library', ',', 'pipelineConf', ',', 'issues', ')', ';', 'if', '(', 'upgrade', '&&', 'issues', '.', 'isEmpty', '(', ')', ')', '{', '//we try to upgrade only if we have all defs for the pipelineConf', 'pipelineConf', '=', 'upgrade', '(', 'library', ',', 'pipelineConf', ',', 'issues', ')', ';', '}', 'return', '(', 'issues', '.', 'isEmpty', '(', ')', ')', '?', 'pipelineConf', ':', 'null', ';', '}']","Upgrade whole pipeline at once and return updated variant.

@param library Stage Library
@param pipelineConf Existing Pipeline Configuration
@param issues Issues
@return Upgraded pipeline configuration or null on any error","['Upgrade', 'whole', 'pipeline', 'at', 'once', 'and', 'return', 'updated', 'variant', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/configupgrade/PipelineConfigurationUpgrader.java#L70-L96,test
deeplearning4j/nd4j,nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/flow/impl/AsynchronousFlowController.java,AsynchronousFlowController.sweepTail,"protected void sweepTail() {
        Integer deviceId = allocator.getDeviceId();
        int cnt = 0;

        // we get number of issued commands for specific device
        long lastCommandId = deviceClocks.get(deviceId).get();

        for (int l = 0; l < configuration.getCommandLanesNumber(); l++) {
            Queue<cudaEvent_t> queue = eventsBarrier.get(deviceId).get(l);

            if (queue.size() >= MAX_EXECUTION_QUEUE
                            || laneClocks.get(deviceId).get(l).get() < lastCommandId - MAX_EXECUTION_QUEUE) {
                cudaEvent_t event = queue.poll();
                if (event != null && !event.isDestroyed()) {
                    event.synchronize();
                    event.destroy();
                    cnt++;
                }
            }

        }

        deviceClocks.get(deviceId).incrementAndGet();

        //  log.info(""Events sweeped: [{}]"", cnt);
    }",java,"protected void sweepTail() {
        Integer deviceId = allocator.getDeviceId();
        int cnt = 0;

        // we get number of issued commands for specific device
        long lastCommandId = deviceClocks.get(deviceId).get();

        for (int l = 0; l < configuration.getCommandLanesNumber(); l++) {
            Queue<cudaEvent_t> queue = eventsBarrier.get(deviceId).get(l);

            if (queue.size() >= MAX_EXECUTION_QUEUE
                            || laneClocks.get(deviceId).get(l).get() < lastCommandId - MAX_EXECUTION_QUEUE) {
                cudaEvent_t event = queue.poll();
                if (event != null && !event.isDestroyed()) {
                    event.synchronize();
                    event.destroy();
                    cnt++;
                }
            }

        }

        deviceClocks.get(deviceId).incrementAndGet();

        //  log.info(""Events sweeped: [{}]"", cnt);
    }","['protected', 'void', 'sweepTail', '(', ')', '{', 'Integer', 'deviceId', '=', 'allocator', '.', 'getDeviceId', '(', ')', ';', 'int', 'cnt', '=', '0', ';', '// we get number of issued commands for specific device', 'long', 'lastCommandId', '=', 'deviceClocks', '.', 'get', '(', 'deviceId', ')', '.', 'get', '(', ')', ';', 'for', '(', 'int', 'l', '=', '0', ';', 'l', '<', 'configuration', '.', 'getCommandLanesNumber', '(', ')', ';', 'l', '++', ')', '{', 'Queue', '<', 'cudaEvent_t', '>', 'queue', '=', 'eventsBarrier', '.', 'get', '(', 'deviceId', ')', '.', 'get', '(', 'l', ')', ';', 'if', '(', 'queue', '.', 'size', '(', ')', '>=', 'MAX_EXECUTION_QUEUE', '||', 'laneClocks', '.', 'get', '(', 'deviceId', ')', '.', 'get', '(', 'l', ')', '.', 'get', '(', ')', '<', 'lastCommandId', '-', 'MAX_EXECUTION_QUEUE', ')', '{', 'cudaEvent_t', 'event', '=', 'queue', '.', 'poll', '(', ')', ';', 'if', '(', 'event', '!=', 'null', '&&', '!', 'event', '.', 'isDestroyed', '(', ')', ')', '{', 'event', '.', 'synchronize', '(', ')', ';', 'event', '.', 'destroy', '(', ')', ';', 'cnt', '++', ';', '}', '}', '}', 'deviceClocks', '.', 'get', '(', 'deviceId', ')', '.', 'incrementAndGet', '(', ')', ';', '//  log.info(""Events sweeped: [{}]"", cnt);', '}']",This method ensures the events in the beginning of FIFO queues are finished,"['This', 'method', 'ensures', 'the', 'events', 'in', 'the', 'beginning', 'of', 'FIFO', 'queues', 'are', 'finished']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/flow/impl/AsynchronousFlowController.java#L501-L526,test
js-lib-com/tiny-container,src/main/java/js/servlet/RequestContext.java,RequestContext.attach,"public void attach(HttpServletRequest httpRequest, HttpServletResponse httpResponse) {
		// takes care to not override request URL, locale and request path values if set by request pre-processor
		if (requestURL == null) {
			requestURL = httpRequest.getRequestURI();
		}
		if (locale == null) {
			locale = httpRequest.getLocale();
		}
		if (requestPath == null) {
			// request URI and context path cannot ever be null
			requestPath = httpRequest.getRequestURI().substring(httpRequest.getContextPath().length());
		}

		this.httpRequest = httpRequest;
		this.httpResponse = httpResponse;
		this.attached = true;
	}",java,"public void attach(HttpServletRequest httpRequest, HttpServletResponse httpResponse) {
		// takes care to not override request URL, locale and request path values if set by request pre-processor
		if (requestURL == null) {
			requestURL = httpRequest.getRequestURI();
		}
		if (locale == null) {
			locale = httpRequest.getLocale();
		}
		if (requestPath == null) {
			// request URI and context path cannot ever be null
			requestPath = httpRequest.getRequestURI().substring(httpRequest.getContextPath().length());
		}

		this.httpRequest = httpRequest;
		this.httpResponse = httpResponse;
		this.attached = true;
	}","['public', 'void', 'attach', '(', 'HttpServletRequest', 'httpRequest', ',', 'HttpServletResponse', 'httpResponse', ')', '{', '// takes care to not override request URL, locale and request path values if set by request pre-processor\r', 'if', '(', 'requestURL', '==', 'null', ')', '{', 'requestURL', '=', 'httpRequest', '.', 'getRequestURI', '(', ')', ';', '}', 'if', '(', 'locale', '==', 'null', ')', '{', 'locale', '=', 'httpRequest', '.', 'getLocale', '(', ')', ';', '}', 'if', '(', 'requestPath', '==', 'null', ')', '{', '// request URI and context path cannot ever be null\r', 'requestPath', '=', 'httpRequest', '.', 'getRequestURI', '(', ')', '.', 'substring', '(', 'httpRequest', '.', 'getContextPath', '(', ')', '.', 'length', '(', ')', ')', ';', '}', 'this', '.', 'httpRequest', '=', 'httpRequest', ';', 'this', '.', 'httpResponse', '=', 'httpResponse', ';', 'this', '.', 'attached', '=', 'true', ';', '}']","Attach this instance to HTTP servlet request. Load this instance state from HTTP servlet request and mark it as attached.

@param httpRequest current HTTP request object,
@param httpResponse HTTP response object associated to current request.","['Attach', 'this', 'instance', 'to', 'HTTP', 'servlet', 'request', '.', 'Load', 'this', 'instance', 'state', 'from', 'HTTP', 'servlet', 'request', 'and', 'mark', 'it', 'as', 'attached', '.']",ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e,https://github.com/js-lib-com/tiny-container/blob/ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e/src/main/java/js/servlet/RequestContext.java#L192-L208,test
Netflix/hollow,hollow/src/main/java/com/netflix/hollow/core/write/objectmapper/HollowObjectMapper.java,HollowObjectMapper.extractPrimaryKey,"public RecordPrimaryKey extractPrimaryKey(Object o) {
        HollowObjectTypeMapper typeMapper = (HollowObjectTypeMapper) getTypeMapper(o.getClass(), null, null);
        return new RecordPrimaryKey(typeMapper.getTypeName(), typeMapper.extractPrimaryKey(o));
    }",java,"public RecordPrimaryKey extractPrimaryKey(Object o) {
        HollowObjectTypeMapper typeMapper = (HollowObjectTypeMapper) getTypeMapper(o.getClass(), null, null);
        return new RecordPrimaryKey(typeMapper.getTypeName(), typeMapper.extractPrimaryKey(o));
    }","['public', 'RecordPrimaryKey', 'extractPrimaryKey', '(', 'Object', 'o', ')', '{', 'HollowObjectTypeMapper', 'typeMapper', '=', '(', 'HollowObjectTypeMapper', ')', 'getTypeMapper', '(', 'o', '.', 'getClass', '(', ')', ',', 'null', ',', 'null', ')', ';', 'return', 'new', 'RecordPrimaryKey', '(', 'typeMapper', '.', 'getTypeName', '(', ')', ',', 'typeMapper', '.', 'extractPrimaryKey', '(', 'o', ')', ')', ';', '}']","Extracts the primary key from the specified POJO.

@param o the POJO
@return the primary key
@throws IllegalArgumentException if the POJO does not have primary key defined","['Extracts', 'the', 'primary', 'key', 'from', 'the', 'specified', 'POJO', '.']",43ca100034a01050fb764170bd32b085ac9a3c22,https://github.com/Netflix/hollow/blob/43ca100034a01050fb764170bd32b085ac9a3c22/hollow/src/main/java/com/netflix/hollow/core/write/objectmapper/HollowObjectMapper.java#L93-L96,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/state/BaseState.java,BaseState.removePropertyChangeListener,"public void removePropertyChangeListener(String p, PropertyChangeListener l)
    {
        if (listeners == null)
        {
            return;
        }

        synchronized (listeners)
        {
            listeners.remove(l);
        }
    }",java,"public void removePropertyChangeListener(String p, PropertyChangeListener l)
    {
        if (listeners == null)
        {
            return;
        }

        synchronized (listeners)
        {
            listeners.remove(l);
        }
    }","['public', 'void', 'removePropertyChangeListener', '(', 'String', 'p', ',', 'PropertyChangeListener', 'l', ')', '{', 'if', '(', 'listeners', '==', 'null', ')', '{', 'return', ';', '}', 'synchronized', '(', 'listeners', ')', '{', 'listeners', '.', 'remove', '(', 'l', ')', ';', '}', '}']","Removes the specified property change listener from the list of active listeners.

@param p Ignored. In future will be used to name the specific property to remove the listener for.
@param l The property change listener to remove.","['Removes', 'the', 'specified', 'property', 'change', 'listener', 'from', 'the', 'list', 'of', 'active', 'listeners', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/state/BaseState.java#L127-L138,test
vigna/fastutil,src/it/unimi/dsi/fastutil/io/FastBufferedInputStream.java,FastBufferedInputStream.skip,"@Override
	public long skip(final long n) throws IOException {
		if (n <= avail) {
			final int m = (int)n;
			pos += m;
			avail -= m;
			readBytes += n;
			return n;
		}

		long toSkip = n - avail, result = 0;
		avail = 0;

		while (toSkip != 0 && (result = is == System.in ? skipByReading(toSkip) : is.skip(toSkip)) < toSkip) {
			if (result == 0) {
				if (is.read() == -1) break;
				toSkip--;
			}
			else toSkip -= result;
		}

		final long t = n - (toSkip - result);
		readBytes += t;
		return t;
	}",java,"@Override
	public long skip(final long n) throws IOException {
		if (n <= avail) {
			final int m = (int)n;
			pos += m;
			avail -= m;
			readBytes += n;
			return n;
		}

		long toSkip = n - avail, result = 0;
		avail = 0;

		while (toSkip != 0 && (result = is == System.in ? skipByReading(toSkip) : is.skip(toSkip)) < toSkip) {
			if (result == 0) {
				if (is.read() == -1) break;
				toSkip--;
			}
			else toSkip -= result;
		}

		final long t = n - (toSkip - result);
		readBytes += t;
		return t;
	}","['@', 'Override', 'public', 'long', 'skip', '(', 'final', 'long', 'n', ')', 'throws', 'IOException', '{', 'if', '(', 'n', '<=', 'avail', ')', '{', 'final', 'int', 'm', '=', '(', 'int', ')', 'n', ';', 'pos', '+=', 'm', ';', 'avail', '-=', 'm', ';', 'readBytes', '+=', 'n', ';', 'return', 'n', ';', '}', 'long', 'toSkip', '=', 'n', '-', 'avail', ',', 'result', '=', '0', ';', 'avail', '=', '0', ';', 'while', '(', 'toSkip', '!=', '0', '&&', '(', 'result', '=', 'is', '==', 'System', '.', 'in', '?', 'skipByReading', '(', 'toSkip', ')', ':', 'is', '.', 'skip', '(', 'toSkip', ')', ')', '<', 'toSkip', ')', '{', 'if', '(', 'result', '==', '0', ')', '{', 'if', '(', 'is', '.', 'read', '(', ')', '==', '-', '1', ')', 'break', ';', 'toSkip', '--', ';', '}', 'else', 'toSkip', '-=', 'result', ';', '}', 'final', 'long', 't', '=', 'n', '-', '(', 'toSkip', '-', 'result', ')', ';', 'readBytes', '+=', 't', ';', 'return', 't', ';', '}']","Skips over and discards the given number of bytes of data from this fast buffered input stream.

<p>As explained in the {@linkplain FastBufferedInputStream class documentation}, the semantics
of {@link InputStream#skip(long)} is fatally flawed. This method provides additional semantics as follows:
it will skip the provided number of bytes, unless the end of file has been reached.

<p>Additionally, if the underlying input stream is {@link System#in} this method will use
repeated reads instead of invoking {@link InputStream#skip(long)}.

@param n the number of bytes to skip.
@return the number of bytes actually skipped; it can be smaller than {@code n}
only if the end of file has been reached.
@see InputStream#skip(long)","['Skips', 'over', 'and', 'discards', 'the', 'given', 'number', 'of', 'bytes', 'of', 'data', 'from', 'this', 'fast', 'buffered', 'input', 'stream', '.']",192ce83affa4a6f2ad34a96c15b5f2ec2929cf1c,https://github.com/vigna/fastutil/blob/192ce83affa4a6f2ad34a96c15b5f2ec2929cf1c/src/it/unimi/dsi/fastutil/io/FastBufferedInputStream.java#L478-L502,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CellUtility.java,CellUtility.convertCell,"public static void convertCell(final SheetConfiguration sheetConfig, final FacesCell fcell, final Cell poiCell,
			final Map<String, CellRangeAddress> cellRangeMap, final int originRowIndex,
			final CellAttributesMap cellAttributesMap, final String saveAttrs) {
		CellRangeAddress caddress;
		String key = getCellIndexNumberKey(poiCell);
		caddress = cellRangeMap.get(key);
		if (caddress != null) {
			// has col or row span
			fcell.setColspan(caddress.getLastColumn() - caddress.getFirstColumn() + 1);
			fcell.setRowspan(caddress.getLastRow() - caddress.getFirstRow() + 1);
		}

		CellControlsUtility.setupControlAttributes(originRowIndex, fcell, poiCell, sheetConfig, cellAttributesMap);
		fcell.setHasSaveAttr(SaveAttrsUtility.isHasSaveAttr(poiCell, saveAttrs));

	}",java,"public static void convertCell(final SheetConfiguration sheetConfig, final FacesCell fcell, final Cell poiCell,
			final Map<String, CellRangeAddress> cellRangeMap, final int originRowIndex,
			final CellAttributesMap cellAttributesMap, final String saveAttrs) {
		CellRangeAddress caddress;
		String key = getCellIndexNumberKey(poiCell);
		caddress = cellRangeMap.get(key);
		if (caddress != null) {
			// has col or row span
			fcell.setColspan(caddress.getLastColumn() - caddress.getFirstColumn() + 1);
			fcell.setRowspan(caddress.getLastRow() - caddress.getFirstRow() + 1);
		}

		CellControlsUtility.setupControlAttributes(originRowIndex, fcell, poiCell, sheetConfig, cellAttributesMap);
		fcell.setHasSaveAttr(SaveAttrsUtility.isHasSaveAttr(poiCell, saveAttrs));

	}","['public', 'static', 'void', 'convertCell', '(', 'final', 'SheetConfiguration', 'sheetConfig', ',', 'final', 'FacesCell', 'fcell', ',', 'final', 'Cell', 'poiCell', ',', 'final', 'Map', '<', 'String', ',', 'CellRangeAddress', '>', 'cellRangeMap', ',', 'final', 'int', 'originRowIndex', ',', 'final', 'CellAttributesMap', 'cellAttributesMap', ',', 'final', 'String', 'saveAttrs', ')', '{', 'CellRangeAddress', 'caddress', ';', 'String', 'key', '=', 'getCellIndexNumberKey', '(', 'poiCell', ')', ';', 'caddress', '=', 'cellRangeMap', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'caddress', '!=', 'null', ')', '{', '// has col or row span\r', 'fcell', '.', 'setColspan', '(', 'caddress', '.', 'getLastColumn', '(', ')', '-', 'caddress', '.', 'getFirstColumn', '(', ')', '+', '1', ')', ';', 'fcell', '.', 'setRowspan', '(', 'caddress', '.', 'getLastRow', '(', ')', '-', 'caddress', '.', 'getFirstRow', '(', ')', '+', '1', ')', ';', '}', 'CellControlsUtility', '.', 'setupControlAttributes', '(', 'originRowIndex', ',', 'fcell', ',', 'poiCell', ',', 'sheetConfig', ',', 'cellAttributesMap', ')', ';', 'fcell', '.', 'setHasSaveAttr', '(', 'SaveAttrsUtility', '.', 'isHasSaveAttr', '(', 'poiCell', ',', 'saveAttrs', ')', ')', ';', '}']",set up facesCell's attribute from poiCell and others.,"['set', 'up', 'facesCell', 's', 'attribute', 'from', 'poiCell', 'and', 'others', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CellUtility.java#L769-L784,test
boonproject/boon,boon/src/main/java/org/boon/primitive/Int.java,Int.roundUpToPowerOf2,"public static int roundUpToPowerOf2( int number ) {
        int rounded = number >= 1_000
                ? 1_000
                : ( rounded = Integer.highestOneBit( number ) ) != 0
                ? ( Integer.bitCount( number ) > 1 ) ? rounded << 1 : rounded
                : 1;

        return rounded;
    }",java,"public static int roundUpToPowerOf2( int number ) {
        int rounded = number >= 1_000
                ? 1_000
                : ( rounded = Integer.highestOneBit( number ) ) != 0
                ? ( Integer.bitCount( number ) > 1 ) ? rounded << 1 : rounded
                : 1;

        return rounded;
    }","['public', 'static', 'int', 'roundUpToPowerOf2', '(', 'int', 'number', ')', '{', 'int', 'rounded', '=', 'number', '>=', '1_000', '?', '1_000', ':', '(', 'rounded', '=', 'Integer', '.', 'highestOneBit', '(', 'number', ')', ')', '!=', '0', '?', '(', 'Integer', '.', 'bitCount', '(', 'number', ')', '>', '1', ')', '?', 'rounded', '<<', '1', ':', 'rounded', ':', '1', ';', 'return', 'rounded', ';', '}']","Round up to the nearest power of 2
@param number number you want to round up to.
@return rounded up to the power of 2.","['Round', 'up', 'to', 'the', 'nearest', 'power', 'of', '2']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/primitive/Int.java#L1526-L1534,test
wildfly/wildfly,connector/src/main/java/org/jboss/as/connector/services/resourceadapters/deployment/registry/ResourceAdapterDeploymentRegistryImpl.java,ResourceAdapterDeploymentRegistryImpl.registerResourceAdapterDeployment,"public void registerResourceAdapterDeployment(ResourceAdapterDeployment deployment) {
        if (deployment == null)
            throw new IllegalArgumentException(ConnectorLogger.ROOT_LOGGER.nullVar(""Deployment""));

        DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER.tracef(""Adding deployment: %s"", deployment);

        deployments.add(deployment);
    }",java,"public void registerResourceAdapterDeployment(ResourceAdapterDeployment deployment) {
        if (deployment == null)
            throw new IllegalArgumentException(ConnectorLogger.ROOT_LOGGER.nullVar(""Deployment""));

        DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER.tracef(""Adding deployment: %s"", deployment);

        deployments.add(deployment);
    }","['public', 'void', 'registerResourceAdapterDeployment', '(', 'ResourceAdapterDeployment', 'deployment', ')', '{', 'if', '(', 'deployment', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', 'ConnectorLogger', '.', 'ROOT_LOGGER', '.', 'nullVar', '(', '""Deployment""', ')', ')', ';', 'DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER', '.', 'tracef', '(', '""Adding deployment: %s""', ',', 'deployment', ')', ';', 'deployments', '.', 'add', '(', 'deployment', ')', ';', '}']","Register a resource adapter deployment
@param deployment The deployment","['Register', 'a', 'resource', 'adapter', 'deployment']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/connector/src/main/java/org/jboss/as/connector/services/resourceadapters/deployment/registry/ResourceAdapterDeploymentRegistryImpl.java#L54-L61,test
vigna/fastutil,src/it/unimi/dsi/fastutil/io/FastBufferedInputStream.java,FastBufferedInputStream.noMoreCharacters,"protected boolean noMoreCharacters() throws IOException {
		if (avail == 0) {
			avail = is.read(buffer);
			if (avail <= 0) {
				avail = 0;
				return true;
			}
			pos = 0;
		}
		return false;
	}",java,"protected boolean noMoreCharacters() throws IOException {
		if (avail == 0) {
			avail = is.read(buffer);
			if (avail <= 0) {
				avail = 0;
				return true;
			}
			pos = 0;
		}
		return false;
	}","['protected', 'boolean', 'noMoreCharacters', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'avail', '==', '0', ')', '{', 'avail', '=', 'is', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'avail', '<=', '0', ')', '{', 'avail', '=', '0', ';', 'return', 'true', ';', '}', 'pos', '=', '0', ';', '}', 'return', 'false', ';', '}']","Checks whether no more bytes will be returned.

<p>This method will refill the internal buffer.

@return true if there are no characters in the internal buffer and
the underlying reader is exhausted.","['Checks', 'whether', 'no', 'more', 'bytes', 'will', 'be', 'returned', '.']",192ce83affa4a6f2ad34a96c15b5f2ec2929cf1c,https://github.com/vigna/fastutil/blob/192ce83affa4a6f2ad34a96c15b5f2ec2929cf1c/src/it/unimi/dsi/fastutil/io/FastBufferedInputStream.java#L178-L188,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft/point/standard/Evaluator.java,Evaluator.findVariableWithAttributeValue,"static public Variable findVariableWithAttributeValue(Structure struct, String attName, String attValue) {
    for (Variable v : struct.getVariables()) {
      Attribute att = v.findAttributeIgnoreCase(attName);
      if ((att != null) && att.getStringValue().equals(attValue))
        return v;
    }
    return null;
  }",java,"static public Variable findVariableWithAttributeValue(Structure struct, String attName, String attValue) {
    for (Variable v : struct.getVariables()) {
      Attribute att = v.findAttributeIgnoreCase(attName);
      if ((att != null) && att.getStringValue().equals(attValue))
        return v;
    }
    return null;
  }","['static', 'public', 'Variable', 'findVariableWithAttributeValue', '(', 'Structure', 'struct', ',', 'String', 'attName', ',', 'String', 'attValue', ')', '{', 'for', '(', 'Variable', 'v', ':', 'struct', '.', 'getVariables', '(', ')', ')', '{', 'Attribute', 'att', '=', 'v', '.', 'findAttributeIgnoreCase', '(', 'attName', ')', ';', 'if', '(', '(', 'att', '!=', 'null', ')', '&&', 'att', '.', 'getStringValue', '(', ')', '.', 'equals', '(', 'attValue', ')', ')', 'return', 'v', ';', '}', 'return', 'null', ';', '}']","Find first member variable in this struct with given attribute name and value

@param struct   in this structure
@param attName  attribute name, case insensitive
@param attValue attribute value, case sensitive
@return first member variable with given attribute name and value, or null","['Find', 'first', 'member', 'variable', 'in', 'this', 'struct', 'with', 'given', 'attribute', 'name', 'and', 'value']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/Evaluator.java#L147-L154,test
RestComm/jain-slee,tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/log/LogStructureTreePanel.java,LogStructureTreePanel.doTree,"private TreeItem doTree(FQDNNode localRoot) {

    TreeItem localLeaf = new TreeItem();

    LogTreeNode logTreeNode = new LogTreeNode(browseContainer, localRoot.getShortName(), localRoot.getFqdName(), localRoot.isWasLeaf(), this);

    localLeaf.setWidget(logTreeNode);

    if (localRoot.getChildren().size() > 0) {

      Tree t = new Tree();

      ArrayList names = new ArrayList(localRoot.getChildrenNames());
      Collections.sort(names);
      Iterator it = names.iterator();
      while (it.hasNext()) {
        t.addItem(doTree(localRoot.getChild((String) it.next())));
      }
      localLeaf.addItem(t);
    }

    return localLeaf;

  }",java,"private TreeItem doTree(FQDNNode localRoot) {

    TreeItem localLeaf = new TreeItem();

    LogTreeNode logTreeNode = new LogTreeNode(browseContainer, localRoot.getShortName(), localRoot.getFqdName(), localRoot.isWasLeaf(), this);

    localLeaf.setWidget(logTreeNode);

    if (localRoot.getChildren().size() > 0) {

      Tree t = new Tree();

      ArrayList names = new ArrayList(localRoot.getChildrenNames());
      Collections.sort(names);
      Iterator it = names.iterator();
      while (it.hasNext()) {
        t.addItem(doTree(localRoot.getChild((String) it.next())));
      }
      localLeaf.addItem(t);
    }

    return localLeaf;

  }","['private', 'TreeItem', 'doTree', '(', 'FQDNNode', 'localRoot', ')', '{', 'TreeItem', 'localLeaf', '=', 'new', 'TreeItem', '(', ')', ';', 'LogTreeNode', 'logTreeNode', '=', 'new', 'LogTreeNode', '(', 'browseContainer', ',', 'localRoot', '.', 'getShortName', '(', ')', ',', 'localRoot', '.', 'getFqdName', '(', ')', ',', 'localRoot', '.', 'isWasLeaf', '(', ')', ',', 'this', ')', ';', 'localLeaf', '.', 'setWidget', '(', 'logTreeNode', ')', ';', 'if', '(', 'localRoot', '.', 'getChildren', '(', ')', '.', 'size', '(', ')', '>', '0', ')', '{', 'Tree', 't', '=', 'new', 'Tree', '(', ')', ';', 'ArrayList', 'names', '=', 'new', 'ArrayList', '(', 'localRoot', '.', 'getChildrenNames', '(', ')', ')', ';', 'Collections', '.', 'sort', '(', 'names', ')', ';', 'Iterator', 'it', '=', 'names', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 't', '.', 'addItem', '(', 'doTree', '(', 'localRoot', '.', 'getChild', '(', '(', 'String', ')', 'it', '.', 'next', '(', ')', ')', ')', ')', ';', '}', 'localLeaf', '.', 'addItem', '(', 't', ')', ';', '}', 'return', 'localLeaf', ';', '}']",TMP DEV METHODS,"['TMP', 'DEV', 'METHODS']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/tools/slee-management-console/war/src/main/java/org/mobicents/slee/container/management/console/client/log/LogStructureTreePanel.java#L140-L163,test
jboss/jboss-common-core,src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java,PropertyEditors.convertValue,"public static Object convertValue(String text, String typeName)
         throws ClassNotFoundException, IntrospectionException
   {
      // see if it is a primitive type first
      Class<?> typeClass = Classes.getPrimitiveTypeForName(typeName);
      if (typeClass == null)
      {
         ClassLoader loader = Thread.currentThread().getContextClassLoader();
         typeClass = loader.loadClass(typeName);
      }

      PropertyEditor editor = PropertyEditorManager.findEditor(typeClass);
      if (editor == null)
      {
         throw new IntrospectionException
               (""No property editor for type="" + typeClass);
      }

      editor.setAsText(text);
      return editor.getValue();
   }",java,"public static Object convertValue(String text, String typeName)
         throws ClassNotFoundException, IntrospectionException
   {
      // see if it is a primitive type first
      Class<?> typeClass = Classes.getPrimitiveTypeForName(typeName);
      if (typeClass == null)
      {
         ClassLoader loader = Thread.currentThread().getContextClassLoader();
         typeClass = loader.loadClass(typeName);
      }

      PropertyEditor editor = PropertyEditorManager.findEditor(typeClass);
      if (editor == null)
      {
         throw new IntrospectionException
               (""No property editor for type="" + typeClass);
      }

      editor.setAsText(text);
      return editor.getValue();
   }","['public', 'static', 'Object', 'convertValue', '(', 'String', 'text', ',', 'String', 'typeName', ')', 'throws', 'ClassNotFoundException', ',', 'IntrospectionException', '{', '// see if it is a primitive type first', 'Class', '<', '?', '>', 'typeClass', '=', 'Classes', '.', 'getPrimitiveTypeForName', '(', 'typeName', ')', ';', 'if', '(', 'typeClass', '==', 'null', ')', '{', 'ClassLoader', 'loader', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', ';', 'typeClass', '=', 'loader', '.', 'loadClass', '(', 'typeName', ')', ';', '}', 'PropertyEditor', 'editor', '=', 'PropertyEditorManager', '.', 'findEditor', '(', 'typeClass', ')', ';', 'if', '(', 'editor', '==', 'null', ')', '{', 'throw', 'new', 'IntrospectionException', '(', '""No property editor for type=""', '+', 'typeClass', ')', ';', '}', 'editor', '.', 'setAsText', '(', 'text', ')', ';', 'return', 'editor', '.', 'getValue', '(', ')', ';', '}']","Convert a string value into the true value for typeName using the
PropertyEditor associated with typeName.

@param text the string represention of the value. This is passed to
the PropertyEditor.setAsText method.
@param typeName the fully qualified class name of the true value type
@return the PropertyEditor.getValue() result
@exception ClassNotFoundException thrown if the typeName class cannot
be found
@exception IntrospectionException thrown if a PropertyEditor for typeName
cannot be found","['Convert', 'a', 'string', 'value', 'into', 'the', 'true', 'value', 'for', 'typeName', 'using', 'the', 'PropertyEditor', 'associated', 'with', 'typeName', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java#L242-L262,test
boonproject/boon,boon/src/main/java/org/boon/messages/MessageSpecification.java,MessageSpecification.init,"public void init() {
        /* If the parent and name are equal to null,
         * use the classname to load listFromClassLoader.
    	 * */
        if ( name == null && parent == null ) {
            this.setDetailMessage( ""{"" + this.getClass().getName() + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + this.getClass().getName() + SUMMARY_KEY + ""}"" );
        /* If the parent is null and the name is not,
         * use the name to load listFromClassLoader.
         */
        } else if ( name != null && parent == null ) {
            this.setDetailMessage( ""{"" + ""message."" + getName() + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + ""message."" + getName() + SUMMARY_KEY + ""}"" );
        /* If the parent is present, initialize the message keys
         * with the parent name.
         */
        } else if ( parent != null ) {
            this.setDetailMessage( ""{"" + ""message."" + parent + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + ""message."" + parent + SUMMARY_KEY + ""}"" );
        }
    }",java,"public void init() {
        /* If the parent and name are equal to null,
         * use the classname to load listFromClassLoader.
    	 * */
        if ( name == null && parent == null ) {
            this.setDetailMessage( ""{"" + this.getClass().getName() + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + this.getClass().getName() + SUMMARY_KEY + ""}"" );
        /* If the parent is null and the name is not,
         * use the name to load listFromClassLoader.
         */
        } else if ( name != null && parent == null ) {
            this.setDetailMessage( ""{"" + ""message."" + getName() + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + ""message."" + getName() + SUMMARY_KEY + ""}"" );
        /* If the parent is present, initialize the message keys
         * with the parent name.
         */
        } else if ( parent != null ) {
            this.setDetailMessage( ""{"" + ""message."" + parent + DETAIL_KEY + ""}"" );
            this.setSummaryMessage( ""{"" + ""message."" + parent + SUMMARY_KEY + ""}"" );
        }
    }","['public', 'void', 'init', '(', ')', '{', '/* If the parent and name are equal to null,\n         * use the classname to load listFromClassLoader.\n    \t * */', 'if', '(', 'name', '==', 'null', '&&', 'parent', '==', 'null', ')', '{', 'this', '.', 'setDetailMessage', '(', '""{""', '+', 'this', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', 'DETAIL_KEY', '+', '""}""', ')', ';', 'this', '.', 'setSummaryMessage', '(', '""{""', '+', 'this', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', 'SUMMARY_KEY', '+', '""}""', ')', ';', '/* If the parent is null and the name is not,\n         * use the name to load listFromClassLoader.\n         */', '}', 'else', 'if', '(', 'name', '!=', 'null', '&&', 'parent', '==', 'null', ')', '{', 'this', '.', 'setDetailMessage', '(', '""{""', '+', '""message.""', '+', 'getName', '(', ')', '+', 'DETAIL_KEY', '+', '""}""', ')', ';', 'this', '.', 'setSummaryMessage', '(', '""{""', '+', '""message.""', '+', 'getName', '(', ')', '+', 'SUMMARY_KEY', '+', '""}""', ')', ';', '/* If the parent is present, initialize the message keys\n         * with the parent name.\n         */', '}', 'else', 'if', '(', 'parent', '!=', 'null', ')', '{', 'this', '.', 'setDetailMessage', '(', '""{""', '+', '""message.""', '+', 'parent', '+', 'DETAIL_KEY', '+', '""}""', ')', ';', 'this', '.', 'setSummaryMessage', '(', '""{""', '+', '""message.""', '+', 'parent', '+', 'SUMMARY_KEY', '+', '""}""', ')', ';', '}', '}']","The init method tries to generate the message keys.
You should only call the init method if you don't inject
values into the detailMessage and summaryMessage.","['The', 'init', 'method', 'tries', 'to', 'generate', 'the', 'message', 'keys', '.', 'You', 'should', 'only', 'call', 'the', 'init', 'method', 'if', 'you', 'don', 't', 'inject', 'values', 'into', 'the', 'detailMessage', 'and', 'summaryMessage', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/messages/MessageSpecification.java#L95-L115,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/complex/BaseComplexNDArray.java,BaseComplexNDArray.putColumn,"@Override
    public IComplexNDArray putColumn(int column, INDArray toPut) {
        assert toPut.isVector() && toPut.length() == rows() : ""Illegal length for row "" + toPut.length()
                        + "" should have been "" + columns();
        IComplexNDArray r = getColumn(column);
        if (toPut instanceof IComplexNDArray) {
            IComplexNDArray putComplex = (IComplexNDArray) toPut;
            for (int i = 0; i < r.length(); i++) {
                IComplexNumber n = putComplex.getComplex(i);
                r.putScalar(i, n);
            }
        } else {
            for (int i = 0; i < r.length(); i++)
                r.putScalar(i, Nd4j.createDouble(toPut.getDouble(i), 0));

        }

        return this;
    }",java,"@Override
    public IComplexNDArray putColumn(int column, INDArray toPut) {
        assert toPut.isVector() && toPut.length() == rows() : ""Illegal length for row "" + toPut.length()
                        + "" should have been "" + columns();
        IComplexNDArray r = getColumn(column);
        if (toPut instanceof IComplexNDArray) {
            IComplexNDArray putComplex = (IComplexNDArray) toPut;
            for (int i = 0; i < r.length(); i++) {
                IComplexNumber n = putComplex.getComplex(i);
                r.putScalar(i, n);
            }
        } else {
            for (int i = 0; i < r.length(); i++)
                r.putScalar(i, Nd4j.createDouble(toPut.getDouble(i), 0));

        }

        return this;
    }","['@', 'Override', 'public', 'IComplexNDArray', 'putColumn', '(', 'int', 'column', ',', 'INDArray', 'toPut', ')', '{', 'assert', 'toPut', '.', 'isVector', '(', ')', '&&', 'toPut', '.', 'length', '(', ')', '==', 'rows', '(', ')', ':', '""Illegal length for row ""', '+', 'toPut', '.', 'length', '(', ')', '+', '"" should have been ""', '+', 'columns', '(', ')', ';', 'IComplexNDArray', 'r', '=', 'getColumn', '(', 'column', ')', ';', 'if', '(', 'toPut', 'instanceof', 'IComplexNDArray', ')', '{', 'IComplexNDArray', 'putComplex', '=', '(', 'IComplexNDArray', ')', 'toPut', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'r', '.', 'length', '(', ')', ';', 'i', '++', ')', '{', 'IComplexNumber', 'n', '=', 'putComplex', '.', 'getComplex', '(', 'i', ')', ';', 'r', '.', 'putScalar', '(', 'i', ',', 'n', ')', ';', '}', '}', 'else', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'r', '.', 'length', '(', ')', ';', 'i', '++', ')', 'r', '.', 'putScalar', '(', 'i', ',', 'Nd4j', '.', 'createDouble', '(', 'toPut', '.', 'getDouble', '(', 'i', ')', ',', '0', ')', ')', ';', '}', 'return', 'this', ';', '}']","Insert a column in to this array
Will throw an exception if this
ndarray is not a matrix

@param column the column to insert
@param toPut  the array to put
@return this","['Insert', 'a', 'column', 'in', 'to', 'this', 'array', 'Will', 'throw', 'an', 'exception', 'if', 'this', 'ndarray', 'is', 'not', 'a', 'matrix']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/complex/BaseComplexNDArray.java#L2144-L2162,test
jboss/jboss-common-core,src/main/java/org/jboss/util/ThrowableHandler.java,ThrowableHandler.add,"public static void add(int type, Throwable t) {
      // don't add null throwables
      if (t == null) return;

      try {
         fireOnThrowable(type, t);
      }
      catch (Throwable bad) {
         // don't let these propagate, that could introduce unwanted side-effects
         System.err.println(""Unable to handle throwable: "" + t + "" because of:"");
         bad.printStackTrace();
      }
   }",java,"public static void add(int type, Throwable t) {
      // don't add null throwables
      if (t == null) return;

      try {
         fireOnThrowable(type, t);
      }
      catch (Throwable bad) {
         // don't let these propagate, that could introduce unwanted side-effects
         System.err.println(""Unable to handle throwable: "" + t + "" because of:"");
         bad.printStackTrace();
      }
   }","['public', 'static', 'void', 'add', '(', 'int', 'type', ',', 'Throwable', 't', ')', '{', ""// don't add null throwables"", 'if', '(', 't', '==', 'null', ')', 'return', ';', 'try', '{', 'fireOnThrowable', '(', 'type', ',', 't', ')', ';', '}', 'catch', '(', 'Throwable', 'bad', ')', '{', ""// don't let these propagate, that could introduce unwanted side-effects"", 'System', '.', 'err', '.', 'println', '(', '""Unable to handle throwable: ""', '+', 't', '+', '"" because of:""', ')', ';', 'bad', '.', 'printStackTrace', '(', ')', ';', '}', '}']","Add a throwable that is to be handled.

@param type    The type off the throwable.
@param t       Throwable to be handled.","['Add', 'a', 'throwable', 'that', 'is', 'to', 'be', 'handled', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/ThrowableHandler.java#L103-L115,test
OpenEstate/OpenEstate-IO,OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Objekt.java,Objekt.getVermarktungsart,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<String> getVermarktungsart() {
        if (vermarktungsart == null) {
            vermarktungsart = new ArrayList<String>();
        }
        return this.vermarktungsart;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<String> getVermarktungsart() {
        if (vermarktungsart == null) {
            vermarktungsart = new ArrayList<String>();
        }
        return this.vermarktungsart;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:54:50+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'List', '<', 'String', '>', 'getVermarktungsart', '(', ')', '{', 'if', '(', 'vermarktungsart', '==', 'null', ')', '{', 'vermarktungsart', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', '}', 'return', 'this', '.', 'vermarktungsart', ';', '}']","Gets the value of the vermarktungsart property.

<p>
This accessor method returns a reference to the live list,
not a snapshot. Therefore any modification you make to the
returned list will be present inside the JAXB object.
This is why there is not a <CODE>set</CODE> method for the vermarktungsart property.

<p>
For example, to add a new item, do as follows:
<pre>
getVermarktungsart().add(newItem);
</pre>


<p>
Objects of the following type(s) are allowed in the list
{@link String }","['Gets', 'the', 'value', 'of', 'the', 'vermarktungsart', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Objekt.java#L292-L298,test
wro4j/wro4j,wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/support/ResourceChangeHandler.java,ResourceChangeHandler.create,"public static ResourceChangeHandler create(final WroManagerFactory managerFactory, final Log log) {
    notNull(managerFactory, ""WroManagerFactory was not set"");
    notNull(log, ""Log was not set"");
    return new ResourceChangeHandler().setManagerFactory(managerFactory).setLog(log);
  }",java,"public static ResourceChangeHandler create(final WroManagerFactory managerFactory, final Log log) {
    notNull(managerFactory, ""WroManagerFactory was not set"");
    notNull(log, ""Log was not set"");
    return new ResourceChangeHandler().setManagerFactory(managerFactory).setLog(log);
  }","['public', 'static', 'ResourceChangeHandler', 'create', '(', 'final', 'WroManagerFactory', 'managerFactory', ',', 'final', 'Log', 'log', ')', '{', 'notNull', '(', 'managerFactory', ',', '""WroManagerFactory was not set""', ')', ';', 'notNull', '(', 'log', ',', '""Log was not set""', ')', ';', 'return', 'new', 'ResourceChangeHandler', '(', ')', '.', 'setManagerFactory', '(', 'managerFactory', ')', '.', 'setLog', '(', 'log', ')', ';', '}']",Factory method which requires all mandatory fields.,"['Factory', 'method', 'which', 'requires', 'all', 'mandatory', 'fields', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-maven-plugin/src/main/java/ro/isdc/wro/maven/plugin/support/ResourceChangeHandler.java#L63-L67,test
Unidata/thredds,legacy/src/main/java/thredds/cataloggen/datasetenhancer/RegExpAndDurationTimeCoverageEnhancer.java,RegExpAndDurationTimeCoverageEnhancer.getInstanceToMatchOnDatasetPath,"public static RegExpAndDurationTimeCoverageEnhancer
  getInstanceToMatchOnDatasetPath( String matchPattern,
                                   String substitutionPattern,
                                   String duration )
  {
    return new RegExpAndDurationTimeCoverageEnhancer(
            matchPattern, substitutionPattern,
            duration, MatchTarget.DATASET_PATH );
  }",java,"public static RegExpAndDurationTimeCoverageEnhancer
  getInstanceToMatchOnDatasetPath( String matchPattern,
                                   String substitutionPattern,
                                   String duration )
  {
    return new RegExpAndDurationTimeCoverageEnhancer(
            matchPattern, substitutionPattern,
            duration, MatchTarget.DATASET_PATH );
  }","['public', 'static', 'RegExpAndDurationTimeCoverageEnhancer', 'getInstanceToMatchOnDatasetPath', '(', 'String', 'matchPattern', ',', 'String', 'substitutionPattern', ',', 'String', 'duration', ')', '{', 'return', 'new', 'RegExpAndDurationTimeCoverageEnhancer', '(', 'matchPattern', ',', 'substitutionPattern', ',', 'duration', ',', 'MatchTarget', '.', 'DATASET_PATH', ')', ';', '}']","Factory method that returns a RegExpAndDurationTimeCoverageEnhancer instance
that will apply the match pattern to the dataset path.

@param matchPattern a regular expression used to match against the CrawlableDataset path.
@param substitutionPattern the time coverage start time (which may contain regular expression capturing group substitution strings).
@param duration the time coverage duration string.

@return a RegExpAndDurationTimeCoverageEnhancer that will apply the match pattern to the dataset path.","['Factory', 'method', 'that', 'returns', 'a', 'RegExpAndDurationTimeCoverageEnhancer', 'instance', 'that', 'will', 'apply', 'the', 'match', 'pattern', 'to', 'the', 'dataset', 'path', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/cataloggen/datasetenhancer/RegExpAndDurationTimeCoverageEnhancer.java#L77-L85,test
Unidata/thredds,legacy/src/main/java/ucar/nc2/dt/point/StationDatasetCollection.java,StationDatasetCollection.getDataIterator,"public DataIterator getDataIterator(ucar.unidata.geoloc.Station s, Date start, Date end) throws IOException {
    return new StationDateDataIterator(s, start, end);
  }",java,"public DataIterator getDataIterator(ucar.unidata.geoloc.Station s, Date start, Date end) throws IOException {
    return new StationDateDataIterator(s, start, end);
  }","['public', 'DataIterator', 'getDataIterator', '(', 'ucar', '.', 'unidata', '.', 'geoloc', '.', 'Station', 's', ',', 'Date', 'start', ',', 'Date', 'end', ')', 'throws', 'IOException', '{', 'return', 'new', 'StationDateDataIterator', '(', 's', ',', 'start', ',', 'end', ')', ';', '}']","Get data for this Station within the specified date range.

@param s     Station
@param start starting Date
@param end   ending Date
@return Iterator over type getDataClass()
@throws java.io.IOException I/O error","['Get', 'data', 'for', 'this', 'Station', 'within', 'the', 'specified', 'date', 'range', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/ucar/nc2/dt/point/StationDatasetCollection.java#L89-L91,test
oblac/jodd,jodd-core/src/main/java/jodd/io/findfile/FindFile.java,FindFile.findAll,"public List<File> findAll() {
		List<File> allFiles = new ArrayList<>();
		File file;
		while ((file = nextFile()) != null) {
			allFiles.add(file);
		}
		return allFiles;
	}",java,"public List<File> findAll() {
		List<File> allFiles = new ArrayList<>();
		File file;
		while ((file = nextFile()) != null) {
			allFiles.add(file);
		}
		return allFiles;
	}","['public', 'List', '<', 'File', '>', 'findAll', '(', ')', '{', 'List', '<', 'File', '>', 'allFiles', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'File', 'file', ';', 'while', '(', '(', 'file', '=', 'nextFile', '(', ')', ')', '!=', 'null', ')', '{', 'allFiles', '.', 'add', '(', 'file', ')', ';', '}', 'return', 'allFiles', ';', '}']",Finds all files and returns list of founded files.,"['Finds', 'all', 'files', 'and', 'returns', 'list', 'of', 'founded', 'files', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/findfile/FindFile.java#L628-L635,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/paginated/atomicoperations/OAtomicOperation.java,OAtomicOperation.checkChangesFilledUpTo,"private static boolean checkChangesFilledUpTo(final FileChanges changesContainer, final long pageIndex) {
    if (changesContainer == null) {
      return true;
    } else if (changesContainer.isNew || changesContainer.maxNewPageIndex > -2) {
      return pageIndex < changesContainer.maxNewPageIndex + 1;
    } else
      return !changesContainer.truncate;
  }",java,"private static boolean checkChangesFilledUpTo(final FileChanges changesContainer, final long pageIndex) {
    if (changesContainer == null) {
      return true;
    } else if (changesContainer.isNew || changesContainer.maxNewPageIndex > -2) {
      return pageIndex < changesContainer.maxNewPageIndex + 1;
    } else
      return !changesContainer.truncate;
  }","['private', 'static', 'boolean', 'checkChangesFilledUpTo', '(', 'final', 'FileChanges', 'changesContainer', ',', 'final', 'long', 'pageIndex', ')', '{', 'if', '(', 'changesContainer', '==', 'null', ')', '{', 'return', 'true', ';', '}', 'else', 'if', '(', 'changesContainer', '.', 'isNew', '||', 'changesContainer', '.', 'maxNewPageIndex', '>', '-', '2', ')', '{', 'return', 'pageIndex', '<', 'changesContainer', '.', 'maxNewPageIndex', '+', '1', ';', '}', 'else', 'return', '!', 'changesContainer', '.', 'truncate', ';', '}']","This check if a file was trimmed or trunked in the current atomic operation.

@param changesContainer changes container to check
@param pageIndex        limit to check against the changes

@return true if there are no changes or pageIndex still fit, false if the pageIndex do not fit anymore","['This', 'check', 'if', 'a', 'file', 'was', 'trimmed', 'or', 'trunked', 'in', 'the', 'current', 'atomic', 'operation', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/paginated/atomicoperations/OAtomicOperation.java#L298-L305,test
ReactiveX/RxJava,src/main/java/io/reactivex/Flowable.java,Flowable.concatMapIterable,"@CheckReturnValue
    @BackpressureSupport(BackpressureKind.FULL)
    @SchedulerSupport(SchedulerSupport.NONE)
    public final <U> Flowable<U> concatMapIterable(Function<? super T, ? extends Iterable<? extends U>> mapper) {
        return concatMapIterable(mapper, 2);
    }",java,"@CheckReturnValue
    @BackpressureSupport(BackpressureKind.FULL)
    @SchedulerSupport(SchedulerSupport.NONE)
    public final <U> Flowable<U> concatMapIterable(Function<? super T, ? extends Iterable<? extends U>> mapper) {
        return concatMapIterable(mapper, 2);
    }","['@', 'CheckReturnValue', '@', 'BackpressureSupport', '(', 'BackpressureKind', '.', 'FULL', ')', '@', 'SchedulerSupport', '(', 'SchedulerSupport', '.', 'NONE', ')', 'public', 'final', '<', 'U', '>', 'Flowable', '<', 'U', '>', 'concatMapIterable', '(', 'Function', '<', '?', 'super', 'T', ',', '?', 'extends', 'Iterable', '<', '?', 'extends', 'U', '>', '>', 'mapper', ')', '{', 'return', 'concatMapIterable', '(', 'mapper', ',', '2', ')', ';', '}']","Returns a Flowable that concatenate each item emitted by the source Publisher with the values in an
Iterable corresponding to that item that is generated by a selector.

<dl>
<dt><b>Backpressure:</b></dt>
<dd>The operator honors backpressure from downstream. The source {@code Publisher}s is
expected to honor backpressure as well. If the source {@code Publisher} violates the rule, the operator will
signal a {@code MissingBackpressureException}.</dd>
<dt><b>Scheduler:</b></dt>
<dd>{@code concatMapIterable} does not operate by default on a particular {@link Scheduler}.</dd>
</dl>

@param <U>
the type of item emitted by the resulting Publisher
@param mapper
a function that returns an Iterable sequence of values for when given an item emitted by the
source Publisher
@return a Flowable that emits the results of concatenating the items emitted by the source Publisher with
the values in the Iterables corresponding to those items, as generated by {@code collectionSelector}
@see <a href=""http://reactivex.io/documentation/operators/flatmap.html"">ReactiveX operators documentation: FlatMap</a>","['Returns', 'a', 'Flowable', 'that', 'concatenate', 'each', 'item', 'emitted', 'by', 'the', 'source', 'Publisher', 'with', 'the', 'values', 'in', 'an', 'Iterable', 'corresponding', 'to', 'that', 'item', 'that', 'is', 'generated', 'by', 'a', 'selector', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Flowable.java#L7626-L7631,test
TooTallNate/Java-WebSocket,src/main/java/org/java_websocket/client/WebSocketClient.java,WebSocketClient.sendHandshake,"private void sendHandshake() throws InvalidHandshakeException {
		String path;
		String part1 = uri.getRawPath();
		String part2 = uri.getRawQuery();
		if( part1 == null || part1.length() == 0 )
			path = ""/"";
		else
			path = part1;
		if( part2 != null )
			path += '?' + part2;
		int port = getPort();
		String host = uri.getHost() + ( 
			(port != WebSocketImpl.DEFAULT_PORT && port != WebSocketImpl.DEFAULT_WSS_PORT)
			? "":"" + port 
			: """" );

		HandshakeImpl1Client handshake = new HandshakeImpl1Client();
		handshake.setResourceDescriptor( path );
		handshake.put( ""Host"", host );
		if( headers != null ) {
			for( Map.Entry<String,String> kv : headers.entrySet() ) {
				handshake.put( kv.getKey(), kv.getValue() );
			}
		}
		engine.startHandshake( handshake );
	}",java,"private void sendHandshake() throws InvalidHandshakeException {
		String path;
		String part1 = uri.getRawPath();
		String part2 = uri.getRawQuery();
		if( part1 == null || part1.length() == 0 )
			path = ""/"";
		else
			path = part1;
		if( part2 != null )
			path += '?' + part2;
		int port = getPort();
		String host = uri.getHost() + ( 
			(port != WebSocketImpl.DEFAULT_PORT && port != WebSocketImpl.DEFAULT_WSS_PORT)
			? "":"" + port 
			: """" );

		HandshakeImpl1Client handshake = new HandshakeImpl1Client();
		handshake.setResourceDescriptor( path );
		handshake.put( ""Host"", host );
		if( headers != null ) {
			for( Map.Entry<String,String> kv : headers.entrySet() ) {
				handshake.put( kv.getKey(), kv.getValue() );
			}
		}
		engine.startHandshake( handshake );
	}","['private', 'void', 'sendHandshake', '(', ')', 'throws', 'InvalidHandshakeException', '{', 'String', 'path', ';', 'String', 'part1', '=', 'uri', '.', 'getRawPath', '(', ')', ';', 'String', 'part2', '=', 'uri', '.', 'getRawQuery', '(', ')', ';', 'if', '(', 'part1', '==', 'null', '||', 'part1', '.', 'length', '(', ')', '==', '0', ')', 'path', '=', '""/""', ';', 'else', 'path', '=', 'part1', ';', 'if', '(', 'part2', '!=', 'null', ')', 'path', '+=', ""'"", ""'"", '+', 'part2', ';', 'int', 'port', '=', 'getPort', '(', ')', ';', 'String', 'host', '=', 'uri', '.', 'getHost', '(', ')', '+', '(', '(', 'port', '!=', 'WebSocketImpl', '.', 'DEFAULT_PORT', '&&', 'port', '!=', 'WebSocketImpl', '.', 'DEFAULT_WSS_PORT', ')', '?', '"":""', '+', 'port', ':', '""""', ')', ';', 'HandshakeImpl1Client', 'handshake', '=', 'new', 'HandshakeImpl1Client', '(', ')', ';', 'handshake', '.', 'setResourceDescriptor', '(', 'path', ')', ';', 'handshake', '.', 'put', '(', '""Host""', ',', 'host', ')', ';', 'if', '(', 'headers', '!=', 'null', ')', '{', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'String', '>', 'kv', ':', 'headers', '.', 'entrySet', '(', ')', ')', '{', 'handshake', '.', 'put', '(', 'kv', '.', 'getKey', '(', ')', ',', 'kv', '.', 'getValue', '(', ')', ')', ';', '}', '}', 'engine', '.', 'startHandshake', '(', 'handshake', ')', ';', '}']","Create and send the handshake to the other endpoint
@throws InvalidHandshakeException  a invalid handshake was created","['Create', 'and', 'send', 'the', 'handshake', 'to', 'the', 'other', 'endpoint']",73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9,https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/client/WebSocketClient.java#L501-L526,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/query/OQueryAbstract.java,OQueryAbstract.setFetchPlan,"public OQueryAbstract setFetchPlan(final String fetchPlan) {
    OFetchHelper.checkFetchPlanValid(fetchPlan);
    if (fetchPlan != null && fetchPlan.length() == 0)
      this.fetchPlan = null;
    else
      this.fetchPlan = fetchPlan;
    return this;
  }",java,"public OQueryAbstract setFetchPlan(final String fetchPlan) {
    OFetchHelper.checkFetchPlanValid(fetchPlan);
    if (fetchPlan != null && fetchPlan.length() == 0)
      this.fetchPlan = null;
    else
      this.fetchPlan = fetchPlan;
    return this;
  }","['public', 'OQueryAbstract', 'setFetchPlan', '(', 'final', 'String', 'fetchPlan', ')', '{', 'OFetchHelper', '.', 'checkFetchPlanValid', '(', 'fetchPlan', ')', ';', 'if', '(', 'fetchPlan', '!=', 'null', '&&', 'fetchPlan', '.', 'length', '(', ')', '==', '0', ')', 'this', '.', 'fetchPlan', '=', 'null', ';', 'else', 'this', '.', 'fetchPlan', '=', 'fetchPlan', ';', 'return', 'this', ';', '}']",Sets the fetch plan to use.,"['Sets', 'the', 'fetch', 'plan', 'to', 'use', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/query/OQueryAbstract.java#L46-L53,test
OpenEstate/OpenEstate-IO,ImmobiliareIT/src/main/jaxb/org/openestate/io/immobiliare_it/xml/LocationStructure.java,LocationStructure.setCity,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:48:12+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setCity(LocationStructure.City value) {
        this.city = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:48:12+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setCity(LocationStructure.City value) {
        this.city = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:48:12+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setCity', '(', 'LocationStructure', '.', 'City', 'value', ')', '{', 'this', '.', 'city', '=', 'value', ';', '}']","Sets the value of the city property.

@param value
allowed object is
{@link LocationStructure.City }","['Sets', 'the', 'value', 'of', 'the', 'city', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/ImmobiliareIT/src/main/jaxb/org/openestate/io/immobiliare_it/xml/LocationStructure.java#L244-L247,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/AttributeContainerHelper.java,AttributeContainerHelper.addAll,"@Override
  public void addAll(Iterable<Attribute> atts) {
    for (Attribute att : atts) addAttribute(att);
  }",java,"@Override
  public void addAll(Iterable<Attribute> atts) {
    for (Attribute att : atts) addAttribute(att);
  }","['@', 'Override', 'public', 'void', 'addAll', '(', 'Iterable', '<', 'Attribute', '>', 'atts', ')', '{', 'for', '(', 'Attribute', 'att', ':', 'atts', ')', 'addAttribute', '(', 'att', ')', ';', '}']",Add all; replace old if has same name,"['Add', 'all', ';', 'replace', 'old', 'if', 'has', 'same', 'name']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/AttributeContainerHelper.java#L60-L63,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagLibraryInfoImpl.java,TagLibraryInfoImpl.getResourceAsStream,"private InputStream getResourceAsStream(String uri) 
        throws JasperException
    {
        try {
            // see if file exists on the filesystem first
            String real = ctxt.getRealPath(uri);
            if (real == null) {
                return ctxt.getResourceAsStream(uri);
            } else {
                return new FileInputStream(real);
            }
        }
        catch (FileNotFoundException ex) {
            // if file not found on filesystem, get the resource through
            // the context
            return ctxt.getResourceAsStream(uri);
        }
       
    }",java,"private InputStream getResourceAsStream(String uri) 
        throws JasperException
    {
        try {
            // see if file exists on the filesystem first
            String real = ctxt.getRealPath(uri);
            if (real == null) {
                return ctxt.getResourceAsStream(uri);
            } else {
                return new FileInputStream(real);
            }
        }
        catch (FileNotFoundException ex) {
            // if file not found on filesystem, get the resource through
            // the context
            return ctxt.getResourceAsStream(uri);
        }
       
    }","['private', 'InputStream', 'getResourceAsStream', '(', 'String', 'uri', ')', 'throws', 'JasperException', '{', 'try', '{', '// see if file exists on the filesystem first', 'String', 'real', '=', 'ctxt', '.', 'getRealPath', '(', 'uri', ')', ';', 'if', '(', 'real', '==', 'null', ')', '{', 'return', 'ctxt', '.', 'getResourceAsStream', '(', 'uri', ')', ';', '}', 'else', '{', 'return', 'new', 'FileInputStream', '(', 'real', ')', ';', '}', '}', 'catch', '(', 'FileNotFoundException', 'ex', ')', '{', '// if file not found on filesystem, get the resource through', '// the context', 'return', 'ctxt', '.', 'getResourceAsStream', '(', 'uri', ')', ';', '}', '}']",the following is a workaround until these problems are resolved.,"['the', 'following', 'is', 'a', 'workaround', 'until', 'these', 'problems', 'are', 'resolved', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagLibraryInfoImpl.java#L147-L165,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/util/StringUtil2.java,StringUtil2.replace,"static public String replace(String s, char out, String in) {
    if (s.indexOf(out) < 0) {
      return s;
    }

    // gotta do it
    StringBuilder sb = new StringBuilder(s);
    replace(sb, out, in);
    return sb.toString();
  }",java,"static public String replace(String s, char out, String in) {
    if (s.indexOf(out) < 0) {
      return s;
    }

    // gotta do it
    StringBuilder sb = new StringBuilder(s);
    replace(sb, out, in);
    return sb.toString();
  }","['static', 'public', 'String', 'replace', '(', 'String', 's', ',', 'char', 'out', ',', 'String', 'in', ')', '{', 'if', '(', 's', '.', 'indexOf', '(', 'out', ')', '<', '0', ')', '{', 'return', 's', ';', '}', '// gotta do it\r', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', 's', ')', ';', 'replace', '(', 'sb', ',', 'out', ',', 'in', ')', ';', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']","Replace any char ""out"" in s with ""in"".

@param s   string to replace
@param out replace this character
@param in  with this string
@return modified string if needed","['Replace', 'any', 'char', 'out', 'in', 's', 'with', 'in', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/util/StringUtil2.java#L391-L400,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/nlp/Token.java,Token.getDepLabel,"public String getDepLabel() {
    if (Token_Type.featOkTst && ((Token_Type)jcasType).casFeat_depLabel == null)
      jcasType.jcas.throwFeatMissing(""depLabel"", ""edu.cmu.lti.oaqa.type.nlp.Token"");
    return jcasType.ll_cas.ll_getStringValue(addr, ((Token_Type)jcasType).casFeatCode_depLabel);}",java,"public String getDepLabel() {
    if (Token_Type.featOkTst && ((Token_Type)jcasType).casFeat_depLabel == null)
      jcasType.jcas.throwFeatMissing(""depLabel"", ""edu.cmu.lti.oaqa.type.nlp.Token"");
    return jcasType.ll_cas.ll_getStringValue(addr, ((Token_Type)jcasType).casFeatCode_depLabel);}","['public', 'String', 'getDepLabel', '(', ')', '{', 'if', '(', 'Token_Type', '.', 'featOkTst', '&&', '(', '(', 'Token_Type', ')', 'jcasType', ')', '.', 'casFeat_depLabel', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""depLabel""', ',', '""edu.cmu.lti.oaqa.type.nlp.Token""', ')', ';', 'return', 'jcasType', '.', 'll_cas', '.', 'll_getStringValue', '(', 'addr', ',', '(', '(', 'Token_Type', ')', 'jcasType', ')', '.', 'casFeatCode_depLabel', ')', ';', '}']","getter for depLabel - gets The dependency label of the token with respect to its head.
@generated
@return value of the feature","['getter', 'for', 'depLabel', '-', 'gets', 'The', 'dependency', 'label', 'of', 'the', 'token', 'with', 'respect', 'to', 'its', 'head', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/nlp/Token.java#L108-L111,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/properties/EventPropertiesAssistant.java,EventPropertiesAssistant.registerEventID,"public void registerEventID(String description, String key, String value) {
        BufferedWriter bufferedWriter;
        FileOutputStream out = null;
        try {
            out = new FileOutputStream(eventPropertiesPath, true);
            bufferedWriter = new BufferedWriter(new OutputStreamWriter(out));
            doWithLock(out.getChannel(), lock -> {
                unlockedReloadFile();
                if (getEventID(key) != null) {
                    return;
                }
                try {
                    bufferedWriter.write(""\n\n"" + key + ""_DESCRIPTION = "" + description + ""\n"" + key + "" = "" + value);
                    bufferedWriter.flush();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            });
        } catch (FileNotFoundException e) {
            error(""Unable find file"", e);
        } finally {
            try {
                if (out != null) {
                    out.close();
                }
            } catch (IOException e) {
                error(""Unable to close lock"", e);
            }
        }
    }",java,"public void registerEventID(String description, String key, String value) {
        BufferedWriter bufferedWriter;
        FileOutputStream out = null;
        try {
            out = new FileOutputStream(eventPropertiesPath, true);
            bufferedWriter = new BufferedWriter(new OutputStreamWriter(out));
            doWithLock(out.getChannel(), lock -> {
                unlockedReloadFile();
                if (getEventID(key) != null) {
                    return;
                }
                try {
                    bufferedWriter.write(""\n\n"" + key + ""_DESCRIPTION = "" + description + ""\n"" + key + "" = "" + value);
                    bufferedWriter.flush();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            });
        } catch (FileNotFoundException e) {
            error(""Unable find file"", e);
        } finally {
            try {
                if (out != null) {
                    out.close();
                }
            } catch (IOException e) {
                error(""Unable to close lock"", e);
            }
        }
    }","['public', 'void', 'registerEventID', '(', 'String', 'description', ',', 'String', 'key', ',', 'String', 'value', ')', '{', 'BufferedWriter', 'bufferedWriter', ';', 'FileOutputStream', 'out', '=', 'null', ';', 'try', '{', 'out', '=', 'new', 'FileOutputStream', '(', 'eventPropertiesPath', ',', 'true', ')', ';', 'bufferedWriter', '=', 'new', 'BufferedWriter', '(', 'new', 'OutputStreamWriter', '(', 'out', ')', ')', ';', 'doWithLock', '(', 'out', '.', 'getChannel', '(', ')', ',', 'lock', '->', '{', 'unlockedReloadFile', '(', ')', ';', 'if', '(', 'getEventID', '(', 'key', ')', '!=', 'null', ')', '{', 'return', ';', '}', 'try', '{', 'bufferedWriter', '.', 'write', '(', '""\\n\\n""', '+', 'key', '+', '""_DESCRIPTION = ""', '+', 'description', '+', '""\\n""', '+', 'key', '+', '"" = ""', '+', 'value', ')', ';', 'bufferedWriter', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'error', '(', '""Unable find file""', ',', 'e', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'out', '!=', 'null', ')', '{', 'out', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'error', '(', '""Unable to close lock""', ',', 'e', ')', ';', '}', '}', '}']","Registers or adds an event to the local_events.properties file

@param description a simple description of the Event
@param key the key with which to store the event ID
@param value the complete event ID","['Registers', 'or', 'adds', 'an', 'event', 'to', 'the', 'local_events', '.', 'properties', 'file']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/properties/EventPropertiesAssistant.java#L128-L157,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,SymbolTable.addConstantLongOrDouble,"private void addConstantLongOrDouble(final int index, final int tag, final long value) {
    add(new Entry(index, tag, value, hash(tag, value)));
  }",java,"private void addConstantLongOrDouble(final int index, final int tag, final long value) {
    add(new Entry(index, tag, value, hash(tag, value)));
  }","['private', 'void', 'addConstantLongOrDouble', '(', 'final', 'int', 'index', ',', 'final', 'int', 'tag', ',', 'final', 'long', 'value', ')', '{', 'add', '(', 'new', 'Entry', '(', 'index', ',', 'tag', ',', 'value', ',', 'hash', '(', 'tag', ',', 'value', ')', ')', ')', ';', '}']","Adds a new CONSTANT_Long_info or CONSTANT_Double_info to the constant pool of this symbol
table.

@param index the constant pool index of the new Symbol.
@param tag one of {@link Symbol#CONSTANT_LONG_TAG} or {@link Symbol#CONSTANT_DOUBLE_TAG}.
@param value a long or double.","['Adds', 'a', 'new', 'CONSTANT_Long_info', 'or', 'CONSTANT_Double_info', 'to', 'the', 'constant', 'pool', 'of', 'this', 'symbol', 'table', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java#L715-L717,test
rupertlssmith/lojix,lojix/learning/src/main/com/thesett/aima/learning/decisiontree/prototype/Decision.java,Decision.initializeLookups,"public void initializeLookups(DecisionTree thisNode)
    {
        // Scan over all the decision trees children at this point inserting them into the lookup table depending
        // on the ordinal of the attribute value that matches them.
        for (Iterator<Tree<DecisionTreeElement>> i = thisNode.getChildIterator(); i.hasNext();)
        {
            DecisionTree nextChildTree = (DecisionTree) i.next();

            // Get the matching attribute value from the childs decision tree element.
            OrdinalAttribute matchingValue = nextChildTree.getElement().getAttributeValue();

            // Insert the matching sub-tree into the lookup table.
            decisions[matchingValue.ordinal()] = nextChildTree;
        }
    }",java,"public void initializeLookups(DecisionTree thisNode)
    {
        // Scan over all the decision trees children at this point inserting them into the lookup table depending
        // on the ordinal of the attribute value that matches them.
        for (Iterator<Tree<DecisionTreeElement>> i = thisNode.getChildIterator(); i.hasNext();)
        {
            DecisionTree nextChildTree = (DecisionTree) i.next();

            // Get the matching attribute value from the childs decision tree element.
            OrdinalAttribute matchingValue = nextChildTree.getElement().getAttributeValue();

            // Insert the matching sub-tree into the lookup table.
            decisions[matchingValue.ordinal()] = nextChildTree;
        }
    }","['public', 'void', 'initializeLookups', '(', 'DecisionTree', 'thisNode', ')', '{', '// Scan over all the decision trees children at this point inserting them into the lookup table depending', '// on the ordinal of the attribute value that matches them.', 'for', '(', 'Iterator', '<', 'Tree', '<', 'DecisionTreeElement', '>', '>', 'i', '=', 'thisNode', '.', 'getChildIterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'DecisionTree', 'nextChildTree', '=', '(', 'DecisionTree', ')', 'i', '.', 'next', '(', ')', ';', '// Get the matching attribute value from the childs decision tree element.', 'OrdinalAttribute', 'matchingValue', '=', 'nextChildTree', '.', 'getElement', '(', ')', '.', 'getAttributeValue', '(', ')', ';', '// Insert the matching sub-tree into the lookup table.', 'decisions', '[', 'matchingValue', '.', 'ordinal', '(', ')', ']', '=', 'nextChildTree', ';', '}', '}']","Initializes the lookup table for this decision node. The specified decision tree that corresponds to this node is
used to extract all the possible outcomes for this decision and these are stored in a lookup table so that future
decisions made with this tree will run faster.

@param thisNode the decision tree that this decision node is the element from.","['Initializes', 'the', 'lookup', 'table', 'for', 'this', 'decision', 'node', '.', 'The', 'specified', 'decision', 'tree', 'that', 'corresponds', 'to', 'this', 'node', 'is', 'used', 'to', 'extract', 'all', 'the', 'possible', 'outcomes', 'for', 'this', 'decision', 'and', 'these', 'are', 'stored', 'in', 'a', 'lookup', 'table', 'so', 'that', 'future', 'decisions', 'made', 'with', 'this', 'tree', 'will', 'run', 'faster', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/learning/src/main/com/thesett/aima/learning/decisiontree/prototype/Decision.java#L119-L133,test
wro4j/wro4j,wro4j-extensions/src/main/java/ro/isdc/wro/extensions/script/RhinoScriptBuilder.java,RhinoScriptBuilder.evaluate,"public Object evaluate(final Reader reader, final String sourceName)
    throws IOException {
    notNull(reader);
    try {
      return evaluate(IOUtils.toString(reader), sourceName);
    } finally {
      reader.close();
    }
  }",java,"public Object evaluate(final Reader reader, final String sourceName)
    throws IOException {
    notNull(reader);
    try {
      return evaluate(IOUtils.toString(reader), sourceName);
    } finally {
      reader.close();
    }
  }","['public', 'Object', 'evaluate', '(', 'final', 'Reader', 'reader', ',', 'final', 'String', 'sourceName', ')', 'throws', 'IOException', '{', 'notNull', '(', 'reader', ')', ';', 'try', '{', 'return', 'evaluate', '(', 'IOUtils', '.', 'toString', '(', 'reader', ')', ',', 'sourceName', ')', ';', '}', 'finally', '{', 'reader', '.', 'close', '(', ')', ';', '}', '}']","Evaluates a script from a reader.

@param reader {@link Reader} of the script to evaluate.
@param sourceName the name of the evaluated script.
@return evaluated object.
@throws IOException if the script couldn't be retrieved.","['Evaluates', 'a', 'script', 'from', 'a', 'reader', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/script/RhinoScriptBuilder.java#L180-L188,test
eclipse/packagedrone,bundles/org.eclipse.packagedrone.repo.adapter.deb/src/org/eclipse/packagedrone/repo/adapter/deb/aspect/internal/RepoBuilder.java,RepoBuilder.write,"protected static void write ( final StringWriter writer, final String fieldName, final String value )
    {
        writer.write ( fieldName + "": "" + value + ""\n"" );
    }",java,"protected static void write ( final StringWriter writer, final String fieldName, final String value )
    {
        writer.write ( fieldName + "": "" + value + ""\n"" );
    }","['protected', 'static', 'void', 'write', '(', 'final', 'StringWriter', 'writer', ',', 'final', 'String', 'fieldName', ',', 'final', 'String', 'value', ')', '{', 'writer', '.', 'write', '(', 'fieldName', '+', '"": ""', '+', 'value', '+', '""\\n""', ')', ';', '}']","Write a field

@param writer
the writer to use
@param fieldName
the field name
@param value
the value, should not be <code>null</code> since this would
cause the string <q>null</q> in the file.","['Write', 'a', 'field']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.eclipse.packagedrone.repo.adapter.deb/src/org/eclipse/packagedrone/repo/adapter/deb/aspect/internal/RepoBuilder.java#L517-L520,test
lessthanoptimal/GeoRegression,main/src/georegression/metric/Intersection3D_I32.java,Intersection3D_I32.contained,"public static boolean contained( Box3D_I32 boxA , Box3D_I32 boxB ) {
		return( boxA.p0.x <= boxB.p0.x && boxA.p1.x >= boxB.p1.x &&
				boxA.p0.y <= boxB.p0.y && boxA.p1.y >= boxB.p1.y &&
				boxA.p0.z <= boxB.p0.z && boxA.p1.z >= boxB.p1.z );
	}",java,"public static boolean contained( Box3D_I32 boxA , Box3D_I32 boxB ) {
		return( boxA.p0.x <= boxB.p0.x && boxA.p1.x >= boxB.p1.x &&
				boxA.p0.y <= boxB.p0.y && boxA.p1.y >= boxB.p1.y &&
				boxA.p0.z <= boxB.p0.z && boxA.p1.z >= boxB.p1.z );
	}","['public', 'static', 'boolean', 'contained', '(', 'Box3D_I32', 'boxA', ',', 'Box3D_I32', 'boxB', ')', '{', 'return', '(', 'boxA', '.', 'p0', '.', 'x', '<=', 'boxB', '.', 'p0', '.', 'x', '&&', 'boxA', '.', 'p1', '.', 'x', '>=', 'boxB', '.', 'p1', '.', 'x', '&&', 'boxA', '.', 'p0', '.', 'y', '<=', 'boxB', '.', 'p0', '.', 'y', '&&', 'boxA', '.', 'p1', '.', 'y', '>=', 'boxB', '.', 'p1', '.', 'y', '&&', 'boxA', '.', 'p0', '.', 'z', '<=', 'boxB', '.', 'p0', '.', 'z', '&&', 'boxA', '.', 'p1', '.', 'z', '>=', 'boxB', '.', 'p1', '.', 'z', ')', ';', '}']","Returns true if boxB is contained inside of or is identical to boxA.

@param boxA Box
@param boxB Box which is being tested to see if it is inside of boxA
@return true if inside/identical or false if outside","['Returns', 'true', 'if', 'boxB', 'is', 'contained', 'inside', 'of', 'or', 'is', 'identical', 'to', 'boxA', '.']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/metric/Intersection3D_I32.java#L50-L54,test
wildfly/wildfly,legacy/messaging/src/main/java/org/jboss/as/messaging/MigrateOperation.java,MigrateOperation.migrateGenericTransport,"private void migrateGenericTransport(ModelNode addOperation) {
        String factoryClass = addOperation.get(FACTORY_CLASS.getName()).asString();
        final String newFactoryClass;
        switch (factoryClass) {
            case HORNETQ_NETTY_ACCEPTOR_FACTORY:
                newFactoryClass = ARTEMIS_NETTY_ACCEPTOR_FACTORY;
                break;
            case HORNETQ_NETTY_CONNECTOR_FACTORY:
                newFactoryClass = ARTEMIS_NETTY_CONNECTOR_FACTORY;
                break;
            default:
                newFactoryClass = factoryClass;
        }
        addOperation.get(FACTORY_CLASS.getName()).set(newFactoryClass);
    }",java,"private void migrateGenericTransport(ModelNode addOperation) {
        String factoryClass = addOperation.get(FACTORY_CLASS.getName()).asString();
        final String newFactoryClass;
        switch (factoryClass) {
            case HORNETQ_NETTY_ACCEPTOR_FACTORY:
                newFactoryClass = ARTEMIS_NETTY_ACCEPTOR_FACTORY;
                break;
            case HORNETQ_NETTY_CONNECTOR_FACTORY:
                newFactoryClass = ARTEMIS_NETTY_CONNECTOR_FACTORY;
                break;
            default:
                newFactoryClass = factoryClass;
        }
        addOperation.get(FACTORY_CLASS.getName()).set(newFactoryClass);
    }","['private', 'void', 'migrateGenericTransport', '(', 'ModelNode', 'addOperation', ')', '{', 'String', 'factoryClass', '=', 'addOperation', '.', 'get', '(', 'FACTORY_CLASS', '.', 'getName', '(', ')', ')', '.', 'asString', '(', ')', ';', 'final', 'String', 'newFactoryClass', ';', 'switch', '(', 'factoryClass', ')', '{', 'case', 'HORNETQ_NETTY_ACCEPTOR_FACTORY', ':', 'newFactoryClass', '=', 'ARTEMIS_NETTY_ACCEPTOR_FACTORY', ';', 'break', ';', 'case', 'HORNETQ_NETTY_CONNECTOR_FACTORY', ':', 'newFactoryClass', '=', 'ARTEMIS_NETTY_CONNECTOR_FACTORY', ';', 'break', ';', 'default', ':', 'newFactoryClass', '=', 'factoryClass', ';', '}', 'addOperation', '.', 'get', '(', 'FACTORY_CLASS', '.', 'getName', '(', ')', ')', '.', 'set', '(', 'newFactoryClass', ')', ';', '}']","For generic acceptor and connectors, migrate their factory-class attribute
if they are using the default Netty ones.","['For', 'generic', 'acceptor', 'and', 'connectors', 'migrate', 'their', 'factory', '-', 'class', 'attribute', 'if', 'they', 'are', 'using', 'the', 'default', 'Netty', 'ones', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/legacy/messaging/src/main/java/org/jboss/as/messaging/MigrateOperation.java#L613-L627,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft/point/standard/TableAnalyzer.java,TableAnalyzer.analyze,"private void analyze(FeatureType wantFeatureType) throws IOException {
    // for netcdf-3 files, convert record dimension to structure
    // LOOK may be problems when served via opendap
    boolean structAdded = (Boolean) ds.sendIospMessage(NetcdfFile.IOSP_MESSAGE_ADD_RECORD_STRUCTURE);

    if (tc == null) {
      makeTablesDefault(structAdded);
      makeNestedTables();

    } else {
      configResult = tc.getConfig(wantFeatureType, ds, errlog);
      if (configResult != null)
        addTableRecurse( configResult); // kinda stupid
      else { // use default
        makeTablesDefault(structAdded);
        makeNestedTables();
      }
    }

    // find the leaves
    for (TableConfig config : tableSet) {
      if (config.children == null) { // its a leaf
        NestedTable flatTable = new NestedTable(ds, config, errlog);
        leaves.add(flatTable);
      }
    }

    if (PointDatasetStandardFactory.showTables)
      getDetailInfo( new Formatter( System.out));
  }",java,"private void analyze(FeatureType wantFeatureType) throws IOException {
    // for netcdf-3 files, convert record dimension to structure
    // LOOK may be problems when served via opendap
    boolean structAdded = (Boolean) ds.sendIospMessage(NetcdfFile.IOSP_MESSAGE_ADD_RECORD_STRUCTURE);

    if (tc == null) {
      makeTablesDefault(structAdded);
      makeNestedTables();

    } else {
      configResult = tc.getConfig(wantFeatureType, ds, errlog);
      if (configResult != null)
        addTableRecurse( configResult); // kinda stupid
      else { // use default
        makeTablesDefault(structAdded);
        makeNestedTables();
      }
    }

    // find the leaves
    for (TableConfig config : tableSet) {
      if (config.children == null) { // its a leaf
        NestedTable flatTable = new NestedTable(ds, config, errlog);
        leaves.add(flatTable);
      }
    }

    if (PointDatasetStandardFactory.showTables)
      getDetailInfo( new Formatter( System.out));
  }","['private', 'void', 'analyze', '(', 'FeatureType', 'wantFeatureType', ')', 'throws', 'IOException', '{', '// for netcdf-3 files, convert record dimension to structure\r', '// LOOK may be problems when served via opendap\r', 'boolean', 'structAdded', '=', '(', 'Boolean', ')', 'ds', '.', 'sendIospMessage', '(', 'NetcdfFile', '.', 'IOSP_MESSAGE_ADD_RECORD_STRUCTURE', ')', ';', 'if', '(', 'tc', '==', 'null', ')', '{', 'makeTablesDefault', '(', 'structAdded', ')', ';', 'makeNestedTables', '(', ')', ';', '}', 'else', '{', 'configResult', '=', 'tc', '.', 'getConfig', '(', 'wantFeatureType', ',', 'ds', ',', 'errlog', ')', ';', 'if', '(', 'configResult', '!=', 'null', ')', 'addTableRecurse', '(', 'configResult', ')', ';', '// kinda stupid\r', 'else', '{', '// use default\r', 'makeTablesDefault', '(', 'structAdded', ')', ';', 'makeNestedTables', '(', ')', ';', '}', '}', '// find the leaves\r', 'for', '(', 'TableConfig', 'config', ':', 'tableSet', ')', '{', 'if', '(', 'config', '.', 'children', '==', 'null', ')', '{', '// its a leaf\r', 'NestedTable', 'flatTable', '=', 'new', 'NestedTable', '(', 'ds', ',', 'config', ',', 'errlog', ')', ';', 'leaves', '.', 'add', '(', 'flatTable', ')', ';', '}', '}', 'if', '(', 'PointDatasetStandardFactory', '.', 'showTables', ')', 'getDetailInfo', '(', 'new', 'Formatter', '(', 'System', '.', 'out', ')', ')', ';', '}']","Make a NestedTable object for the dataset.
@param wantFeatureType want this FeatureType
@throws IOException on read error","['Make', 'a', 'NestedTable', 'object', 'for', 'the', 'dataset', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/TableAnalyzer.java#L383-L412,test
Koekiebox-PTY-LTD/Fluid,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/ABaseClientWS.java,ABaseClientWS.getJsonResponseHandler,"private ResponseHandler<String> getJsonResponseHandler(final String urlCalledParam) {
		// Create a custom response handler
		ResponseHandler<String> responseHandler = new ResponseHandler<String>() {

			/**
			 * Process the {@code responseParam} and return text if valid.
			 *
			 * @param responseParam The HTTP response from the server.
			 * @return Text response.
			 * @throws IOException If there are any communication or I/O problems.
			 */
			public String handleResponse(final HttpResponse responseParam) throws IOException {

				int status = responseParam.getStatusLine().getStatusCode();
				if (status == 404) {
					throw new FluidClientException(
							""Endpoint for Service not found. URL [""+
									urlCalledParam+""]."",
							FluidClientException.ErrorCode.CONNECT_ERROR);
				} else if (status >= 200 && status < 300) {
					HttpEntity entity = responseParam.getEntity();

					String responseJsonString = (entity == null) ? null:
							EntityUtils.toString(entity);

					return responseJsonString;
				} else if (status == 400) {
					//Bad Request... Server Side Error meant for client...
					HttpEntity entity = responseParam.getEntity();

					String responseJsonString = (entity == null) ? null :
							EntityUtils.toString(entity);

					return responseJsonString;
				} else {
					HttpEntity entity = responseParam.getEntity();

					String responseString = (entity != null) ?
							EntityUtils.toString(entity) : null;

					throw new FluidClientException(
							""Unexpected response status: "" + status+"". ""
							+responseParam.getStatusLine().getReasonPhrase()+"". \nResponse Text [""+
									responseString+""]"",
							FluidClientException.ErrorCode.IO_ERROR);
				}
			}
		};

		return responseHandler;
	}",java,"private ResponseHandler<String> getJsonResponseHandler(final String urlCalledParam) {
		// Create a custom response handler
		ResponseHandler<String> responseHandler = new ResponseHandler<String>() {

			/**
			 * Process the {@code responseParam} and return text if valid.
			 *
			 * @param responseParam The HTTP response from the server.
			 * @return Text response.
			 * @throws IOException If there are any communication or I/O problems.
			 */
			public String handleResponse(final HttpResponse responseParam) throws IOException {

				int status = responseParam.getStatusLine().getStatusCode();
				if (status == 404) {
					throw new FluidClientException(
							""Endpoint for Service not found. URL [""+
									urlCalledParam+""]."",
							FluidClientException.ErrorCode.CONNECT_ERROR);
				} else if (status >= 200 && status < 300) {
					HttpEntity entity = responseParam.getEntity();

					String responseJsonString = (entity == null) ? null:
							EntityUtils.toString(entity);

					return responseJsonString;
				} else if (status == 400) {
					//Bad Request... Server Side Error meant for client...
					HttpEntity entity = responseParam.getEntity();

					String responseJsonString = (entity == null) ? null :
							EntityUtils.toString(entity);

					return responseJsonString;
				} else {
					HttpEntity entity = responseParam.getEntity();

					String responseString = (entity != null) ?
							EntityUtils.toString(entity) : null;

					throw new FluidClientException(
							""Unexpected response status: "" + status+"". ""
							+responseParam.getStatusLine().getReasonPhrase()+"". \nResponse Text [""+
									responseString+""]"",
							FluidClientException.ErrorCode.IO_ERROR);
				}
			}
		};

		return responseHandler;
	}","['private', 'ResponseHandler', '<', 'String', '>', 'getJsonResponseHandler', '(', 'final', 'String', 'urlCalledParam', ')', '{', '// Create a custom response handler', 'ResponseHandler', '<', 'String', '>', 'responseHandler', '=', 'new', 'ResponseHandler', '<', 'String', '>', '(', ')', '{', '/**\n\t\t\t * Process the {@code responseParam} and return text if valid.\n\t\t\t *\n\t\t\t * @param responseParam The HTTP response from the server.\n\t\t\t * @return Text response.\n\t\t\t * @throws IOException If there are any communication or I/O problems.\n\t\t\t */', 'public', 'String', 'handleResponse', '(', 'final', 'HttpResponse', 'responseParam', ')', 'throws', 'IOException', '{', 'int', 'status', '=', 'responseParam', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ';', 'if', '(', 'status', '==', '404', ')', '{', 'throw', 'new', 'FluidClientException', '(', '""Endpoint for Service not found. URL [""', '+', 'urlCalledParam', '+', '""].""', ',', 'FluidClientException', '.', 'ErrorCode', '.', 'CONNECT_ERROR', ')', ';', '}', 'else', 'if', '(', 'status', '>=', '200', '&&', 'status', '<', '300', ')', '{', 'HttpEntity', 'entity', '=', 'responseParam', '.', 'getEntity', '(', ')', ';', 'String', 'responseJsonString', '=', '(', 'entity', '==', 'null', ')', '?', 'null', ':', 'EntityUtils', '.', 'toString', '(', 'entity', ')', ';', 'return', 'responseJsonString', ';', '}', 'else', 'if', '(', 'status', '==', '400', ')', '{', '//Bad Request... Server Side Error meant for client...', 'HttpEntity', 'entity', '=', 'responseParam', '.', 'getEntity', '(', ')', ';', 'String', 'responseJsonString', '=', '(', 'entity', '==', 'null', ')', '?', 'null', ':', 'EntityUtils', '.', 'toString', '(', 'entity', ')', ';', 'return', 'responseJsonString', ';', '}', 'else', '{', 'HttpEntity', 'entity', '=', 'responseParam', '.', 'getEntity', '(', ')', ';', 'String', 'responseString', '=', '(', 'entity', '!=', 'null', ')', '?', 'EntityUtils', '.', 'toString', '(', 'entity', ')', ':', 'null', ';', 'throw', 'new', 'FluidClientException', '(', '""Unexpected response status: ""', '+', 'status', '+', '"". ""', '+', 'responseParam', '.', 'getStatusLine', '(', ')', '.', 'getReasonPhrase', '(', ')', '+', '"". \\nResponse Text [""', '+', 'responseString', '+', '""]""', ',', 'FluidClientException', '.', 'ErrorCode', '.', 'IO_ERROR', ')', ';', '}', '}', '}', ';', 'return', 'responseHandler', ';', '}']","Get a text based response handler used mainly for JSON.

@param urlCalledParam The url called.
@return String based response handler.","['Get', 'a', 'text', 'based', 'response', 'handler', 'used', 'mainly', 'for', 'JSON', '.']",81153d865f71b84ca933532c7115717bc3979270,https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/ABaseClientWS.java#L910-L960,test
OpenEstate/OpenEstate-IO,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/GarageTyp.java,GarageTyp.getObjektKategorie2,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public GaragenKategorieTyp getObjektKategorie2() {
        if (objektKategorie2 == null) {
            return GaragenKategorieTyp.KEINE_ANGABE;
        } else {
            return objektKategorie2;
        }
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public GaragenKategorieTyp getObjektKategorie2() {
        if (objektKategorie2 == null) {
            return GaragenKategorieTyp.KEINE_ANGABE;
        } else {
            return objektKategorie2;
        }
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:52:47+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'GaragenKategorieTyp', 'getObjektKategorie2', '(', ')', '{', 'if', '(', 'objektKategorie2', '==', 'null', ')', '{', 'return', 'GaragenKategorieTyp', '.', 'KEINE_ANGABE', ';', '}', 'else', '{', 'return', 'objektKategorie2', ';', '}', '}']","Gets the value of the objektKategorie2 property.

@return
possible object is
{@link GaragenKategorieTyp }","['Gets', 'the', 'value', 'of', 'the', 'objektKategorie2', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/GarageTyp.java#L101-L108,test
PistoiaHELM/HELMNotationParser,src/main/java/org/helm/notation2/parser/StateMachineParser.java,StateMachineParser.checkGroupId,"public boolean checkGroupId(String d) {
	  Pattern p = Pattern.compile(""G[1-9][0-9]*"", Pattern.CASE_INSENSITIVE);
	  Matcher m = p.matcher(d);
    LOG.debug(""Validation of groupID:"");
    if (m.matches()) {
      LOG.debug(""GroupID is valid:"");
      return true;
    }
    LOG.debug(""GroupID is not valid:"");
    return false;
  }",java,"public boolean checkGroupId(String d) {
	  Pattern p = Pattern.compile(""G[1-9][0-9]*"", Pattern.CASE_INSENSITIVE);
	  Matcher m = p.matcher(d);
    LOG.debug(""Validation of groupID:"");
    if (m.matches()) {
      LOG.debug(""GroupID is valid:"");
      return true;
    }
    LOG.debug(""GroupID is not valid:"");
    return false;
  }","['public', 'boolean', 'checkGroupId', '(', 'String', 'd', ')', '{', 'Pattern', 'p', '=', 'Pattern', '.', 'compile', '(', '""G[1-9][0-9]*""', ',', 'Pattern', '.', 'CASE_INSENSITIVE', ')', ';', 'Matcher', 'm', '=', 'p', '.', 'matcher', '(', 'd', ')', ';', 'LOG', '.', 'debug', '(', '""Validation of groupID:""', ')', ';', 'if', '(', 'm', '.', 'matches', '(', ')', ')', '{', 'LOG', '.', 'debug', '(', '""GroupID is valid:""', ')', ';', 'return', 'true', ';', '}', 'LOG', '.', 'debug', '(', '""GroupID is not valid:""', ')', ';', 'return', 'false', ';', '}']","method to validate the group id

@param d ID of a group
@return true if the connection details are valid, false otherwise","['method', 'to', 'validate', 'the', 'group', 'id']",685d7ab7886e9b5cc15fb904025fe6eee703f8f6,https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/StateMachineParser.java#L176-L186,test
ReactiveX/RxJava,src/main/java/io/reactivex/internal/operators/observable/ObservableScalarXMap.java,ObservableScalarXMap.tryScalarXMapSubscribe,"@SuppressWarnings(""unchecked"")
    public static <T, R> boolean tryScalarXMapSubscribe(ObservableSource<T> source,
            Observer<? super R> observer,
            Function<? super T, ? extends ObservableSource<? extends R>> mapper) {
        if (source instanceof Callable) {
            T t;

            try {
                t = ((Callable<T>)source).call();
            } catch (Throwable ex) {
                Exceptions.throwIfFatal(ex);
                EmptyDisposable.error(ex, observer);
                return true;
            }

            if (t == null) {
                EmptyDisposable.complete(observer);
                return true;
            }

            ObservableSource<? extends R> r;

            try {
                r = ObjectHelper.requireNonNull(mapper.apply(t), ""The mapper returned a null ObservableSource"");
            } catch (Throwable ex) {
                Exceptions.throwIfFatal(ex);
                EmptyDisposable.error(ex, observer);
                return true;
            }

            if (r instanceof Callable) {
                R u;

                try {
                    u = ((Callable<R>)r).call();
                } catch (Throwable ex) {
                    Exceptions.throwIfFatal(ex);
                    EmptyDisposable.error(ex, observer);
                    return true;
                }

                if (u == null) {
                    EmptyDisposable.complete(observer);
                    return true;
                }
                ScalarDisposable<R> sd = new ScalarDisposable<R>(observer, u);
                observer.onSubscribe(sd);
                sd.run();
            } else {
                r.subscribe(observer);
            }

            return true;
        }
        return false;
    }",java,"@SuppressWarnings(""unchecked"")
    public static <T, R> boolean tryScalarXMapSubscribe(ObservableSource<T> source,
            Observer<? super R> observer,
            Function<? super T, ? extends ObservableSource<? extends R>> mapper) {
        if (source instanceof Callable) {
            T t;

            try {
                t = ((Callable<T>)source).call();
            } catch (Throwable ex) {
                Exceptions.throwIfFatal(ex);
                EmptyDisposable.error(ex, observer);
                return true;
            }

            if (t == null) {
                EmptyDisposable.complete(observer);
                return true;
            }

            ObservableSource<? extends R> r;

            try {
                r = ObjectHelper.requireNonNull(mapper.apply(t), ""The mapper returned a null ObservableSource"");
            } catch (Throwable ex) {
                Exceptions.throwIfFatal(ex);
                EmptyDisposable.error(ex, observer);
                return true;
            }

            if (r instanceof Callable) {
                R u;

                try {
                    u = ((Callable<R>)r).call();
                } catch (Throwable ex) {
                    Exceptions.throwIfFatal(ex);
                    EmptyDisposable.error(ex, observer);
                    return true;
                }

                if (u == null) {
                    EmptyDisposable.complete(observer);
                    return true;
                }
                ScalarDisposable<R> sd = new ScalarDisposable<R>(observer, u);
                observer.onSubscribe(sd);
                sd.run();
            } else {
                r.subscribe(observer);
            }

            return true;
        }
        return false;
    }","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', ',', 'R', '>', 'boolean', 'tryScalarXMapSubscribe', '(', 'ObservableSource', '<', 'T', '>', 'source', ',', 'Observer', '<', '?', 'super', 'R', '>', 'observer', ',', 'Function', '<', '?', 'super', 'T', ',', '?', 'extends', 'ObservableSource', '<', '?', 'extends', 'R', '>', '>', 'mapper', ')', '{', 'if', '(', 'source', 'instanceof', 'Callable', ')', '{', 'T', 't', ';', 'try', '{', 't', '=', '(', '(', 'Callable', '<', 'T', '>', ')', 'source', ')', '.', 'call', '(', ')', ';', '}', 'catch', '(', 'Throwable', 'ex', ')', '{', 'Exceptions', '.', 'throwIfFatal', '(', 'ex', ')', ';', 'EmptyDisposable', '.', 'error', '(', 'ex', ',', 'observer', ')', ';', 'return', 'true', ';', '}', 'if', '(', 't', '==', 'null', ')', '{', 'EmptyDisposable', '.', 'complete', '(', 'observer', ')', ';', 'return', 'true', ';', '}', 'ObservableSource', '<', '?', 'extends', 'R', '>', 'r', ';', 'try', '{', 'r', '=', 'ObjectHelper', '.', 'requireNonNull', '(', 'mapper', '.', 'apply', '(', 't', ')', ',', '""The mapper returned a null ObservableSource""', ')', ';', '}', 'catch', '(', 'Throwable', 'ex', ')', '{', 'Exceptions', '.', 'throwIfFatal', '(', 'ex', ')', ';', 'EmptyDisposable', '.', 'error', '(', 'ex', ',', 'observer', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'r', 'instanceof', 'Callable', ')', '{', 'R', 'u', ';', 'try', '{', 'u', '=', '(', '(', 'Callable', '<', 'R', '>', ')', 'r', ')', '.', 'call', '(', ')', ';', '}', 'catch', '(', 'Throwable', 'ex', ')', '{', 'Exceptions', '.', 'throwIfFatal', '(', 'ex', ')', ';', 'EmptyDisposable', '.', 'error', '(', 'ex', ',', 'observer', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'u', '==', 'null', ')', '{', 'EmptyDisposable', '.', 'complete', '(', 'observer', ')', ';', 'return', 'true', ';', '}', 'ScalarDisposable', '<', 'R', '>', 'sd', '=', 'new', 'ScalarDisposable', '<', 'R', '>', '(', 'observer', ',', 'u', ')', ';', 'observer', '.', 'onSubscribe', '(', 'sd', ')', ';', 'sd', '.', 'run', '(', ')', ';', '}', 'else', '{', 'r', '.', 'subscribe', '(', 'observer', ')', ';', '}', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","Tries to subscribe to a possibly Callable source's mapped ObservableSource.
@param <T> the input value type
@param <R> the output value type
@param source the source ObservableSource
@param observer the subscriber
@param mapper the function mapping a scalar value into an ObservableSource
@return true if successful, false if the caller should continue with the regular path.","['Tries', 'to', 'subscribe', 'to', 'a', 'possibly', 'Callable', 'source', 's', 'mapped', 'ObservableSource', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/operators/observable/ObservableScalarXMap.java#L47-L102,test
stanfy/enroscar,net/src/main/java/com/stanfy/enroscar/net/cache/BaseFileResponseCache.java,BaseFileResponseCache.newBodyInputStream,"private InputStream newBodyInputStream(final DiskLruCache.Snapshot snapshot) {
    return new FilterInputStream(snapshot.getInputStream(ENTRY_BODY)) {
      @Override public void close() throws IOException {
        snapshot.close();
        super.close();
      }
    };
  }",java,"private InputStream newBodyInputStream(final DiskLruCache.Snapshot snapshot) {
    return new FilterInputStream(snapshot.getInputStream(ENTRY_BODY)) {
      @Override public void close() throws IOException {
        snapshot.close();
        super.close();
      }
    };
  }","['private', 'InputStream', 'newBodyInputStream', '(', 'final', 'DiskLruCache', '.', 'Snapshot', 'snapshot', ')', '{', 'return', 'new', 'FilterInputStream', '(', 'snapshot', '.', 'getInputStream', '(', 'ENTRY_BODY', ')', ')', '{', '@', 'Override', 'public', 'void', 'close', '(', ')', 'throws', 'IOException', '{', 'snapshot', '.', 'close', '(', ')', ';', 'super', '.', 'close', '(', ')', ';', '}', '}', ';', '}']","Returns an input stream that reads the body of a snapshot, closing the
snapshot when the stream is closed.","['Returns', 'an', 'input', 'stream', 'that', 'reads', 'the', 'body', 'of', 'a', 'snapshot', 'closing', 'the', 'snapshot', 'when', 'the', 'stream', 'is', 'closed', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/net/src/main/java/com/stanfy/enroscar/net/cache/BaseFileResponseCache.java#L194-L201,test
wildfly/wildfly,ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerTask.java,TimerTask.retryTimeout,"protected void retryTimeout(TimerImpl timer) throws Exception {
        boolean callTimeout = false;

        timer.lock();
        try {
            if (timer.isActive()) {
                EJB3_TIMER_LOGGER.retryingTimeout(timer);
                timer.setTimerState(TimerState.RETRY_TIMEOUT, Thread.currentThread());
                timerService.persistTimer(timer, false);
                callTimeout = true;
            } else {
                EJB3_TIMER_LOGGER.timerNotActive(timer);
            }
        } finally {
            timer.unlock();
        }
        if(callTimeout) {
            this.callTimeout(timer);
        }
    }",java,"protected void retryTimeout(TimerImpl timer) throws Exception {
        boolean callTimeout = false;

        timer.lock();
        try {
            if (timer.isActive()) {
                EJB3_TIMER_LOGGER.retryingTimeout(timer);
                timer.setTimerState(TimerState.RETRY_TIMEOUT, Thread.currentThread());
                timerService.persistTimer(timer, false);
                callTimeout = true;
            } else {
                EJB3_TIMER_LOGGER.timerNotActive(timer);
            }
        } finally {
            timer.unlock();
        }
        if(callTimeout) {
            this.callTimeout(timer);
        }
    }","['protected', 'void', 'retryTimeout', '(', 'TimerImpl', 'timer', ')', 'throws', 'Exception', '{', 'boolean', 'callTimeout', '=', 'false', ';', 'timer', '.', 'lock', '(', ')', ';', 'try', '{', 'if', '(', 'timer', '.', 'isActive', '(', ')', ')', '{', 'EJB3_TIMER_LOGGER', '.', 'retryingTimeout', '(', 'timer', ')', ';', 'timer', '.', 'setTimerState', '(', 'TimerState', '.', 'RETRY_TIMEOUT', ',', 'Thread', '.', 'currentThread', '(', ')', ')', ';', 'timerService', '.', 'persistTimer', '(', 'timer', ',', 'false', ')', ';', 'callTimeout', '=', 'true', ';', '}', 'else', '{', 'EJB3_TIMER_LOGGER', '.', 'timerNotActive', '(', 'timer', ')', ';', '}', '}', 'finally', '{', 'timer', '.', 'unlock', '(', ')', ';', '}', 'if', '(', 'callTimeout', ')', '{', 'this', '.', 'callTimeout', '(', 'timer', ')', ';', '}', '}']","After a timeout failed the timer need to retried.
The method must lock the timer for state check and update but not during callTimeout run.

@param timer timer to retry and state updates
@throws Exception","['After', 'a', 'timeout', 'failed', 'the', 'timer', 'need', 'to', 'retried', '.', 'The', 'method', 'must', 'lock', 'the', 'timer', 'for', 'state', 'check', 'and', 'update', 'but', 'not', 'during', 'callTimeout', 'run', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerTask.java#L235-L254,test
oblac/jodd,jodd-mail/src/main/java/jodd/mail/SendMailSession.java,SendMailSession.setHeaders,"private void setHeaders(final Email emailWithData, final MimeMessage msgToSet) throws MessagingException {
		final Map<String, String> headers = emailWithData.headers();
		if (headers != null) {
			for (final Map.Entry<String, String> entry : headers.entrySet()) {
				msgToSet.setHeader(entry.getKey(), entry.getValue());
			}
		}
	}",java,"private void setHeaders(final Email emailWithData, final MimeMessage msgToSet) throws MessagingException {
		final Map<String, String> headers = emailWithData.headers();
		if (headers != null) {
			for (final Map.Entry<String, String> entry : headers.entrySet()) {
				msgToSet.setHeader(entry.getKey(), entry.getValue());
			}
		}
	}","['private', 'void', 'setHeaders', '(', 'final', 'Email', 'emailWithData', ',', 'final', 'MimeMessage', 'msgToSet', ')', 'throws', 'MessagingException', '{', 'final', 'Map', '<', 'String', ',', 'String', '>', 'headers', '=', 'emailWithData', '.', 'headers', '(', ')', ';', 'if', '(', 'headers', '!=', 'null', ')', '{', 'for', '(', 'final', 'Map', '.', 'Entry', '<', 'String', ',', 'String', '>', 'entry', ':', 'headers', '.', 'entrySet', '(', ')', ')', '{', 'msgToSet', '.', 'setHeader', '(', 'entry', '.', 'getKey', '(', ')', ',', 'entry', '.', 'getValue', '(', ')', ')', ';', '}', '}', '}']","Sets headers in msgToSet with headers from emailWithData.

@param emailWithData {@link Email} with data
@param msgToSet      {@link MimeMessage} to set data into.
@throws MessagingException if there is a failure","['Sets', 'headers', 'in', 'msgToSet', 'with', 'headers', 'from', 'emailWithData', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/SendMailSession.java#L151-L158,test
apache/parquet-mr,parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java,ParquetFileWriter.writeDataPage,"public void writeDataPage(
      int valueCount, int uncompressedPageSize,
      BytesInput bytes,
      Statistics statistics,
      long rowCount,
      Encoding rlEncoding,
      Encoding dlEncoding,
      Encoding valuesEncoding) throws IOException {
    long beforeHeader = out.getPos();
    innerWriteDataPage(valueCount, uncompressedPageSize, bytes, statistics, rlEncoding, dlEncoding, valuesEncoding);

    offsetIndexBuilder.add((int) (out.getPos() - beforeHeader), rowCount);
  }",java,"public void writeDataPage(
      int valueCount, int uncompressedPageSize,
      BytesInput bytes,
      Statistics statistics,
      long rowCount,
      Encoding rlEncoding,
      Encoding dlEncoding,
      Encoding valuesEncoding) throws IOException {
    long beforeHeader = out.getPos();
    innerWriteDataPage(valueCount, uncompressedPageSize, bytes, statistics, rlEncoding, dlEncoding, valuesEncoding);

    offsetIndexBuilder.add((int) (out.getPos() - beforeHeader), rowCount);
  }","['public', 'void', 'writeDataPage', '(', 'int', 'valueCount', ',', 'int', 'uncompressedPageSize', ',', 'BytesInput', 'bytes', ',', 'Statistics', 'statistics', ',', 'long', 'rowCount', ',', 'Encoding', 'rlEncoding', ',', 'Encoding', 'dlEncoding', ',', 'Encoding', 'valuesEncoding', ')', 'throws', 'IOException', '{', 'long', 'beforeHeader', '=', 'out', '.', 'getPos', '(', ')', ';', 'innerWriteDataPage', '(', 'valueCount', ',', 'uncompressedPageSize', ',', 'bytes', ',', 'statistics', ',', 'rlEncoding', ',', 'dlEncoding', ',', 'valuesEncoding', ')', ';', 'offsetIndexBuilder', '.', 'add', '(', '(', 'int', ')', '(', 'out', '.', 'getPos', '(', ')', '-', 'beforeHeader', ')', ',', 'rowCount', ')', ';', '}']","Writes a single page
@param valueCount count of values
@param uncompressedPageSize the size of the data once uncompressed
@param bytes the compressed data for the page without header
@param statistics the statistics of the page
@param rowCount the number of rows in the page
@param rlEncoding encoding of the repetition level
@param dlEncoding encoding of the definition level
@param valuesEncoding encoding of values
@throws IOException if any I/O error occurs during writing the file","['Writes', 'a', 'single', 'page']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java#L480-L492,test
ebourgeois/protobuf-serializer,src/main/java/ca/jeb/protobuf/internal/ProtobufSerializerUtils.java,ProtobufSerializerUtils.getPojoSetter,"public static final String getPojoSetter(ProtobufAttribute protobufAttribute, Field field)
  {
    final String fieldName = field.getName();
    final String upperClassName = field.getDeclaringClass().getCanonicalName();
    // Look at the cache first
    Map<String, String> map = CLASS_TO_FIELD_SETTERS_MAP_CACHE.get(upperClassName);
    if (map != null)
    {
      if (!map.isEmpty() && map.containsKey(fieldName))
      {
        return map.get(fieldName);
      }
    }
    else
    {
      map = new ConcurrentHashMap<>();
    }

    final String upperCaseFirstFieldName = JStringUtils.upperCaseFirst(field.getName());
    String setter = ""set"" + upperCaseFirstFieldName;

    if (!protobufAttribute.pojoSetter().isEmpty())
    {
      return protobufAttribute.pojoSetter();
    }

    map.put(fieldName, setter);
    CLASS_TO_FIELD_SETTERS_MAP_CACHE.put(upperClassName, map);

    return setter;
  }",java,"public static final String getPojoSetter(ProtobufAttribute protobufAttribute, Field field)
  {
    final String fieldName = field.getName();
    final String upperClassName = field.getDeclaringClass().getCanonicalName();
    // Look at the cache first
    Map<String, String> map = CLASS_TO_FIELD_SETTERS_MAP_CACHE.get(upperClassName);
    if (map != null)
    {
      if (!map.isEmpty() && map.containsKey(fieldName))
      {
        return map.get(fieldName);
      }
    }
    else
    {
      map = new ConcurrentHashMap<>();
    }

    final String upperCaseFirstFieldName = JStringUtils.upperCaseFirst(field.getName());
    String setter = ""set"" + upperCaseFirstFieldName;

    if (!protobufAttribute.pojoSetter().isEmpty())
    {
      return protobufAttribute.pojoSetter();
    }

    map.put(fieldName, setter);
    CLASS_TO_FIELD_SETTERS_MAP_CACHE.put(upperClassName, map);

    return setter;
  }","['public', 'static', 'final', 'String', 'getPojoSetter', '(', 'ProtobufAttribute', 'protobufAttribute', ',', 'Field', 'field', ')', '{', 'final', 'String', 'fieldName', '=', 'field', '.', 'getName', '(', ')', ';', 'final', 'String', 'upperClassName', '=', 'field', '.', 'getDeclaringClass', '(', ')', '.', 'getCanonicalName', '(', ')', ';', '// Look at the cache first', 'Map', '<', 'String', ',', 'String', '>', 'map', '=', 'CLASS_TO_FIELD_SETTERS_MAP_CACHE', '.', 'get', '(', 'upperClassName', ')', ';', 'if', '(', 'map', '!=', 'null', ')', '{', 'if', '(', '!', 'map', '.', 'isEmpty', '(', ')', '&&', 'map', '.', 'containsKey', '(', 'fieldName', ')', ')', '{', 'return', 'map', '.', 'get', '(', 'fieldName', ')', ';', '}', '}', 'else', '{', 'map', '=', 'new', 'ConcurrentHashMap', '<>', '(', ')', ';', '}', 'final', 'String', 'upperCaseFirstFieldName', '=', 'JStringUtils', '.', 'upperCaseFirst', '(', 'field', '.', 'getName', '(', ')', ')', ';', 'String', 'setter', '=', '""set""', '+', 'upperCaseFirstFieldName', ';', 'if', '(', '!', 'protobufAttribute', '.', 'pojoSetter', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'protobufAttribute', '.', 'pojoSetter', '(', ')', ';', '}', 'map', '.', 'put', '(', 'fieldName', ',', 'setter', ')', ';', 'CLASS_TO_FIELD_SETTERS_MAP_CACHE', '.', 'put', '(', 'upperClassName', ',', 'map', ')', ';', 'return', 'setter', ';', '}']","Retrieve the setter on the POJO class; default is to is ""set"" plus upper case first character of the field name.

@param protobufAttribute - {@link ProtobufAttribute}
@param field - {@link Field}
@return String - the name of the POJO setter","['Retrieve', 'the', 'setter', 'on', 'the', 'POJO', 'class', ';', 'default', 'is', 'to', 'is', 'set', 'plus', 'upper', 'case', 'first', 'character', 'of', 'the', 'field', 'name', '.']",c87fe6e5ebe6f0e77bf61f1bb661db5a7a5f9d8e,https://github.com/ebourgeois/protobuf-serializer/blob/c87fe6e5ebe6f0e77bf61f1bb661db5a7a5f9d8e/src/main/java/ca/jeb/protobuf/internal/ProtobufSerializerUtils.java#L284-L314,test
streamsets/datacollector,basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/http/HttpProcessor.java,HttpProcessor.parseResponse,"private Record parseResponse(InputStream response) throws StageException {
    Record record = null;
    if (conf.httpMethod == HttpMethod.HEAD) {
      // Head will have no body so can't be parsed.   Return an empty record.
      record = getContext().createRecord("""");
      record.set(Field.create(new HashMap()));

    } else if (response != null) {
      try (DataParser parser = parserFactory.getParser("""", response, ""0"")) {
        // A response may only contain a single record, so we only parse it once.
        record = parser.parse();
        if (conf.dataFormat == DataFormat.TEXT) {
          // Output is placed in a field ""/text"" so we remove it here.
          record.set(record.get(""/text""));
        }
      } catch (IOException | DataParserException e) {
        errorRecordHandler.onError(Errors.HTTP_00, e.toString(), e);
      }
    }
    return record;
  }",java,"private Record parseResponse(InputStream response) throws StageException {
    Record record = null;
    if (conf.httpMethod == HttpMethod.HEAD) {
      // Head will have no body so can't be parsed.   Return an empty record.
      record = getContext().createRecord("""");
      record.set(Field.create(new HashMap()));

    } else if (response != null) {
      try (DataParser parser = parserFactory.getParser("""", response, ""0"")) {
        // A response may only contain a single record, so we only parse it once.
        record = parser.parse();
        if (conf.dataFormat == DataFormat.TEXT) {
          // Output is placed in a field ""/text"" so we remove it here.
          record.set(record.get(""/text""));
        }
      } catch (IOException | DataParserException e) {
        errorRecordHandler.onError(Errors.HTTP_00, e.toString(), e);
      }
    }
    return record;
  }","['private', 'Record', 'parseResponse', '(', 'InputStream', 'response', ')', 'throws', 'StageException', '{', 'Record', 'record', '=', 'null', ';', 'if', '(', 'conf', '.', 'httpMethod', '==', 'HttpMethod', '.', 'HEAD', ')', '{', ""// Head will have no body so can't be parsed.   Return an empty record."", 'record', '=', 'getContext', '(', ')', '.', 'createRecord', '(', '""""', ')', ';', 'record', '.', 'set', '(', 'Field', '.', 'create', '(', 'new', 'HashMap', '(', ')', ')', ')', ';', '}', 'else', 'if', '(', 'response', '!=', 'null', ')', '{', 'try', '(', 'DataParser', 'parser', '=', 'parserFactory', '.', 'getParser', '(', '""""', ',', 'response', ',', '""0""', ')', ')', '{', '// A response may only contain a single record, so we only parse it once.', 'record', '=', 'parser', '.', 'parse', '(', ')', ';', 'if', '(', 'conf', '.', 'dataFormat', '==', 'DataFormat', '.', 'TEXT', ')', '{', '// Output is placed in a field ""/text"" so we remove it here.', 'record', '.', 'set', '(', 'record', '.', 'get', '(', '""/text""', ')', ')', ';', '}', '}', 'catch', '(', 'IOException', '|', 'DataParserException', 'e', ')', '{', 'errorRecordHandler', '.', 'onError', '(', 'Errors', '.', 'HTTP_00', ',', 'e', '.', 'toString', '(', ')', ',', 'e', ')', ';', '}', '}', 'return', 'record', ';', '}']","Parses the HTTP response text from a request into SDC Records

@param response HTTP response
@return an SDC record resulting from the response text
@throws StageException if the response could not be parsed","['Parses', 'the', 'HTTP', 'response', 'text', 'from', 'a', 'request', 'into', 'SDC', 'Records']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/http/HttpProcessor.java#L307-L327,test
subchen/jetbrick-all-1x,jetbrick-commons/src/main/java/jetbrick/beans/ClassLoaderUtils.java,ClassLoaderUtils.getResourceAsStream,"public static InputStream getResourceAsStream(String name, ClassLoader classLoader) throws IOException {
        URL url = getResource(name, classLoader);
        if (url != null) {
            return url.openStream();
        }
        return null;
    }",java,"public static InputStream getResourceAsStream(String name, ClassLoader classLoader) throws IOException {
        URL url = getResource(name, classLoader);
        if (url != null) {
            return url.openStream();
        }
        return null;
    }","['public', 'static', 'InputStream', 'getResourceAsStream', '(', 'String', 'name', ',', 'ClassLoader', 'classLoader', ')', 'throws', 'IOException', '{', 'URL', 'url', '=', 'getResource', '(', 'name', ',', 'classLoader', ')', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'return', 'url', '.', 'openStream', '(', ')', ';', '}', 'return', 'null', ';', '}']",Returns an input stream for reading the specified resource.,"['Returns', 'an', 'input', 'stream', 'for', 'reading', 'the', 'specified', 'resource', '.']",abe54629a508592287afe5ca4ffc93bf8bf4940c,https://github.com/subchen/jetbrick-all-1x/blob/abe54629a508592287afe5ca4ffc93bf8bf4940c/jetbrick-commons/src/main/java/jetbrick/beans/ClassLoaderUtils.java#L196-L202,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/music/player/Playlist.java,Playlist.export,"public HashMap<String, Object> export() {
        HashMap<String, Object> data = new HashMap<>();
        for (int i = 0; i < queue.size(); i++) {
            data.put(QUEUE_DESCRIPTOR+i, queue.get(i).export());
        }
        for (int i = 0; i < playbackModes.size(); i++) {
            data.put(PLAYBACK_MODE_DESCRIPTOR+i, playbackModes.get(i).name());
        }
        data.put(NAME_DESCRIPTOR, name);
        data.put(POSITION_DESCRIPTOR, position);
        data.put(DATA_DESCRIPTOR, this.data);
        return data;
    }",java,"public HashMap<String, Object> export() {
        HashMap<String, Object> data = new HashMap<>();
        for (int i = 0; i < queue.size(); i++) {
            data.put(QUEUE_DESCRIPTOR+i, queue.get(i).export());
        }
        for (int i = 0; i < playbackModes.size(); i++) {
            data.put(PLAYBACK_MODE_DESCRIPTOR+i, playbackModes.get(i).name());
        }
        data.put(NAME_DESCRIPTOR, name);
        data.put(POSITION_DESCRIPTOR, position);
        data.put(DATA_DESCRIPTOR, this.data);
        return data;
    }","['public', 'HashMap', '<', 'String', ',', 'Object', '>', 'export', '(', ')', '{', 'HashMap', '<', 'String', ',', 'Object', '>', 'data', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'queue', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'data', '.', 'put', '(', 'QUEUE_DESCRIPTOR', '+', 'i', ',', 'queue', '.', 'get', '(', 'i', ')', '.', 'export', '(', ')', ')', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'playbackModes', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'data', '.', 'put', '(', 'PLAYBACK_MODE_DESCRIPTOR', '+', 'i', ',', 'playbackModes', '.', 'get', '(', 'i', ')', '.', 'name', '(', ')', ')', ';', '}', 'data', '.', 'put', '(', 'NAME_DESCRIPTOR', ',', 'name', ')', ';', 'data', '.', 'put', '(', 'POSITION_DESCRIPTOR', ',', 'position', ')', ';', 'data', '.', 'put', '(', 'DATA_DESCRIPTOR', ',', 'this', '.', 'data', ')', ';', 'return', 'data', ';', '}']","exports the Playlist to a HashMap
@return a HashMap","['exports', 'the', 'Playlist', 'to', 'a', 'HashMap']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/Playlist.java#L224-L236,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/result/ServletDispatcherActionResult.java,ServletDispatcherActionResult.renderView,"@Override
	protected void renderView(final ActionRequest actionRequest, final String target) throws Exception {
		HttpServletRequest request = actionRequest.getHttpServletRequest();
		HttpServletResponse response = actionRequest.getHttpServletResponse();

		RequestDispatcher dispatcher = request.getRequestDispatcher(target);
		if (dispatcher == null) {
			response.sendError(SC_NOT_FOUND, ""Result not found: "" + target);	// should never happened
			return;
		}

		// If we're included, then include the view, otherwise do forward.
		// This allow the page to, for example, set content type.

		if (DispatcherUtil.isPageIncluded(request, response)) {
			dispatcher.include(request, response);
		} else {
			dispatcher.forward(request, response);
		}
	}",java,"@Override
	protected void renderView(final ActionRequest actionRequest, final String target) throws Exception {
		HttpServletRequest request = actionRequest.getHttpServletRequest();
		HttpServletResponse response = actionRequest.getHttpServletResponse();

		RequestDispatcher dispatcher = request.getRequestDispatcher(target);
		if (dispatcher == null) {
			response.sendError(SC_NOT_FOUND, ""Result not found: "" + target);	// should never happened
			return;
		}

		// If we're included, then include the view, otherwise do forward.
		// This allow the page to, for example, set content type.

		if (DispatcherUtil.isPageIncluded(request, response)) {
			dispatcher.include(request, response);
		} else {
			dispatcher.forward(request, response);
		}
	}","['@', 'Override', 'protected', 'void', 'renderView', '(', 'final', 'ActionRequest', 'actionRequest', ',', 'final', 'String', 'target', ')', 'throws', 'Exception', '{', 'HttpServletRequest', 'request', '=', 'actionRequest', '.', 'getHttpServletRequest', '(', ')', ';', 'HttpServletResponse', 'response', '=', 'actionRequest', '.', 'getHttpServletResponse', '(', ')', ';', 'RequestDispatcher', 'dispatcher', '=', 'request', '.', 'getRequestDispatcher', '(', 'target', ')', ';', 'if', '(', 'dispatcher', '==', 'null', ')', '{', 'response', '.', 'sendError', '(', 'SC_NOT_FOUND', ',', '""Result not found: ""', '+', 'target', ')', ';', '// should never happened', 'return', ';', '}', ""// If we're included, then include the view, otherwise do forward."", '// This allow the page to, for example, set content type.', 'if', '(', 'DispatcherUtil', '.', 'isPageIncluded', '(', 'request', ',', 'response', ')', ')', '{', 'dispatcher', '.', 'include', '(', 'request', ',', 'response', ')', ';', '}', 'else', '{', 'dispatcher', '.', 'forward', '(', 'request', ',', 'response', ')', ';', '}', '}']",Renders the view by dispatching to the target JSP.,"['Renders', 'the', 'view', 'by', 'dispatching', 'to', 'the', 'target', 'JSP', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/result/ServletDispatcherActionResult.java#L57-L76,test
wildfly/wildfly,jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java,PersistenceUnitServiceHandler.savePerDeploymentSharedPersistenceProviderAdaptor,"private static PersistenceProviderAdaptor savePerDeploymentSharedPersistenceProviderAdaptor(DeploymentUnit deploymentUnit, String adaptorModule, PersistenceProviderAdaptor adaptor, PersistenceProvider provider) {
        if (deploymentUnit.getParent() != null) {
            deploymentUnit = deploymentUnit.getParent();
        }
        synchronized (deploymentUnit) {
            Map<String,PersistenceProviderAdaptor> map = deploymentUnit.getAttachment(providerAdaptorMapKey);
            String key;

            if (adaptorModule != null) {
                key = adaptorModule;  // handle legacy adapter module
            }
            else {
                key = provider.getClass().getName();
            }
            PersistenceProviderAdaptor current = map.get(key);

            // saved if not already set by another thread
            if (current == null) {
                map.put(key, adaptor);
                current = adaptor;
            }
            return current;
        }
    }",java,"private static PersistenceProviderAdaptor savePerDeploymentSharedPersistenceProviderAdaptor(DeploymentUnit deploymentUnit, String adaptorModule, PersistenceProviderAdaptor adaptor, PersistenceProvider provider) {
        if (deploymentUnit.getParent() != null) {
            deploymentUnit = deploymentUnit.getParent();
        }
        synchronized (deploymentUnit) {
            Map<String,PersistenceProviderAdaptor> map = deploymentUnit.getAttachment(providerAdaptorMapKey);
            String key;

            if (adaptorModule != null) {
                key = adaptorModule;  // handle legacy adapter module
            }
            else {
                key = provider.getClass().getName();
            }
            PersistenceProviderAdaptor current = map.get(key);

            // saved if not already set by another thread
            if (current == null) {
                map.put(key, adaptor);
                current = adaptor;
            }
            return current;
        }
    }","['private', 'static', 'PersistenceProviderAdaptor', 'savePerDeploymentSharedPersistenceProviderAdaptor', '(', 'DeploymentUnit', 'deploymentUnit', ',', 'String', 'adaptorModule', ',', 'PersistenceProviderAdaptor', 'adaptor', ',', 'PersistenceProvider', 'provider', ')', '{', 'if', '(', 'deploymentUnit', '.', 'getParent', '(', ')', '!=', 'null', ')', '{', 'deploymentUnit', '=', 'deploymentUnit', '.', 'getParent', '(', ')', ';', '}', 'synchronized', '(', 'deploymentUnit', ')', '{', 'Map', '<', 'String', ',', 'PersistenceProviderAdaptor', '>', 'map', '=', 'deploymentUnit', '.', 'getAttachment', '(', 'providerAdaptorMapKey', ')', ';', 'String', 'key', ';', 'if', '(', 'adaptorModule', '!=', 'null', ')', '{', 'key', '=', 'adaptorModule', ';', '// handle legacy adapter module', '}', 'else', '{', 'key', '=', 'provider', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', ';', '}', 'PersistenceProviderAdaptor', 'current', '=', 'map', '.', 'get', '(', 'key', ')', ';', '// saved if not already set by another thread', 'if', '(', 'current', '==', 'null', ')', '{', 'map', '.', 'put', '(', 'key', ',', 'adaptor', ')', ';', 'current', '=', 'adaptor', ';', '}', 'return', 'current', ';', '}', '}']","Will save the PersistenceProviderAdaptor at the top level application deployment unit level for sharing with other persistence units

@param deploymentUnit
@param adaptorModule
@param adaptor
@param provider
@return the application level shared PersistenceProviderAdaptor (which may of been set by a different thread)","['Will', 'save', 'the', 'PersistenceProviderAdaptor', 'at', 'the', 'top', 'level', 'application', 'deployment', 'unit', 'level', 'for', 'sharing', 'with', 'other', 'persistence', 'units']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java#L864-L887,test
orientechnologies/orientdb,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientElement.java,OrientElement.removeProperty,"@Override public <T> T removeProperty(final String key) {
    if (checkDeletedInTx())
      throw new IllegalStateException(""The vertex "" + getIdentity() + "" has been deleted"");

    final OrientBaseGraph graph = getGraph();

    if (graph != null)
      graph.autoStartTransaction();

    final Object oldValue = getRecord().removeField(key);
    if (graph != null)
      save();
    return (T) oldValue;
  }",java,"@Override public <T> T removeProperty(final String key) {
    if (checkDeletedInTx())
      throw new IllegalStateException(""The vertex "" + getIdentity() + "" has been deleted"");

    final OrientBaseGraph graph = getGraph();

    if (graph != null)
      graph.autoStartTransaction();

    final Object oldValue = getRecord().removeField(key);
    if (graph != null)
      save();
    return (T) oldValue;
  }","['@', 'Override', 'public', '<', 'T', '>', 'T', 'removeProperty', '(', 'final', 'String', 'key', ')', '{', 'if', '(', 'checkDeletedInTx', '(', ')', ')', 'throw', 'new', 'IllegalStateException', '(', '""The vertex ""', '+', 'getIdentity', '(', ')', '+', '"" has been deleted""', ')', ';', 'final', 'OrientBaseGraph', 'graph', '=', 'getGraph', '(', ')', ';', 'if', '(', 'graph', '!=', 'null', ')', 'graph', '.', 'autoStartTransaction', '(', ')', ';', 'final', 'Object', 'oldValue', '=', 'getRecord', '(', ')', '.', 'removeField', '(', 'key', ')', ';', 'if', '(', 'graph', '!=', 'null', ')', 'save', '(', ')', ';', 'return', '(', 'T', ')', 'oldValue', ';', '}']","Removes a Property.

@param key Property name
@return Old value if any","['Removes', 'a', 'Property', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientElement.java#L223-L236,test
Unidata/thredds,tds/src/main/java/thredds/servlet/ServletUtil.java,ServletUtil.getRequest,"public static String getRequest(HttpServletRequest req) {
    String query = req.getQueryString();
    return getRequestBase(req) + (query == null ? """" : ""?"" + query);
  }",java,"public static String getRequest(HttpServletRequest req) {
    String query = req.getQueryString();
    return getRequestBase(req) + (query == null ? """" : ""?"" + query);
  }","['public', 'static', 'String', 'getRequest', '(', 'HttpServletRequest', 'req', ')', '{', 'String', 'query', '=', 'req', '.', 'getQueryString', '(', ')', ';', 'return', 'getRequestBase', '(', 'req', ')', '+', '(', 'query', '==', 'null', '?', '""""', ':', '""?""', '+', 'query', ')', ';', '}']","The entire request including query string

@param req the HttpServletRequest
@return entire parsed request","['The', 'entire', 'request', 'including', 'query', 'string']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tds/src/main/java/thredds/servlet/ServletUtil.java#L386-L389,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/TypeConverter.java,TypeConverter.getMultiTypeData,"public static MultiTypeData getMultiTypeData(char c)
    {
        // Convert the value to a String and return the set of types that that String can be converted to.
        MultiTypeData result = getMultiTypeData(Character.toString(c));
        result.nativeType = CHAR;

        return result;
    }",java,"public static MultiTypeData getMultiTypeData(char c)
    {
        // Convert the value to a String and return the set of types that that String can be converted to.
        MultiTypeData result = getMultiTypeData(Character.toString(c));
        result.nativeType = CHAR;

        return result;
    }","['public', 'static', 'MultiTypeData', 'getMultiTypeData', '(', 'char', 'c', ')', '{', '// Convert the value to a String and return the set of types that that String can be converted to.', 'MultiTypeData', 'result', '=', 'getMultiTypeData', '(', 'Character', '.', 'toString', '(', 'c', ')', ')', ';', 'result', '.', 'nativeType', '=', 'CHAR', ';', 'return', 'result', ';', '}']","Converts a char into a multi type data object.

@param  c The char to convert.

@return A multi type data object holding all the types that the char can be converted into.","['Converts', 'a', 'char', 'into', 'a', 'multi', 'type', 'data', 'object', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/TypeConverter.java#L148-L155,test
apache/parquet-mr,parquet-cli/src/main/java/org/apache/parquet/cli/csv/RecordBuilder.java,RecordBuilder.makeValue,"private static Object makeValue(String string, Schema schema) {
    if (string == null) {
      return null;
    }

    try {
      switch (schema.getType()) {
        case BOOLEAN:
          return Boolean.valueOf(string);
        case STRING:
          return string;
        case FLOAT:
          return Float.valueOf(string);
        case DOUBLE:
          return Double.valueOf(string);
        case INT:
          return Integer.valueOf(string);
        case LONG:
          return Long.valueOf(string);
        case ENUM:
          // TODO: translate to enum class
          if (schema.hasEnumSymbol(string)) {
            return string;
          } else {
            try {
              return schema.getEnumSymbols().get(Integer.parseInt(string));
            } catch (IndexOutOfBoundsException ex) {
              return null;
            }
          }
        case UNION:
          Object value = null;
          for (Schema possible : schema.getTypes()) {
            value = makeValue(string, possible);
            if (value != null) {
              return value;
            }
          }
          return null;
        case NULL:
          return null;
        default:
          // FIXED, BYTES, MAP, ARRAY, RECORD are not supported
          throw new RecordException(
              ""Unsupported field type:"" + schema.getType());
      }
    } catch (NumberFormatException e) {
      // empty string is considered null for numeric types
      if (string.isEmpty()) {
        return null;
      } else {
        throw e;
      }
    }
  }",java,"private static Object makeValue(String string, Schema schema) {
    if (string == null) {
      return null;
    }

    try {
      switch (schema.getType()) {
        case BOOLEAN:
          return Boolean.valueOf(string);
        case STRING:
          return string;
        case FLOAT:
          return Float.valueOf(string);
        case DOUBLE:
          return Double.valueOf(string);
        case INT:
          return Integer.valueOf(string);
        case LONG:
          return Long.valueOf(string);
        case ENUM:
          // TODO: translate to enum class
          if (schema.hasEnumSymbol(string)) {
            return string;
          } else {
            try {
              return schema.getEnumSymbols().get(Integer.parseInt(string));
            } catch (IndexOutOfBoundsException ex) {
              return null;
            }
          }
        case UNION:
          Object value = null;
          for (Schema possible : schema.getTypes()) {
            value = makeValue(string, possible);
            if (value != null) {
              return value;
            }
          }
          return null;
        case NULL:
          return null;
        default:
          // FIXED, BYTES, MAP, ARRAY, RECORD are not supported
          throw new RecordException(
              ""Unsupported field type:"" + schema.getType());
      }
    } catch (NumberFormatException e) {
      // empty string is considered null for numeric types
      if (string.isEmpty()) {
        return null;
      } else {
        throw e;
      }
    }
  }","['private', 'static', 'Object', 'makeValue', '(', 'String', 'string', ',', 'Schema', 'schema', ')', '{', 'if', '(', 'string', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'try', '{', 'switch', '(', 'schema', '.', 'getType', '(', ')', ')', '{', 'case', 'BOOLEAN', ':', 'return', 'Boolean', '.', 'valueOf', '(', 'string', ')', ';', 'case', 'STRING', ':', 'return', 'string', ';', 'case', 'FLOAT', ':', 'return', 'Float', '.', 'valueOf', '(', 'string', ')', ';', 'case', 'DOUBLE', ':', 'return', 'Double', '.', 'valueOf', '(', 'string', ')', ';', 'case', 'INT', ':', 'return', 'Integer', '.', 'valueOf', '(', 'string', ')', ';', 'case', 'LONG', ':', 'return', 'Long', '.', 'valueOf', '(', 'string', ')', ';', 'case', 'ENUM', ':', '// TODO: translate to enum class', 'if', '(', 'schema', '.', 'hasEnumSymbol', '(', 'string', ')', ')', '{', 'return', 'string', ';', '}', 'else', '{', 'try', '{', 'return', 'schema', '.', 'getEnumSymbols', '(', ')', '.', 'get', '(', 'Integer', '.', 'parseInt', '(', 'string', ')', ')', ';', '}', 'catch', '(', 'IndexOutOfBoundsException', 'ex', ')', '{', 'return', 'null', ';', '}', '}', 'case', 'UNION', ':', 'Object', 'value', '=', 'null', ';', 'for', '(', 'Schema', 'possible', ':', 'schema', '.', 'getTypes', '(', ')', ')', '{', 'value', '=', 'makeValue', '(', 'string', ',', 'possible', ')', ';', 'if', '(', 'value', '!=', 'null', ')', '{', 'return', 'value', ';', '}', '}', 'return', 'null', ';', 'case', 'NULL', ':', 'return', 'null', ';', 'default', ':', '// FIXED, BYTES, MAP, ARRAY, RECORD are not supported', 'throw', 'new', 'RecordException', '(', '""Unsupported field type:""', '+', 'schema', '.', 'getType', '(', ')', ')', ';', '}', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '// empty string is considered null for numeric types', 'if', '(', 'string', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'null', ';', '}', 'else', '{', 'throw', 'e', ';', '}', '}', '}']","Returns a the value as the first matching schema type or null.

Note that if the value may be null even if the schema does not allow the
value to be null.

@param string a String representation of the value
@param schema a Schema
@return the string coerced to the correct type from the schema or null","['Returns', 'a', 'the', 'value', 'as', 'the', 'first', 'matching', 'schema', 'type', 'or', 'null', '.']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-cli/src/main/java/org/apache/parquet/cli/csv/RecordBuilder.java#L145-L199,test
rackerlabs/blueflood,blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/LocatorFetchRunnable.java,LocatorFetchRunnable.getLocators,"protected Set<Locator> getLocators(RollupExecutionContext executionContext,
                                       boolean isReroll,
                                       Granularity delayedMetricsRerollGranularity,
                                       Granularity delayedMetricsStorageGranularity) {
        Set<Locator> locators = new HashSet<Locator>();

        //if delayed metric tracking is enabled, if its re-roll, if slot granularity is no coarser than
        // DELAYED_METRICS_REROLL_GRANULARITY, get delayed locators
        if (RECORD_DELAYED_METRICS &&
                isReroll &&
                !getGranularity().isCoarser(delayedMetricsRerollGranularity)) {

            if (getGranularity().isCoarser(delayedMetricsStorageGranularity)) {

                // For example, if we are re-rolling a 60m slot, and we store delayed metrics at 20m, we need to
                // grab delayed metrics for 3 * 20m slots corresponding to the 60m slot.
                for (SlotKey slotKey: parentSlotKey.getChildrenKeys(delayedMetricsStorageGranularity)) {
                    locators.addAll(getDelayedLocators(executionContext, slotKey));
                }

            } else {
                locators = getDelayedLocators(executionContext,
                        parentSlotKey.extrapolate(delayedMetricsStorageGranularity));
            }

        } else {
            locators = getLocators(executionContext);
        }
        return locators;
    }",java,"protected Set<Locator> getLocators(RollupExecutionContext executionContext,
                                       boolean isReroll,
                                       Granularity delayedMetricsRerollGranularity,
                                       Granularity delayedMetricsStorageGranularity) {
        Set<Locator> locators = new HashSet<Locator>();

        //if delayed metric tracking is enabled, if its re-roll, if slot granularity is no coarser than
        // DELAYED_METRICS_REROLL_GRANULARITY, get delayed locators
        if (RECORD_DELAYED_METRICS &&
                isReroll &&
                !getGranularity().isCoarser(delayedMetricsRerollGranularity)) {

            if (getGranularity().isCoarser(delayedMetricsStorageGranularity)) {

                // For example, if we are re-rolling a 60m slot, and we store delayed metrics at 20m, we need to
                // grab delayed metrics for 3 * 20m slots corresponding to the 60m slot.
                for (SlotKey slotKey: parentSlotKey.getChildrenKeys(delayedMetricsStorageGranularity)) {
                    locators.addAll(getDelayedLocators(executionContext, slotKey));
                }

            } else {
                locators = getDelayedLocators(executionContext,
                        parentSlotKey.extrapolate(delayedMetricsStorageGranularity));
            }

        } else {
            locators = getLocators(executionContext);
        }
        return locators;
    }","['protected', 'Set', '<', 'Locator', '>', 'getLocators', '(', 'RollupExecutionContext', 'executionContext', ',', 'boolean', 'isReroll', ',', 'Granularity', 'delayedMetricsRerollGranularity', ',', 'Granularity', 'delayedMetricsStorageGranularity', ')', '{', 'Set', '<', 'Locator', '>', 'locators', '=', 'new', 'HashSet', '<', 'Locator', '>', '(', ')', ';', '//if delayed metric tracking is enabled, if its re-roll, if slot granularity is no coarser than', '// DELAYED_METRICS_REROLL_GRANULARITY, get delayed locators', 'if', '(', 'RECORD_DELAYED_METRICS', '&&', 'isReroll', '&&', '!', 'getGranularity', '(', ')', '.', 'isCoarser', '(', 'delayedMetricsRerollGranularity', ')', ')', '{', 'if', '(', 'getGranularity', '(', ')', '.', 'isCoarser', '(', 'delayedMetricsStorageGranularity', ')', ')', '{', '// For example, if we are re-rolling a 60m slot, and we store delayed metrics at 20m, we need to', '// grab delayed metrics for 3 * 20m slots corresponding to the 60m slot.', 'for', '(', 'SlotKey', 'slotKey', ':', 'parentSlotKey', '.', 'getChildrenKeys', '(', 'delayedMetricsStorageGranularity', ')', ')', '{', 'locators', '.', 'addAll', '(', 'getDelayedLocators', '(', 'executionContext', ',', 'slotKey', ')', ')', ';', '}', '}', 'else', '{', 'locators', '=', 'getDelayedLocators', '(', 'executionContext', ',', 'parentSlotKey', '.', 'extrapolate', '(', 'delayedMetricsStorageGranularity', ')', ')', ';', '}', '}', 'else', '{', 'locators', '=', 'getLocators', '(', 'executionContext', ')', ';', '}', 'return', 'locators', ';', '}']","This methods gets locators to rollup a slot.

During re-rolls, If the granularity of the slot is finer(or equal) to the configured
DELAYED_METRICS_REROLL_GRANULARITY, we re-roll only the delayed locator's corresponding
to that slot. if not, we re-roll the locators of the entire shard.

@param executionContext
@param isReroll
@param delayedMetricsRerollGranularity
@param delayedMetricsStorageGranularity
@return","['This', 'methods', 'gets', 'locators', 'to', 'rollup', 'a', 'slot', '.']",4722a3449b1a7f8e88889ea8c340c6f24396b5b0,https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/LocatorFetchRunnable.java#L145-L174,test
workplacesystems/utilsj,src/main/java/com/workplacesystems/utilsj/collections/TransactionalHashMap.java,TransactionalHashMap.putAll,"@Override
    public void putAll(Map<? extends K, ? extends V> m)
    {
        int numKeysToBeAdded = m.size();
        if (numKeysToBeAdded == 0)
            return;
        
        /*
         * Expand the map if the map if the number of mappings to be added
         * is greater than or equal to threshold.  This is conservative; the
         * obvious condition is (m.size() + size) >= threshold, but this
         * condition could result in a map with twice the appropriate capacity,
         * if the keys to be added overlap with the keys already in this map.
         * By using the conservative calculation, we subject ourself
         * to at most one extra resize.
         */
        if (numKeysToBeAdded > threshold)
        {
            int targetCapacity = (int)(numKeysToBeAdded / loadFactor + 1);
            if (targetCapacity > MAXIMUM_CAPACITY)
                targetCapacity = MAXIMUM_CAPACITY;
            int newCapacity = table.length;
            while (newCapacity < targetCapacity)
                newCapacity <<= 1;
            if (newCapacity > table.length)
                resize(newCapacity);
        }
        
        for (Iterator<? extends Map.Entry<? extends K, ? extends V>> i = m.entrySet().iterator(); i.hasNext(); )
        {
            Map.Entry<? extends K, ? extends V> e = i.next();
            put(e.getKey(), e.getValue());
        }
    }",java,"@Override
    public void putAll(Map<? extends K, ? extends V> m)
    {
        int numKeysToBeAdded = m.size();
        if (numKeysToBeAdded == 0)
            return;
        
        /*
         * Expand the map if the map if the number of mappings to be added
         * is greater than or equal to threshold.  This is conservative; the
         * obvious condition is (m.size() + size) >= threshold, but this
         * condition could result in a map with twice the appropriate capacity,
         * if the keys to be added overlap with the keys already in this map.
         * By using the conservative calculation, we subject ourself
         * to at most one extra resize.
         */
        if (numKeysToBeAdded > threshold)
        {
            int targetCapacity = (int)(numKeysToBeAdded / loadFactor + 1);
            if (targetCapacity > MAXIMUM_CAPACITY)
                targetCapacity = MAXIMUM_CAPACITY;
            int newCapacity = table.length;
            while (newCapacity < targetCapacity)
                newCapacity <<= 1;
            if (newCapacity > table.length)
                resize(newCapacity);
        }
        
        for (Iterator<? extends Map.Entry<? extends K, ? extends V>> i = m.entrySet().iterator(); i.hasNext(); )
        {
            Map.Entry<? extends K, ? extends V> e = i.next();
            put(e.getKey(), e.getValue());
        }
    }","['@', 'Override', 'public', 'void', 'putAll', '(', 'Map', '<', '?', 'extends', 'K', ',', '?', 'extends', 'V', '>', 'm', ')', '{', 'int', 'numKeysToBeAdded', '=', 'm', '.', 'size', '(', ')', ';', 'if', '(', 'numKeysToBeAdded', '==', '0', ')', 'return', ';', '/*\r\n         * Expand the map if the map if the number of mappings to be added\r\n         * is greater than or equal to threshold.  This is conservative; the\r\n         * obvious condition is (m.size() + size) >= threshold, but this\r\n         * condition could result in a map with twice the appropriate capacity,\r\n         * if the keys to be added overlap with the keys already in this map.\r\n         * By using the conservative calculation, we subject ourself\r\n         * to at most one extra resize.\r\n         */', 'if', '(', 'numKeysToBeAdded', '>', 'threshold', ')', '{', 'int', 'targetCapacity', '=', '(', 'int', ')', '(', 'numKeysToBeAdded', '/', 'loadFactor', '+', '1', ')', ';', 'if', '(', 'targetCapacity', '>', 'MAXIMUM_CAPACITY', ')', 'targetCapacity', '=', 'MAXIMUM_CAPACITY', ';', 'int', 'newCapacity', '=', 'table', '.', 'length', ';', 'while', '(', 'newCapacity', '<', 'targetCapacity', ')', 'newCapacity', '<<=', '1', ';', 'if', '(', 'newCapacity', '>', 'table', '.', 'length', ')', 'resize', '(', 'newCapacity', ')', ';', '}', 'for', '(', 'Iterator', '<', '?', 'extends', 'Map', '.', 'Entry', '<', '?', 'extends', 'K', ',', '?', 'extends', 'V', '>', '>', 'i', '=', 'm', '.', 'entrySet', '(', ')', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'Map', '.', 'Entry', '<', '?', 'extends', 'K', ',', '?', 'extends', 'V', '>', 'e', '=', 'i', '.', 'next', '(', ')', ';', 'put', '(', 'e', '.', 'getKey', '(', ')', ',', 'e', '.', 'getValue', '(', ')', ')', ';', '}', '}']","Copies all of the mappings from the specified map to this map
These mappings will replace any mappings that
this map had for any of the keys currently in the specified map.

@param m mappings to be stored in this map.
@throws NullPointerException if the specified map is null.","['Copies', 'all', 'of', 'the', 'mappings', 'from', 'the', 'specified', 'map', 'to', 'this', 'map', 'These', 'mappings', 'will', 'replace', 'any', 'mappings', 'that', 'this', 'map', 'had', 'for', 'any', 'of', 'the', 'keys', 'currently', 'in', 'the', 'specified', 'map', '.']",1b638be51997eafac4d368c14f62a16624a08d3e,https://github.com/workplacesystems/utilsj/blob/1b638be51997eafac4d368c14f62a16624a08d3e/src/main/java/com/workplacesystems/utilsj/collections/TransactionalHashMap.java#L660-L693,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,SymbolTable.addConstantDynamicOrInvokeDynamicReference,"private void addConstantDynamicOrInvokeDynamicReference(
      final int tag,
      final int index,
      final String name,
      final String descriptor,
      final int bootstrapMethodIndex) {
    int hashCode = hash(tag, name, descriptor, bootstrapMethodIndex);
    add(new Entry(index, tag, null, name, descriptor, bootstrapMethodIndex, hashCode));
  }",java,"private void addConstantDynamicOrInvokeDynamicReference(
      final int tag,
      final int index,
      final String name,
      final String descriptor,
      final int bootstrapMethodIndex) {
    int hashCode = hash(tag, name, descriptor, bootstrapMethodIndex);
    add(new Entry(index, tag, null, name, descriptor, bootstrapMethodIndex, hashCode));
  }","['private', 'void', 'addConstantDynamicOrInvokeDynamicReference', '(', 'final', 'int', 'tag', ',', 'final', 'int', 'index', ',', 'final', 'String', 'name', ',', 'final', 'String', 'descriptor', ',', 'final', 'int', 'bootstrapMethodIndex', ')', '{', 'int', 'hashCode', '=', 'hash', '(', 'tag', ',', 'name', ',', 'descriptor', ',', 'bootstrapMethodIndex', ')', ';', 'add', '(', 'new', 'Entry', '(', 'index', ',', 'tag', ',', 'null', ',', 'name', ',', 'descriptor', ',', 'bootstrapMethodIndex', ',', 'hashCode', ')', ')', ';', '}']","Adds a new CONSTANT_Dynamic_info or CONSTANT_InvokeDynamic_info to the constant pool of this
symbol table.

@param tag one of {@link Symbol#CONSTANT_DYNAMIC_TAG} or {@link
Symbol#CONSTANT_INVOKE_DYNAMIC_TAG}.
@param index the constant pool index of the new Symbol.
@param name a method name.
@param descriptor a field descriptor for CONSTANT_DYNAMIC_TAG or a method descriptor for
CONSTANT_INVOKE_DYNAMIC_TAG.
@param bootstrapMethodIndex the index of a bootstrap method in the BootstrapMethods attribute.","['Adds', 'a', 'new', 'CONSTANT_Dynamic_info', 'or', 'CONSTANT_InvokeDynamic_info', 'to', 'the', 'constant', 'pool', 'of', 'this', 'symbol', 'table', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java#L954-L962,test
wildfly/wildfly,jpa/spi/src/main/java/org/jipijapa/event/impl/internal/Notification.java,Notification.addCacheDependencies,"public static void addCacheDependencies(Classification cacheType, Properties properties) {
        for(EventListener eventListener: eventListeners) {
            eventListener.addCacheDependencies(cacheType, properties);
        }
    }",java,"public static void addCacheDependencies(Classification cacheType, Properties properties) {
        for(EventListener eventListener: eventListeners) {
            eventListener.addCacheDependencies(cacheType, properties);
        }
    }","['public', 'static', 'void', 'addCacheDependencies', '(', 'Classification', 'cacheType', ',', 'Properties', 'properties', ')', '{', 'for', '(', 'EventListener', 'eventListener', ':', 'eventListeners', ')', '{', 'eventListener', '.', 'addCacheDependencies', '(', 'cacheType', ',', 'properties', ')', ';', '}', '}']","add cache dependencies

@param properties","['add', 'cache', 'dependencies']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/jpa/spi/src/main/java/org/jipijapa/event/impl/internal/Notification.java#L93-L97,test
lightcouch/LightCouch,src/main/java/org/lightcouch/CouchDbClientBase.java,CouchDbClientBase.bulk,"public List<Response> bulk(List<?> objects, boolean newEdits) {
		assertNotEmpty(objects, ""objects"");
		HttpResponse response = null;
		try { 
			final String newEditsVal = newEdits ? ""\""new_edits\"": true, "" : ""\""new_edits\"": false, "";
			final String json = String.format(""{%s%s%s}"", newEditsVal, ""\""docs\"": "", getGson().toJson(objects));
			final URI uri = buildUri(getDBUri()).path(""_bulk_docs"").build();
			response = post(uri, json);
			return getResponseList(response);
		} finally {
			close(response);
		}
	}",java,"public List<Response> bulk(List<?> objects, boolean newEdits) {
		assertNotEmpty(objects, ""objects"");
		HttpResponse response = null;
		try { 
			final String newEditsVal = newEdits ? ""\""new_edits\"": true, "" : ""\""new_edits\"": false, "";
			final String json = String.format(""{%s%s%s}"", newEditsVal, ""\""docs\"": "", getGson().toJson(objects));
			final URI uri = buildUri(getDBUri()).path(""_bulk_docs"").build();
			response = post(uri, json);
			return getResponseList(response);
		} finally {
			close(response);
		}
	}","['public', 'List', '<', 'Response', '>', 'bulk', '(', 'List', '<', '?', '>', 'objects', ',', 'boolean', 'newEdits', ')', '{', 'assertNotEmpty', '(', 'objects', ',', '""objects""', ')', ';', 'HttpResponse', 'response', '=', 'null', ';', 'try', '{', 'final', 'String', 'newEditsVal', '=', 'newEdits', '?', '""\\""new_edits\\"": true, ""', ':', '""\\""new_edits\\"": false, ""', ';', 'final', 'String', 'json', '=', 'String', '.', 'format', '(', '""{%s%s%s}""', ',', 'newEditsVal', ',', '""\\""docs\\"": ""', ',', 'getGson', '(', ')', '.', 'toJson', '(', 'objects', ')', ')', ';', 'final', 'URI', 'uri', '=', 'buildUri', '(', 'getDBUri', '(', ')', ')', '.', 'path', '(', '""_bulk_docs""', ')', '.', 'build', '(', ')', ';', 'response', '=', 'post', '(', 'uri', ',', 'json', ')', ';', 'return', 'getResponseList', '(', 'response', ')', ';', '}', 'finally', '{', 'close', '(', 'response', ')', ';', '}', '}']","Performs bulk documents create and update request.
@param objects The {@link List} of documents objects.
@param newEdits If false, prevents the database from assigning documents new revision IDs.
@return {@code List<Response>} Containing the resulted entries.","['Performs', 'bulk', 'documents', 'create', 'and', 'update', 'request', '.']",9646889503475e862fd2158487e1cdd805447f4a,https://github.com/lightcouch/LightCouch/blob/9646889503475e862fd2158487e1cdd805447f4a/src/main/java/org/lightcouch/CouchDbClientBase.java#L399-L411,test
phax/ph-math,ph-math/src/main/java/com/helger/numbercruncher/mathutils/PrimeFactors.java,PrimeFactors.factorsOf,"public static int [] factorsOf (final int pn)
  {
    int n = pn;
    final boolean isPrime[] = primeSieve (n); // primes <= n
    final ICommonsList <Integer> v = new CommonsArrayList<> ();

    // Loop to try prime divisors.
    for (int factor = 2; n > 1; ++factor)
    {
      if (isPrime[factor] && (n % factor == 0))
      {

        // Prime divisor found.
        v.add (Integer.valueOf (factor));

        // Factor out multiples of the divisor.
        do
        {
          n /= factor;
        } while (n % factor == 0);
      }
    }

    // Create an array of the distinct prime factors.
    final int factors[] = new int [v.size ()];
    for (int i = 0; i < v.size (); ++i)
    {
      factors[i] = v.get (i).intValue ();
    }
    return factors;
  }",java,"public static int [] factorsOf (final int pn)
  {
    int n = pn;
    final boolean isPrime[] = primeSieve (n); // primes <= n
    final ICommonsList <Integer> v = new CommonsArrayList<> ();

    // Loop to try prime divisors.
    for (int factor = 2; n > 1; ++factor)
    {
      if (isPrime[factor] && (n % factor == 0))
      {

        // Prime divisor found.
        v.add (Integer.valueOf (factor));

        // Factor out multiples of the divisor.
        do
        {
          n /= factor;
        } while (n % factor == 0);
      }
    }

    // Create an array of the distinct prime factors.
    final int factors[] = new int [v.size ()];
    for (int i = 0; i < v.size (); ++i)
    {
      factors[i] = v.get (i).intValue ();
    }
    return factors;
  }","['public', 'static', 'int', '[', ']', 'factorsOf', '(', 'final', 'int', 'pn', ')', '{', 'int', 'n', '=', 'pn', ';', 'final', 'boolean', 'isPrime', '[', ']', '=', 'primeSieve', '(', 'n', ')', ';', '// primes <= n', 'final', 'ICommonsList', '<', 'Integer', '>', 'v', '=', 'new', 'CommonsArrayList', '<>', '(', ')', ';', '// Loop to try prime divisors.', 'for', '(', 'int', 'factor', '=', '2', ';', 'n', '>', '1', ';', '++', 'factor', ')', '{', 'if', '(', 'isPrime', '[', 'factor', ']', '&&', '(', 'n', '%', 'factor', '==', '0', ')', ')', '{', '// Prime divisor found.', 'v', '.', 'add', '(', 'Integer', '.', 'valueOf', '(', 'factor', ')', ')', ';', '// Factor out multiples of the divisor.', 'do', '{', 'n', '/=', 'factor', ';', '}', 'while', '(', 'n', '%', 'factor', '==', '0', ')', ';', '}', '}', '// Create an array of the distinct prime factors.', 'final', 'int', 'factors', '[', ']', '=', 'new', 'int', '[', 'v', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'v', '.', 'size', '(', ')', ';', '++', 'i', ')', '{', 'factors', '[', 'i', ']', '=', 'v', '.', 'get', '(', 'i', ')', '.', 'intValue', '(', ')', ';', '}', 'return', 'factors', ';', '}']","Compute the prime factors of an integer value.

@param pn
the value to factor
@return an array of distinct prime factors","['Compute', 'the', 'prime', 'factors', 'of', 'an', 'integer', 'value', '.']",9f998870c7e05226e032b1f38c23e7d45ec0169d,https://github.com/phax/ph-math/blob/9f998870c7e05226e032b1f38c23e7d45ec0169d/ph-math/src/main/java/com/helger/numbercruncher/mathutils/PrimeFactors.java#L69-L99,test
wildfly/wildfly,naming/src/main/java/org/jboss/as/naming/NamingEventCoordinator.java,NamingEventCoordinator.addListener,"synchronized void addListener(final String target, final int scope, final NamingListener namingListener) {
        final TargetScope targetScope = new TargetScope(target, scope);
        // Do we have a holder for this listener
        ListenerHolder holder = holdersByListener.get(namingListener);
        if (holder == null) {
            holder = new ListenerHolder(namingListener, targetScope);
            final Map<NamingListener, ListenerHolder> byListenerCopy = new FastCopyHashMap<NamingListener, ListenerHolder>(holdersByListener);
            byListenerCopy.put(namingListener, holder);
            holdersByListener = byListenerCopy;
        } else {
            holder.addTarget(targetScope);
        }

        List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope);
        if (holdersForTarget == null) {
            holdersForTarget = new CopyOnWriteArrayList<ListenerHolder>();
            final Map<TargetScope, List<ListenerHolder>> byTargetCopy = new FastCopyHashMap<TargetScope, List<ListenerHolder>>(holdersByTarget);
            byTargetCopy.put(targetScope, holdersForTarget);
            holdersByTarget = byTargetCopy;
        }
        holdersForTarget.add(holder);
    }",java,"synchronized void addListener(final String target, final int scope, final NamingListener namingListener) {
        final TargetScope targetScope = new TargetScope(target, scope);
        // Do we have a holder for this listener
        ListenerHolder holder = holdersByListener.get(namingListener);
        if (holder == null) {
            holder = new ListenerHolder(namingListener, targetScope);
            final Map<NamingListener, ListenerHolder> byListenerCopy = new FastCopyHashMap<NamingListener, ListenerHolder>(holdersByListener);
            byListenerCopy.put(namingListener, holder);
            holdersByListener = byListenerCopy;
        } else {
            holder.addTarget(targetScope);
        }

        List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope);
        if (holdersForTarget == null) {
            holdersForTarget = new CopyOnWriteArrayList<ListenerHolder>();
            final Map<TargetScope, List<ListenerHolder>> byTargetCopy = new FastCopyHashMap<TargetScope, List<ListenerHolder>>(holdersByTarget);
            byTargetCopy.put(targetScope, holdersForTarget);
            holdersByTarget = byTargetCopy;
        }
        holdersForTarget.add(holder);
    }","['synchronized', 'void', 'addListener', '(', 'final', 'String', 'target', ',', 'final', 'int', 'scope', ',', 'final', 'NamingListener', 'namingListener', ')', '{', 'final', 'TargetScope', 'targetScope', '=', 'new', 'TargetScope', '(', 'target', ',', 'scope', ')', ';', '// Do we have a holder for this listener', 'ListenerHolder', 'holder', '=', 'holdersByListener', '.', 'get', '(', 'namingListener', ')', ';', 'if', '(', 'holder', '==', 'null', ')', '{', 'holder', '=', 'new', 'ListenerHolder', '(', 'namingListener', ',', 'targetScope', ')', ';', 'final', 'Map', '<', 'NamingListener', ',', 'ListenerHolder', '>', 'byListenerCopy', '=', 'new', 'FastCopyHashMap', '<', 'NamingListener', ',', 'ListenerHolder', '>', '(', 'holdersByListener', ')', ';', 'byListenerCopy', '.', 'put', '(', 'namingListener', ',', 'holder', ')', ';', 'holdersByListener', '=', 'byListenerCopy', ';', '}', 'else', '{', 'holder', '.', 'addTarget', '(', 'targetScope', ')', ';', '}', 'List', '<', 'ListenerHolder', '>', 'holdersForTarget', '=', 'holdersByTarget', '.', 'get', '(', 'targetScope', ')', ';', 'if', '(', 'holdersForTarget', '==', 'null', ')', '{', 'holdersForTarget', '=', 'new', 'CopyOnWriteArrayList', '<', 'ListenerHolder', '>', '(', ')', ';', 'final', 'Map', '<', 'TargetScope', ',', 'List', '<', 'ListenerHolder', '>', '>', 'byTargetCopy', '=', 'new', 'FastCopyHashMap', '<', 'TargetScope', ',', 'List', '<', 'ListenerHolder', '>', '>', '(', 'holdersByTarget', ')', ';', 'byTargetCopy', '.', 'put', '(', 'targetScope', ',', 'holdersForTarget', ')', ';', 'holdersByTarget', '=', 'byTargetCopy', ';', '}', 'holdersForTarget', '.', 'add', '(', 'holder', ')', ';', '}']","Add a listener to the coordinator with a given target name and event scope.  This information is used when an
event is fired to determine whether or not to fire this listener.

@param target The target name to lister
@param scope The event scope
@param namingListener The listener","['Add', 'a', 'listener', 'to', 'the', 'coordinator', 'with', 'a', 'given', 'target', 'name', 'and', 'event', 'scope', '.', 'This', 'information', 'is', 'used', 'when', 'an', 'event', 'is', 'fired', 'to', 'determine', 'whether', 'or', 'not', 'to', 'fire', 'this', 'listener', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/naming/src/main/java/org/jboss/as/naming/NamingEventCoordinator.java#L78-L99,test
oblac/jodd,jodd-core/src/main/java/jodd/cache/TimedCache.java,TimedCache.schedulePrune,"public void schedulePrune(final long delay) {
		if (pruneTimer != null) {
			pruneTimer.cancel();
		}
		pruneTimer = new Timer();
		pruneTimer.schedule(
				new TimerTask() {
					@Override
					public void run() {
						prune();
					}
				}, delay, delay
		);
	}",java,"public void schedulePrune(final long delay) {
		if (pruneTimer != null) {
			pruneTimer.cancel();
		}
		pruneTimer = new Timer();
		pruneTimer.schedule(
				new TimerTask() {
					@Override
					public void run() {
						prune();
					}
				}, delay, delay
		);
	}","['public', 'void', 'schedulePrune', '(', 'final', 'long', 'delay', ')', '{', 'if', '(', 'pruneTimer', '!=', 'null', ')', '{', 'pruneTimer', '.', 'cancel', '(', ')', ';', '}', 'pruneTimer', '=', 'new', 'Timer', '(', ')', ';', 'pruneTimer', '.', 'schedule', '(', 'new', 'TimerTask', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'prune', '(', ')', ';', '}', '}', ',', 'delay', ',', 'delay', ')', ';', '}']",Schedules prune.,"['Schedules', 'prune', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/cache/TimedCache.java#L73-L86,test
PistoiaHELM/HELMNotationParser,src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotation.java,MonomerNotation.setCount,"public void setCount(String str) {
    isDefault = false;
    if (str.equals(""1"")) {
      isDefault = true;
    }

    count = str;
  }",java,"public void setCount(String str) {
    isDefault = false;
    if (str.equals(""1"")) {
      isDefault = true;
    }

    count = str;
  }","['public', 'void', 'setCount', '(', 'String', 'str', ')', '{', 'isDefault', '=', 'false', ';', 'if', '(', 'str', '.', 'equals', '(', '""1""', ')', ')', '{', 'isDefault', '=', 'true', ';', '}', 'count', '=', 'str', ';', '}']","method to change the default count of one to the user-defined

@param str user-defined count","['method', 'to', 'change', 'the', 'default', 'count', 'of', 'one', 'to', 'the', 'user', '-', 'defined']",685d7ab7886e9b5cc15fb904025fe6eee703f8f6,https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotation.java#L109-L116,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/op/NCdumpPanel.java,NCdumpPanel.setNetcdfFile,"public void setNetcdfFile(NetcdfFile ncf) {
        this.ncfile = ncf;
        this.filename = ncf.getLocation();

        final GetDataRunnable runner = new GetDataRunnable() {
            public void run(Object o) throws IOException {
                final StringWriter sw = new StringWriter(50000);
                NCdumpW.print(ncfile, command, sw, task);
                result = sw.toString();
            }
        };
        task = new GetDataTask(runner, filename, null);
        stopButton.startProgressMonitorTask(task);
    }",java,"public void setNetcdfFile(NetcdfFile ncf) {
        this.ncfile = ncf;
        this.filename = ncf.getLocation();

        final GetDataRunnable runner = new GetDataRunnable() {
            public void run(Object o) throws IOException {
                final StringWriter sw = new StringWriter(50000);
                NCdumpW.print(ncfile, command, sw, task);
                result = sw.toString();
            }
        };
        task = new GetDataTask(runner, filename, null);
        stopButton.startProgressMonitorTask(task);
    }","['public', 'void', 'setNetcdfFile', '(', 'NetcdfFile', 'ncf', ')', '{', 'this', '.', 'ncfile', '=', 'ncf', ';', 'this', '.', 'filename', '=', 'ncf', '.', 'getLocation', '(', ')', ';', 'final', 'GetDataRunnable', 'runner', '=', 'new', 'GetDataRunnable', '(', ')', '{', 'public', 'void', 'run', '(', 'Object', 'o', ')', 'throws', 'IOException', '{', 'final', 'StringWriter', 'sw', '=', 'new', 'StringWriter', '(', '50000', ')', ';', 'NCdumpW', '.', 'print', '(', 'ncfile', ',', 'command', ',', 'sw', ',', 'task', ')', ';', 'result', '=', 'sw', '.', 'toString', '(', ')', ';', '}', '}', ';', 'task', '=', 'new', 'GetDataTask', '(', 'runner', ',', 'filename', ',', 'null', ')', ';', 'stopButton', '.', 'startProgressMonitorTask', '(', 'task', ')', ';', '}']",allow calling from outside,"['allow', 'calling', 'from', 'outside']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/op/NCdumpPanel.java#L130-L143,test
RestComm/jain-slee,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java,ActivityContextImpl.attachTimer,"public boolean attachTimer(TimerID timerID) {
		if (cacheData.attachTimer(timerID)) {
			if (acReferencesHandler != null) {
				acReferencesHandler.timerReferenceCreated();
			}
			return true;
		} else {
			return false;
		}
	}",java,"public boolean attachTimer(TimerID timerID) {
		if (cacheData.attachTimer(timerID)) {
			if (acReferencesHandler != null) {
				acReferencesHandler.timerReferenceCreated();
			}
			return true;
		} else {
			return false;
		}
	}","['public', 'boolean', 'attachTimer', '(', 'TimerID', 'timerID', ')', '{', 'if', '(', 'cacheData', '.', 'attachTimer', '(', 'timerID', ')', ')', '{', 'if', '(', 'acReferencesHandler', '!=', 'null', ')', '{', 'acReferencesHandler', '.', 'timerReferenceCreated', '(', ')', ';', '}', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","attach the given timer to the current activity context.

@param timerID
-- timer id to attach.","['attach', 'the', 'given', 'timer', 'to', 'the', 'current', 'activity', 'context', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java#L288-L297,test
hawkular/hawkular-metrics,core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/MetricsServiceImpl.java,MetricsServiceImpl.verifyAndCreateTempTables,"public void verifyAndCreateTempTables() {
        ZonedDateTime currentBlock = ZonedDateTime.ofInstant(Instant.ofEpochMilli(DateTimeService.now.get().getMillis()), UTC)
                .with(DateTimeService.startOfPreviousEvenHour());

        ZonedDateTime lastStartupBlock = currentBlock.plus(6, ChronoUnit.HOURS);
        verifyAndCreateTempTables(currentBlock, lastStartupBlock).await();
    }",java,"public void verifyAndCreateTempTables() {
        ZonedDateTime currentBlock = ZonedDateTime.ofInstant(Instant.ofEpochMilli(DateTimeService.now.get().getMillis()), UTC)
                .with(DateTimeService.startOfPreviousEvenHour());

        ZonedDateTime lastStartupBlock = currentBlock.plus(6, ChronoUnit.HOURS);
        verifyAndCreateTempTables(currentBlock, lastStartupBlock).await();
    }","['public', 'void', 'verifyAndCreateTempTables', '(', ')', '{', 'ZonedDateTime', 'currentBlock', '=', 'ZonedDateTime', '.', 'ofInstant', '(', 'Instant', '.', 'ofEpochMilli', '(', 'DateTimeService', '.', 'now', '.', 'get', '(', ')', '.', 'getMillis', '(', ')', ')', ',', 'UTC', ')', '.', 'with', '(', 'DateTimeService', '.', 'startOfPreviousEvenHour', '(', ')', ')', ';', 'ZonedDateTime', 'lastStartupBlock', '=', 'currentBlock', '.', 'plus', '(', '6', ',', 'ChronoUnit', '.', 'HOURS', ')', ';', 'verifyAndCreateTempTables', '(', 'currentBlock', ',', 'lastStartupBlock', ')', '.', 'await', '(', ')', ';', '}']",Intended to be used at the startup of the MetricsServiceImpl to ensure we have enough tables for processing,"['Intended', 'to', 'be', 'used', 'at', 'the', 'startup', 'of', 'the', 'MetricsServiceImpl', 'to', 'ensure', 'we', 'have', 'enough', 'tables', 'for', 'processing']",6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c,https://github.com/hawkular/hawkular-metrics/blob/6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c/core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/MetricsServiceImpl.java#L743-L749,test
wildfly/wildfly,undertow/src/main/java/org/wildfly/extension/undertow/security/SecurityActions.java,SecurityActions.popRunAsIdentity,"static RunAs popRunAsIdentity(final SecurityContext sc) {
        if (WildFlySecurityManager.isChecking()) {
            return AccessController.doPrivileged(new PrivilegedAction<RunAs>() {
                @Override
                public RunAs run() {
                    if (sc == null) {
                        throw UndertowLogger.ROOT_LOGGER.noSecurityContext();
                    }
                    RunAs principal = sc.getOutgoingRunAs();
                    sc.setOutgoingRunAs(null);
                    return principal;
                }
            });
        } else {
            if (sc == null) {
                throw UndertowLogger.ROOT_LOGGER.noSecurityContext();
            }
            RunAs principal = sc.getOutgoingRunAs();
            sc.setOutgoingRunAs(null);
            return principal;
        }
    }",java,"static RunAs popRunAsIdentity(final SecurityContext sc) {
        if (WildFlySecurityManager.isChecking()) {
            return AccessController.doPrivileged(new PrivilegedAction<RunAs>() {
                @Override
                public RunAs run() {
                    if (sc == null) {
                        throw UndertowLogger.ROOT_LOGGER.noSecurityContext();
                    }
                    RunAs principal = sc.getOutgoingRunAs();
                    sc.setOutgoingRunAs(null);
                    return principal;
                }
            });
        } else {
            if (sc == null) {
                throw UndertowLogger.ROOT_LOGGER.noSecurityContext();
            }
            RunAs principal = sc.getOutgoingRunAs();
            sc.setOutgoingRunAs(null);
            return principal;
        }
    }","['static', 'RunAs', 'popRunAsIdentity', '(', 'final', 'SecurityContext', 'sc', ')', '{', 'if', '(', 'WildFlySecurityManager', '.', 'isChecking', '(', ')', ')', '{', 'return', 'AccessController', '.', 'doPrivileged', '(', 'new', 'PrivilegedAction', '<', 'RunAs', '>', '(', ')', '{', '@', 'Override', 'public', 'RunAs', 'run', '(', ')', '{', 'if', '(', 'sc', '==', 'null', ')', '{', 'throw', 'UndertowLogger', '.', 'ROOT_LOGGER', '.', 'noSecurityContext', '(', ')', ';', '}', 'RunAs', 'principal', '=', 'sc', '.', 'getOutgoingRunAs', '(', ')', ';', 'sc', '.', 'setOutgoingRunAs', '(', 'null', ')', ';', 'return', 'principal', ';', '}', '}', ')', ';', '}', 'else', '{', 'if', '(', 'sc', '==', 'null', ')', '{', 'throw', 'UndertowLogger', '.', 'ROOT_LOGGER', '.', 'noSecurityContext', '(', ')', ';', '}', 'RunAs', 'principal', '=', 'sc', '.', 'getOutgoingRunAs', '(', ')', ';', 'sc', '.', 'setOutgoingRunAs', '(', 'null', ')', ';', 'return', 'principal', ';', '}', '}']","Removes the run as identity

@return the identity removed","['Removes', 'the', 'run', 'as', 'identity']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/undertow/src/main/java/org/wildfly/extension/undertow/security/SecurityActions.java#L179-L200,test
oblac/jodd,jodd-db/src/main/java/jodd/db/oom/naming/ColumnNamingStrategy.java,ColumnNamingStrategy.applyToColumnName,"public String applyToColumnName(final String columnName) {
		String propertyName = convertColumnNameToPropertyName(columnName);

		return convertPropertyNameToColumnName(propertyName);
	}",java,"public String applyToColumnName(final String columnName) {
		String propertyName = convertColumnNameToPropertyName(columnName);

		return convertPropertyNameToColumnName(propertyName);
	}","['public', 'String', 'applyToColumnName', '(', 'final', 'String', 'columnName', ')', '{', 'String', 'propertyName', '=', 'convertColumnNameToPropertyName', '(', 'columnName', ')', ';', 'return', 'convertPropertyNameToColumnName', '(', 'propertyName', ')', ';', '}']","Applies column naming strategy to given column name hint.
Returns full column name.","['Applies', 'column', 'naming', 'strategy', 'to', 'given', 'column', 'name', 'hint', '.', 'Returns', 'full', 'column', 'name', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/oom/naming/ColumnNamingStrategy.java#L91-L95,test
blademainer/common_utils,common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java,XmlValidationModeDetector.consumeCommentTokens,"private String consumeCommentTokens(String line) {
        if (line.indexOf(START_COMMENT) == -1 && line.indexOf(END_COMMENT) == -1) {
            return line;
        }
        while ((line = consume(line)) != null) {
            if (!this.inComment && !line.trim().startsWith(START_COMMENT)) {
                return line;
            }
        }
        return line;
    }",java,"private String consumeCommentTokens(String line) {
        if (line.indexOf(START_COMMENT) == -1 && line.indexOf(END_COMMENT) == -1) {
            return line;
        }
        while ((line = consume(line)) != null) {
            if (!this.inComment && !line.trim().startsWith(START_COMMENT)) {
                return line;
            }
        }
        return line;
    }","['private', 'String', 'consumeCommentTokens', '(', 'String', 'line', ')', '{', 'if', '(', 'line', '.', 'indexOf', '(', 'START_COMMENT', ')', '==', '-', '1', '&&', 'line', '.', 'indexOf', '(', 'END_COMMENT', ')', '==', '-', '1', ')', '{', 'return', 'line', ';', '}', 'while', '(', '(', 'line', '=', 'consume', '(', 'line', ')', ')', '!=', 'null', ')', '{', 'if', '(', '!', 'this', '.', 'inComment', '&&', '!', 'line', '.', 'trim', '(', ')', '.', 'startsWith', '(', 'START_COMMENT', ')', ')', '{', 'return', 'line', ';', '}', '}', 'return', 'line', ';', '}']","Consumes all the leading comment data in the given String and returns the remaining content, which
may be empty since the supplied content might be all comment data. For our purposes it is only important
to strip leading comment content on a line since the first piece of non comment content will be either
the DOCTYPE declaration or the root element of the document.","['Consumes', 'all', 'the', 'leading', 'comment', 'data', 'in', 'the', 'given', 'String', 'and', 'returns', 'the', 'remaining', 'content', 'which', 'may', 'be', 'empty', 'since', 'the', 'supplied', 'content', 'might', 'be', 'all', 'comment', 'data', '.', 'For', 'our', 'purposes', 'it', 'is', 'only', 'important', 'to', 'strip', 'leading', 'comment', 'content', 'on', 'a', 'line', 'since', 'the', 'first', 'piece', 'of', 'non', 'comment', 'content', 'will', 'be', 'either', 'the', 'DOCTYPE', 'declaration', 'or', 'the', 'root', 'element', 'of', 'the', 'document', '.']",ef6baf0367c16de95a28caab67a7d5842a6d13db,https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java#L143-L153,test
RestComm/jain-slee,container/common/src/main/java/org/mobicents/slee/container/deployment/ConcreteClassGeneratorUtils.java,ConcreteClassGeneratorUtils.createInheritanceLink,"public static void createInheritanceLink(CtClass concreteClass,
			CtClass superClass) {
		if (superClass == null)
			return;
		try {
			concreteClass.setSuperclass(superClass);
			logger.trace(concreteClass.getName() + "" Inheritance link with ""
					+ superClass.getName() + "" class created"");
		} catch (CannotCompileException cce) {
			cce.printStackTrace();
		}
	}",java,"public static void createInheritanceLink(CtClass concreteClass,
			CtClass superClass) {
		if (superClass == null)
			return;
		try {
			concreteClass.setSuperclass(superClass);
			logger.trace(concreteClass.getName() + "" Inheritance link with ""
					+ superClass.getName() + "" class created"");
		} catch (CannotCompileException cce) {
			cce.printStackTrace();
		}
	}","['public', 'static', 'void', 'createInheritanceLink', '(', 'CtClass', 'concreteClass', ',', 'CtClass', 'superClass', ')', '{', 'if', '(', 'superClass', '==', 'null', ')', 'return', ';', 'try', '{', 'concreteClass', '.', 'setSuperclass', '(', 'superClass', ')', ';', 'logger', '.', 'trace', '(', 'concreteClass', '.', 'getName', '(', ')', '+', '"" Inheritance link with ""', '+', 'superClass', '.', 'getName', '(', ')', '+', '"" class created""', ')', ';', '}', 'catch', '(', 'CannotCompileException', 'cce', ')', '{', 'cce', '.', 'printStackTrace', '(', ')', ';', '}', '}']","Create the inheritance link with the sbb absract class provided by the
sbb developer

@param concreteClass
the concrete class to which to add the inheritance link
@param superClass
the superClass to set","['Create', 'the', 'inheritance', 'link', 'with', 'the', 'sbb', 'absract', 'class', 'provided', 'by', 'the', 'sbb', 'developer']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/container/deployment/ConcreteClassGeneratorUtils.java#L222-L233,test
artclarke/humble-video,humble-video-noarch/src/main/java/io/humble/video/ContainerFormat.java,ContainerFormat.getSupportedCodecs,"public java.util.Collection<Codec.ID> getSupportedCodecs()
   {
     final java.util.List<Codec.ID> retval =
       new java.util.LinkedList<Codec.ID>();
     final java.util.Set<Codec.ID> uniqueSet =
       new java.util.HashSet<Codec.ID>();
     
     int numCodecs = getNumSupportedCodecs();
     for(int i = 0; i < numCodecs; i++)
     {
       Codec.ID id = getSupportedCodecId(i);
       // remove duplicate IDs
       if (id != Codec.ID.CODEC_ID_NONE && !uniqueSet.contains(id))
         retval.add(id);
       uniqueSet.add(id);
     }    
     return retval;
   }",java,"public java.util.Collection<Codec.ID> getSupportedCodecs()
   {
     final java.util.List<Codec.ID> retval =
       new java.util.LinkedList<Codec.ID>();
     final java.util.Set<Codec.ID> uniqueSet =
       new java.util.HashSet<Codec.ID>();
     
     int numCodecs = getNumSupportedCodecs();
     for(int i = 0; i < numCodecs; i++)
     {
       Codec.ID id = getSupportedCodecId(i);
       // remove duplicate IDs
       if (id != Codec.ID.CODEC_ID_NONE && !uniqueSet.contains(id))
         retval.add(id);
       uniqueSet.add(id);
     }    
     return retval;
   }","['public', 'java', '.', 'util', '.', 'Collection', '<', 'Codec', '.', 'ID', '>', 'getSupportedCodecs', '(', ')', '{', 'final', 'java', '.', 'util', '.', 'List', '<', 'Codec', '.', 'ID', '>', 'retval', '=', 'new', 'java', '.', 'util', '.', 'LinkedList', '<', 'Codec', '.', 'ID', '>', '(', ')', ';', 'final', 'java', '.', 'util', '.', 'Set', '<', 'Codec', '.', 'ID', '>', 'uniqueSet', '=', 'new', 'java', '.', 'util', '.', 'HashSet', '<', 'Codec', '.', 'ID', '>', '(', ')', ';', 'int', 'numCodecs', '=', 'getNumSupportedCodecs', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numCodecs', ';', 'i', '++', ')', '{', 'Codec', '.', 'ID', 'id', '=', 'getSupportedCodecId', '(', 'i', ')', ';', '// remove duplicate IDs', 'if', '(', 'id', '!=', 'Codec', '.', 'ID', '.', 'CODEC_ID_NONE', '&&', '!', 'uniqueSet', '.', 'contains', '(', 'id', ')', ')', 'retval', '.', 'add', '(', 'id', ')', ';', 'uniqueSet', '.', 'add', '(', 'id', ')', ';', '}', 'return', 'retval', ';', '}']","Returns a list of all codecs supported for this Object.

<p>

If this object hasn't been set up for output, then
we return null.

</p>

@return A list of supported codecs, in decreasing preferred order.","['Returns', 'a', 'list', 'of', 'all', 'codecs', 'supported', 'for', 'this', 'Object', '.']",aa349ae2d7ef74160b7074feac8d298cf90394d1,https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/ContainerFormat.java#L146-L163,test
PistoiaHELM/HELMNotationParser,src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java,HELM2Notation.toHELM2,"public String toHELM2() {
    String output = """";
    /* first section: simple polymer section */
    output += polymerToHELM2() + ""$"";

    /* second section: connection section */
    output += connectionToHELM2() + ""$"";

    /* third section: grouping section */
    output += groupingToHELM2() + ""$"";

    /* fourth section: annotation section */
    output += annotationToHELM2() + ""$"";

    /* add version number */
    output += ""V2.0"";

    return output;
  }",java,"public String toHELM2() {
    String output = """";
    /* first section: simple polymer section */
    output += polymerToHELM2() + ""$"";

    /* second section: connection section */
    output += connectionToHELM2() + ""$"";

    /* third section: grouping section */
    output += groupingToHELM2() + ""$"";

    /* fourth section: annotation section */
    output += annotationToHELM2() + ""$"";

    /* add version number */
    output += ""V2.0"";

    return output;
  }","['public', 'String', 'toHELM2', '(', ')', '{', 'String', 'output', '=', '""""', ';', '/* first section: simple polymer section */', 'output', '+=', 'polymerToHELM2', '(', ')', '+', '""$""', ';', '/* second section: connection section */', 'output', '+=', 'connectionToHELM2', '(', ')', '+', '""$""', ';', '/* third section: grouping section */', 'output', '+=', 'groupingToHELM2', '(', ')', '+', '""$""', ';', '/* fourth section: annotation section */', 'output', '+=', 'annotationToHELM2', '(', ')', '+', '""$""', ';', '/* add version number */', 'output', '+=', '""V2.0""', ';', 'return', 'output', ';', '}']","method to generate for all sections a HELM2 string

@return HELM2","['method', 'to', 'generate', 'for', 'all', 'sections', 'a', 'HELM2', 'string']",685d7ab7886e9b5cc15fb904025fe6eee703f8f6,https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/notation/HELM2Notation.java#L231-L249,test
GojaFramework/goja,goja-core/src/main/java/goja/core/kits/lang/BinarySearch.java,BinarySearch.forList,"public static <T extends Comparable> BinarySearch<T> forList(final List<T> list) {
        return new BinarySearch<T>() {
            @Override
            @SuppressWarnings({""unchecked""})
            protected int compare(int index, T element) {
                return list.get(index).compareTo(element);
            }

            @Override
            protected int getLastIndex() {
                return list.size() - 1;
            }
        };
    }",java,"public static <T extends Comparable> BinarySearch<T> forList(final List<T> list) {
        return new BinarySearch<T>() {
            @Override
            @SuppressWarnings({""unchecked""})
            protected int compare(int index, T element) {
                return list.get(index).compareTo(element);
            }

            @Override
            protected int getLastIndex() {
                return list.size() - 1;
            }
        };
    }","['public', 'static', '<', 'T', 'extends', 'Comparable', '>', 'BinarySearch', '<', 'T', '>', 'forList', '(', 'final', 'List', '<', 'T', '>', 'list', ')', '{', 'return', 'new', 'BinarySearch', '<', 'T', '>', '(', ')', '{', '@', 'Override', '@', 'SuppressWarnings', '(', '{', '""unchecked""', '}', ')', 'protected', 'int', 'compare', '(', 'int', 'index', ',', 'T', 'element', ')', '{', 'return', 'list', '.', 'get', '(', 'index', ')', '.', 'compareTo', '(', 'element', ')', ';', '}', '@', 'Override', 'protected', 'int', 'getLastIndex', '(', ')', '{', 'return', 'list', '.', 'size', '(', ')', '-', '1', ';', '}', '}', ';', '}']",Creates binary search wrapper over a list of comparable elements.,"['Creates', 'binary', 'search', 'wrapper', 'over', 'a', 'list', 'of', 'comparable', 'elements', '.']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/kits/lang/BinarySearch.java#L22-L35,test
jboss/jboss-common-core,src/main/java/org/jboss/util/TimedCachePolicy.java,TimedCachePolicy.create,"public void create()
   {
      if( threadSafe )
         entryMap = Collections.synchronizedMap(new HashMap());
      else
         entryMap = new HashMap();
      now = System.currentTimeMillis();
   }",java,"public void create()
   {
      if( threadSafe )
         entryMap = Collections.synchronizedMap(new HashMap());
      else
         entryMap = new HashMap();
      now = System.currentTimeMillis();
   }","['public', 'void', 'create', '(', ')', '{', 'if', '(', 'threadSafe', ')', 'entryMap', '=', 'Collections', '.', 'synchronizedMap', '(', 'new', 'HashMap', '(', ')', ')', ';', 'else', 'entryMap', '=', 'new', 'HashMap', '(', ')', ';', 'now', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', '}']",Initializes the cache for use. Prior to this the cache has no store.,"['Initializes', 'the', 'cache', 'for', 'use', '.', 'Prior', 'to', 'this', 'the', 'cache', 'has', 'no', 'store', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/TimedCachePolicy.java#L218-L225,test
oblac/jodd,jodd-core/src/main/java/jodd/cli/Cli.java,Cli.printUsage,"public void printUsage(final String commandName) {
		final StringBuilder usage = new StringBuilder(commandName);

		for (final Option option : options) {
			if (option.shortName != null) {
				usage.append("" [-"").append(option.shortName).append(""]"");
			} else if (option.longName != null) {
				usage.append("" [--"").append(option.longName).append(""]"");
			}
		}

		for (final Param param : params) {
			usage.append("" "").append(param.label);
		}

		System.out.println(usage);
	}",java,"public void printUsage(final String commandName) {
		final StringBuilder usage = new StringBuilder(commandName);

		for (final Option option : options) {
			if (option.shortName != null) {
				usage.append("" [-"").append(option.shortName).append(""]"");
			} else if (option.longName != null) {
				usage.append("" [--"").append(option.longName).append(""]"");
			}
		}

		for (final Param param : params) {
			usage.append("" "").append(param.label);
		}

		System.out.println(usage);
	}","['public', 'void', 'printUsage', '(', 'final', 'String', 'commandName', ')', '{', 'final', 'StringBuilder', 'usage', '=', 'new', 'StringBuilder', '(', 'commandName', ')', ';', 'for', '(', 'final', 'Option', 'option', ':', 'options', ')', '{', 'if', '(', 'option', '.', 'shortName', '!=', 'null', ')', '{', 'usage', '.', 'append', '(', '"" [-""', ')', '.', 'append', '(', 'option', '.', 'shortName', ')', '.', 'append', '(', '""]""', ')', ';', '}', 'else', 'if', '(', 'option', '.', 'longName', '!=', 'null', ')', '{', 'usage', '.', 'append', '(', '"" [--""', ')', '.', 'append', '(', 'option', '.', 'longName', ')', '.', 'append', '(', '""]""', ')', ';', '}', '}', 'for', '(', 'final', 'Param', 'param', ':', 'params', ')', '{', 'usage', '.', 'append', '(', '"" ""', ')', '.', 'append', '(', 'param', '.', 'label', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', 'usage', ')', ';', '}']",Prints the usage line.,"['Prints', 'the', 'usage', 'line', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/cli/Cli.java#L215-L231,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/gis/SpatialGrid.java,SpatialGrid.clear,"public void clear() {
   for (int y=0; y<countY; y++)
     for (int x=0; x<countX; x++)
       gridArray[y][x].used = false;
  }",java,"public void clear() {
   for (int y=0; y<countY; y++)
     for (int x=0; x<countX; x++)
       gridArray[y][x].used = false;
  }","['public', 'void', 'clear', '(', ')', '{', 'for', '(', 'int', 'y', '=', '0', ';', 'y', '<', 'countY', ';', 'y', '++', ')', 'for', '(', 'int', 'x', '=', '0', ';', 'x', '<', 'countX', ';', 'x', '++', ')', 'gridArray', '[', 'y', ']', '[', 'x', ']', '.', 'used', '=', 'false', ';', '}']",clear all the grid cells,"['clear', 'all', 'the', 'grid', 'cells']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/gis/SpatialGrid.java#L78-L82,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/xmlparser/ParserUtils.java,ParserUtils.uencode,"private static String uencode(String prefix) {
        if (prefix != null && prefix.startsWith(""file:"")) {
            StringTokenizer tokens = new StringTokenizer(prefix, ""/\\:"", true);
            StringBuilder stringBuilder = new StringBuilder();
            while (tokens.hasMoreElements()) {
                String token = tokens.nextToken();
                if (""/"".equals(token) || ""\\"".equals(token) || "":"".equals(token)) {
                    stringBuilder.append(token);
                } else {
                    try {
                        stringBuilder.append(URLEncoder.encode(token, ""UTF-8""));
                    } catch(java.io.UnsupportedEncodingException ex) {
                    }
                }
            }
            
            return stringBuilder.toString();
        } else {
            return prefix;
        }
    }",java,"private static String uencode(String prefix) {
        if (prefix != null && prefix.startsWith(""file:"")) {
            StringTokenizer tokens = new StringTokenizer(prefix, ""/\\:"", true);
            StringBuilder stringBuilder = new StringBuilder();
            while (tokens.hasMoreElements()) {
                String token = tokens.nextToken();
                if (""/"".equals(token) || ""\\"".equals(token) || "":"".equals(token)) {
                    stringBuilder.append(token);
                } else {
                    try {
                        stringBuilder.append(URLEncoder.encode(token, ""UTF-8""));
                    } catch(java.io.UnsupportedEncodingException ex) {
                    }
                }
            }
            
            return stringBuilder.toString();
        } else {
            return prefix;
        }
    }","['private', 'static', 'String', 'uencode', '(', 'String', 'prefix', ')', '{', 'if', '(', 'prefix', '!=', 'null', '&&', 'prefix', '.', 'startsWith', '(', '""file:""', ')', ')', '{', 'StringTokenizer', 'tokens', '=', 'new', 'StringTokenizer', '(', 'prefix', ',', '""/\\\\:""', ',', 'true', ')', ';', 'StringBuilder', 'stringBuilder', '=', 'new', 'StringBuilder', '(', ')', ';', 'while', '(', 'tokens', '.', 'hasMoreElements', '(', ')', ')', '{', 'String', 'token', '=', 'tokens', '.', 'nextToken', '(', ')', ';', 'if', '(', '""/""', '.', 'equals', '(', 'token', ')', '||', '""\\\\""', '.', 'equals', '(', 'token', ')', '||', '"":""', '.', 'equals', '(', 'token', ')', ')', '{', 'stringBuilder', '.', 'append', '(', 'token', ')', ';', '}', 'else', '{', 'try', '{', 'stringBuilder', '.', 'append', '(', 'URLEncoder', '.', 'encode', '(', 'token', ',', '""UTF-8""', ')', ')', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'UnsupportedEncodingException', 'ex', ')', '{', '}', '}', '}', 'return', 'stringBuilder', '.', 'toString', '(', ')', ';', '}', 'else', '{', 'return', 'prefix', ';', '}', '}']",END PWC 6386258,"['END', 'PWC', '6386258']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/xmlparser/ParserUtils.java#L222-L242,test
lessthanoptimal/GeoRegression,main/src/georegression/transform/se/SePointOps_F64.java,SePointOps_F64.transform,"public static void transform( Se2_F64 se, Point2D_F64 points[], int length ) {

		double tranX = se.getX();
		double tranY = se.getY();

		final double c = se.getCosineYaw();
		final double s = se.getSineYaw();

		for( int i = 0; i < length; i++ ) {
			Point2D_F64 pt = points[i];

			double x = pt.x;
			double y = pt.y;

			pt.x = tranX + x * c - y * s;
			pt.y = tranY + x * s + y * c;
		}
	}",java,"public static void transform( Se2_F64 se, Point2D_F64 points[], int length ) {

		double tranX = se.getX();
		double tranY = se.getY();

		final double c = se.getCosineYaw();
		final double s = se.getSineYaw();

		for( int i = 0; i < length; i++ ) {
			Point2D_F64 pt = points[i];

			double x = pt.x;
			double y = pt.y;

			pt.x = tranX + x * c - y * s;
			pt.y = tranY + x * s + y * c;
		}
	}","['public', 'static', 'void', 'transform', '(', 'Se2_F64', 'se', ',', 'Point2D_F64', 'points', '[', ']', ',', 'int', 'length', ')', '{', 'double', 'tranX', '=', 'se', '.', 'getX', '(', ')', ';', 'double', 'tranY', '=', 'se', '.', 'getY', '(', ')', ';', 'final', 'double', 'c', '=', 'se', '.', 'getCosineYaw', '(', ')', ';', 'final', 'double', 's', '=', 'se', '.', 'getSineYaw', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'Point2D_F64', 'pt', '=', 'points', '[', 'i', ']', ';', 'double', 'x', '=', 'pt', '.', 'x', ';', 'double', 'y', '=', 'pt', '.', 'y', ';', 'pt', '.', 'x', '=', 'tranX', '+', 'x', '*', 'c', '-', 'y', '*', 's', ';', 'pt', '.', 'y', '=', 'tranY', '+', 'x', '*', 's', '+', 'y', '*', 'c', ';', '}', '}']","Applies a 2D special euclidean transform to an array of points.

@param se	 The transform.
@param points Array of points which are to be transformed.  Modified.
@param length The number of elements in the array that are to be processed.","['Applies', 'a', '2D', 'special', 'euclidean', 'transform', 'to', 'an', 'array', 'of', 'points', '.']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/transform/se/SePointOps_F64.java#L108-L125,test
oblac/jodd,jodd-vtor/src/main/java/jodd/vtor/Vtor.java,Vtor.validate,"public List<Violation> validate(final ValidationContext ctx, final Object target, final String targetName) {
		for (Map.Entry<String, List<Check>> entry : ctx.map.entrySet()) {
			String name = entry.getKey();
			Object value = BeanUtil.declaredSilent.getProperty(target, name);
			String valueName = targetName != null ? (targetName + '.' + name) : name;		// move up
			ValidationConstraintContext vcc = new ValidationConstraintContext(this, target, valueName);
			
			for (Check check : entry.getValue()) {
				String[] checkProfiles = check.getProfiles();
				if (!matchProfiles(checkProfiles)) {
					continue;
				}
				if (check.getSeverity() < severity) {
					continue;
				}
				ValidationConstraint constraint = check.getConstraint();
				if (!constraint.isValid(vcc, value)) {
					addViolation(new Violation(valueName, target, value, check));
				}
			}
		}

		return getViolations();
	}",java,"public List<Violation> validate(final ValidationContext ctx, final Object target, final String targetName) {
		for (Map.Entry<String, List<Check>> entry : ctx.map.entrySet()) {
			String name = entry.getKey();
			Object value = BeanUtil.declaredSilent.getProperty(target, name);
			String valueName = targetName != null ? (targetName + '.' + name) : name;		// move up
			ValidationConstraintContext vcc = new ValidationConstraintContext(this, target, valueName);
			
			for (Check check : entry.getValue()) {
				String[] checkProfiles = check.getProfiles();
				if (!matchProfiles(checkProfiles)) {
					continue;
				}
				if (check.getSeverity() < severity) {
					continue;
				}
				ValidationConstraint constraint = check.getConstraint();
				if (!constraint.isValid(vcc, value)) {
					addViolation(new Violation(valueName, target, value, check));
				}
			}
		}

		return getViolations();
	}","['public', 'List', '<', 'Violation', '>', 'validate', '(', 'final', 'ValidationContext', 'ctx', ',', 'final', 'Object', 'target', ',', 'final', 'String', 'targetName', ')', '{', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'List', '<', 'Check', '>', '>', 'entry', ':', 'ctx', '.', 'map', '.', 'entrySet', '(', ')', ')', '{', 'String', 'name', '=', 'entry', '.', 'getKey', '(', ')', ';', 'Object', 'value', '=', 'BeanUtil', '.', 'declaredSilent', '.', 'getProperty', '(', 'target', ',', 'name', ')', ';', 'String', 'valueName', '=', 'targetName', '!=', 'null', '?', '(', 'targetName', '+', ""'"", ""'"", '+', 'name', ')', ':', 'name', ';', '// move up', 'ValidationConstraintContext', 'vcc', '=', 'new', 'ValidationConstraintContext', '(', 'this', ',', 'target', ',', 'valueName', ')', ';', 'for', '(', 'Check', 'check', ':', 'entry', '.', 'getValue', '(', ')', ')', '{', 'String', '[', ']', 'checkProfiles', '=', 'check', '.', 'getProfiles', '(', ')', ';', 'if', '(', '!', 'matchProfiles', '(', 'checkProfiles', ')', ')', '{', 'continue', ';', '}', 'if', '(', 'check', '.', 'getSeverity', '(', ')', '<', 'severity', ')', '{', 'continue', ';', '}', 'ValidationConstraint', 'constraint', '=', 'check', '.', 'getConstraint', '(', ')', ';', 'if', '(', '!', 'constraint', '.', 'isValid', '(', 'vcc', ',', 'value', ')', ')', '{', 'addViolation', '(', 'new', 'Violation', '(', 'valueName', ',', 'target', ',', 'value', ',', 'check', ')', ')', ';', '}', '}', '}', 'return', 'getViolations', '(', ')', ';', '}']",Performs validation of provided validation context and appends violations.,"['Performs', 'validation', 'of', 'provided', 'validation', 'context', 'and', 'appends', 'violations', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-vtor/src/main/java/jodd/vtor/Vtor.java#L96-L119,test
cologneintelligence/FitGoodies,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java,FileSystemDirectoryHelper.abs2rel,"public String abs2rel(final String basePath, final String absPath) {
		if (!isAbsolutePath(absPath)) {
			return absPath;
		}

		if (isWindowsDrive(absPath) && isWindowsDrive(basePath) && absPath.charAt(0) != basePath.charAt(0)) {
			return absPath;
		}

		StringBuilder result = new StringBuilder();
		String[] baseParts = getParts(basePath);
		String[] absParts = getParts(absPath);

		// extract common prefix
		int start = 0;
		for (int i = 0; i < Math.min(baseParts.length, absParts.length); ++i) {
			if (baseParts[i].equals(absParts[i])) {
				start = i + 1;
			}
		}

		for (int i = start; i < baseParts.length; ++i) {
			if (result.length() > 0) {
				result.append(File.separator);
			}
			result.append("".."");
		}

		for (int i = start; i < absParts.length; ++i) {
			if (result.length() > 0) {
				result.append(File.separator);
			}
			result.append(absParts[i]);
		}

		return result.toString();
	}",java,"public String abs2rel(final String basePath, final String absPath) {
		if (!isAbsolutePath(absPath)) {
			return absPath;
		}

		if (isWindowsDrive(absPath) && isWindowsDrive(basePath) && absPath.charAt(0) != basePath.charAt(0)) {
			return absPath;
		}

		StringBuilder result = new StringBuilder();
		String[] baseParts = getParts(basePath);
		String[] absParts = getParts(absPath);

		// extract common prefix
		int start = 0;
		for (int i = 0; i < Math.min(baseParts.length, absParts.length); ++i) {
			if (baseParts[i].equals(absParts[i])) {
				start = i + 1;
			}
		}

		for (int i = start; i < baseParts.length; ++i) {
			if (result.length() > 0) {
				result.append(File.separator);
			}
			result.append("".."");
		}

		for (int i = start; i < absParts.length; ++i) {
			if (result.length() > 0) {
				result.append(File.separator);
			}
			result.append(absParts[i]);
		}

		return result.toString();
	}","['public', 'String', 'abs2rel', '(', 'final', 'String', 'basePath', ',', 'final', 'String', 'absPath', ')', '{', 'if', '(', '!', 'isAbsolutePath', '(', 'absPath', ')', ')', '{', 'return', 'absPath', ';', '}', 'if', '(', 'isWindowsDrive', '(', 'absPath', ')', '&&', 'isWindowsDrive', '(', 'basePath', ')', '&&', 'absPath', '.', 'charAt', '(', '0', ')', '!=', 'basePath', '.', 'charAt', '(', '0', ')', ')', '{', 'return', 'absPath', ';', '}', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', ')', ';', 'String', '[', ']', 'baseParts', '=', 'getParts', '(', 'basePath', ')', ';', 'String', '[', ']', 'absParts', '=', 'getParts', '(', 'absPath', ')', ';', '// extract common prefix', 'int', 'start', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'Math', '.', 'min', '(', 'baseParts', '.', 'length', ',', 'absParts', '.', 'length', ')', ';', '++', 'i', ')', '{', 'if', '(', 'baseParts', '[', 'i', ']', '.', 'equals', '(', 'absParts', '[', 'i', ']', ')', ')', '{', 'start', '=', 'i', '+', '1', ';', '}', '}', 'for', '(', 'int', 'i', '=', 'start', ';', 'i', '<', 'baseParts', '.', 'length', ';', '++', 'i', ')', '{', 'if', '(', 'result', '.', 'length', '(', ')', '>', '0', ')', '{', 'result', '.', 'append', '(', 'File', '.', 'separator', ')', ';', '}', 'result', '.', 'append', '(', '""..""', ')', ';', '}', 'for', '(', 'int', 'i', '=', 'start', ';', 'i', '<', 'absParts', '.', 'length', ';', '++', 'i', ')', '{', 'if', '(', 'result', '.', 'length', '(', ')', '>', '0', ')', '{', 'result', '.', 'append', '(', 'File', '.', 'separator', ')', ';', '}', 'result', '.', 'append', '(', 'absParts', '[', 'i', ']', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}']","Converts an absolute path into a relative one.

@param basePath path to start from
@param absPath  path to convert
@return {@code absPath} as a relative path starting from {@code basePath}","['Converts', 'an', 'absolute', 'path', 'into', 'a', 'relative', 'one', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java#L142-L178,test
jcodec/jcodec,src/main/java/org/jcodec/codecs/h264/H264Encoder.java,H264Encoder.encodePFrame,"public ByteBuffer encodePFrame(Picture pic, ByteBuffer _out) {
        frameNumber++;
        return doEncodeFrame(pic, _out, true, frameNumber, SliceType.P);
    }",java,"public ByteBuffer encodePFrame(Picture pic, ByteBuffer _out) {
        frameNumber++;
        return doEncodeFrame(pic, _out, true, frameNumber, SliceType.P);
    }","['public', 'ByteBuffer', 'encodePFrame', '(', 'Picture', 'pic', ',', 'ByteBuffer', '_out', ')', '{', 'frameNumber', '++', ';', 'return', 'doEncodeFrame', '(', 'pic', ',', '_out', ',', 'true', ',', 'frameNumber', ',', 'SliceType', '.', 'P', ')', ';', '}']","Encode this picture as a P-frame. P-frame is an frame predicted from one
or more of the previosly decoded frame and is usually 10x less in size
then the IDR frame.

@param pic
@param _out
@return","['Encode', 'this', 'picture', 'as', 'a', 'P', '-', 'frame', '.', 'P', '-', 'frame', 'is', 'an', 'frame', 'predicted', 'from', 'one', 'or', 'more', 'of', 'the', 'previosly', 'decoded', 'frame', 'and', 'is', 'usually', '10x', 'less', 'in', 'size', 'then', 'the', 'IDR', 'frame', '.']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/codecs/h264/H264Encoder.java#L143-L146,test
Unidata/thredds,legacy/src/main/java/ucar/nc2/NetcdfFileWriteable.java,NetcdfFileWriteable.deleteGlobalAttribute,"public Attribute deleteGlobalAttribute(String attName) {
    if (!defineMode) throw new UnsupportedOperationException(""not in define mode"");
    Attribute att = findGlobalAttribute(attName);
    if (null == att) return null;

    rootGroup.remove(att);
    return att;
  }",java,"public Attribute deleteGlobalAttribute(String attName) {
    if (!defineMode) throw new UnsupportedOperationException(""not in define mode"");
    Attribute att = findGlobalAttribute(attName);
    if (null == att) return null;

    rootGroup.remove(att);
    return att;
  }","['public', 'Attribute', 'deleteGlobalAttribute', '(', 'String', 'attName', ')', '{', 'if', '(', '!', 'defineMode', ')', 'throw', 'new', 'UnsupportedOperationException', '(', '""not in define mode""', ')', ';', 'Attribute', 'att', '=', 'findGlobalAttribute', '(', 'attName', ')', ';', 'if', '(', 'null', '==', 'att', ')', 'return', 'null', ';', 'rootGroup', '.', 'remove', '(', 'att', ')', ';', 'return', 'att', ';', '}']","Delete a global Attribute. Must be in define mode.
@param attName existing Attribute has this name
@return deleted Attribute, or null if not found","['Delete', 'a', 'global', 'Attribute', '.', 'Must', 'be', 'in', 'define', 'mode', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/ucar/nc2/NetcdfFileWriteable.java#L330-L337,test
real-logic/aeron,aeron-cluster/src/main/java/io/aeron/cluster/RecordingLog.java,RecordingLog.createRecoveryPlan,"public RecoveryPlan createRecoveryPlan(final AeronArchive archive, final int serviceCount)
    {
        final ArrayList<Snapshot> snapshots = new ArrayList<>();
        final ArrayList<Log> logs = new ArrayList<>();
        planRecovery(snapshots, logs, entries, archive, serviceCount);

        long lastLeadershipTermId = NULL_VALUE;
        long lastTermBaseLogPosition = 0;
        long committedLogPosition = -1;
        long appendedLogPosition = 0;

        final int snapshotStepsSize = snapshots.size();
        if (snapshotStepsSize > 0)
        {
            final Snapshot snapshot = snapshots.get(0);

            lastLeadershipTermId = snapshot.leadershipTermId;
            lastTermBaseLogPosition = snapshot.termBaseLogPosition;
            appendedLogPosition = snapshot.logPosition;
            committedLogPosition = snapshot.logPosition;
        }

        if (!logs.isEmpty())
        {
            final Log log = logs.get(0);

            lastLeadershipTermId = log.leadershipTermId;
            lastTermBaseLogPosition = log.termBaseLogPosition;
            appendedLogPosition = log.stopPosition;
            committedLogPosition = log.logPosition;
        }

        return new RecoveryPlan(
            lastLeadershipTermId,
            lastTermBaseLogPosition,
            appendedLogPosition,
            committedLogPosition,
            snapshots,
            logs);
    }",java,"public RecoveryPlan createRecoveryPlan(final AeronArchive archive, final int serviceCount)
    {
        final ArrayList<Snapshot> snapshots = new ArrayList<>();
        final ArrayList<Log> logs = new ArrayList<>();
        planRecovery(snapshots, logs, entries, archive, serviceCount);

        long lastLeadershipTermId = NULL_VALUE;
        long lastTermBaseLogPosition = 0;
        long committedLogPosition = -1;
        long appendedLogPosition = 0;

        final int snapshotStepsSize = snapshots.size();
        if (snapshotStepsSize > 0)
        {
            final Snapshot snapshot = snapshots.get(0);

            lastLeadershipTermId = snapshot.leadershipTermId;
            lastTermBaseLogPosition = snapshot.termBaseLogPosition;
            appendedLogPosition = snapshot.logPosition;
            committedLogPosition = snapshot.logPosition;
        }

        if (!logs.isEmpty())
        {
            final Log log = logs.get(0);

            lastLeadershipTermId = log.leadershipTermId;
            lastTermBaseLogPosition = log.termBaseLogPosition;
            appendedLogPosition = log.stopPosition;
            committedLogPosition = log.logPosition;
        }

        return new RecoveryPlan(
            lastLeadershipTermId,
            lastTermBaseLogPosition,
            appendedLogPosition,
            committedLogPosition,
            snapshots,
            logs);
    }","['public', 'RecoveryPlan', 'createRecoveryPlan', '(', 'final', 'AeronArchive', 'archive', ',', 'final', 'int', 'serviceCount', ')', '{', 'final', 'ArrayList', '<', 'Snapshot', '>', 'snapshots', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'final', 'ArrayList', '<', 'Log', '>', 'logs', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'planRecovery', '(', 'snapshots', ',', 'logs', ',', 'entries', ',', 'archive', ',', 'serviceCount', ')', ';', 'long', 'lastLeadershipTermId', '=', 'NULL_VALUE', ';', 'long', 'lastTermBaseLogPosition', '=', '0', ';', 'long', 'committedLogPosition', '=', '-', '1', ';', 'long', 'appendedLogPosition', '=', '0', ';', 'final', 'int', 'snapshotStepsSize', '=', 'snapshots', '.', 'size', '(', ')', ';', 'if', '(', 'snapshotStepsSize', '>', '0', ')', '{', 'final', 'Snapshot', 'snapshot', '=', 'snapshots', '.', 'get', '(', '0', ')', ';', 'lastLeadershipTermId', '=', 'snapshot', '.', 'leadershipTermId', ';', 'lastTermBaseLogPosition', '=', 'snapshot', '.', 'termBaseLogPosition', ';', 'appendedLogPosition', '=', 'snapshot', '.', 'logPosition', ';', 'committedLogPosition', '=', 'snapshot', '.', 'logPosition', ';', '}', 'if', '(', '!', 'logs', '.', 'isEmpty', '(', ')', ')', '{', 'final', 'Log', 'log', '=', 'logs', '.', 'get', '(', '0', ')', ';', 'lastLeadershipTermId', '=', 'log', '.', 'leadershipTermId', ';', 'lastTermBaseLogPosition', '=', 'log', '.', 'termBaseLogPosition', ';', 'appendedLogPosition', '=', 'log', '.', 'stopPosition', ';', 'committedLogPosition', '=', 'log', '.', 'logPosition', ';', '}', 'return', 'new', 'RecoveryPlan', '(', 'lastLeadershipTermId', ',', 'lastTermBaseLogPosition', ',', 'appendedLogPosition', ',', 'committedLogPosition', ',', 'snapshots', ',', 'logs', ')', ';', '}']","Create a recovery plan for the cluster that when the steps are replayed will bring the cluster back to the
latest stable state.

@param archive      to lookup recording descriptors.
@param serviceCount of services that may have snapshots.
@return a new {@link RecoveryPlan} for the cluster.","['Create', 'a', 'recovery', 'plan', 'for', 'the', 'cluster', 'that', 'when', 'the', 'steps', 'are', 'replayed', 'will', 'bring', 'the', 'cluster', 'back', 'to', 'the', 'latest', 'stable', 'state', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-cluster/src/main/java/io/aeron/cluster/RecordingLog.java#L567-L606,test
wildfly/wildfly,webservices/server-integration/src/main/java/org/jboss/as/webservices/invocation/AbstractInvocationHandler.java,AbstractInvocationHandler.getComponentView,"protected ComponentView getComponentView() {
        ComponentView cv = componentView;
        // we need to check both, otherwise it is possible for
        // componentView to be initialized before reference
        if (cv == null) {
            synchronized (this) {
                cv = componentView;
                if (cv == null) {
                    cv = getMSCService(componentViewName, ComponentView.class);
                    if (cv == null) {
                        throw WSLogger.ROOT_LOGGER.cannotFindComponentView(componentViewName);
                    }
                    if (reference == null) {
                        try {
                            reference = cv.createInstance();
                        } catch (Exception e) {
                            throw new RuntimeException(e);
                        }
                    }
                    componentView = cv;
                }
            }
        }
        return cv;
    }",java,"protected ComponentView getComponentView() {
        ComponentView cv = componentView;
        // we need to check both, otherwise it is possible for
        // componentView to be initialized before reference
        if (cv == null) {
            synchronized (this) {
                cv = componentView;
                if (cv == null) {
                    cv = getMSCService(componentViewName, ComponentView.class);
                    if (cv == null) {
                        throw WSLogger.ROOT_LOGGER.cannotFindComponentView(componentViewName);
                    }
                    if (reference == null) {
                        try {
                            reference = cv.createInstance();
                        } catch (Exception e) {
                            throw new RuntimeException(e);
                        }
                    }
                    componentView = cv;
                }
            }
        }
        return cv;
    }","['protected', 'ComponentView', 'getComponentView', '(', ')', '{', 'ComponentView', 'cv', '=', 'componentView', ';', '// we need to check both, otherwise it is possible for', '// componentView to be initialized before reference', 'if', '(', 'cv', '==', 'null', ')', '{', 'synchronized', '(', 'this', ')', '{', 'cv', '=', 'componentView', ';', 'if', '(', 'cv', '==', 'null', ')', '{', 'cv', '=', 'getMSCService', '(', 'componentViewName', ',', 'ComponentView', '.', 'class', ')', ';', 'if', '(', 'cv', '==', 'null', ')', '{', 'throw', 'WSLogger', '.', 'ROOT_LOGGER', '.', 'cannotFindComponentView', '(', 'componentViewName', ')', ';', '}', 'if', '(', 'reference', '==', 'null', ')', '{', 'try', '{', 'reference', '=', 'cv', '.', 'createInstance', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}', 'componentView', '=', 'cv', ';', '}', '}', '}', 'return', 'cv', ';', '}']","Gets endpoint container lazily.

@return endpoint container","['Gets', 'endpoint', 'container', 'lazily', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/webservices/server-integration/src/main/java/org/jboss/as/webservices/invocation/AbstractInvocationHandler.java#L76-L100,test
jboss/jboss-common-core,src/main/java/org/jboss/util/xml/DOMUtils.java,DOMUtils.parse,"public static Element parse(InputSource source) throws IOException
    {
        try
        {
            Document doc = getDocumentBuilder().parse(source);
            Element root = doc.getDocumentElement();
            return root;
        }
        catch (SAXException e)
        {
            throw new IOException(e.toString());
        }
    }",java,"public static Element parse(InputSource source) throws IOException
    {
        try
        {
            Document doc = getDocumentBuilder().parse(source);
            Element root = doc.getDocumentElement();
            return root;
        }
        catch (SAXException e)
        {
            throw new IOException(e.toString());
        }
    }","['public', 'static', 'Element', 'parse', '(', 'InputSource', 'source', ')', 'throws', 'IOException', '{', 'try', '{', 'Document', 'doc', '=', 'getDocumentBuilder', '(', ')', '.', 'parse', '(', 'source', ')', ';', 'Element', 'root', '=', 'doc', '.', 'getDocumentElement', '(', ')', ';', 'return', 'root', ';', '}', 'catch', '(', 'SAXException', 'e', ')', '{', 'throw', 'new', 'IOException', '(', 'e', '.', 'toString', '(', ')', ')', ';', '}', '}']","Parse the given input source and return the root Element
@param source
@return the element
@throws IOException","['Parse', 'the', 'given', 'input', 'source', 'and', 'return', 'the', 'root', 'Element']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/DOMUtils.java#L131-L143,test
GleasonK/android-webrtc-api,pnwebrtc/src/main/java/me/kevingleason/pnwebrtc/PnSignalingParams.java,PnSignalingParams.defaultInstance,"public static PnSignalingParams defaultInstance() {
        MediaConstraints pcConstraints    = PnSignalingParams.defaultPcConstraints();
        MediaConstraints videoConstraints = PnSignalingParams.defaultVideoConstraints();
        MediaConstraints audioConstraints = PnSignalingParams.defaultAudioConstraints();
        List<PeerConnection.IceServer> iceServers = PnSignalingParams.defaultIceServers();
        return new PnSignalingParams(iceServers, pcConstraints, videoConstraints, audioConstraints);
    }",java,"public static PnSignalingParams defaultInstance() {
        MediaConstraints pcConstraints    = PnSignalingParams.defaultPcConstraints();
        MediaConstraints videoConstraints = PnSignalingParams.defaultVideoConstraints();
        MediaConstraints audioConstraints = PnSignalingParams.defaultAudioConstraints();
        List<PeerConnection.IceServer> iceServers = PnSignalingParams.defaultIceServers();
        return new PnSignalingParams(iceServers, pcConstraints, videoConstraints, audioConstraints);
    }","['public', 'static', 'PnSignalingParams', 'defaultInstance', '(', ')', '{', 'MediaConstraints', 'pcConstraints', '=', 'PnSignalingParams', '.', 'defaultPcConstraints', '(', ')', ';', 'MediaConstraints', 'videoConstraints', '=', 'PnSignalingParams', '.', 'defaultVideoConstraints', '(', ')', ';', 'MediaConstraints', 'audioConstraints', '=', 'PnSignalingParams', '.', 'defaultAudioConstraints', '(', ')', ';', 'List', '<', 'PeerConnection', '.', 'IceServer', '>', 'iceServers', '=', 'PnSignalingParams', '.', 'defaultIceServers', '(', ')', ';', 'return', 'new', 'PnSignalingParams', '(', 'iceServers', ',', 'pcConstraints', ',', 'videoConstraints', ',', 'audioConstraints', ')', ';', '}']","The default parameters for media constraints. Might have to tweak in future.
@return default parameters","['The', 'default', 'parameters', 'for', 'media', 'constraints', '.', 'Might', 'have', 'to', 'tweak', 'in', 'future', '.']",1db4cf5838f1e880c327906dd01a02f82d8d329c,https://github.com/GleasonK/android-webrtc-api/blob/1db4cf5838f1e880c327906dd01a02f82d8d329c/pnwebrtc/src/main/java/me/kevingleason/pnwebrtc/PnSignalingParams.java#L80-L86,test
Unidata/thredds,cdm/src/main/java/ucar/atd/dorade/DoradeSWIB.java,DoradeSWIB.getAzimuths,"public float[] getAzimuths() {
    if (azimuths == null) {
      azimuths = new float[nRays];
      for (int r = 0; r < nRays; r++) {
        azimuths[r] = myRYIBs[r].getAzimuth();
      }
    }
    return azimuths;
  }",java,"public float[] getAzimuths() {
    if (azimuths == null) {
      azimuths = new float[nRays];
      for (int r = 0; r < nRays; r++) {
        azimuths[r] = myRYIBs[r].getAzimuth();
      }
    }
    return azimuths;
  }","['public', 'float', '[', ']', 'getAzimuths', '(', ')', '{', 'if', '(', 'azimuths', '==', 'null', ')', '{', 'azimuths', '=', 'new', 'float', '[', 'nRays', ']', ';', 'for', '(', 'int', 'r', '=', '0', ';', 'r', '<', 'nRays', ';', 'r', '++', ')', '{', 'azimuths', '[', 'r', ']', '=', 'myRYIBs', '[', 'r', ']', '.', 'getAzimuth', '(', ')', ';', '}', '}', 'return', 'azimuths', ';', '}']","Get the array of azimuths for this sweep.

@return the array of azimuths for this sweep
@see #getNRays()","['Get', 'the', 'array', 'of', 'azimuths', 'for', 'this', 'sweep', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/atd/dorade/DoradeSWIB.java#L208-L216,test
hawkular/hawkular-metrics,core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/DataAccessImpl.java,DataAccessImpl.findAllDataFromBucket,"@Override
    public Observable<Observable<Row>> findAllDataFromBucket(long timestamp, int pageSize, int maxConcurrency) {
        PreparedStatement ts =
                getTempStatement(MetricType.UNDEFINED, TempStatement.SCAN_WITH_TOKEN_RANGES, timestamp);

        // The table does not exists - case such as when starting Hawkular-Metrics for the first time just before
        // compression kicks in.
        if(ts == null || prepMap.floorKey(timestamp) == 0L) {
            return Observable.empty();
        }

        return Observable.from(getTokenRanges())
                .map(tr -> rxSession.executeAndFetch(
                        ts
                                .bind()
                                .setToken(0, tr.getStart())
                                .setToken(1, tr.getEnd())
                                .setFetchSize(pageSize)));
    }",java,"@Override
    public Observable<Observable<Row>> findAllDataFromBucket(long timestamp, int pageSize, int maxConcurrency) {
        PreparedStatement ts =
                getTempStatement(MetricType.UNDEFINED, TempStatement.SCAN_WITH_TOKEN_RANGES, timestamp);

        // The table does not exists - case such as when starting Hawkular-Metrics for the first time just before
        // compression kicks in.
        if(ts == null || prepMap.floorKey(timestamp) == 0L) {
            return Observable.empty();
        }

        return Observable.from(getTokenRanges())
                .map(tr -> rxSession.executeAndFetch(
                        ts
                                .bind()
                                .setToken(0, tr.getStart())
                                .setToken(1, tr.getEnd())
                                .setFetchSize(pageSize)));
    }","['@', 'Override', 'public', 'Observable', '<', 'Observable', '<', 'Row', '>', '>', 'findAllDataFromBucket', '(', 'long', 'timestamp', ',', 'int', 'pageSize', ',', 'int', 'maxConcurrency', ')', '{', 'PreparedStatement', 'ts', '=', 'getTempStatement', '(', 'MetricType', '.', 'UNDEFINED', ',', 'TempStatement', '.', 'SCAN_WITH_TOKEN_RANGES', ',', 'timestamp', ')', ';', '// The table does not exists - case such as when starting Hawkular-Metrics for the first time just before', '// compression kicks in.', 'if', '(', 'ts', '==', 'null', '||', 'prepMap', '.', 'floorKey', '(', 'timestamp', ')', '==', '0L', ')', '{', 'return', 'Observable', '.', 'empty', '(', ')', ';', '}', 'return', 'Observable', '.', 'from', '(', 'getTokenRanges', '(', ')', ')', '.', 'map', '(', 'tr', '->', 'rxSession', '.', 'executeAndFetch', '(', 'ts', '.', 'bind', '(', ')', '.', 'setToken', '(', '0', ',', 'tr', '.', 'getStart', '(', ')', ')', '.', 'setToken', '(', '1', ',', 'tr', '.', 'getEnd', '(', ')', ')', '.', 'setFetchSize', '(', 'pageSize', ')', ')', ')', ';', '}']","Fetch all the data from a temporary table for the compression job. Using TokenRanges avoids fetching first
all the metrics' partition keys and then requesting them.

Performance can be improved by using data locality and fetching with multiple threads.

@param timestamp A timestamp inside the wanted bucket (such as the previous starting row timestamp)
@param pageSize How many rows to fetch each time
@param maxConcurrency To how many streams should token ranges be split to
@return Observable of Observables per partition key","['Fetch', 'all', 'the', 'data', 'from', 'a', 'temporary', 'table', 'for', 'the', 'compression', 'job', '.', 'Using', 'TokenRanges', 'avoids', 'fetching', 'first', 'all', 'the', 'metrics', 'partition', 'keys', 'and', 'then', 'requesting', 'them', '.']",6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c,https://github.com/hawkular/hawkular-metrics/blob/6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c/core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/DataAccessImpl.java#L842-L860,test
jboss/jboss-common-core,src/main/java/org/jboss/util/property/PropertyManager.java,PropertyManager.names,"public static Iterator names()
   {
      SecurityManager sm = System.getSecurityManager();
      if (sm != null)
         sm.checkPropertiesAccess();
      return props.names();
   }",java,"public static Iterator names()
   {
      SecurityManager sm = System.getSecurityManager();
      if (sm != null)
         sm.checkPropertiesAccess();
      return props.names();
   }","['public', 'static', 'Iterator', 'names', '(', ')', '{', 'SecurityManager', 'sm', '=', 'System', '.', 'getSecurityManager', '(', ')', ';', 'if', '(', 'sm', '!=', 'null', ')', 'sm', '.', 'checkPropertiesAccess', '(', ')', ';', 'return', 'props', '.', 'names', '(', ')', ';', '}']","Return an iterator over all contained property names.

@return     Property name iterator.","['Return', 'an', 'iterator', 'over', 'all', 'contained', 'property', 'names', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/property/PropertyManager.java#L307-L313,test
oblac/jodd,jodd-decora/src/main/java/jodd/decora/parser/DecoratorTagVisitor.java,DecoratorTagVisitor.onDecoraTag,"protected void onDecoraTag(final Tag tag) {
		String tagName = tag.getName().toString();

		if (tag.getType() == TagType.SELF_CLOSING) {
			checkNestedDecoraTags();
			decoraTagName = tagName.substring(7);
			decoraTagStart = tag.getTagPosition();
			decoraTagEnd = tag.getTagPosition() + tag.getTagLength();
			defineDecoraTag();
			return;
		}

		if (tag.getType() == TagType.START) {
			checkNestedDecoraTags();
			decoraTagName = tagName.substring(7);
			decoraTagStart = tag.getTagPosition();
			decoraTagDefaultValueStart = tag.getTagPosition() + tag.getTagLength();
			return;
		}

		// closed tag type
		decoraTagEnd = tag.getTagPosition() + tag.getTagLength();
		decoraTagDefaultValueEnd = tag.getTagPosition();
		defineDecoraTag();
	}",java,"protected void onDecoraTag(final Tag tag) {
		String tagName = tag.getName().toString();

		if (tag.getType() == TagType.SELF_CLOSING) {
			checkNestedDecoraTags();
			decoraTagName = tagName.substring(7);
			decoraTagStart = tag.getTagPosition();
			decoraTagEnd = tag.getTagPosition() + tag.getTagLength();
			defineDecoraTag();
			return;
		}

		if (tag.getType() == TagType.START) {
			checkNestedDecoraTags();
			decoraTagName = tagName.substring(7);
			decoraTagStart = tag.getTagPosition();
			decoraTagDefaultValueStart = tag.getTagPosition() + tag.getTagLength();
			return;
		}

		// closed tag type
		decoraTagEnd = tag.getTagPosition() + tag.getTagLength();
		decoraTagDefaultValueEnd = tag.getTagPosition();
		defineDecoraTag();
	}","['protected', 'void', 'onDecoraTag', '(', 'final', 'Tag', 'tag', ')', '{', 'String', 'tagName', '=', 'tag', '.', 'getName', '(', ')', '.', 'toString', '(', ')', ';', 'if', '(', 'tag', '.', 'getType', '(', ')', '==', 'TagType', '.', 'SELF_CLOSING', ')', '{', 'checkNestedDecoraTags', '(', ')', ';', 'decoraTagName', '=', 'tagName', '.', 'substring', '(', '7', ')', ';', 'decoraTagStart', '=', 'tag', '.', 'getTagPosition', '(', ')', ';', 'decoraTagEnd', '=', 'tag', '.', 'getTagPosition', '(', ')', '+', 'tag', '.', 'getTagLength', '(', ')', ';', 'defineDecoraTag', '(', ')', ';', 'return', ';', '}', 'if', '(', 'tag', '.', 'getType', '(', ')', '==', 'TagType', '.', 'START', ')', '{', 'checkNestedDecoraTags', '(', ')', ';', 'decoraTagName', '=', 'tagName', '.', 'substring', '(', '7', ')', ';', 'decoraTagStart', '=', 'tag', '.', 'getTagPosition', '(', ')', ';', 'decoraTagDefaultValueStart', '=', 'tag', '.', 'getTagPosition', '(', ')', '+', 'tag', '.', 'getTagLength', '(', ')', ';', 'return', ';', '}', '// closed tag type', 'decoraTagEnd', '=', 'tag', '.', 'getTagPosition', '(', ')', '+', 'tag', '.', 'getTagLength', '(', ')', ';', 'decoraTagDefaultValueEnd', '=', 'tag', '.', 'getTagPosition', '(', ')', ';', 'defineDecoraTag', '(', ')', ';', '}']",Handle Decora tags.,"['Handle', 'Decora', 'tags', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-decora/src/main/java/jodd/decora/parser/DecoratorTagVisitor.java#L91-L115,test
WASdev/ci.common,src/main/java/net/wasdev/wlp/common/plugins/util/InstallFeatureUtil.java,InstallFeatureUtil.extractSymbolicName,"public static String extractSymbolicName(File jar) throws PluginExecutionException {
        JarFile jarFile = null;
        try {
            jarFile = new JarFile(jar);
            return jarFile.getManifest().getMainAttributes().getValue(""Bundle-SymbolicName"");
        } catch (IOException e) {
            throw new PluginExecutionException(""Could not load the jar "" + jar.getAbsolutePath(), e);
        } finally {
            if (jarFile != null) {
                try {
                    jarFile.close();
                } catch (IOException e) {
                    // nothing to do here
                }
            }
        }
    }",java,"public static String extractSymbolicName(File jar) throws PluginExecutionException {
        JarFile jarFile = null;
        try {
            jarFile = new JarFile(jar);
            return jarFile.getManifest().getMainAttributes().getValue(""Bundle-SymbolicName"");
        } catch (IOException e) {
            throw new PluginExecutionException(""Could not load the jar "" + jar.getAbsolutePath(), e);
        } finally {
            if (jarFile != null) {
                try {
                    jarFile.close();
                } catch (IOException e) {
                    // nothing to do here
                }
            }
        }
    }","['public', 'static', 'String', 'extractSymbolicName', '(', 'File', 'jar', ')', 'throws', 'PluginExecutionException', '{', 'JarFile', 'jarFile', '=', 'null', ';', 'try', '{', 'jarFile', '=', 'new', 'JarFile', '(', 'jar', ')', ';', 'return', 'jarFile', '.', 'getManifest', '(', ')', '.', 'getMainAttributes', '(', ')', '.', 'getValue', '(', '""Bundle-SymbolicName""', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'PluginExecutionException', '(', '""Could not load the jar ""', '+', 'jar', '.', 'getAbsolutePath', '(', ')', ',', 'e', ')', ';', '}', 'finally', '{', 'if', '(', 'jarFile', '!=', 'null', ')', '{', 'try', '{', 'jarFile', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '// nothing to do here', '}', '}', '}', '}']","Extracts the bundle symbolic name from the jar manifest.

@param jar
the jar from which the symbolic name will be extracted
@return the Bundle-SymbolicName","['Extracts', 'the', 'bundle', 'symbolic', 'name', 'from', 'the', 'jar', 'manifest', '.']",24fc917383e9ff60ea6a42972c86577fe0f4591e,https://github.com/WASdev/ci.common/blob/24fc917383e9ff60ea6a42972c86577fe0f4591e/src/main/java/net/wasdev/wlp/common/plugins/util/InstallFeatureUtil.java#L833-L849,test
oblac/jodd,jodd-http/src/main/java/jodd/http/HttpRequest.java,HttpRequest.hostUrl,"public String hostUrl() {
		StringBand url = new StringBand(8);

		if (protocol != null) {
			url.append(protocol);
			url.append(""://"");
		}

		if (host != null) {
			url.append(host);
		}

		if (port != Defaults.DEFAULT_PORT) {
			url.append(':');
			url.append(port);
		}

		return url.toString();
	}",java,"public String hostUrl() {
		StringBand url = new StringBand(8);

		if (protocol != null) {
			url.append(protocol);
			url.append(""://"");
		}

		if (host != null) {
			url.append(host);
		}

		if (port != Defaults.DEFAULT_PORT) {
			url.append(':');
			url.append(port);
		}

		return url.toString();
	}","['public', 'String', 'hostUrl', '(', ')', '{', 'StringBand', 'url', '=', 'new', 'StringBand', '(', '8', ')', ';', 'if', '(', 'protocol', '!=', 'null', ')', '{', 'url', '.', 'append', '(', 'protocol', ')', ';', 'url', '.', 'append', '(', '""://""', ')', ';', '}', 'if', '(', 'host', '!=', 'null', ')', '{', 'url', '.', 'append', '(', 'host', ')', ';', '}', 'if', '(', 'port', '!=', 'Defaults', '.', 'DEFAULT_PORT', ')', '{', 'url', '.', 'append', '(', ""'"", ""'"", ')', ';', 'url', '.', 'append', '(', 'port', ')', ';', '}', 'return', 'url', '.', 'toString', '(', ')', ';', '}']","Returns just host url, without path and query.","['Returns', 'just', 'host', 'url', 'without', 'path', 'and', 'query', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-http/src/main/java/jodd/http/HttpRequest.java#L525-L543,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/profile/AbstractProfileMBeanImpl.java,AbstractProfileMBeanImpl.writeMode,"private void writeMode() throws SLEEException, ManagementException {
        if (!isProfileWriteable()) {
            if (logger.isDebugEnabled()) {
                logger.debug(""Changing state to read-write, for profile mbean with name "" + profileName + "", from table with name "" + this.profileTable.getProfileTableName());
            }
            // get object & make it writable
            ProfileObjectImpl profileObject = profileTable.getProfile(profileName);
            profileObject.getProfileEntity().setReadOnly(false);
            // change state
            state = State.write;
        } else {
            if (logger.isDebugEnabled()) {
                logger.debug(""Already in write state, for profile mbean with name "" + profileName + "", from table with name "" + this.profileTable.getProfileTableName());
            }
        }
    }",java,"private void writeMode() throws SLEEException, ManagementException {
        if (!isProfileWriteable()) {
            if (logger.isDebugEnabled()) {
                logger.debug(""Changing state to read-write, for profile mbean with name "" + profileName + "", from table with name "" + this.profileTable.getProfileTableName());
            }
            // get object & make it writable
            ProfileObjectImpl profileObject = profileTable.getProfile(profileName);
            profileObject.getProfileEntity().setReadOnly(false);
            // change state
            state = State.write;
        } else {
            if (logger.isDebugEnabled()) {
                logger.debug(""Already in write state, for profile mbean with name "" + profileName + "", from table with name "" + this.profileTable.getProfileTableName());
            }
        }
    }","['private', 'void', 'writeMode', '(', ')', 'throws', 'SLEEException', ',', 'ManagementException', '{', 'if', '(', '!', 'isProfileWriteable', '(', ')', ')', '{', 'if', '(', 'logger', '.', 'isDebugEnabled', '(', ')', ')', '{', 'logger', '.', 'debug', '(', '""Changing state to read-write, for profile mbean with name ""', '+', 'profileName', '+', '"", from table with name ""', '+', 'this', '.', 'profileTable', '.', 'getProfileTableName', '(', ')', ')', ';', '}', '// get object & make it writable', 'ProfileObjectImpl', 'profileObject', '=', 'profileTable', '.', 'getProfile', '(', 'profileName', ')', ';', 'profileObject', '.', 'getProfileEntity', '(', ')', '.', 'setReadOnly', '(', 'false', ')', ';', '// change state', 'state', '=', 'State', '.', 'write', ';', '}', 'else', '{', 'if', '(', 'logger', '.', 'isDebugEnabled', '(', ')', ')', '{', 'logger', '.', 'debug', '(', '""Already in write state, for profile mbean with name ""', '+', 'profileName', '+', '"", from table with name ""', '+', 'this', '.', 'profileTable', '.', 'getProfileTableName', '(', ')', ')', ';', '}', '}', '}']","Moves to the write mode, using specified object. The current java transaction will be suspended.

@throws ManagementException","['Moves', 'to', 'the', 'write', 'mode', 'using', 'specified', 'object', '.', 'The', 'current', 'java', 'transaction', 'will', 'be', 'suspended', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/profile/AbstractProfileMBeanImpl.java#L240-L255,test
oblac/jodd,jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerBundlesManager.java,HtmlStaplerBundlesManager.reset,"public synchronized void reset() {
		if (strategy == Strategy.ACTION_MANAGED) {
			actionBundles.clear();
			mirrors.clear();
		}

		final FindFile ff = new FindFile();
		ff.includeDirs(false);
		ff.searchPath(new File(bundleFolder, staplerPath));

		File f;
		int count = 0;
		while ((f = ff.nextFile()) != null) {
			f.delete();
			count++;
		}
		if (log.isInfoEnabled()) {
			log.info(""reset: "" + count + "" bundle files deleted."");
		}
	}",java,"public synchronized void reset() {
		if (strategy == Strategy.ACTION_MANAGED) {
			actionBundles.clear();
			mirrors.clear();
		}

		final FindFile ff = new FindFile();
		ff.includeDirs(false);
		ff.searchPath(new File(bundleFolder, staplerPath));

		File f;
		int count = 0;
		while ((f = ff.nextFile()) != null) {
			f.delete();
			count++;
		}
		if (log.isInfoEnabled()) {
			log.info(""reset: "" + count + "" bundle files deleted."");
		}
	}","['public', 'synchronized', 'void', 'reset', '(', ')', '{', 'if', '(', 'strategy', '==', 'Strategy', '.', 'ACTION_MANAGED', ')', '{', 'actionBundles', '.', 'clear', '(', ')', ';', 'mirrors', '.', 'clear', '(', ')', ';', '}', 'final', 'FindFile', 'ff', '=', 'new', 'FindFile', '(', ')', ';', 'ff', '.', 'includeDirs', '(', 'false', ')', ';', 'ff', '.', 'searchPath', '(', 'new', 'File', '(', 'bundleFolder', ',', 'staplerPath', ')', ')', ';', 'File', 'f', ';', 'int', 'count', '=', '0', ';', 'while', '(', '(', 'f', '=', 'ff', '.', 'nextFile', '(', ')', ')', '!=', 'null', ')', '{', 'f', '.', 'delete', '(', ')', ';', 'count', '++', ';', '}', 'if', '(', 'log', '.', 'isInfoEnabled', '(', ')', ')', '{', 'log', '.', 'info', '(', '""reset: ""', '+', 'count', '+', '"" bundle files deleted.""', ')', ';', '}', '}']",Clears all settings and removes all created bundle files from file system.,"['Clears', 'all', 'settings', 'and', 'removes', 'all', 'created', 'bundle', 'files', 'from', 'file', 'system', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerBundlesManager.java#L549-L568,test
rupertlssmith/lojix,base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java,ScopeHelper.put,"public void put(String name, Object value)
    {
        pageContext.setAttribute(name, value, scope);
    }",java,"public void put(String name, Object value)
    {
        pageContext.setAttribute(name, value, scope);
    }","['public', 'void', 'put', '(', 'String', 'name', ',', 'Object', 'value', ')', '{', 'pageContext', '.', 'setAttribute', '(', 'name', ',', 'value', ',', 'scope', ')', ';', '}']","Inserts an object into the scope.

@param name  The name of the variable to set.
@param value The value to set.","['Inserts', 'an', 'object', 'into', 'the', 'scope', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/struts-tools/src/main/com/thesett/common/webapp/tags/ScopeHelper.java#L81-L84,test
RestComm/jain-slee,api/jar/src/main/java/javax/slee/management/VendorExtensionUtils.java,VendorExtensionUtils.writeObject,"public static void writeObject(ObjectOutputStream out, Object vendorData) throws IOException {
        // write non-transient fields
        out.defaultWriteObject();
        // check if should we serialize vendor data?
        if (vendorData != null) {
            // serialize the vendor data
            out.writeBoolean(true);
            // write the vendor data in a marshalled object so deserialization can be deferred
            out.writeObject(new MarshalledObject(vendorData));
        }
        else out.writeBoolean(false);
    }",java,"public static void writeObject(ObjectOutputStream out, Object vendorData) throws IOException {
        // write non-transient fields
        out.defaultWriteObject();
        // check if should we serialize vendor data?
        if (vendorData != null) {
            // serialize the vendor data
            out.writeBoolean(true);
            // write the vendor data in a marshalled object so deserialization can be deferred
            out.writeObject(new MarshalledObject(vendorData));
        }
        else out.writeBoolean(false);
    }","['public', 'static', 'void', 'writeObject', '(', 'ObjectOutputStream', 'out', ',', 'Object', 'vendorData', ')', 'throws', 'IOException', '{', '// write non-transient fields', 'out', '.', 'defaultWriteObject', '(', ')', ';', '// check if should we serialize vendor data?', 'if', '(', 'vendorData', '!=', 'null', ')', '{', '// serialize the vendor data', 'out', '.', 'writeBoolean', '(', 'true', ')', ';', '// write the vendor data in a marshalled object so deserialization can be deferred', 'out', '.', 'writeObject', '(', 'new', 'MarshalledObject', '(', 'vendorData', ')', ')', ';', '}', 'else', 'out', '.', 'writeBoolean', '(', 'false', ')', ';', '}']","Write the current object and vendor-specific data to the output stream.
@param out the object output stream that the current object is being written to.
@param vendorData the optional vendor data to include in the serialization stream.
@throws IOException if an I/O error occurs while writing to the output stream.","['Write', 'the', 'current', 'object', 'and', 'vendor', '-', 'specific', 'data', 'to', 'the', 'output', 'stream', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/api/jar/src/main/java/javax/slee/management/VendorExtensionUtils.java#L19-L30,test
ReactiveX/RxJava,src/main/java/io/reactivex/processors/UnicastProcessor.java,UnicastProcessor.create,"@CheckReturnValue
    @NonNull
    public static <T> UnicastProcessor<T> create(int capacityHint, Runnable onCancelled) {
        ObjectHelper.requireNonNull(onCancelled, ""onTerminate"");
        return new UnicastProcessor<T>(capacityHint, onCancelled);
    }",java,"@CheckReturnValue
    @NonNull
    public static <T> UnicastProcessor<T> create(int capacityHint, Runnable onCancelled) {
        ObjectHelper.requireNonNull(onCancelled, ""onTerminate"");
        return new UnicastProcessor<T>(capacityHint, onCancelled);
    }","['@', 'CheckReturnValue', '@', 'NonNull', 'public', 'static', '<', 'T', '>', 'UnicastProcessor', '<', 'T', '>', 'create', '(', 'int', 'capacityHint', ',', 'Runnable', 'onCancelled', ')', '{', 'ObjectHelper', '.', 'requireNonNull', '(', 'onCancelled', ',', '""onTerminate""', ')', ';', 'return', 'new', 'UnicastProcessor', '<', 'T', '>', '(', 'capacityHint', ',', 'onCancelled', ')', ';', '}']","Creates an UnicastProcessor with the given internal buffer capacity hint and a callback for
the case when the single Subscriber cancels its subscription.

<p>The callback, if not null, is called exactly once and
non-overlapped with any active replay.

@param <T> the value type
@param capacityHint the hint to size the internal unbounded buffer
@param onCancelled the non null callback
@return an UnicastProcessor instance","['Creates', 'an', 'UnicastProcessor', 'with', 'the', 'given', 'internal', 'buffer', 'capacity', 'hint', 'and', 'a', 'callback', 'for', 'the', 'case', 'when', 'the', 'single', 'Subscriber', 'cancels', 'its', 'subscription', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/processors/UnicastProcessor.java#L224-L229,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dataset/NetcdfDataset.java,NetcdfDataset.findCoordinateTransform,"public CoordinateTransform findCoordinateTransform(String name) {
    if (name == null) return null;
    for (CoordinateTransform v : coordTransforms) {
      if (name.equals(v.getName()))
        return v;
    }
    return null;
  }",java,"public CoordinateTransform findCoordinateTransform(String name) {
    if (name == null) return null;
    for (CoordinateTransform v : coordTransforms) {
      if (name.equals(v.getName()))
        return v;
    }
    return null;
  }","['public', 'CoordinateTransform', 'findCoordinateTransform', '(', 'String', 'name', ')', '{', 'if', '(', 'name', '==', 'null', ')', 'return', 'null', ';', 'for', '(', 'CoordinateTransform', 'v', ':', 'coordTransforms', ')', '{', 'if', '(', 'name', '.', 'equals', '(', 'v', '.', 'getName', '(', ')', ')', ')', 'return', 'v', ';', '}', 'return', 'null', ';', '}']","Retrieve the CoordinateTransform with the specified name.

@param name String which identifies the desired CoordinateSystem
@return the CoordinateSystem, or null if not found","['Retrieve', 'the', 'CoordinateTransform', 'with', 'the', 'specified', 'name', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/NetcdfDataset.java#L1010-L1017,test
liveontologies/elk-reasoner,elk-util-parent/elk-util-collections/src/main/java/org/semanticweb/elk/util/collections/ArrayHashMap.java,ArrayHashMap.enlarge,"private void enlarge() {
		int oldCapacity = keys.length;
		if (oldCapacity == LinearProbing.MAXIMUM_CAPACITY)
			throw new IllegalArgumentException(
					""Map cannot grow beyond capacity: ""
							+ LinearProbing.MAXIMUM_CAPACITY);
		K oldKeys[] = keys;
		V oldValues[] = values;
		int newCapacity = oldCapacity << 1;
		@SuppressWarnings(""unchecked"")
		K newKeys[] = (K[]) new Object[newCapacity];
		@SuppressWarnings(""unchecked"")
		V newValues[] = (V[]) new Object[newCapacity];
		for (int i = 0; i < oldCapacity; i++) {
			K key = oldKeys[i];
			if (key != null)
				putKeyValue(newKeys, newValues, key, oldValues[i]);
		}
		this.keys = newKeys;
		this.values = newValues;
	}",java,"private void enlarge() {
		int oldCapacity = keys.length;
		if (oldCapacity == LinearProbing.MAXIMUM_CAPACITY)
			throw new IllegalArgumentException(
					""Map cannot grow beyond capacity: ""
							+ LinearProbing.MAXIMUM_CAPACITY);
		K oldKeys[] = keys;
		V oldValues[] = values;
		int newCapacity = oldCapacity << 1;
		@SuppressWarnings(""unchecked"")
		K newKeys[] = (K[]) new Object[newCapacity];
		@SuppressWarnings(""unchecked"")
		V newValues[] = (V[]) new Object[newCapacity];
		for (int i = 0; i < oldCapacity; i++) {
			K key = oldKeys[i];
			if (key != null)
				putKeyValue(newKeys, newValues, key, oldValues[i]);
		}
		this.keys = newKeys;
		this.values = newValues;
	}","['private', 'void', 'enlarge', '(', ')', '{', 'int', 'oldCapacity', '=', 'keys', '.', 'length', ';', 'if', '(', 'oldCapacity', '==', 'LinearProbing', '.', 'MAXIMUM_CAPACITY', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""Map cannot grow beyond capacity: ""', '+', 'LinearProbing', '.', 'MAXIMUM_CAPACITY', ')', ';', 'K', 'oldKeys', '[', ']', '=', 'keys', ';', 'V', 'oldValues', '[', ']', '=', 'values', ';', 'int', 'newCapacity', '=', 'oldCapacity', '<<', '1', ';', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'K', 'newKeys', '[', ']', '=', '(', 'K', '[', ']', ')', 'new', 'Object', '[', 'newCapacity', ']', ';', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'V', 'newValues', '[', ']', '=', '(', 'V', '[', ']', ')', 'new', 'Object', '[', 'newCapacity', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'oldCapacity', ';', 'i', '++', ')', '{', 'K', 'key', '=', 'oldKeys', '[', 'i', ']', ';', 'if', '(', 'key', '!=', 'null', ')', 'putKeyValue', '(', 'newKeys', ',', 'newValues', ',', 'key', ',', 'oldValues', '[', 'i', ']', ')', ';', '}', 'this', '.', 'keys', '=', 'newKeys', ';', 'this', '.', 'values', '=', 'newValues', ';', '}']",Increasing the capacity of the map,"['Increasing', 'the', 'capacity', 'of', 'the', 'map']",cfbe5279a57e0433d45c1676c7658ddb6e29b9eb,https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-util-parent/elk-util-collections/src/main/java/org/semanticweb/elk/util/collections/ArrayHashMap.java#L191-L211,test
google/guice,core/src/com/google/inject/internal/BytecodeGen.java,BytecodeGen.hasSameVersionOfCglib,"private static boolean hasSameVersionOfCglib(ClassLoader classLoader) {
    Class<?> fc = net.sf.cglib.reflect.FastClass.class;
    try {
      return classLoader.loadClass(fc.getName()) == fc;
    } catch (ClassNotFoundException e) {
      return false;
    }
  }",java,"private static boolean hasSameVersionOfCglib(ClassLoader classLoader) {
    Class<?> fc = net.sf.cglib.reflect.FastClass.class;
    try {
      return classLoader.loadClass(fc.getName()) == fc;
    } catch (ClassNotFoundException e) {
      return false;
    }
  }","['private', 'static', 'boolean', 'hasSameVersionOfCglib', '(', 'ClassLoader', 'classLoader', ')', '{', 'Class', '<', '?', '>', 'fc', '=', 'net', '.', 'sf', '.', 'cglib', '.', 'reflect', '.', 'FastClass', '.', 'class', ';', 'try', '{', 'return', 'classLoader', '.', 'loadClass', '(', 'fc', '.', 'getName', '(', ')', ')', '==', 'fc', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', 'return', 'false', ';', '}', '}']","Returns true if the types classloader has the same version of cglib that BytecodeGen has. This
only returns false in strange OSGI situations, but it prevents us from using FastClass for non
public members.","['Returns', 'true', 'if', 'the', 'types', 'classloader', 'has', 'the', 'same', 'version', 'of', 'cglib', 'that', 'BytecodeGen', 'has', '.', 'This', 'only', 'returns', 'false', 'in', 'strange', 'OSGI', 'situations', 'but', 'it', 'prevents', 'us', 'from', 'using', 'FastClass', 'for', 'non', 'public', 'members', '.']",a0552a16d813ead98fe73737fb001db336650251,https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/core/src/com/google/inject/internal/BytecodeGen.java#L266-L273,test
lightcouch/LightCouch,src/main/java/org/lightcouch/CouchDbClientBase.java,CouchDbClientBase.delete,"Response delete(URI uri) {
		HttpResponse response = null;
		try {
			HttpDelete delete = new HttpDelete(uri);
			response = executeRequest(delete); 
			return getResponse(response);
		} finally {
			close(response);
		}
	}",java,"Response delete(URI uri) {
		HttpResponse response = null;
		try {
			HttpDelete delete = new HttpDelete(uri);
			response = executeRequest(delete); 
			return getResponse(response);
		} finally {
			close(response);
		}
	}","['Response', 'delete', '(', 'URI', 'uri', ')', '{', 'HttpResponse', 'response', '=', 'null', ';', 'try', '{', 'HttpDelete', 'delete', '=', 'new', 'HttpDelete', '(', 'uri', ')', ';', 'response', '=', 'executeRequest', '(', 'delete', ')', ';', 'return', 'getResponse', '(', 'response', ')', ';', '}', 'finally', '{', 'close', '(', 'response', ')', ';', '}', '}']","Performs a HTTP DELETE request.
@return {@link Response}","['Performs', 'a', 'HTTP', 'DELETE', 'request', '.']",9646889503475e862fd2158487e1cdd805447f4a,https://github.com/lightcouch/LightCouch/blob/9646889503475e862fd2158487e1cdd805447f4a/src/main/java/org/lightcouch/CouchDbClientBase.java#L628-L637,test
khennig/jpql-querybuilder,src/main/java/com/tri/persistence/jpql/utils/StringUtils.java,StringUtils.join,"public static String join(final List<String> list) {

		// zero, empty or one element
		if (list == null) {
			return null;
		} else if (list.size() == 0) {
			return """";
		} else if (list.size() == 1) {
			return list.get(0);
		}

		// two or more elements
		final StringBuilder builder = new StringBuilder();
		for (String item : list) {
			if (builder.length() > 0) {
				builder.append("", "");
			}
			builder.append(item);
		}
		return builder.toString();

	}",java,"public static String join(final List<String> list) {

		// zero, empty or one element
		if (list == null) {
			return null;
		} else if (list.size() == 0) {
			return """";
		} else if (list.size() == 1) {
			return list.get(0);
		}

		// two or more elements
		final StringBuilder builder = new StringBuilder();
		for (String item : list) {
			if (builder.length() > 0) {
				builder.append("", "");
			}
			builder.append(item);
		}
		return builder.toString();

	}","['public', 'static', 'String', 'join', '(', 'final', 'List', '<', 'String', '>', 'list', ')', '{', '// zero, empty or one element', 'if', '(', 'list', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'list', '.', 'size', '(', ')', '==', '0', ')', '{', 'return', '""""', ';', '}', 'else', 'if', '(', 'list', '.', 'size', '(', ')', '==', '1', ')', '{', 'return', 'list', '.', 'get', '(', '0', ')', ';', '}', '// two or more elements', 'final', 'StringBuilder', 'builder', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'String', 'item', ':', 'list', ')', '{', 'if', '(', 'builder', '.', 'length', '(', ')', '>', '0', ')', '{', 'builder', '.', 'append', '(', '"", ""', ')', ';', '}', 'builder', '.', 'append', '(', 'item', ')', ';', '}', 'return', 'builder', '.', 'toString', '(', ')', ';', '}']","Joins items of a text list, separating items by comma.

@param list
list of text items
@return joined list","['Joins', 'items', 'of', 'a', 'text', 'list', 'separating', 'items', 'by', 'comma', '.']",61206f7c42631c67a49603b9beddccf48a8112e8,https://github.com/khennig/jpql-querybuilder/blob/61206f7c42631c67a49603b9beddccf48a8112e8/src/main/java/com/tri/persistence/jpql/utils/StringUtils.java#L14-L35,test
arnohaase/a-foundation,a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java,ForkJoinPool.awaitWork,"private boolean awaitWork(WorkQueue w, int r) {
        if (w == null || w.qlock < 0)                 // w is terminating
            return false;
        for (int pred = w.stackPred, spins = SPINS, ss;;) {
            if ((ss = w.scanState) >= 0)
                break;
            else if (spins > 0) {
                r ^= r << 6; r ^= r >>> 21; r ^= r << 7;
                if (r >= 0 && --spins == 0) {         // randomize spins
                    WorkQueue v; WorkQueue[] ws; int s, j; AtomicLong sc;
                    if (pred != 0 && (ws = workQueues) != null &&
                        (j = pred & SMASK) < ws.length &&
                        (v = ws[j]) != null &&        // see if pred parking
                        (v.parker == null || v.scanState >= 0))
                        spins = SPINS;                // continue spinning
                }
            }
            else if (w.qlock < 0)                     // recheck after spins
                return false;
            else if (!Thread.interrupted()) {
                long c, prevctl, parkTime, deadline;
                int ac = (int)((c = ctl) >> AC_SHIFT) + (config & SMASK);
                if ((ac <= 0 && tryTerminate(false, false)) ||
                    (runState & STOP) != 0)           // pool terminating
                    return false;
                if (ac <= 0 && ss == (int)c) {        // is last waiter
                    prevctl = (UC_MASK & (c + AC_UNIT)) | (SP_MASK & pred);
                    int t = (short)(c >>> TC_SHIFT);  // shrink excess spares
                    if (t > 2 && U.compareAndSwapLong(this, CTL, c, prevctl))
                        return false;                 // else use timed wait
                    parkTime = IDLE_TIMEOUT * ((t >= 0) ? 1 : 1 - t);
                    deadline = System.nanoTime() + parkTime - TIMEOUT_SLOP;
                }
                else
                    prevctl = parkTime = deadline = 0L;
                Thread wt = Thread.currentThread();
                U.putObject(wt, PARKBLOCKER, this);   // emulate LockSupport
                w.parker = wt;
                if (w.scanState < 0 && ctl == c)      // recheck before park
                    U.park(false, parkTime);
                U.putOrderedObject(w, QPARKER, null);
                U.putObject(wt, PARKBLOCKER, null);
                if (w.scanState >= 0)
                    break;
                if (parkTime != 0L && ctl == c &&
                    deadline - System.nanoTime() <= 0L &&
                    U.compareAndSwapLong(this, CTL, c, prevctl))
                    return false;                     // shrink pool
            }
        }
        return true;
    }",java,"private boolean awaitWork(WorkQueue w, int r) {
        if (w == null || w.qlock < 0)                 // w is terminating
            return false;
        for (int pred = w.stackPred, spins = SPINS, ss;;) {
            if ((ss = w.scanState) >= 0)
                break;
            else if (spins > 0) {
                r ^= r << 6; r ^= r >>> 21; r ^= r << 7;
                if (r >= 0 && --spins == 0) {         // randomize spins
                    WorkQueue v; WorkQueue[] ws; int s, j; AtomicLong sc;
                    if (pred != 0 && (ws = workQueues) != null &&
                        (j = pred & SMASK) < ws.length &&
                        (v = ws[j]) != null &&        // see if pred parking
                        (v.parker == null || v.scanState >= 0))
                        spins = SPINS;                // continue spinning
                }
            }
            else if (w.qlock < 0)                     // recheck after spins
                return false;
            else if (!Thread.interrupted()) {
                long c, prevctl, parkTime, deadline;
                int ac = (int)((c = ctl) >> AC_SHIFT) + (config & SMASK);
                if ((ac <= 0 && tryTerminate(false, false)) ||
                    (runState & STOP) != 0)           // pool terminating
                    return false;
                if (ac <= 0 && ss == (int)c) {        // is last waiter
                    prevctl = (UC_MASK & (c + AC_UNIT)) | (SP_MASK & pred);
                    int t = (short)(c >>> TC_SHIFT);  // shrink excess spares
                    if (t > 2 && U.compareAndSwapLong(this, CTL, c, prevctl))
                        return false;                 // else use timed wait
                    parkTime = IDLE_TIMEOUT * ((t >= 0) ? 1 : 1 - t);
                    deadline = System.nanoTime() + parkTime - TIMEOUT_SLOP;
                }
                else
                    prevctl = parkTime = deadline = 0L;
                Thread wt = Thread.currentThread();
                U.putObject(wt, PARKBLOCKER, this);   // emulate LockSupport
                w.parker = wt;
                if (w.scanState < 0 && ctl == c)      // recheck before park
                    U.park(false, parkTime);
                U.putOrderedObject(w, QPARKER, null);
                U.putObject(wt, PARKBLOCKER, null);
                if (w.scanState >= 0)
                    break;
                if (parkTime != 0L && ctl == c &&
                    deadline - System.nanoTime() <= 0L &&
                    U.compareAndSwapLong(this, CTL, c, prevctl))
                    return false;                     // shrink pool
            }
        }
        return true;
    }","['private', 'boolean', 'awaitWork', '(', 'WorkQueue', 'w', ',', 'int', 'r', ')', '{', 'if', '(', 'w', '==', 'null', '||', 'w', '.', 'qlock', '<', '0', ')', '// w is terminating', 'return', 'false', ';', 'for', '(', 'int', 'pred', '=', 'w', '.', 'stackPred', ',', 'spins', '=', 'SPINS', ',', 'ss', ';', ';', ')', '{', 'if', '(', '(', 'ss', '=', 'w', '.', 'scanState', ')', '>=', '0', ')', 'break', ';', 'else', 'if', '(', 'spins', '>', '0', ')', '{', 'r', '^=', 'r', '<<', '6', ';', 'r', '^=', 'r', '>>>', '21', ';', 'r', '^=', 'r', '<<', '7', ';', 'if', '(', 'r', '>=', '0', '&&', '--', 'spins', '==', '0', ')', '{', '// randomize spins', 'WorkQueue', 'v', ';', 'WorkQueue', '[', ']', 'ws', ';', 'int', 's', ',', 'j', ';', 'AtomicLong', 'sc', ';', 'if', '(', 'pred', '!=', '0', '&&', '(', 'ws', '=', 'workQueues', ')', '!=', 'null', '&&', '(', 'j', '=', 'pred', '&', 'SMASK', ')', '<', 'ws', '.', 'length', '&&', '(', 'v', '=', 'ws', '[', 'j', ']', ')', '!=', 'null', '&&', '// see if pred parking', '(', 'v', '.', 'parker', '==', 'null', '||', 'v', '.', 'scanState', '>=', '0', ')', ')', 'spins', '=', 'SPINS', ';', '// continue spinning', '}', '}', 'else', 'if', '(', 'w', '.', 'qlock', '<', '0', ')', '// recheck after spins', 'return', 'false', ';', 'else', 'if', '(', '!', 'Thread', '.', 'interrupted', '(', ')', ')', '{', 'long', 'c', ',', 'prevctl', ',', 'parkTime', ',', 'deadline', ';', 'int', 'ac', '=', '(', 'int', ')', '(', '(', 'c', '=', 'ctl', ')', '>>', 'AC_SHIFT', ')', '+', '(', 'config', '&', 'SMASK', ')', ';', 'if', '(', '(', 'ac', '<=', '0', '&&', 'tryTerminate', '(', 'false', ',', 'false', ')', ')', '||', '(', 'runState', '&', 'STOP', ')', '!=', '0', ')', '// pool terminating', 'return', 'false', ';', 'if', '(', 'ac', '<=', '0', '&&', 'ss', '==', '(', 'int', ')', 'c', ')', '{', '// is last waiter', 'prevctl', '=', '(', 'UC_MASK', '&', '(', 'c', '+', 'AC_UNIT', ')', ')', '|', '(', 'SP_MASK', '&', 'pred', ')', ';', 'int', 't', '=', '(', 'short', ')', '(', 'c', '>>>', 'TC_SHIFT', ')', ';', '// shrink excess spares', 'if', '(', 't', '>', '2', '&&', 'U', '.', 'compareAndSwapLong', '(', 'this', ',', 'CTL', ',', 'c', ',', 'prevctl', ')', ')', 'return', 'false', ';', '// else use timed wait', 'parkTime', '=', 'IDLE_TIMEOUT', '*', '(', '(', 't', '>=', '0', ')', '?', '1', ':', '1', '-', 't', ')', ';', 'deadline', '=', 'System', '.', 'nanoTime', '(', ')', '+', 'parkTime', '-', 'TIMEOUT_SLOP', ';', '}', 'else', 'prevctl', '=', 'parkTime', '=', 'deadline', '=', '0L', ';', 'Thread', 'wt', '=', 'Thread', '.', 'currentThread', '(', ')', ';', 'U', '.', 'putObject', '(', 'wt', ',', 'PARKBLOCKER', ',', 'this', ')', ';', '// emulate LockSupport', 'w', '.', 'parker', '=', 'wt', ';', 'if', '(', 'w', '.', 'scanState', '<', '0', '&&', 'ctl', '==', 'c', ')', '// recheck before park', 'U', '.', 'park', '(', 'false', ',', 'parkTime', ')', ';', 'U', '.', 'putOrderedObject', '(', 'w', ',', 'QPARKER', ',', 'null', ')', ';', 'U', '.', 'putObject', '(', 'wt', ',', 'PARKBLOCKER', ',', 'null', ')', ';', 'if', '(', 'w', '.', 'scanState', '>=', '0', ')', 'break', ';', 'if', '(', 'parkTime', '!=', '0L', '&&', 'ctl', '==', 'c', '&&', 'deadline', '-', 'System', '.', 'nanoTime', '(', ')', '<=', '0L', '&&', 'U', '.', 'compareAndSwapLong', '(', 'this', ',', 'CTL', ',', 'c', ',', 'prevctl', ')', ')', 'return', 'false', ';', '// shrink pool', '}', '}', 'return', 'true', ';', '}']","Possibly blocks worker w waiting for a task to steal, or
returns false if the worker should terminate.  If inactivating
w has caused the pool to become quiescent, checks for pool
termination, and, so long as this is not the only worker, waits
for up to a given duration.  On timeout, if ctl has not
changed, terminates the worker, which will in turn wake up
another worker to possibly repeat this process.

@param w the calling worker
@param r a random seed (for spins)
@return false if the worker should terminate","['Possibly', 'blocks', 'worker', 'w', 'waiting', 'for', 'a', 'task', 'to', 'steal', 'or', 'returns', 'false', 'if', 'the', 'worker', 'should', 'terminate', '.', 'If', 'inactivating', 'w', 'has', 'caused', 'the', 'pool', 'to', 'become', 'quiescent', 'checks', 'for', 'pool', 'termination', 'and', 'so', 'long', 'as', 'this', 'is', 'not', 'the', 'only', 'worker', 'waits', 'for', 'up', 'to', 'a', 'given', 'duration', '.', 'On', 'timeout', 'if', 'ctl', 'has', 'not', 'changed', 'terminates', 'the', 'worker', 'which', 'will', 'in', 'turn', 'wake', 'up', 'another', 'worker', 'to', 'possibly', 'repeat', 'this', 'process', '.']",f3eef2ca89d67775f202a4c28140230a6229291e,https://github.com/arnohaase/a-foundation/blob/f3eef2ca89d67775f202a4c28140230a6229291e/a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java#L1787-L1838,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/units/SimpleUnit.java,SimpleUnit.factory,"static public SimpleUnit factory(String name) {
    try {
      return factoryWithExceptions(name);
    } catch (Exception e) {
      if (debugParse) System.out.println(""Parse "" + name + "" got Exception "" + e);
      return null;
    }
  }",java,"static public SimpleUnit factory(String name) {
    try {
      return factoryWithExceptions(name);
    } catch (Exception e) {
      if (debugParse) System.out.println(""Parse "" + name + "" got Exception "" + e);
      return null;
    }
  }","['static', 'public', 'SimpleUnit', 'factory', '(', 'String', 'name', ')', '{', 'try', '{', 'return', 'factoryWithExceptions', '(', 'name', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'debugParse', ')', 'System', '.', 'out', '.', 'println', '(', '""Parse ""', '+', 'name', '+', '"" got Exception ""', '+', 'e', ')', ';', 'return', 'null', ';', '}', '}']","Create a SimpleUnit from the given name, catch Exceptions.

@param name parse this name to create a unit.
@return SimpleUnit, DateUnit, TimeUnit, or null if failed
@see ucar.units.UnitFormat#parse","['Create', 'a', 'SimpleUnit', 'from', 'the', 'given', 'name', 'catch', 'Exceptions', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/units/SimpleUnit.java#L60-L67,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,ShiftFormulaUtility.convertPtg,"private static Ptg[] convertPtg(final Ptg[] ptgs, final int position,
			final ShiftFormulaRef shiftFormulaRef, final Object ptg) {

		byte originalOperandClass = -1;

		if (!((Ptg) ptg).isBaseToken()) {
			originalOperandClass = ((Ptg) ptg).getPtgClass();
		}

		int currentRow;
		currentRow = getFirstSupportedRowNumFromPtg(ptg);
		if ((currentRow >= 0)
				&& shiftFormulaRef.getWatchList().contains(currentRow)) {
			return convertPtgForWatchList(ptgs, position, shiftFormulaRef,
					ptg, originalOperandClass, currentRow);

		}
		// no need change ptg
		if ((ptg instanceof AttrPtg)
				&& (shiftFormulaRef.getFormulaChanged() > 1)) {
			AttrPtg newPtg = (AttrPtg) ptg;
			if (newPtg.isSum()) {
				FuncVarPtg fptg = FuncVarPtg.create(""sum"",
						shiftFormulaRef.getFormulaChanged());
				return singlePtg(fptg, fptg.getPtgClass(),
						shiftFormulaRef.getFormulaChanged());
			}
		}
		return singlePtg(ptg, originalOperandClass,
				shiftFormulaRef.getFormulaChanged());

	}",java,"private static Ptg[] convertPtg(final Ptg[] ptgs, final int position,
			final ShiftFormulaRef shiftFormulaRef, final Object ptg) {

		byte originalOperandClass = -1;

		if (!((Ptg) ptg).isBaseToken()) {
			originalOperandClass = ((Ptg) ptg).getPtgClass();
		}

		int currentRow;
		currentRow = getFirstSupportedRowNumFromPtg(ptg);
		if ((currentRow >= 0)
				&& shiftFormulaRef.getWatchList().contains(currentRow)) {
			return convertPtgForWatchList(ptgs, position, shiftFormulaRef,
					ptg, originalOperandClass, currentRow);

		}
		// no need change ptg
		if ((ptg instanceof AttrPtg)
				&& (shiftFormulaRef.getFormulaChanged() > 1)) {
			AttrPtg newPtg = (AttrPtg) ptg;
			if (newPtg.isSum()) {
				FuncVarPtg fptg = FuncVarPtg.create(""sum"",
						shiftFormulaRef.getFormulaChanged());
				return singlePtg(fptg, fptg.getPtgClass(),
						shiftFormulaRef.getFormulaChanged());
			}
		}
		return singlePtg(ptg, originalOperandClass,
				shiftFormulaRef.getFormulaChanged());

	}","['private', 'static', 'Ptg', '[', ']', 'convertPtg', '(', 'final', 'Ptg', '[', ']', 'ptgs', ',', 'final', 'int', 'position', ',', 'final', 'ShiftFormulaRef', 'shiftFormulaRef', ',', 'final', 'Object', 'ptg', ')', '{', 'byte', 'originalOperandClass', '=', '-', '1', ';', 'if', '(', '!', '(', '(', 'Ptg', ')', 'ptg', ')', '.', 'isBaseToken', '(', ')', ')', '{', 'originalOperandClass', '=', '(', '(', 'Ptg', ')', 'ptg', ')', '.', 'getPtgClass', '(', ')', ';', '}', 'int', 'currentRow', ';', 'currentRow', '=', 'getFirstSupportedRowNumFromPtg', '(', 'ptg', ')', ';', 'if', '(', '(', 'currentRow', '>=', '0', ')', '&&', 'shiftFormulaRef', '.', 'getWatchList', '(', ')', '.', 'contains', '(', 'currentRow', ')', ')', '{', 'return', 'convertPtgForWatchList', '(', 'ptgs', ',', 'position', ',', 'shiftFormulaRef', ',', 'ptg', ',', 'originalOperandClass', ',', 'currentRow', ')', ';', '}', '// no need change ptg\r', 'if', '(', '(', 'ptg', 'instanceof', 'AttrPtg', ')', '&&', '(', 'shiftFormulaRef', '.', 'getFormulaChanged', '(', ')', '>', '1', ')', ')', '{', 'AttrPtg', 'newPtg', '=', '(', 'AttrPtg', ')', 'ptg', ';', 'if', '(', 'newPtg', '.', 'isSum', '(', ')', ')', '{', 'FuncVarPtg', 'fptg', '=', 'FuncVarPtg', '.', 'create', '(', '""sum""', ',', 'shiftFormulaRef', '.', 'getFormulaChanged', '(', ')', ')', ';', 'return', 'singlePtg', '(', 'fptg', ',', 'fptg', '.', 'getPtgClass', '(', ')', ',', 'shiftFormulaRef', '.', 'getFormulaChanged', '(', ')', ')', ';', '}', '}', 'return', 'singlePtg', '(', 'ptg', ',', 'originalOperandClass', ',', 'shiftFormulaRef', '.', 'getFormulaChanged', '(', ')', ')', ';', '}']","Convert ptg.

@param ptgs
the ptgs
@param position
the position
@param shiftFormulaRef
the shift formula ref
@param ptg
the ptg
@return the ptg[]","['Convert', 'ptg', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java#L112-L143,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/service/ValidationHandler.java,ValidationHandler.checkErrorMessageFromObjectInContext,"private boolean checkErrorMessageFromObjectInContext(final int formRow, final int formCol, final FacesCell cell,
			final Cell poiCell, final String value, final SheetConfiguration sheetConfig, boolean updateGui) {

		@SuppressWarnings(""unchecked"")
		HashMap<String, TieCell> tieCells = (HashMap<String, TieCell>) parent.getSerialDataContext().getDataContext()
				.get(""tiecells"");

		if (tieCells != null) {

			TieCell tieCell = tieCells.get(CellUtility.getSkeyFromPoiCell(poiCell));

			if (tieCell != null && tieCell.getContextObject() != null) {

				String errorMethod = tieCell.getMethodStr() + parent.getConfigAdvancedContext().getErrorSuffix();

				String errorMessage = CellControlsUtility.getObjectPropertyValue(tieCell.getContextObject(),
						errorMethod, true);

				if (errorMessage != null && !errorMessage.isEmpty()) {
					cell.setErrormsg(errorMessage);
					LOG.log(Level.INFO, ""Validation failed for sheet {0} row {1} column {2} : {3}"",
							new Object[] { poiCell.getSheet().getSheetName(), poiCell.getRowIndex(),
									poiCell.getColumnIndex(), errorMessage });
					refreshAfterStatusChanged(false, true, formRow, formCol, cell, updateGui);
					return false;
				}

			}
		}

		return true;

	}",java,"private boolean checkErrorMessageFromObjectInContext(final int formRow, final int formCol, final FacesCell cell,
			final Cell poiCell, final String value, final SheetConfiguration sheetConfig, boolean updateGui) {

		@SuppressWarnings(""unchecked"")
		HashMap<String, TieCell> tieCells = (HashMap<String, TieCell>) parent.getSerialDataContext().getDataContext()
				.get(""tiecells"");

		if (tieCells != null) {

			TieCell tieCell = tieCells.get(CellUtility.getSkeyFromPoiCell(poiCell));

			if (tieCell != null && tieCell.getContextObject() != null) {

				String errorMethod = tieCell.getMethodStr() + parent.getConfigAdvancedContext().getErrorSuffix();

				String errorMessage = CellControlsUtility.getObjectPropertyValue(tieCell.getContextObject(),
						errorMethod, true);

				if (errorMessage != null && !errorMessage.isEmpty()) {
					cell.setErrormsg(errorMessage);
					LOG.log(Level.INFO, ""Validation failed for sheet {0} row {1} column {2} : {3}"",
							new Object[] { poiCell.getSheet().getSheetName(), poiCell.getRowIndex(),
									poiCell.getColumnIndex(), errorMessage });
					refreshAfterStatusChanged(false, true, formRow, formCol, cell, updateGui);
					return false;
				}

			}
		}

		return true;

	}","['private', 'boolean', 'checkErrorMessageFromObjectInContext', '(', 'final', 'int', 'formRow', ',', 'final', 'int', 'formCol', ',', 'final', 'FacesCell', 'cell', ',', 'final', 'Cell', 'poiCell', ',', 'final', 'String', 'value', ',', 'final', 'SheetConfiguration', 'sheetConfig', ',', 'boolean', 'updateGui', ')', '{', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'HashMap', '<', 'String', ',', 'TieCell', '>', 'tieCells', '=', '(', 'HashMap', '<', 'String', ',', 'TieCell', '>', ')', 'parent', '.', 'getSerialDataContext', '(', ')', '.', 'getDataContext', '(', ')', '.', 'get', '(', '""tiecells""', ')', ';', 'if', '(', 'tieCells', '!=', 'null', ')', '{', 'TieCell', 'tieCell', '=', 'tieCells', '.', 'get', '(', 'CellUtility', '.', 'getSkeyFromPoiCell', '(', 'poiCell', ')', ')', ';', 'if', '(', 'tieCell', '!=', 'null', '&&', 'tieCell', '.', 'getContextObject', '(', ')', '!=', 'null', ')', '{', 'String', 'errorMethod', '=', 'tieCell', '.', 'getMethodStr', '(', ')', '+', 'parent', '.', 'getConfigAdvancedContext', '(', ')', '.', 'getErrorSuffix', '(', ')', ';', 'String', 'errorMessage', '=', 'CellControlsUtility', '.', 'getObjectPropertyValue', '(', 'tieCell', '.', 'getContextObject', '(', ')', ',', 'errorMethod', ',', 'true', ')', ';', 'if', '(', 'errorMessage', '!=', 'null', '&&', '!', 'errorMessage', '.', 'isEmpty', '(', ')', ')', '{', 'cell', '.', 'setErrormsg', '(', 'errorMessage', ')', ';', 'LOG', '.', 'log', '(', 'Level', '.', 'INFO', ',', '""Validation failed for sheet {0} row {1} column {2} : {3}""', ',', 'new', 'Object', '[', ']', '{', 'poiCell', '.', 'getSheet', '(', ')', '.', 'getSheetName', '(', ')', ',', 'poiCell', '.', 'getRowIndex', '(', ')', ',', 'poiCell', '.', 'getColumnIndex', '(', ')', ',', 'errorMessage', '}', ')', ';', 'refreshAfterStatusChanged', '(', 'false', ',', 'true', ',', 'formRow', ',', 'formCol', ',', 'cell', ',', 'updateGui', ')', ';', 'return', 'false', ';', '}', '}', '}', 'return', 'true', ';', '}']","Check error message from object in context.

@param formRow the form row
@param formCol the form col
@param cell the cell
@param poiCell the poi cell
@param value the value
@param sheetConfig the sheet config
@param updateGui the update gui
@return true, if successful","['Check', 'error', 'message', 'from', 'object', 'in', 'context', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/service/ValidationHandler.java#L213-L245,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectPoolManagement.java,ProfileObjectPoolManagement.removeObjectPool,"public void removeObjectPool(final ProfileTableImpl profileTable,
			final SleeTransactionManager sleeTransactionManager) {

		
		TransactionalAction action = new TransactionalAction() {
			public void execute() {
				if (logger.isTraceEnabled()) {
		            logger.trace(""Removing Pool for "" + profileTable);
				}

				removeObjectPool(profileTable);
			}
		};
		
		if (sleeTransactionManager != null) {
			sleeTransactionManager.getTransactionContext().getAfterCommitActions().add(action);			
		}
		else {
			action.execute();
		}
	}",java,"public void removeObjectPool(final ProfileTableImpl profileTable,
			final SleeTransactionManager sleeTransactionManager) {

		
		TransactionalAction action = new TransactionalAction() {
			public void execute() {
				if (logger.isTraceEnabled()) {
		            logger.trace(""Removing Pool for "" + profileTable);
				}

				removeObjectPool(profileTable);
			}
		};
		
		if (sleeTransactionManager != null) {
			sleeTransactionManager.getTransactionContext().getAfterCommitActions().add(action);			
		}
		else {
			action.execute();
		}
	}","['public', 'void', 'removeObjectPool', '(', 'final', 'ProfileTableImpl', 'profileTable', ',', 'final', 'SleeTransactionManager', 'sleeTransactionManager', ')', '{', 'TransactionalAction', 'action', '=', 'new', 'TransactionalAction', '(', ')', '{', 'public', 'void', 'execute', '(', ')', '{', 'if', '(', 'logger', '.', 'isTraceEnabled', '(', ')', ')', '{', 'logger', '.', 'trace', '(', '""Removing Pool for ""', '+', 'profileTable', ')', ';', '}', 'removeObjectPool', '(', 'profileTable', ')', ';', '}', '}', ';', 'if', '(', 'sleeTransactionManager', '!=', 'null', ')', '{', 'sleeTransactionManager', '.', 'getTransactionContext', '(', ')', '.', 'getAfterCommitActions', '(', ')', '.', 'add', '(', 'action', ')', ';', '}', 'else', '{', 'action', '.', 'execute', '(', ')', ';', '}', '}']","Removes the object pool for the specified profile table. If a
transaction manager is used then the removal is only after the tx commit.

@param sleeTransactionManager
@throws Exception","['Removes', 'the', 'object', 'pool', 'for', 'the', 'specified', 'profile', 'table', '.', 'If', 'a', 'transaction', 'manager', 'is', 'used', 'then', 'the', 'removal', 'is', 'only', 'after', 'the', 'tx', 'commit', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileObjectPoolManagement.java#L170-L190,test
TooTallNate/Java-WebSocket,src/main/java/org/java_websocket/server/WebSocketServer.java,WebSocketServer.doAccept,"private void doAccept(SelectionKey key, Iterator<SelectionKey> i) throws IOException, InterruptedException {
		if( !onConnect( key ) ) {
			key.cancel();
			return;
		}

		SocketChannel channel = server.accept();
		if(channel==null){
			return;
		}
		channel.configureBlocking( false );
		Socket socket = channel.socket();
		socket.setTcpNoDelay( isTcpNoDelay() );
		socket.setKeepAlive( true );
		WebSocketImpl w = wsf.createWebSocket( this, drafts );
		w.setSelectionKey(channel.register( selector, SelectionKey.OP_READ, w ));
		try {
			w.setChannel( wsf.wrapChannel( channel, w.getSelectionKey() ));
			i.remove();
			allocateBuffers( w );
		} catch (IOException ex) {
			if( w.getSelectionKey() != null )
				w.getSelectionKey().cancel();

			handleIOException( w.getSelectionKey(), null, ex );
		}
	}",java,"private void doAccept(SelectionKey key, Iterator<SelectionKey> i) throws IOException, InterruptedException {
		if( !onConnect( key ) ) {
			key.cancel();
			return;
		}

		SocketChannel channel = server.accept();
		if(channel==null){
			return;
		}
		channel.configureBlocking( false );
		Socket socket = channel.socket();
		socket.setTcpNoDelay( isTcpNoDelay() );
		socket.setKeepAlive( true );
		WebSocketImpl w = wsf.createWebSocket( this, drafts );
		w.setSelectionKey(channel.register( selector, SelectionKey.OP_READ, w ));
		try {
			w.setChannel( wsf.wrapChannel( channel, w.getSelectionKey() ));
			i.remove();
			allocateBuffers( w );
		} catch (IOException ex) {
			if( w.getSelectionKey() != null )
				w.getSelectionKey().cancel();

			handleIOException( w.getSelectionKey(), null, ex );
		}
	}","['private', 'void', 'doAccept', '(', 'SelectionKey', 'key', ',', 'Iterator', '<', 'SelectionKey', '>', 'i', ')', 'throws', 'IOException', ',', 'InterruptedException', '{', 'if', '(', '!', 'onConnect', '(', 'key', ')', ')', '{', 'key', '.', 'cancel', '(', ')', ';', 'return', ';', '}', 'SocketChannel', 'channel', '=', 'server', '.', 'accept', '(', ')', ';', 'if', '(', 'channel', '==', 'null', ')', '{', 'return', ';', '}', 'channel', '.', 'configureBlocking', '(', 'false', ')', ';', 'Socket', 'socket', '=', 'channel', '.', 'socket', '(', ')', ';', 'socket', '.', 'setTcpNoDelay', '(', 'isTcpNoDelay', '(', ')', ')', ';', 'socket', '.', 'setKeepAlive', '(', 'true', ')', ';', 'WebSocketImpl', 'w', '=', 'wsf', '.', 'createWebSocket', '(', 'this', ',', 'drafts', ')', ';', 'w', '.', 'setSelectionKey', '(', 'channel', '.', 'register', '(', 'selector', ',', 'SelectionKey', '.', 'OP_READ', ',', 'w', ')', ')', ';', 'try', '{', 'w', '.', 'setChannel', '(', 'wsf', '.', 'wrapChannel', '(', 'channel', ',', 'w', '.', 'getSelectionKey', '(', ')', ')', ')', ';', 'i', '.', 'remove', '(', ')', ';', 'allocateBuffers', '(', 'w', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'if', '(', 'w', '.', 'getSelectionKey', '(', ')', '!=', 'null', ')', 'w', '.', 'getSelectionKey', '(', ')', '.', 'cancel', '(', ')', ';', 'handleIOException', '(', 'w', '.', 'getSelectionKey', '(', ')', ',', 'null', ',', 'ex', ')', ';', '}', '}']","Execute a accept operation
@param key the selectionkey to read off
@param i the iterator for the selection keys
@throws InterruptedException  thrown by taking a buffer
@throws IOException if an error happened during accept","['Execute', 'a', 'accept', 'operation']",73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9,https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/server/WebSocketServer.java#L412-L438,test
wildfly/wildfly,ee/src/main/java/org/jboss/as/ee/component/ComponentConfiguration.java,ComponentConfiguration.addPostActivateInterceptor,"public void addPostActivateInterceptor(InterceptorFactory interceptorFactory, int priority) {
        postActivateInterceptors.add(Collections.singletonList(interceptorFactory), priority);
    }",java,"public void addPostActivateInterceptor(InterceptorFactory interceptorFactory, int priority) {
        postActivateInterceptors.add(Collections.singletonList(interceptorFactory), priority);
    }","['public', 'void', 'addPostActivateInterceptor', '(', 'InterceptorFactory', 'interceptorFactory', ',', 'int', 'priority', ')', '{', 'postActivateInterceptors', '.', 'add', '(', 'Collections', '.', 'singletonList', '(', 'interceptorFactory', ')', ',', 'priority', ')', ';', '}']","Adds a post activate interceptor

@param interceptorFactory The interceptor to add
@param priority           The priority","['Adds', 'a', 'post', 'activate', 'interceptor']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ee/src/main/java/org/jboss/as/ee/component/ComponentConfiguration.java#L469-L471,test
spring-projects/spring-security,acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java,AclClassIdUtils.identifierFrom,"Serializable identifierFrom(Serializable identifier, ResultSet resultSet) throws SQLException {
		if (isString(identifier) && hasValidClassIdType(resultSet)
			&& canConvertFromStringTo(classIdTypeFrom(resultSet))) {

			identifier = convertFromStringTo((String) identifier, classIdTypeFrom(resultSet));
		} else {
			// Assume it should be a Long type
			identifier = convertToLong(identifier);
		}

		return identifier;
	}",java,"Serializable identifierFrom(Serializable identifier, ResultSet resultSet) throws SQLException {
		if (isString(identifier) && hasValidClassIdType(resultSet)
			&& canConvertFromStringTo(classIdTypeFrom(resultSet))) {

			identifier = convertFromStringTo((String) identifier, classIdTypeFrom(resultSet));
		} else {
			// Assume it should be a Long type
			identifier = convertToLong(identifier);
		}

		return identifier;
	}","['Serializable', 'identifierFrom', '(', 'Serializable', 'identifier', ',', 'ResultSet', 'resultSet', ')', 'throws', 'SQLException', '{', 'if', '(', 'isString', '(', 'identifier', ')', '&&', 'hasValidClassIdType', '(', 'resultSet', ')', '&&', 'canConvertFromStringTo', '(', 'classIdTypeFrom', '(', 'resultSet', ')', ')', ')', '{', 'identifier', '=', 'convertFromStringTo', '(', '(', 'String', ')', 'identifier', ',', 'classIdTypeFrom', '(', 'resultSet', ')', ')', ';', '}', 'else', '{', '// Assume it should be a Long type', 'identifier', '=', 'convertToLong', '(', 'identifier', ')', ';', '}', 'return', 'identifier', ';', '}']","Converts the raw type from the database into the right Java type. For most applications the 'raw type' will be Long, for some applications
it could be String.
@param identifier The identifier from the database
@param resultSet  Result set of the query
@return The identifier in the appropriate target Java type. Typically Long or UUID.
@throws SQLException","['Converts', 'the', 'raw', 'type', 'from', 'the', 'database', 'into', 'the', 'right', 'Java', 'type', '.', 'For', 'most', 'applications', 'the', 'raw', 'type', 'will', 'be', 'Long', 'for', 'some', 'applications', 'it', 'could', 'be', 'String', '.']",98a8467e4c2ae05b3e09c67ece856944fa48ed23,https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/acl/src/main/java/org/springframework/security/acls/jdbc/AclClassIdUtils.java#L64-L75,test
real-logic/aeron,aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java,ChannelUriStringBuilder.clear,"public ChannelUriStringBuilder clear()
    {
        prefix = null;
        media = null;
        endpoint = null;
        networkInterface = null;
        controlEndpoint = null;
        controlMode = null;
        tags = null;
        alias = null;
        reliable = null;
        ttl = null;
        mtu = null;
        termLength = null;
        initialTermId = null;
        termId = null;
        termOffset = null;
        sessionId = null;
        linger = null;
        sparse = null;
        eos = null;
        tether = null;
        isSessionIdTagged = false;

        return this;
    }",java,"public ChannelUriStringBuilder clear()
    {
        prefix = null;
        media = null;
        endpoint = null;
        networkInterface = null;
        controlEndpoint = null;
        controlMode = null;
        tags = null;
        alias = null;
        reliable = null;
        ttl = null;
        mtu = null;
        termLength = null;
        initialTermId = null;
        termId = null;
        termOffset = null;
        sessionId = null;
        linger = null;
        sparse = null;
        eos = null;
        tether = null;
        isSessionIdTagged = false;

        return this;
    }","['public', 'ChannelUriStringBuilder', 'clear', '(', ')', '{', 'prefix', '=', 'null', ';', 'media', '=', 'null', ';', 'endpoint', '=', 'null', ';', 'networkInterface', '=', 'null', ';', 'controlEndpoint', '=', 'null', ';', 'controlMode', '=', 'null', ';', 'tags', '=', 'null', ';', 'alias', '=', 'null', ';', 'reliable', '=', 'null', ';', 'ttl', '=', 'null', ';', 'mtu', '=', 'null', ';', 'termLength', '=', 'null', ';', 'initialTermId', '=', 'null', ';', 'termId', '=', 'null', ';', 'termOffset', '=', 'null', ';', 'sessionId', '=', 'null', ';', 'linger', '=', 'null', ';', 'sparse', '=', 'null', ';', 'eos', '=', 'null', ';', 'tether', '=', 'null', ';', 'isSessionIdTagged', '=', 'false', ';', 'return', 'this', ';', '}']","Clear out all the values thus setting back to the initial state.

@return this for a fluent API.","['Clear', 'out', 'all', 'the', 'values', 'thus', 'setting', 'back', 'to', 'the', 'initial', 'state', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-client/src/main/java/io/aeron/ChannelUriStringBuilder.java#L64-L89,test
rupertlssmith/lojix,base/run-plugin/src/main/com/thesett/maven/run/ScriptGenMojo.java,ScriptGenMojo.execute,"public void execute() throws MojoExecutionException, MojoFailureException
    {
        //log.debug(""public void execute() throws MojoExecutionException: called"");

        // Turn each of the test runner command lines into a script.
        for (String commandName : commands.keySet())
        {
            if (scriptOutDirectory != null)
            {
                writeUnixScript(commandName, scriptOutDirectory);
                writeWindowsScript(commandName, scriptOutDirectory);
            }
        }
    }",java,"public void execute() throws MojoExecutionException, MojoFailureException
    {
        //log.debug(""public void execute() throws MojoExecutionException: called"");

        // Turn each of the test runner command lines into a script.
        for (String commandName : commands.keySet())
        {
            if (scriptOutDirectory != null)
            {
                writeUnixScript(commandName, scriptOutDirectory);
                writeWindowsScript(commandName, scriptOutDirectory);
            }
        }
    }","['public', 'void', 'execute', '(', ')', 'throws', 'MojoExecutionException', ',', 'MojoFailureException', '{', '//log.debug(""public void execute() throws MojoExecutionException: called"");', '// Turn each of the test runner command lines into a script.', 'for', '(', 'String', 'commandName', ':', 'commands', '.', 'keySet', '(', ')', ')', '{', 'if', '(', 'scriptOutDirectory', '!=', 'null', ')', '{', 'writeUnixScript', '(', 'commandName', ',', 'scriptOutDirectory', ')', ';', 'writeWindowsScript', '(', 'commandName', ',', 'scriptOutDirectory', ')', ';', '}', '}', '}']","Implementation of the script goal.

@throws MojoExecutionException","['Implementation', 'of', 'the', 'script', 'goal', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/run-plugin/src/main/com/thesett/maven/run/ScriptGenMojo.java#L111-L124,test
jboss/jboss-common-core,src/main/java/org/jboss/util/stream/MarshalledValueOutputStream.java,MarshalledValueOutputStream.replaceObject,"protected Object replaceObject(Object obj) throws IOException
   {
      if( (obj instanceof Remote) && !(obj instanceof RemoteStub) )
      {
         Remote remote = (Remote) obj;
         try
         {
            obj = RemoteObject.toStub(remote);
         }
         catch(IOException ignore)
         {
            // Let the Serialization layer try with the orignal obj
         }
      }
      return obj;
   }",java,"protected Object replaceObject(Object obj) throws IOException
   {
      if( (obj instanceof Remote) && !(obj instanceof RemoteStub) )
      {
         Remote remote = (Remote) obj;
         try
         {
            obj = RemoteObject.toStub(remote);
         }
         catch(IOException ignore)
         {
            // Let the Serialization layer try with the orignal obj
         }
      }
      return obj;
   }","['protected', 'Object', 'replaceObject', '(', 'Object', 'obj', ')', 'throws', 'IOException', '{', 'if', '(', '(', 'obj', 'instanceof', 'Remote', ')', '&&', '!', '(', 'obj', 'instanceof', 'RemoteStub', ')', ')', '{', 'Remote', 'remote', '=', '(', 'Remote', ')', 'obj', ';', 'try', '{', 'obj', '=', 'RemoteObject', '.', 'toStub', '(', 'remote', ')', ';', '}', 'catch', '(', 'IOException', 'ignore', ')', '{', '// Let the Serialization layer try with the orignal obj', '}', '}', 'return', 'obj', ';', '}']","Override replaceObject to check for Remote objects that are
not RemoteStubs.","['Override', 'replaceObject', 'to', 'check', 'for', 'Remote', 'objects', 'that', 'are', 'not', 'RemoteStubs', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/stream/MarshalledValueOutputStream.java#L71-L86,test
jboss/jboss-common-core,src/main/java/org/jboss/util/Objects.java,Objects.copy,"public static Object copy(final Serializable obj)
      throws IOException, ClassNotFoundException
   {
      ObjectOutputStream out = null;
      ObjectInputStream in = null;
      Object copy = null;
      
      try {
         // write the object
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
         out = new ObjectOutputStream(baos);
         out.writeObject(obj);
         out.flush();

         // read in the copy
         byte data[] = baos.toByteArray();
         ByteArrayInputStream bais = new ByteArrayInputStream(data);
         in = new ObjectInputStream(bais);
         copy = in.readObject();
      }
      finally {
         Streams.close(out);
         Streams.close(in);
      }

      return copy;
   }",java,"public static Object copy(final Serializable obj)
      throws IOException, ClassNotFoundException
   {
      ObjectOutputStream out = null;
      ObjectInputStream in = null;
      Object copy = null;
      
      try {
         // write the object
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
         out = new ObjectOutputStream(baos);
         out.writeObject(obj);
         out.flush();

         // read in the copy
         byte data[] = baos.toByteArray();
         ByteArrayInputStream bais = new ByteArrayInputStream(data);
         in = new ObjectInputStream(bais);
         copy = in.readObject();
      }
      finally {
         Streams.close(out);
         Streams.close(in);
      }

      return copy;
   }","['public', 'static', 'Object', 'copy', '(', 'final', 'Serializable', 'obj', ')', 'throws', 'IOException', ',', 'ClassNotFoundException', '{', 'ObjectOutputStream', 'out', '=', 'null', ';', 'ObjectInputStream', 'in', '=', 'null', ';', 'Object', 'copy', '=', 'null', ';', 'try', '{', '// write the object', 'ByteArrayOutputStream', 'baos', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'out', '=', 'new', 'ObjectOutputStream', '(', 'baos', ')', ';', 'out', '.', 'writeObject', '(', 'obj', ')', ';', 'out', '.', 'flush', '(', ')', ';', '// read in the copy', 'byte', 'data', '[', ']', '=', 'baos', '.', 'toByteArray', '(', ')', ';', 'ByteArrayInputStream', 'bais', '=', 'new', 'ByteArrayInputStream', '(', 'data', ')', ';', 'in', '=', 'new', 'ObjectInputStream', '(', 'bais', ')', ';', 'copy', '=', 'in', '.', 'readObject', '(', ')', ';', '}', 'finally', '{', 'Streams', '.', 'close', '(', 'out', ')', ';', 'Streams', '.', 'close', '(', 'in', ')', ';', '}', 'return', 'copy', ';', '}']","Copy an serializable object deeply.

@param obj  Object to copy.
@return     Copied object.

@throws IOException
@throws ClassNotFoundException","['Copy', 'an', 'serializable', 'object', 'deeply', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/Objects.java#L93-L119,test
liveontologies/elk-reasoner,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/saturation/ClassExpressionSaturationFactory.java,ClassExpressionSaturationFactory.updateIfSmaller,"private static boolean updateIfSmaller(AtomicInteger counter, int value) {
		for (;;) {
			int snapshotCoutner = counter.get();
			if (snapshotCoutner >= value)
				return false;
			if (counter.compareAndSet(snapshotCoutner, value))
				return true;
		}
	}",java,"private static boolean updateIfSmaller(AtomicInteger counter, int value) {
		for (;;) {
			int snapshotCoutner = counter.get();
			if (snapshotCoutner >= value)
				return false;
			if (counter.compareAndSet(snapshotCoutner, value))
				return true;
		}
	}","['private', 'static', 'boolean', 'updateIfSmaller', '(', 'AtomicInteger', 'counter', ',', 'int', 'value', ')', '{', 'for', '(', ';', ';', ')', '{', 'int', 'snapshotCoutner', '=', 'counter', '.', 'get', '(', ')', ';', 'if', '(', 'snapshotCoutner', '>=', 'value', ')', 'return', 'false', ';', 'if', '(', 'counter', '.', 'compareAndSet', '(', 'snapshotCoutner', ',', 'value', ')', ')', 'return', 'true', ';', '}', '}']","Update the counter to the value provided it is greater. Regardless of the
returned value, it is guaranteed that the value of the counter after
execution will be at least the input value.

@param counter
the counter that should be updated
@param value
the value to which the counter should be updated
@return {@code true} if the counter has been updated","['Update', 'the', 'counter', 'to', 'the', 'value', 'provided', 'it', 'is', 'greater', '.', 'Regardless', 'of', 'the', 'returned', 'value', 'it', 'is', 'guaranteed', 'that', 'the', 'value', 'of', 'the', 'counter', 'after', 'execution', 'will', 'be', 'at', 'least', 'the', 'input', 'value', '.']",cfbe5279a57e0433d45c1676c7658ddb6e29b9eb,https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/saturation/ClassExpressionSaturationFactory.java#L414-L422,test
Unidata/thredds,cdm/src/main/java/ucar/ma2/Index.java,Index.setDim,"public void setDim(int dim, int value) {
    if (value < 0 || value >= shape[dim])  // check index here
      throw new ArrayIndexOutOfBoundsException();
    if (shape[dim] >= 0) //!vlen
      current[dim] = value;
  }",java,"public void setDim(int dim, int value) {
    if (value < 0 || value >= shape[dim])  // check index here
      throw new ArrayIndexOutOfBoundsException();
    if (shape[dim] >= 0) //!vlen
      current[dim] = value;
  }","['public', 'void', 'setDim', '(', 'int', 'dim', ',', 'int', 'value', ')', '{', 'if', '(', 'value', '<', '0', '||', 'value', '>=', 'shape', '[', 'dim', ']', ')', '// check index here\r', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', 'if', '(', 'shape', '[', 'dim', ']', '>=', '0', ')', '//!vlen\r', 'current', '[', 'dim', ']', '=', 'value', ';', '}']","set current element at dimension dim to v

@param dim   set this dimension
@param value to this value","['set', 'current', 'element', 'at', 'dimension', 'dim', 'to', 'v']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/Index.java#L579-L584,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/NetcdfFile.java,NetcdfFile.addAttribute,"public Attribute addAttribute(Group parent, String name, String value) {
    if (immutable) throw new IllegalStateException(""Cant modify"");
    if (value == null) return null;
    if (parent == null) parent = rootGroup;
    Attribute att = new Attribute(name, value);
    parent.addAttribute(att);
    return att;
  }",java,"public Attribute addAttribute(Group parent, String name, String value) {
    if (immutable) throw new IllegalStateException(""Cant modify"");
    if (value == null) return null;
    if (parent == null) parent = rootGroup;
    Attribute att = new Attribute(name, value);
    parent.addAttribute(att);
    return att;
  }","['public', 'Attribute', 'addAttribute', '(', 'Group', 'parent', ',', 'String', 'name', ',', 'String', 'value', ')', '{', 'if', '(', 'immutable', ')', 'throw', 'new', 'IllegalStateException', '(', '""Cant modify""', ')', ';', 'if', '(', 'value', '==', 'null', ')', 'return', 'null', ';', 'if', '(', 'parent', '==', 'null', ')', 'parent', '=', 'rootGroup', ';', 'Attribute', 'att', '=', 'new', 'Attribute', '(', 'name', ',', 'value', ')', ';', 'parent', '.', 'addAttribute', '(', 'att', ')', ';', 'return', 'att', ';', '}']","Add optional String attribute to a group.

@param parent add to this group. If group is null, use root group
@param name attribute name, may not be null
@param value attribute value, may be null, in which case, do not addd
@return the attribute that was added","['Add', 'optional', 'String', 'attribute', 'to', 'a', 'group', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/NetcdfFile.java#L1730-L1737,test
lessthanoptimal/GeoRegression,main/src/georegression/metric/Distance2D_F64.java,Distance2D_F64.distance,"public static double distance( Polygon2D_F64 poly , Point2D_F64 p ) {
		return Math.sqrt(distanceSq(poly, p, null));
	}",java,"public static double distance( Polygon2D_F64 poly , Point2D_F64 p ) {
		return Math.sqrt(distanceSq(poly, p, null));
	}","['public', 'static', 'double', 'distance', '(', 'Polygon2D_F64', 'poly', ',', 'Point2D_F64', 'p', ')', '{', 'return', 'Math', '.', 'sqrt', '(', 'distanceSq', '(', 'poly', ',', 'p', ',', 'null', ')', ')', ';', '}']","Returns the Euclidean distance of the closest point on the Polygon to the provided point.

@param poly Polygon2D
@param p Point
@return Distance squared apart","['Returns', 'the', 'Euclidean', 'distance', 'of', 'the', 'closest', 'point', 'on', 'the', 'Polygon', 'to', 'the', 'provided', 'point', '.']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/metric/Distance2D_F64.java#L284-L286,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/reteoo/AlphaNodeVertex.java,AlphaNodeVertex.getFieldName,"public String getFieldName() {
        AlphaNodeFieldConstraint constraint = this.node.getConstraint();
        if (constraint instanceof MvelConstraint) {
        	MvelConstraint mvelConstraint = (MvelConstraint) constraint;
            InternalReadAccessor accessor = mvelConstraint.getFieldExtractor();
            if (accessor instanceof ClassFieldReader) {
                return ((ClassFieldReader) accessor).getFieldName();
            }
        }
        return null;
    }",java,"public String getFieldName() {
        AlphaNodeFieldConstraint constraint = this.node.getConstraint();
        if (constraint instanceof MvelConstraint) {
        	MvelConstraint mvelConstraint = (MvelConstraint) constraint;
            InternalReadAccessor accessor = mvelConstraint.getFieldExtractor();
            if (accessor instanceof ClassFieldReader) {
                return ((ClassFieldReader) accessor).getFieldName();
            }
        }
        return null;
    }","['public', 'String', 'getFieldName', '(', ')', '{', 'AlphaNodeFieldConstraint', 'constraint', '=', 'this', '.', 'node', '.', 'getConstraint', '(', ')', ';', 'if', '(', 'constraint', 'instanceof', 'MvelConstraint', ')', '{', 'MvelConstraint', 'mvelConstraint', '=', '(', 'MvelConstraint', ')', 'constraint', ';', 'InternalReadAccessor', 'accessor', '=', 'mvelConstraint', '.', 'getFieldExtractor', '(', ')', ';', 'if', '(', 'accessor', 'instanceof', 'ClassFieldReader', ')', '{', 'return', '(', '(', 'ClassFieldReader', ')', 'accessor', ')', '.', 'getFieldName', '(', ')', ';', '}', '}', 'return', 'null', ';', '}']","Constraint has field extractor and this method is returning fieldName
it.

@return field name","['Constraint', 'has', 'field', 'extractor', 'and', 'this', 'method', 'is', 'returning', 'fieldName', 'it', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/reteoo/AlphaNodeVertex.java#L80-L90,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,ConfigurationUtility.reBuildUpperLevelFormula,"public static void reBuildUpperLevelFormula(
			final ConfigBuildRef configBuildRef,
			final String actionFullName) {
		Map<Cell, String> cachedMap = configBuildRef.getCachedCells();
		Map<String, List<RowsMapping>> rowsMap = new HashMap<>();
		for (Map.Entry<Cell, String> entry : cachedMap.entrySet()) {
			Cell cell = entry.getKey();
			String originFormula = entry.getValue();
			if (originFormula != null) {
				setupUpperLevelFormula(cell, originFormula, actionFullName,
						rowsMap, configBuildRef);
			}
		}

	}",java,"public static void reBuildUpperLevelFormula(
			final ConfigBuildRef configBuildRef,
			final String actionFullName) {
		Map<Cell, String> cachedMap = configBuildRef.getCachedCells();
		Map<String, List<RowsMapping>> rowsMap = new HashMap<>();
		for (Map.Entry<Cell, String> entry : cachedMap.entrySet()) {
			Cell cell = entry.getKey();
			String originFormula = entry.getValue();
			if (originFormula != null) {
				setupUpperLevelFormula(cell, originFormula, actionFullName,
						rowsMap, configBuildRef);
			}
		}

	}","['public', 'static', 'void', 'reBuildUpperLevelFormula', '(', 'final', 'ConfigBuildRef', 'configBuildRef', ',', 'final', 'String', 'actionFullName', ')', '{', 'Map', '<', 'Cell', ',', 'String', '>', 'cachedMap', '=', 'configBuildRef', '.', 'getCachedCells', '(', ')', ';', 'Map', '<', 'String', ',', 'List', '<', 'RowsMapping', '>', '>', 'rowsMap', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'Cell', ',', 'String', '>', 'entry', ':', 'cachedMap', '.', 'entrySet', '(', ')', ')', '{', 'Cell', 'cell', '=', 'entry', '.', 'getKey', '(', ')', ';', 'String', 'originFormula', '=', 'entry', '.', 'getValue', '(', ')', ';', 'if', '(', 'originFormula', '!=', 'null', ')', '{', 'setupUpperLevelFormula', '(', 'cell', ',', 'originFormula', ',', 'actionFullName', ',', 'rowsMap', ',', 'configBuildRef', ')', ';', '}', '}', '}']","Re build upper level formula.

@param configBuildRef
the config build ref
@param actionFullName
the action full name","['Re', 'build', 'upper', 'level', 'formula', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java#L103-L117,test
OpenEstate/OpenEstate-IO,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/ImmobilienTransferTyp.java,ImmobilienTransferTyp.setAnbieter,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setAnbieter(ImmobilienTransferTyp.Anbieter value) {
        this.anbieter = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setAnbieter(ImmobilienTransferTyp.Anbieter value) {
        this.anbieter = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:52:47+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setAnbieter', '(', 'ImmobilienTransferTyp', '.', 'Anbieter', 'value', ')', '{', 'this', '.', 'anbieter', '=', 'value', ';', '}']","Sets the value of the anbieter property.

@param value
allowed object is
{@link ImmobilienTransferTyp.Anbieter }","['Sets', 'the', 'value', 'of', 'the', 'anbieter', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/ImmobilienTransferTyp.java#L119-L122,test
jcodec/jcodec,src/main/java/org/jcodec/codecs/h264/H264Utils.java,H264Utils.joinNALUnitsToBuffer,"public static void joinNALUnitsToBuffer(List<ByteBuffer> nalUnits, ByteBuffer out) {
        for (ByteBuffer nal : nalUnits) {
            out.putInt(1);
            out.put(nal.duplicate());
        }
    }",java,"public static void joinNALUnitsToBuffer(List<ByteBuffer> nalUnits, ByteBuffer out) {
        for (ByteBuffer nal : nalUnits) {
            out.putInt(1);
            out.put(nal.duplicate());
        }
    }","['public', 'static', 'void', 'joinNALUnitsToBuffer', '(', 'List', '<', 'ByteBuffer', '>', 'nalUnits', ',', 'ByteBuffer', 'out', ')', '{', 'for', '(', 'ByteBuffer', 'nal', ':', 'nalUnits', ')', '{', 'out', '.', 'putInt', '(', '1', ')', ';', 'out', '.', 'put', '(', 'nal', '.', 'duplicate', '(', ')', ')', ';', '}', '}']","Joins buffers containing individual NAL units into a single AnnexB
delimited buffer. Each NAL unit will be separated with 00 00 00 01
markers.

@param nalUnits
@param out","['Joins', 'buffers', 'containing', 'individual', 'NAL', 'units', 'into', 'a', 'single', 'AnnexB', 'delimited', 'buffer', '.', 'Each', 'NAL', 'unit', 'will', 'be', 'separated', 'with', '00', '00', '00', '01', 'markers', '.']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/codecs/h264/H264Utils.java#L630-L635,test
OpenEstate/OpenEstate-IO,ImmoXML/src/main/jaxb/org/openestate/io/immoxml/xml/HallenLagerProd.java,HallenLagerProd.setHallenTyp,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:50:55+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setHallenTyp(HallenLagerProd.HallenTyp value) {
        this.hallenTyp = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:50:55+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setHallenTyp(HallenLagerProd.HallenTyp value) {
        this.hallenTyp = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:50:55+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setHallenTyp', '(', 'HallenLagerProd', '.', 'HallenTyp', 'value', ')', '{', 'this', '.', 'hallenTyp', '=', 'value', ';', '}']","Sets the value of the hallenTyp property.

@param value
allowed object is
{@link HallenLagerProd.HallenTyp }","['Sets', 'the', 'value', 'of', 'the', 'hallenTyp', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/ImmoXML/src/main/jaxb/org/openestate/io/immoxml/xml/HallenLagerProd.java#L63-L66,test
oblac/jodd,jodd-joy/src/main/java/jodd/joy/JoyMadvoc.java,JoyMadvoc.printRoutes,"protected void printRoutes(final int width) {
		final ActionsManager actionsManager = webApp.madvocContainer().lookupComponent(ActionsManager.class);
		final List<ActionRuntime> actions = actionsManager.getAllActionRuntimes();
		final Map<String, String> aliases = actionsManager.getAllAliases();

		if (actions.isEmpty()) {
			return;
		}

		final Print print = new Print();

		print.line(""Routes"", width);

		actions.stream()
			.sorted(Comparator.comparing(
				actionRuntime -> actionRuntime.getActionPath() + ' ' + actionRuntime.getActionMethod()))
			.forEach(ar -> {

				final String actionMethod = ar.getActionMethod();

				print.out(Chalk256.chalk().yellow(), actionMethod == null ? ""*"" : actionMethod, 7);
				print.space();

				final String signature =
					ClassUtil.getShortClassName(
						ProxettaUtil.resolveTargetClass(ar.getActionClass()), 2)
						+ '#' + ar.getActionClassMethod().getName();

				print.outLeftRightNewLine(
					Chalk256.chalk().green(), ar.getActionPath(),
					Chalk256.chalk().blue(), signature,
					width - 7 - 1
				);
			});

		if (!aliases.isEmpty()) {

			print.line(""Aliases"", width);

			actions.stream()
				.sorted(Comparator.comparing(
					actionRuntime -> actionRuntime.getActionPath() + ' ' + actionRuntime.getActionMethod()))
				.forEach(ar -> {

					final String actionPath = ar.getActionPath();

					for (final Map.Entry<String, String> entry : aliases.entrySet()) {
						if (entry.getValue().equals(actionPath)) {
							print.space(8);

							print.outLeftRightNewLine(
								Chalk256.chalk().green(), entry.getValue(),
								Chalk256.chalk().blue(), entry.getKey(),
								width - 8
							);
						}
					}
				});
		}

		print.line(width);
	}",java,"protected void printRoutes(final int width) {
		final ActionsManager actionsManager = webApp.madvocContainer().lookupComponent(ActionsManager.class);
		final List<ActionRuntime> actions = actionsManager.getAllActionRuntimes();
		final Map<String, String> aliases = actionsManager.getAllAliases();

		if (actions.isEmpty()) {
			return;
		}

		final Print print = new Print();

		print.line(""Routes"", width);

		actions.stream()
			.sorted(Comparator.comparing(
				actionRuntime -> actionRuntime.getActionPath() + ' ' + actionRuntime.getActionMethod()))
			.forEach(ar -> {

				final String actionMethod = ar.getActionMethod();

				print.out(Chalk256.chalk().yellow(), actionMethod == null ? ""*"" : actionMethod, 7);
				print.space();

				final String signature =
					ClassUtil.getShortClassName(
						ProxettaUtil.resolveTargetClass(ar.getActionClass()), 2)
						+ '#' + ar.getActionClassMethod().getName();

				print.outLeftRightNewLine(
					Chalk256.chalk().green(), ar.getActionPath(),
					Chalk256.chalk().blue(), signature,
					width - 7 - 1
				);
			});

		if (!aliases.isEmpty()) {

			print.line(""Aliases"", width);

			actions.stream()
				.sorted(Comparator.comparing(
					actionRuntime -> actionRuntime.getActionPath() + ' ' + actionRuntime.getActionMethod()))
				.forEach(ar -> {

					final String actionPath = ar.getActionPath();

					for (final Map.Entry<String, String> entry : aliases.entrySet()) {
						if (entry.getValue().equals(actionPath)) {
							print.space(8);

							print.outLeftRightNewLine(
								Chalk256.chalk().green(), entry.getValue(),
								Chalk256.chalk().blue(), entry.getKey(),
								width - 8
							);
						}
					}
				});
		}

		print.line(width);
	}","['protected', 'void', 'printRoutes', '(', 'final', 'int', 'width', ')', '{', 'final', 'ActionsManager', 'actionsManager', '=', 'webApp', '.', 'madvocContainer', '(', ')', '.', 'lookupComponent', '(', 'ActionsManager', '.', 'class', ')', ';', 'final', 'List', '<', 'ActionRuntime', '>', 'actions', '=', 'actionsManager', '.', 'getAllActionRuntimes', '(', ')', ';', 'final', 'Map', '<', 'String', ',', 'String', '>', 'aliases', '=', 'actionsManager', '.', 'getAllAliases', '(', ')', ';', 'if', '(', 'actions', '.', 'isEmpty', '(', ')', ')', '{', 'return', ';', '}', 'final', 'Print', 'print', '=', 'new', 'Print', '(', ')', ';', 'print', '.', 'line', '(', '""Routes""', ',', 'width', ')', ';', 'actions', '.', 'stream', '(', ')', '.', 'sorted', '(', 'Comparator', '.', 'comparing', '(', 'actionRuntime', '->', 'actionRuntime', '.', 'getActionPath', '(', ')', '+', ""'"", ""'"", '+', 'actionRuntime', '.', 'getActionMethod', '(', ')', ')', ')', '.', 'forEach', '(', 'ar', '->', '{', 'final', 'String', 'actionMethod', '=', 'ar', '.', 'getActionMethod', '(', ')', ';', 'print', '.', 'out', '(', 'Chalk256', '.', 'chalk', '(', ')', '.', 'yellow', '(', ')', ',', 'actionMethod', '==', 'null', '?', '""*""', ':', 'actionMethod', ',', '7', ')', ';', 'print', '.', 'space', '(', ')', ';', 'final', 'String', 'signature', '=', 'ClassUtil', '.', 'getShortClassName', '(', 'ProxettaUtil', '.', 'resolveTargetClass', '(', 'ar', '.', 'getActionClass', '(', ')', ')', ',', '2', ')', '+', ""'"", ""'"", '+', 'ar', '.', 'getActionClassMethod', '(', ')', '.', 'getName', '(', ')', ';', 'print', '.', 'outLeftRightNewLine', '(', 'Chalk256', '.', 'chalk', '(', ')', '.', 'green', '(', ')', ',', 'ar', '.', 'getActionPath', '(', ')', ',', 'Chalk256', '.', 'chalk', '(', ')', '.', 'blue', '(', ')', ',', 'signature', ',', 'width', '-', '7', '-', '1', ')', ';', '}', ')', ';', 'if', '(', '!', 'aliases', '.', 'isEmpty', '(', ')', ')', '{', 'print', '.', 'line', '(', '""Aliases""', ',', 'width', ')', ';', 'actions', '.', 'stream', '(', ')', '.', 'sorted', '(', 'Comparator', '.', 'comparing', '(', 'actionRuntime', '->', 'actionRuntime', '.', 'getActionPath', '(', ')', '+', ""'"", ""'"", '+', 'actionRuntime', '.', 'getActionMethod', '(', ')', ')', ')', '.', 'forEach', '(', 'ar', '->', '{', 'final', 'String', 'actionPath', '=', 'ar', '.', 'getActionPath', '(', ')', ';', 'for', '(', 'final', 'Map', '.', 'Entry', '<', 'String', ',', 'String', '>', 'entry', ':', 'aliases', '.', 'entrySet', '(', ')', ')', '{', 'if', '(', 'entry', '.', 'getValue', '(', ')', '.', 'equals', '(', 'actionPath', ')', ')', '{', 'print', '.', 'space', '(', '8', ')', ';', 'print', '.', 'outLeftRightNewLine', '(', 'Chalk256', '.', 'chalk', '(', ')', '.', 'green', '(', ')', ',', 'entry', '.', 'getValue', '(', ')', ',', 'Chalk256', '.', 'chalk', '(', ')', '.', 'blue', '(', ')', ',', 'entry', '.', 'getKey', '(', ')', ',', 'width', '-', '8', ')', ';', '}', '}', '}', ')', ';', '}', 'print', '.', 'line', '(', 'width', ')', ';', '}']",Prints routes to console.,"['Prints', 'routes', 'to', 'console', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-joy/src/main/java/jodd/joy/JoyMadvoc.java#L175-L236,test
RestComm/jain-slee,container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbActivityContextInterfaceImpl.java,SbbActivityContextInterfaceImpl.getFieldValue,"public Object getFieldValue(String fieldName, Class<?> returnType) {

		String realFieldName = getRealFieldName(fieldName);

		Object value = aciImpl.getActivityContext().getDataAttribute(
				realFieldName);

		if (value == null) {
			if (returnType.isPrimitive()) {
				if (returnType.equals(Integer.TYPE)) {
					return Integer.valueOf(0);
				} else if (returnType.equals(Boolean.TYPE)) {
					return Boolean.FALSE;
				} else if (returnType.equals(Long.TYPE)) {
					return Long.valueOf(0);
				} else if (returnType.equals(Double.TYPE)) {
					return Double.valueOf(0);
				} else if (returnType.equals(Float.TYPE)) {
					return Float.valueOf(0);
				}
			}
		}

		return value;
	}",java,"public Object getFieldValue(String fieldName, Class<?> returnType) {

		String realFieldName = getRealFieldName(fieldName);

		Object value = aciImpl.getActivityContext().getDataAttribute(
				realFieldName);

		if (value == null) {
			if (returnType.isPrimitive()) {
				if (returnType.equals(Integer.TYPE)) {
					return Integer.valueOf(0);
				} else if (returnType.equals(Boolean.TYPE)) {
					return Boolean.FALSE;
				} else if (returnType.equals(Long.TYPE)) {
					return Long.valueOf(0);
				} else if (returnType.equals(Double.TYPE)) {
					return Double.valueOf(0);
				} else if (returnType.equals(Float.TYPE)) {
					return Float.valueOf(0);
				}
			}
		}

		return value;
	}","['public', 'Object', 'getFieldValue', '(', 'String', 'fieldName', ',', 'Class', '<', '?', '>', 'returnType', ')', '{', 'String', 'realFieldName', '=', 'getRealFieldName', '(', 'fieldName', ')', ';', 'Object', 'value', '=', 'aciImpl', '.', 'getActivityContext', '(', ')', '.', 'getDataAttribute', '(', 'realFieldName', ')', ';', 'if', '(', 'value', '==', 'null', ')', '{', 'if', '(', 'returnType', '.', 'isPrimitive', '(', ')', ')', '{', 'if', '(', 'returnType', '.', 'equals', '(', 'Integer', '.', 'TYPE', ')', ')', '{', 'return', 'Integer', '.', 'valueOf', '(', '0', ')', ';', '}', 'else', 'if', '(', 'returnType', '.', 'equals', '(', 'Boolean', '.', 'TYPE', ')', ')', '{', 'return', 'Boolean', '.', 'FALSE', ';', '}', 'else', 'if', '(', 'returnType', '.', 'equals', '(', 'Long', '.', 'TYPE', ')', ')', '{', 'return', 'Long', '.', 'valueOf', '(', '0', ')', ';', '}', 'else', 'if', '(', 'returnType', '.', 'equals', '(', 'Double', '.', 'TYPE', ')', ')', '{', 'return', 'Double', '.', 'valueOf', '(', '0', ')', ';', '}', 'else', 'if', '(', 'returnType', '.', 'equals', '(', 'Float', '.', 'TYPE', ')', ')', '{', 'return', 'Float', '.', 'valueOf', '(', '0', ')', ';', '}', '}', '}', 'return', 'value', ';', '}']","Retrieves an sbb aci data field value

@param fieldName
@param returnType
@return","['Retrieves', 'an', 'sbb', 'aci', 'data', 'field', 'value']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/services/src/main/java/org/mobicents/slee/runtime/sbb/SbbActivityContextInterfaceImpl.java#L237-L261,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/util/EscapeStrings.java,EscapeStrings.unescapeURL,"public static String unescapeURL(String url) {
    String newurl;
    newurl = urlDecode(url);
    return newurl;
  }",java,"public static String unescapeURL(String url) {
    String newurl;
    newurl = urlDecode(url);
    return newurl;
  }","['public', 'static', 'String', 'unescapeURL', '(', 'String', 'url', ')', '{', 'String', 'newurl', ';', 'newurl', '=', 'urlDecode', '(', 'url', ')', ';', 'return', 'newurl', ';', '}']","Decode all of the parts of the url including query and fragment

@param url the url to encode","['Decode', 'all', 'of', 'the', 'parts', 'of', 'the', 'url', 'including', 'query', 'and', 'fragment']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/util/EscapeStrings.java#L306-L310,test
RestComm/jain-slee,container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java,ClassUtils.getAllInterfacesMethods,"public static Map<String, Method> getAllInterfacesMethods(Class xInterfaceClass, Set<String> ignore) {
		HashMap<String, Method> abstractMethods = new HashMap<String, Method>();
		Method[] methods = null;
		Class[] superInterfaces;

		superInterfaces = xInterfaceClass.getInterfaces();

		for (Class superInterface : superInterfaces) {
			if (!ignore.contains(superInterface.getName()))
				abstractMethods.putAll(getAllInterfacesMethods(superInterface, ignore));
		}

		methods = xInterfaceClass.getDeclaredMethods();
		for (int i = 0; i < methods.length; i++) {
			abstractMethods.put(getMethodKey(methods[i]), methods[i]);
		}

		return abstractMethods;
	}",java,"public static Map<String, Method> getAllInterfacesMethods(Class xInterfaceClass, Set<String> ignore) {
		HashMap<String, Method> abstractMethods = new HashMap<String, Method>();
		Method[] methods = null;
		Class[] superInterfaces;

		superInterfaces = xInterfaceClass.getInterfaces();

		for (Class superInterface : superInterfaces) {
			if (!ignore.contains(superInterface.getName()))
				abstractMethods.putAll(getAllInterfacesMethods(superInterface, ignore));
		}

		methods = xInterfaceClass.getDeclaredMethods();
		for (int i = 0; i < methods.length; i++) {
			abstractMethods.put(getMethodKey(methods[i]), methods[i]);
		}

		return abstractMethods;
	}","['public', 'static', 'Map', '<', 'String', ',', 'Method', '>', 'getAllInterfacesMethods', '(', 'Class', 'xInterfaceClass', ',', 'Set', '<', 'String', '>', 'ignore', ')', '{', 'HashMap', '<', 'String', ',', 'Method', '>', 'abstractMethods', '=', 'new', 'HashMap', '<', 'String', ',', 'Method', '>', '(', ')', ';', 'Method', '[', ']', 'methods', '=', 'null', ';', 'Class', '[', ']', 'superInterfaces', ';', 'superInterfaces', '=', 'xInterfaceClass', '.', 'getInterfaces', '(', ')', ';', 'for', '(', 'Class', 'superInterface', ':', 'superInterfaces', ')', '{', 'if', '(', '!', 'ignore', '.', 'contains', '(', 'superInterface', '.', 'getName', '(', ')', ')', ')', 'abstractMethods', '.', 'putAll', '(', 'getAllInterfacesMethods', '(', 'superInterface', ',', 'ignore', ')', ')', ';', '}', 'methods', '=', 'xInterfaceClass', '.', 'getDeclaredMethods', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'methods', '.', 'length', ';', 'i', '++', ')', '{', 'abstractMethods', '.', 'put', '(', 'getMethodKey', '(', 'methods', '[', 'i', ']', ')', ',', 'methods', '[', 'i', ']', ')', ';', '}', 'return', 'abstractMethods', ';', '}']","Returns methods of this interface and all super interfaces

@param ctInterfaceClass
@return","['Returns', 'methods', 'of', 'this', 'interface', 'and', 'all', 'super', 'interfaces']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/validator/ClassUtils.java#L151-L169,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java,ClassVisitor.visitField,"public FieldVisitor visitField(
      final int access,
      final String name,
      final String descriptor,
      final String signature,
      final Object value) {
    if (cv != null) {
      return cv.visitField(access, name, descriptor, signature, value);
    }
    return null;
  }",java,"public FieldVisitor visitField(
      final int access,
      final String name,
      final String descriptor,
      final String signature,
      final Object value) {
    if (cv != null) {
      return cv.visitField(access, name, descriptor, signature, value);
    }
    return null;
  }","['public', 'FieldVisitor', 'visitField', '(', 'final', 'int', 'access', ',', 'final', 'String', 'name', ',', 'final', 'String', 'descriptor', ',', 'final', 'String', 'signature', ',', 'final', 'Object', 'value', ')', '{', 'if', '(', 'cv', '!=', 'null', ')', '{', 'return', 'cv', '.', 'visitField', '(', 'access', ',', 'name', ',', 'descriptor', ',', 'signature', ',', 'value', ')', ';', '}', 'return', 'null', ';', '}']","Visits a field of the class.

@param access the field's access flags (see {@link Opcodes}). This parameter also indicates if
the field is synthetic and/or deprecated.
@param name the field's name.
@param descriptor the field's descriptor (see {@link Type}).
@param signature the field's signature. May be {@literal null} if the field's type does not use
generic types.
@param value the field's initial value. This parameter, which may be {@literal null} if the
field does not have an initial value, must be an {@link Integer}, a {@link Float}, a {@link
Long}, a {@link Double} or a {@link String} (for {@code int}, {@code float}, {@code long}
or {@code String} fields respectively). <i>This parameter is only used for static
fields</i>. Its value is ignored for non static fields, which must be initialized through
bytecode instructions in constructors or methods.
@return a visitor to visit field annotations and attributes, or {@literal null} if this class
visitor is not interested in visiting these annotations and attributes.","['Visits', 'a', 'field', 'of', 'the', 'class', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java#L280-L290,test
playframework/playframework,core/play/src/main/java/play/i18n/MessagesApi.java,MessagesApi.get,"public String get(play.api.i18n.Lang lang, List<String> keys, Object... args) {
    Buffer<String> keyArgs = scala.collection.JavaConverters.asScalaBufferConverter(keys).asScala();
    Seq<Object> scalaArgs = convertArgsToScalaBuffer(args);
    return messages.apply(keyArgs.toSeq(), scalaArgs, lang);
  }",java,"public String get(play.api.i18n.Lang lang, List<String> keys, Object... args) {
    Buffer<String> keyArgs = scala.collection.JavaConverters.asScalaBufferConverter(keys).asScala();
    Seq<Object> scalaArgs = convertArgsToScalaBuffer(args);
    return messages.apply(keyArgs.toSeq(), scalaArgs, lang);
  }","['public', 'String', 'get', '(', 'play', '.', 'api', '.', 'i18n', '.', 'Lang', 'lang', ',', 'List', '<', 'String', '>', 'keys', ',', 'Object', '...', 'args', ')', '{', 'Buffer', '<', 'String', '>', 'keyArgs', '=', 'scala', '.', 'collection', '.', 'JavaConverters', '.', 'asScalaBufferConverter', '(', 'keys', ')', '.', 'asScala', '(', ')', ';', 'Seq', '<', 'Object', '>', 'scalaArgs', '=', 'convertArgsToScalaBuffer', '(', 'args', ')', ';', 'return', 'messages', '.', 'apply', '(', 'keyArgs', '.', 'toSeq', '(', ')', ',', 'scalaArgs', ',', 'lang', ')', ';', '}']","Translates the first defined message.

<p>Uses `java.text.MessageFormat` internally to format the message.

@param lang the message lang
@param keys the messages keys
@param args the message arguments
@return the formatted message or a default rendering if the key wasn't defined","['Translates', 'the', 'first', 'defined', 'message', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/i18n/MessagesApi.java#L94-L98,test
GojaFramework/goja,goja-core/src/main/java/goja/core/db/Dao.java,Dao.findOne,"public static Record findOne(SqlSelect sqlSelect) {
        Preconditions.checkNotNull(sqlSelect, ""The Query SqlNode is must be not null."");
        return Db.findFirst(sqlSelect.toString(), sqlSelect.getParams().toArray());
    }",java,"public static Record findOne(SqlSelect sqlSelect) {
        Preconditions.checkNotNull(sqlSelect, ""The Query SqlNode is must be not null."");
        return Db.findFirst(sqlSelect.toString(), sqlSelect.getParams().toArray());
    }","['public', 'static', 'Record', 'findOne', '(', 'SqlSelect', 'sqlSelect', ')', '{', 'Preconditions', '.', 'checkNotNull', '(', 'sqlSelect', ',', '""The Query SqlNode is must be not null.""', ')', ';', 'return', 'Db', '.', 'findFirst', '(', 'sqlSelect', '.', 'toString', '(', ')', ',', 'sqlSelect', '.', 'getParams', '(', ')', '.', 'toArray', '(', ')', ')', ';', '}']","Query a data record.

@param sqlSelect SqlNode Select
@return query result.
@see SqlSelect
@see FindBy","['Query', 'a', 'data', 'record', '.']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/db/Dao.java#L113-L116,test
cologneintelligence/FitGoodies,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/Fixture.java,Fixture.extractColumnParameters,"protected String[] extractColumnParameters(FitRow row) {
        final List<String> result = new ArrayList<>();

        for (FitCell cell : row.cells()) {
            result.add(FitUtils.extractCellParameter(cell));
        }

        return result.toArray(new String[result.size()]);
    }",java,"protected String[] extractColumnParameters(FitRow row) {
        final List<String> result = new ArrayList<>();

        for (FitCell cell : row.cells()) {
            result.add(FitUtils.extractCellParameter(cell));
        }

        return result.toArray(new String[result.size()]);
    }","['protected', 'String', '[', ']', 'extractColumnParameters', '(', 'FitRow', 'row', ')', '{', 'final', 'List', '<', 'String', '>', 'result', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'for', '(', 'FitCell', 'cell', ':', 'row', '.', 'cells', '(', ')', ')', '{', 'result', '.', 'add', '(', 'FitUtils', '.', 'extractCellParameter', '(', 'cell', ')', ')', ';', '}', 'return', 'result', '.', 'toArray', '(', 'new', 'String', '[', 'result', '.', 'size', '(', ')', ']', ')', ';', '}']","extracts and removes parameters from a row.

@param row row to process
@return extracted parameters","['extracts', 'and', 'removes', 'parameters', 'from', 'a', 'row', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/Fixture.java#L133-L141,test
leanix/leanix-sdk-java,src/main/java/net/leanix/api/BookmarksApi.java,BookmarksApi.getBookmarks,"public BookmarkListResponse getBookmarks(String bookmarkType, String groupKey, String sharingType) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'bookmarkType' is set
    if (bookmarkType == null) {
      throw new ApiException(400, ""Missing the required parameter 'bookmarkType' when calling getBookmarks"");
    }
    
    // create path and map variables
    String localVarPath = ""/bookmarks"".replaceAll(""\\{format\\}"",""json"");

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""bookmarkType"", bookmarkType));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""groupKey"", groupKey));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""sharingType"", sharingType));

    
    
    final String[] localVarAccepts = {
      ""application/json""
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      ""application/json""
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { ""token"" };

    GenericType<BookmarkListResponse> localVarReturnType = new GenericType<BookmarkListResponse>() {};
    return apiClient.invokeAPI(localVarPath, ""GET"", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }",java,"public BookmarkListResponse getBookmarks(String bookmarkType, String groupKey, String sharingType) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'bookmarkType' is set
    if (bookmarkType == null) {
      throw new ApiException(400, ""Missing the required parameter 'bookmarkType' when calling getBookmarks"");
    }
    
    // create path and map variables
    String localVarPath = ""/bookmarks"".replaceAll(""\\{format\\}"",""json"");

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""bookmarkType"", bookmarkType));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""groupKey"", groupKey));
    localVarQueryParams.addAll(apiClient.parameterToPairs("""", ""sharingType"", sharingType));

    
    
    final String[] localVarAccepts = {
      ""application/json""
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      ""application/json""
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { ""token"" };

    GenericType<BookmarkListResponse> localVarReturnType = new GenericType<BookmarkListResponse>() {};
    return apiClient.invokeAPI(localVarPath, ""GET"", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }","['public', 'BookmarkListResponse', 'getBookmarks', '(', 'String', 'bookmarkType', ',', 'String', 'groupKey', ',', 'String', 'sharingType', ')', 'throws', 'ApiException', '{', 'Object', 'localVarPostBody', '=', 'null', ';', ""// verify the required parameter 'bookmarkType' is set"", 'if', '(', 'bookmarkType', '==', 'null', ')', '{', 'throw', 'new', 'ApiException', '(', '400', ',', '""Missing the required parameter \'bookmarkType\' when calling getBookmarks""', ')', ';', '}', '// create path and map variables', 'String', 'localVarPath', '=', '""/bookmarks""', '.', 'replaceAll', '(', '""\\\\{format\\\\}""', ',', '""json""', ')', ';', '// query params', 'List', '<', 'Pair', '>', 'localVarQueryParams', '=', 'new', 'ArrayList', '<', 'Pair', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'String', '>', 'localVarHeaderParams', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'Object', '>', 'localVarFormParams', '=', 'new', 'HashMap', '<', 'String', ',', 'Object', '>', '(', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""bookmarkType""', ',', 'bookmarkType', ')', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""groupKey""', ',', 'groupKey', ')', ')', ';', 'localVarQueryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""sharingType""', ',', 'sharingType', ')', ')', ';', 'final', 'String', '[', ']', 'localVarAccepts', '=', '{', '""application/json""', '}', ';', 'final', 'String', 'localVarAccept', '=', 'apiClient', '.', 'selectHeaderAccept', '(', 'localVarAccepts', ')', ';', 'final', 'String', '[', ']', 'localVarContentTypes', '=', '{', '""application/json""', '}', ';', 'final', 'String', 'localVarContentType', '=', 'apiClient', '.', 'selectHeaderContentType', '(', 'localVarContentTypes', ')', ';', 'String', '[', ']', 'localVarAuthNames', '=', 'new', 'String', '[', ']', '{', '""token""', '}', ';', 'GenericType', '<', 'BookmarkListResponse', '>', 'localVarReturnType', '=', 'new', 'GenericType', '<', 'BookmarkListResponse', '>', '(', ')', '{', '}', ';', 'return', 'apiClient', '.', 'invokeAPI', '(', 'localVarPath', ',', '""GET""', ',', 'localVarQueryParams', ',', 'localVarPostBody', ',', 'localVarHeaderParams', ',', 'localVarFormParams', ',', 'localVarAccept', ',', 'localVarContentType', ',', 'localVarAuthNames', ',', 'localVarReturnType', ')', ';', '}']","getBookmarks
Retrieves all stored bookmarks a user can read.
@param bookmarkType Specifies the bookmark type (required)
@param groupKey A key used to separate bookmarks within the same query type (optional)
@param sharingType Specifies the sharing type which the returned bookmarks need to have (optional)
@return BookmarkListResponse
@throws ApiException if fails to make API call","['getBookmarks', 'Retrieves', 'all', 'stored', 'bookmarks', 'a', 'user', 'can', 'read', '.']",9516ac593d6a8f73baccc516a45877b4e5920c47,https://github.com/leanix/leanix-sdk-java/blob/9516ac593d6a8f73baccc516a45877b4e5920c47/src/main/java/net/leanix/api/BookmarksApi.java#L211-L247,test
RestComm/jain-slee,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java,ResourceAdaptorObjectImpl.unsetFaultTolerantResourceAdaptorContext,"@SuppressWarnings(""unchecked"")
	public void unsetFaultTolerantResourceAdaptorContext()
			throws IllegalArgumentException {

		if (doTraceLogs) {
			logger.trace(""unsetFaultTolerantResourceAdaptorContext()"");
		}

		if (isFaultTolerant()) {
			((FaultTolerantResourceAdaptor<Serializable, Serializable>) this.object)
					.unsetFaultTolerantResourceAdaptorContext();
		} else {
			throw new IllegalArgumentException(
					""RA Object is not fault tolerant!"");
		}
	}",java,"@SuppressWarnings(""unchecked"")
	public void unsetFaultTolerantResourceAdaptorContext()
			throws IllegalArgumentException {

		if (doTraceLogs) {
			logger.trace(""unsetFaultTolerantResourceAdaptorContext()"");
		}

		if (isFaultTolerant()) {
			((FaultTolerantResourceAdaptor<Serializable, Serializable>) this.object)
					.unsetFaultTolerantResourceAdaptorContext();
		} else {
			throw new IllegalArgumentException(
					""RA Object is not fault tolerant!"");
		}
	}","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'void', 'unsetFaultTolerantResourceAdaptorContext', '(', ')', 'throws', 'IllegalArgumentException', '{', 'if', '(', 'doTraceLogs', ')', '{', 'logger', '.', 'trace', '(', '""unsetFaultTolerantResourceAdaptorContext()""', ')', ';', '}', 'if', '(', 'isFaultTolerant', '(', ')', ')', '{', '(', '(', 'FaultTolerantResourceAdaptor', '<', 'Serializable', ',', 'Serializable', '>', ')', 'this', '.', 'object', ')', '.', 'unsetFaultTolerantResourceAdaptorContext', '(', ')', ';', '}', 'else', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""RA Object is not fault tolerant!""', ')', ';', '}', '}']","Unsets the ft context of the ra object.

@throws IllegalArgumentException
if the ra object is not in fault tolerant","['Unsets', 'the', 'ft', 'context', 'of', 'the', 'ra', 'object', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java#L349-L364,test
orientechnologies/orientdb,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientVertex.java,OrientVertex.remove,"@Override
  public void remove() {
    checkClass();

    final OrientBaseGraph graph = checkIfAttached();

    graph.setCurrentGraphInThreadLocal();
    graph.autoStartTransaction();

    final ODocument doc = getRecord();
    if (doc == null)
      throw ExceptionFactory.vertexWithIdDoesNotExist(this.getId());

    Map<String, List<ODocument>> treeRidbagEdgesToRemove = new HashMap<String, List<ODocument>>();

    if (!graph.getRawGraph().getTransaction().isActive()) {
      for (String fieldName : doc.fieldNames()) {
        final OPair<Direction, String> connection = getConnection(Direction.BOTH, fieldName);
        if (connection == null)
          // SKIP THIS FIELD
          continue;
        Object fv = doc.field(fieldName);
        if (fv instanceof ORidBag && !((ORidBag) fv).isEmbedded()) {
          List<ODocument> docs = new ArrayList<ODocument>();
          for (OIdentifiable id : (ORidBag) fv)
            docs.add(OrientBaseGraph.getDocument(id, true));
          treeRidbagEdgesToRemove.put(fieldName, docs);
        }
      }
    }

    // REMOVE THE VERTEX RECORD FIRST TO CATCH CME BEFORE EDGES ARE REMOVED
    super.removeRecord();

    // REMOVE THE VERTEX FROM MANUAL INDEXES
    final Iterator<Index<? extends Element>> it = graph.getIndices().iterator();
    if (it.hasNext()) {
      final Set<Edge> allEdges = new HashSet<Edge>();
      for (Edge e : getEdges(Direction.BOTH))
        allEdges.add(e);

      while (it.hasNext()) {
        final Index<? extends Element> index = it.next();

        if (Vertex.class.isAssignableFrom(index.getIndexClass())) {
          OrientIndex<OrientVertex> idx = (OrientIndex<OrientVertex>) index;
          idx.removeElement(this);
        }

        if (Edge.class.isAssignableFrom(index.getIndexClass())) {
          OrientIndex<OrientEdge> idx = (OrientIndex<OrientEdge>) index;
          for (Edge e : allEdges)
            idx.removeElement((OrientEdge) e);
        }
      }
    }

    for (Map.Entry<String, List<ODocument>> entry : treeRidbagEdgesToRemove.entrySet()) {
      doc.removeField(entry.getKey());
      Iterator<ODocument> iter = entry.getValue().iterator();
      while (iter.hasNext()) {
        ODocument docEdge = iter.next();
        OrientBaseGraph.deleteEdgeIfAny(docEdge, false);
      }
    }

    graph.removeEdgesInternal(this, doc, null, true, settings.isUseVertexFieldsForEdgeLabels(), settings.isAutoScaleEdgeType());
  }",java,"@Override
  public void remove() {
    checkClass();

    final OrientBaseGraph graph = checkIfAttached();

    graph.setCurrentGraphInThreadLocal();
    graph.autoStartTransaction();

    final ODocument doc = getRecord();
    if (doc == null)
      throw ExceptionFactory.vertexWithIdDoesNotExist(this.getId());

    Map<String, List<ODocument>> treeRidbagEdgesToRemove = new HashMap<String, List<ODocument>>();

    if (!graph.getRawGraph().getTransaction().isActive()) {
      for (String fieldName : doc.fieldNames()) {
        final OPair<Direction, String> connection = getConnection(Direction.BOTH, fieldName);
        if (connection == null)
          // SKIP THIS FIELD
          continue;
        Object fv = doc.field(fieldName);
        if (fv instanceof ORidBag && !((ORidBag) fv).isEmbedded()) {
          List<ODocument> docs = new ArrayList<ODocument>();
          for (OIdentifiable id : (ORidBag) fv)
            docs.add(OrientBaseGraph.getDocument(id, true));
          treeRidbagEdgesToRemove.put(fieldName, docs);
        }
      }
    }

    // REMOVE THE VERTEX RECORD FIRST TO CATCH CME BEFORE EDGES ARE REMOVED
    super.removeRecord();

    // REMOVE THE VERTEX FROM MANUAL INDEXES
    final Iterator<Index<? extends Element>> it = graph.getIndices().iterator();
    if (it.hasNext()) {
      final Set<Edge> allEdges = new HashSet<Edge>();
      for (Edge e : getEdges(Direction.BOTH))
        allEdges.add(e);

      while (it.hasNext()) {
        final Index<? extends Element> index = it.next();

        if (Vertex.class.isAssignableFrom(index.getIndexClass())) {
          OrientIndex<OrientVertex> idx = (OrientIndex<OrientVertex>) index;
          idx.removeElement(this);
        }

        if (Edge.class.isAssignableFrom(index.getIndexClass())) {
          OrientIndex<OrientEdge> idx = (OrientIndex<OrientEdge>) index;
          for (Edge e : allEdges)
            idx.removeElement((OrientEdge) e);
        }
      }
    }

    for (Map.Entry<String, List<ODocument>> entry : treeRidbagEdgesToRemove.entrySet()) {
      doc.removeField(entry.getKey());
      Iterator<ODocument> iter = entry.getValue().iterator();
      while (iter.hasNext()) {
        ODocument docEdge = iter.next();
        OrientBaseGraph.deleteEdgeIfAny(docEdge, false);
      }
    }

    graph.removeEdgesInternal(this, doc, null, true, settings.isUseVertexFieldsForEdgeLabels(), settings.isAutoScaleEdgeType());
  }","['@', 'Override', 'public', 'void', 'remove', '(', ')', '{', 'checkClass', '(', ')', ';', 'final', 'OrientBaseGraph', 'graph', '=', 'checkIfAttached', '(', ')', ';', 'graph', '.', 'setCurrentGraphInThreadLocal', '(', ')', ';', 'graph', '.', 'autoStartTransaction', '(', ')', ';', 'final', 'ODocument', 'doc', '=', 'getRecord', '(', ')', ';', 'if', '(', 'doc', '==', 'null', ')', 'throw', 'ExceptionFactory', '.', 'vertexWithIdDoesNotExist', '(', 'this', '.', 'getId', '(', ')', ')', ';', 'Map', '<', 'String', ',', 'List', '<', 'ODocument', '>', '>', 'treeRidbagEdgesToRemove', '=', 'new', 'HashMap', '<', 'String', ',', 'List', '<', 'ODocument', '>', '>', '(', ')', ';', 'if', '(', '!', 'graph', '.', 'getRawGraph', '(', ')', '.', 'getTransaction', '(', ')', '.', 'isActive', '(', ')', ')', '{', 'for', '(', 'String', 'fieldName', ':', 'doc', '.', 'fieldNames', '(', ')', ')', '{', 'final', 'OPair', '<', 'Direction', ',', 'String', '>', 'connection', '=', 'getConnection', '(', 'Direction', '.', 'BOTH', ',', 'fieldName', ')', ';', 'if', '(', 'connection', '==', 'null', ')', '// SKIP THIS FIELD', 'continue', ';', 'Object', 'fv', '=', 'doc', '.', 'field', '(', 'fieldName', ')', ';', 'if', '(', 'fv', 'instanceof', 'ORidBag', '&&', '!', '(', '(', 'ORidBag', ')', 'fv', ')', '.', 'isEmbedded', '(', ')', ')', '{', 'List', '<', 'ODocument', '>', 'docs', '=', 'new', 'ArrayList', '<', 'ODocument', '>', '(', ')', ';', 'for', '(', 'OIdentifiable', 'id', ':', '(', 'ORidBag', ')', 'fv', ')', 'docs', '.', '(', 'OrientBaseGraph', '.', 'getDocument', '(', 'id', ',', 'true', ')', ')', ';', 'treeRidbagEdgesToRemove', '.', 'put', '(', 'fieldName', ',', 'docs', ')', ';', '}', '}', '}', '// REMOVE THE VERTEX RECORD FIRST TO CATCH CME BEFORE EDGES ARE REMOVED', 'super', '.', 'removeRecord', '(', ')', ';', '// REMOVE THE VERTEX FROM MANUAL INDEXES', 'final', 'Iterator', '<', 'Index', '<', '?', 'extends', 'Element', '>', '>', 'it', '=', 'graph', '.', 'getIndices', '(', ')', '.', 'iterator', '(', ')', ';', 'if', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'final', 'Set', '<', 'Edge', '>', 'allEdges', '=', 'new', 'HashSet', '<', 'Edge', '>', '(', ')', ';', 'for', '(', 'Edge', 'e', ':', 'getEdges', '(', 'Direction', '.', 'BOTH', ')', ')', 'allEdges', '.', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'final', 'Index', '<', '?', 'extends', 'Element', '>', 'index', '=', 'it', '.', 'next', '(', ')', ';', 'if', '(', 'Vertex', '.', 'class', '.', 'isAssignableFrom', '(', 'index', '.', 'getIndexClass', '(', ')', ')', ')', '{', 'OrientIndex', '<', 'OrientVertex', '>', 'idx', '=', '(', 'OrientIndex', '<', 'OrientVertex', '>', ')', 'index', ';', 'idx', '.', 'removeElement', '(', 'this', ')', ';', '}', 'if', '(', 'Edge', '.', 'class', '.', 'isAssignableFrom', '(', 'index', '.', 'getIndexClass', '(', ')', ')', ')', '{', 'OrientIndex', '<', 'OrientEdge', '>', 'idx', '=', '(', 'OrientIndex', '<', 'OrientEdge', '>', ')', 'index', ';', 'for', '(', 'Edge', 'e', ':', 'allEdges', ')', 'idx', '.', 'removeElement', '(', '(', 'OrientEdge', ')', ')', ';', '}', '}', '}', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'List', '<', 'ODocument', '>', '>', 'entry', ':', 'treeRidbagEdgesToRemove', '.', 'entrySet', '(', ')', ')', '{', 'doc', '.', 'removeField', '(', 'entry', '.', 'getKey', '(', ')', ')', ';', 'Iterator', '<', 'ODocument', '>', 'iter', '=', 'entry', '.', 'getValue', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'iter', '.', 'hasNext', '(', ')', ')', '{', 'ODocument', 'docEdge', '=', 'iter', '.', 'next', '(', ')', ';', 'OrientBaseGraph', '.', 'deleteEdgeIfAny', '(', 'docEdge', ',', 'false', ')', ';', '}', '}', 'graph', '.', 'removeEdgesInternal', '(', 'this', ',', 'doc', ',', 'null', ',', 'true', ',', 'settings', '.', 'isUseVertexFieldsForEdgeLabels', '(', ')', ',', 'settings', '.', 'isAutoScaleEdgeType', '(', ')', ')', ';', '}']",Removes the current Vertex from the Graph. all the incoming and outgoing edges are automatically removed too.,"['Removes', 'the', 'current', 'Vertex', 'from', 'the', 'Graph', '.', 'all', 'the', 'incoming', 'and', 'outgoing', 'edges', 'are', 'automatically', 'removed', 'too', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientVertex.java#L472-L539,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/common/util/OCollections.java,OCollections.indexOf,"public static int indexOf(final int[] array, final int object) {
    for (int i = 0; i < array.length; ++i) {
      if (array[i] == object)
        // FOUND
        return i;
    }
    return -1;
  }",java,"public static int indexOf(final int[] array, final int object) {
    for (int i = 0; i < array.length; ++i) {
      if (array[i] == object)
        // FOUND
        return i;
    }
    return -1;
  }","['public', 'static', 'int', 'indexOf', '(', 'final', 'int', '[', ']', 'array', ',', 'final', 'int', 'object', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'array', '.', 'length', ';', '++', 'i', ')', '{', 'if', '(', 'array', '[', 'i', ']', '==', 'object', ')', '// FOUND', 'return', 'i', ';', '}', 'return', '-', '1', ';', '}']","This method is used to find a number in an array.

@param array  Array of integers in which value should be found.
@param object number to find.

@return Index of found item or <code>-1</code> otherwise.","['This', 'method', 'is', 'used', 'to', 'find', 'a', 'number', 'in', 'an', 'array', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/common/util/OCollections.java#L81-L88,test
boonproject/boon,boon/src/main/java/org/boon/primitive/Dbl.java,Dbl.reduceByR,"private  static <T> double reduceByR( final double[] array, T object ) {
        try {

            Method method = Invoker.invokeReducerLongIntReturnLongMethod(object);


            double sum = 0;
            for ( double v : array ) {
                sum = (double) method.invoke(object, sum, v);

            }
            return sum;

        } catch (Throwable throwable) {
            return handle(Long.class, throwable, ""Unable to perform reduceBy"");
        }

    }",java,"private  static <T> double reduceByR( final double[] array, T object ) {
        try {

            Method method = Invoker.invokeReducerLongIntReturnLongMethod(object);


            double sum = 0;
            for ( double v : array ) {
                sum = (double) method.invoke(object, sum, v);

            }
            return sum;

        } catch (Throwable throwable) {
            return handle(Long.class, throwable, ""Unable to perform reduceBy"");
        }

    }","['private', 'static', '<', 'T', '>', 'double', 'reduceByR', '(', 'final', 'double', '[', ']', 'array', ',', 'T', 'object', ')', '{', 'try', '{', 'Method', 'method', '=', 'Invoker', '.', 'invokeReducerLongIntReturnLongMethod', '(', 'object', ')', ';', 'double', 'sum', '=', '0', ';', 'for', '(', 'double', 'v', ':', 'array', ')', '{', 'sum', '=', '(', 'double', ')', 'method', '.', 'invoke', '(', 'object', ',', 'sum', ',', 'v', ')', ';', '}', 'return', 'sum', ';', '}', 'catch', '(', 'Throwable', 'throwable', ')', '{', 'return', 'handle', '(', 'Long', '.', 'class', ',', 'throwable', ',', '""Unable to perform reduceBy""', ')', ';', '}', '}']","Fallback to reflection if the call-site will not work or did not work
@param array array of items to reduce by
@param object function object
@param <T> type of function object.
@return","['Fallback', 'to', 'reflection', 'if', 'the', 'call', '-', 'site', 'will', 'not', 'work', 'or', 'did', 'not', 'work']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/primitive/Dbl.java#L584-L601,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/classic/sift/ContextBasedDiscriminator.java,ContextBasedDiscriminator.getDiscriminatingValue,"public String getDiscriminatingValue(ILoggingEvent event) {
    String contextName = event.getLoggerContextVO().getName();

    if (contextName == null) {
      return defaultValue;
    } else {
      return contextName;
    }
  }",java,"public String getDiscriminatingValue(ILoggingEvent event) {
    String contextName = event.getLoggerContextVO().getName();

    if (contextName == null) {
      return defaultValue;
    } else {
      return contextName;
    }
  }","['public', 'String', 'getDiscriminatingValue', '(', 'ILoggingEvent', 'event', ')', '{', 'String', 'contextName', '=', 'event', '.', 'getLoggerContextVO', '(', ')', '.', 'getName', '(', ')', ';', 'if', '(', 'contextName', '==', 'null', ')', '{', 'return', 'defaultValue', ';', '}', 'else', '{', 'return', 'contextName', ';', '}', '}']",Return the name of the current context name as found in the logging event.,"['Return', 'the', 'name', 'of', 'the', 'current', 'context', 'name', 'as', 'found', 'in', 'the', 'logging', 'event', '.']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/classic/sift/ContextBasedDiscriminator.java#L39-L47,test
Unidata/thredds,clcommon/src/main/java/ucar/nc2/iosp/gini/Giniheader.java,Giniheader.readScaledInt,"private double readScaledInt(ByteBuffer buf) {
    // Get the first two bytes
    short s1 = buf.getShort();

    // And the last one as unsigned
    short s2 = DataType.unsignedByteToShort(buf.get());

    // Get the sign bit, converting from 0 or 2 to +/- 1.
    int posneg = 1 - ((s1 & 0x8000) >> 14);

    // Combine the first two bytes (without sign bit) with the last byte.
    // Multiply by proper factor for +/-
    int nn = (((s1 & 0x7FFF) << 8) | s2) * posneg;
    return (double) nn / 10000.0;
  }",java,"private double readScaledInt(ByteBuffer buf) {
    // Get the first two bytes
    short s1 = buf.getShort();

    // And the last one as unsigned
    short s2 = DataType.unsignedByteToShort(buf.get());

    // Get the sign bit, converting from 0 or 2 to +/- 1.
    int posneg = 1 - ((s1 & 0x8000) >> 14);

    // Combine the first two bytes (without sign bit) with the last byte.
    // Multiply by proper factor for +/-
    int nn = (((s1 & 0x7FFF) << 8) | s2) * posneg;
    return (double) nn / 10000.0;
  }","['private', 'double', 'readScaledInt', '(', 'ByteBuffer', 'buf', ')', '{', '// Get the first two bytes', 'short', 's1', '=', 'buf', '.', 'getShort', '(', ')', ';', '// And the last one as unsigned', 'short', 's2', '=', 'DataType', '.', 'unsignedByteToShort', '(', 'buf', '.', 'get', '(', ')', ')', ';', '// Get the sign bit, converting from 0 or 2 to +/- 1.', 'int', 'posneg', '=', '1', '-', '(', '(', 's1', '&', '0x8000', ')', '>>', '14', ')', ';', '// Combine the first two bytes (without sign bit) with the last byte.', '// Multiply by proper factor for +/-', 'int', 'nn', '=', '(', '(', '(', 's1', '&', '0x7FFF', ')', '<<', '8', ')', '|', 's2', ')', '*', 'posneg', ';', 'return', '(', 'double', ')', 'nn', '/', '10000.0', ';', '}']","Read a scaled, 3-byte integer from file and convert to double","['Read', 'a', 'scaled', '3', '-', 'byte', 'integer', 'from', 'file', 'and', 'convert', 'to', 'double']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/clcommon/src/main/java/ucar/nc2/iosp/gini/Giniheader.java#L1139-L1153,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/utils/PlatformUtils.java,PlatformUtils.refreshRepositoryView,"public static void refreshRepositoryView() {
        IWorkbenchWindow activeWindow = Activator.getDefault().
                                            getWorkbench().getActiveWorkbenchWindow();
        // If there is no active workbench window, then there can be no Repository view
        if (activeWindow == null) {
            return;
        }
        // If there is no active workbench page, then there can be no Repository view
        IWorkbenchPage page = activeWindow.getActivePage();
        if (page == null) {
            return;
        }
        RepositoryView view = (RepositoryView)page.findView(IGuvnorConstants.REPVIEW_ID);
        if (view != null) {
            view.refresh();
        }
    }",java,"public static void refreshRepositoryView() {
        IWorkbenchWindow activeWindow = Activator.getDefault().
                                            getWorkbench().getActiveWorkbenchWindow();
        // If there is no active workbench window, then there can be no Repository view
        if (activeWindow == null) {
            return;
        }
        // If there is no active workbench page, then there can be no Repository view
        IWorkbenchPage page = activeWindow.getActivePage();
        if (page == null) {
            return;
        }
        RepositoryView view = (RepositoryView)page.findView(IGuvnorConstants.REPVIEW_ID);
        if (view != null) {
            view.refresh();
        }
    }","['public', 'static', 'void', 'refreshRepositoryView', '(', ')', '{', 'IWorkbenchWindow', 'activeWindow', '=', 'Activator', '.', 'getDefault', '(', ')', '.', 'getWorkbench', '(', ')', '.', 'getActiveWorkbenchWindow', '(', ')', ';', '// If there is no active workbench window, then there can be no Repository view', 'if', '(', 'activeWindow', '==', 'null', ')', '{', 'return', ';', '}', '// If there is no active workbench page, then there can be no Repository view', 'IWorkbenchPage', 'page', '=', 'activeWindow', '.', 'getActivePage', '(', ')', ';', 'if', '(', 'page', '==', 'null', ')', '{', 'return', ';', '}', 'RepositoryView', 'view', '=', '(', 'RepositoryView', ')', 'page', '.', 'findView', '(', 'IGuvnorConstants', '.', 'REPVIEW_ID', ')', ';', 'if', '(', 'view', '!=', 'null', ')', '{', 'view', '.', 'refresh', '(', ')', ';', '}', '}']","Causes the Repository view to refresh, if it is open.","['Causes', 'the', 'Repository', 'view', 'to', 'refresh', 'if', 'it', 'is', 'open', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/utils/PlatformUtils.java#L110-L126,test
Unidata/thredds,bufr/src/main/java/ucar/nc2/iosp/bufr/DataDescriptor.java,DataDescriptor.makeAssociatedField,"DataDescriptor makeAssociatedField(int bitWidth) {
    DataDescriptor assDD = new DataDescriptor();
    assDD.name = name + ""_associated_field"";
    assDD.units = """";
    assDD.refVal = 0;
    assDD.scale = 0;
    assDD.bitWidth = bitWidth;
    assDD.type = 0;

    assDD.f = 0;
    assDD.x = 31;
    assDD.y = 22;
    assDD.fxy =  (short) ((f << 14) + (x << 8) + (y));

    return assDD;
  }",java,"DataDescriptor makeAssociatedField(int bitWidth) {
    DataDescriptor assDD = new DataDescriptor();
    assDD.name = name + ""_associated_field"";
    assDD.units = """";
    assDD.refVal = 0;
    assDD.scale = 0;
    assDD.bitWidth = bitWidth;
    assDD.type = 0;

    assDD.f = 0;
    assDD.x = 31;
    assDD.y = 22;
    assDD.fxy =  (short) ((f << 14) + (x << 8) + (y));

    return assDD;
  }","['DataDescriptor', 'makeAssociatedField', '(', 'int', 'bitWidth', ')', '{', 'DataDescriptor', 'assDD', '=', 'new', 'DataDescriptor', '(', ')', ';', 'assDD', '.', 'name', '=', 'name', '+', '""_associated_field""', ';', 'assDD', '.', 'units', '=', '""""', ';', 'assDD', '.', 'refVal', '=', '0', ';', 'assDD', '.', 'scale', '=', '0', ';', 'assDD', '.', 'bitWidth', '=', 'bitWidth', ';', 'assDD', '.', 'type', '=', '0', ';', 'assDD', '.', 'f', '=', '0', ';', 'assDD', '.', 'x', '=', '31', ';', 'assDD', '.', 'y', '=', '22', ';', 'assDD', '.', 'fxy', '=', '(', 'short', ')', '(', '(', 'f', '<<', '14', ')', '+', '(', 'x', '<<', '8', ')', '+', '(', 'y', ')', ')', ';', 'return', 'assDD', ';', '}']",for associated fields,"['for', 'associated', 'fields']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/bufr/src/main/java/ucar/nc2/iosp/bufr/DataDescriptor.java#L111-L126,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java,FeatureTiles.simplifyPoints,"protected List<Point> simplifyPoints(double simplifyTolerance,
                                         List<Point> points) {

        List<Point> simplifiedPoints = null;
        if (simplifyGeometries) {

            // Reproject to web mercator if not in meters
            if (projection != null && !projection.isUnit(Units.METRES)) {
                ProjectionTransform toWebMercator = projection
                        .getTransformation(WEB_MERCATOR_PROJECTION);
                points = toWebMercator.transform(points);
            }

            // Simplify the points
            simplifiedPoints = GeometryUtils.simplifyPoints(points,
                    simplifyTolerance);

            // Reproject back to the original projection
            if (projection != null && !projection.isUnit(Units.METRES)) {
                ProjectionTransform fromWebMercator = WEB_MERCATOR_PROJECTION
                        .getTransformation(projection);
                simplifiedPoints = fromWebMercator.transform(simplifiedPoints);
            }
        } else {
            simplifiedPoints = points;
        }

        return simplifiedPoints;
    }",java,"protected List<Point> simplifyPoints(double simplifyTolerance,
                                         List<Point> points) {

        List<Point> simplifiedPoints = null;
        if (simplifyGeometries) {

            // Reproject to web mercator if not in meters
            if (projection != null && !projection.isUnit(Units.METRES)) {
                ProjectionTransform toWebMercator = projection
                        .getTransformation(WEB_MERCATOR_PROJECTION);
                points = toWebMercator.transform(points);
            }

            // Simplify the points
            simplifiedPoints = GeometryUtils.simplifyPoints(points,
                    simplifyTolerance);

            // Reproject back to the original projection
            if (projection != null && !projection.isUnit(Units.METRES)) {
                ProjectionTransform fromWebMercator = WEB_MERCATOR_PROJECTION
                        .getTransformation(projection);
                simplifiedPoints = fromWebMercator.transform(simplifiedPoints);
            }
        } else {
            simplifiedPoints = points;
        }

        return simplifiedPoints;
    }","['protected', 'List', '<', 'Point', '>', 'simplifyPoints', '(', 'double', 'simplifyTolerance', ',', 'List', '<', 'Point', '>', 'points', ')', '{', 'List', '<', 'Point', '>', 'simplifiedPoints', '=', 'null', ';', 'if', '(', 'simplifyGeometries', ')', '{', '// Reproject to web mercator if not in meters', 'if', '(', 'projection', '!=', 'null', '&&', '!', 'projection', '.', 'isUnit', '(', 'Units', '.', 'METRES', ')', ')', '{', 'ProjectionTransform', 'toWebMercator', '=', 'projection', '.', 'getTransformation', '(', 'WEB_MERCATOR_PROJECTION', ')', ';', 'points', '=', 'toWebMercator', '.', 'transform', '(', 'points', ')', ';', '}', '// Simplify the points', 'simplifiedPoints', '=', 'GeometryUtils', '.', 'simplifyPoints', '(', 'points', ',', 'simplifyTolerance', ')', ';', '// Reproject back to the original projection', 'if', '(', 'projection', '!=', 'null', '&&', '!', 'projection', '.', 'isUnit', '(', 'Units', '.', 'METRES', ')', ')', '{', 'ProjectionTransform', 'fromWebMercator', '=', 'WEB_MERCATOR_PROJECTION', '.', 'getTransformation', '(', 'projection', ')', ';', 'simplifiedPoints', '=', 'fromWebMercator', '.', 'transform', '(', 'simplifiedPoints', ')', ';', '}', '}', 'else', '{', 'simplifiedPoints', '=', 'points', ';', '}', 'return', 'simplifiedPoints', ';', '}']","When the simplify tolerance is set, simplify the points to a similar
curve with fewer points.

@param simplifyTolerance simplify tolerance in meters
@param points            ordered points
@return simplified points
@since 2.0.0","['When', 'the', 'simplify', 'tolerance', 'is', 'set', 'simplify', 'the', 'points', 'to', 'a', 'similar', 'curve', 'with', 'fewer', 'points', '.']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java#L1368-L1396,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft/FeatureDatasetFactoryManager.java,FeatureDatasetFactoryManager.open,"static public FeatureDataset open(FeatureType wantFeatureType, String location, ucar.nc2.util.CancelTask task, Formatter errlog) throws IOException {

    // special processing for thredds: datasets
    if (location.startsWith(DataFactory.SCHEME)) {
      DataFactory.Result result = new DataFactory().openFeatureDataset(wantFeatureType, location, task);
      errlog.format(""%s"", result.errLog);
      if (!featureTypeOk(wantFeatureType, result.featureType)) {
        errlog.format(""wanted %s but dataset is of type %s%n"", wantFeatureType, result.featureType);
        result.close();
        return null;
      }
      return result.featureDataset;

      // special processing for cdmrFeature: datasets
    } else if (location.startsWith(CdmrFeatureDataset.SCHEME)) {
      Optional<FeatureDataset> opt = CdmrFeatureDataset.factory(wantFeatureType, location);
      if (opt.isPresent()) return opt.get();
      errlog.format(""%s"", opt.getErrorMessage());
      return null;

      // special processing for collection: datasets
    } else if (location.startsWith(ucar.nc2.ft.point.collection.CompositeDatasetFactory.SCHEME)) {
      String spec = location.substring(CompositeDatasetFactory.SCHEME.length());
      MFileCollectionManager dcm = MFileCollectionManager.open(spec, spec, null, errlog); // LOOK we dont have a name
      return CompositeDatasetFactory.factory(location, wantFeatureType, dcm, errlog);
    }

    DatasetUrl durl = DatasetUrl.findDatasetUrl(location); // Cache ServiceType so we don't have to keep figuring it out
    if (durl.serviceType == null) { // skip GRIB check for anything not a plain ole file
      // check if its GRIB, may not have to go through NetcdfDataset
      Optional<FeatureDatasetCoverage> opt = CoverageDatasetFactory.openGrib(location);
      if (opt.isPresent()) { // its a GRIB file
        return opt.get();

      } else if (!opt.getErrorMessage().startsWith(CoverageDatasetFactory.NOT_GRIB_FILE) &&
              !opt.getErrorMessage().startsWith(CoverageDatasetFactory.NO_GRIB_CLASS)) {
        errlog.format(""%s%n"", opt.getErrorMessage()); // its a GRIB file with an error
        return null;
      }
    }

    // otherwise open as NetcdfDataset and run it through the FeatureDatasetFactories
    NetcdfDataset ncd = NetcdfDataset.acquireDataset(durl, true, task);
    FeatureDataset fd = wrap(wantFeatureType, ncd, task, errlog);
    if (fd == null)
      ncd.close();
    return fd;
  }",java,"static public FeatureDataset open(FeatureType wantFeatureType, String location, ucar.nc2.util.CancelTask task, Formatter errlog) throws IOException {

    // special processing for thredds: datasets
    if (location.startsWith(DataFactory.SCHEME)) {
      DataFactory.Result result = new DataFactory().openFeatureDataset(wantFeatureType, location, task);
      errlog.format(""%s"", result.errLog);
      if (!featureTypeOk(wantFeatureType, result.featureType)) {
        errlog.format(""wanted %s but dataset is of type %s%n"", wantFeatureType, result.featureType);
        result.close();
        return null;
      }
      return result.featureDataset;

      // special processing for cdmrFeature: datasets
    } else if (location.startsWith(CdmrFeatureDataset.SCHEME)) {
      Optional<FeatureDataset> opt = CdmrFeatureDataset.factory(wantFeatureType, location);
      if (opt.isPresent()) return opt.get();
      errlog.format(""%s"", opt.getErrorMessage());
      return null;

      // special processing for collection: datasets
    } else if (location.startsWith(ucar.nc2.ft.point.collection.CompositeDatasetFactory.SCHEME)) {
      String spec = location.substring(CompositeDatasetFactory.SCHEME.length());
      MFileCollectionManager dcm = MFileCollectionManager.open(spec, spec, null, errlog); // LOOK we dont have a name
      return CompositeDatasetFactory.factory(location, wantFeatureType, dcm, errlog);
    }

    DatasetUrl durl = DatasetUrl.findDatasetUrl(location); // Cache ServiceType so we don't have to keep figuring it out
    if (durl.serviceType == null) { // skip GRIB check for anything not a plain ole file
      // check if its GRIB, may not have to go through NetcdfDataset
      Optional<FeatureDatasetCoverage> opt = CoverageDatasetFactory.openGrib(location);
      if (opt.isPresent()) { // its a GRIB file
        return opt.get();

      } else if (!opt.getErrorMessage().startsWith(CoverageDatasetFactory.NOT_GRIB_FILE) &&
              !opt.getErrorMessage().startsWith(CoverageDatasetFactory.NO_GRIB_CLASS)) {
        errlog.format(""%s%n"", opt.getErrorMessage()); // its a GRIB file with an error
        return null;
      }
    }

    // otherwise open as NetcdfDataset and run it through the FeatureDatasetFactories
    NetcdfDataset ncd = NetcdfDataset.acquireDataset(durl, true, task);
    FeatureDataset fd = wrap(wantFeatureType, ncd, task, errlog);
    if (fd == null)
      ncd.close();
    return fd;
  }","['static', 'public', 'FeatureDataset', 'open', '(', 'FeatureType', 'wantFeatureType', ',', 'String', 'location', ',', 'ucar', '.', 'nc2', '.', 'util', '.', 'CancelTask', 'task', ',', 'Formatter', 'errlog', ')', 'throws', 'IOException', '{', '// special processing for thredds: datasets\r', 'if', '(', 'location', '.', 'startsWith', '(', 'DataFactory', '.', 'SCHEME', ')', ')', '{', 'DataFactory', '.', 'Result', 'result', '=', 'new', 'DataFactory', '(', ')', '.', 'openFeatureDataset', '(', 'wantFeatureType', ',', 'location', ',', 'task', ')', ';', 'errlog', '.', 'format', '(', '""%s""', ',', 'result', '.', 'errLog', ')', ';', 'if', '(', '!', 'featureTypeOk', '(', 'wantFeatureType', ',', 'result', '.', 'featureType', ')', ')', '{', 'errlog', '.', 'format', '(', '""wanted %s but dataset is of type %s%n""', ',', 'wantFeatureType', ',', 'result', '.', 'featureType', ')', ';', 'result', '.', 'close', '(', ')', ';', 'return', 'null', ';', '}', 'return', 'result', '.', 'featureDataset', ';', '// special processing for cdmrFeature: datasets\r', '}', 'else', 'if', '(', 'location', '.', 'startsWith', '(', 'CdmrFeatureDataset', '.', 'SCHEME', ')', ')', '{', 'Optional', '<', 'FeatureDataset', '>', 'opt', '=', 'CdmrFeatureDataset', '.', 'factory', '(', 'wantFeatureType', ',', 'location', ')', ';', 'if', '(', 'opt', '.', 'isPresent', '(', ')', ')', 'return', 'opt', '.', 'get', '(', ')', ';', 'errlog', '.', 'format', '(', '""%s""', ',', 'opt', '.', 'getErrorMessage', '(', ')', ')', ';', 'return', 'null', ';', '// special processing for collection: datasets\r', '}', 'else', 'if', '(', 'location', '.', 'startsWith', '(', 'ucar', '.', 'nc2', '.', 'ft', '.', 'point', '.', 'collection', '.', 'CompositeDatasetFactory', '.', 'SCHEME', ')', ')', '{', 'String', 'spec', '=', 'location', '.', 'substring', '(', 'CompositeDatasetFactory', '.', 'SCHEME', '.', 'length', '(', ')', ')', ';', 'MFileCollectionManager', 'dcm', '=', 'MFileCollectionManager', '.', 'open', '(', 'spec', ',', 'spec', ',', 'null', ',', 'errlog', ')', ';', '// LOOK we dont have a name\r', 'return', 'CompositeDatasetFactory', '.', 'factory', '(', 'location', ',', 'wantFeatureType', ',', 'dcm', ',', 'errlog', ')', ';', '}', 'DatasetUrl', 'durl', '=', 'DatasetUrl', '.', 'findDatasetUrl', '(', 'location', ')', ';', ""// Cache ServiceType so we don't have to keep figuring it out\r"", 'if', '(', 'durl', '.', 'serviceType', '==', 'null', ')', '{', '// skip GRIB check for anything not a plain ole file\r', '// check if its GRIB, may not have to go through NetcdfDataset\r', 'Optional', '<', 'FeatureDatasetCoverage', '>', 'opt', '=', 'CoverageDatasetFactory', '.', 'openGrib', '(', 'location', ')', ';', 'if', '(', 'opt', '.', 'isPresent', '(', ')', ')', '{', '// its a GRIB file\r', 'return', 'opt', '.', 'get', '(', ')', ';', '}', 'else', 'if', '(', '!', 'opt', '.', 'getErrorMessage', '(', ')', '.', 'startsWith', '(', 'CoverageDatasetFactory', '.', 'NOT_GRIB_FILE', ')', '&&', '!', 'opt', '.', 'getErrorMessage', '(', ')', '.', 'startsWith', '(', 'CoverageDatasetFactory', '.', 'NO_GRIB_CLASS', ')', ')', '{', 'errlog', '.', 'format', '(', '""%s%n""', ',', 'opt', '.', 'getErrorMessage', '(', ')', ')', ';', '// its a GRIB file with an error\r', 'return', 'null', ';', '}', '}', '// otherwise open as NetcdfDataset and run it through the FeatureDatasetFactories\r', 'NetcdfDataset', 'ncd', '=', 'NetcdfDataset', '.', 'acquireDataset', '(', 'durl', ',', 'true', ',', 'task', ')', ';', 'FeatureDataset', 'fd', '=', 'wrap', '(', 'wantFeatureType', ',', 'ncd', ',', 'task', ',', 'errlog', ')', ';', 'if', '(', 'fd', '==', 'null', ')', 'ncd', '.', 'close', '(', ')', ';', 'return', 'fd', ';', '}']","Open a dataset as a FeatureDataset.

@param wantFeatureType open this kind of FeatureDataset; may be null, which means search all factories.
If datatype is not null, only return correct FeatureDataset (eg PointFeatureDataset for DataType.POINT).
@param location        URL or file location of the dataset. This may be a
<ol>
<li>thredds catalog#dataset (with a thredds: prefix)
<li>cdmrFeature dataset (with a cdmrFeature: prefix)
<li>cdmremote dataset (with a cdmremote: prefix)
<li>collection dataset (with a collection: prefix)
<li>file location for a CDM dataset opened with NetcdfDataset.acquireDataset()
</ol>
@param task            user may cancel
@param errlog          place errors here, may not be null
@return a subclass of FeatureDataset, or null if no suitable factory was found, message in errlog
@throws java.io.IOException on io error","['Open', 'a', 'dataset', 'as', 'a', 'FeatureDataset', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/FeatureDatasetFactoryManager.java#L221-L268,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/ClassGeneratorUtils.java,ClassGeneratorUtils.addMemberValuesToAnnotation,"private static void addMemberValuesToAnnotation(Annotation annotation, ConstPool cp, LinkedHashMap<String, Object> memberValues)
  {
    // Get the member value object
    for(String mvName : memberValues.keySet())
    {
      Object mvValue = memberValues.get(mvName);
      MemberValue mv = getMemberValue(mvValue, cp);
      annotation.addMemberValue( mvName, mv );
    }
  }",java,"private static void addMemberValuesToAnnotation(Annotation annotation, ConstPool cp, LinkedHashMap<String, Object> memberValues)
  {
    // Get the member value object
    for(String mvName : memberValues.keySet())
    {
      Object mvValue = memberValues.get(mvName);
      MemberValue mv = getMemberValue(mvValue, cp);
      annotation.addMemberValue( mvName, mv );
    }
  }","['private', 'static', 'void', 'addMemberValuesToAnnotation', '(', 'Annotation', 'annotation', ',', 'ConstPool', 'cp', ',', 'LinkedHashMap', '<', 'String', ',', 'Object', '>', 'memberValues', ')', '{', '// Get the member value object', 'for', '(', 'String', 'mvName', ':', 'memberValues', '.', 'keySet', '(', ')', ')', '{', 'Object', 'mvValue', '=', 'memberValues', '.', 'get', '(', 'mvName', ')', ';', 'MemberValue', 'mv', '=', 'getMemberValue', '(', 'mvValue', ',', 'cp', ')', ';', 'annotation', '.', 'addMemberValue', '(', 'mvName', ',', 'mv', ')', ';', '}', '}']","Private method to add member values to annotation

@param annotation
@param cp
@param memberValues","['Private', 'method', 'to', 'add', 'member', 'values', 'to', 'annotation']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/ClassGeneratorUtils.java#L712-L721,test
streamsets/datacollector,hdfs-protolib/src/main/java/com/streamsets/pipeline/stage/destination/hdfs/writer/RecordWriterManager.java,RecordWriterManager.getDirPath,"String getDirPath(Date date, Record record) throws StageException {
    if(dirPathTemplateInHeader) {
      // We're not validating if the header exists as that job is already done
      return record.getHeader().getAttribute(HdfsTarget.TARGET_DIRECTORY_HEADER);
    }
    return pathResolver.resolvePath(date, record);
  }",java,"String getDirPath(Date date, Record record) throws StageException {
    if(dirPathTemplateInHeader) {
      // We're not validating if the header exists as that job is already done
      return record.getHeader().getAttribute(HdfsTarget.TARGET_DIRECTORY_HEADER);
    }
    return pathResolver.resolvePath(date, record);
  }","['String', 'getDirPath', '(', 'Date', 'date', ',', 'Record', 'record', ')', 'throws', 'StageException', '{', 'if', '(', 'dirPathTemplateInHeader', ')', '{', ""// We're not validating if the header exists as that job is already done"", 'return', 'record', '.', 'getHeader', '(', ')', '.', 'getAttribute', '(', 'HdfsTarget', '.', 'TARGET_DIRECTORY_HEADER', ')', ';', '}', 'return', 'pathResolver', '.', 'resolvePath', '(', 'date', ',', 'record', ')', ';', '}']",Returns directory path for given record and date.,"['Returns', 'directory', 'path', 'for', 'given', 'record', 'and', 'date', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/hdfs-protolib/src/main/java/com/streamsets/pipeline/stage/destination/hdfs/writer/RecordWriterManager.java#L162-L168,test
orientechnologies/orientdb,server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java,ODistributedConfiguration.getServers,"public Set<String> getServers(Collection<String> iClusterNames) {
    if (iClusterNames == null || iClusterNames.isEmpty())
      return getAllConfiguredServers();

    final Set<String> partitions = new HashSet<String>(iClusterNames.size());
    for (String p : iClusterNames) {
      final List<String> serverList = getClusterConfiguration(p).field(SERVERS);
      if (serverList != null) {
        for (String s : serverList)
          if (!s.equals(NEW_NODE_TAG))
            partitions.add(s);
      }
    }
    return partitions;
  }",java,"public Set<String> getServers(Collection<String> iClusterNames) {
    if (iClusterNames == null || iClusterNames.isEmpty())
      return getAllConfiguredServers();

    final Set<String> partitions = new HashSet<String>(iClusterNames.size());
    for (String p : iClusterNames) {
      final List<String> serverList = getClusterConfiguration(p).field(SERVERS);
      if (serverList != null) {
        for (String s : serverList)
          if (!s.equals(NEW_NODE_TAG))
            partitions.add(s);
      }
    }
    return partitions;
  }","['public', 'Set', '<', 'String', '>', 'getServers', '(', 'Collection', '<', 'String', '>', 'iClusterNames', ')', '{', 'if', '(', 'iClusterNames', '==', 'null', '||', 'iClusterNames', '.', 'isEmpty', '(', ')', ')', 'return', 'getAllConfiguredServers', '(', ')', ';', 'final', 'Set', '<', 'String', '>', 'partitions', '=', 'new', 'HashSet', '<', 'String', '>', '(', 'iClusterNames', '.', 'size', '(', ')', ')', ';', 'for', '(', 'String', 'p', ':', 'iClusterNames', ')', '{', 'final', 'List', '<', 'String', '>', 'serverList', '=', 'getClusterConfiguration', '(', 'p', ')', '.', 'field', '(', 'SERVERS', ')', ';', 'if', '(', 'serverList', '!=', 'null', ')', '{', 'for', '(', 'String', 's', ':', 'serverList', ')', 'if', '(', '!', 's', '.', 'equals', '(', 'NEW_NODE_TAG', ')', ')', 'partitions', '.', 'add', '(', 's', ')', ';', '}', '}', 'return', 'partitions', ';', '}']","Returns the set of server names involved on the passed cluster collection.

@param iClusterNames Collection of cluster names to find","['Returns', 'the', 'set', 'of', 'server', 'names', 'involved', 'on', 'the', 'passed', 'cluster', 'collection', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedConfiguration.java#L288-L302,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java,ClassVisitor.visitInnerClass,"public void visitInnerClass(
      final String name, final String outerName, final String innerName, final int access) {
    if (cv != null) {
      cv.visitInnerClass(name, outerName, innerName, access);
    }
  }",java,"public void visitInnerClass(
      final String name, final String outerName, final String innerName, final int access) {
    if (cv != null) {
      cv.visitInnerClass(name, outerName, innerName, access);
    }
  }","['public', 'void', 'visitInnerClass', '(', 'final', 'String', 'name', ',', 'final', 'String', 'outerName', ',', 'final', 'String', 'innerName', ',', 'final', 'int', 'access', ')', '{', 'if', '(', 'cv', '!=', 'null', ')', '{', 'cv', '.', 'visitInnerClass', '(', 'name', ',', 'outerName', ',', 'innerName', ',', 'access', ')', ';', '}', '}']","Visits information about an inner class. This inner class is not necessarily a member of the
class being visited.

@param name the internal name of an inner class (see {@link Type#getInternalName()}).
@param outerName the internal name of the class to which the inner class belongs (see {@link
Type#getInternalName()}). May be {@literal null} for not member classes.
@param innerName the (simple) name of the inner class inside its enclosing class. May be
{@literal null} for anonymous inner classes.
@param access the access flags of the inner class as originally declared in the enclosing
class.","['Visits', 'information', 'about', 'an', 'inner', 'class', '.', 'This', 'inner', 'class', 'is', 'not', 'necessarily', 'a', 'member', 'of', 'the', 'class', 'being', 'visited', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java#L255-L260,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/gempak/GempakGridReader.java,GempakGridReader.unpackData,"private synchronized float[] unpackData(int iiword, int nword,
                                          int ipktyp, int kxky, int nbits,
                                          float ref, float scale,
                                          boolean miss, float difmin,
                                          int kx, int decimalScale)
          throws IOException {
    if (ipktyp == MDGGRB) {
      if (!useDP) {
        return unpackGrib1Data(iiword, nword, kxky, nbits, ref,
                scale, miss, decimalScale);
      } else {
        if (nword * 32 < kxky * nbits) { // to account for badly written files
          nword++;
        }
        int[] ksgrid = new int[nword];
        DM_RINT(iiword, ksgrid);
        return DP_UGRB(ksgrid, kxky, nbits, ref, scale, miss,
                decimalScale);
      }
    } else if (ipktyp == MDGNMC) {
      return null;
    } else if (ipktyp == MDGDIF) {
      return null;
    }
    return null;
  }",java,"private synchronized float[] unpackData(int iiword, int nword,
                                          int ipktyp, int kxky, int nbits,
                                          float ref, float scale,
                                          boolean miss, float difmin,
                                          int kx, int decimalScale)
          throws IOException {
    if (ipktyp == MDGGRB) {
      if (!useDP) {
        return unpackGrib1Data(iiword, nword, kxky, nbits, ref,
                scale, miss, decimalScale);
      } else {
        if (nword * 32 < kxky * nbits) { // to account for badly written files
          nword++;
        }
        int[] ksgrid = new int[nword];
        DM_RINT(iiword, ksgrid);
        return DP_UGRB(ksgrid, kxky, nbits, ref, scale, miss,
                decimalScale);
      }
    } else if (ipktyp == MDGNMC) {
      return null;
    } else if (ipktyp == MDGDIF) {
      return null;
    }
    return null;
  }","['private', 'synchronized', 'float', '[', ']', 'unpackData', '(', 'int', 'iiword', ',', 'int', 'nword', ',', 'int', 'ipktyp', ',', 'int', 'kxky', ',', 'int', 'nbits', ',', 'float', 'ref', ',', 'float', 'scale', ',', 'boolean', 'miss', ',', 'float', 'difmin', ',', 'int', 'kx', ',', 'int', 'decimalScale', ')', 'throws', 'IOException', '{', 'if', '(', 'ipktyp', '==', 'MDGGRB', ')', '{', 'if', '(', '!', 'useDP', ')', '{', 'return', 'unpackGrib1Data', '(', 'iiword', ',', 'nword', ',', 'kxky', ',', 'nbits', ',', 'ref', ',', 'scale', ',', 'miss', ',', 'decimalScale', ')', ';', '}', 'else', '{', 'if', '(', 'nword', '*', '32', '<', 'kxky', '*', 'nbits', ')', '{', '// to account for badly written files', 'nword', '++', ';', '}', 'int', '[', ']', 'ksgrid', '=', 'new', 'int', '[', 'nword', ']', ';', 'DM_RINT', '(', 'iiword', ',', 'ksgrid', ')', ';', 'return', 'DP_UGRB', '(', 'ksgrid', ',', 'kxky', ',', 'nbits', ',', 'ref', ',', 'scale', ',', 'miss', ',', 'decimalScale', ')', ';', '}', '}', 'else', 'if', '(', 'ipktyp', '==', 'MDGNMC', ')', '{', 'return', 'null', ';', '}', 'else', 'if', '(', 'ipktyp', '==', 'MDGDIF', ')', '{', 'return', 'null', ';', '}', 'return', 'null', ';', '}']","Read packed data

@param iiword       Starting word  (FORTRAN 1 based)
@param nword        Number of words
@param ipktyp       Packing type
@param kxky         Number of grid points
@param nbits        Number of bits
@param ref          Reference minimum value of grid
@param scale        Scaling factor
@param miss         Missing data flag
@param difmin       Minimum value of differences
@param kx           Number of points in x direction
@param decimalScale scale of the values for the units
@return unpacked data
@throws IOException problem reading file","['Read', 'packed', 'data']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/GempakGridReader.java#L469-L494,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/crawl/CatalogCrawler.java,CatalogCrawler.crawlDirectDatasets,"public void crawlDirectDatasets(InvDataset ds, CancelTask task, PrintWriter out, Object context, boolean release) {
    boolean isCatRef = (ds instanceof InvCatalogRef);
    if (filter != null && filter.skipAll(ds)) {
      if (isCatRef && release) ((InvCatalogRef) ds).release();
      return;
    }

    if (isCatRef) {
      InvCatalogRef catref = (InvCatalogRef) ds;
      if (out != null)
        out.println("" **CATREF "" + catref.getURI() + "" ("" + ds.getName() + "") "");
      countCatrefs++;
      
      if (!listen.getCatalogRef( catref, context)) {
        if (release) catref.release();
        return;
      }
    }

    // get datasets with data access (""leaves"")
    List<InvDataset> dlist = ds.getDatasets();
    List<InvDataset> leaves = new ArrayList<InvDataset>();
    for (InvDataset dds : dlist) {
      if (dds.hasAccess())
        leaves.add(dds);
    }

    if (leaves.size() > 0) {
      if (type == Type.first_direct) {
        InvDataset dds = leaves.get(0);
        listen.getDataset(dds, context);

      } else if (type == Type.random_direct) {
        listen.getDataset(chooseRandom(leaves), context);

      } else if (type == Type.random_direct_middle) {
        listen.getDataset(chooseRandomNotFirstOrLast(leaves), context);

      } else { // do all of them
        for (InvDataset dds : leaves) {
          listen.getDataset(dds, context);
          if ((task != null) && task.isCancel()) break;
        }
      }
    }

    // recurse
      for (InvDataset dds : dlist) {
        if (dds.hasNestedDatasets())
          crawlDirectDatasets(dds, task, out, context, release);
        if ((task != null) && task.isCancel())
          break;
      }

    /* if (out != null) {
     int took = (int) (System.currentTimeMillis() - start);
     out.println("" ** "" + ds.getName() + "" took "" + took + "" msecs\n"");
   } */

    if (ds instanceof InvCatalogRef && release) {
      InvCatalogRef catref = (InvCatalogRef) ds;
      catref.release();
    }

  }",java,"public void crawlDirectDatasets(InvDataset ds, CancelTask task, PrintWriter out, Object context, boolean release) {
    boolean isCatRef = (ds instanceof InvCatalogRef);
    if (filter != null && filter.skipAll(ds)) {
      if (isCatRef && release) ((InvCatalogRef) ds).release();
      return;
    }

    if (isCatRef) {
      InvCatalogRef catref = (InvCatalogRef) ds;
      if (out != null)
        out.println("" **CATREF "" + catref.getURI() + "" ("" + ds.getName() + "") "");
      countCatrefs++;
      
      if (!listen.getCatalogRef( catref, context)) {
        if (release) catref.release();
        return;
      }
    }

    // get datasets with data access (""leaves"")
    List<InvDataset> dlist = ds.getDatasets();
    List<InvDataset> leaves = new ArrayList<InvDataset>();
    for (InvDataset dds : dlist) {
      if (dds.hasAccess())
        leaves.add(dds);
    }

    if (leaves.size() > 0) {
      if (type == Type.first_direct) {
        InvDataset dds = leaves.get(0);
        listen.getDataset(dds, context);

      } else if (type == Type.random_direct) {
        listen.getDataset(chooseRandom(leaves), context);

      } else if (type == Type.random_direct_middle) {
        listen.getDataset(chooseRandomNotFirstOrLast(leaves), context);

      } else { // do all of them
        for (InvDataset dds : leaves) {
          listen.getDataset(dds, context);
          if ((task != null) && task.isCancel()) break;
        }
      }
    }

    // recurse
      for (InvDataset dds : dlist) {
        if (dds.hasNestedDatasets())
          crawlDirectDatasets(dds, task, out, context, release);
        if ((task != null) && task.isCancel())
          break;
      }

    /* if (out != null) {
     int took = (int) (System.currentTimeMillis() - start);
     out.println("" ** "" + ds.getName() + "" took "" + took + "" msecs\n"");
   } */

    if (ds instanceof InvCatalogRef && release) {
      InvCatalogRef catref = (InvCatalogRef) ds;
      catref.release();
    }

  }","['public', 'void', 'crawlDirectDatasets', '(', 'InvDataset', 'ds', ',', 'CancelTask', 'task', ',', 'PrintWriter', 'out', ',', 'Object', 'context', ',', 'boolean', 'release', ')', '{', 'boolean', 'isCatRef', '=', '(', 'ds', 'instanceof', 'InvCatalogRef', ')', ';', 'if', '(', 'filter', '!=', 'null', '&&', 'filter', '.', 'skipAll', '(', 'ds', ')', ')', '{', 'if', '(', 'isCatRef', '&&', 'release', ')', '(', '(', 'InvCatalogRef', ')', 'ds', ')', '.', 'release', '(', ')', ';', 'return', ';', '}', 'if', '(', 'isCatRef', ')', '{', 'InvCatalogRef', 'catref', '=', '(', 'InvCatalogRef', ')', 'ds', ';', 'if', '(', 'out', '!=', 'null', ')', 'out', '.', 'println', '(', '"" **CATREF ""', '+', 'catref', '.', 'getURI', '(', ')', '+', '"" (""', '+', 'ds', '.', 'getName', '(', ')', '+', '"") ""', ')', ';', 'countCatrefs', '++', ';', 'if', '(', '!', 'listen', '.', 'getCatalogRef', '(', 'catref', ',', 'context', ')', ')', '{', 'if', '(', 'release', ')', 'catref', '.', 'release', '(', ')', ';', 'return', ';', '}', '}', '// get datasets with data access (""leaves"")', 'List', '<', 'InvDataset', '>', 'dlist', '=', 'ds', '.', 'getDatasets', '(', ')', ';', 'List', '<', 'InvDataset', '>', 'leaves', '=', 'new', 'ArrayList', '<', 'InvDataset', '>', '(', ')', ';', 'for', '(', 'InvDataset', 'dds', ':', 'dlist', ')', '{', 'if', '(', 'dds', '.', 'hasAccess', '(', ')', ')', 'leaves', '.', 'add', '(', 'dds', ')', ';', '}', 'if', '(', 'leaves', '.', 'size', '(', ')', '>', '0', ')', '{', 'if', '(', 'type', '==', 'Type', '.', 'first_direct', ')', '{', 'InvDataset', 'dds', '=', 'leaves', '.', 'get', '(', '0', ')', ';', 'listen', '.', 'getDataset', '(', 'dds', ',', 'context', ')', ';', '}', 'else', 'if', '(', 'type', '==', 'Type', '.', 'random_direct', ')', '{', 'listen', '.', 'getDataset', '(', 'chooseRandom', '(', 'leaves', ')', ',', 'context', ')', ';', '}', 'else', 'if', '(', 'type', '==', 'Type', '.', 'random_direct_middle', ')', '{', 'listen', '.', 'getDataset', '(', 'chooseRandomNotFirstOrLast', '(', 'leaves', ')', ',', 'context', ')', ';', '}', 'else', '{', '// do all of them', 'for', '(', 'InvDataset', 'dds', ':', 'leaves', ')', '{', 'listen', '.', 'getDataset', '(', 'dds', ',', 'context', ')', ';', 'if', '(', '(', 'task', '!=', 'null', ')', '&&', 'task', '.', 'isCancel', '(', ')', ')', 'break', ';', '}', '}', '}', '// recurse', 'for', '(', 'InvDataset', 'dds', ':', 'dlist', ')', '{', 'if', '(', 'dds', '.', 'hasNestedDatasets', '(', ')', ')', 'crawlDirectDatasets', '(', 'dds', ',', 'task', ',', 'out', ',', 'context', ',', 'release', ')', ';', 'if', '(', '(', 'task', '!=', 'null', ')', '&&', 'task', '.', 'isCancel', '(', ')', ')', 'break', ';', '}', '/* if (out != null) {\n     int took = (int) (System.currentTimeMillis() - start);\n     out.println("" ** "" + ds.getName() + "" took "" + took + "" msecs\\n"");\n   } */', 'if', '(', 'ds', 'instanceof', 'InvCatalogRef', '&&', 'release', ')', '{', 'InvCatalogRef', 'catref', '=', '(', 'InvCatalogRef', ')', 'ds', ';', 'catref', '.', 'release', '(', ')', ';', '}', '}']","Crawl this dataset recursively. Only send back direct datasets

@param ds   the dataset
@param task user can cancel the task (may be null)
@param out  send status messages to here (may be null)
@param context caller can pass this object in (used for thread safety)","['Crawl', 'this', 'dataset', 'recursively', '.', 'Only', 'send', 'back', 'direct', 'datasets']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/crawl/CatalogCrawler.java#L206-L270,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dataset/CoordinateSystem.java,CoordinateSystem.isSubset,"public static boolean isSubset(Collection<Dimension> subset, Collection<Dimension> set) {
    for (Dimension d : subset) {
      if (!(set.contains(d)))
        return false;
    }
    return true;
  }",java,"public static boolean isSubset(Collection<Dimension> subset, Collection<Dimension> set) {
    for (Dimension d : subset) {
      if (!(set.contains(d)))
        return false;
    }
    return true;
  }","['public', 'static', 'boolean', 'isSubset', '(', 'Collection', '<', 'Dimension', '>', 'subset', ',', 'Collection', '<', 'Dimension', '>', 'set', ')', '{', 'for', '(', 'Dimension', 'd', ':', 'subset', ')', '{', 'if', '(', '!', '(', 'set', '.', 'contains', '(', 'd', ')', ')', ')', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","Test if all the Dimensions in subset are in set
@param subset is this a subset
@param set of this?
@return true if all the Dimensions in subset are in set","['Test', 'if', 'all', 'the', 'Dimensions', 'in', 'subset', 'are', 'in', 'set']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/CoordinateSystem.java#L388-L394,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/ReflectionUtils.java,ReflectionUtils.classExistsAndIsLoadable,"public static boolean classExistsAndIsLoadable(String className)
    {
        try
        {
            Class.forName(className);

            return true;
        }
        catch (ClassNotFoundException e)
        {
            // Exception noted and ignored.
            e = null;

            return false;
        }
    }",java,"public static boolean classExistsAndIsLoadable(String className)
    {
        try
        {
            Class.forName(className);

            return true;
        }
        catch (ClassNotFoundException e)
        {
            // Exception noted and ignored.
            e = null;

            return false;
        }
    }","['public', 'static', 'boolean', 'classExistsAndIsLoadable', '(', 'String', 'className', ')', '{', 'try', '{', 'Class', '.', 'forName', '(', 'className', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', '// Exception noted and ignored.', 'e', '=', 'null', ';', 'return', 'false', ';', '}', '}']","Checks if the named class exists and is loadable.

@param  className The class to check for.

@return <tt>true</tt> if the named class exists and is loadable.","['Checks', 'if', 'the', 'named', 'class', 'exists', 'and', 'is', 'loadable', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/ReflectionUtils.java#L51-L66,test
Jasig/NotificationPortlet,notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/service/ssp/SSPTaskNotificationService.java,SSPTaskNotificationService.notificationError,"private NotificationResponse notificationError(String errorMsg) {
        NotificationError error = new NotificationError();
        error.setError(errorMsg);
        error.setSource(getClass().getSimpleName());

        NotificationResponse notification = new NotificationResponse();
        notification.setErrors(Arrays.asList(error));
        return notification;
    }",java,"private NotificationResponse notificationError(String errorMsg) {
        NotificationError error = new NotificationError();
        error.setError(errorMsg);
        error.setSource(getClass().getSimpleName());

        NotificationResponse notification = new NotificationResponse();
        notification.setErrors(Arrays.asList(error));
        return notification;
    }","['private', 'NotificationResponse', 'notificationError', '(', 'String', 'errorMsg', ')', '{', 'NotificationError', 'error', '=', 'new', 'NotificationError', '(', ')', ';', 'error', '.', 'setError', '(', 'errorMsg', ')', ';', 'error', '.', 'setSource', '(', 'getClass', '(', ')', '.', 'getSimpleName', '(', ')', ')', ';', 'NotificationResponse', 'notification', '=', 'new', 'NotificationResponse', '(', ')', ';', 'notification', '.', 'setErrors', '(', 'Arrays', '.', 'asList', '(', 'error', ')', ')', ';', 'return', 'notification', ';', '}']","Error handler.

@param errorMsg The error message
@return a notification response with the error message","['Error', 'handler', '.']",a74b87c145b66166a2cb6849d17ce9b0f2c98f3b,https://github.com/Jasig/NotificationPortlet/blob/a74b87c145b66166a2cb6849d17ce9b0f2c98f3b/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/service/ssp/SSPTaskNotificationService.java#L147-L155,test
OpenEstate/OpenEstate-IO,ImmobiliareIT/src/main/jaxb/org/openestate/io/immobiliare_it/xml/Terrains.java,Terrains.getTerrain,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:48:12+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<TerrainType> getTerrain() {
        if (terrain == null) {
            terrain = new ArrayList<TerrainType>();
        }
        return this.terrain;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:48:12+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<TerrainType> getTerrain() {
        if (terrain == null) {
            terrain = new ArrayList<TerrainType>();
        }
        return this.terrain;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:48:12+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'List', '<', 'TerrainType', '>', 'getTerrain', '(', ')', '{', 'if', '(', 'terrain', '==', 'null', ')', '{', 'terrain', '=', 'new', 'ArrayList', '<', 'TerrainType', '>', '(', ')', ';', '}', 'return', 'this', '.', 'terrain', ';', '}']","Gets the value of the terrain property.

<p>
This accessor method returns a reference to the live list,
not a snapshot. Therefore any modification you make to the
returned list will be present inside the JAXB object.
This is why there is not a <CODE>set</CODE> method for the terrain property.

<p>
For example, to add a new item, do as follows:
<pre>
getTerrain().add(newItem);
</pre>


<p>
Objects of the following type(s) are allowed in the list
{@link TerrainType }","['Gets', 'the', 'value', 'of', 'the', 'terrain', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/ImmobiliareIT/src/main/jaxb/org/openestate/io/immobiliare_it/xml/Terrains.java#L80-L86,test
ReactiveX/RxJava,src/main/java/io/reactivex/internal/util/ExceptionHelper.java,ExceptionHelper.flatten,"public static List<Throwable> flatten(Throwable t) {
        List<Throwable> list = new ArrayList<Throwable>();
        ArrayDeque<Throwable> deque = new ArrayDeque<Throwable>();
        deque.offer(t);

        while (!deque.isEmpty()) {
            Throwable e = deque.removeFirst();
            if (e instanceof CompositeException) {
                CompositeException ce = (CompositeException) e;
                List<Throwable> exceptions = ce.getExceptions();
                for (int i = exceptions.size() - 1; i >= 0; i--) {
                    deque.offerFirst(exceptions.get(i));
                }
            } else {
                list.add(e);
            }
        }

        return list;
    }",java,"public static List<Throwable> flatten(Throwable t) {
        List<Throwable> list = new ArrayList<Throwable>();
        ArrayDeque<Throwable> deque = new ArrayDeque<Throwable>();
        deque.offer(t);

        while (!deque.isEmpty()) {
            Throwable e = deque.removeFirst();
            if (e instanceof CompositeException) {
                CompositeException ce = (CompositeException) e;
                List<Throwable> exceptions = ce.getExceptions();
                for (int i = exceptions.size() - 1; i >= 0; i--) {
                    deque.offerFirst(exceptions.get(i));
                }
            } else {
                list.add(e);
            }
        }

        return list;
    }","['public', 'static', 'List', '<', 'Throwable', '>', 'flatten', '(', 'Throwable', 't', ')', '{', 'List', '<', 'Throwable', '>', 'list', '=', 'new', 'ArrayList', '<', 'Throwable', '>', '(', ')', ';', 'ArrayDeque', '<', 'Throwable', '>', 'deque', '=', 'new', 'ArrayDeque', '<', 'Throwable', '>', '(', ')', ';', 'deque', '.', 'offer', '(', 't', ')', ';', 'while', '(', '!', 'deque', '.', 'isEmpty', '(', ')', ')', '{', 'Throwable', 'e', '=', 'deque', '.', 'removeFirst', '(', ')', ';', 'if', '(', 'e', 'instanceof', 'CompositeException', ')', '{', 'CompositeException', 'ce', '=', '(', 'CompositeException', ')', 'e', ';', 'List', '<', 'Throwable', '>', 'exceptions', '=', 'ce', '.', 'getExceptions', '(', ')', ';', 'for', '(', 'int', 'i', '=', 'exceptions', '.', 'size', '(', ')', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'deque', '.', 'offerFirst', '(', 'exceptions', '.', 'get', '(', 'i', ')', ')', ';', '}', '}', 'else', '{', 'list', '.', 'add', '(', 'e', ')', ';', '}', '}', 'return', 'list', ';', '}']","Returns a flattened list of Throwables from tree-like CompositeException chain.
@param t the starting throwable
@return the list of Throwables flattened in a depth-first manner","['Returns', 'a', 'flattened', 'list', 'of', 'Throwables', 'from', 'tree', '-', 'like', 'CompositeException', 'chain', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/util/ExceptionHelper.java#L89-L108,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/util/rc/RC.java,RC.find,"static synchronized public String
  find(String key, String url) {
    if (key == null) return null;
    if (!initialized) RC.initialize();
    Triple t = dfaltRC.lookup(key, url);
    return (t == null ? null : t.value);
  }",java,"static synchronized public String
  find(String key, String url) {
    if (key == null) return null;
    if (!initialized) RC.initialize();
    Triple t = dfaltRC.lookup(key, url);
    return (t == null ? null : t.value);
  }","['static', 'synchronized', 'public', 'String', 'find', '(', 'String', 'key', ',', 'String', 'url', ')', '{', 'if', '(', 'key', '==', 'null', ')', 'return', 'null', ';', 'if', '(', '!', 'initialized', ')', 'RC', '.', 'initialize', '(', ')', ';', 'Triple', 't', '=', 'dfaltRC', '.', 'lookup', '(', 'key', ',', 'url', ')', ';', 'return', '(', 't', '==', 'null', '?', 'null', ':', 't', '.', 'value', ')', ';', '}']","Allow users to search the default rc

@param key
@param url null => not url specific
@return value corresponding to key+url, or null if does not exist","['Allow', 'users', 'to', 'search', 'the', 'default', 'rc']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/util/rc/RC.java#L225-L231,test
rupertlssmith/lojix,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/optimizer/WAMOptimizer.java,WAMOptimizer.optimize,"private SizeableList<WAMInstruction> optimize(List<WAMInstruction> instructions)
    {
        StateMachine optimizeConstants = new OptimizeInstructions(symbolTable, interner);
        Iterable<WAMInstruction> matcher =
            new Matcher<WAMInstruction, WAMInstruction>(instructions.iterator(), optimizeConstants);

        SizeableList<WAMInstruction> result = new SizeableLinkedList<WAMInstruction>();

        for (WAMInstruction instruction : matcher)
        {
            result.add(instruction);
        }

        return result;
    }",java,"private SizeableList<WAMInstruction> optimize(List<WAMInstruction> instructions)
    {
        StateMachine optimizeConstants = new OptimizeInstructions(symbolTable, interner);
        Iterable<WAMInstruction> matcher =
            new Matcher<WAMInstruction, WAMInstruction>(instructions.iterator(), optimizeConstants);

        SizeableList<WAMInstruction> result = new SizeableLinkedList<WAMInstruction>();

        for (WAMInstruction instruction : matcher)
        {
            result.add(instruction);
        }

        return result;
    }","['private', 'SizeableList', '<', 'WAMInstruction', '>', 'optimize', '(', 'List', '<', 'WAMInstruction', '>', 'instructions', ')', '{', 'StateMachine', 'optimizeConstants', '=', 'new', 'OptimizeInstructions', '(', 'symbolTable', ',', 'interner', ')', ';', 'Iterable', '<', 'WAMInstruction', '>', 'matcher', '=', 'new', 'Matcher', '<', 'WAMInstruction', ',', 'WAMInstruction', '>', '(', 'instructions', '.', 'iterator', '(', ')', ',', 'optimizeConstants', ')', ';', 'SizeableList', '<', 'WAMInstruction', '>', 'result', '=', 'new', 'SizeableLinkedList', '<', 'WAMInstruction', '>', '(', ')', ';', 'for', '(', 'WAMInstruction', 'instruction', ':', 'matcher', ')', '{', 'result', '.', 'add', '(', 'instruction', ')', ';', '}', 'return', 'result', ';', '}']","Performs an optimization pass for specialized instructions.

<p/>The following instruction sequences can be optimized:

<pre>
unify_var Xi, get_struc a/0, Xi -> unify_const a/0
get_struc a/0, Xi -> get_const a/0
put_struc a/0, Xi, set_var Xi -> set_const a/0
put_struc a/0, Xi -> put_const a/0
</pre>

@param  instructions The instructions to optimize.

@return An list of optimized instructions.","['Performs', 'an', 'optimization', 'pass', 'for', 'specialized', 'instructions', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/optimizer/WAMOptimizer.java#L87-L101,test
streamsets/datacollector,container/src/main/java/com/streamsets/datacollector/creation/StageLibraryDelegateCreator.java,StageLibraryDelegateCreator.create,"public StageLibraryDelegate create(
    StageLibraryTask stageLib,
    String stageLibraryName,
    Class exportedInterface
  ) {
    StageLibraryDelegateDefinitition def = stageLib.getStageLibraryDelegateDefinition(stageLibraryName, exportedInterface);
    if(def == null) {
      return null;
    }

    return createInstance(def);
  }",java,"public StageLibraryDelegate create(
    StageLibraryTask stageLib,
    String stageLibraryName,
    Class exportedInterface
  ) {
    StageLibraryDelegateDefinitition def = stageLib.getStageLibraryDelegateDefinition(stageLibraryName, exportedInterface);
    if(def == null) {
      return null;
    }

    return createInstance(def);
  }","['public', 'StageLibraryDelegate', 'create', '(', 'StageLibraryTask', 'stageLib', ',', 'String', 'stageLibraryName', ',', 'Class', 'exportedInterface', ')', '{', 'StageLibraryDelegateDefinitition', 'def', '=', 'stageLib', '.', 'getStageLibraryDelegateDefinition', '(', 'stageLibraryName', ',', 'exportedInterface', ')', ';', 'if', '(', 'def', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'return', 'createInstance', '(', 'def', ')', ';', '}']","Create new instance of the delegator from given stage library.

@param stageLib Stage library task instance.
@param stageLibraryName Name of the stage library from which the delegator should be loaded.
@param exportedInterface Interface describing which delegator is needed
@return New instance of the delegator or null on any issue","['Create', 'new', 'instance', 'of', 'the', 'delegator', 'from', 'given', 'stage', 'library', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/creation/StageLibraryDelegateCreator.java#L84-L95,test
1337joe/cubesensors-for-java,src/main/java/com/w3asel/cubesensors/api/v1/CubeSensorsApiV1.java,CubeSensorsApiV1.parseQuery,"private <T> T parseQuery(final String response, final Class<T> responseClass) {
		T queryResponse;
		try {
			/*
			 * Possible exceptions:
			 *
			 * IOException - if the underlying input source has problems during parsing
			 *
			 * JsonParseException - if parser has problems parsing content
			 *
			 * JsonMappingException - if the parser does not have any more content to map (note: Json ""null"" value is considered content; enf-of-stream not)
			 */
			queryResponse = MAPPER.readValue(response, responseClass);
		} catch (JsonParseException | JsonMappingException e) {
			try {
				final ErrorResponse error = MAPPER.readValue(response, ErrorResponse.class);

				LOGGER.error(""Query returned an error: {}"", error);
				return null;
			} catch (final IOException e1) {
				LOGGER.error(""Failed to read error response."", e1);
			}
			LOGGER.error(""Error reading response."", e);
			return null;
		} catch (final IOException e) {
			LOGGER.error(""Error reading response."", e);
			return null;
		}

		return queryResponse;
	}",java,"private <T> T parseQuery(final String response, final Class<T> responseClass) {
		T queryResponse;
		try {
			/*
			 * Possible exceptions:
			 *
			 * IOException - if the underlying input source has problems during parsing
			 *
			 * JsonParseException - if parser has problems parsing content
			 *
			 * JsonMappingException - if the parser does not have any more content to map (note: Json ""null"" value is considered content; enf-of-stream not)
			 */
			queryResponse = MAPPER.readValue(response, responseClass);
		} catch (JsonParseException | JsonMappingException e) {
			try {
				final ErrorResponse error = MAPPER.readValue(response, ErrorResponse.class);

				LOGGER.error(""Query returned an error: {}"", error);
				return null;
			} catch (final IOException e1) {
				LOGGER.error(""Failed to read error response."", e1);
			}
			LOGGER.error(""Error reading response."", e);
			return null;
		} catch (final IOException e) {
			LOGGER.error(""Error reading response."", e);
			return null;
		}

		return queryResponse;
	}","['private', '<', 'T', '>', 'T', 'parseQuery', '(', 'final', 'String', 'response', ',', 'final', 'Class', '<', 'T', '>', 'responseClass', ')', '{', 'T', 'queryResponse', ';', 'try', '{', '/*\r\n\t\t\t * Possible exceptions:\r\n\t\t\t *\r\n\t\t\t * IOException - if the underlying input source has problems during parsing\r\n\t\t\t *\r\n\t\t\t * JsonParseException - if parser has problems parsing content\r\n\t\t\t *\r\n\t\t\t * JsonMappingException - if the parser does not have any more content to map (note: Json ""null"" value is considered content; enf-of-stream not)\r\n\t\t\t */', 'queryResponse', '=', 'MAPPER', '.', 'readValue', '(', 'response', ',', 'responseClass', ')', ';', '}', 'catch', '(', 'JsonParseException', '|', 'JsonMappingException', 'e', ')', '{', 'try', '{', 'final', 'ErrorResponse', 'error', '=', 'MAPPER', '.', 'readValue', '(', 'response', ',', 'ErrorResponse', '.', 'class', ')', ';', 'LOGGER', '.', 'error', '(', '""Query returned an error: {}""', ',', 'error', ')', ';', 'return', 'null', ';', '}', 'catch', '(', 'final', 'IOException', 'e1', ')', '{', 'LOGGER', '.', 'error', '(', '""Failed to read error response.""', ',', 'e1', ')', ';', '}', 'LOGGER', '.', 'error', '(', '""Error reading response.""', ',', 'e', ')', ';', 'return', 'null', ';', '}', 'catch', '(', 'final', 'IOException', 'e', ')', '{', 'LOGGER', '.', 'error', '(', '""Error reading response.""', ',', 'e', ')', ';', 'return', 'null', ';', '}', 'return', 'queryResponse', ';', '}']",Parses the results of a query and handles any errors.,"['Parses', 'the', 'results', 'of', 'a', 'query', 'and', 'handles', 'any', 'errors', '.']",f3ba432d36b744e68b916682d7ef24afaff447f8,https://github.com/1337joe/cubesensors-for-java/blob/f3ba432d36b744e68b916682d7ef24afaff447f8/src/main/java/com/w3asel/cubesensors/api/v1/CubeSensorsApiV1.java#L79-L109,test
eclipse/packagedrone,bundles/org.tukani.xz/src/org/tukaani/xz/lz/LZEncoder.java,LZEncoder.moveWindow,"private void moveWindow() {
        // Align the move to a multiple of 16 bytes. LZMA2 needs this
        // because it uses the lowest bits from readPos to get the
        // alignment of the uncompressed data.
        int moveOffset = (readPos + 1 - keepSizeBefore) & ~15;
        int moveSize = writePos - moveOffset;
        System.arraycopy(buf, moveOffset, buf, 0, moveSize);

        readPos -= moveOffset;
        readLimit -= moveOffset;
        writePos -= moveOffset;
    }",java,"private void moveWindow() {
        // Align the move to a multiple of 16 bytes. LZMA2 needs this
        // because it uses the lowest bits from readPos to get the
        // alignment of the uncompressed data.
        int moveOffset = (readPos + 1 - keepSizeBefore) & ~15;
        int moveSize = writePos - moveOffset;
        System.arraycopy(buf, moveOffset, buf, 0, moveSize);

        readPos -= moveOffset;
        readLimit -= moveOffset;
        writePos -= moveOffset;
    }","['private', 'void', 'moveWindow', '(', ')', '{', '// Align the move to a multiple of 16 bytes. LZMA2 needs this', '// because it uses the lowest bits from readPos to get the', '// alignment of the uncompressed data.', 'int', 'moveOffset', '=', '(', 'readPos', '+', '1', '-', 'keepSizeBefore', ')', '&', '~', '15', ';', 'int', 'moveSize', '=', 'writePos', '-', 'moveOffset', ';', 'System', '.', 'arraycopy', '(', 'buf', ',', 'moveOffset', ',', 'buf', ',', '0', ',', 'moveSize', ')', ';', 'readPos', '-=', 'moveOffset', ';', 'readLimit', '-=', 'moveOffset', ';', 'writePos', '-=', 'moveOffset', ';', '}']","Moves data from the end of the buffer to the beginning, discarding
old data and making space for new input.","['Moves', 'data', 'from', 'the', 'end', 'of', 'the', 'buffer', 'to', 'the', 'beginning', 'discarding', 'old', 'data', 'and', 'making', 'space', 'for', 'new', 'input', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.tukani.xz/src/org/tukaani/xz/lz/LZEncoder.java#L181-L192,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/common/directmemory/OByteBufferPool.java,OByteBufferPool.clear,"public void clear() {
    for (OPointer pointer : pointersPool) {
      allocator.deallocate(pointer);
    }

    pointersPool.clear();
    pointersPoolSize.set(0);

    for (OPointer pointer : pointerMapping.keySet()) {
      allocator.deallocate(pointer);
    }

    pointerMapping.clear();
  }",java,"public void clear() {
    for (OPointer pointer : pointersPool) {
      allocator.deallocate(pointer);
    }

    pointersPool.clear();
    pointersPoolSize.set(0);

    for (OPointer pointer : pointerMapping.keySet()) {
      allocator.deallocate(pointer);
    }

    pointerMapping.clear();
  }","['public', 'void', 'clear', '(', ')', '{', 'for', '(', 'OPointer', 'pointer', ':', 'pointersPool', ')', '{', 'allocator', '.', 'deallocate', '(', 'pointer', ')', ';', '}', 'pointersPool', '.', 'clear', '(', ')', ';', 'pointersPoolSize', '.', 'set', '(', '0', ')', ';', 'for', '(', 'OPointer', 'pointer', ':', 'pointerMapping', '.', 'keySet', '(', ')', ')', '{', 'allocator', '.', 'deallocate', '(', 'pointer', ')', ';', '}', 'pointerMapping', '.', 'clear', '(', ')', ';', '}']",Clears pool and dealocates memory.,"['Clears', 'pool', 'and', 'dealocates', 'memory', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/common/directmemory/OByteBufferPool.java#L209-L222,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/InvAccess.java,InvAccess.getStandardUri,"public URI getStandardUri() {
    try {
      InvCatalog cat = dataset.getParentCatalog();
      if (cat == null)
        return new URI(getUnresolvedUrlName());

      return cat.resolveUri(getUnresolvedUrlName());

    } catch (java.net.URISyntaxException e) {
      logger.warn(""Error parsing URL= "" + getUnresolvedUrlName());
      return null;
    }
  }",java,"public URI getStandardUri() {
    try {
      InvCatalog cat = dataset.getParentCatalog();
      if (cat == null)
        return new URI(getUnresolvedUrlName());

      return cat.resolveUri(getUnresolvedUrlName());

    } catch (java.net.URISyntaxException e) {
      logger.warn(""Error parsing URL= "" + getUnresolvedUrlName());
      return null;
    }
  }","['public', 'URI', 'getStandardUri', '(', ')', '{', 'try', '{', 'InvCatalog', 'cat', '=', 'dataset', '.', 'getParentCatalog', '(', ')', ';', 'if', '(', 'cat', '==', 'null', ')', 'return', 'new', 'URI', '(', 'getUnresolvedUrlName', '(', ')', ')', ';', 'return', 'cat', '.', 'resolveUri', '(', 'getUnresolvedUrlName', '(', ')', ')', ';', '}', 'catch', '(', 'java', '.', 'net', '.', 'URISyntaxException', 'e', ')', '{', 'logger', '.', 'warn', '(', '""Error parsing URL= ""', '+', 'getUnresolvedUrlName', '(', ')', ')', ';', 'return', 'null', ';', '}', '}']","Construct the standard THREDDS access URI for this dataset access method,
resolve if the URI is relative.

@return the standard fully resolved THREDDS access URI for this dataset access method, or null if error.","['Construct', 'the', 'standard', 'THREDDS', 'access', 'URI', 'for', 'this', 'dataset', 'access', 'method', 'resolve', 'if', 'the', 'URI', 'is', 'relative', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/InvAccess.java#L96-L108,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/builder/DroolsBuilder.java,DroolsBuilder.markParseErrors,"protected void markParseErrors(List<DroolsBuildMarker> markers,
                                   List<BaseKnowledgeBuilderResultImpl> parserErrors) {
        for ( Iterator<BaseKnowledgeBuilderResultImpl> iter = parserErrors.iterator(); iter.hasNext(); ) {
            Object error = iter.next();
            if ( error instanceof ParserError ) {
                ParserError err = (ParserError) error;
                markers.add( new DroolsBuildMarker( err.getMessage(),
                                                    err.getRow() ) );
            } else if ( error instanceof KnowledgeBuilderResult) {
                KnowledgeBuilderResult res = (KnowledgeBuilderResult) error;
                int[] errorLines = res.getLines();
                markers.add( new DroolsBuildMarker( res.getMessage(),
                                                    errorLines != null && errorLines.length > 0 ? errorLines[0] : -1 ) );
            } else if ( error instanceof ExpanderException ) {
                ExpanderException exc = (ExpanderException) error;
                // TODO line mapping is incorrect
                markers.add( new DroolsBuildMarker( exc.getMessage(),
                                                    -1 ) );
            } else {
                markers.add( new DroolsBuildMarker( error.toString() ) );
            }
        }
    }",java,"protected void markParseErrors(List<DroolsBuildMarker> markers,
                                   List<BaseKnowledgeBuilderResultImpl> parserErrors) {
        for ( Iterator<BaseKnowledgeBuilderResultImpl> iter = parserErrors.iterator(); iter.hasNext(); ) {
            Object error = iter.next();
            if ( error instanceof ParserError ) {
                ParserError err = (ParserError) error;
                markers.add( new DroolsBuildMarker( err.getMessage(),
                                                    err.getRow() ) );
            } else if ( error instanceof KnowledgeBuilderResult) {
                KnowledgeBuilderResult res = (KnowledgeBuilderResult) error;
                int[] errorLines = res.getLines();
                markers.add( new DroolsBuildMarker( res.getMessage(),
                                                    errorLines != null && errorLines.length > 0 ? errorLines[0] : -1 ) );
            } else if ( error instanceof ExpanderException ) {
                ExpanderException exc = (ExpanderException) error;
                // TODO line mapping is incorrect
                markers.add( new DroolsBuildMarker( exc.getMessage(),
                                                    -1 ) );
            } else {
                markers.add( new DroolsBuildMarker( error.toString() ) );
            }
        }
    }","['protected', 'void', 'markParseErrors', '(', 'List', '<', 'DroolsBuildMarker', '>', 'markers', ',', 'List', '<', 'BaseKnowledgeBuilderResultImpl', '>', 'parserErrors', ')', '{', 'for', '(', 'Iterator', '<', 'BaseKnowledgeBuilderResultImpl', '>', 'iter', '=', 'parserErrors', '.', 'iterator', '(', ')', ';', 'iter', '.', 'hasNext', '(', ')', ';', ')', '{', 'Object', 'error', '=', 'iter', '.', 'next', '(', ')', ';', 'if', '(', 'error', 'instanceof', 'ParserError', ')', '{', 'ParserError', 'err', '=', '(', 'ParserError', ')', 'error', ';', 'markers', '.', 'add', '(', 'new', 'DroolsBuildMarker', '(', 'err', '.', 'getMessage', '(', ')', ',', 'err', '.', 'getRow', '(', ')', ')', ')', ';', '}', 'else', 'if', '(', 'error', 'instanceof', 'KnowledgeBuilderResult', ')', '{', 'KnowledgeBuilderResult', 'res', '=', '(', 'KnowledgeBuilderResult', ')', 'error', ';', 'int', '[', ']', 'errorLines', '=', 'res', '.', 'getLines', '(', ')', ';', 'markers', '.', 'add', '(', 'new', 'DroolsBuildMarker', '(', 'res', '.', 'getMessage', '(', ')', ',', 'errorLines', '!=', 'null', '&&', 'errorLines', '.', 'length', '>', '0', '?', 'errorLines', '[', '0', ']', ':', '-', '1', ')', ')', ';', '}', 'else', 'if', '(', 'error', 'instanceof', 'ExpanderException', ')', '{', 'ExpanderException', 'exc', '=', '(', 'ExpanderException', ')', 'error', ';', '// TODO line mapping is incorrect', 'markers', '.', 'add', '(', 'new', 'DroolsBuildMarker', '(', 'exc', '.', 'getMessage', '(', ')', ',', '-', '1', ')', ')', ';', '}', 'else', '{', 'markers', '.', 'add', '(', 'new', 'DroolsBuildMarker', '(', 'error', '.', 'toString', '(', ')', ')', ')', ';', '}', '}', '}']","This will create markers for parse errors. Parse errors mean that antlr
has picked up some major typos in the input source.","['This', 'will', 'create', 'markers', 'for', 'parse', 'errors', '.', 'Parse', 'errors', 'mean', 'that', 'antlr', 'has', 'picked', 'up', 'some', 'major', 'typos', 'in', 'the', 'input', 'source', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/builder/DroolsBuilder.java#L508-L530,test
rest-assured/rest-assured,rest-assured/src/main/java/io/restassured/internal/http/HttpRequestFactory.java,HttpRequestFactory.createHttpRequest,"static HttpRequestBase createHttpRequest(URI uri, String httpMethod, boolean hasBody) {
        String method = notNull(upperCase(trimToNull(httpMethod)), ""Http method"");
        Class<? extends HttpRequestBase> type = HTTP_METHOD_TO_HTTP_REQUEST_TYPE.get(method);
        final HttpRequestBase httpRequest;
        // If we are sending HTTP method that does not allow body (like GET) then HTTP library prevents
        // us from including it, however we chose to allow deviations from standard if user wants so,
        // so it needs custom handling - hence the second condition below.
        // Otherwise we should use standard implementation found in the map
        if (type == null || (!(type.isInstance(HttpEntityEnclosingRequest.class)) && hasBody)) {
            httpRequest = new CustomHttpMethod(method, uri);
        } else {
            try {
                httpRequest = type.newInstance();
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
            httpRequest.setURI(uri);
        }
        return httpRequest;
    }",java,"static HttpRequestBase createHttpRequest(URI uri, String httpMethod, boolean hasBody) {
        String method = notNull(upperCase(trimToNull(httpMethod)), ""Http method"");
        Class<? extends HttpRequestBase> type = HTTP_METHOD_TO_HTTP_REQUEST_TYPE.get(method);
        final HttpRequestBase httpRequest;
        // If we are sending HTTP method that does not allow body (like GET) then HTTP library prevents
        // us from including it, however we chose to allow deviations from standard if user wants so,
        // so it needs custom handling - hence the second condition below.
        // Otherwise we should use standard implementation found in the map
        if (type == null || (!(type.isInstance(HttpEntityEnclosingRequest.class)) && hasBody)) {
            httpRequest = new CustomHttpMethod(method, uri);
        } else {
            try {
                httpRequest = type.newInstance();
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
            httpRequest.setURI(uri);
        }
        return httpRequest;
    }","['static', 'HttpRequestBase', 'createHttpRequest', '(', 'URI', 'uri', ',', 'String', 'httpMethod', ',', 'boolean', 'hasBody', ')', '{', 'String', 'method', '=', 'notNull', '(', 'upperCase', '(', 'trimToNull', '(', 'httpMethod', ')', ')', ',', '""Http method""', ')', ';', 'Class', '<', '?', 'extends', 'HttpRequestBase', '>', 'type', '=', 'HTTP_METHOD_TO_HTTP_REQUEST_TYPE', '.', 'get', '(', 'method', ')', ';', 'final', 'HttpRequestBase', 'httpRequest', ';', '// If we are sending HTTP method that does not allow body (like GET) then HTTP library prevents', '// us from including it, however we chose to allow deviations from standard if user wants so,', '// so it needs custom handling - hence the second condition below.', '// Otherwise we should use standard implementation found in the map', 'if', '(', 'type', '==', 'null', '||', '(', '!', '(', 'type', '.', 'isInstance', '(', 'HttpEntityEnclosingRequest', '.', 'class', ')', ')', '&&', 'hasBody', ')', ')', '{', 'httpRequest', '=', 'new', 'CustomHttpMethod', '(', 'method', ',', 'uri', ')', ';', '}', 'else', '{', 'try', '{', 'httpRequest', '=', 'type', '.', 'newInstance', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'httpRequest', '.', 'setURI', '(', 'uri', ')', ';', '}', 'return', 'httpRequest', ';', '}']","Get the HttpRequest class that represents this request type.

@return a non-abstract class that implements {@link HttpRequest}","['Get', 'the', 'HttpRequest', 'class', 'that', 'represents', 'this', 'request', 'type', '.']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/internal/http/HttpRequestFactory.java#L56-L75,test
OpenEstate/OpenEstate-IO,DaftIE/src/main/jaxb/org/openestate/io/daft_ie/xml/OverseasSaleAdType.java,OverseasSaleAdType.setPropertyStatus,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:41:42+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setPropertyStatus(OverseasSaleAdType.PropertyStatus value) {
        this.propertyStatus = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:41:42+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setPropertyStatus(OverseasSaleAdType.PropertyStatus value) {
        this.propertyStatus = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:41:42+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setPropertyStatus', '(', 'OverseasSaleAdType', '.', 'PropertyStatus', 'value', ')', '{', 'this', '.', 'propertyStatus', '=', 'value', ';', '}']","Sets the value of the propertyStatus property.

@param value
allowed object is
{@link OverseasSaleAdType.PropertyStatus }","['Sets', 'the', 'value', 'of', 'the', 'propertyStatus', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/DaftIE/src/main/jaxb/org/openestate/io/daft_ie/xml/OverseasSaleAdType.java#L1024-L1027,test
TypedRest/TypedRest-Java,core/src/main/java/net/typedrest/AbstractEndpoint.java,AbstractEndpoint.handleBodyLinks,"protected void handleBodyLinks(JsonNode jsonBody, Map<String, Map<URI, String>> links, Map<String, String> linkTemplates) {
        if (jsonBody.getNodeType() != JsonNodeType.OBJECT) {
            return;
        }

        JsonNode linksNode = jsonBody.get(""_links"");
        if (linksNode == null) {
            linksNode = jsonBody.get(""links"");
        }
        if (linksNode == null) {
            return;
        }

        linksNode.fields().forEachRemaining(x -> {
            String rel = x.getKey();
            Map<URI, String> linksForRel = getOrAdd(links, rel);

            switch (x.getValue().getNodeType()) {
                case ARRAY:
                    x.getValue().forEach(subobj -> {
                        if (subobj.getNodeType() == JsonNodeType.OBJECT) {
                            parseLinkObject(rel, (ObjectNode) subobj, linksForRel, linkTemplates);
                        }
                    });
                    break;
                case OBJECT:
                    parseLinkObject(rel, (ObjectNode) x.getValue(), linksForRel, linkTemplates);
                    break;
            }
        });
    }",java,"protected void handleBodyLinks(JsonNode jsonBody, Map<String, Map<URI, String>> links, Map<String, String> linkTemplates) {
        if (jsonBody.getNodeType() != JsonNodeType.OBJECT) {
            return;
        }

        JsonNode linksNode = jsonBody.get(""_links"");
        if (linksNode == null) {
            linksNode = jsonBody.get(""links"");
        }
        if (linksNode == null) {
            return;
        }

        linksNode.fields().forEachRemaining(x -> {
            String rel = x.getKey();
            Map<URI, String> linksForRel = getOrAdd(links, rel);

            switch (x.getValue().getNodeType()) {
                case ARRAY:
                    x.getValue().forEach(subobj -> {
                        if (subobj.getNodeType() == JsonNodeType.OBJECT) {
                            parseLinkObject(rel, (ObjectNode) subobj, linksForRel, linkTemplates);
                        }
                    });
                    break;
                case OBJECT:
                    parseLinkObject(rel, (ObjectNode) x.getValue(), linksForRel, linkTemplates);
                    break;
            }
        });
    }","['protected', 'void', 'handleBodyLinks', '(', 'JsonNode', 'jsonBody', ',', 'Map', '<', 'String', ',', 'Map', '<', 'URI', ',', 'String', '>', '>', 'links', ',', 'Map', '<', 'String', ',', 'String', '>', 'linkTemplates', ')', '{', 'if', '(', 'jsonBody', '.', 'getNodeType', '(', ')', '!=', 'JsonNodeType', '.', 'OBJECT', ')', '{', 'return', ';', '}', 'JsonNode', 'linksNode', '=', 'jsonBody', '.', 'get', '(', '""_links""', ')', ';', 'if', '(', 'linksNode', '==', 'null', ')', '{', 'linksNode', '=', 'jsonBody', '.', 'get', '(', '""links""', ')', ';', '}', 'if', '(', 'linksNode', '==', 'null', ')', '{', 'return', ';', '}', 'linksNode', '.', 'fields', '(', ')', '.', 'forEachRemaining', '(', 'x', '->', '{', 'String', 'rel', '=', 'x', '.', 'getKey', '(', ')', ';', 'Map', '<', 'URI', ',', 'String', '>', 'linksForRel', '=', 'getOrAdd', '(', 'links', ',', 'rel', ')', ';', 'switch', '(', 'x', '.', 'getValue', '(', ')', '.', 'getNodeType', '(', ')', ')', '{', 'case', 'ARRAY', ':', 'x', '.', 'getValue', '(', ')', '.', 'forEach', '(', 'subobj', '->', '{', 'if', '(', 'subobj', '.', 'getNodeType', '(', ')', '==', 'JsonNodeType', '.', 'OBJECT', ')', '{', 'parseLinkObject', '(', 'rel', ',', '(', 'ObjectNode', ')', 'subobj', ',', 'linksForRel', ',', 'linkTemplates', ')', ';', '}', '}', ')', ';', 'break', ';', 'case', 'OBJECT', ':', 'parseLinkObject', '(', 'rel', ',', '(', 'ObjectNode', ')', 'x', '.', 'getValue', '(', ')', ',', 'linksForRel', ',', 'linkTemplates', ')', ';', 'break', ';', '}', '}', ')', ';', '}']","Handles links embedded in JSON response bodies.

@param jsonBody The body to check for links.
@param links A dictionary to add found links to.
@param linkTemplates A dictionary to add found link templates to.","['Handles', 'links', 'embedded', 'in', 'JSON', 'response', 'bodies', '.']",8ce8782d4b8bbe68a2fb4417928b18724f178705,https://github.com/TypedRest/TypedRest-Java/blob/8ce8782d4b8bbe68a2fb4417928b18724f178705/core/src/main/java/net/typedrest/AbstractEndpoint.java#L341-L371,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/RTManager.java,RTManager.onEventMainThread,"@Subscribe(threadMode = ThreadMode.MAIN)
    public void onEventMainThread(LinkEvent event) {
        final String fragmentTag = event.getFragmentTag();
        mRTApi.removeFragment(fragmentTag);

        if (!event.wasCancelled() && ID_01_LINK_FRAGMENT.equals(fragmentTag)) {

            RTEditText editor = getActiveEditor();
            if (editor != null) {

                Link link = event.getLink();
                String url = null;
                if (link != null && link.isValid()) {

                    // the mLinkSelection.end() <= editor.length() check is necessary since
                    // the editor text can change when the link fragment is open
                    Selection selection = mLinkSelection != null && mLinkSelection.end() <= editor.length() ? mLinkSelection : new Selection(editor);

                    String linkText = link.getLinkText();

                    // if no text is selected this inserts the entered link text
                    // if text is selected we replace it by the link text
                    Editable str = editor.getText();
                    str.replace(selection.start(), selection.end(), linkText);
                    editor.setSelection(selection.start(), selection.start() + linkText.length());

                    url = link.getUrl();

                }
                editor.applyEffect(Effects.LINK, url);    // if url == null -> remove the link

            }

        }
    }",java,"@Subscribe(threadMode = ThreadMode.MAIN)
    public void onEventMainThread(LinkEvent event) {
        final String fragmentTag = event.getFragmentTag();
        mRTApi.removeFragment(fragmentTag);

        if (!event.wasCancelled() && ID_01_LINK_FRAGMENT.equals(fragmentTag)) {

            RTEditText editor = getActiveEditor();
            if (editor != null) {

                Link link = event.getLink();
                String url = null;
                if (link != null && link.isValid()) {

                    // the mLinkSelection.end() <= editor.length() check is necessary since
                    // the editor text can change when the link fragment is open
                    Selection selection = mLinkSelection != null && mLinkSelection.end() <= editor.length() ? mLinkSelection : new Selection(editor);

                    String linkText = link.getLinkText();

                    // if no text is selected this inserts the entered link text
                    // if text is selected we replace it by the link text
                    Editable str = editor.getText();
                    str.replace(selection.start(), selection.end(), linkText);
                    editor.setSelection(selection.start(), selection.start() + linkText.length());

                    url = link.getUrl();

                }
                editor.applyEffect(Effects.LINK, url);    // if url == null -> remove the link

            }

        }
    }","['@', 'Subscribe', '(', 'threadMode', '=', 'ThreadMode', '.', 'MAIN', ')', 'public', 'void', 'onEventMainThread', '(', 'LinkEvent', 'event', ')', '{', 'final', 'String', 'fragmentTag', '=', 'event', '.', 'getFragmentTag', '(', ')', ';', 'mRTApi', '.', 'removeFragment', '(', 'fragmentTag', ')', ';', 'if', '(', '!', 'event', '.', 'wasCancelled', '(', ')', '&&', 'ID_01_LINK_FRAGMENT', '.', 'equals', '(', 'fragmentTag', ')', ')', '{', 'RTEditText', 'editor', '=', 'getActiveEditor', '(', ')', ';', 'if', '(', 'editor', '!=', 'null', ')', '{', 'Link', 'link', '=', 'event', '.', 'getLink', '(', ')', ';', 'String', 'url', '=', 'null', ';', 'if', '(', 'link', '!=', 'null', '&&', 'link', '.', 'isValid', '(', ')', ')', '{', '// the mLinkSelection.end() <= editor.length() check is necessary since', '// the editor text can change when the link fragment is open', 'Selection', 'selection', '=', 'mLinkSelection', '!=', 'null', '&&', 'mLinkSelection', '.', 'end', '(', ')', '<=', 'editor', '.', 'length', '(', ')', '?', 'mLinkSelection', ':', 'new', 'Selection', '(', 'editor', ')', ';', 'String', 'linkText', '=', 'link', '.', 'getLinkText', '(', ')', ';', '// if no text is selected this inserts the entered link text', '// if text is selected we replace it by the link text', 'Editable', 'str', '=', 'editor', '.', 'getText', '(', ')', ';', 'str', '.', 'replace', '(', 'selection', '.', 'start', '(', ')', ',', 'selection', '.', 'end', '(', ')', ',', 'linkText', ')', ';', 'editor', '.', 'setSelection', '(', 'selection', '.', 'start', '(', ')', ',', 'selection', '.', 'start', '(', ')', '+', 'linkText', '.', 'length', '(', ')', ')', ';', 'url', '=', 'link', '.', 'getUrl', '(', ')', ';', '}', 'editor', '.', 'applyEffect', '(', 'Effects', '.', 'LINK', ',', 'url', ')', ';', '// if url == null -> remove the link', '}', '}', '}']",LinkFragment has closed -> process the result.,"['LinkFragment', 'has', 'closed', '-', '>', 'process', 'the', 'result', '.']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/RTManager.java#L724-L758,test
phax/ph-math,ph-math/src/main/java/com/helger/numbercruncher/matrix/Matrix.java,Matrix.getColumn,"public ColumnVector getColumn (final int c) throws MatrixException
  {
    if ((c < 0) || (c >= m_nCols))
    {
      throw new MatrixException (MatrixException.INVALID_INDEX);
    }

    final ColumnVector cv = new ColumnVector (m_nRows);
    for (int r = 0; r < m_nRows; ++r)
    {
      cv.m_aValues[r][0] = m_aValues[r][c];
    }

    return cv;
  }",java,"public ColumnVector getColumn (final int c) throws MatrixException
  {
    if ((c < 0) || (c >= m_nCols))
    {
      throw new MatrixException (MatrixException.INVALID_INDEX);
    }

    final ColumnVector cv = new ColumnVector (m_nRows);
    for (int r = 0; r < m_nRows; ++r)
    {
      cv.m_aValues[r][0] = m_aValues[r][c];
    }

    return cv;
  }","['public', 'ColumnVector', 'getColumn', '(', 'final', 'int', 'c', ')', 'throws', 'MatrixException', '{', 'if', '(', '(', 'c', '<', '0', ')', '||', '(', 'c', '>=', 'm_nCols', ')', ')', '{', 'throw', 'new', 'MatrixException', '(', 'MatrixException', '.', 'INVALID_INDEX', ')', ';', '}', 'final', 'ColumnVector', 'cv', '=', 'new', 'ColumnVector', '(', 'm_nRows', ')', ';', 'for', '(', 'int', 'r', '=', '0', ';', 'r', '<', 'm_nRows', ';', '++', 'r', ')', '{', 'cv', '.', 'm_aValues', '[', 'r', ']', '[', '0', ']', '=', 'm_aValues', '[', 'r', ']', '[', 'c', ']', ';', '}', 'return', 'cv', ';', '}']","Get a column of this matrix.

@param c
the column index
@return the column as a column vector
@throws MatrixException
for an invalid index","['Get', 'a', 'column', 'of', 'this', 'matrix', '.']",9f998870c7e05226e032b1f38c23e7d45ec0169d,https://github.com/phax/ph-math/blob/9f998870c7e05226e032b1f38c23e7d45ec0169d/ph-math/src/main/java/com/helger/numbercruncher/matrix/Matrix.java#L154-L168,test
artclarke/humble-video,humble-video-noarch/src/main/java/io/humble/video/BitStreamFilter.java,BitStreamFilter.getType,"public BitStreamFilterType getType() {
    long cPtr = VideoJNI.BitStreamFilter_getType(swigCPtr, this);
    return (cPtr == 0) ? null : new BitStreamFilterType(cPtr, false);
  }",java,"public BitStreamFilterType getType() {
    long cPtr = VideoJNI.BitStreamFilter_getType(swigCPtr, this);
    return (cPtr == 0) ? null : new BitStreamFilterType(cPtr, false);
  }","['public', 'BitStreamFilterType', 'getType', '(', ')', '{', 'long', 'cPtr', '=', 'VideoJNI', '.', 'BitStreamFilter_getType', '(', 'swigCPtr', ',', 'this', ')', ';', 'return', '(', 'cPtr', '==', '0', ')', '?', 'null', ':', 'new', 'BitStreamFilterType', '(', 'cPtr', ',', 'false', ')', ';', '}']",Get the type of this filter.,"['Get', 'the', 'type', 'of', 'this', 'filter', '.']",aa349ae2d7ef74160b7074feac8d298cf90394d1,https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/BitStreamFilter.java#L159-L162,test
spring-projects/spring-security,core/src/main/java/org/springframework/security/core/authority/mapping/SimpleAuthorityMapper.java,SimpleAuthorityMapper.mapAuthorities,"public Set<GrantedAuthority> mapAuthorities(
			Collection<? extends GrantedAuthority> authorities) {
		HashSet<GrantedAuthority> mapped = new HashSet<>(
				authorities.size());
		for (GrantedAuthority authority : authorities) {
			mapped.add(mapAuthority(authority.getAuthority()));
		}

		if (defaultAuthority != null) {
			mapped.add(defaultAuthority);
		}

		return mapped;
	}",java,"public Set<GrantedAuthority> mapAuthorities(
			Collection<? extends GrantedAuthority> authorities) {
		HashSet<GrantedAuthority> mapped = new HashSet<>(
				authorities.size());
		for (GrantedAuthority authority : authorities) {
			mapped.add(mapAuthority(authority.getAuthority()));
		}

		if (defaultAuthority != null) {
			mapped.add(defaultAuthority);
		}

		return mapped;
	}","['public', 'Set', '<', 'GrantedAuthority', '>', 'mapAuthorities', '(', 'Collection', '<', '?', 'extends', 'GrantedAuthority', '>', 'authorities', ')', '{', 'HashSet', '<', 'GrantedAuthority', '>', 'mapped', '=', 'new', 'HashSet', '<>', '(', 'authorities', '.', 'size', '(', ')', ')', ';', 'for', '(', 'GrantedAuthority', 'authority', ':', 'authorities', ')', '{', 'mapped', '.', 'add', '(', 'mapAuthority', '(', 'authority', '.', 'getAuthority', '(', ')', ')', ')', ';', '}', 'if', '(', 'defaultAuthority', '!=', 'null', ')', '{', 'mapped', '.', 'add', '(', 'defaultAuthority', ')', ';', '}', 'return', 'mapped', ';', '}']","Creates a mapping of the supplied authorities based on the case-conversion and
prefix settings. The mapping will be one-to-one unless duplicates are produced
during the conversion. If a default authority has been set, this will also be
assigned to each mapping.

@param authorities the original authorities

@return the converted set of authorities","['Creates', 'a', 'mapping', 'of', 'the', 'supplied', 'authorities', 'based', 'on', 'the', 'case', '-', 'conversion', 'and', 'prefix', 'settings', '.', 'The', 'mapping', 'will', 'be', 'one', '-', 'to', '-', 'one', 'unless', 'duplicates', 'are', 'produced', 'during', 'the', 'conversion', '.', 'If', 'a', 'default', 'authority', 'has', 'been', 'set', 'this', 'will', 'also', 'be', 'assigned', 'to', 'each', 'mapping', '.']",98a8467e4c2ae05b3e09c67ece856944fa48ed23,https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/core/src/main/java/org/springframework/security/core/authority/mapping/SimpleAuthorityMapper.java#L55-L68,test
nyla-solutions/gedi-geode,gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/function/LuceneSearchFunction.java,LuceneSearchFunction.execute,"@SuppressWarnings({ ""unchecked"", ""rawtypes"" })
	@Override
	public void execute(FunctionContext functionContext) 
	{
		Cache cache = CacheFactory.getAnyInstance();	
		
		try
		{
			//Function must be executed on REgion
			if(!(functionContext instanceof RegionFunctionContext))
			{	
				throw new FunctionException(""Execute on a region"");
			}
			
			Object args = functionContext.getArguments();
			
			if (args == null)
				throw new FunctionException(""arguments is required"");
			
			TextPageCriteria criteria = null;
			
			if(args instanceof PdxInstance)
			{
				PdxInstance  pdxInstance = (PdxInstance)args;
				
				try
				{
					criteria = (TextPageCriteria)(pdxInstance.getObject());
				}
				catch (PdxSerializationException e)
				{
					throw new FunctionException(e.getMessage()+"" JSON:""+JSONFormatter.toJSON(pdxInstance));
				}
			}
			else 
			{
				criteria = (TextPageCriteria)args;
			}
			
				
			Region<String, Collection<Object>> pagingRegion = cache.getRegion(criteria.getPageRegionName());
			
			Region<?,?> region = cache.getRegion(criteria.getRegionName());
			
			GeodePagination pagination = new GeodePagination();
			
			TextPolicySearchStrategy geodeSearch = new TextPolicySearchStrategy(cache);
			
			//Collection<String> keys =  (Collection<String>)checkCachedKeysByCriteria(criteria,searchRequest,pagination,pagingRegion);
				
				
				
				
			geodeSearch.saveSearchResultsWithPageKeys(criteria, criteria.getQuery(),null, (Region<String,Collection<Object>>)pagingRegion);
			
			//build results
			Collection<Object> collection = pagination.readResultsByPageValues(criteria.getId(),criteria.getSortField(), 
			criteria.isSortDescending(),
					criteria.getBeginIndex(), 
					(Region<Object,Object>)region, (Region)pagingRegion);
			
			if(collection == null)
			{
				functionContext.getResultSender().lastResult(null);
				return;
				
			}
			
			
			PagingCollection<Object> pageCollection = new PagingCollection<Object>(collection, criteria);
			

			functionContext.getResultSender().lastResult(pageCollection);
		}
		catch (RuntimeException e)
		{
			Logger logger =  LogManager.getLogger(LuceneSearchFunction.class);
			logger.error(Debugger.stackTrace(e));
			
			throw e;
		}
	}",java,"@SuppressWarnings({ ""unchecked"", ""rawtypes"" })
	@Override
	public void execute(FunctionContext functionContext) 
	{
		Cache cache = CacheFactory.getAnyInstance();	
		
		try
		{
			//Function must be executed on REgion
			if(!(functionContext instanceof RegionFunctionContext))
			{	
				throw new FunctionException(""Execute on a region"");
			}
			
			Object args = functionContext.getArguments();
			
			if (args == null)
				throw new FunctionException(""arguments is required"");
			
			TextPageCriteria criteria = null;
			
			if(args instanceof PdxInstance)
			{
				PdxInstance  pdxInstance = (PdxInstance)args;
				
				try
				{
					criteria = (TextPageCriteria)(pdxInstance.getObject());
				}
				catch (PdxSerializationException e)
				{
					throw new FunctionException(e.getMessage()+"" JSON:""+JSONFormatter.toJSON(pdxInstance));
				}
			}
			else 
			{
				criteria = (TextPageCriteria)args;
			}
			
				
			Region<String, Collection<Object>> pagingRegion = cache.getRegion(criteria.getPageRegionName());
			
			Region<?,?> region = cache.getRegion(criteria.getRegionName());
			
			GeodePagination pagination = new GeodePagination();
			
			TextPolicySearchStrategy geodeSearch = new TextPolicySearchStrategy(cache);
			
			//Collection<String> keys =  (Collection<String>)checkCachedKeysByCriteria(criteria,searchRequest,pagination,pagingRegion);
				
				
				
				
			geodeSearch.saveSearchResultsWithPageKeys(criteria, criteria.getQuery(),null, (Region<String,Collection<Object>>)pagingRegion);
			
			//build results
			Collection<Object> collection = pagination.readResultsByPageValues(criteria.getId(),criteria.getSortField(), 
			criteria.isSortDescending(),
					criteria.getBeginIndex(), 
					(Region<Object,Object>)region, (Region)pagingRegion);
			
			if(collection == null)
			{
				functionContext.getResultSender().lastResult(null);
				return;
				
			}
			
			
			PagingCollection<Object> pageCollection = new PagingCollection<Object>(collection, criteria);
			

			functionContext.getResultSender().lastResult(pageCollection);
		}
		catch (RuntimeException e)
		{
			Logger logger =  LogManager.getLogger(LuceneSearchFunction.class);
			logger.error(Debugger.stackTrace(e));
			
			throw e;
		}
	}","['@', 'SuppressWarnings', '(', '{', '""unchecked""', ',', '""rawtypes""', '}', ')', '@', 'Override', 'public', 'void', 'execute', '(', 'FunctionContext', 'functionContext', ')', '{', 'Cache', 'cache', '=', 'CacheFactory', '.', 'getAnyInstance', '(', ')', ';', 'try', '{', '//Function must be executed on REgion', 'if', '(', '!', '(', 'functionContext', 'instanceof', 'RegionFunctionContext', ')', ')', '{', 'throw', 'new', 'FunctionException', '(', '""Execute on a region""', ')', ';', '}', 'Object', 'args', '=', 'functionContext', '.', 'getArguments', '(', ')', ';', 'if', '(', 'args', '==', 'null', ')', 'throw', 'new', 'FunctionException', '(', '""arguments is required""', ')', ';', 'TextPageCriteria', 'criteria', '=', 'null', ';', 'if', '(', 'args', 'instanceof', 'PdxInstance', ')', '{', 'PdxInstance', 'pdxInstance', '=', '(', 'PdxInstance', ')', 'args', ';', 'try', '{', 'criteria', '=', '(', 'TextPageCriteria', ')', '(', 'pdxInstance', '.', 'getObject', '(', ')', ')', ';', '}', 'catch', '(', 'PdxSerializationException', 'e', ')', '{', 'throw', 'new', 'FunctionException', '(', 'e', '.', 'getMessage', '(', ')', '+', '"" JSON:""', '+', 'JSONFormatter', '.', 'toJSON', '(', 'pdxInstance', ')', ')', ';', '}', '}', 'else', '{', 'criteria', '=', '(', 'TextPageCriteria', ')', 'args', ';', '}', 'Region', '<', 'String', ',', 'Collection', '<', 'Object', '>', '>', 'pagingRegion', '=', 'cache', '.', 'getRegion', '(', 'criteria', '.', 'getPageRegionName', '(', ')', ')', ';', 'Region', '<', '?', ',', '?', '>', 'region', '=', 'cache', '.', 'getRegion', '(', 'criteria', '.', 'getRegionName', '(', ')', ')', ';', 'GeodePagination', 'pagination', '=', 'new', 'GeodePagination', '(', ')', ';', 'TextPolicySearchStrategy', 'geodeSearch', '=', 'new', 'TextPolicySearchStrategy', '(', 'cache', ')', ';', '//Collection<String> keys =  (Collection<String>)checkCachedKeysByCriteria(criteria,searchRequest,pagination,pagingRegion);', 'geodeSearch', '.', 'saveSearchResultsWithPageKeys', '(', 'criteria', ',', 'criteria', '.', 'getQuery', '(', ')', ',', 'null', ',', '(', 'Region', '<', 'String', ',', 'Collection', '<', 'Object', '>', '>', ')', 'pagingRegion', ')', ';', '//build results', 'Collection', '<', 'Object', '>', 'collection', '=', 'pagination', '.', 'readResultsByPageValues', '(', 'criteria', '.', 'getId', '(', ')', ',', 'criteria', '.', 'getSortField', '(', ')', ',', 'criteria', '.', 'isSortDescending', '(', ')', ',', 'criteria', '.', 'getBeginIndex', '(', ')', ',', '(', 'Region', '<', 'Object', ',', 'Object', '>', ')', 'region', ',', '(', 'Region', ')', 'pagingRegion', ')', ';', 'if', '(', 'collection', '==', 'null', ')', '{', 'functionContext', '.', 'getResultSender', '(', ')', '.', 'lastResult', '(', 'null', ')', ';', 'return', ';', '}', 'PagingCollection', '<', 'Object', '>', 'pageCollection', '=', 'new', 'PagingCollection', '<', 'Object', '>', '(', 'collection', ',', 'criteria', ')', ';', 'functionContext', '.', 'getResultSender', '(', ')', '.', 'lastResult', '(', 'pageCollection', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'Logger', 'logger', '=', 'LogManager', '.', 'getLogger', '(', 'LuceneSearchFunction', '.', 'class', ')', ';', 'logger', '.', 'error', '(', 'Debugger', '.', 'stackTrace', '(', 'e', ')', ')', ';', 'throw', 'e', ';', '}', '}']",Execute the search on Region,"['Execute', 'the', 'search', 'on', 'Region']",3dd71d6e66e941ce350b306b70677ee95a7d9eee,https://github.com/nyla-solutions/gedi-geode/blob/3dd71d6e66e941ce350b306b70677ee95a7d9eee/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/lucene/function/LuceneSearchFunction.java#L40-L121,test
cglib/cglib,cglib/src/main/java/net/sf/cglib/proxy/Enhancer.java,Enhancer.getMethods,"public static void getMethods(Class superclass, Class[] interfaces, List methods)
    {
        getMethods(superclass, interfaces, methods, null, null);
    }",java,"public static void getMethods(Class superclass, Class[] interfaces, List methods)
    {
        getMethods(superclass, interfaces, methods, null, null);
    }","['public', 'static', 'void', 'getMethods', '(', 'Class', 'superclass', ',', 'Class', '[', ']', 'interfaces', ',', 'List', 'methods', ')', '{', 'getMethods', '(', 'superclass', ',', 'interfaces', ',', 'methods', ',', 'null', ',', 'null', ')', ';', '}']","Finds all of the methods that will be extended by an
Enhancer-generated class using the specified superclass and
interfaces. This can be useful in building a list of Callback
objects. The methods are added to the end of the given list.  Due
to the subclassing nature of the classes generated by Enhancer,
the methods are guaranteed to be non-static, non-final, and
non-private. Each method signature will only occur once, even if
it occurs in multiple classes.
@param superclass the class that will be extended, or null
@param interfaces the list of interfaces that will be implemented, or null
@param methods the list into which to copy the applicable methods","['Finds', 'all', 'of', 'the', 'methods', 'that', 'will', 'be', 'extended', 'by', 'an', 'Enhancer', '-', 'generated', 'class', 'using', 'the', 'specified', 'superclass', 'and', 'interfaces', '.', 'This', 'can', 'be', 'useful', 'in', 'building', 'a', 'list', 'of', 'Callback', 'objects', '.', 'The', 'methods', 'are', 'added', 'to', 'the', 'end', 'of', 'the', 'given', 'list', '.', 'Due', 'to', 'the', 'subclassing', 'nature', 'of', 'the', 'classes', 'generated', 'by', 'Enhancer', 'the', 'methods', 'are', 'guaranteed', 'to', 'be', 'non', '-', 'static', 'non', '-', 'final', 'and', 'non', '-', 'private', '.', 'Each', 'method', 'signature', 'will', 'only', 'occur', 'once', 'even', 'if', 'it', 'occurs', 'in', 'multiple', 'classes', '.']",cd01695c11fd3c66641b295b9596f74cf13c548b,https://github.com/cglib/cglib/blob/cd01695c11fd3c66641b295b9596f74cf13c548b/cglib/src/main/java/net/sf/cglib/proxy/Enhancer.java#L533-L536,test
dbmdz/iiif-apis,src/main/java/de/digitalcollections/iiif/model/image/RegionRequest.java,RegionRequest.fromString,"@JsonCreator
  public static RegionRequest fromString(String str) throws ResolvingException {
    if (str.equals(""full"")) {
      return new RegionRequest();
    }
    if (str.equals(""square"")) {
      return new RegionRequest(true);
    }
    Matcher matcher = PARSE_PAT.matcher(str);
    if (!matcher.matches()) {
      throw new ResolvingException(""Bad format: "" + str);
    }
    if (matcher.group(1) == null) {
      return new RegionRequest(
          Integer.valueOf(matcher.group(2)),
          Integer.valueOf(matcher.group(3)),
          Integer.valueOf(matcher.group(4)),
          Integer.valueOf(matcher.group(5)));
    } else {
      return new RegionRequest(
          new BigDecimal(matcher.group(2)),
          new BigDecimal(matcher.group(3)),
          new BigDecimal(matcher.group(4)),
          new BigDecimal(matcher.group(5)));
    }
  }",java,"@JsonCreator
  public static RegionRequest fromString(String str) throws ResolvingException {
    if (str.equals(""full"")) {
      return new RegionRequest();
    }
    if (str.equals(""square"")) {
      return new RegionRequest(true);
    }
    Matcher matcher = PARSE_PAT.matcher(str);
    if (!matcher.matches()) {
      throw new ResolvingException(""Bad format: "" + str);
    }
    if (matcher.group(1) == null) {
      return new RegionRequest(
          Integer.valueOf(matcher.group(2)),
          Integer.valueOf(matcher.group(3)),
          Integer.valueOf(matcher.group(4)),
          Integer.valueOf(matcher.group(5)));
    } else {
      return new RegionRequest(
          new BigDecimal(matcher.group(2)),
          new BigDecimal(matcher.group(3)),
          new BigDecimal(matcher.group(4)),
          new BigDecimal(matcher.group(5)));
    }
  }","['@', 'JsonCreator', 'public', 'static', 'RegionRequest', 'fromString', '(', 'String', 'str', ')', 'throws', 'ResolvingException', '{', 'if', '(', 'str', '.', 'equals', '(', '""full""', ')', ')', '{', 'return', 'new', 'RegionRequest', '(', ')', ';', '}', 'if', '(', 'str', '.', 'equals', '(', '""square""', ')', ')', '{', 'return', 'new', 'RegionRequest', '(', 'true', ')', ';', '}', 'Matcher', 'matcher', '=', 'PARSE_PAT', '.', 'matcher', '(', 'str', ')', ';', 'if', '(', '!', 'matcher', '.', 'matches', '(', ')', ')', '{', 'throw', 'new', 'ResolvingException', '(', '""Bad format: ""', '+', 'str', ')', ';', '}', 'if', '(', 'matcher', '.', 'group', '(', '1', ')', '==', 'null', ')', '{', 'return', 'new', 'RegionRequest', '(', 'Integer', '.', 'valueOf', '(', 'matcher', '.', 'group', '(', '2', ')', ')', ',', 'Integer', '.', 'valueOf', '(', 'matcher', '.', 'group', '(', '3', ')', ')', ',', 'Integer', '.', 'valueOf', '(', 'matcher', '.', 'group', '(', '4', ')', ')', ',', 'Integer', '.', 'valueOf', '(', 'matcher', '.', 'group', '(', '5', ')', ')', ')', ';', '}', 'else', '{', 'return', 'new', 'RegionRequest', '(', 'new', 'BigDecimal', '(', 'matcher', '.', 'group', '(', '2', ')', ')', ',', 'new', 'BigDecimal', '(', 'matcher', '.', 'group', '(', '3', ')', ')', ',', 'new', 'BigDecimal', '(', 'matcher', '.', 'group', '(', '4', ')', ')', ',', 'new', 'BigDecimal', '(', 'matcher', '.', 'group', '(', '5', ')', ')', ')', ';', '}', '}']","Parse an IIIF Image API compliant region request string

@param str region request string
@return resulting RegionRequest instance
@throws ResolvingException if the request string is malformed.","['Parse', 'an', 'IIIF', 'Image', 'API', 'compliant', 'region', 'request', 'string']",3e77c1044ca4bf4acabb38269c7d72af2f042fc8,https://github.com/dbmdz/iiif-apis/blob/3e77c1044ca4bf4acabb38269c7d72af2f042fc8/src/main/java/de/digitalcollections/iiif/model/image/RegionRequest.java#L65-L90,test
playframework/playframework,core/play-guice/src/main/java/play/inject/guice/GuiceApplicationBuilder.java,GuiceApplicationBuilder.load,"public GuiceApplicationBuilder load(play.api.inject.Binding<?>... bindings) {
    return load(Guiceable.bindings(bindings));
  }",java,"public GuiceApplicationBuilder load(play.api.inject.Binding<?>... bindings) {
    return load(Guiceable.bindings(bindings));
  }","['public', 'GuiceApplicationBuilder', 'load', '(', 'play', '.', 'api', '.', 'inject', '.', 'Binding', '<', '?', '>', '...', 'bindings', ')', '{', 'return', 'load', '(', 'Guiceable', '.', 'bindings', '(', 'bindings', ')', ')', ';', '}']","Override the module loader with the given Play bindings.

@param bindings the set of binding override
@return an application builder that incorporates the overrides","['Override', 'the', 'module', 'loader', 'with', 'the', 'given', 'Play', 'bindings', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play-guice/src/main/java/play/inject/guice/GuiceApplicationBuilder.java#L111-L113,test
Unidata/thredds,tds/src/main/java/thredds/server/reify/DownloadController.java,DownloadController.setup,"public void setup(HttpServletRequest req, HttpServletResponse resp)
            throws SendError
    {
        this.req = req;
        this.res = resp;
        if(!once)
            doonce(req);

        // Parse any query parameters
        try {
            this.params = new DownloadParameters(req);
        } catch (IOException ioe) {
            throw new SendError(res.SC_BAD_REQUEST, ioe);
        }
    }",java,"public void setup(HttpServletRequest req, HttpServletResponse resp)
            throws SendError
    {
        this.req = req;
        this.res = resp;
        if(!once)
            doonce(req);

        // Parse any query parameters
        try {
            this.params = new DownloadParameters(req);
        } catch (IOException ioe) {
            throw new SendError(res.SC_BAD_REQUEST, ioe);
        }
    }","['public', 'void', 'setup', '(', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ')', 'throws', 'SendError', '{', 'this', '.', 'req', '=', 'req', ';', 'this', '.', 'res', '=', 'resp', ';', 'if', '(', '!', 'once', ')', 'doonce', '(', 'req', ')', ';', '// Parse any query parameters', 'try', '{', 'this', '.', 'params', '=', 'new', 'DownloadParameters', '(', 'req', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'SendError', '(', 'res', '.', 'SC_BAD_REQUEST', ',', 'ioe', ')', ';', '}', '}']",Setup for each request,"['Setup', 'for', 'each', 'request']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tds/src/main/java/thredds/server/reify/DownloadController.java#L180-L194,test
NanoHttpd/nanohttpd,core/src/main/java/org/nanohttpd/protocols/http/NanoHTTPD.java,NanoHTTPD.handle,"public Response handle(IHTTPSession session) {
        for (IHandler<IHTTPSession, Response> interceptor : interceptors) {
            Response response = interceptor.handle(session);
            if (response != null)
                return response;
        }
        return httpHandler.handle(session);
    }",java,"public Response handle(IHTTPSession session) {
        for (IHandler<IHTTPSession, Response> interceptor : interceptors) {
            Response response = interceptor.handle(session);
            if (response != null)
                return response;
        }
        return httpHandler.handle(session);
    }","['public', 'Response', 'handle', '(', 'IHTTPSession', 'session', ')', '{', 'for', '(', 'IHandler', '<', 'IHTTPSession', ',', 'Response', '>', 'interceptor', ':', 'interceptors', ')', '{', 'Response', 'response', '=', 'interceptor', '.', 'handle', '(', 'session', ')', ';', 'if', '(', 'response', '!=', 'null', ')', 'return', 'response', ';', '}', 'return', 'httpHandler', '.', 'handle', '(', 'session', ')', ';', '}']","This is the ""master"" method that delegates requests to handlers and makes
sure there is a response to every request. You are not supposed to call
or override this method in any circumstances. But no one will stop you if
you do. I'm a Javadoc, not Code Police.

@param session
the incoming session
@return a response to the incoming session","['This', 'is', 'the', 'master', 'method', 'that', 'delegates', 'requests', 'to', 'handlers', 'and', 'makes', 'sure', 'there', 'is', 'a', 'response', 'to', 'every', 'request', '.', 'You', 'are', 'not', 'supposed', 'to', 'call', 'or', 'override', 'this', 'method', 'in', 'any', 'circumstances', '.', 'But', 'no', 'one', 'will', 'stop', 'you', 'if', 'you', 'do', '.', 'I', 'm', 'a', 'Javadoc', 'not', 'Code', 'Police', '.']",b04a342a4bcd0ff44be65138acffc73a29381c72,https://github.com/NanoHttpd/nanohttpd/blob/b04a342a4bcd0ff44be65138acffc73a29381c72/core/src/main/java/org/nanohttpd/protocols/http/NanoHTTPD.java#L529-L536,test
TooTallNate/Java-WebSocket,src/main/java/org/java_websocket/server/WebSocketServer.java,WebSocketServer.broadcast,"public void broadcast(String text, Collection<WebSocket> clients) {
		if (text == null || clients == null) {
			throw new IllegalArgumentException();
		}
		doBroadcast(text, clients);
	}",java,"public void broadcast(String text, Collection<WebSocket> clients) {
		if (text == null || clients == null) {
			throw new IllegalArgumentException();
		}
		doBroadcast(text, clients);
	}","['public', 'void', 'broadcast', '(', 'String', 'text', ',', 'Collection', '<', 'WebSocket', '>', 'clients', ')', '{', 'if', '(', 'text', '==', 'null', '||', 'clients', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', ')', ';', '}', 'doBroadcast', '(', 'text', ',', 'clients', ')', ';', '}']","Send a text to a specific collection of websocket connections
@param text the text to send to the endpoints
@param clients a collection of endpoints to whom the text has to be send","['Send', 'a', 'text', 'to', 'a', 'specific', 'collection', 'of', 'websocket', 'connections']",73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9,https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/server/WebSocketServer.java#L902-L907,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,ConfigurationUtility.findChildRowsMappingFromShiftMap,"public static List<RowsMapping> findChildRowsMappingFromShiftMap(
			final String fullName,
			final NavigableMap<String, ConfigRangeAttrs> shiftMap) {

		List<RowsMapping> rowsMappingList = new ArrayList<>();
		NavigableMap<String, ConfigRangeAttrs> tailmap = shiftMap
				.tailMap(fullName, false);
		for (Map.Entry<String, ConfigRangeAttrs> entry : tailmap
				.entrySet()) {
			String key = entry.getKey();
			// check it's children
			if (key.startsWith(fullName)) {
				rowsMappingList.add(entry.getValue().getUnitRowsMapping());
			} else {
				break;
			}
		}
		return rowsMappingList;
	}",java,"public static List<RowsMapping> findChildRowsMappingFromShiftMap(
			final String fullName,
			final NavigableMap<String, ConfigRangeAttrs> shiftMap) {

		List<RowsMapping> rowsMappingList = new ArrayList<>();
		NavigableMap<String, ConfigRangeAttrs> tailmap = shiftMap
				.tailMap(fullName, false);
		for (Map.Entry<String, ConfigRangeAttrs> entry : tailmap
				.entrySet()) {
			String key = entry.getKey();
			// check it's children
			if (key.startsWith(fullName)) {
				rowsMappingList.add(entry.getValue().getUnitRowsMapping());
			} else {
				break;
			}
		}
		return rowsMappingList;
	}","['public', 'static', 'List', '<', 'RowsMapping', '>', 'findChildRowsMappingFromShiftMap', '(', 'final', 'String', 'fullName', ',', 'final', 'NavigableMap', '<', 'String', ',', 'ConfigRangeAttrs', '>', 'shiftMap', ')', '{', 'List', '<', 'RowsMapping', '>', 'rowsMappingList', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'NavigableMap', '<', 'String', ',', 'ConfigRangeAttrs', '>', 'tailmap', '=', 'shiftMap', '.', 'tailMap', '(', 'fullName', ',', 'false', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'ConfigRangeAttrs', '>', 'entry', ':', 'tailmap', '.', 'entrySet', '(', ')', ')', '{', 'String', 'key', '=', 'entry', '.', 'getKey', '(', ')', ';', ""// check it's children\r"", 'if', '(', 'key', '.', 'startsWith', '(', 'fullName', ')', ')', '{', 'rowsMappingList', '.', 'add', '(', 'entry', '.', 'getValue', '(', ')', '.', 'getUnitRowsMapping', '(', ')', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'return', 'rowsMappingList', ';', '}']","Find child rows mapping from shift map.

@param fullName
the full name
@param shiftMap
the shift map
@return the list","['Find', 'child', 'rows', 'mapping', 'from', 'shift', 'map', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java#L473-L491,test
jcodec/jcodec,src/main/java/org/jcodec/common/dct/SparseIDCT.java,SparseIDCT.finish,"public static final void finish(int block[]) {
        for (int i = 0; i < 64; i += 4) {
            block[i] = div(block[i]);
            block[i + 1] = div(block[i + 1]);
            block[i + 2] = div(block[i + 2]);
            block[i + 3] = div(block[i + 3]);
        }
    }",java,"public static final void finish(int block[]) {
        for (int i = 0; i < 64; i += 4) {
            block[i] = div(block[i]);
            block[i + 1] = div(block[i + 1]);
            block[i + 2] = div(block[i + 2]);
            block[i + 3] = div(block[i + 3]);
        }
    }","['public', 'static', 'final', 'void', 'finish', '(', 'int', 'block', '[', ']', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '64', ';', 'i', '+=', '4', ')', '{', 'block', '[', 'i', ']', '=', 'div', '(', 'block', '[', 'i', ']', ')', ';', 'block', '[', 'i', '+', '1', ']', '=', 'div', '(', 'block', '[', 'i', '+', '1', ']', ')', ';', 'block', '[', 'i', '+', '2', ']', '=', 'div', '(', 'block', '[', 'i', '+', '2', ']', ')', ';', 'block', '[', 'i', '+', '3', ']', '=', 'div', '(', 'block', '[', 'i', '+', '3', ']', ')', ';', '}', '}']","Finalizes DCT calculation

@param block","['Finalizes', 'DCT', 'calculation']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/common/dct/SparseIDCT.java#L72-L79,test
oblac/jodd,jodd-db/src/main/java/jodd/db/type/SqlTypeManager.java,SqlTypeManager.lookup,"public SqlType lookup(final Class clazz) {
		SqlType sqlType;
		for (Class x = clazz; x != null; x = x.getSuperclass()) {
			sqlType = types.get(clazz);
			if (sqlType != null) {
				return sqlType;
			}
			Class[] interfaces = x.getInterfaces();
			for (Class i : interfaces) {
				sqlType = types.get(i);
				if (sqlType != null) {
					return sqlType;
				}
			}
		}
		return null;
	}",java,"public SqlType lookup(final Class clazz) {
		SqlType sqlType;
		for (Class x = clazz; x != null; x = x.getSuperclass()) {
			sqlType = types.get(clazz);
			if (sqlType != null) {
				return sqlType;
			}
			Class[] interfaces = x.getInterfaces();
			for (Class i : interfaces) {
				sqlType = types.get(i);
				if (sqlType != null) {
					return sqlType;
				}
			}
		}
		return null;
	}","['public', 'SqlType', 'lookup', '(', 'final', 'Class', 'clazz', ')', '{', 'SqlType', 'sqlType', ';', 'for', '(', 'Class', 'x', '=', 'clazz', ';', 'x', '!=', 'null', ';', 'x', '=', 'x', '.', 'getSuperclass', '(', ')', ')', '{', 'sqlType', '=', 'types', '.', 'get', '(', 'clazz', ')', ';', 'if', '(', 'sqlType', '!=', 'null', ')', '{', 'return', 'sqlType', ';', '}', 'Class', '[', ']', 'interfaces', '=', 'x', '.', 'getInterfaces', '(', ')', ';', 'for', '(', 'Class', 'i', ':', 'interfaces', ')', '{', 'sqlType', '=', 'types', '.', 'get', '(', 'i', ')', ';', 'if', '(', 'sqlType', '!=', 'null', ')', '{', 'return', 'sqlType', ';', '}', '}', '}', 'return', 'null', ';', '}']","Retrieves SQL type for provided type. All subclasses and interfaces are examined
for matching sql type.","['Retrieves', 'SQL', 'type', 'for', 'provided', 'type', '.', 'All', 'subclasses', 'and', 'interfaces', 'are', 'examined', 'for', 'matching', 'sql', 'type', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/type/SqlTypeManager.java#L161-L177,test
Unidata/thredds,dap4/d4core/src/main/java/dap4/core/util/DapUtil.java,DapUtil.locateFile,"static public String
    locateFile(String filename, String abspath, boolean wantdir)
    {
        Deque<String> q = new ArrayDeque<String>();
        // clean up the path and filename
        filename = filename.trim().replace('\\', '/');
        abspath = abspath.trim().replace('\\', '/');
        if(filename.charAt(0) == '/') filename = filename.substring(1);
        if(filename.endsWith(""/"")) filename = filename.substring(0, filename.length() - 1);
        if(abspath.endsWith(""/"")) abspath = abspath.substring(0, abspath.length() - 1);
        q.addFirst(abspath);  // prime the search queue

        for(; ; ) {  // breadth first search
            String currentpath = q.poll();
            if(currentpath == null) break; // done searching
            File current = new File(currentpath);
            File[] contents = current.listFiles();
            if(contents != null) {
                for(File subfile : contents) {
                    if(!subfile.getName().equals(filename)) continue;
                    if((wantdir && subfile.isDirectory())
                            || (!wantdir && subfile.isFile())) {
                        // Assume this is it
                        return DapUtil.canonicalpath(subfile.getAbsolutePath());
                    }
                }
                for(File subfile : contents) {
                    if(subfile.isDirectory())
                        q.addFirst(currentpath + ""/"" + subfile.getName());
                }
            }
        }
        return null;
    }",java,"static public String
    locateFile(String filename, String abspath, boolean wantdir)
    {
        Deque<String> q = new ArrayDeque<String>();
        // clean up the path and filename
        filename = filename.trim().replace('\\', '/');
        abspath = abspath.trim().replace('\\', '/');
        if(filename.charAt(0) == '/') filename = filename.substring(1);
        if(filename.endsWith(""/"")) filename = filename.substring(0, filename.length() - 1);
        if(abspath.endsWith(""/"")) abspath = abspath.substring(0, abspath.length() - 1);
        q.addFirst(abspath);  // prime the search queue

        for(; ; ) {  // breadth first search
            String currentpath = q.poll();
            if(currentpath == null) break; // done searching
            File current = new File(currentpath);
            File[] contents = current.listFiles();
            if(contents != null) {
                for(File subfile : contents) {
                    if(!subfile.getName().equals(filename)) continue;
                    if((wantdir && subfile.isDirectory())
                            || (!wantdir && subfile.isFile())) {
                        // Assume this is it
                        return DapUtil.canonicalpath(subfile.getAbsolutePath());
                    }
                }
                for(File subfile : contents) {
                    if(subfile.isDirectory())
                        q.addFirst(currentpath + ""/"" + subfile.getName());
                }
            }
        }
        return null;
    }","['static', 'public', 'String', 'locateFile', '(', 'String', 'filename', ',', 'String', 'abspath', ',', 'boolean', 'wantdir', ')', '{', 'Deque', '<', 'String', '>', 'q', '=', 'new', 'ArrayDeque', '<', 'String', '>', '(', ')', ';', '// clean up the path and filename', 'filename', '=', 'filename', '.', 'trim', '(', ')', '.', 'replace', '(', ""'"", ""'"", ',', ""'"", ""'"", ')', ';', 'abspath', '=', 'abspath', '.', 'trim', '(', ')', '.', 'replace', '(', ""'"", ""'"", ',', ""'"", ""'"", ')', ';', 'if', '(', 'filename', '.', 'charAt', '(', '0', ')', '==', ""'"", ""'"", ')', 'filename', '=', 'filename', '.', 'substring', '(', '1', ')', ';', 'if', '(', 'filename', '.', 'endsWith', '(', '""/""', ')', ')', 'filename', '=', 'filename', '.', 'substring', '(', '0', ',', 'filename', '.', 'length', '(', ')', '-', '1', ')', ';', 'if', '(', 'abspath', '.', 'endsWith', '(', '""/""', ')', ')', 'abspath', '=', 'abspath', '.', 'substring', '(', '0', ',', 'abspath', '.', 'length', '(', ')', '-', '1', ')', ';', 'q', '.', 'addFirst', '(', 'abspath', ')', ';', '// prime the search queue', 'for', '(', ';', ';', ')', '{', '// breadth first search', 'String', 'currentpath', '=', 'q', '.', 'poll', '(', ')', ';', 'if', '(', 'currentpath', '==', 'null', ')', 'break', ';', '// done searching', 'File', 'current', '=', 'new', 'File', '(', 'currentpath', ')', ';', 'File', '[', ']', 'contents', '=', 'current', '.', 'listFiles', '(', ')', ';', 'if', '(', 'contents', '!=', 'null', ')', '{', 'for', '(', 'File', 'subfile', ':', 'contents', ')', '{', 'if', '(', '!', 'subfile', '.', 'getName', '(', ')', '.', 'equals', '(', 'filename', ')', ')', 'continue', ';', 'if', '(', '(', 'wantdir', '&&', 'subfile', '.', 'isDirectory', '(', ')', ')', '||', '(', '!', 'wantdir', '&&', 'subfile', '.', 'isFile', '(', ')', ')', ')', '{', '// Assume this is it', 'return', 'DapUtil', '.', 'canonicalpath', '(', 'subfile', '.', 'getAbsolutePath', '(', ')', ')', ';', '}', '}', 'for', '(', 'File', 'subfile', ':', 'contents', ')', '{', 'if', '(', 'subfile', '.', 'isDirectory', '(', ')', ')', 'q', '.', 'addFirst', '(', 'currentpath', '+', '""/""', '+', 'subfile', '.', 'getName', '(', ')', ')', ';', '}', '}', '}', 'return', 'null', ';', '}']","Walk the specified subtree dir tree to try to locate file|dir named filename.
Use breadth first search.

@param filename Name of the file|dir to locate
@param abspath  Absolute path from which to start search
@param wantdir  True if we are looking for a directory,
false if we are looking for a file
@return absolute path of the file or null","['Walk', 'the', 'specified', 'subtree', 'dir', 'tree', 'to', 'try', 'to', 'locate', 'file|dir', 'named', 'filename', '.', 'Use', 'breadth', 'first', 'search', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/util/DapUtil.java#L164-L197,test
Unidata/thredds,opendap/src/main/java/opendap/servers/FunctionLibrary.java,FunctionLibrary.getBoolFunction,"public BoolFunction getBoolFunction(String name)
            throws NoSuchFunctionException {

        if (!boolFunctions.containsKey(name)) {
            loadNewFunction(name);
        }
        return (BoolFunction) boolFunctions.get(name);
    }",java,"public BoolFunction getBoolFunction(String name)
            throws NoSuchFunctionException {

        if (!boolFunctions.containsKey(name)) {
            loadNewFunction(name);
        }
        return (BoolFunction) boolFunctions.get(name);
    }","['public', 'BoolFunction', 'getBoolFunction', '(', 'String', 'name', ')', 'throws', 'NoSuchFunctionException', '{', 'if', '(', '!', 'boolFunctions', '.', 'containsKey', '(', 'name', ')', ')', '{', 'loadNewFunction', '(', 'name', ')', ';', '}', 'return', '(', 'BoolFunction', ')', 'boolFunctions', '.', 'get', '(', 'name', ')', ';', '}']","Retrieves a boolean function from the library. If the function
is not found the library will attempt to load it using the
mechanism described in the class documentation.

@param name The name of the function being requested.
@return Null if the function is not
in the library, and the attempt to load it fails.","['Retrieves', 'a', 'boolean', 'function', 'from', 'the', 'library', '.', 'If', 'the', 'function', 'is', 'not', 'found', 'the', 'library', 'will', 'attempt', 'to', 'load', 'it', 'using', 'the', 'mechanism', 'described', 'in', 'the', 'class', 'documentation', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/servers/FunctionLibrary.java#L150-L157,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java,OIndexAbstract.create,"public OIndexInternal<?> create(final OIndexDefinition indexDefinition, final String clusterIndexName,
      final Set<String> clustersToIndex, boolean rebuild, final OProgressListener progressListener,
      final OBinarySerializer valueSerializer) {
    acquireExclusiveLock();
    try {
      configuration = indexConfigurationInstance(new ODocument().setTrackingChanges(false));

      this.indexDefinition = indexDefinition;

      if (clustersToIndex != null)
        this.clustersToIndex = new HashSet<>(clustersToIndex);
      else
        this.clustersToIndex = new HashSet<>();

      // do not remove this, it is needed to remove index garbage if such one exists
      try {
        if (apiVersion == 0) {
          removeValuesContainer();
        }
      } catch (Exception e) {
        OLogManager.instance().error(this, ""Error during deletion of index '%s'"", e, name);
      }

      indexId = storage.addIndexEngine(name, algorithm, type, indexDefinition, valueSerializer, isAutomatic(), true, version, 1,
          this instanceof OIndexMultiValues, getEngineProperties(), clustersToIndex, metadata);
      apiVersion = OAbstractPaginatedStorage.extractEngineAPIVersion(indexId);

      assert indexId >= 0;
      assert apiVersion >= 0;

      onIndexEngineChange(indexId);

      if (rebuild)
        fillIndex(progressListener, false);

      updateConfiguration();
    } catch (Exception e) {
      OLogManager.instance().error(this, ""Exception during index '%s' creation"", e, name);

      while (true)
        try {
          if (indexId >= 0)
            storage.deleteIndexEngine(indexId);
          break;
        } catch (OInvalidIndexEngineIdException ignore) {
          doReloadIndexEngine();
        } catch (Exception ex) {
          OLogManager.instance().error(this, ""Exception during index '%s' deletion"", ex, name);
        }

      if (e instanceof OIndexException)
        throw (OIndexException) e;

      throw OException.wrapException(new OIndexException(""Cannot create the index '"" + name + ""'""), e);

    } finally {
      releaseExclusiveLock();
    }

    return this;
  }",java,"public OIndexInternal<?> create(final OIndexDefinition indexDefinition, final String clusterIndexName,
      final Set<String> clustersToIndex, boolean rebuild, final OProgressListener progressListener,
      final OBinarySerializer valueSerializer) {
    acquireExclusiveLock();
    try {
      configuration = indexConfigurationInstance(new ODocument().setTrackingChanges(false));

      this.indexDefinition = indexDefinition;

      if (clustersToIndex != null)
        this.clustersToIndex = new HashSet<>(clustersToIndex);
      else
        this.clustersToIndex = new HashSet<>();

      // do not remove this, it is needed to remove index garbage if such one exists
      try {
        if (apiVersion == 0) {
          removeValuesContainer();
        }
      } catch (Exception e) {
        OLogManager.instance().error(this, ""Error during deletion of index '%s'"", e, name);
      }

      indexId = storage.addIndexEngine(name, algorithm, type, indexDefinition, valueSerializer, isAutomatic(), true, version, 1,
          this instanceof OIndexMultiValues, getEngineProperties(), clustersToIndex, metadata);
      apiVersion = OAbstractPaginatedStorage.extractEngineAPIVersion(indexId);

      assert indexId >= 0;
      assert apiVersion >= 0;

      onIndexEngineChange(indexId);

      if (rebuild)
        fillIndex(progressListener, false);

      updateConfiguration();
    } catch (Exception e) {
      OLogManager.instance().error(this, ""Exception during index '%s' creation"", e, name);

      while (true)
        try {
          if (indexId >= 0)
            storage.deleteIndexEngine(indexId);
          break;
        } catch (OInvalidIndexEngineIdException ignore) {
          doReloadIndexEngine();
        } catch (Exception ex) {
          OLogManager.instance().error(this, ""Exception during index '%s' deletion"", ex, name);
        }

      if (e instanceof OIndexException)
        throw (OIndexException) e;

      throw OException.wrapException(new OIndexException(""Cannot create the index '"" + name + ""'""), e);

    } finally {
      releaseExclusiveLock();
    }

    return this;
  }","['public', 'OIndexInternal', '<', '?', '>', 'create', '(', 'final', 'OIndexDefinition', 'indexDefinition', ',', 'final', 'String', 'clusterIndexName', ',', 'final', 'Set', '<', 'String', '>', 'clustersToIndex', ',', 'boolean', 'rebuild', ',', 'final', 'OProgressListener', 'progressListener', ',', 'final', 'OBinarySerializer', 'valueSerializer', ')', '{', 'acquireExclusiveLock', '(', ')', ';', 'try', '{', 'configuration', '=', 'indexConfigurationInstance', '(', 'new', 'ODocument', '(', ')', '.', 'setTrackingChanges', '(', 'false', ')', ')', ';', 'this', '.', 'indexDefinition', '=', 'indexDefinition', ';', 'if', '(', 'clustersToIndex', '!=', 'null', ')', 'this', '.', 'clustersToIndex', '=', 'new', 'HashSet', '<>', '(', 'clustersToIndex', ')', ';', 'else', 'this', '.', 'clustersToIndex', '=', 'new', 'HashSet', '<>', '(', ')', ';', '// do not remove this, it is needed to remove index garbage if such one exists', 'try', '{', 'if', '(', 'apiVersion', '==', '0', ')', '{', 'removeValuesContainer', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'OLogManager', '.', 'instance', '(', ')', '.', 'error', '(', 'this', ',', '""Error during deletion of index \'%s\'""', ',', 'e', ',', 'name', ')', ';', '}', 'indexId', '=', 'storage', '.', 'addIndexEngine', '(', 'name', ',', 'algorithm', ',', 'type', ',', 'indexDefinition', ',', 'valueSerializer', ',', 'isAutomatic', '(', ')', ',', 'true', ',', 'version', ',', '1', ',', 'this', 'instanceof', 'OIndexMultiValues', ',', 'getEngineProperties', '(', ')', ',', 'clustersToIndex', ',', 'metadata', ')', ';', 'apiVersion', '=', 'OAbstractPaginatedStorage', '.', 'extractEngineAPIVersion', '(', 'indexId', ')', ';', 'assert', 'indexId', '>=', '0', ';', 'assert', 'apiVersion', '>=', '0', ';', 'onIndexEngineChange', '(', 'indexId', ')', ';', 'if', '(', 'rebuild', ')', 'fillIndex', '(', 'progressListener', ',', 'false', ')', ';', 'updateConfiguration', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'OLogManager', '.', 'instance', '(', ')', '.', 'error', '(', 'this', ',', '""Exception during index \'%s\' creation""', ',', 'e', ',', 'name', ')', ';', 'while', '(', 'true', ')', 'try', '{', 'if', '(', 'indexId', '>=', '0', ')', 'storage', '.', 'deleteIndexEngine', '(', 'indexId', ')', ';', 'break', ';', '}', 'catch', '(', 'OInvalidIndexEngineIdException', 'ignore', ')', '{', 'doReloadIndexEngine', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'OLogManager', '.', 'instance', '(', ')', '.', 'error', '(', 'this', ',', '""Exception during index \'%s\' deletion""', ',', 'ex', ',', 'name', ')', ';', '}', 'if', '(', 'e', 'instanceof', 'OIndexException', ')', 'throw', '(', 'OIndexException', ')', 'e', ';', 'throw', 'OException', '.', 'wrapException', '(', 'new', 'OIndexException', '(', '""Cannot create the index \'""', '+', 'name', '+', '""\'""', ')', ',', 'e', ')', ';', '}', 'finally', '{', 'releaseExclusiveLock', '(', ')', ';', '}', 'return', 'this', ';', '}']","Creates the index.

@param clusterIndexName Cluster name where to place the TreeMap","['Creates', 'the', 'index', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java#L193-L253,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,FeatureStyleExtension.getStyleDao,"public StyleDao getStyleDao() {
        StyleDao styleDao = null;
        if (geoPackage.isTable(StyleTable.TABLE_NAME)) {
            AttributesDao attributesDao = getGeoPackage().getAttributesDao(
                    StyleTable.TABLE_NAME);
            styleDao = new StyleDao(attributesDao);
            relatedTables.setContents(styleDao.getTable());
        }
        return styleDao;
    }",java,"public StyleDao getStyleDao() {
        StyleDao styleDao = null;
        if (geoPackage.isTable(StyleTable.TABLE_NAME)) {
            AttributesDao attributesDao = getGeoPackage().getAttributesDao(
                    StyleTable.TABLE_NAME);
            styleDao = new StyleDao(attributesDao);
            relatedTables.setContents(styleDao.getTable());
        }
        return styleDao;
    }","['public', 'StyleDao', 'getStyleDao', '(', ')', '{', 'StyleDao', 'styleDao', '=', 'null', ';', 'if', '(', 'geoPackage', '.', 'isTable', '(', 'StyleTable', '.', 'TABLE_NAME', ')', ')', '{', 'AttributesDao', 'attributesDao', '=', 'getGeoPackage', '(', ')', '.', 'getAttributesDao', '(', 'StyleTable', '.', 'TABLE_NAME', ')', ';', 'styleDao', '=', 'new', 'StyleDao', '(', 'attributesDao', ')', ';', 'relatedTables', '.', 'setContents', '(', 'styleDao', '.', 'getTable', '(', ')', ')', ';', '}', 'return', 'styleDao', ';', '}']","Get a style DAO

@return style DAO","['Get', 'a', 'style', 'DAO']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L114-L123,test
orientechnologies/orientdb,server/src/main/java/com/orientechnologies/orient/server/OClientConnectionManager.java,OClientConnectionManager.getConnection,"public OClientConnection getConnection(final int iChannelId, ONetworkProtocol protocol) {
    // SEARCH THE CONNECTION BY ID
    OClientConnection connection = connections.get(iChannelId);
    if (connection != null)
      connection.setProtocol(protocol);

    return connection;
  }",java,"public OClientConnection getConnection(final int iChannelId, ONetworkProtocol protocol) {
    // SEARCH THE CONNECTION BY ID
    OClientConnection connection = connections.get(iChannelId);
    if (connection != null)
      connection.setProtocol(protocol);

    return connection;
  }","['public', 'OClientConnection', 'getConnection', '(', 'final', 'int', 'iChannelId', ',', 'ONetworkProtocol', 'protocol', ')', '{', '// SEARCH THE CONNECTION BY ID', 'OClientConnection', 'connection', '=', 'connections', '.', 'get', '(', 'iChannelId', ')', ';', 'if', '(', 'connection', '!=', 'null', ')', 'connection', '.', 'setProtocol', '(', 'protocol', ')', ';', 'return', 'connection', ';', '}']","Retrieves the connection by id.

@param iChannelId id of connection

@return The connection if any, otherwise null","['Retrieves', 'the', 'connection', 'by', 'id', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/server/src/main/java/com/orientechnologies/orient/server/OClientConnectionManager.java#L213-L220,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/binary/OBinarySerializerFactory.java,OBinarySerializerFactory.getObjectSerializer,"@SuppressWarnings(""unchecked"")
  public <T> OBinarySerializer<T> getObjectSerializer(final OType type) {
    return (OBinarySerializer<T>) serializerTypeMap.get(type);
  }",java,"@SuppressWarnings(""unchecked"")
  public <T> OBinarySerializer<T> getObjectSerializer(final OType type) {
    return (OBinarySerializer<T>) serializerTypeMap.get(type);
  }","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', '<', 'T', '>', 'OBinarySerializer', '<', 'T', '>', 'getObjectSerializer', '(', 'final', 'OType', 'type', ')', '{', 'return', '(', 'OBinarySerializer', '<', 'T', '>', ')', 'serializerTypeMap', '.', 'get', '(', 'type', ')', ';', '}']","Obtain OBinarySerializer realization for the OType

@param type is the OType to obtain serializer algorithm for

@return OBinarySerializer instance","['Obtain', 'OBinarySerializer', 'realization', 'for', 'the', 'OType']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/binary/OBinarySerializerFactory.java#L164-L167,test
wildfly/wildfly,batch-jberet/src/main/java/org/wildfly/extension/batch/jberet/BatchServiceNames.java,BatchServiceNames.jobOperatorServiceName,"public static ServiceName jobOperatorServiceName(final String deploymentRuntimeName, final String subdeploymentName) {
        return Services.deploymentUnitName(deploymentRuntimeName, subdeploymentName).append(""batch"").append(""job-operator"");
    }",java,"public static ServiceName jobOperatorServiceName(final String deploymentRuntimeName, final String subdeploymentName) {
        return Services.deploymentUnitName(deploymentRuntimeName, subdeploymentName).append(""batch"").append(""job-operator"");
    }","['public', 'static', 'ServiceName', 'jobOperatorServiceName', '(', 'final', 'String', 'deploymentRuntimeName', ',', 'final', 'String', 'subdeploymentName', ')', '{', 'return', 'Services', '.', 'deploymentUnitName', '(', 'deploymentRuntimeName', ',', 'subdeploymentName', ')', '.', 'append', '(', '""batch""', ')', '.', 'append', '(', '""job-operator""', ')', ';', '}']","Creates the service name used for the job operator registered for the deployment.

@param deploymentRuntimeName the runtime name for the deployment
@param subdeploymentName     the name of the subdeployment

@return the service name","['Creates', 'the', 'service', 'name', 'used', 'for', 'the', 'job', 'operator', 'registered', 'for', 'the', 'deployment', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/batch-jberet/src/main/java/org/wildfly/extension/batch/jberet/BatchServiceNames.java#L83-L85,test
marklogic/marklogic-jena,marklogic-jena/src/main/java/com/marklogic/semantics/jena/MarkLogicDatasetGraph.java,MarkLogicDatasetGraph.writePermissions,"public void writePermissions(Node graphName, GraphPermissions permissions) {
        checkIsOpen();
        client.writeGraphPermissions(graphName.getURI(), permissions);
    }",java,"public void writePermissions(Node graphName, GraphPermissions permissions) {
        checkIsOpen();
        client.writeGraphPermissions(graphName.getURI(), permissions);
    }","['public', 'void', 'writePermissions', '(', 'Node', 'graphName', ',', 'GraphPermissions', 'permissions', ')', '{', 'checkIsOpen', '(', ')', ';', 'client', '.', 'writeGraphPermissions', '(', 'graphName', '.', 'getURI', '(', ')', ',', 'permissions', ')', ';', '}']","Sets the permissions on a graph.

@param graphName
the node with the graph's name.
@param permissions
A {@link com.marklogic.client.semantics.GraphPermissions}
object holding the graph's permissions.","['Sets', 'the', 'permissions', 'on', 'a', 'graph', '.']",c083f5c45e55036f5b0985aabe75e9206ba0cf9e,https://github.com/marklogic/marklogic-jena/blob/c083f5c45e55036f5b0985aabe75e9206ba0cf9e/marklogic-jena/src/main/java/com/marklogic/semantics/jena/MarkLogicDatasetGraph.java#L506-L509,test
Unidata/thredds,tds/src/main/java/thredds/core/ConfigCatalogHtmlWriter.java,ConfigCatalogHtmlWriter.getUserHead,"public String getUserHead() {
    return new StringBuilder()
            .append(""<table width='100%'><tr><td>\n"")
            .append(""  <img src='"").append(this.htmlConfig.prepareUrlStringForHtml(this.htmlConfig.getHostInstLogoUrl()))
            .append(""'\n"")
            .append(""       alt='"").append(this.htmlConfig.getHostInstLogoAlt()).append(""'\n"")
            .append(""       align='left' valign='top'\n"")
            .append(""       hspace='10' vspace='2'>\n"")
            .append(""  <h3><strong>"").append(this.tdsContext.getWebappDisplayName()).append(""</strong></h3>\n"")
            .append(""</td></tr></table>\n"")
            .toString();
  }",java,"public String getUserHead() {
    return new StringBuilder()
            .append(""<table width='100%'><tr><td>\n"")
            .append(""  <img src='"").append(this.htmlConfig.prepareUrlStringForHtml(this.htmlConfig.getHostInstLogoUrl()))
            .append(""'\n"")
            .append(""       alt='"").append(this.htmlConfig.getHostInstLogoAlt()).append(""'\n"")
            .append(""       align='left' valign='top'\n"")
            .append(""       hspace='10' vspace='2'>\n"")
            .append(""  <h3><strong>"").append(this.tdsContext.getWebappDisplayName()).append(""</strong></h3>\n"")
            .append(""</td></tr></table>\n"")
            .toString();
  }","['public', 'String', 'getUserHead', '(', ')', '{', 'return', 'new', 'StringBuilder', '(', ')', '.', 'append', '(', '""<table width=\'100%\'><tr><td>\\n""', ')', '.', 'append', '(', '""  <img src=\'""', ')', '.', 'append', '(', 'this', '.', 'htmlConfig', '.', 'prepareUrlStringForHtml', '(', 'this', '.', 'htmlConfig', '.', 'getHostInstLogoUrl', '(', ')', ')', ')', '.', 'append', '(', '""\'\\n""', ')', '.', 'append', '(', '""       alt=\'""', ')', '.', 'append', '(', 'this', '.', 'htmlConfig', '.', 'getHostInstLogoAlt', '(', ')', ')', '.', 'append', '(', '""\'\\n""', ')', '.', 'append', '(', '""       align=\'left\' valign=\'top\'\\n""', ')', '.', 'append', '(', '""       hspace=\'10\' vspace=\'2\'>\\n""', ')', '.', 'append', '(', '""  <h3><strong>""', ')', '.', 'append', '(', 'this', '.', 'tdsContext', '.', 'getWebappDisplayName', '(', ')', ')', '.', 'append', '(', '""</strong></h3>\\n""', ')', '.', 'append', '(', '""</td></tr></table>\\n""', ')', '.', 'toString', '(', ')', ';', '}']",public static final String UNIDATA_HEAD,"['public', 'static', 'final', 'String', 'UNIDATA_HEAD']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tds/src/main/java/thredds/core/ConfigCatalogHtmlWriter.java#L427-L438,test
rackerlabs/blueflood,blueflood-cloudfiles/src/main/java/com/rackspacecloud/blueflood/outputs/cloudfiles/CloudFilesPublisher.java,CloudFilesPublisher.createContainer,"private void createContainer() {
        String containerName = CONTAINER_DATE_FORMAT.format(new Date());
        blobStore.createContainerInLocation(null, containerName);
        lastContainerCreated = containerName;
    }",java,"private void createContainer() {
        String containerName = CONTAINER_DATE_FORMAT.format(new Date());
        blobStore.createContainerInLocation(null, containerName);
        lastContainerCreated = containerName;
    }","['private', 'void', 'createContainer', '(', ')', '{', 'String', 'containerName', '=', 'CONTAINER_DATE_FORMAT', '.', 'format', '(', 'new', 'Date', '(', ')', ')', ';', 'blobStore', '.', 'createContainerInLocation', '(', 'null', ',', 'containerName', ')', ';', 'lastContainerCreated', '=', 'containerName', ';', '}']",idempotent other than when the month changes between two calls,"['idempotent', 'other', 'than', 'when', 'the', 'month', 'changes', 'between', 'two', 'calls']",4722a3449b1a7f8e88889ea8c340c6f24396b5b0,https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-cloudfiles/src/main/java/com/rackspacecloud/blueflood/outputs/cloudfiles/CloudFilesPublisher.java#L68-L72,test
cologneintelligence/FitGoodies,fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/LogHelper.java,LogHelper.addCaptureToLogger,"public void addCaptureToLogger(final AppenderAttachable logger,
	                               final String appenderName) {
		Appender currentAppender = logger.getAppender(appenderName);
		Appender captureAppender = CaptureAppender.newAppenderFrom(currentAppender);
		logger.addAppender(captureAppender);
	}",java,"public void addCaptureToLogger(final AppenderAttachable logger,
	                               final String appenderName) {
		Appender currentAppender = logger.getAppender(appenderName);
		Appender captureAppender = CaptureAppender.newAppenderFrom(currentAppender);
		logger.addAppender(captureAppender);
	}","['public', 'void', 'addCaptureToLogger', '(', 'final', 'AppenderAttachable', 'logger', ',', 'final', 'String', 'appenderName', ')', '{', 'Appender', 'currentAppender', '=', 'logger', '.', 'getAppender', '(', 'appenderName', ')', ';', 'Appender', 'captureAppender', '=', 'CaptureAppender', '.', 'newAppenderFrom', '(', 'currentAppender', ')', ';', 'logger', '.', 'addAppender', '(', 'captureAppender', ')', ';', '}']","Adds a new CaptureAppender to an existing logger.

@param logger       logger to use
@param appenderName name of an existing appender which will be captured","['Adds', 'a', 'new', 'CaptureAppender', 'to', 'an', 'existing', 'logger', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/LogHelper.java#L36-L41,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft/point/standard/StandardStationCollectionImpl.java,StandardStationCollectionImpl.makeStation,"public StationTimeSeriesFeature makeStation(StructureData stationData, int recnum) {
    StationFeature s = ft.makeStation(stationData);
    if (s == null) return null;
    return new StandardStationFeatureImpl(s, timeUnit, stationData, recnum);
  }",java,"public StationTimeSeriesFeature makeStation(StructureData stationData, int recnum) {
    StationFeature s = ft.makeStation(stationData);
    if (s == null) return null;
    return new StandardStationFeatureImpl(s, timeUnit, stationData, recnum);
  }","['public', 'StationTimeSeriesFeature', 'makeStation', '(', 'StructureData', 'stationData', ',', 'int', 'recnum', ')', '{', 'StationFeature', 's', '=', 'ft', '.', 'makeStation', '(', 'stationData', ')', ';', 'if', '(', 's', '==', 'null', ')', 'return', 'null', ';', 'return', 'new', 'StandardStationFeatureImpl', '(', 's', ',', 'timeUnit', ',', 'stationData', ',', 'recnum', ')', ';', '}']","Make a Station from the station data structure.

@param stationData station data structure
@param recnum      station data recnum within table
@return Station or null, skip this Station","['Make', 'a', 'Station', 'from', 'the', 'station', 'data', 'structure', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/StandardStationCollectionImpl.java#L48-L52,test
real-logic/aeron,aeron-cluster/src/main/java/io/aeron/cluster/ClusterMember.java,ClusterMember.quorumPosition,"public static long quorumPosition(final ClusterMember[] members, final long[] rankedPositions)
    {
        final int length = rankedPositions.length;
        for (int i = 0; i < length; i++)
        {
            rankedPositions[i] = 0;
        }

        for (final ClusterMember member : members)
        {
            long newPosition = member.logPosition;

            for (int i = 0; i < length; i++)
            {
                final long rankedPosition = rankedPositions[i];

                if (newPosition > rankedPosition)
                {
                    rankedPositions[i] = newPosition;
                    newPosition = rankedPosition;
                }
            }
        }

        return rankedPositions[length - 1];
    }",java,"public static long quorumPosition(final ClusterMember[] members, final long[] rankedPositions)
    {
        final int length = rankedPositions.length;
        for (int i = 0; i < length; i++)
        {
            rankedPositions[i] = 0;
        }

        for (final ClusterMember member : members)
        {
            long newPosition = member.logPosition;

            for (int i = 0; i < length; i++)
            {
                final long rankedPosition = rankedPositions[i];

                if (newPosition > rankedPosition)
                {
                    rankedPositions[i] = newPosition;
                    newPosition = rankedPosition;
                }
            }
        }

        return rankedPositions[length - 1];
    }","['public', 'static', 'long', 'quorumPosition', '(', 'final', 'ClusterMember', '[', ']', 'members', ',', 'final', 'long', '[', ']', 'rankedPositions', ')', '{', 'final', 'int', 'length', '=', 'rankedPositions', '.', 'length', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'rankedPositions', '[', 'i', ']', '=', '0', ';', '}', 'for', '(', 'final', 'ClusterMember', 'member', ':', 'members', ')', '{', 'long', 'newPosition', '=', 'member', '.', 'logPosition', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'final', 'long', 'rankedPosition', '=', 'rankedPositions', '[', 'i', ']', ';', 'if', '(', 'newPosition', '>', 'rankedPosition', ')', '{', 'rankedPositions', '[', 'i', ']', '=', 'newPosition', ';', 'newPosition', '=', 'rankedPosition', ';', '}', '}', '}', 'return', 'rankedPositions', '[', 'length', '-', '1', ']', ';', '}']","Calculate the position reached by a quorum of cluster members.

@param members         of the cluster.
@param rankedPositions temp array to be used for sorting the positions to avoid allocation.
@return the position reached by a quorum of cluster members.","['Calculate', 'the', 'position', 'reached', 'by', 'a', 'quorum', 'of', 'cluster', 'members', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-cluster/src/main/java/io/aeron/cluster/ClusterMember.java#L702-L727,test
google/guice,core/src/com/google/inject/internal/MoreTypes.java,MoreTypes.canonicalizeForKey,"public static <T> TypeLiteral<T> canonicalizeForKey(TypeLiteral<T> typeLiteral) {
    Type type = typeLiteral.getType();
    if (!isFullySpecified(type)) {
      Errors errors = new Errors().keyNotFullySpecified(typeLiteral);
      throw new ConfigurationException(errors.getMessages());
    }

    if (typeLiteral.getRawType() == javax.inject.Provider.class) {
      ParameterizedType parameterizedType = (ParameterizedType) type;

      // the following casts are generally unsafe, but com.google.inject.Provider extends
      // javax.inject.Provider and is covariant
      @SuppressWarnings(""unchecked"")
      TypeLiteral<T> guiceProviderType =
          (TypeLiteral<T>)
              TypeLiteral.get(Types.providerOf(parameterizedType.getActualTypeArguments()[0]));
      return guiceProviderType;
    }

    @SuppressWarnings(""unchecked"")
    TypeLiteral<T> wrappedPrimitives = (TypeLiteral<T>) PRIMITIVE_TO_WRAPPER.get(typeLiteral);
    if (wrappedPrimitives != null) {
      return wrappedPrimitives;
    }

    // If we know this isn't a subclass, return as-is.
    if (typeLiteral.getClass() == TypeLiteral.class) {
      return typeLiteral;
    }

    // recreate the TypeLiteral to avoid anonymous TypeLiterals from holding refs to their
    // surrounding classes.
    @SuppressWarnings(""unchecked"")
    TypeLiteral<T> recreated = (TypeLiteral<T>) TypeLiteral.get(typeLiteral.getType());
    return recreated;
  }",java,"public static <T> TypeLiteral<T> canonicalizeForKey(TypeLiteral<T> typeLiteral) {
    Type type = typeLiteral.getType();
    if (!isFullySpecified(type)) {
      Errors errors = new Errors().keyNotFullySpecified(typeLiteral);
      throw new ConfigurationException(errors.getMessages());
    }

    if (typeLiteral.getRawType() == javax.inject.Provider.class) {
      ParameterizedType parameterizedType = (ParameterizedType) type;

      // the following casts are generally unsafe, but com.google.inject.Provider extends
      // javax.inject.Provider and is covariant
      @SuppressWarnings(""unchecked"")
      TypeLiteral<T> guiceProviderType =
          (TypeLiteral<T>)
              TypeLiteral.get(Types.providerOf(parameterizedType.getActualTypeArguments()[0]));
      return guiceProviderType;
    }

    @SuppressWarnings(""unchecked"")
    TypeLiteral<T> wrappedPrimitives = (TypeLiteral<T>) PRIMITIVE_TO_WRAPPER.get(typeLiteral);
    if (wrappedPrimitives != null) {
      return wrappedPrimitives;
    }

    // If we know this isn't a subclass, return as-is.
    if (typeLiteral.getClass() == TypeLiteral.class) {
      return typeLiteral;
    }

    // recreate the TypeLiteral to avoid anonymous TypeLiterals from holding refs to their
    // surrounding classes.
    @SuppressWarnings(""unchecked"")
    TypeLiteral<T> recreated = (TypeLiteral<T>) TypeLiteral.get(typeLiteral.getType());
    return recreated;
  }","['public', 'static', '<', 'T', '>', 'TypeLiteral', '<', 'T', '>', 'canonicalizeForKey', '(', 'TypeLiteral', '<', 'T', '>', 'typeLiteral', ')', '{', 'Type', 'type', '=', 'typeLiteral', '.', 'getType', '(', ')', ';', 'if', '(', '!', 'isFullySpecified', '(', 'type', ')', ')', '{', 'Errors', 'errors', '=', 'new', 'Errors', '(', ')', '.', 'keyNotFullySpecified', '(', 'typeLiteral', ')', ';', 'throw', 'new', 'ConfigurationException', '(', 'errors', '.', 'getMessages', '(', ')', ')', ';', '}', 'if', '(', 'typeLiteral', '.', 'getRawType', '(', ')', '==', 'javax', '.', 'inject', '.', 'Provider', '.', 'class', ')', '{', 'ParameterizedType', 'parameterizedType', '=', '(', 'ParameterizedType', ')', 'type', ';', '// the following casts are generally unsafe, but com.google.inject.Provider extends', '// javax.inject.Provider and is covariant', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'TypeLiteral', '<', 'T', '>', 'guiceProviderType', '=', '(', 'TypeLiteral', '<', 'T', '>', ')', 'TypeLiteral', '.', 'get', '(', 'Types', '.', 'providerOf', '(', 'parameterizedType', '.', 'getActualTypeArguments', '(', ')', '[', '0', ']', ')', ')', ';', 'return', 'guiceProviderType', ';', '}', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'TypeLiteral', '<', 'T', '>', 'wrappedPrimitives', '=', '(', 'TypeLiteral', '<', 'T', '>', ')', 'PRIMITIVE_TO_WRAPPER', '.', 'get', '(', 'typeLiteral', ')', ';', 'if', '(', 'wrappedPrimitives', '!=', 'null', ')', '{', 'return', 'wrappedPrimitives', ';', '}', ""// If we know this isn't a subclass, return as-is."", 'if', '(', 'typeLiteral', '.', 'getClass', '(', ')', '==', 'TypeLiteral', '.', 'class', ')', '{', 'return', 'typeLiteral', ';', '}', '// recreate the TypeLiteral to avoid anonymous TypeLiterals from holding refs to their', '// surrounding classes.', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'TypeLiteral', '<', 'T', '>', 'recreated', '=', '(', 'TypeLiteral', '<', 'T', '>', ')', 'TypeLiteral', '.', 'get', '(', 'typeLiteral', '.', 'getType', '(', ')', ')', ';', 'return', 'recreated', ';', '}']","Returns an type that's appropriate for use in a key.

<p>If the raw type of {@code typeLiteral} is a {@code javax.inject.Provider}, this returns a
{@code com.google.inject.Provider} with the same type parameters.

<p>If the type is a primitive, the corresponding wrapper type will be returned.

@throws ConfigurationException if {@code type} contains a type variable","['Returns', 'an', 'type', 'that', 's', 'appropriate', 'for', 'use', 'in', 'a', 'key', '.']",a0552a16d813ead98fe73737fb001db336650251,https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/core/src/com/google/inject/internal/MoreTypes.java#L91-L126,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxettaMethodBuilder.java,ProxettaMethodBuilder.createFirstChainDelegate_Continue,"protected void createFirstChainDelegate_Continue(final TargetMethodData tmd) {
		methodVisitor.visitCode();

		if (tmd.msign.isStatic) {
			loadStaticMethodArguments(methodVisitor, tmd.msign);
			methodVisitor.visitMethodInsn(
				INVOKESTATIC,
				wd.thisReference,
				tmd.firstMethodName(),
				tmd.msign.getDescription(),
				false);
		} else {
			loadSpecialMethodArguments(methodVisitor, tmd.msign);
			methodVisitor.visitMethodInsn(
				INVOKESPECIAL,
				wd.thisReference,
				tmd.firstMethodName(),
				tmd.msign.getDescription(),
				false);
		}

		visitReturn(methodVisitor, tmd.msign, false);

		methodVisitor.visitMaxs(0, 0);
		methodVisitor.visitEnd();
	}",java,"protected void createFirstChainDelegate_Continue(final TargetMethodData tmd) {
		methodVisitor.visitCode();

		if (tmd.msign.isStatic) {
			loadStaticMethodArguments(methodVisitor, tmd.msign);
			methodVisitor.visitMethodInsn(
				INVOKESTATIC,
				wd.thisReference,
				tmd.firstMethodName(),
				tmd.msign.getDescription(),
				false);
		} else {
			loadSpecialMethodArguments(methodVisitor, tmd.msign);
			methodVisitor.visitMethodInsn(
				INVOKESPECIAL,
				wd.thisReference,
				tmd.firstMethodName(),
				tmd.msign.getDescription(),
				false);
		}

		visitReturn(methodVisitor, tmd.msign, false);

		methodVisitor.visitMaxs(0, 0);
		methodVisitor.visitEnd();
	}","['protected', 'void', 'createFirstChainDelegate_Continue', '(', 'final', 'TargetMethodData', 'tmd', ')', '{', 'methodVisitor', '.', 'visitCode', '(', ')', ';', 'if', '(', 'tmd', '.', 'msign', '.', 'isStatic', ')', '{', 'loadStaticMethodArguments', '(', 'methodVisitor', ',', 'tmd', '.', 'msign', ')', ';', 'methodVisitor', '.', 'visitMethodInsn', '(', 'INVOKESTATIC', ',', 'wd', '.', 'thisReference', ',', 'tmd', '.', 'firstMethodName', '(', ')', ',', 'tmd', '.', 'msign', '.', 'getDescription', '(', ')', ',', 'false', ')', ';', '}', 'else', '{', 'loadSpecialMethodArguments', '(', 'methodVisitor', ',', 'tmd', '.', 'msign', ')', ';', 'methodVisitor', '.', 'visitMethodInsn', '(', 'INVOKESPECIAL', ',', 'wd', '.', 'thisReference', ',', 'tmd', '.', 'firstMethodName', '(', ')', ',', 'tmd', '.', 'msign', '.', 'getDescription', '(', ')', ',', 'false', ')', ';', '}', 'visitReturn', '(', 'methodVisitor', ',', 'tmd', '.', 'msign', ',', 'false', ')', ';', 'methodVisitor', '.', 'visitMaxs', '(', '0', ',', '0', ')', ';', 'methodVisitor', '.', 'visitEnd', '(', ')', ';', '}']","Continues the creation of the very first method in calling chain that simply delegates invocation to the first proxy method.
This method mirrors the target method.","['Continues', 'the', 'creation', 'of', 'the', 'very', 'first', 'method', 'in', 'calling', 'chain', 'that', 'simply', 'delegates', 'invocation', 'to', 'the', 'first', 'proxy', 'method', '.', 'This', 'method', 'mirrors', 'the', 'target', 'method', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxettaMethodBuilder.java#L166-L191,test
streamsets/datacollector,common/src/main/java/com/streamsets/pipeline/lib/queue/XEvictingQueue.java,XEvictingQueue.add,"@Override public boolean add(E e) {
    checkNotNull(e);  // check before removing
    if (maxSize == 0) {
      return true;
    }
    if (size() == maxSize) {
      delegate.remove();
    }
    delegate.add(e);
    return true;
  }",java,"@Override public boolean add(E e) {
    checkNotNull(e);  // check before removing
    if (maxSize == 0) {
      return true;
    }
    if (size() == maxSize) {
      delegate.remove();
    }
    delegate.add(e);
    return true;
  }","['@', 'Override', 'public', 'boolean', 'add', '(', 'E', 'e', ')', '{', 'checkNotNull', '(', 'e', ')', ';', '// check before removing', 'if', '(', 'maxSize', '==', '0', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'size', '(', ')', '==', 'maxSize', ')', '{', 'delegate', '.', 'remove', '(', ')', ';', '}', 'delegate', '.', 'add', '(', 'e', ')', ';', 'return', 'true', ';', '}']","Adds the given element to this queue. If the queue is currently full, the element at the head
of the queue is evicted to make room.

@return {@code true} always","['Adds', 'the', 'given', 'element', 'to', 'this', 'queue', '.', 'If', 'the', 'queue', 'is', 'currently', 'full', 'the', 'element', 'at', 'the', 'head', 'of', 'the', 'queue', 'is', 'evicted', 'to', 'make', 'room', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/common/src/main/java/com/streamsets/pipeline/lib/queue/XEvictingQueue.java#L86-L96,test
oblac/jodd,jodd-petite/src/main/java/jodd/petite/PetiteBeans.java,PetiteBeans.registerPetiteMethodInjectionPoint,"public void registerPetiteMethodInjectionPoint(final String beanName, final String methodName, final Class[] arguments, final String[] references) {
		BeanDefinition beanDefinition = lookupExistingBeanDefinition(beanName);

		ClassDescriptor cd = ClassIntrospector.get().lookup(beanDefinition.type);

		Method method = null;
		if (arguments == null) {
			MethodDescriptor[] methods = cd.getAllMethodDescriptors(methodName);

			if (methods != null && methods.length > 0) {
				if (methods.length > 1) {
					throw new PetiteException(methods.length + "" suitable methods found as injection points for: "" + beanDefinition.type.getName() + '#' + methodName);
				}
				method = methods[0].getMethod();
			}
		} else {
			MethodDescriptor md = cd.getMethodDescriptor(methodName, arguments, true);
			if (md != null) {
				method = md.getMethod();
			}
		}
		if (method == null) {
			throw new PetiteException(""Method not found: "" + beanDefinition.type.getName() + '#' + methodName);
		}

		BeanReferences[] ref = referencesResolver.resolveReferenceFromValues(method, references);

		MethodInjectionPoint mip = new MethodInjectionPoint(method, ref);

		beanDefinition.addMethodInjectionPoint(mip);
	}",java,"public void registerPetiteMethodInjectionPoint(final String beanName, final String methodName, final Class[] arguments, final String[] references) {
		BeanDefinition beanDefinition = lookupExistingBeanDefinition(beanName);

		ClassDescriptor cd = ClassIntrospector.get().lookup(beanDefinition.type);

		Method method = null;
		if (arguments == null) {
			MethodDescriptor[] methods = cd.getAllMethodDescriptors(methodName);

			if (methods != null && methods.length > 0) {
				if (methods.length > 1) {
					throw new PetiteException(methods.length + "" suitable methods found as injection points for: "" + beanDefinition.type.getName() + '#' + methodName);
				}
				method = methods[0].getMethod();
			}
		} else {
			MethodDescriptor md = cd.getMethodDescriptor(methodName, arguments, true);
			if (md != null) {
				method = md.getMethod();
			}
		}
		if (method == null) {
			throw new PetiteException(""Method not found: "" + beanDefinition.type.getName() + '#' + methodName);
		}

		BeanReferences[] ref = referencesResolver.resolveReferenceFromValues(method, references);

		MethodInjectionPoint mip = new MethodInjectionPoint(method, ref);

		beanDefinition.addMethodInjectionPoint(mip);
	}","['public', 'void', 'registerPetiteMethodInjectionPoint', '(', 'final', 'String', 'beanName', ',', 'final', 'String', 'methodName', ',', 'final', 'Class', '[', ']', 'arguments', ',', 'final', 'String', '[', ']', 'references', ')', '{', 'BeanDefinition', 'beanDefinition', '=', 'lookupExistingBeanDefinition', '(', 'beanName', ')', ';', 'ClassDescriptor', 'cd', '=', 'ClassIntrospector', '.', 'get', '(', ')', '.', 'lookup', '(', 'beanDefinition', '.', 'type', ')', ';', 'Method', 'method', '=', 'null', ';', 'if', '(', 'arguments', '==', 'null', ')', '{', 'MethodDescriptor', '[', ']', 'methods', '=', 'cd', '.', 'getAllMethodDescriptors', '(', 'methodName', ')', ';', 'if', '(', 'methods', '!=', 'null', '&&', 'methods', '.', 'length', '>', '0', ')', '{', 'if', '(', 'methods', '.', 'length', '>', '1', ')', '{', 'throw', 'new', 'PetiteException', '(', 'methods', '.', 'length', '+', '"" suitable methods found as injection points for: ""', '+', 'beanDefinition', '.', 'type', '.', 'getName', '(', ')', '+', ""'"", ""'"", '+', 'methodName', ')', ';', '}', 'method', '=', 'methods', '[', '0', ']', '.', 'getMethod', '(', ')', ';', '}', '}', 'else', '{', 'MethodDescriptor', 'md', '=', 'cd', '.', 'getMethodDescriptor', '(', 'methodName', ',', 'arguments', ',', 'true', ')', ';', 'if', '(', 'md', '!=', 'null', ')', '{', 'method', '=', 'md', '.', 'getMethod', '(', ')', ';', '}', '}', 'if', '(', 'method', '==', 'null', ')', '{', 'throw', 'new', 'PetiteException', '(', '""Method not found: ""', '+', 'beanDefinition', '.', 'type', '.', 'getName', '(', ')', '+', ""'"", ""'"", '+', 'methodName', ')', ';', '}', 'BeanReferences', '[', ']', 'ref', '=', 'referencesResolver', '.', 'resolveReferenceFromValues', '(', 'method', ',', 'references', ')', ';', 'MethodInjectionPoint', 'mip', '=', 'new', 'MethodInjectionPoint', '(', 'method', ',', 'ref', ')', ';', 'beanDefinition', '.', 'addMethodInjectionPoint', '(', 'mip', ')', ';', '}']","Registers method injection point.

@param beanName bean name
@param methodName method name
@param arguments method arguments, may be <code>null</code>
@param references injection references","['Registers', 'method', 'injection', 'point', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-petite/src/main/java/jodd/petite/PetiteBeans.java#L608-L638,test
RestComm/jain-slee,container/components/components/src/main/java/org/mobicents/slee/container/component/ProfileSpecificationComponentImpl.java,ProfileSpecificationComponentImpl.buildProfileAttributeMap,"private void buildProfileAttributeMap() throws DeploymentException {
		 HashMap<String, ProfileAttribute> map = new HashMap<String, ProfileAttribute>();
		 Class<?> cmpInterface = getProfileCmpInterfaceClass();
		 String attributeGetterMethodPrefix = ""get"";
		 for (Method method : cmpInterface.getMethods()) {
			 if (!method.getDeclaringClass().equals(Object.class) && method.getName().startsWith(attributeGetterMethodPrefix)) {
				 String attributeName = method.getName().substring(attributeGetterMethodPrefix.length());
				 switch (attributeName.length()) {
				 case 0:
					throw new DeploymentException(""the profile cmp interface class has an invalid attribute getter method name > ""+method.getName());					
				 case 1:
					attributeName = attributeName.toLowerCase();
					break;					
				 default:
					attributeName = attributeName.substring(0, 1).toLowerCase() + attributeName.substring(1);
				 	break;
				 }			
				 ProfileAttributeImpl profileAttribute = null;
				 try {
					profileAttribute = new ProfileAttributeImpl(attributeName,method.getReturnType());
				 } catch (Throwable e) {
					throw new DeploymentException(""Invalid profile cmp interface attribute getter method definition ( name = ""+attributeName+"" , type = ""+method.getReturnType()+"" )"",e);
				 }
				 if (isSlee11()) {
					 for (ProfileCMPFieldDescriptor cmpField : getDescriptor().getProfileCMPInterface().getCmpFields()) {
						 if (cmpField.getCmpFieldName().equals(attributeName)) {
							 // TODO add index hints ?
							 profileAttribute.setUnique(cmpField.isUnique());
						 }
					 }
				 }
				 else {
					 for (ProfileIndexDescriptor profileIndex : getDescriptor().getIndexedAttributes()) {
						 if (profileIndex.getName().equals(attributeName)) {
							 profileAttribute.setIndex(true);
							 profileAttribute.setUnique(profileIndex.getUnique());
						 }
					 }
				 }
				 map.put(attributeName, profileAttribute);
			 }
		 }
		 profileAttributeMap = Collections.unmodifiableMap(map);		
	}",java,"private void buildProfileAttributeMap() throws DeploymentException {
		 HashMap<String, ProfileAttribute> map = new HashMap<String, ProfileAttribute>();
		 Class<?> cmpInterface = getProfileCmpInterfaceClass();
		 String attributeGetterMethodPrefix = ""get"";
		 for (Method method : cmpInterface.getMethods()) {
			 if (!method.getDeclaringClass().equals(Object.class) && method.getName().startsWith(attributeGetterMethodPrefix)) {
				 String attributeName = method.getName().substring(attributeGetterMethodPrefix.length());
				 switch (attributeName.length()) {
				 case 0:
					throw new DeploymentException(""the profile cmp interface class has an invalid attribute getter method name > ""+method.getName());					
				 case 1:
					attributeName = attributeName.toLowerCase();
					break;					
				 default:
					attributeName = attributeName.substring(0, 1).toLowerCase() + attributeName.substring(1);
				 	break;
				 }			
				 ProfileAttributeImpl profileAttribute = null;
				 try {
					profileAttribute = new ProfileAttributeImpl(attributeName,method.getReturnType());
				 } catch (Throwable e) {
					throw new DeploymentException(""Invalid profile cmp interface attribute getter method definition ( name = ""+attributeName+"" , type = ""+method.getReturnType()+"" )"",e);
				 }
				 if (isSlee11()) {
					 for (ProfileCMPFieldDescriptor cmpField : getDescriptor().getProfileCMPInterface().getCmpFields()) {
						 if (cmpField.getCmpFieldName().equals(attributeName)) {
							 // TODO add index hints ?
							 profileAttribute.setUnique(cmpField.isUnique());
						 }
					 }
				 }
				 else {
					 for (ProfileIndexDescriptor profileIndex : getDescriptor().getIndexedAttributes()) {
						 if (profileIndex.getName().equals(attributeName)) {
							 profileAttribute.setIndex(true);
							 profileAttribute.setUnique(profileIndex.getUnique());
						 }
					 }
				 }
				 map.put(attributeName, profileAttribute);
			 }
		 }
		 profileAttributeMap = Collections.unmodifiableMap(map);		
	}","['private', 'void', 'buildProfileAttributeMap', '(', ')', 'throws', 'DeploymentException', '{', 'HashMap', '<', 'String', ',', 'ProfileAttribute', '>', 'map', '=', 'new', 'HashMap', '<', 'String', ',', 'ProfileAttribute', '>', '(', ')', ';', 'Class', '<', '?', '>', 'cmpInterface', '=', 'getProfileCmpInterfaceClass', '(', ')', ';', 'String', 'attributeGetterMethodPrefix', '=', '""get""', ';', 'for', '(', 'Method', 'method', ':', 'cmpInterface', '.', 'getMethods', '(', ')', ')', '{', 'if', '(', '!', 'method', '.', 'getDeclaringClass', '(', ')', '.', 'equals', '(', 'Object', '.', 'class', ')', '&&', 'method', '.', 'getName', '(', ')', '.', 'startsWith', '(', 'attributeGetterMethodPrefix', ')', ')', '{', 'String', 'attributeName', '=', 'method', '.', 'getName', '(', ')', '.', 'substring', '(', 'attributeGetterMethodPrefix', '.', 'length', '(', ')', ')', ';', 'switch', '(', 'attributeName', '.', 'length', '(', ')', ')', '{', 'case', '0', ':', 'throw', 'new', 'DeploymentException', '(', '""the profile cmp interface class has an invalid attribute getter method name > ""', '+', 'method', '.', 'getName', '(', ')', ')', ';', 'case', '1', ':', 'attributeName', '=', 'attributeName', '.', 'toLowerCase', '(', ')', ';', 'break', ';', 'default', ':', 'attributeName', '=', 'attributeName', '.', 'substring', '(', '0', ',', '1', ')', '.', 'toLowerCase', '(', ')', '+', 'attributeName', '.', 'substring', '(', '1', ')', ';', 'break', ';', '}', 'ProfileAttributeImpl', 'profileAttribute', '=', 'null', ';', 'try', '{', 'profileAttribute', '=', 'new', 'ProfileAttributeImpl', '(', 'attributeName', ',', 'method', '.', 'getReturnType', '(', ')', ')', ';', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'throw', 'new', 'DeploymentException', '(', '""Invalid profile cmp interface attribute getter method definition ( name = ""', '+', 'attributeName', '+', '"" , type = ""', '+', 'method', '.', 'getReturnType', '(', ')', '+', '"" )""', ',', 'e', ')', ';', '}', 'if', '(', 'isSlee11', '(', ')', ')', '{', 'for', '(', 'ProfileCMPFieldDescriptor', 'cmpField', ':', 'getDescriptor', '(', ')', '.', 'getProfileCMPInterface', '(', ')', '.', 'getCmpFields', '(', ')', ')', '{', 'if', '(', 'cmpField', '.', 'getCmpFieldName', '(', ')', '.', 'equals', '(', 'attributeName', ')', ')', '{', '// TODO add index hints ?\r', 'profileAttribute', '.', 'setUnique', '(', 'cmpField', '.', 'isUnique', '(', ')', ')', ';', '}', '}', '}', 'else', '{', 'for', '(', 'ProfileIndexDescriptor', 'profileIndex', ':', 'getDescriptor', '(', ')', '.', 'getIndexedAttributes', '(', ')', ')', '{', 'if', '(', 'profileIndex', '.', 'getName', '(', ')', '.', 'equals', '(', 'attributeName', ')', ')', '{', 'profileAttribute', '.', 'setIndex', '(', 'true', ')', ';', 'profileAttribute', '.', 'setUnique', '(', 'profileIndex', '.', 'getUnique', '(', ')', ')', ';', '}', '}', '}', 'map', '.', 'put', '(', 'attributeName', ',', 'profileAttribute', ')', ';', '}', '}', 'profileAttributeMap', '=', 'Collections', '.', 'unmodifiableMap', '(', 'map', ')', ';', '}']","Builds the profile attribute map using the cmp interface class
@throws DeploymentException","['Builds', 'the', 'profile', 'attribute', 'map', 'using', 'the', 'cmp', 'interface', 'class']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/ProfileSpecificationComponentImpl.java#L181-L224,test
lessthanoptimal/GeoRegression,main/src/georegression/geometry/UtilPlane3D_F64.java,UtilPlane3D_F64.planeToWorld,"public static Se3_F64 planeToWorld( PlaneGeneral3D_F64 plane , Se3_F64 planeToWorld ) {
		if( planeToWorld == null )
			planeToWorld = new Se3_F64();

		Vector3D_F64 axisZ = new Vector3D_F64(plane.A,plane.B,plane.C);

		axisZ.normalize();
		Vector3D_F64 axisX = new Vector3D_F64();
		Vector3D_F64 axisY = new Vector3D_F64();
		UtilPlane3D_F64.selectAxis2D(axisZ,axisX,axisY);

		return planeToWorld(plane,axisX,axisY,axisZ,planeToWorld);
	}",java,"public static Se3_F64 planeToWorld( PlaneGeneral3D_F64 plane , Se3_F64 planeToWorld ) {
		if( planeToWorld == null )
			planeToWorld = new Se3_F64();

		Vector3D_F64 axisZ = new Vector3D_F64(plane.A,plane.B,plane.C);

		axisZ.normalize();
		Vector3D_F64 axisX = new Vector3D_F64();
		Vector3D_F64 axisY = new Vector3D_F64();
		UtilPlane3D_F64.selectAxis2D(axisZ,axisX,axisY);

		return planeToWorld(plane,axisX,axisY,axisZ,planeToWorld);
	}","['public', 'static', 'Se3_F64', 'planeToWorld', '(', 'PlaneGeneral3D_F64', 'plane', ',', 'Se3_F64', 'planeToWorld', ')', '{', 'if', '(', 'planeToWorld', '==', 'null', ')', 'planeToWorld', '=', 'new', 'Se3_F64', '(', ')', ';', 'Vector3D_F64', 'axisZ', '=', 'new', 'Vector3D_F64', '(', 'plane', '.', 'A', ',', 'plane', '.', 'B', ',', 'plane', '.', 'C', ')', ';', 'axisZ', '.', 'normalize', '(', ')', ';', 'Vector3D_F64', 'axisX', '=', 'new', 'Vector3D_F64', '(', ')', ';', 'Vector3D_F64', 'axisY', '=', 'new', 'Vector3D_F64', '(', ')', ';', 'UtilPlane3D_F64', '.', 'selectAxis2D', '(', 'axisZ', ',', 'axisX', ',', 'axisY', ')', ';', 'return', 'planeToWorld', '(', 'plane', ',', 'axisX', ',', 'axisY', ',', 'axisZ', ',', 'planeToWorld', ')', ';', '}']","Creates a transform from the plane's reference frame into world's reference frame.  The z-axis is set to the
plane's normal and the x-axis and y-axis are arbitrarily choosen.  Points which lie along the plane will
lie along its x-y plane.

@param plane Plane
@param planeToWorld (Optional) storage for the planeToWorld transform.  Can be null.
@return Transform from planeToWorld","['Creates', 'a', 'transform', 'from', 'the', 'plane', 's', 'reference', 'frame', 'into', 'world', 's', 'reference', 'frame', '.', 'The', 'z', '-', 'axis', 'is', 'set', 'to', 'the', 'plane', 's', 'normal', 'and', 'the', 'x', '-', 'axis', 'and', 'y', '-', 'axis', 'are', 'arbitrarily', 'choosen', '.', 'Points', 'which', 'lie', 'along', 'the', 'plane', 'will', 'lie', 'along', 'its', 'x', '-', 'y', 'plane', '.']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/geometry/UtilPlane3D_F64.java#L281-L293,test
Unidata/thredds,tdcommon/src/main/java/thredds/server/catalog/tracker/CatalogTracker.java,CatalogTracker.getCatalogs,"public Iterable<? extends CatalogExt> getCatalogs() {
    if (catalogs == null) readCatalogs();

    List<CatalogExt> result = new ArrayList<>();
    for (CatalogExt ext : catalogs.values())
      result.add(ext);
    Collections.sort(result, (o1, o2) -> o1.getCatRelLocation().compareTo(o2.getCatRelLocation()));    // java 8 lambda, baby
    return result;
  }",java,"public Iterable<? extends CatalogExt> getCatalogs() {
    if (catalogs == null) readCatalogs();

    List<CatalogExt> result = new ArrayList<>();
    for (CatalogExt ext : catalogs.values())
      result.add(ext);
    Collections.sort(result, (o1, o2) -> o1.getCatRelLocation().compareTo(o2.getCatRelLocation()));    // java 8 lambda, baby
    return result;
  }","['public', 'Iterable', '<', '?', 'extends', 'CatalogExt', '>', 'getCatalogs', '(', ')', '{', 'if', '(', 'catalogs', '==', 'null', ')', 'readCatalogs', '(', ')', ';', 'List', '<', 'CatalogExt', '>', 'result', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'for', '(', 'CatalogExt', 'ext', ':', 'catalogs', '.', 'values', '(', ')', ')', 'result', '.', '(', 'ext', ')', ';', 'Collections', '.', 'sort', '(', 'result', ',', '(', 'o1', ',', 'o2', ')', '->', 'o1', '.', 'getCatRelLocation', '(', ')', '.', 'compareTo', '(', 'o2', '.', 'getCatRelLocation', '(', ')', ')', ')', ';', '// java 8 lambda, baby', 'return', 'result', ';', '}']",return sorted catalogs,"['return', 'sorted', 'catalogs']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tdcommon/src/main/java/thredds/server/catalog/tracker/CatalogTracker.java#L69-L77,test
jcodec/jcodec,src/main/java/net/sourceforge/jaad/aac/error/BitsBuffer.java,BitsBuffer.rewindReverse64,"static int[] rewindReverse64(int hi, int lo, int len) {
    	int[] i = new int[2];
    	if(len<=32) {
    		i[0] = 0;
    		i[1] = rewindReverse32(lo, len);
    	}
    	else {
    		lo = ((lo>>S[0])&B[0])|((lo<<S[0])&~B[0]);
    		hi = ((hi>>S[0])&B[0])|((hi<<S[0])&~B[0]);
    		lo = ((lo>>S[1])&B[1])|((lo<<S[1])&~B[1]);
    		hi = ((hi>>S[1])&B[1])|((hi<<S[1])&~B[1]);
    		lo = ((lo>>S[2])&B[2])|((lo<<S[2])&~B[2]);
    		hi = ((hi>>S[2])&B[2])|((hi<<S[2])&~B[2]);
    		lo = ((lo>>S[3])&B[3])|((lo<<S[3])&~B[3]);
    		hi = ((hi>>S[3])&B[3])|((hi<<S[3])&~B[3]);
    		lo = ((lo>>S[4])&B[4])|((lo<<S[4])&~B[4]);
    		hi = ((hi>>S[4])&B[4])|((hi<<S[4])&~B[4]);
    
    		//shift off low bits
    		i[1] = (hi>>(64-len))|(lo<<(len-32));
    		i[1] = lo>>(64-len);
    	}
    	return i;
    }",java,"static int[] rewindReverse64(int hi, int lo, int len) {
    	int[] i = new int[2];
    	if(len<=32) {
    		i[0] = 0;
    		i[1] = rewindReverse32(lo, len);
    	}
    	else {
    		lo = ((lo>>S[0])&B[0])|((lo<<S[0])&~B[0]);
    		hi = ((hi>>S[0])&B[0])|((hi<<S[0])&~B[0]);
    		lo = ((lo>>S[1])&B[1])|((lo<<S[1])&~B[1]);
    		hi = ((hi>>S[1])&B[1])|((hi<<S[1])&~B[1]);
    		lo = ((lo>>S[2])&B[2])|((lo<<S[2])&~B[2]);
    		hi = ((hi>>S[2])&B[2])|((hi<<S[2])&~B[2]);
    		lo = ((lo>>S[3])&B[3])|((lo<<S[3])&~B[3]);
    		hi = ((hi>>S[3])&B[3])|((hi<<S[3])&~B[3]);
    		lo = ((lo>>S[4])&B[4])|((lo<<S[4])&~B[4]);
    		hi = ((hi>>S[4])&B[4])|((hi<<S[4])&~B[4]);
    
    		//shift off low bits
    		i[1] = (hi>>(64-len))|(lo<<(len-32));
    		i[1] = lo>>(64-len);
    	}
    	return i;
    }","['static', 'int', '[', ']', 'rewindReverse64', '(', 'int', 'hi', ',', 'int', 'lo', ',', 'int', 'len', ')', '{', 'int', '[', ']', 'i', '=', 'new', 'int', '[', '2', ']', ';', 'if', '(', 'len', '<=', '32', ')', '{', 'i', '[', '0', ']', '=', '0', ';', 'i', '[', '1', ']', '=', 'rewindReverse32', '(', 'lo', ',', 'len', ')', ';', '}', 'else', '{', 'lo', '=', '(', '(', 'lo', '>>', 'S', '[', '0', ']', ')', '&', 'B', '[', '0', ']', ')', '|', '(', '(', 'lo', '<<', 'S', '[', '0', ']', ')', '&', '~', 'B', '[', '0', ']', ')', ';', 'hi', '=', '(', '(', 'hi', '>>', 'S', '[', '0', ']', ')', '&', 'B', '[', '0', ']', ')', '|', '(', '(', 'hi', '<<', 'S', '[', '0', ']', ')', '&', '~', 'B', '[', '0', ']', ')', ';', 'lo', '=', '(', '(', 'lo', '>>', 'S', '[', '1', ']', ')', '&', 'B', '[', '1', ']', ')', '|', '(', '(', 'lo', '<<', 'S', '[', '1', ']', ')', '&', '~', 'B', '[', '1', ']', ')', ';', 'hi', '=', '(', '(', 'hi', '>>', 'S', '[', '1', ']', ')', '&', 'B', '[', '1', ']', ')', '|', '(', '(', 'hi', '<<', 'S', '[', '1', ']', ')', '&', '~', 'B', '[', '1', ']', ')', ';', 'lo', '=', '(', '(', 'lo', '>>', 'S', '[', '2', ']', ')', '&', 'B', '[', '2', ']', ')', '|', '(', '(', 'lo', '<<', 'S', '[', '2', ']', ')', '&', '~', 'B', '[', '2', ']', ')', ';', 'hi', '=', '(', '(', 'hi', '>>', 'S', '[', '2', ']', ')', '&', 'B', '[', '2', ']', ')', '|', '(', '(', 'hi', '<<', 'S', '[', '2', ']', ')', '&', '~', 'B', '[', '2', ']', ')', ';', 'lo', '=', '(', '(', 'lo', '>>', 'S', '[', '3', ']', ')', '&', 'B', '[', '3', ']', ')', '|', '(', '(', 'lo', '<<', 'S', '[', '3', ']', ')', '&', '~', 'B', '[', '3', ']', ')', ';', 'hi', '=', '(', '(', 'hi', '>>', 'S', '[', '3', ']', ')', '&', 'B', '[', '3', ']', ')', '|', '(', '(', 'hi', '<<', 'S', '[', '3', ']', ')', '&', '~', 'B', '[', '3', ']', ')', ';', 'lo', '=', '(', '(', 'lo', '>>', 'S', '[', '4', ']', ')', '&', 'B', '[', '4', ']', ')', '|', '(', '(', 'lo', '<<', 'S', '[', '4', ']', ')', '&', '~', 'B', '[', '4', ']', ')', ';', 'hi', '=', '(', '(', 'hi', '>>', 'S', '[', '4', ']', ')', '&', 'B', '[', '4', ']', ')', '|', '(', '(', 'hi', '<<', 'S', '[', '4', ']', ')', '&', '~', 'B', '[', '4', ']', ')', ';', '//shift off low bits', 'i', '[', '1', ']', '=', '(', 'hi', '>>', '(', '64', '-', 'len', ')', ')', '|', '(', 'lo', '<<', '(', 'len', '-', '32', ')', ')', ';', 'i', '[', '1', ']', '=', 'lo', '>>', '(', '64', '-', 'len', ')', ';', '}', 'return', 'i', ';', '}']",64 bit rewind and reverse,"['64', 'bit', 'rewind', 'and', 'reverse']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/net/sourceforge/jaad/aac/error/BitsBuffer.java#L130-L153,test
wildfly/wildfly,jpa/subsystem/src/main/java/org/jboss/as/jpa/persistenceprovider/PersistenceProviderLoader.java,PersistenceProviderLoader.loadProviderModuleByName,"public static List<PersistenceProvider> loadProviderModuleByName(String moduleName) throws ModuleLoadException {
        final ModuleLoader moduleLoader = Module.getBootModuleLoader();
        Module module = moduleLoader.loadModule(ModuleIdentifier.fromString(moduleName));
        final ServiceLoader<PersistenceProvider> serviceLoader =
            module.loadService(PersistenceProvider.class);
        List<PersistenceProvider> result = new ArrayList<>();
        if (serviceLoader != null) {
            for (PersistenceProvider provider1 : serviceLoader) {
                // persistence provider jar may contain multiple provider service implementations
                // save each provider
                PersistenceProviderResolverImpl.getInstance().addPersistenceProvider(provider1);
                result.add(provider1);
            }
        }
        return result;
    }",java,"public static List<PersistenceProvider> loadProviderModuleByName(String moduleName) throws ModuleLoadException {
        final ModuleLoader moduleLoader = Module.getBootModuleLoader();
        Module module = moduleLoader.loadModule(ModuleIdentifier.fromString(moduleName));
        final ServiceLoader<PersistenceProvider> serviceLoader =
            module.loadService(PersistenceProvider.class);
        List<PersistenceProvider> result = new ArrayList<>();
        if (serviceLoader != null) {
            for (PersistenceProvider provider1 : serviceLoader) {
                // persistence provider jar may contain multiple provider service implementations
                // save each provider
                PersistenceProviderResolverImpl.getInstance().addPersistenceProvider(provider1);
                result.add(provider1);
            }
        }
        return result;
    }","['public', 'static', 'List', '<', 'PersistenceProvider', '>', 'loadProviderModuleByName', '(', 'String', 'moduleName', ')', 'throws', 'ModuleLoadException', '{', 'final', 'ModuleLoader', 'moduleLoader', '=', 'Module', '.', 'getBootModuleLoader', '(', ')', ';', 'Module', 'module', '=', 'moduleLoader', '.', 'loadModule', '(', 'ModuleIdentifier', '.', 'fromString', '(', 'moduleName', ')', ')', ';', 'final', 'ServiceLoader', '<', 'PersistenceProvider', '>', 'serviceLoader', '=', 'module', '.', 'loadService', '(', 'PersistenceProvider', '.', 'class', ')', ';', 'List', '<', 'PersistenceProvider', '>', 'result', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'if', '(', 'serviceLoader', '!=', 'null', ')', '{', 'for', '(', 'PersistenceProvider', 'provider1', ':', 'serviceLoader', ')', '{', '// persistence provider jar may contain multiple provider service implementations', '// save each provider', 'PersistenceProviderResolverImpl', '.', 'getInstance', '(', ')', '.', 'addPersistenceProvider', '(', 'provider1', ')', ';', 'result', '.', 'add', '(', 'provider1', ')', ';', '}', '}', 'return', 'result', ';', '}']","Loads the specified JPA persistence provider module

@param moduleName is the static module to be loaded
@throws ModuleLoadException
@return list of persistence providers in specified module

Note: side effect of saving loaded persistence providers to static api in javax.persistence.spi.PersistenceProvider.","['Loads', 'the', 'specified', 'JPA', 'persistence', 'provider', 'module']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/jpa/subsystem/src/main/java/org/jboss/as/jpa/persistenceprovider/PersistenceProviderLoader.java#L63-L78,test
vigna/fastutil,src/it/unimi/dsi/fastutil/io/FastBufferedOutputStream.java,FastBufferedOutputStream.position,"@Override
	public void position(final long newPosition) throws IOException {
		flush();
		if (repositionableStream != null) repositionableStream.position(newPosition);
		else if (fileChannel != null) fileChannel.position(newPosition);
		else throw new UnsupportedOperationException(""position() can only be called if the underlying byte stream implements the RepositionableStream interface or if the getChannel() method of the underlying byte stream exists and returns a FileChannel"");
	}",java,"@Override
	public void position(final long newPosition) throws IOException {
		flush();
		if (repositionableStream != null) repositionableStream.position(newPosition);
		else if (fileChannel != null) fileChannel.position(newPosition);
		else throw new UnsupportedOperationException(""position() can only be called if the underlying byte stream implements the RepositionableStream interface or if the getChannel() method of the underlying byte stream exists and returns a FileChannel"");
	}","['@', 'Override', 'public', 'void', 'position', '(', 'final', 'long', 'newPosition', ')', 'throws', 'IOException', '{', 'flush', '(', ')', ';', 'if', '(', 'repositionableStream', '!=', 'null', ')', 'repositionableStream', '.', 'position', '(', 'newPosition', ')', ';', 'else', 'if', '(', 'fileChannel', '!=', 'null', ')', 'fileChannel', '.', 'position', '(', 'newPosition', ')', ';', 'else', 'throw', 'new', 'UnsupportedOperationException', '(', '""position() can only be called if the underlying byte stream implements the RepositionableStream interface or if the getChannel() method of the underlying byte stream exists and returns a FileChannel""', ')', ';', '}']","Repositions the stream.

<p>Note that this method performs a {@link #flush()} before changing the underlying stream position.","['Repositions', 'the', 'stream', '.']",192ce83affa4a6f2ad34a96c15b5f2ec2929cf1c,https://github.com/vigna/fastutil/blob/192ce83affa4a6f2ad34a96c15b5f2ec2929cf1c/src/it/unimi/dsi/fastutil/io/FastBufferedOutputStream.java#L194-L200,test
jcodec/jcodec,src/main/java/org/jcodec/movtool/InplaceMP4Editor.java,InplaceMP4Editor.modify,"public boolean modify(File file, MP4Edit edit) throws IOException {
        SeekableByteChannel fi = null;
        try {
            fi = NIOUtils.rwChannel(file);

            List<Tuple._2<Atom, ByteBuffer>> fragments = doTheFix(fi, edit);
            if (fragments == null)
                return false;

            // If everything is clean, only then actually writing stuff to the
            // file
            for (Tuple._2<Atom, ByteBuffer> fragment : fragments) {
                replaceBox(fi, fragment.v0, fragment.v1);
            }

            return true;
        } finally {
            NIOUtils.closeQuietly(fi);
        }
    }",java,"public boolean modify(File file, MP4Edit edit) throws IOException {
        SeekableByteChannel fi = null;
        try {
            fi = NIOUtils.rwChannel(file);

            List<Tuple._2<Atom, ByteBuffer>> fragments = doTheFix(fi, edit);
            if (fragments == null)
                return false;

            // If everything is clean, only then actually writing stuff to the
            // file
            for (Tuple._2<Atom, ByteBuffer> fragment : fragments) {
                replaceBox(fi, fragment.v0, fragment.v1);
            }

            return true;
        } finally {
            NIOUtils.closeQuietly(fi);
        }
    }","['public', 'boolean', 'modify', '(', 'File', 'file', ',', 'MP4Edit', 'edit', ')', 'throws', 'IOException', '{', 'SeekableByteChannel', 'fi', '=', 'null', ';', 'try', '{', 'fi', '=', 'NIOUtils', '.', 'rwChannel', '(', 'file', ')', ';', 'List', '<', 'Tuple', '.', '_2', '<', 'Atom', ',', 'ByteBuffer', '>', '>', 'fragments', '=', 'doTheFix', '(', 'fi', ',', 'edit', ')', ';', 'if', '(', 'fragments', '==', 'null', ')', 'return', 'false', ';', '// If everything is clean, only then actually writing stuff to the', '// file', 'for', '(', 'Tuple', '.', '_2', '<', 'Atom', ',', 'ByteBuffer', '>', 'fragment', ':', 'fragments', ')', '{', 'replaceBox', '(', 'fi', ',', 'fragment', '.', 'v0', ',', 'fragment', '.', 'v1', ')', ';', '}', 'return', 'true', ';', '}', 'finally', '{', 'NIOUtils', '.', 'closeQuietly', '(', 'fi', ')', ';', '}', '}']","Tries to modify movie header in place according to what's implemented in
the edit, the file gets pysically modified if the operation is
successful. No temporary file is created.

@param file
A file to be modified
@param edit
An edit to be carried out on a movie header
@return Whether or not edit was successful, i.e. was there enough place
to put the new header
@throws IOException
@throws Exception","['Tries', 'to', 'modify', 'movie', 'header', 'in', 'place', 'according', 'to', 'what', 's', 'implemented', 'in', 'the', 'edit', 'the', 'file', 'gets', 'pysically', 'modified', 'if', 'the', 'operation', 'is', 'successful', '.', 'No', 'temporary', 'file', 'is', 'created', '.']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/movtool/InplaceMP4Editor.java#L59-L78,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/sql/executor/OSelectExecutionPlanner.java,OSelectExecutionPlanner.buildIndexSearchDescriptorForFulltext,"private IndexSearchDescriptor buildIndexSearchDescriptorForFulltext(OCommandContext ctx, OIndex<?> index, OAndBlock block, OClass clazz) {
    List<String> indexFields = index.getDefinition().getFields();
    OBinaryCondition keyCondition = new OBinaryCondition(-1);
    OIdentifier key = new OIdentifier(""key"");
    keyCondition.setLeft(new OExpression(key));
    boolean found = false;

    OAndBlock blockCopy = block.copy();
    Iterator<OBooleanExpression> blockIterator;

    OAndBlock indexKeyValue = new OAndBlock(-1);
    IndexSearchDescriptor result = new IndexSearchDescriptor();
    result.idx = index;
    result.keyCondition = indexKeyValue;
    for (String indexField : indexFields) {
      blockIterator = blockCopy.getSubBlocks().iterator();
      boolean breakHere = false;
      boolean indexFieldFound = false;
      while (blockIterator.hasNext()) {
        OBooleanExpression singleExp = blockIterator.next();
        if (singleExp instanceof OContainsTextCondition) {
          OExpression left = ((OContainsTextCondition) singleExp).getLeft();
          if (left.isBaseIdentifier()) {
            String fieldName = left.getDefaultAlias().getStringValue();
            if (indexField.equals(fieldName)) {
              found = true;
              indexFieldFound = true;
              OContainsTextCondition condition = new OContainsTextCondition(-1);
              condition.setLeft(left);
              condition.setRight(((OContainsTextCondition) singleExp).getRight().copy());
              indexKeyValue.getSubBlocks().add(condition);
              blockIterator.remove();
              break;
            }
          }
        }
      }
      if (breakHere || !indexFieldFound) {
        break;
      }
    }

    if (result.keyCondition.getSubBlocks().size() < index.getDefinition().getFields().size() && !index
        .supportsOrderedIterations()) {
      //hash indexes do not support partial key match
      return null;
    }

    if (found) {
      result.remainingCondition = blockCopy;
      return result;
    }
    return null;
  }",java,"private IndexSearchDescriptor buildIndexSearchDescriptorForFulltext(OCommandContext ctx, OIndex<?> index, OAndBlock block, OClass clazz) {
    List<String> indexFields = index.getDefinition().getFields();
    OBinaryCondition keyCondition = new OBinaryCondition(-1);
    OIdentifier key = new OIdentifier(""key"");
    keyCondition.setLeft(new OExpression(key));
    boolean found = false;

    OAndBlock blockCopy = block.copy();
    Iterator<OBooleanExpression> blockIterator;

    OAndBlock indexKeyValue = new OAndBlock(-1);
    IndexSearchDescriptor result = new IndexSearchDescriptor();
    result.idx = index;
    result.keyCondition = indexKeyValue;
    for (String indexField : indexFields) {
      blockIterator = blockCopy.getSubBlocks().iterator();
      boolean breakHere = false;
      boolean indexFieldFound = false;
      while (blockIterator.hasNext()) {
        OBooleanExpression singleExp = blockIterator.next();
        if (singleExp instanceof OContainsTextCondition) {
          OExpression left = ((OContainsTextCondition) singleExp).getLeft();
          if (left.isBaseIdentifier()) {
            String fieldName = left.getDefaultAlias().getStringValue();
            if (indexField.equals(fieldName)) {
              found = true;
              indexFieldFound = true;
              OContainsTextCondition condition = new OContainsTextCondition(-1);
              condition.setLeft(left);
              condition.setRight(((OContainsTextCondition) singleExp).getRight().copy());
              indexKeyValue.getSubBlocks().add(condition);
              blockIterator.remove();
              break;
            }
          }
        }
      }
      if (breakHere || !indexFieldFound) {
        break;
      }
    }

    if (result.keyCondition.getSubBlocks().size() < index.getDefinition().getFields().size() && !index
        .supportsOrderedIterations()) {
      //hash indexes do not support partial key match
      return null;
    }

    if (found) {
      result.remainingCondition = blockCopy;
      return result;
    }
    return null;
  }","['private', 'IndexSearchDescriptor', 'buildIndexSearchDescriptorForFulltext', '(', 'OCommandContext', 'ctx', ',', 'OIndex', '<', '?', '>', 'index', ',', 'OAndBlock', 'block', ',', 'OClass', 'clazz', ')', '{', 'List', '<', 'String', '>', 'indexFields', '=', 'index', '.', 'getDefinition', '(', ')', '.', 'getFields', '(', ')', ';', 'OBinaryCondition', 'keyCondition', '=', 'new', 'OBinaryCondition', '(', '-', '1', ')', ';', 'OIdentifier', 'key', '=', 'new', 'OIdentifier', '(', '""key""', ')', ';', 'keyCondition', '.', 'setLeft', '(', 'new', 'OExpression', '(', 'key', ')', ')', ';', 'boolean', 'found', '=', 'false', ';', 'OAndBlock', 'blockCopy', '=', 'block', '.', 'copy', '(', ')', ';', 'Iterator', '<', 'OBooleanExpression', '>', 'blockIterator', ';', 'OAndBlock', 'indexKeyValue', '=', 'new', 'OAndBlock', '(', '-', '1', ')', ';', 'IndexSearchDescriptor', 'result', '=', 'new', 'IndexSearchDescriptor', '(', ')', ';', 'result', '.', 'idx', '=', 'index', ';', 'result', '.', 'keyCondition', '=', 'indexKeyValue', ';', 'for', '(', 'String', 'indexField', ':', 'indexFields', ')', '{', 'blockIterator', '=', 'blockCopy', '.', 'getSubBlocks', '(', ')', '.', 'iterator', '(', ')', ';', 'boolean', 'breakHere', '=', 'false', ';', 'boolean', 'indexFieldFound', '=', 'false', ';', 'while', '(', 'blockIterator', '.', 'hasNext', '(', ')', ')', '{', 'OBooleanExpression', 'singleExp', '=', 'blockIterator', '.', 'next', '(', ')', ';', 'if', '(', 'singleExp', 'instanceof', 'OContainsTextCondition', ')', '{', 'OExpression', 'left', '=', '(', '(', 'OContainsTextCondition', ')', 'singleExp', ')', '.', 'getLeft', '(', ')', ';', 'if', '(', 'left', '.', 'isBaseIdentifier', '(', ')', ')', '{', 'String', 'fieldName', '=', 'left', '.', 'getDefaultAlias', '(', ')', '.', 'getStringValue', '(', ')', ';', 'if', '(', 'indexField', '.', 'equals', '(', 'fieldName', ')', ')', '{', 'found', '=', 'true', ';', 'indexFieldFound', '=', 'true', ';', 'OContainsTextCondition', 'condition', '=', 'new', 'OContainsTextCondition', '(', '-', '1', ')', ';', 'condition', '.', 'setLeft', '(', 'left', ')', ';', 'condition', '.', 'setRight', '(', '(', '(', 'OContainsTextCondition', ')', 'singleExp', ')', '.', 'getRight', '(', ')', '.', 'copy', '(', ')', ')', ';', 'indexKeyValue', '.', 'getSubBlocks', '(', ')', '.', 'add', '(', 'condition', ')', ';', 'blockIterator', '.', 'remove', '(', ')', ';', 'break', ';', '}', '}', '}', '}', 'if', '(', 'breakHere', '||', '!', 'indexFieldFound', ')', '{', 'break', ';', '}', '}', 'if', '(', 'result', '.', 'keyCondition', '.', 'getSubBlocks', '(', ')', '.', 'size', '(', ')', '<', 'index', '.', 'getDefinition', '(', ')', '.', 'getFields', '(', ')', '.', 'size', '(', ')', '&&', '!', 'index', '.', 'supportsOrderedIterations', '(', ')', ')', '{', '//hash indexes do not support partial key match', 'return', 'null', ';', '}', 'if', '(', 'found', ')', '{', 'result', '.', 'remainingCondition', '=', 'blockCopy', ';', 'return', 'result', ';', '}', 'return', 'null', ';', '}']","given a full text index and a flat AND block, returns a descriptor on how to process it with an index (index, index key and additional
filters to apply after index fetch

@param ctx
@param index
@param block
@param clazz

@return","['given', 'a', 'full', 'text', 'index', 'and', 'a', 'flat', 'AND', 'block', 'returns', 'a', 'descriptor', 'on', 'how', 'to', 'process', 'it', 'with', 'an', 'index', '(', 'index', 'index', 'key', 'and', 'additional', 'filters', 'to', 'apply', 'after', 'index', 'fetch']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/sql/executor/OSelectExecutionPlanner.java#L2452-L2505,test
RestComm/jain-slee,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java,ActivityContextCacheData.nameBound,"public void nameBound(String name) {
		final Node node = getNamesBoundNode(true);
		if (!node.hasChild(name)) {
			node.addChild(Fqn.fromElements(name));
		}
	}",java,"public void nameBound(String name) {
		final Node node = getNamesBoundNode(true);
		if (!node.hasChild(name)) {
			node.addChild(Fqn.fromElements(name));
		}
	}","['public', 'void', 'nameBound', '(', 'String', 'name', ')', '{', 'final', 'Node', 'node', '=', 'getNamesBoundNode', '(', 'true', ')', ';', 'if', '(', '!', 'node', '.', 'hasChild', '(', 'name', ')', ')', '{', 'node', '.', 'addChild', '(', 'Fqn', '.', 'fromElements', '(', 'name', ')', ')', ';', '}', '}']","Adds the specified name to the set of names bound to the ac

@param name","['Adds', 'the', 'specified', 'name', 'to', 'the', 'set', 'of', 'names', 'bound', 'to', 'the', 'ac']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextCacheData.java#L301-L306,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/util/cache/FileCache.java,FileCache.release,"@Override
  public boolean release(FileCacheable ncfile) throws IOException {
    if (ncfile == null) return false;

    if (disabled.get()) {
      ncfile.setFileCache(null); // prevent infinite loops
      ncfile.close();
      return false;
    }

    // find it in the file cache
    CacheElement.CacheFile file = files.get(ncfile); // using hashCode of the FileCacheable
    if (file != null) {
      if (!file.isLocked.get()) {
        cacheLog.warn(""FileCache "" + name + "" release "" + ncfile.getLocation() + "" not locked; hash= ""+ncfile.hashCode());
      }
      file.lastAccessed = System.currentTimeMillis();
      file.countAccessed++;
      file.isLocked.set(false);
      file.ncfile.release();

      if (cacheLog.isDebugEnabled()) cacheLog.debug(""FileCache "" + name + "" release "" + ncfile.getLocation()+""; hash= ""+ncfile.hashCode());
      if (debugPrint) System.out.printf(""  FileCache %s release %s lock=%s count=%d%n"", name, ncfile.getLocation(), file.isLocked.get(), countLocked());
      return true;
    }
    return false;
    // throw new IOException(""FileCache "" + name + "" release does not have file in cache = "" + ncfile.getLocation());
  }",java,"@Override
  public boolean release(FileCacheable ncfile) throws IOException {
    if (ncfile == null) return false;

    if (disabled.get()) {
      ncfile.setFileCache(null); // prevent infinite loops
      ncfile.close();
      return false;
    }

    // find it in the file cache
    CacheElement.CacheFile file = files.get(ncfile); // using hashCode of the FileCacheable
    if (file != null) {
      if (!file.isLocked.get()) {
        cacheLog.warn(""FileCache "" + name + "" release "" + ncfile.getLocation() + "" not locked; hash= ""+ncfile.hashCode());
      }
      file.lastAccessed = System.currentTimeMillis();
      file.countAccessed++;
      file.isLocked.set(false);
      file.ncfile.release();

      if (cacheLog.isDebugEnabled()) cacheLog.debug(""FileCache "" + name + "" release "" + ncfile.getLocation()+""; hash= ""+ncfile.hashCode());
      if (debugPrint) System.out.printf(""  FileCache %s release %s lock=%s count=%d%n"", name, ncfile.getLocation(), file.isLocked.get(), countLocked());
      return true;
    }
    return false;
    // throw new IOException(""FileCache "" + name + "" release does not have file in cache = "" + ncfile.getLocation());
  }","['@', 'Override', 'public', 'boolean', 'release', '(', 'FileCacheable', 'ncfile', ')', 'throws', 'IOException', '{', 'if', '(', 'ncfile', '==', 'null', ')', 'return', 'false', ';', 'if', '(', 'disabled', '.', 'get', '(', ')', ')', '{', 'ncfile', '.', 'setFileCache', '(', 'null', ')', ';', '// prevent infinite loops\r', 'ncfile', '.', 'close', '(', ')', ';', 'return', 'false', ';', '}', '// find it in the file cache\r', 'CacheElement', '.', 'CacheFile', 'file', '=', 'files', '.', 'get', '(', 'ncfile', ')', ';', '// using hashCode of the FileCacheable\r', 'if', '(', 'file', '!=', 'null', ')', '{', 'if', '(', '!', 'file', '.', 'isLocked', '.', 'get', '(', ')', ')', '{', 'cacheLog', '.', 'warn', '(', '""FileCache ""', '+', 'name', '+', '"" release ""', '+', 'ncfile', '.', 'getLocation', '(', ')', '+', '"" not locked; hash= ""', '+', 'ncfile', '.', 'hashCode', '(', ')', ')', ';', '}', 'file', '.', 'lastAccessed', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'file', '.', 'countAccessed', '++', ';', 'file', '.', 'isLocked', '.', 'set', '(', 'false', ')', ';', 'file', '.', 'ncfile', '.', 'release', '(', ')', ';', 'if', '(', 'cacheLog', '.', 'isDebugEnabled', '(', ')', ')', 'cacheLog', '.', 'debug', '(', '""FileCache ""', '+', 'name', '+', '"" release ""', '+', 'ncfile', '.', 'getLocation', '(', ')', '+', '""; hash= ""', '+', 'ncfile', '.', 'hashCode', '(', ')', ')', ';', 'if', '(', 'debugPrint', ')', 'System', '.', 'out', '.', 'printf', '(', '""  FileCache %s release %s lock=%s count=%d%n""', ',', 'name', ',', 'ncfile', '.', 'getLocation', '(', ')', ',', 'file', '.', 'isLocked', '.', 'get', '(', ')', ',', 'countLocked', '(', ')', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '// throw new IOException(""FileCache "" + name + "" release does not have file in cache = "" + ncfile.getLocation());\r', '}']","Release the file. This unlocks it, updates its lastAccessed date.
Normally applications need not call this, just close the file as usual.
The FileCacheable has to do tricky stuff.

@param ncfile release this file.
@return true if file was in cache, false if it was not","['Release', 'the', 'file', '.', 'This', 'unlocks', 'it', 'updates', 'its', 'lastAccessed', 'date', '.', 'Normally', 'applications', 'need', 'not', 'call', 'this', 'just', 'close', 'the', 'file', 'as', 'usual', '.', 'The', 'FileCacheable', 'has', 'to', 'do', 'tricky', 'stuff', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/util/cache/FileCache.java#L416-L443,test
jboss/jboss-common-core,src/main/java/org/jboss/util/xml/catalog/Resolver.java,Resolver.resolveAllLocalSystem,"private Vector resolveAllLocalSystem(String systemId) {
	Vector map = new Vector();
	String osname = System.getProperty(""os.name"");
	boolean windows = (osname.indexOf(""Windows"") >= 0);
	Enumeration enumt = catalogEntries.elements();
	while (enumt.hasMoreElements()) {
	    CatalogEntry e = (CatalogEntry) enumt.nextElement();
	    if (e.getEntryType() == SYSTEM
		&& (e.getEntryArg(0).equals(systemId)
		    || (windows
			&& e.getEntryArg(0).equalsIgnoreCase(systemId)))) {
		map.addElement(e.getEntryArg(1));
	    }
	}
	if (map.size() == 0) {
	    return null;
	} else {
	    return map;
	}
    }",java,"private Vector resolveAllLocalSystem(String systemId) {
	Vector map = new Vector();
	String osname = System.getProperty(""os.name"");
	boolean windows = (osname.indexOf(""Windows"") >= 0);
	Enumeration enumt = catalogEntries.elements();
	while (enumt.hasMoreElements()) {
	    CatalogEntry e = (CatalogEntry) enumt.nextElement();
	    if (e.getEntryType() == SYSTEM
		&& (e.getEntryArg(0).equals(systemId)
		    || (windows
			&& e.getEntryArg(0).equalsIgnoreCase(systemId)))) {
		map.addElement(e.getEntryArg(1));
	    }
	}
	if (map.size() == 0) {
	    return null;
	} else {
	    return map;
	}
    }","['private', 'Vector', 'resolveAllLocalSystem', '(', 'String', 'systemId', ')', '{', 'Vector', 'map', '=', 'new', 'Vector', '(', ')', ';', 'String', 'osname', '=', 'System', '.', 'getProperty', '(', '""os.name""', ')', ';', 'boolean', 'windows', '=', '(', 'osname', '.', 'indexOf', '(', '""Windows""', ')', '>=', '0', ')', ';', 'Enumeration', 'enumt', '=', 'catalogEntries', '.', 'elements', '(', ')', ';', 'while', '(', 'enumt', '.', 'hasMoreElements', '(', ')', ')', '{', 'CatalogEntry', 'e', '=', '(', 'CatalogEntry', ')', 'enumt', '.', 'nextElement', '(', ')', ';', 'if', '(', 'e', '.', 'getEntryType', '(', ')', '==', 'SYSTEM', '&&', '(', 'e', '.', 'getEntryArg', '(', '0', ')', '.', 'equals', '(', 'systemId', ')', '||', '(', 'windows', '&&', 'e', '.', 'getEntryArg', '(', '0', ')', '.', 'equalsIgnoreCase', '(', 'systemId', ')', ')', ')', ')', '{', 'map', '.', 'addElement', '(', 'e', '.', 'getEntryArg', '(', '1', ')', ')', ';', '}', '}', 'if', '(', 'map', '.', 'size', '(', ')', '==', '0', ')', '{', 'return', 'null', ';', '}', 'else', '{', 'return', 'map', ';', '}', '}']","Return all applicable SYSTEM system identifiers in this
catalog.

<p>If one or more SYSTEM entries exists in the catalog file
for the system ID specified, return the mapped values.</p>

@param systemId The system ID to locate in the catalog

@return A vector of the mapped system identifiers or null","['Return', 'all', 'applicable', 'SYSTEM', 'system', 'identifiers', 'in', 'this', 'catalog', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/Resolver.java#L531-L550,test
lessthanoptimal/GeoRegression,main/src/georegression/geometry/UtilVector2D_F64.java,UtilVector2D_F64.identicalSign,"public static boolean identicalSign( double xa , double ya , double xb , double yb , double tol ) {
		double dx0 = xb-xa;
		double dy0 = yb-ya;
		double dx1 = xb+xa;
		double dy1 = yb+ya;


		double error0 = dx0*dx0 + dy0*dy0;
		double error1 = dx1*dx1 + dy1*dy1;

		if( error0 < error1 ) {
			return error0 <= tol*tol;
		} else {
			return error1 <= tol*tol;
		}

	}",java,"public static boolean identicalSign( double xa , double ya , double xb , double yb , double tol ) {
		double dx0 = xb-xa;
		double dy0 = yb-ya;
		double dx1 = xb+xa;
		double dy1 = yb+ya;


		double error0 = dx0*dx0 + dy0*dy0;
		double error1 = dx1*dx1 + dy1*dy1;

		if( error0 < error1 ) {
			return error0 <= tol*tol;
		} else {
			return error1 <= tol*tol;
		}

	}","['public', 'static', 'boolean', 'identicalSign', '(', 'double', 'xa', ',', 'double', 'ya', ',', 'double', 'xb', ',', 'double', 'yb', ',', 'double', 'tol', ')', '{', 'double', 'dx0', '=', 'xb', '-', 'xa', ';', 'double', 'dy0', '=', 'yb', '-', 'ya', ';', 'double', 'dx1', '=', 'xb', '+', 'xa', ';', 'double', 'dy1', '=', 'yb', '+', 'ya', ';', 'double', 'error0', '=', 'dx0', '*', 'dx0', '+', 'dy0', '*', 'dy0', ';', 'double', 'error1', '=', 'dx1', '*', 'dx1', '+', 'dy1', '*', 'dy1', ';', 'if', '(', 'error0', '<', 'error1', ')', '{', 'return', 'error0', '<=', 'tol', '*', 'tol', ';', '}', 'else', '{', 'return', 'error1', '<=', 'tol', '*', 'tol', ';', '}', '}']","Tests to see if the two vectors are identical up to a sign difference
@param xa x-component of vector 'a'
@param ya y-component of vector 'a'
@param xb x-component of vector 'b'
@param yb y-component of vector 'b'
@param tol Tolerance in Euclidan distance
@return true if identical to within tolerance and a sign ambiguity","['Tests', 'to', 'see', 'if', 'the', 'two', 'vectors', 'are', 'identical', 'up', 'to', 'a', 'sign', 'difference']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/geometry/UtilVector2D_F64.java#L87-L103,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CommandUtility.java,CommandUtility.removeSingleRowInSheet,"private static void removeSingleRowInSheet(final Sheet sheet,
			final int rowIndexStart) {
		Row removingRow = sheet.getRow(rowIndexStart);
		if (removingRow != null) {
			sheet.removeRow(removingRow);
		}
	}",java,"private static void removeSingleRowInSheet(final Sheet sheet,
			final int rowIndexStart) {
		Row removingRow = sheet.getRow(rowIndexStart);
		if (removingRow != null) {
			sheet.removeRow(removingRow);
		}
	}","['private', 'static', 'void', 'removeSingleRowInSheet', '(', 'final', 'Sheet', 'sheet', ',', 'final', 'int', 'rowIndexStart', ')', '{', 'Row', 'removingRow', '=', 'sheet', '.', 'getRow', '(', 'rowIndexStart', ')', ';', 'if', '(', 'removingRow', '!=', 'null', ')', '{', 'sheet', '.', 'removeRow', '(', 'removingRow', ')', ';', '}', '}']","Removes the single row in sheet.

@param sheet
the sheet
@param rowIndexStart
the row index start","['Removes', 'the', 'single', 'row', 'in', 'sheet', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CommandUtility.java#L760-L766,test
signalfx/appd-integration,appd-client/src/main/java/com/signalfx/appd/client/MetricDataRequest.java,MetricDataRequest.getQueryString,"protected Map<String, Object> getQueryString() {
        Map<String, Object> qs = new HashMap<>();
        if (timeParams != null) {
            qs.put(""time-range-type"", timeParams.type);
            if (timeParams.duration > 0) {
                qs.put(""duration-in-mins"", timeParams.duration);
            }
            if (timeParams.startTime > 0) {
                qs.put(""start-time"", timeParams.startTime);
            }
            if (timeParams.endTime > 0) {
                qs.put(""end-time"", timeParams.endTime);
            }
        }
        qs.put(""rollup"", false);
        if (metricPath != null) {
            qs.put(""metric-path"", metricPath);
        }
        return qs;
    }",java,"protected Map<String, Object> getQueryString() {
        Map<String, Object> qs = new HashMap<>();
        if (timeParams != null) {
            qs.put(""time-range-type"", timeParams.type);
            if (timeParams.duration > 0) {
                qs.put(""duration-in-mins"", timeParams.duration);
            }
            if (timeParams.startTime > 0) {
                qs.put(""start-time"", timeParams.startTime);
            }
            if (timeParams.endTime > 0) {
                qs.put(""end-time"", timeParams.endTime);
            }
        }
        qs.put(""rollup"", false);
        if (metricPath != null) {
            qs.put(""metric-path"", metricPath);
        }
        return qs;
    }","['protected', 'Map', '<', 'String', ',', 'Object', '>', 'getQueryString', '(', ')', '{', 'Map', '<', 'String', ',', 'Object', '>', 'qs', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'if', '(', 'timeParams', '!=', 'null', ')', '{', 'qs', '.', 'put', '(', '""time-range-type""', ',', 'timeParams', '.', 'type', ')', ';', 'if', '(', 'timeParams', '.', 'duration', '>', '0', ')', '{', 'qs', '.', 'put', '(', '""duration-in-mins""', ',', 'timeParams', '.', 'duration', ')', ';', '}', 'if', '(', 'timeParams', '.', 'startTime', '>', '0', ')', '{', 'qs', '.', 'put', '(', '""start-time""', ',', 'timeParams', '.', 'startTime', ')', ';', '}', 'if', '(', 'timeParams', '.', 'endTime', '>', '0', ')', '{', 'qs', '.', 'put', '(', '""end-time""', ',', 'timeParams', '.', 'endTime', ')', ';', '}', '}', 'qs', '.', 'put', '(', '""rollup""', ',', 'false', ')', ';', 'if', '(', 'metricPath', '!=', 'null', ')', '{', 'qs', '.', 'put', '(', '""metric-path""', ',', 'metricPath', ')', ';', '}', 'return', 'qs', ';', '}']","Generate querystring for the request.

@return map of query strings.","['Generate', 'querystring', 'for', 'the', 'request', '.']",f87d4d75f28a0e8f4722f4b3087522cedf63cf22,https://github.com/signalfx/appd-integration/blob/f87d4d75f28a0e8f4722f4b3087522cedf63cf22/appd-client/src/main/java/com/signalfx/appd/client/MetricDataRequest.java#L122-L141,test
stanfy/enroscar,extras/audio/src/main/java/com/stanfy/enroscar/audio/audio/StreamingPlaybackController.java,StreamingPlaybackController.unbind,"protected final void unbind() {
    if (streamingPlayback != null) { dropListener(); }
    try {
      context.unbindService(serviceConnection);
    } catch (final RuntimeException e) {
      if (DEBUG) { Log.w(TAG, ""Cannot unbind radio"", e); }
    }
    bindRequested = false;
  }",java,"protected final void unbind() {
    if (streamingPlayback != null) { dropListener(); }
    try {
      context.unbindService(serviceConnection);
    } catch (final RuntimeException e) {
      if (DEBUG) { Log.w(TAG, ""Cannot unbind radio"", e); }
    }
    bindRequested = false;
  }","['protected', 'final', 'void', 'unbind', '(', ')', '{', 'if', '(', 'streamingPlayback', '!=', 'null', ')', '{', 'dropListener', '(', ')', ';', '}', 'try', '{', 'context', '.', 'unbindService', '(', 'serviceConnection', ')', ';', '}', 'catch', '(', 'final', 'RuntimeException', 'e', ')', '{', 'if', '(', 'DEBUG', ')', '{', 'Log', '.', 'w', '(', 'TAG', ',', '""Cannot unbind radio""', ',', 'e', ')', ';', '}', '}', 'bindRequested', '=', 'false', ';', '}']",Unbind from the streaming service.,"['Unbind', 'from', 'the', 'streaming', 'service', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/extras/audio/src/main/java/com/stanfy/enroscar/audio/audio/StreamingPlaybackController.java#L221-L229,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/service/WebSheetLoader.java,WebSheetLoader.prepareWorkShee,"public final void prepareWorkShee(final String tabName) {

		int tabIndex = findTabIndexWithName(tabName);
		if (parent.getWebFormTabView() != null) {
			parent.getWebFormTabView().setActiveIndex(tabIndex);
		}
		parent.getCurrent().setCurrentTabName(tabName);
		String sheetName = parent.getSheetConfigMap().get(tabName).getSheetName();
		Sheet sheet1 = parent.getWb().getSheet(sheetName);
		parent.getWb().setActiveSheet(parent.getWb().getSheetIndex(sheet1));

		SheetConfiguration sheetConfig = parent.getSheetConfigMap().get(tabName);

		parent.setMaxRowsPerPage(parent.getSheetConfigMap().get(tabName).getMaxRowPerPage());
		parent.setBodyAllowAddRows(parent.getSheetConfigMap().get(tabName).isBodyAllowAddRows());

		// populate repeat rows before setup cell range map

		Map<String, CellRangeAddress> cellRangeMap = ConfigurationUtility.indexMergedRegion(sheet1);
		List<String> skippedRegionCells = ConfigurationUtility.skippedRegionCells(sheet1);
		loadHeaderRows(sheetConfig, cellRangeMap, skippedRegionCells);
		loadBodyRows(sheetConfig, cellRangeMap, skippedRegionCells);
	}",java,"public final void prepareWorkShee(final String tabName) {

		int tabIndex = findTabIndexWithName(tabName);
		if (parent.getWebFormTabView() != null) {
			parent.getWebFormTabView().setActiveIndex(tabIndex);
		}
		parent.getCurrent().setCurrentTabName(tabName);
		String sheetName = parent.getSheetConfigMap().get(tabName).getSheetName();
		Sheet sheet1 = parent.getWb().getSheet(sheetName);
		parent.getWb().setActiveSheet(parent.getWb().getSheetIndex(sheet1));

		SheetConfiguration sheetConfig = parent.getSheetConfigMap().get(tabName);

		parent.setMaxRowsPerPage(parent.getSheetConfigMap().get(tabName).getMaxRowPerPage());
		parent.setBodyAllowAddRows(parent.getSheetConfigMap().get(tabName).isBodyAllowAddRows());

		// populate repeat rows before setup cell range map

		Map<String, CellRangeAddress> cellRangeMap = ConfigurationUtility.indexMergedRegion(sheet1);
		List<String> skippedRegionCells = ConfigurationUtility.skippedRegionCells(sheet1);
		loadHeaderRows(sheetConfig, cellRangeMap, skippedRegionCells);
		loadBodyRows(sheetConfig, cellRangeMap, skippedRegionCells);
	}","['public', 'final', 'void', 'prepareWorkShee', '(', 'final', 'String', 'tabName', ')', '{', 'int', 'tabIndex', '=', 'findTabIndexWithName', '(', 'tabName', ')', ';', 'if', '(', 'parent', '.', 'getWebFormTabView', '(', ')', '!=', 'null', ')', '{', 'parent', '.', 'getWebFormTabView', '(', ')', '.', 'setActiveIndex', '(', 'tabIndex', ')', ';', '}', 'parent', '.', 'getCurrent', '(', ')', '.', 'setCurrentTabName', '(', 'tabName', ')', ';', 'String', 'sheetName', '=', 'parent', '.', 'getSheetConfigMap', '(', ')', '.', 'get', '(', 'tabName', ')', '.', 'getSheetName', '(', ')', ';', 'Sheet', 'sheet1', '=', 'parent', '.', 'getWb', '(', ')', '.', 'getSheet', '(', 'sheetName', ')', ';', 'parent', '.', 'getWb', '(', ')', '.', 'setActiveSheet', '(', 'parent', '.', 'getWb', '(', ')', '.', 'getSheetIndex', '(', 'sheet1', ')', ')', ';', 'SheetConfiguration', 'sheetConfig', '=', 'parent', '.', 'getSheetConfigMap', '(', ')', '.', 'get', '(', 'tabName', ')', ';', 'parent', '.', 'setMaxRowsPerPage', '(', 'parent', '.', 'getSheetConfigMap', '(', ')', '.', 'get', '(', 'tabName', ')', '.', 'getMaxRowPerPage', '(', ')', ')', ';', 'parent', '.', 'setBodyAllowAddRows', '(', 'parent', '.', 'getSheetConfigMap', '(', ')', '.', 'get', '(', 'tabName', ')', '.', 'isBodyAllowAddRows', '(', ')', ')', ';', '// populate repeat rows before setup cell range map\r', 'Map', '<', 'String', ',', 'CellRangeAddress', '>', 'cellRangeMap', '=', 'ConfigurationUtility', '.', 'indexMergedRegion', '(', 'sheet1', ')', ';', 'List', '<', 'String', '>', 'skippedRegionCells', '=', 'ConfigurationUtility', '.', 'skippedRegionCells', '(', 'sheet1', ')', ';', 'loadHeaderRows', '(', 'sheetConfig', ',', 'cellRangeMap', ',', 'skippedRegionCells', ')', ';', 'loadBodyRows', '(', 'sheetConfig', ',', 'cellRangeMap', ',', 'skippedRegionCells', ')', ';', '}']","prepare worksheet for loading.
this only load at backend without refresh gui.

@param tabName the tab name","['prepare', 'worksheet', 'for', 'loading', '.', 'this', 'only', 'load', 'at', 'backend', 'without', 'refresh', 'gui', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/service/WebSheetLoader.java#L555-L577,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/BroadcasterPlaylist.java,BroadcasterPlaylist.createPlaylistRequest,"public static BroadcasterPlaylist createPlaylistRequest(Identification provider, String playlistName) {
        HashMap<String, Object> hashMap = new HashMap<>();
        hashMap.put(RESOURCE_ID, playlistName);
        return new BroadcasterPlaylist(provider, hashMap);
    }",java,"public static BroadcasterPlaylist createPlaylistRequest(Identification provider, String playlistName) {
        HashMap<String, Object> hashMap = new HashMap<>();
        hashMap.put(RESOURCE_ID, playlistName);
        return new BroadcasterPlaylist(provider, hashMap);
    }","['public', 'static', 'BroadcasterPlaylist', 'createPlaylistRequest', '(', 'Identification', 'provider', ',', 'String', 'playlistName', ')', '{', 'HashMap', '<', 'String', ',', 'Object', '>', 'hashMap', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'hashMap', '.', 'put', '(', 'RESOURCE_ID', ',', 'playlistName', ')', ';', 'return', 'new', 'BroadcasterPlaylist', '(', 'provider', ',', 'hashMap', ')', ';', '}']","creates the Playlist-Request
@param provider the provider of the playlist
@param playlistName the name of the playlist
@return the resource","['creates', 'the', 'Playlist', '-', 'Request']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/BroadcasterPlaylist.java#L76-L80,test
boonproject/boon,boon/src/main/java/org/boon/Maps.java,Maps.valueIn,"public static <K, V> boolean valueIn( V value, Map<K, V> map ) {
        return map.containsValue( value );
    }",java,"public static <K, V> boolean valueIn( V value, Map<K, V> map ) {
        return map.containsValue( value );
    }","['public', 'static', '<', 'K', ',', 'V', '>', 'boolean', 'valueIn', '(', 'V', 'value', ',', 'Map', '<', 'K', ',', 'V', '>', 'map', ')', '{', 'return', 'map', '.', 'containsValue', '(', 'value', ')', ';', '}']",End universal methods.,"['End', 'universal', 'methods', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/Maps.java#L281-L283,test
jcodec/jcodec,src/main/java/net/sourceforge/jaad/aac/error/BitsBuffer.java,BitsBuffer.concatBits,"public void concatBits(BitsBuffer a) {
		if(a.len==0) return;
		int al = a.bufa;
		int ah = a.bufb;

		int bl, bh;
		if(len>32) {
			//mask off superfluous high b bits
			bl = bufa;
			bh = bufb&((1<<(len-32))-1);
			//left shift a len bits
			ah = al<<(len-32);
			al = 0;
		}
		else {
			bl = bufa&((1<<(len))-1);
			bh = 0;
			ah = (ah<<(len))|(al>>(32-len));
			al = al<<len;
		}

		//merge
		bufa = bl|al;
		bufb = bh|ah;

		len += a.len;
	}",java,"public void concatBits(BitsBuffer a) {
		if(a.len==0) return;
		int al = a.bufa;
		int ah = a.bufb;

		int bl, bh;
		if(len>32) {
			//mask off superfluous high b bits
			bl = bufa;
			bh = bufb&((1<<(len-32))-1);
			//left shift a len bits
			ah = al<<(len-32);
			al = 0;
		}
		else {
			bl = bufa&((1<<(len))-1);
			bh = 0;
			ah = (ah<<(len))|(al>>(32-len));
			al = al<<len;
		}

		//merge
		bufa = bl|al;
		bufb = bh|ah;

		len += a.len;
	}","['public', 'void', 'concatBits', '(', 'BitsBuffer', 'a', ')', '{', 'if', '(', 'a', '.', 'len', '==', '0', ')', 'return', ';', 'int', 'al', '=', 'a', '.', 'bufa', ';', 'int', 'ah', '=', 'a', '.', 'bufb', ';', 'int', 'bl', ',', 'bh', ';', 'if', '(', 'len', '>', '32', ')', '{', '//mask off superfluous high b bits', 'bl', '=', 'bufa', ';', 'bh', '=', 'bufb', '&', '(', '(', '1', '<<', '(', 'len', '-', '32', ')', ')', '-', '1', ')', ';', '//left shift a len bits', 'ah', '=', 'al', '<<', '(', 'len', '-', '32', ')', ';', 'al', '=', '0', ';', '}', 'else', '{', 'bl', '=', 'bufa', '&', '(', '(', '1', '<<', '(', 'len', ')', ')', '-', '1', ')', ';', 'bh', '=', '0', ';', 'ah', '=', '(', 'ah', '<<', '(', 'len', ')', ')', '|', '(', 'al', '>>', '(', '32', '-', 'len', ')', ')', ';', 'al', '=', 'al', '<<', 'len', ';', '}', '//merge', 'bufa', '=', 'bl', '|', 'al', ';', 'bufb', '=', 'bh', '|', 'ah', ';', 'len', '+=', 'a', '.', 'len', ';', '}']",merge bits of a to b,"['merge', 'bits', 'of', 'a', 'to', 'b']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/net/sourceforge/jaad/aac/error/BitsBuffer.java#L74-L100,test
real-logic/aeron,aeron-client/src/main/java/io/aeron/logbuffer/FrameDescriptor.java,FrameDescriptor.frameTermId,"public static void frameTermId(final UnsafeBuffer buffer, final int termOffset, final int termId)
    {
        buffer.putInt(termIdOffset(termOffset), termId, LITTLE_ENDIAN);
    }",java,"public static void frameTermId(final UnsafeBuffer buffer, final int termOffset, final int termId)
    {
        buffer.putInt(termIdOffset(termOffset), termId, LITTLE_ENDIAN);
    }","['public', 'static', 'void', 'frameTermId', '(', 'final', 'UnsafeBuffer', 'buffer', ',', 'final', 'int', 'termOffset', ',', 'final', 'int', 'termId', ')', '{', 'buffer', '.', 'putInt', '(', 'termIdOffset', '(', 'termOffset', ')', ',', 'termId', ',', 'LITTLE_ENDIAN', ')', ';', '}']","Write the term id field for a frame.

@param buffer     containing the frame.
@param termOffset at which a frame begins.
@param termId     value for the frame.","['Write', 'the', 'term', 'id', 'field', 'for', 'a', 'frame', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-client/src/main/java/io/aeron/logbuffer/FrameDescriptor.java#L325-L328,test
jcodec/jcodec,src/main/java/org/jcodec/containers/mp4/QTTimeUtil.java,QTTimeUtil.qtPlayerFrameNo,"public static int qtPlayerFrameNo(MovieBox movie, int mediaFrameNo) {
        TrakBox videoTrack = movie.getVideoTrack();

        long editedTv = mediaToEdited(videoTrack, frameToTimevalue(videoTrack, mediaFrameNo), movie.getTimescale());

        return tv2QTFrameNo(movie, editedTv);
    }",java,"public static int qtPlayerFrameNo(MovieBox movie, int mediaFrameNo) {
        TrakBox videoTrack = movie.getVideoTrack();

        long editedTv = mediaToEdited(videoTrack, frameToTimevalue(videoTrack, mediaFrameNo), movie.getTimescale());

        return tv2QTFrameNo(movie, editedTv);
    }","['public', 'static', 'int', 'qtPlayerFrameNo', '(', 'MovieBox', 'movie', ',', 'int', 'mediaFrameNo', ')', '{', 'TrakBox', 'videoTrack', '=', 'movie', '.', 'getVideoTrack', '(', ')', ';', 'long', 'editedTv', '=', 'mediaToEdited', '(', 'videoTrack', ',', 'frameToTimevalue', '(', 'videoTrack', ',', 'mediaFrameNo', ')', ',', 'movie', '.', 'getTimescale', '(', ')', ')', ';', 'return', 'tv2QTFrameNo', '(', 'movie', ',', 'editedTv', ')', ';', '}']","Calculates frame number as it shows in quicktime player

@param movie
@param mediaFrameNo
@return","['Calculates', 'frame', 'number', 'as', 'it', 'shows', 'in', 'quicktime', 'player']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/containers/mp4/QTTimeUtil.java#L145-L151,test
rackerlabs/blueflood,blueflood-cloudfiles/src/main/java/com/rackspacecloud/blueflood/outputs/cloudfiles/RollupFile.java,RollupFile.getRemoteName,"public String getRemoteName() {
        Date time = new Date(timestamp);
        String formattedTime = new SimpleDateFormat(""yyyyMMdd_"").format(time);
        return formattedTime + System.currentTimeMillis() + ""_"" + Configuration.getInstance().getStringProperty(CloudfilesConfig.CLOUDFILES_HOST_UNIQUE_IDENTIFIER);
    }",java,"public String getRemoteName() {
        Date time = new Date(timestamp);
        String formattedTime = new SimpleDateFormat(""yyyyMMdd_"").format(time);
        return formattedTime + System.currentTimeMillis() + ""_"" + Configuration.getInstance().getStringProperty(CloudfilesConfig.CLOUDFILES_HOST_UNIQUE_IDENTIFIER);
    }","['public', 'String', 'getRemoteName', '(', ')', '{', 'Date', 'time', '=', 'new', 'Date', '(', 'timestamp', ')', ';', 'String', 'formattedTime', '=', 'new', 'SimpleDateFormat', '(', '""yyyyMMdd_""', ')', '.', 'format', '(', 'time', ')', ';', 'return', 'formattedTime', '+', 'System', '.', 'currentTimeMillis', '(', ')', '+', '""_""', '+', 'Configuration', '.', 'getInstance', '(', ')', '.', 'getStringProperty', '(', 'CloudfilesConfig', '.', 'CLOUDFILES_HOST_UNIQUE_IDENTIFIER', ')', ';', '}']","Get the remote file name.

@return The path to the remote file.","['Get', 'the', 'remote', 'file', 'name', '.']",4722a3449b1a7f8e88889ea8c340c6f24396b5b0,https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-cloudfiles/src/main/java/com/rackspacecloud/blueflood/outputs/cloudfiles/RollupFile.java#L68-L72,test
streamsets/datacollector,container/src/main/java/com/streamsets/datacollector/definition/ConfigValueExtractor.java,ConfigValueExtractor.extractAsRuntime,"private Object extractAsRuntime(Field field, String valueStr) {
     if (field.getType() == Byte.TYPE || field.getType() == Byte.class ||
         field.getType() == Short.TYPE || field.getType() == Short.class ||
         field.getType() == Integer.TYPE || field.getType() == Integer.class ||
         field.getType() == Long.TYPE || field.getType() == Long.class ||
         field.getType() == Float.TYPE || field.getType() == Float.class ||
         field.getType() == Double.TYPE || field.getType() == Double.class) {
       return extractAsNumber(field, valueStr);
    } else if (String.class.isAssignableFrom(field.getType())) {
       return valueStr;
    }

    throw new IllegalArgumentException(Utils.format(""Invalid type for RUNTIME type: {}"", field.getType()));
  }",java,"private Object extractAsRuntime(Field field, String valueStr) {
     if (field.getType() == Byte.TYPE || field.getType() == Byte.class ||
         field.getType() == Short.TYPE || field.getType() == Short.class ||
         field.getType() == Integer.TYPE || field.getType() == Integer.class ||
         field.getType() == Long.TYPE || field.getType() == Long.class ||
         field.getType() == Float.TYPE || field.getType() == Float.class ||
         field.getType() == Double.TYPE || field.getType() == Double.class) {
       return extractAsNumber(field, valueStr);
    } else if (String.class.isAssignableFrom(field.getType())) {
       return valueStr;
    }

    throw new IllegalArgumentException(Utils.format(""Invalid type for RUNTIME type: {}"", field.getType()));
  }","['private', 'Object', 'extractAsRuntime', '(', 'Field', 'field', ',', 'String', 'valueStr', ')', '{', 'if', '(', 'field', '.', 'getType', '(', ')', '==', 'Byte', '.', 'TYPE', '||', 'field', '.', 'getType', '(', ')', '==', 'Byte', '.', 'class', '||', 'field', '.', 'getType', '(', ')', '==', 'Short', '.', 'TYPE', '||', 'field', '.', 'getType', '(', ')', '==', 'Short', '.', 'class', '||', 'field', '.', 'getType', '(', ')', '==', 'Integer', '.', 'TYPE', '||', 'field', '.', 'getType', '(', ')', '==', 'Integer', '.', 'class', '||', 'field', '.', 'getType', '(', ')', '==', 'Long', '.', 'TYPE', '||', 'field', '.', 'getType', '(', ')', '==', 'Long', '.', 'class', '||', 'field', '.', 'getType', '(', ')', '==', 'Float', '.', 'TYPE', '||', 'field', '.', 'getType', '(', ')', '==', 'Float', '.', 'class', '||', 'field', '.', 'getType', '(', ')', '==', 'Double', '.', 'TYPE', '||', 'field', '.', 'getType', '(', ')', '==', 'Double', '.', 'class', ')', '{', 'return', 'extractAsNumber', '(', 'field', ',', 'valueStr', ')', ';', '}', 'else', 'if', '(', 'String', '.', 'class', '.', 'isAssignableFrom', '(', 'field', '.', 'getType', '(', ')', ')', ')', '{', 'return', 'valueStr', ';', '}', 'throw', 'new', 'IllegalArgumentException', '(', 'Utils', '.', 'format', '(', '""Invalid type for RUNTIME type: {}""', ',', 'field', '.', 'getType', '(', ')', ')', ')', ';', '}']",RUNTIME supports only Numeric types and String at the moment,"['RUNTIME', 'supports', 'only', 'Numeric', 'types', 'and', 'String', 'at', 'the', 'moment']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/definition/ConfigValueExtractor.java#L249-L262,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm/AsmUtil.java,AsmUtil.typeToTyperef,"public static String typeToTyperef(final Class type) {
		if (!type.isArray()) {
			if (!type.isPrimitive()) {
				return 'L' + typeToSignature(type) + ';';
			}
			if (type == int.class) {
				return ""I"";
			}
			if (type == long.class) {
				return ""J"";
			}
			if (type == boolean.class) {
				return ""Z"";
			}
			if (type == double.class) {
				return ""D"";
			}
			if (type == float.class) {
				return ""F"";
			}
			if (type == short.class) {
				return ""S"";
			}
			if (type == void.class) {
				return ""V"";
			}
			if (type == byte.class) {
				return ""B"";
			}
			if (type == char.class) {
				return ""C"";
			}
		}

		return type.getName();
	}",java,"public static String typeToTyperef(final Class type) {
		if (!type.isArray()) {
			if (!type.isPrimitive()) {
				return 'L' + typeToSignature(type) + ';';
			}
			if (type == int.class) {
				return ""I"";
			}
			if (type == long.class) {
				return ""J"";
			}
			if (type == boolean.class) {
				return ""Z"";
			}
			if (type == double.class) {
				return ""D"";
			}
			if (type == float.class) {
				return ""F"";
			}
			if (type == short.class) {
				return ""S"";
			}
			if (type == void.class) {
				return ""V"";
			}
			if (type == byte.class) {
				return ""B"";
			}
			if (type == char.class) {
				return ""C"";
			}
		}

		return type.getName();
	}","['public', 'static', 'String', 'typeToTyperef', '(', 'final', 'Class', 'type', ')', '{', 'if', '(', '!', 'type', '.', 'isArray', '(', ')', ')', '{', 'if', '(', '!', 'type', '.', 'isPrimitive', '(', ')', ')', '{', 'return', ""'"", ""'"", '+', 'typeToSignature', '(', 'type', ')', '+', ""'"", ""'"", ';', '}', 'if', '(', 'type', '==', 'int', '.', 'class', ')', '{', 'return', '""I""', ';', '}', 'if', '(', 'type', '==', 'long', '.', 'class', ')', '{', 'return', '""J""', ';', '}', 'if', '(', 'type', '==', 'boolean', '.', 'class', ')', '{', 'return', '""Z""', ';', '}', 'if', '(', 'type', '==', 'double', '.', 'class', ')', '{', 'return', '""D""', ';', '}', 'if', '(', 'type', '==', 'float', '.', 'class', ')', '{', 'return', '""F""', ';', '}', 'if', '(', 'type', '==', 'short', '.', 'class', ')', '{', 'return', '""S""', ';', '}', 'if', '(', 'type', '==', 'void', '.', 'class', ')', '{', 'return', '""V""', ';', '}', 'if', '(', 'type', '==', 'byte', '.', 'class', ')', '{', 'return', '""B""', ';', '}', 'if', '(', 'type', '==', 'char', '.', 'class', ')', '{', 'return', '""C""', ';', '}', '}', 'return', 'type', '.', 'getName', '(', ')', ';', '}']",Converts type to byteccode type ref.,"['Converts', 'type', 'to', 'byteccode', 'type', 'ref', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm/AsmUtil.java#L276-L311,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java,CommandResource.verifyCommand,"public static boolean verifyCommand(String command) {
        return command.equals(PLAY) ||
                command.equals(PAUSE) ||
                command.equals(STOP) ||
                command.equals(SELECT_TRACK) ||
                command.equals(NEXT) ||
                command.equals(PREVIOUS) ||
                command.equals(CHANGE_PLAYBACK) ||
                command.equals(CHANGE_VOLUME);
    }",java,"public static boolean verifyCommand(String command) {
        return command.equals(PLAY) ||
                command.equals(PAUSE) ||
                command.equals(STOP) ||
                command.equals(SELECT_TRACK) ||
                command.equals(NEXT) ||
                command.equals(PREVIOUS) ||
                command.equals(CHANGE_PLAYBACK) ||
                command.equals(CHANGE_VOLUME);
    }","['public', 'static', 'boolean', 'verifyCommand', '(', 'String', 'command', ')', '{', 'return', 'command', '.', 'equals', '(', 'PLAY', ')', '||', 'command', '.', 'equals', '(', 'PAUSE', ')', '||', 'command', '.', 'equals', '(', 'STOP', ')', '||', 'command', '.', 'equals', '(', 'SELECT_TRACK', ')', '||', 'command', '.', 'equals', '(', 'NEXT', ')', '||', 'command', '.', 'equals', '(', 'PREVIOUS', ')', '||', 'command', '.', 'equals', '(', 'CHANGE_PLAYBACK', ')', '||', 'command', '.', 'equals', '(', 'CHANGE_VOLUME', ')', ';', '}']","verifies that an command is not malformed
@param command the Command
@return false if malformed","['verifies', 'that', 'an', 'command', 'is', 'not', 'malformed']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java#L71-L80,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,ShiftFormulaUtility.buildDynamicRowForAreaPtgBase,"private static void buildDynamicRowForAreaPtgBase(final Object ptg,
			final byte originalOperandClass, final List<SerialRow> rowList,
			final Ptg[] newPtg) {
		AreaPtgBase areaPtg = (AreaPtgBase) ptg;
		int originFirstRow = areaPtg.getFirstRow();
		int originLastRow = areaPtg.getLastRow();
		int unitSize = 2;
		for (int i = 0; i < rowList.size(); i++) {
			Row row = rowList.get(i).getRow();
			int shiftRow = row.getRowNum() - originFirstRow;
			if (ptg instanceof Area3DPxg) {
				Area3DPxg area3dPxg = (Area3DPxg) ptg;
				Area3DPxg new3dpxg = new Area3DPxg(
						area3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(area3dPxg.getSheetName(),
										false)),
						area3dPxg.format2DRefAsString());
				new3dpxg.setClass(originalOperandClass);
				new3dpxg.setFirstColRelative(
						area3dPxg.isFirstColRelative());
				new3dpxg.setLastColRelative(area3dPxg.isLastColRelative());
				new3dpxg.setFirstRow(originFirstRow + shiftRow);
				new3dpxg.setLastRow(originLastRow + shiftRow);
				new3dpxg.setFirstRowRelative(
						area3dPxg.isFirstRowRelative());
				new3dpxg.setLastRowRelative(area3dPxg.isLastRowRelative());
				new3dpxg.setLastSheetName(area3dPxg.getLastSheetName());
				newPtg[i * unitSize] = new3dpxg;
			} else {
				AreaPtgBase areaPtgBase = (AreaPtgBase) ptg;
				newPtg[i * unitSize] = new AreaPtg(
						originFirstRow + shiftRow, originLastRow + shiftRow,
						areaPtgBase.getFirstColumn(),
						areaPtgBase.getLastColumn(),
						areaPtgBase.isFirstRowRelative(),
						areaPtgBase.isLastRowRelative(),
						areaPtgBase.isFirstColRelative(),
						areaPtgBase.isLastColRelative());

			}
			if (i < (rowList.size() - 1)) {
				newPtg[i * unitSize + 1] = ParenthesisPtg.instance;
			}
		}
	}",java,"private static void buildDynamicRowForAreaPtgBase(final Object ptg,
			final byte originalOperandClass, final List<SerialRow> rowList,
			final Ptg[] newPtg) {
		AreaPtgBase areaPtg = (AreaPtgBase) ptg;
		int originFirstRow = areaPtg.getFirstRow();
		int originLastRow = areaPtg.getLastRow();
		int unitSize = 2;
		for (int i = 0; i < rowList.size(); i++) {
			Row row = rowList.get(i).getRow();
			int shiftRow = row.getRowNum() - originFirstRow;
			if (ptg instanceof Area3DPxg) {
				Area3DPxg area3dPxg = (Area3DPxg) ptg;
				Area3DPxg new3dpxg = new Area3DPxg(
						area3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(area3dPxg.getSheetName(),
										false)),
						area3dPxg.format2DRefAsString());
				new3dpxg.setClass(originalOperandClass);
				new3dpxg.setFirstColRelative(
						area3dPxg.isFirstColRelative());
				new3dpxg.setLastColRelative(area3dPxg.isLastColRelative());
				new3dpxg.setFirstRow(originFirstRow + shiftRow);
				new3dpxg.setLastRow(originLastRow + shiftRow);
				new3dpxg.setFirstRowRelative(
						area3dPxg.isFirstRowRelative());
				new3dpxg.setLastRowRelative(area3dPxg.isLastRowRelative());
				new3dpxg.setLastSheetName(area3dPxg.getLastSheetName());
				newPtg[i * unitSize] = new3dpxg;
			} else {
				AreaPtgBase areaPtgBase = (AreaPtgBase) ptg;
				newPtg[i * unitSize] = new AreaPtg(
						originFirstRow + shiftRow, originLastRow + shiftRow,
						areaPtgBase.getFirstColumn(),
						areaPtgBase.getLastColumn(),
						areaPtgBase.isFirstRowRelative(),
						areaPtgBase.isLastRowRelative(),
						areaPtgBase.isFirstColRelative(),
						areaPtgBase.isLastColRelative());

			}
			if (i < (rowList.size() - 1)) {
				newPtg[i * unitSize + 1] = ParenthesisPtg.instance;
			}
		}
	}","['private', 'static', 'void', 'buildDynamicRowForAreaPtgBase', '(', 'final', 'Object', 'ptg', ',', 'final', 'byte', 'originalOperandClass', ',', 'final', 'List', '<', 'SerialRow', '>', 'rowList', ',', 'final', 'Ptg', '[', ']', 'newPtg', ')', '{', 'AreaPtgBase', 'areaPtg', '=', '(', 'AreaPtgBase', ')', 'ptg', ';', 'int', 'originFirstRow', '=', 'areaPtg', '.', 'getFirstRow', '(', ')', ';', 'int', 'originLastRow', '=', 'areaPtg', '.', 'getLastRow', '(', ')', ';', 'int', 'unitSize', '=', '2', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'rowList', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'Row', 'row', '=', 'rowList', '.', 'get', '(', 'i', ')', '.', 'getRow', '(', ')', ';', 'int', 'shiftRow', '=', 'row', '.', 'getRowNum', '(', ')', '-', 'originFirstRow', ';', 'if', '(', 'ptg', 'instanceof', 'Area3DPxg', ')', '{', 'Area3DPxg', 'area3dPxg', '=', '(', 'Area3DPxg', ')', 'ptg', ';', 'Area3DPxg', 'new3dpxg', '=', 'new', 'Area3DPxg', '(', 'area3dPxg', '.', 'getExternalWorkbookNumber', '(', ')', ',', 'new', 'SheetIdentifier', '(', 'null', ',', 'new', 'NameIdentifier', '(', 'area3dPxg', '.', 'getSheetName', '(', ')', ',', 'false', ')', ')', ',', 'area3dPxg', '.', 'format2DRefAsString', '(', ')', ')', ';', 'new3dpxg', '.', 'setClass', '(', 'originalOperandClass', ')', ';', 'new3dpxg', '.', 'setFirstColRelative', '(', 'area3dPxg', '.', 'isFirstColRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setLastColRelative', '(', 'area3dPxg', '.', 'isLastColRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setFirstRow', '(', 'originFirstRow', '+', 'shiftRow', ')', ';', 'new3dpxg', '.', 'setLastRow', '(', 'originLastRow', '+', 'shiftRow', ')', ';', 'new3dpxg', '.', 'setFirstRowRelative', '(', 'area3dPxg', '.', 'isFirstRowRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setLastRowRelative', '(', 'area3dPxg', '.', 'isLastRowRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setLastSheetName', '(', 'area3dPxg', '.', 'getLastSheetName', '(', ')', ')', ';', 'newPtg', '[', 'i', '*', 'unitSize', ']', '=', 'new3dpxg', ';', '}', 'else', '{', 'AreaPtgBase', 'areaPtgBase', '=', '(', 'AreaPtgBase', ')', 'ptg', ';', 'newPtg', '[', 'i', '*', 'unitSize', ']', '=', 'new', 'AreaPtg', '(', 'originFirstRow', '+', 'shiftRow', ',', 'originLastRow', '+', 'shiftRow', ',', 'areaPtgBase', '.', 'getFirstColumn', '(', ')', ',', 'areaPtgBase', '.', 'getLastColumn', '(', ')', ',', 'areaPtgBase', '.', 'isFirstRowRelative', '(', ')', ',', 'areaPtgBase', '.', 'isLastRowRelative', '(', ')', ',', 'areaPtgBase', '.', 'isFirstColRelative', '(', ')', ',', 'areaPtgBase', '.', 'isLastColRelative', '(', ')', ')', ';', '}', 'if', '(', 'i', '<', '(', 'rowList', '.', 'size', '(', ')', '-', '1', ')', ')', '{', 'newPtg', '[', 'i', '*', 'unitSize', '+', '1', ']', '=', 'ParenthesisPtg', '.', 'instance', ';', '}', '}', '}']","Builds the dynamic row for area ptg base.

@param ptg
the ptg
@param originalOperandClass
the original operand class
@param rowList
the row list
@param newPtg
the new ptg","['Builds', 'the', 'dynamic', 'row', 'for', 'area', 'ptg', 'base', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java#L452-L497,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/profile/AbstractProfileMBeanImpl.java,AbstractProfileMBeanImpl.beforeGetCmpField,"protected boolean beforeGetCmpField() throws ManagementException {

        if (logger.isDebugEnabled()) {
            logger.debug(""beforeGetCmpField() on profile with name "" + profileName + "" of table "" + profileTable.getProfileTableName());
        }

        return beforeNonSetCmpField();
    }",java,"protected boolean beforeGetCmpField() throws ManagementException {

        if (logger.isDebugEnabled()) {
            logger.debug(""beforeGetCmpField() on profile with name "" + profileName + "" of table "" + profileTable.getProfileTableName());
        }

        return beforeNonSetCmpField();
    }","['protected', 'boolean', 'beforeGetCmpField', '(', ')', 'throws', 'ManagementException', '{', 'if', '(', 'logger', '.', 'isDebugEnabled', '(', ')', ')', '{', 'logger', '.', 'debug', '(', '""beforeGetCmpField() on profile with name ""', '+', 'profileName', '+', '"" of table ""', '+', 'profileTable', '.', 'getProfileTableName', '(', ')', ')', ';', '}', 'return', 'beforeNonSetCmpField', '(', ')', ';', '}']","Logic to execute before invoking a cmp getter method on the mbean

@return true if the method initiated or resumed a transaction
@throws ManagementException","['Logic', 'to', 'execute', 'before', 'invoking', 'a', 'cmp', 'getter', 'method', 'on', 'the', 'mbean']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/profile/AbstractProfileMBeanImpl.java#L547-L554,test
rupertlssmith/lojix,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/machine/WAMBaseMachine.java,WAMBaseMachine.setCodeAddress,"protected WAMCallPoint setCodeAddress(int functorName, int offset, int length)
    {
        WAMCallPoint entry = new WAMCallPoint(offset, length, functorName);
        symbolTable.put(functorName, SYMKEY_CALLPOINTS, entry);

        // Keep a reverse lookup from address to functor name.
        reverseTable.put(offset, functorName);

        return entry;
    }",java,"protected WAMCallPoint setCodeAddress(int functorName, int offset, int length)
    {
        WAMCallPoint entry = new WAMCallPoint(offset, length, functorName);
        symbolTable.put(functorName, SYMKEY_CALLPOINTS, entry);

        // Keep a reverse lookup from address to functor name.
        reverseTable.put(offset, functorName);

        return entry;
    }","['protected', 'WAMCallPoint', 'setCodeAddress', '(', 'int', 'functorName', ',', 'int', 'offset', ',', 'int', 'length', ')', '{', 'WAMCallPoint', 'entry', '=', 'new', 'WAMCallPoint', '(', 'offset', ',', 'length', ',', 'functorName', ')', ';', 'symbolTable', '.', 'put', '(', 'functorName', ',', 'SYMKEY_CALLPOINTS', ',', 'entry', ')', ';', '// Keep a reverse lookup from address to functor name.', 'reverseTable', '.', 'put', '(', 'offset', ',', 'functorName', ')', ';', 'return', 'entry', ';', '}']","Records the offset of the start of the code for the named functor.

@param  functorName The interned name of the functor to find the start address of the code for.
@param  offset      The offset of the start of the functors code within the code area.
@param  length      The size of the code to set the address for.

@return The call table entry for the functors code within the code area of the machine.","['Records', 'the', 'offset', 'of', 'the', 'start', 'of', 'the', 'code', 'for', 'the', 'named', 'functor', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/machine/WAMBaseMachine.java#L173-L182,test
Unidata/thredds,httpservices/src/main/java/ucar/httpservices/HTTPFactory.java,HTTPFactory.makemethod,"static protected HTTPMethod makemethod(HTTPSession.Methods m, HTTPSession session, String url)
            throws HTTPException
    {
        HTTPMethod meth = null;
        if(MOCKMETHODCLASS == null) { // do the normal case
            meth = new HTTPMethod(m, session, url);
        } else {//(MOCKMETHODCLASS != null)
            java.lang.Class methodcl = MOCKMETHODCLASS;
            Constructor<HTTPMethod> cons = null;
            try {
                cons = methodcl.getConstructor(HTTPSession.Methods.class, HTTPSession.class, String.class);
            } catch (Exception e) {
                throw new HTTPException(""HTTPFactory: no proper HTTPMethod constructor available"", e);
            }
            try {
                meth = cons.newInstance(m, session, url);
            } catch (Exception e) {
                throw new HTTPException(""HTTPFactory: HTTPMethod constructor failed"", e);
            }
        }
        return meth;
    }",java,"static protected HTTPMethod makemethod(HTTPSession.Methods m, HTTPSession session, String url)
            throws HTTPException
    {
        HTTPMethod meth = null;
        if(MOCKMETHODCLASS == null) { // do the normal case
            meth = new HTTPMethod(m, session, url);
        } else {//(MOCKMETHODCLASS != null)
            java.lang.Class methodcl = MOCKMETHODCLASS;
            Constructor<HTTPMethod> cons = null;
            try {
                cons = methodcl.getConstructor(HTTPSession.Methods.class, HTTPSession.class, String.class);
            } catch (Exception e) {
                throw new HTTPException(""HTTPFactory: no proper HTTPMethod constructor available"", e);
            }
            try {
                meth = cons.newInstance(m, session, url);
            } catch (Exception e) {
                throw new HTTPException(""HTTPFactory: HTTPMethod constructor failed"", e);
            }
        }
        return meth;
    }","['static', 'protected', 'HTTPMethod', 'makemethod', '(', 'HTTPSession', '.', 'Methods', 'm', ',', 'HTTPSession', 'session', ',', 'String', 'url', ')', 'throws', 'HTTPException', '{', 'HTTPMethod', 'meth', '=', 'null', ';', 'if', '(', 'MOCKMETHODCLASS', '==', 'null', ')', '{', '// do the normal case', 'meth', '=', 'new', 'HTTPMethod', '(', 'm', ',', 'session', ',', 'url', ')', ';', '}', 'else', '{', '//(MOCKMETHODCLASS != null)', 'java', '.', 'lang', '.', 'Class', 'methodcl', '=', 'MOCKMETHODCLASS', ';', 'Constructor', '<', 'HTTPMethod', '>', 'cons', '=', 'null', ';', 'try', '{', 'cons', '=', 'methodcl', '.', 'getConstructor', '(', 'HTTPSession', '.', 'Methods', '.', 'class', ',', 'HTTPSession', '.', 'class', ',', 'String', '.', 'class', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'HTTPException', '(', '""HTTPFactory: no proper HTTPMethod constructor available""', ',', 'e', ')', ';', '}', 'try', '{', 'meth', '=', 'cons', '.', 'newInstance', '(', 'm', ',', 'session', ',', 'url', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'HTTPException', '(', '""HTTPFactory: HTTPMethod constructor failed""', ',', 'e', ')', ';', '}', '}', 'return', 'meth', ';', '}']","Common method creation code so we can isolate mocking

@param session
@return
@throws HTTPException","['Common', 'method', 'creation', 'code', 'so', 'we', 'can', 'isolate', 'mocking']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/httpservices/src/main/java/ucar/httpservices/HTTPFactory.java#L142-L163,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/core/FileAppender.java,FileAppender.getAbsoluteFilePath,"private String getAbsoluteFilePath(String filename) {
    // In Android, relative paths created with File() are relative
    // to root, so fix it by prefixing the path to the app's ""files""
    // directory.
    // This transformation is rather expensive, since it involves loading the
    // Android manifest from the APK (which is a ZIP file), and parsing it to
    // retrieve the application package name. This should be avoided if
    // possible as it may perceptibly delay the app launch time.
    if (EnvUtil.isAndroidOS() && !new File(filename).isAbsolute()) {
      String dataDir = context.getProperty(CoreConstants.DATA_DIR_KEY);
      filename = FileUtil.prefixRelativePath(dataDir, filename);
    }
    return filename;
  }",java,"private String getAbsoluteFilePath(String filename) {
    // In Android, relative paths created with File() are relative
    // to root, so fix it by prefixing the path to the app's ""files""
    // directory.
    // This transformation is rather expensive, since it involves loading the
    // Android manifest from the APK (which is a ZIP file), and parsing it to
    // retrieve the application package name. This should be avoided if
    // possible as it may perceptibly delay the app launch time.
    if (EnvUtil.isAndroidOS() && !new File(filename).isAbsolute()) {
      String dataDir = context.getProperty(CoreConstants.DATA_DIR_KEY);
      filename = FileUtil.prefixRelativePath(dataDir, filename);
    }
    return filename;
  }","['private', 'String', 'getAbsoluteFilePath', '(', 'String', 'filename', ')', '{', '// In Android, relative paths created with File() are relative', '// to root, so fix it by prefixing the path to the app\'s ""files""', '// directory.', '// This transformation is rather expensive, since it involves loading the', '// Android manifest from the APK (which is a ZIP file), and parsing it to', '// retrieve the application package name. This should be avoided if', '// possible as it may perceptibly delay the app launch time.', 'if', '(', 'EnvUtil', '.', 'isAndroidOS', '(', ')', '&&', '!', 'new', 'File', '(', 'filename', ')', '.', 'isAbsolute', '(', ')', ')', '{', 'String', 'dataDir', '=', 'context', '.', 'getProperty', '(', 'CoreConstants', '.', 'DATA_DIR_KEY', ')', ';', 'filename', '=', 'FileUtil', '.', 'prefixRelativePath', '(', 'dataDir', ',', 'filename', ')', ';', '}', 'return', 'filename', ';', '}']","Gets the absolute path to the filename, starting from the app's
""files"" directory, if it is not already an absolute path

@param filename filename to evaluate
@return absolute path to the filename","['Gets', 'the', 'absolute', 'path', 'to', 'the', 'filename', 'starting', 'from', 'the', 'app', 's', 'files', 'directory', 'if', 'it', 'is', 'not', 'already', 'an', 'absolute', 'path']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/FileAppender.java#L354-L367,test
jboss/jboss-common-core,src/main/java/org/jboss/util/file/JarUtils.java,JarUtils.jar,"private static void jar(File src, String prefix, JarInfo info)
      throws IOException
   {
      
      JarOutputStream jout = info.out;
      if (src.isDirectory())
      {
         // create / init the zip entry
         prefix = prefix + src.getName() + ""/"";
         ZipEntry entry = new ZipEntry(prefix);
         entry.setTime(src.lastModified());
         entry.setMethod(JarOutputStream.STORED);
         entry.setSize(0L);
         entry.setCrc(0L);
         jout.putNextEntry(entry);
         jout.closeEntry();
         
         // process the sub-directories
         File[] files = src.listFiles(info.filter);
         for (int i = 0; i < files.length; i++)
         {
            jar(files[i], prefix, info);
         }
      } 
      else if (src.isFile())
      {
         // get the required info objects
         byte[] buffer = info.buffer;
         
         // create / init the zip entry
         ZipEntry entry = new ZipEntry(prefix + src.getName());
         entry.setTime(src.lastModified());
         jout.putNextEntry(entry);
         
         // dump the file
         FileInputStream in = new FileInputStream(src);
         int len;
         while ((len = in.read(buffer, 0, buffer.length)) != -1)
         {
            jout.write(buffer, 0, len);
         }
         in.close();
         jout.closeEntry();
      }
   }",java,"private static void jar(File src, String prefix, JarInfo info)
      throws IOException
   {
      
      JarOutputStream jout = info.out;
      if (src.isDirectory())
      {
         // create / init the zip entry
         prefix = prefix + src.getName() + ""/"";
         ZipEntry entry = new ZipEntry(prefix);
         entry.setTime(src.lastModified());
         entry.setMethod(JarOutputStream.STORED);
         entry.setSize(0L);
         entry.setCrc(0L);
         jout.putNextEntry(entry);
         jout.closeEntry();
         
         // process the sub-directories
         File[] files = src.listFiles(info.filter);
         for (int i = 0; i < files.length; i++)
         {
            jar(files[i], prefix, info);
         }
      } 
      else if (src.isFile())
      {
         // get the required info objects
         byte[] buffer = info.buffer;
         
         // create / init the zip entry
         ZipEntry entry = new ZipEntry(prefix + src.getName());
         entry.setTime(src.lastModified());
         jout.putNextEntry(entry);
         
         // dump the file
         FileInputStream in = new FileInputStream(src);
         int len;
         while ((len = in.read(buffer, 0, buffer.length)) != -1)
         {
            jout.write(buffer, 0, len);
         }
         in.close();
         jout.closeEntry();
      }
   }","['private', 'static', 'void', 'jar', '(', 'File', 'src', ',', 'String', 'prefix', ',', 'JarInfo', 'info', ')', 'throws', 'IOException', '{', 'JarOutputStream', 'jout', '=', 'info', '.', 'out', ';', 'if', '(', 'src', '.', 'isDirectory', '(', ')', ')', '{', '// create / init the zip entry', 'prefix', '=', 'prefix', '+', 'src', '.', 'getName', '(', ')', '+', '""/""', ';', 'ZipEntry', 'entry', '=', 'new', 'ZipEntry', '(', 'prefix', ')', ';', 'entry', '.', 'setTime', '(', 'src', '.', 'lastModified', '(', ')', ')', ';', 'entry', '.', 'setMethod', '(', 'JarOutputStream', '.', 'STORED', ')', ';', 'entry', '.', 'setSize', '(', '0L', ')', ';', 'entry', '.', 'setCrc', '(', '0L', ')', ';', 'jout', '.', 'putNextEntry', '(', 'entry', ')', ';', 'jout', '.', 'closeEntry', '(', ')', ';', '// process the sub-directories', 'File', '[', ']', 'files', '=', 'src', '.', 'listFiles', '(', 'info', '.', 'filter', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'jar', '(', 'files', '[', 'i', ']', ',', 'prefix', ',', 'info', ')', ';', '}', '}', 'else', 'if', '(', 'src', '.', 'isFile', '(', ')', ')', '{', '// get the required info objects', 'byte', '[', ']', 'buffer', '=', 'info', '.', 'buffer', ';', '// create / init the zip entry', 'ZipEntry', 'entry', '=', 'new', 'ZipEntry', '(', 'prefix', '+', 'src', '.', 'getName', '(', ')', ')', ';', 'entry', '.', 'setTime', '(', 'src', '.', 'lastModified', '(', ')', ')', ';', 'jout', '.', 'putNextEntry', '(', 'entry', ')', ';', '// dump the file', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buffer', ',', '0', ',', 'buffer', '.', 'length', ')', ')', '!=', '-', '1', ')', '{', 'jout', '.', 'write', '(', 'buffer', ',', '0', ',', 'len', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'jout', '.', 'closeEntry', '(', ')', ';', '}', '}']","This recursive method writes all matching files and directories to
the jar output stream.","['This', 'recursive', 'method', 'writes', 'all', 'matching', 'files', 'and', 'directories', 'to', 'the', 'jar', 'output', 'stream', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/file/JarUtils.java#L203-L247,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/ByteBufferUtils.java,ByteBufferUtils.write24BitIntToByteArray,"public static void write24BitIntToByteArray(byte[] buf, int offset, int value)
    {
        buf[offset++] = (byte) (value & 0x000000ff);
        buf[offset++] = (byte) ((value & 0x0000ff00) >> 8);
        buf[offset] = (byte) ((value & 0x00ff0000) >> 16);
    }",java,"public static void write24BitIntToByteArray(byte[] buf, int offset, int value)
    {
        buf[offset++] = (byte) (value & 0x000000ff);
        buf[offset++] = (byte) ((value & 0x0000ff00) >> 8);
        buf[offset] = (byte) ((value & 0x00ff0000) >> 16);
    }","['public', 'static', 'void', 'write24BitIntToByteArray', '(', 'byte', '[', ']', 'buf', ',', 'int', 'offset', ',', 'int', 'value', ')', '{', 'buf', '[', 'offset', '++', ']', '=', '(', 'byte', ')', '(', 'value', '&', '0x000000ff', ')', ';', 'buf', '[', 'offset', '++', ']', '=', '(', 'byte', ')', '(', '(', 'value', '&', '0x0000ff00', ')', '>>', '8', ')', ';', 'buf', '[', 'offset', ']', '=', '(', 'byte', ')', '(', '(', 'value', '&', '0x00ff0000', ')', '>>', '16', ')', ';', '}']","Outputs an int into a byte array, copying only the bottom 24 bits of the integer. The top, sign bit, is lost by
this operation, so this only works on positive ints below 2^24.

@param buf    The byte array to write to.
@param offset The offset within the byte array to output the int.
@param value  The int value to write into the array.","['Outputs', 'an', 'int', 'into', 'a', 'byte', 'array', 'copying', 'only', 'the', 'bottom', '24', 'bits', 'of', 'the', 'integer', '.', 'The', 'top', 'sign', 'bit', 'is', 'lost', 'by', 'this', 'operation', 'so', 'this', 'only', 'works', 'on', 'positive', 'ints', 'below', '2^24', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/ByteBufferUtils.java#L77-L82,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java,OrientSql.parse,"final public OStatement parse() throws ParseException {
 /*@bgen(jjtree) parse */
 Oparse jjtn000 = new Oparse(JJTPARSE);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
 jjtn000.jjtSetFirstToken(getToken(1));OStatement result;
    try {
      result = Statement();
      jj_consume_token(0);
    jjtree.closeNodeScope(jjtn000, true);
    jjtc000 = false;
    jjtn000.jjtSetLastToken(getToken(0));
    {if (true) return result;}
    } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      {if (true) throw (RuntimeException)jjte000;}
    }
    if (jjte000 instanceof ParseException) {
      {if (true) throw (ParseException)jjte000;}
    }
    {if (true) throw (Error)jjte000;}
    } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
    }
    throw new Error(""Missing return statement in function"");
  }",java,"final public OStatement parse() throws ParseException {
 /*@bgen(jjtree) parse */
 Oparse jjtn000 = new Oparse(JJTPARSE);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
 jjtn000.jjtSetFirstToken(getToken(1));OStatement result;
    try {
      result = Statement();
      jj_consume_token(0);
    jjtree.closeNodeScope(jjtn000, true);
    jjtc000 = false;
    jjtn000.jjtSetLastToken(getToken(0));
    {if (true) return result;}
    } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      {if (true) throw (RuntimeException)jjte000;}
    }
    if (jjte000 instanceof ParseException) {
      {if (true) throw (ParseException)jjte000;}
    }
    {if (true) throw (Error)jjte000;}
    } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
    }
    throw new Error(""Missing return statement in function"");
  }","['final', 'public', 'OStatement', 'parse', '(', ')', 'throws', 'ParseException', '{', '/*@bgen(jjtree) parse */', 'Oparse', 'jjtn000', '=', 'new', 'Oparse', '(', 'JJTPARSE', ')', ';', 'boolean', 'jjtc000', '=', 'true', ';', 'jjtree', '.', 'openNodeScope', '(', 'jjtn000', ')', ';', 'jjtn000', '.', 'jjtSetFirstToken', '(', 'getToken', '(', '1', ')', ')', ';', 'OStatement', 'result', ';', 'try', '{', 'result', '=', 'Statement', '(', ')', ';', 'jj_consume_token', '(', '0', ')', ';', 'jjtree', '.', 'closeNodeScope', '(', 'jjtn000', ',', 'true', ')', ';', 'jjtc000', '=', 'false', ';', 'jjtn000', '.', 'jjtSetLastToken', '(', 'getToken', '(', '0', ')', ')', ';', '{', 'if', '(', 'true', ')', 'return', 'result', ';', '}', '}', 'catch', '(', 'Throwable', 'jjte000', ')', '{', 'if', '(', 'jjtc000', ')', '{', 'jjtree', '.', 'clearNodeScope', '(', 'jjtn000', ')', ';', 'jjtc000', '=', 'false', ';', '}', 'else', '{', 'jjtree', '.', 'popNode', '(', ')', ';', '}', 'if', '(', 'jjte000', 'instanceof', 'RuntimeException', ')', '{', '{', 'if', '(', 'true', ')', 'throw', '(', 'RuntimeException', ')', 'jjte000', ';', '}', '}', 'if', '(', 'jjte000', 'instanceof', 'ParseException', ')', '{', '{', 'if', '(', 'true', ')', 'throw', '(', 'ParseException', ')', 'jjte000', ';', '}', '}', '{', 'if', '(', 'true', ')', 'throw', '(', 'Error', ')', 'jjte000', ';', '}', '}', 'finally', '{', 'if', '(', 'jjtc000', ')', '{', 'jjtree', '.', 'closeNodeScope', '(', 'jjtn000', ',', 'true', ')', ';', 'jjtn000', '.', 'jjtSetLastToken', '(', 'getToken', '(', '0', ')', ')', ';', '}', '}', 'throw', 'new', 'Error', '(', '""Missing return statement in function""', ')', ';', '}']",Root productions.,"['Root', 'productions', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java#L97-L131,test
oblac/jodd,jodd-db/src/main/java/jodd/db/DbSession.java,DbSession.closeTx,"protected void closeTx() {
		txActive = false;
		try {
			connection.setAutoCommit(true);
		} catch (SQLException sex) {
			throw new DbSqlException(""Close TX failed"", sex);
		}
	}",java,"protected void closeTx() {
		txActive = false;
		try {
			connection.setAutoCommit(true);
		} catch (SQLException sex) {
			throw new DbSqlException(""Close TX failed"", sex);
		}
	}","['protected', 'void', 'closeTx', '(', ')', '{', 'txActive', '=', 'false', ';', 'try', '{', 'connection', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'catch', '(', 'SQLException', 'sex', ')', '{', 'throw', 'new', 'DbSqlException', '(', '""Close TX failed""', ',', 'sex', ')', ';', '}', '}']",Closes current transaction.,"['Closes', 'current', 'transaction', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/DbSession.java#L228-L235,test
nidi3/graphviz-java,graphviz-java/src/main/java/guru/nidi/graphviz/attribute/Label.java,Label.html,"public static Label html(String value) {
        return new Label(value, true, false, false, false, null, null);
    }",java,"public static Label html(String value) {
        return new Label(value, true, false, false, false, null, null);
    }","['public', 'static', 'Label', 'html', '(', 'String', 'value', ')', '{', 'return', 'new', 'Label', '(', 'value', ',', 'true', ',', 'false', ',', 'false', ',', 'false', ',', 'null', ',', 'null', ')', ';', '}']","Create a HTML label.

@param value the HTML code
@return the Label
@see <a href=""http://www.graphviz.org/doc/info/shapes.html#html"">www.graphviz.org</a>","['Create', 'a', 'HTML', 'label', '.']",b7c45ac6c3c28ff7938426f480cdfa5a446a2c47,https://github.com/nidi3/graphviz-java/blob/b7c45ac6c3c28ff7938426f480cdfa5a446a2c47/graphviz-java/src/main/java/guru/nidi/graphviz/attribute/Label.java#L94-L96,test
deeplearning4j/nd4j,nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/allocator/impl/AtomicAllocator.java,AtomicAllocator.getPointer,"@Override
    public Pointer getPointer(DataBuffer buffer, CudaContext context) {
        return memoryHandler.getDevicePointer(buffer, context);
    }",java,"@Override
    public Pointer getPointer(DataBuffer buffer, CudaContext context) {
        return memoryHandler.getDevicePointer(buffer, context);
    }","['@', 'Override', 'public', 'Pointer', 'getPointer', '(', 'DataBuffer', 'buffer', ',', 'CudaContext', 'context', ')', '{', 'return', 'memoryHandler', '.', 'getDevicePointer', '(', 'buffer', ',', 'context', ')', ';', '}']","This method returns actual device pointer valid for current object

@param buffer","['This', 'method', 'returns', 'actual', 'device', 'pointer', 'valid', 'for', 'current', 'object']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/allocator/impl/AtomicAllocator.java#L266-L269,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/InterfaceAnalysis.java,InterfaceAnalysis.calculateOperationAnalysisMap,"protected void calculateOperationAnalysisMap() {
        operationAnalysisMap = new HashMap();
        OperationAnalysis oa;

        // Map the operations
        for (int i = 0; i < operations.length; ++i) {
            oa = operations[i];
            operationAnalysisMap.put(oa.getIDLName(), oa);
        }

        // Map the attributes
        for (int i = 0; i < attributes.length; ++i) {
            AttributeAnalysis attr = attributes[i];

            oa = attr.getAccessorAnalysis();

            // Not having an accessor analysis means that
            // the attribute is not in a remote interface
            if (oa != null) {
                operationAnalysisMap.put(oa.getIDLName(), oa);

                oa = attr.getMutatorAnalysis();
                if (oa != null)
                    operationAnalysisMap.put(oa.getIDLName(), oa);
            }
        }
    }",java,"protected void calculateOperationAnalysisMap() {
        operationAnalysisMap = new HashMap();
        OperationAnalysis oa;

        // Map the operations
        for (int i = 0; i < operations.length; ++i) {
            oa = operations[i];
            operationAnalysisMap.put(oa.getIDLName(), oa);
        }

        // Map the attributes
        for (int i = 0; i < attributes.length; ++i) {
            AttributeAnalysis attr = attributes[i];

            oa = attr.getAccessorAnalysis();

            // Not having an accessor analysis means that
            // the attribute is not in a remote interface
            if (oa != null) {
                operationAnalysisMap.put(oa.getIDLName(), oa);

                oa = attr.getMutatorAnalysis();
                if (oa != null)
                    operationAnalysisMap.put(oa.getIDLName(), oa);
            }
        }
    }","['protected', 'void', 'calculateOperationAnalysisMap', '(', ')', '{', 'operationAnalysisMap', '=', 'new', 'HashMap', '(', ')', ';', 'OperationAnalysis', 'oa', ';', '// Map the operations', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'operations', '.', 'length', ';', '++', 'i', ')', '{', 'oa', '=', 'operations', '[', 'i', ']', ';', 'operationAnalysisMap', '.', 'put', '(', 'oa', '.', 'getIDLName', '(', ')', ',', 'oa', ')', ';', '}', '// Map the attributes', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'attributes', '.', 'length', ';', '++', 'i', ')', '{', 'AttributeAnalysis', 'attr', '=', 'attributes', '[', 'i', ']', ';', 'oa', '=', 'attr', '.', 'getAccessorAnalysis', '(', ')', ';', '// Not having an accessor analysis means that', '// the attribute is not in a remote interface', 'if', '(', 'oa', '!=', 'null', ')', '{', 'operationAnalysisMap', '.', 'put', '(', 'oa', '.', 'getIDLName', '(', ')', ',', 'oa', ')', ';', 'oa', '=', 'attr', '.', 'getMutatorAnalysis', '(', ')', ';', 'if', '(', 'oa', '!=', 'null', ')', 'operationAnalysisMap', '.', 'put', '(', 'oa', '.', 'getIDLName', '(', ')', ',', 'oa', ')', ';', '}', '}', '}']","Calculate the map that maps IDL operation names to operation analyses.
Besides mapped operations, this map also contains the attribute
accessor and mutator operations.","['Calculate', 'the', 'map', 'that', 'maps', 'IDL', 'operation', 'names', 'to', 'operation', 'analyses', '.', 'Besides', 'mapped', 'operations', 'this', 'map', 'also', 'contains', 'the', 'attribute', 'accessor', 'and', 'mutator', 'operations', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/InterfaceAnalysis.java#L131-L157,test
Unidata/thredds,cdm/src/main/java/ucar/atd/dorade/DoradeSWIB.java,DoradeSWIB.getLongitudes,"public float[] getLongitudes() {
    if (myASIBs == null)
      return null;
    float[] lons = new float[nRays];
    for (int i = 0; i < nRays; i++)
      lons[i] = myASIBs[i].getLongitude();
    return lons;
  }",java,"public float[] getLongitudes() {
    if (myASIBs == null)
      return null;
    float[] lons = new float[nRays];
    for (int i = 0; i < nRays; i++)
      lons[i] = myASIBs[i].getLongitude();
    return lons;
  }","['public', 'float', '[', ']', 'getLongitudes', '(', ')', '{', 'if', '(', 'myASIBs', '==', 'null', ')', 'return', 'null', ';', 'float', '[', ']', 'lons', '=', 'new', 'float', '[', 'nRays', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'nRays', ';', 'i', '++', ')', 'lons', '[', 'i', ']', '=', 'myASIBs', '[', 'i', ']', '.', 'getLongitude', '(', ')', ';', 'return', 'lons', ';', '}']","Get the array of per-ray longitudes.  If we do not have per-ray position
information, null is returned.

@return an array of per-ray longitudes, or null if no per-ray position
information is available.","['Get', 'the', 'array', 'of', 'per', '-', 'ray', 'longitudes', '.', 'If', 'we', 'do', 'not', 'have', 'per', '-', 'ray', 'position', 'information', 'null', 'is', 'returned', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/atd/dorade/DoradeSWIB.java#L177-L184,test
rest-assured/rest-assured,rest-assured/src/main/java/io/restassured/RestAssured.java,RestAssured.ntlm,"public static AuthenticationScheme ntlm(String userName, String password, String workstation, String domain) {
        final NTLMAuthScheme scheme = new NTLMAuthScheme();
        scheme.setUserName(userName);
        scheme.setPassword(password);
        scheme.setWorkstation(workstation);
        scheme.setDomain(domain);
        return scheme;
    }",java,"public static AuthenticationScheme ntlm(String userName, String password, String workstation, String domain) {
        final NTLMAuthScheme scheme = new NTLMAuthScheme();
        scheme.setUserName(userName);
        scheme.setPassword(password);
        scheme.setWorkstation(workstation);
        scheme.setDomain(domain);
        return scheme;
    }","['public', 'static', 'AuthenticationScheme', 'ntlm', '(', 'String', 'userName', ',', 'String', 'password', ',', 'String', 'workstation', ',', 'String', 'domain', ')', '{', 'final', 'NTLMAuthScheme', 'scheme', '=', 'new', 'NTLMAuthScheme', '(', ')', ';', 'scheme', '.', 'setUserName', '(', 'userName', ')', ';', 'scheme', '.', 'setPassword', '(', 'password', ')', ';', 'scheme', '.', 'setWorkstation', '(', 'workstation', ')', ';', 'scheme', '.', 'setDomain', '(', 'domain', ')', ';', 'return', 'scheme', ';', '}']","Create a NTLM authentication scheme.

@param userName The user name.
@param password The password.
@param workstation The NTLM workstation.
@param domain The NTLM workstation.
@return The authentication scheme","['Create', 'a', 'NTLM', 'authentication', 'scheme', '.']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/RestAssured.java#L1193-L1200,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/dl/DIFWriter.java,DIFWriter.doOneDataset,"public void doOneDataset( InvDataset ds) {
    if (debug) System.out.println(""doDataset ""+ds.getName());

    if (isDatasetUseable( ds, messBuffer)) {
      String id = StringUtil2.replace(ds.getID(), ""/"", ""-"");
      String fileOutName = fileDir+""/""+id+"".dif.xml"";
      try {
        OutputStream out = new BufferedOutputStream(new FileOutputStream( fileOutName));
        // writeOneEntry(ds, System.out, mess);
        writeOneEntry(ds, out, messBuffer);
        out.close();
        messBuffer.append("" OK on Write\n"");
      } catch (IOException ioe) {
        messBuffer.append(""DIFWriter failed on write "" + ioe.getMessage() + ""\n"");
        log.error(""DIFWriter failed on write ""+ioe.getMessage(), ioe);
      }
    }
  }",java,"public void doOneDataset( InvDataset ds) {
    if (debug) System.out.println(""doDataset ""+ds.getName());

    if (isDatasetUseable( ds, messBuffer)) {
      String id = StringUtil2.replace(ds.getID(), ""/"", ""-"");
      String fileOutName = fileDir+""/""+id+"".dif.xml"";
      try {
        OutputStream out = new BufferedOutputStream(new FileOutputStream( fileOutName));
        // writeOneEntry(ds, System.out, mess);
        writeOneEntry(ds, out, messBuffer);
        out.close();
        messBuffer.append("" OK on Write\n"");
      } catch (IOException ioe) {
        messBuffer.append(""DIFWriter failed on write "" + ioe.getMessage() + ""\n"");
        log.error(""DIFWriter failed on write ""+ioe.getMessage(), ioe);
      }
    }
  }","['public', 'void', 'doOneDataset', '(', 'InvDataset', 'ds', ')', '{', 'if', '(', 'debug', ')', 'System', '.', 'out', '.', 'println', '(', '""doDataset ""', '+', 'ds', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'isDatasetUseable', '(', 'ds', ',', 'messBuffer', ')', ')', '{', 'String', 'id', '=', 'StringUtil2', '.', 'replace', '(', 'ds', '.', 'getID', '(', ')', ',', '""/""', ',', '""-""', ')', ';', 'String', 'fileOutName', '=', 'fileDir', '+', '""/""', '+', 'id', '+', '"".dif.xml""', ';', 'try', '{', 'OutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'fileOutName', ')', ')', ';', '// writeOneEntry(ds, System.out, mess);', 'writeOneEntry', '(', 'ds', ',', 'out', ',', 'messBuffer', ')', ';', 'out', '.', 'close', '(', ')', ';', 'messBuffer', '.', 'append', '(', '"" OK on Write\\n""', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'messBuffer', '.', 'append', '(', '""DIFWriter failed on write ""', '+', 'ioe', '.', 'getMessage', '(', ')', '+', '""\\n""', ')', ';', 'log', '.', 'error', '(', '""DIFWriter failed on write ""', '+', 'ioe', '.', 'getMessage', '(', ')', ',', 'ioe', ')', ';', '}', '}', '}']","Write a DIF record for a specific dataset
@param ds use this dataset","['Write', 'a', 'DIF', 'record', 'for', 'a', 'specific', 'dataset']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/dl/DIFWriter.java#L75-L92,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/Variable.java,Variable.resetShape,"public void resetShape() {
    // if (immutable) throw new IllegalStateException(""Cant modify"");  LOOK allow this for unlimited dimension updating
    this.shape = new int[dimensions.size()];
    for (int i = 0; i < dimensions.size(); i++) {
      Dimension dim = dimensions.get(i);
      shape[i] = dim.getLength();
      //shape[i] = Math.max(dim.getLength(), 0); // LOOK
      // if (dim.isUnlimited() && (i != 0)) // LOOK only true for Netcdf-3
      //   throw new IllegalArgumentException(""Unlimited dimension must be outermost"");
      if (dim.isVariableLength()) {
        //if (dimensions.size() != 1)
        //  throw new IllegalArgumentException(""Unknown dimension can only be used in 1 dim array"");
        //else
        isVariableLength = true;
      }
    }
    this.shapeAsSection = null; // recalc next time its asked for
  }",java,"public void resetShape() {
    // if (immutable) throw new IllegalStateException(""Cant modify"");  LOOK allow this for unlimited dimension updating
    this.shape = new int[dimensions.size()];
    for (int i = 0; i < dimensions.size(); i++) {
      Dimension dim = dimensions.get(i);
      shape[i] = dim.getLength();
      //shape[i] = Math.max(dim.getLength(), 0); // LOOK
      // if (dim.isUnlimited() && (i != 0)) // LOOK only true for Netcdf-3
      //   throw new IllegalArgumentException(""Unlimited dimension must be outermost"");
      if (dim.isVariableLength()) {
        //if (dimensions.size() != 1)
        //  throw new IllegalArgumentException(""Unknown dimension can only be used in 1 dim array"");
        //else
        isVariableLength = true;
      }
    }
    this.shapeAsSection = null; // recalc next time its asked for
  }","['public', 'void', 'resetShape', '(', ')', '{', '// if (immutable) throw new IllegalStateException(""Cant modify"");  LOOK allow this for unlimited dimension updating', 'this', '.', 'shape', '=', 'new', 'int', '[', 'dimensions', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'dimensions', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'Dimension', 'dim', '=', 'dimensions', '.', 'get', '(', 'i', ')', ';', 'shape', '[', 'i', ']', '=', 'dim', '.', 'getLength', '(', ')', ';', '//shape[i] = Math.max(dim.getLength(), 0); // LOOK', '// if (dim.isUnlimited() && (i != 0)) // LOOK only true for Netcdf-3', '//   throw new IllegalArgumentException(""Unlimited dimension must be outermost"");', 'if', '(', 'dim', '.', 'isVariableLength', '(', ')', ')', '{', '//if (dimensions.size() != 1)', '//  throw new IllegalArgumentException(""Unknown dimension can only be used in 1 dim array"");', '//else', 'isVariableLength', '=', 'true', ';', '}', '}', 'this', '.', 'shapeAsSection', '=', 'null', ';', '// recalc next time its asked for', '}']","Use when dimensions have changed, to recalculate the shape.","['Use', 'when', 'dimensions', 'have', 'changed', 'to', 'recalculate', 'the', 'shape', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/Variable.java#L1311-L1328,test
streamsets/datacollector,google-cloud-lib/src/main/java/com/streamsets/pipeline/stage/bigquery/destination/BigQueryTargetUpgrader.java,BigQueryTargetUpgrader.upgradeV1toV2,"private void upgradeV1toV2(List<Config> configs) {
    configs.removeIf(config -> (config.getName().equals(IMPLICIT_FIELD_MAPPING_CONFIG) ||
        config.getName().equals(BIG_QUERY_IMPLICIT_FIELD_MAPPING_CONFIG)));
    configs.add(new Config(MAX_CACHE_SIZE, -1));
  }",java,"private void upgradeV1toV2(List<Config> configs) {
    configs.removeIf(config -> (config.getName().equals(IMPLICIT_FIELD_MAPPING_CONFIG) ||
        config.getName().equals(BIG_QUERY_IMPLICIT_FIELD_MAPPING_CONFIG)));
    configs.add(new Config(MAX_CACHE_SIZE, -1));
  }","['private', 'void', 'upgradeV1toV2', '(', 'List', '<', 'Config', '>', 'configs', ')', '{', 'configs', '.', 'removeIf', '(', 'config', '->', '(', 'config', '.', 'getName', '(', ')', '.', 'equals', '(', 'IMPLICIT_FIELD_MAPPING_CONFIG', ')', '||', 'config', '.', 'getName', '(', ')', '.', 'equals', '(', 'BIG_QUERY_IMPLICIT_FIELD_MAPPING_CONFIG', ')', ')', ')', ';', 'configs', '.', 'add', '(', 'new', 'Config', '(', 'MAX_CACHE_SIZE', ',', '-', '1', ')', ')', ';', '}']",Remove implicit field mapping,"['Remove', 'implicit', 'field', 'mapping']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/google-cloud-lib/src/main/java/com/streamsets/pipeline/stage/bigquery/destination/BigQueryTargetUpgrader.java#L56-L60,test
jcodec/jcodec,src/main/java/org/jcodec/common/model/ColorSpace.java,ColorSpace.compSize,"public Size compSize(Size size, int comp) {
        if (compWidth[comp] == 0 && compHeight[comp] == 0)
            return size;
        return new Size(size.getWidth() >> compWidth[comp], size.getHeight() >> compHeight[comp]);
    }",java,"public Size compSize(Size size, int comp) {
        if (compWidth[comp] == 0 && compHeight[comp] == 0)
            return size;
        return new Size(size.getWidth() >> compWidth[comp], size.getHeight() >> compHeight[comp]);
    }","['public', 'Size', 'compSize', '(', 'Size', 'size', ',', 'int', 'comp', ')', '{', 'if', '(', 'compWidth', '[', 'comp', ']', '==', '0', '&&', 'compHeight', '[', 'comp', ']', '==', '0', ')', 'return', 'size', ';', 'return', 'new', 'Size', '(', 'size', '.', 'getWidth', '(', ')', '>>', 'compWidth', '[', 'comp', ']', ',', 'size', '.', 'getHeight', '(', ')', '>>', 'compHeight', '[', 'comp', ']', ')', ';', '}']","Calculates the component size based on the fullt size and color subsampling of the given component index.
@param size
@return Component size","['Calculates', 'the', 'component', 'size', 'based', 'on', 'the', 'fullt', 'size', 'and', 'color', 'subsampling', 'of', 'the', 'given', 'component', 'index', '.']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/common/model/ColorSpace.java#L83-L87,test
jkuhnert/ognl,src/main/java/ognl/OgnlRuntime.java,OgnlRuntime.getClassPackageName,"public static String getClassPackageName(Class c)
    {
        String s = c.getName();
        int i = s.lastIndexOf('.');

        return (i < 0) ? null : s.substring(0, i);
    }",java,"public static String getClassPackageName(Class c)
    {
        String s = c.getName();
        int i = s.lastIndexOf('.');

        return (i < 0) ? null : s.substring(0, i);
    }","['public', 'static', 'String', 'getClassPackageName', '(', 'Class', 'c', ')', '{', 'String', 's', '=', 'c', '.', 'getName', '(', ')', ';', 'int', 'i', '=', 's', '.', 'lastIndexOf', '(', ""'"", ""'"", ')', ';', 'return', '(', 'i', '<', '0', ')', '?', 'null', ':', 's', '.', 'substring', '(', '0', ',', 'i', ')', ';', '}']",Returns the package name of the class given.,"['Returns', 'the', 'package', 'name', 'of', 'the', 'class', 'given', '.']",53d51a30c8c299b750dede779d05cb84beee73c3,https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/OgnlRuntime.java#L493-L499,test
Unidata/thredds,dap4/d4core/src/main/java/dap4/core/dmr/DapNode.java,DapNode.isTopLevel,"public boolean isTopLevel()
    {
        return parent == null
                || parent.getSort() == DapSort.DATASET
                || parent.getSort() == DapSort.GROUP;
    }",java,"public boolean isTopLevel()
    {
        return parent == null
                || parent.getSort() == DapSort.DATASET
                || parent.getSort() == DapSort.GROUP;
    }","['public', 'boolean', 'isTopLevel', '(', ')', '{', 'return', 'parent', '==', 'null', '||', 'parent', '.', 'getSort', '(', ')', '==', 'DapSort', '.', 'DATASET', '||', 'parent', '.', 'getSort', '(', ')', '==', 'DapSort', '.', 'GROUP', ';', '}']",Misc. Methods,"['Misc', '.', 'Methods']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/dmr/DapNode.java#L512-L517,test
GojaFramework/goja,goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java,StreamUtil.copy,"public static void copy(Reader input, OutputStream output) throws IOException {
        copy(input, output, Const.DEFAULT_ENCODING);
    }",java,"public static void copy(Reader input, OutputStream output) throws IOException {
        copy(input, output, Const.DEFAULT_ENCODING);
    }","['public', 'static', 'void', 'copy', '(', 'Reader', 'input', ',', 'OutputStream', 'output', ')', 'throws', 'IOException', '{', 'copy', '(', 'input', ',', 'output', ',', 'Const', '.', 'DEFAULT_ENCODING', ')', ';', '}']",Copies reader to output stream using buffer.,"['Copies', 'reader', 'to', 'output', 'stream', 'using', 'buffer', '.']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java#L212-L214,test
CAFapi/caf-common,util-ref/src/main/java/com/hpe/caf/util/ref/ReferencedData.java,ReferencedData.getWrappedData,"public static ReferencedData getWrappedData(final String ref, final byte[] data)
    {
        return new ReferencedData(Objects.requireNonNull(ref), data);
    }",java,"public static ReferencedData getWrappedData(final String ref, final byte[] data)
    {
        return new ReferencedData(Objects.requireNonNull(ref), data);
    }","['public', 'static', 'ReferencedData', 'getWrappedData', '(', 'final', 'String', 'ref', ',', 'final', 'byte', '[', ']', 'data', ')', '{', 'return', 'new', 'ReferencedData', '(', 'Objects', '.', 'requireNonNull', '(', 'ref', ')', ',', 'data', ')', ';', '}']","Create a ReferencedData instance that wraps data but also has a reference.

@param ref the reference to be interpreted by the DataStore
@param data the raw data to wrapper, also accessible via the supplied reference
@return a new ReferencedData instance that wraps and references the data supplied","['Create', 'a', 'ReferencedData', 'instance', 'that', 'wraps', 'data', 'but', 'also', 'has', 'a', 'reference', '.']",c9e617cd0b39e19d9480653f8c82efee53dee885,https://github.com/CAFapi/caf-common/blob/c9e617cd0b39e19d9480653f8c82efee53dee885/util-ref/src/main/java/com/hpe/caf/util/ref/ReferencedData.java#L137-L140,test
real-logic/aeron,aeron-client/src/main/java/io/aeron/logbuffer/BufferClaim.java,BufferClaim.abort,"public final void abort()
    {
        int frameLength = buffer.capacity();
        if (ByteOrder.nativeOrder() != LITTLE_ENDIAN)
        {
            frameLength = Integer.reverseBytes(frameLength);
        }

        buffer.putShort(TYPE_FIELD_OFFSET, (short)HDR_TYPE_PAD, LITTLE_ENDIAN);
        buffer.putIntOrdered(FRAME_LENGTH_FIELD_OFFSET, frameLength);
    }",java,"public final void abort()
    {
        int frameLength = buffer.capacity();
        if (ByteOrder.nativeOrder() != LITTLE_ENDIAN)
        {
            frameLength = Integer.reverseBytes(frameLength);
        }

        buffer.putShort(TYPE_FIELD_OFFSET, (short)HDR_TYPE_PAD, LITTLE_ENDIAN);
        buffer.putIntOrdered(FRAME_LENGTH_FIELD_OFFSET, frameLength);
    }","['public', 'final', 'void', 'abort', '(', ')', '{', 'int', 'frameLength', '=', 'buffer', '.', 'capacity', '(', ')', ';', 'if', '(', 'ByteOrder', '.', 'nativeOrder', '(', ')', '!=', 'LITTLE_ENDIAN', ')', '{', 'frameLength', '=', 'Integer', '.', 'reverseBytes', '(', 'frameLength', ')', ';', '}', 'buffer', '.', 'putShort', '(', 'TYPE_FIELD_OFFSET', ',', '(', 'short', ')', 'HDR_TYPE_PAD', ',', 'LITTLE_ENDIAN', ')', ';', 'buffer', '.', 'putIntOrdered', '(', 'FRAME_LENGTH_FIELD_OFFSET', ',', 'frameLength', ')', ';', '}']",Abort a claim of the message space to the log buffer so that the log can progress by ignoring this claim.,"['Abort', 'a', 'claim', 'of', 'the', 'message', 'space', 'to', 'the', 'log', 'buffer', 'so', 'that', 'the', 'log', 'can', 'progress', 'by', 'ignoring', 'this', 'claim', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-client/src/main/java/io/aeron/logbuffer/BufferClaim.java#L192-L202,test
OpenEstate/OpenEstate-IO,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/BefeuerungsArtTyp.java,BefeuerungsArtTyp.setPelletheizung,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setPelletheizung(JAXBElement<Object> value) {
        this.pelletheizung = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setPelletheizung(JAXBElement<Object> value) {
        this.pelletheizung = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:52:47+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setPelletheizung', '(', 'JAXBElement', '<', 'Object', '>', 'value', ')', '{', 'this', '.', 'pelletheizung', '=', 'value', ';', '}']","Sets the value of the pelletheizung property.

@param value
allowed object is
{@link JAXBElement }{@code <}{@link Object }{@code >}","['Sets', 'the', 'value', 'of', 'the', 'pelletheizung', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/BefeuerungsArtTyp.java#L186-L189,test
alipay/sofa-bolt,src/main/java/com/alipay/remoting/rpc/RpcClient.java,RpcClient.closeConnection,"public void closeConnection(String addr) {
        Url url = this.addressParser.parse(addr);
        this.connectionManager.remove(url.getUniqueKey());
    }",java,"public void closeConnection(String addr) {
        Url url = this.addressParser.parse(addr);
        this.connectionManager.remove(url.getUniqueKey());
    }","['public', 'void', 'closeConnection', '(', 'String', 'addr', ')', '{', 'Url', 'url', '=', 'this', '.', 'addressParser', '.', 'parse', '(', 'addr', ')', ';', 'this', '.', 'connectionManager', '.', 'remove', '(', 'url', '.', 'getUniqueKey', '(', ')', ')', ';', '}']","Close all connections of a address

@param addr","['Close', 'all', 'connections', 'of', 'a', 'address']",0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046,https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/rpc/RpcClient.java#L810-L813,test
orientechnologies/orientdb,object/src/main/java/com/orientechnologies/common/reflection/OReflectionHelper.java,OReflectionHelper.getClassessOfInterface,"public static List<Class<?>> getClassessOfInterface(String thePackage, Class<?> theInterface, final ClassLoader iClassLoader) {
    List<Class<?>> classList = new ArrayList<Class<?>>();
    try {
      for (Class<?> discovered : getClassesFor(thePackage, iClassLoader)) {
        if (Arrays.asList(discovered.getInterfaces()).contains(theInterface)) {
          classList.add(discovered);
        }
      }
    } catch (ClassNotFoundException ex) {
      OLogManager.instance().error(null, ""Error finding classes"", ex);
    }

    return classList;
  }",java,"public static List<Class<?>> getClassessOfInterface(String thePackage, Class<?> theInterface, final ClassLoader iClassLoader) {
    List<Class<?>> classList = new ArrayList<Class<?>>();
    try {
      for (Class<?> discovered : getClassesFor(thePackage, iClassLoader)) {
        if (Arrays.asList(discovered.getInterfaces()).contains(theInterface)) {
          classList.add(discovered);
        }
      }
    } catch (ClassNotFoundException ex) {
      OLogManager.instance().error(null, ""Error finding classes"", ex);
    }

    return classList;
  }","['public', 'static', 'List', '<', 'Class', '<', '?', '>', '>', 'getClassessOfInterface', '(', 'String', 'thePackage', ',', 'Class', '<', '?', '>', 'theInterface', ',', 'final', 'ClassLoader', 'iClassLoader', ')', '{', 'List', '<', 'Class', '<', '?', '>', '>', 'classList', '=', 'new', 'ArrayList', '<', 'Class', '<', '?', '>', '>', '(', ')', ';', 'try', '{', 'for', '(', 'Class', '<', '?', '>', 'discovered', ':', 'getClassesFor', '(', 'thePackage', ',', 'iClassLoader', ')', ')', '{', 'if', '(', 'Arrays', '.', 'asList', '(', 'discovered', '.', 'getInterfaces', '(', ')', ')', '.', 'contains', '(', 'theInterface', ')', ')', '{', 'classList', '.', 'add', '(', 'discovered', ')', ';', '}', '}', '}', 'catch', '(', 'ClassNotFoundException', 'ex', ')', '{', 'OLogManager', '.', 'instance', '(', ')', '.', 'error', '(', 'null', ',', '""Error finding classes""', ',', 'ex', ')', ';', '}', 'return', 'classList', ';', '}']","Filters discovered classes to see if they implement a given interface.

@param thePackage
@param theInterface
@param iClassLoader
@return The list of classes that implements the requested interface","['Filters', 'discovered', 'classes', 'to', 'see', 'if', 'they', 'implement', 'a', 'given', 'interface', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/object/src/main/java/com/orientechnologies/common/reflection/OReflectionHelper.java#L167-L180,test
jcodec/jcodec,src/main/java/org/jcodec/codecs/h264/H264Utils.java,H264Utils.joinNALUnits,"public static ByteBuffer joinNALUnits(List<ByteBuffer> nalUnits) {
        int size = 0;
        for (ByteBuffer nal : nalUnits) {
            size += 4 + nal.remaining();
        }
        ByteBuffer allocate = ByteBuffer.allocate(size);
        joinNALUnitsToBuffer(nalUnits, allocate);
        return allocate;
    }",java,"public static ByteBuffer joinNALUnits(List<ByteBuffer> nalUnits) {
        int size = 0;
        for (ByteBuffer nal : nalUnits) {
            size += 4 + nal.remaining();
        }
        ByteBuffer allocate = ByteBuffer.allocate(size);
        joinNALUnitsToBuffer(nalUnits, allocate);
        return allocate;
    }","['public', 'static', 'ByteBuffer', 'joinNALUnits', '(', 'List', '<', 'ByteBuffer', '>', 'nalUnits', ')', '{', 'int', 'size', '=', '0', ';', 'for', '(', 'ByteBuffer', 'nal', ':', 'nalUnits', ')', '{', 'size', '+=', '4', '+', 'nal', '.', 'remaining', '(', ')', ';', '}', 'ByteBuffer', 'allocate', '=', 'ByteBuffer', '.', 'allocate', '(', 'size', ')', ';', 'joinNALUnitsToBuffer', '(', 'nalUnits', ',', 'allocate', ')', ';', 'return', 'allocate', ';', '}']","Joins buffers containing individual NAL units into a single AnnexB
delimited buffer. Each NAL unit will be separated with 00 00 00 01
markers. Allocates a new byte buffer and writes data into it.

@param nalUnits
@param out","['Joins', 'buffers', 'containing', 'individual', 'NAL', 'units', 'into', 'a', 'single', 'AnnexB', 'delimited', 'buffer', '.', 'Each', 'NAL', 'unit', 'will', 'be', 'separated', 'with', '00', '00', '00', '01', 'markers', '.', 'Allocates', 'a', 'new', 'byte', 'buffer', 'and', 'writes', 'data', 'into', 'it', '.']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/codecs/h264/H264Utils.java#L612-L620,test
oblac/jodd,jodd-core/src/main/java/jodd/util/collection/SortedArrayList.java,SortedArrayList.addAll,"@Override
	public boolean addAll(final Collection<? extends E> c) {
		Iterator<? extends E> i = c.iterator();
		boolean changed = false;
		while (i.hasNext()) {
			boolean ret = add(i.next());
			if (!changed) {
				changed = ret;
			}
		}
		return changed;
	}",java,"@Override
	public boolean addAll(final Collection<? extends E> c) {
		Iterator<? extends E> i = c.iterator();
		boolean changed = false;
		while (i.hasNext()) {
			boolean ret = add(i.next());
			if (!changed) {
				changed = ret;
			}
		}
		return changed;
	}","['@', 'Override', 'public', 'boolean', 'addAll', '(', 'final', 'Collection', '<', '?', 'extends', 'E', '>', 'c', ')', '{', 'Iterator', '<', '?', 'extends', 'E', '>', 'i', '=', 'c', '.', 'iterator', '(', ')', ';', 'boolean', 'changed', '=', 'false', ';', 'while', '(', 'i', '.', 'hasNext', '(', ')', ')', '{', 'boolean', 'ret', '=', 'add', '(', 'i', '.', 'next', '(', ')', ')', ';', 'if', '(', '!', 'changed', ')', '{', 'changed', '=', 'ret', ';', '}', '}', 'return', 'changed', ';', '}']",Add all of the elements in the given collection to this list.,"['Add', 'all', 'of', 'the', 'elements', 'in', 'the', 'given', 'collection', 'to', 'this', 'list', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/collection/SortedArrayList.java#L98-L109,test
buschmais/jqa-commandline-tool,application/src/main/java/com/buschmais/jqassistant/commandline/Main.java,Main.run,"public void run(String[] args) throws CliExecutionException {
        Options options = gatherOptions(taskFactory);
        CommandLine commandLine = getCommandLine(args, options);
        interpretCommandLine(commandLine, options, taskFactory);
    }",java,"public void run(String[] args) throws CliExecutionException {
        Options options = gatherOptions(taskFactory);
        CommandLine commandLine = getCommandLine(args, options);
        interpretCommandLine(commandLine, options, taskFactory);
    }","['public', 'void', 'run', '(', 'String', '[', ']', 'args', ')', 'throws', 'CliExecutionException', '{', 'Options', 'options', '=', 'gatherOptions', '(', 'taskFactory', ')', ';', 'CommandLine', 'commandLine', '=', 'getCommandLine', '(', 'args', ',', 'options', ')', ';', 'interpretCommandLine', '(', 'commandLine', ',', 'options', ',', 'taskFactory', ')', ';', '}']","Run tasks according to the given arguments.

@param args
The arguments.
@throws CliExecutionException
If execution fails.","['Run', 'tasks', 'according', 'to', 'the', 'given', 'arguments', '.']",c24de584ef4414fca673a75c16f4a533a188481f,https://github.com/buschmais/jqa-commandline-tool/blob/c24de584ef4414fca673a75c16f4a533a188481f/application/src/main/java/com/buschmais/jqassistant/commandline/Main.java#L76-L80,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/scope/RequestScope.java,RequestScope.injectUploadedFiles,"protected void injectUploadedFiles(final HttpServletRequest servletRequest, final Targets targets) {
		if (!(servletRequest instanceof MultipartRequestWrapper)) {
			return;
		}
		final MultipartRequestWrapper multipartRequest = (MultipartRequestWrapper) servletRequest;
		if (!multipartRequest.isMultipart()) {
			return;
		}
		final Enumeration<String> paramNames = multipartRequest.getFileParameterNames();
		while (paramNames.hasMoreElements()) {
			final String paramName = paramNames.nextElement();
			if (servletRequest.getAttribute(paramName) != null) {
				continue;
			}

			targets.forEachTargetAndIn(this, (target, in) -> {
				final String name = in.matchedName(paramName);
				if (name != null) {
					final FileUpload[] paramValues = multipartRequest.getFiles(paramName);

					if (ignoreInvalidUploadFiles) {
						for (int j = 0; j < paramValues.length; j++) {
							final FileUpload paramValue = paramValues[j];

							if ((!paramValue.isValid()) || (!paramValue.isUploaded())) {
								paramValues[j] = null;
							}
						}
					}

					final Object value = (paramValues.length == 1 ? paramValues[0] : paramValues);
					target.writeValue(name, value, true);
				}
			});
		}
	}",java,"protected void injectUploadedFiles(final HttpServletRequest servletRequest, final Targets targets) {
		if (!(servletRequest instanceof MultipartRequestWrapper)) {
			return;
		}
		final MultipartRequestWrapper multipartRequest = (MultipartRequestWrapper) servletRequest;
		if (!multipartRequest.isMultipart()) {
			return;
		}
		final Enumeration<String> paramNames = multipartRequest.getFileParameterNames();
		while (paramNames.hasMoreElements()) {
			final String paramName = paramNames.nextElement();
			if (servletRequest.getAttribute(paramName) != null) {
				continue;
			}

			targets.forEachTargetAndIn(this, (target, in) -> {
				final String name = in.matchedName(paramName);
				if (name != null) {
					final FileUpload[] paramValues = multipartRequest.getFiles(paramName);

					if (ignoreInvalidUploadFiles) {
						for (int j = 0; j < paramValues.length; j++) {
							final FileUpload paramValue = paramValues[j];

							if ((!paramValue.isValid()) || (!paramValue.isUploaded())) {
								paramValues[j] = null;
							}
						}
					}

					final Object value = (paramValues.length == 1 ? paramValues[0] : paramValues);
					target.writeValue(name, value, true);
				}
			});
		}
	}","['protected', 'void', 'injectUploadedFiles', '(', 'final', 'HttpServletRequest', 'servletRequest', ',', 'final', 'Targets', 'targets', ')', '{', 'if', '(', '!', '(', 'servletRequest', 'instanceof', 'MultipartRequestWrapper', ')', ')', '{', 'return', ';', '}', 'final', 'MultipartRequestWrapper', 'multipartRequest', '=', '(', 'MultipartRequestWrapper', ')', 'servletRequest', ';', 'if', '(', '!', 'multipartRequest', '.', 'isMultipart', '(', ')', ')', '{', 'return', ';', '}', 'final', 'Enumeration', '<', 'String', '>', 'paramNames', '=', 'multipartRequest', '.', 'getFileParameterNames', '(', ')', ';', 'while', '(', 'paramNames', '.', 'hasMoreElements', '(', ')', ')', '{', 'final', 'String', 'paramName', '=', 'paramNames', '.', 'nextElement', '(', ')', ';', 'if', '(', 'servletRequest', '.', 'getAttribute', '(', 'paramName', ')', '!=', 'null', ')', '{', 'continue', ';', '}', 'targets', '.', 'forEachTargetAndIn', '(', 'this', ',', '(', 'target', ',', 'in', ')', '->', '{', 'final', 'String', 'name', '=', 'in', '.', 'matchedName', '(', 'paramName', ')', ';', 'if', '(', 'name', '!=', 'null', ')', '{', 'final', 'FileUpload', '[', ']', 'paramValues', '=', 'multipartRequest', '.', 'getFiles', '(', 'paramName', ')', ';', 'if', '(', 'ignoreInvalidUploadFiles', ')', '{', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'paramValues', '.', 'length', ';', 'j', '++', ')', '{', 'final', 'FileUpload', 'paramValue', '=', 'paramValues', '[', 'j', ']', ';', 'if', '(', '(', '!', 'paramValue', '.', 'isValid', '(', ')', ')', '||', '(', '!', 'paramValue', '.', 'isUploaded', '(', ')', ')', ')', '{', 'paramValues', '[', 'j', ']', '=', 'null', ';', '}', '}', '}', 'final', 'Object', 'value', '=', '(', 'paramValues', '.', 'length', '==', '1', '?', 'paramValues', '[', '0', ']', ':', 'paramValues', ')', ';', 'target', '.', 'writeValue', '(', 'name', ',', 'value', ',', 'true', ')', ';', '}', '}', ')', ';', '}', '}']",Inject uploaded files from multipart request parameters.,"['Inject', 'uploaded', 'files', 'from', 'multipart', 'request', 'parameters', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/scope/RequestScope.java#L142-L177,test
GojaFramework/goja,goja-web/src/main/java/goja/security/goja/SecurityKit.java,SecurityKit.getLoginUser,"public static <T extends Model> T getLoginUser(HttpServletRequest req) {
        return (T) req.getSession().getAttribute(LOGIN_SESSION_KEY);
    }",java,"public static <T extends Model> T getLoginUser(HttpServletRequest req) {
        return (T) req.getSession().getAttribute(LOGIN_SESSION_KEY);
    }","['public', 'static', '<', 'T', 'extends', 'Model', '>', 'T', 'getLoginUser', '(', 'HttpServletRequest', 'req', ')', '{', 'return', '(', 'T', ')', 'req', '.', 'getSession', '(', ')', '.', 'getAttribute', '(', 'LOGIN_SESSION_KEY', ')', ';', '}']","Obtain user information from the Session

@param req request
@return user infomation.","['Obtain', 'user', 'information', 'from', 'the', 'Session']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-web/src/main/java/goja/security/goja/SecurityKit.java#L166-L168,test
agentsoz/jill,jill/src/main/java/io/github/agentsoz/jill/struct/AObject.java,AObject.isNameEqual,"public static boolean isNameEqual(AObject obj1, AObject obj2) {
    // Not equal if the names are null, or empty, or not the same size
    if (obj1.name == null || obj2.name == null || obj1.name.length != obj2.name.length
        || obj1.name.length == 0) {
      return false;
    }
    // Not equal if any name character is different
    for (int i = 0; i < obj1.name.length; i++) {
      if (obj1.name[i] != obj2.name[i]) {
        return false;
      }
    }
    // Else equal
    return true;
  }",java,"public static boolean isNameEqual(AObject obj1, AObject obj2) {
    // Not equal if the names are null, or empty, or not the same size
    if (obj1.name == null || obj2.name == null || obj1.name.length != obj2.name.length
        || obj1.name.length == 0) {
      return false;
    }
    // Not equal if any name character is different
    for (int i = 0; i < obj1.name.length; i++) {
      if (obj1.name[i] != obj2.name[i]) {
        return false;
      }
    }
    // Else equal
    return true;
  }","['public', 'static', 'boolean', 'isNameEqual', '(', 'AObject', 'obj1', ',', 'AObject', 'obj2', ')', '{', '// Not equal if the names are null, or empty, or not the same size', 'if', '(', 'obj1', '.', 'name', '==', 'null', '||', 'obj2', '.', 'name', '==', 'null', '||', 'obj1', '.', 'name', '.', 'length', '!=', 'obj2', '.', 'name', '.', 'length', '||', 'obj1', '.', 'name', '.', 'length', '==', '0', ')', '{', 'return', 'false', ';', '}', '// Not equal if any name character is different', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'obj1', '.', 'name', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', 'obj1', '.', 'name', '[', 'i', ']', '!=', 'obj2', '.', 'name', '[', 'i', ']', ')', '{', 'return', 'false', ';', '}', '}', '// Else equal', 'return', 'true', ';', '}']","Checks if two objects have the same name. The check is case sensitive.

@param obj1 the first object
@param obj2 the second object
@return true if the objects have the same non-null non-empty name, and false otherwise","['Checks', 'if', 'two', 'objects', 'have', 'the', 'same', 'name', '.', 'The', 'check', 'is', 'case', 'sensitive', '.']",13126fc78350465b477386132465f84cad719426,https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/struct/AObject.java#L104-L118,test
playframework/playframework,core/play/src/main/java/play/inject/BindingKey.java,BindingKey.to,"public <A extends T> Binding<T> to(final Supplier<A> instance) {
    return underlying.to(new FromJavaSupplier<>(instance)).asJava();
  }",java,"public <A extends T> Binding<T> to(final Supplier<A> instance) {
    return underlying.to(new FromJavaSupplier<>(instance)).asJava();
  }","['public', '<', 'A', 'extends', 'T', '>', 'Binding', '<', 'T', '>', 'to', '(', 'final', 'Supplier', '<', 'A', '>', 'instance', ')', '{', 'return', 'underlying', '.', 'to', '(', 'new', 'FromJavaSupplier', '<>', '(', 'instance', ')', ')', '.', 'asJava', '(', ')', ';', '}']",Bind this binding key to the given instance.,"['Bind', 'this', 'binding', 'key', 'to', 'the', 'given', 'instance', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/inject/BindingKey.java#L140-L142,test
ieb/sparsemapcontent,extensions/solr/src/main/java/org/sakaiproject/nakamura/solr/ContentEventListener.java,ContentEventListener.joinAll,"protected void joinAll() throws InterruptedException {
		if (queues != null) {
			for (QueueManager q : queues) {
				q.getQueueDispatcher().join();
			}
		}
	}",java,"protected void joinAll() throws InterruptedException {
		if (queues != null) {
			for (QueueManager q : queues) {
				q.getQueueDispatcher().join();
			}
		}
	}","['protected', 'void', 'joinAll', '(', ')', 'throws', 'InterruptedException', '{', 'if', '(', 'queues', '!=', 'null', ')', '{', 'for', '(', 'QueueManager', 'q', ':', 'queues', ')', '{', 'q', '.', 'getQueueDispatcher', '(', ')', '.', 'join', '(', ')', ';', '}', '}', '}']",used only for testing,"['used', 'only', 'for', 'testing']",0570fdf868adbbf7734790cbc09fe66480e5f2dc,https://github.com/ieb/sparsemapcontent/blob/0570fdf868adbbf7734790cbc09fe66480e5f2dc/extensions/solr/src/main/java/org/sakaiproject/nakamura/solr/ContentEventListener.java#L300-L306,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/image/PicturePane.java,PicturePane.zoomToFit,"public void zoomToFit() {
		//Tools.log(""zoomToFit invoked"");
		sclPic.setScaleSize( getSize() );
		// prevent useless rescale events when the picture is not ready
		if ( sclPic.getStatusCode() == sclPic.LOADED 
		  || sclPic.getStatusCode() == sclPic.READY ) {
			sclPic.createScaledPictureInThread( Thread.MAX_PRIORITY );
		}
	}",java,"public void zoomToFit() {
		//Tools.log(""zoomToFit invoked"");
		sclPic.setScaleSize( getSize() );
		// prevent useless rescale events when the picture is not ready
		if ( sclPic.getStatusCode() == sclPic.LOADED 
		  || sclPic.getStatusCode() == sclPic.READY ) {
			sclPic.createScaledPictureInThread( Thread.MAX_PRIORITY );
		}
	}","['public', 'void', 'zoomToFit', '(', ')', '{', '//Tools.log(""zoomToFit invoked"");', 'sclPic', '.', 'setScaleSize', '(', 'getSize', '(', ')', ')', ';', '// prevent useless rescale events when the picture is not ready', 'if', '(', 'sclPic', '.', 'getStatusCode', '(', ')', '==', 'sclPic', '.', 'LOADED', '||', 'sclPic', '.', 'getStatusCode', '(', ')', '==', 'sclPic', '.', 'READY', ')', '{', 'sclPic', '.', 'createScaledPictureInThread', '(', 'Thread', '.', 'MAX_PRIORITY', ')', ';', '}', '}']","this method sets the desired scaled size of the ScalablePicture
to the size of the JPanel and fires off a createScaledPictureInThread
request if the ScalablePicture has been loaded or is ready.

@see ScalablePicture#createScaledPictureInThread(int)","['this', 'method', 'sets', 'the', 'desired', 'scaled', 'size', 'of', 'the', 'ScalablePicture', 'to', 'the', 'size', 'of', 'the', 'JPanel', 'and', 'fires', 'off', 'a', 'createScaledPictureInThread', 'request', 'if', 'the', 'ScalablePicture', 'has', 'been', 'loaded', 'or', 'is', 'ready', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/image/PicturePane.java#L271-L279,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java,InterfaceRepository.ensurePackageExists,"private ModuleDefImpl ensurePackageExists(LocalContainer c,
                                              String previous,
                                              String remainder)
            throws IRConstructionException {
        if ("""".equals(remainder))
            return (ModuleDefImpl) c; // done

        int idx = remainder.indexOf('.');
        String base;

        if (idx == -1)
            base = remainder;
        else
            base = remainder.substring(0, idx);
        base = Util.javaToIDLName(base);

        if (previous.equals(""""))
            previous = base;
        else
            previous = previous + ""/"" + base;
        if (idx == -1)
            remainder = """";
        else
            remainder = remainder.substring(idx + 1);

        LocalContainer next = null;
        LocalContained contained = (LocalContained) c._lookup(base);

        if (contained instanceof LocalContainer)
            next = (LocalContainer) contained;
        else if (contained != null)
            throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();

        if (next == null) {
            String id = ""IDL:"" + previous + "":1.0"";

            // Create module
            ModuleDefImpl m = new ModuleDefImpl(id, base, ""1.0"", c, impl);

            c.add(base, m);

            if (idx == -1)
                return m; // done

            next = (LocalContainer) c._lookup(base); // Better be there now...
        } else // Check that next _is_ a module
            if (next.def_kind() != DefinitionKind.dk_Module)
                throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();

        return ensurePackageExists(next, previous, remainder);
    }",java,"private ModuleDefImpl ensurePackageExists(LocalContainer c,
                                              String previous,
                                              String remainder)
            throws IRConstructionException {
        if ("""".equals(remainder))
            return (ModuleDefImpl) c; // done

        int idx = remainder.indexOf('.');
        String base;

        if (idx == -1)
            base = remainder;
        else
            base = remainder.substring(0, idx);
        base = Util.javaToIDLName(base);

        if (previous.equals(""""))
            previous = base;
        else
            previous = previous + ""/"" + base;
        if (idx == -1)
            remainder = """";
        else
            remainder = remainder.substring(idx + 1);

        LocalContainer next = null;
        LocalContained contained = (LocalContained) c._lookup(base);

        if (contained instanceof LocalContainer)
            next = (LocalContainer) contained;
        else if (contained != null)
            throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();

        if (next == null) {
            String id = ""IDL:"" + previous + "":1.0"";

            // Create module
            ModuleDefImpl m = new ModuleDefImpl(id, base, ""1.0"", c, impl);

            c.add(base, m);

            if (idx == -1)
                return m; // done

            next = (LocalContainer) c._lookup(base); // Better be there now...
        } else // Check that next _is_ a module
            if (next.def_kind() != DefinitionKind.dk_Module)
                throw IIOPLogger.ROOT_LOGGER.collisionWhileCreatingPackage();

        return ensurePackageExists(next, previous, remainder);
    }","['private', 'ModuleDefImpl', 'ensurePackageExists', '(', 'LocalContainer', 'c', ',', 'String', 'previous', ',', 'String', 'remainder', ')', 'throws', 'IRConstructionException', '{', 'if', '(', '""""', '.', 'equals', '(', 'remainder', ')', ')', 'return', '(', 'ModuleDefImpl', ')', 'c', ';', '// done', 'int', 'idx', '=', 'remainder', '.', 'indexOf', '(', ""'"", ""'"", ')', ';', 'String', 'base', ';', 'if', '(', 'idx', '==', '-', '1', ')', 'base', '=', 'remainder', ';', 'else', 'base', '=', 'remainder', '.', 'substring', '(', '0', ',', 'idx', ')', ';', 'base', '=', 'Util', '.', 'javaToIDLName', '(', 'base', ')', ';', 'if', '(', 'previous', '.', 'equals', '(', '""""', ')', ')', 'previous', '=', 'base', ';', 'else', 'previous', '=', 'previous', '+', '""/""', '+', 'base', ';', 'if', '(', 'idx', '==', '-', '1', ')', 'remainder', '=', '""""', ';', 'else', 'remainder', '=', 'remainder', '.', 'substring', '(', 'idx', '+', '1', ')', ';', 'LocalContainer', 'next', '=', 'null', ';', 'LocalContained', 'contained', '=', '(', 'LocalContained', ')', 'c', '.', '_lookup', '(', 'base', ')', ';', 'if', '(', 'contained', 'instanceof', 'LocalContainer', ')', 'next', '=', '(', 'LocalContainer', ')', 'contained', ';', 'else', 'if', '(', 'contained', '!=', 'null', ')', 'throw', 'IIOPLogger', '.', 'ROOT_LOGGER', '.', 'collisionWhileCreatingPackage', '(', ')', ';', 'if', '(', 'next', '==', 'null', ')', '{', 'String', 'id', '=', '""IDL:""', '+', 'previous', '+', '"":1.0""', ';', '// Create module', 'ModuleDefImpl', 'm', '=', 'new', 'ModuleDefImpl', '(', 'id', ',', 'base', ',', '""1.0""', ',', 'c', ',', 'impl', ')', ';', 'c', '.', 'add', '(', 'base', ',', 'm', ')', ';', 'if', '(', 'idx', '==', '-', '1', ')', 'return', 'm', ';', '// done', 'next', '=', '(', 'LocalContainer', ')', 'c', '.', '_lookup', '(', 'base', ')', ';', '// Better be there now...', '}', 'else', '// Check that next _is_ a module', 'if', '(', 'next', '.', 'def_kind', '(', ')', '!=', 'DefinitionKind', '.', 'dk_Module', ')', 'throw', 'IIOPLogger', '.', 'ROOT_LOGGER', '.', 'collisionWhileCreatingPackage', '(', ')', ';', 'return', 'ensurePackageExists', '(', 'next', ',', 'previous', ',', 'remainder', ')', ';', '}']","Ensure that a package exists in the IR.
This will create modules in the IR as needed.

@param c         The container that the remainder of modules should be defined in.
@param previous  The IDL module name, from root to <code>c</code>.
@param remainder The java package name, relative to <code>c</code>.
@return A reference to the IR module that represents the package.","['Ensure', 'that', 'a', 'package', 'exists', 'in', 'the', 'IR', '.', 'This', 'will', 'create', 'modules', 'in', 'the', 'IR', 'as', 'needed', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java#L453-L503,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/distributed/ClientIterator.java,ClientIterator.next,"public Object next()
    {
        try
        {
            Object ob = source.next();

            return ob;
        }
        catch (RemoteException e)
        {
            throw new IllegalStateException(e);
        }
    }",java,"public Object next()
    {
        try
        {
            Object ob = source.next();

            return ob;
        }
        catch (RemoteException e)
        {
            throw new IllegalStateException(e);
        }
    }","['public', 'Object', 'next', '(', ')', '{', 'try', '{', 'Object', 'ob', '=', 'source', '.', 'next', '(', ')', ';', 'return', 'ob', ';', '}', 'catch', '(', 'RemoteException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'e', ')', ';', '}', '}']","Fetches the next element from this iterator.

@return The next element in the iterator.","['Fetches', 'the', 'next', 'element', 'from', 'this', 'iterator', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/distributed/ClientIterator.java#L85-L97,test
apache/parquet-mr,parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/ContextUtil.java,ContextUtil.newTaskAttemptContext,"public static TaskAttemptContext newTaskAttemptContext(
      Configuration conf, TaskAttemptID taskAttemptId) {
    try {
      return (TaskAttemptContext)
          TASK_CONTEXT_CONSTRUCTOR.newInstance(conf, taskAttemptId);
    } catch (InstantiationException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    } catch (IllegalAccessException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    } catch (InvocationTargetException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    }
  }",java,"public static TaskAttemptContext newTaskAttemptContext(
      Configuration conf, TaskAttemptID taskAttemptId) {
    try {
      return (TaskAttemptContext)
          TASK_CONTEXT_CONSTRUCTOR.newInstance(conf, taskAttemptId);
    } catch (InstantiationException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    } catch (IllegalAccessException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    } catch (InvocationTargetException e) {
      throw new IllegalArgumentException(""Can't instantiate TaskAttemptContext"", e);
    }
  }","['public', 'static', 'TaskAttemptContext', 'newTaskAttemptContext', '(', 'Configuration', 'conf', ',', 'TaskAttemptID', 'taskAttemptId', ')', '{', 'try', '{', 'return', '(', 'TaskAttemptContext', ')', 'TASK_CONTEXT_CONSTRUCTOR', '.', 'newInstance', '(', 'conf', ',', 'taskAttemptId', ')', ';', '}', 'catch', '(', 'InstantiationException', 'e', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Can\'t instantiate TaskAttemptContext""', ',', 'e', ')', ';', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Can\'t instantiate TaskAttemptContext""', ',', 'e', ')', ';', '}', 'catch', '(', 'InvocationTargetException', 'e', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Can\'t instantiate TaskAttemptContext""', ',', 'e', ')', ';', '}', '}']","Creates TaskAttemptContext from a JobConf and jobId using the correct
constructor for based on Hadoop version.

@param conf a configuration
@param taskAttemptId a task attempt id
@return a task attempt context","['Creates', 'TaskAttemptContext', 'from', 'a', 'JobConf', 'and', 'jobId', 'using', 'the', 'correct', 'constructor', 'for', 'based', 'on', 'Hadoop', 'version', '.']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/ContextUtil.java#L226-L238,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java,ContainerAnalysis.fixupOverloadedOperationNames,"protected void fixupOverloadedOperationNames()
            throws RMIIIOPViolationException {
        for (int i = 0; i < methods.length; ++i) {
            if ((m_flags[i] & M_OVERLOADED) == 0)
                continue;

            // Find the operation
            OperationAnalysis oa = null;
            String javaName = methods[i].getName();
            for (int opIdx = 0; oa == null && opIdx < operations.length; ++opIdx)
                if (operations[opIdx].getMethod().equals(methods[i]))
                    oa = operations[opIdx];

            if (oa == null)
                continue; // This method is not mapped.

            // Calculate new IDL name
            ParameterAnalysis[] params = oa.getParameters();
            StringBuffer b = new StringBuffer(oa.getIDLName());
            if (params.length == 0)
                b.append(""__"");
            for (int j = 0; j < params.length; ++j) {
                String s = params[j].getTypeIDLName();

                if (s.startsWith(""::""))
                    s = s.substring(2);

                if (s.startsWith(""_"")) {
                    // remove leading underscore in IDL escaped identifier
                    s = s.substring(1);
                }

                b.append('_');

                while (!"""".equals(s)) {
                    int idx = s.indexOf(""::"");

                    b.append('_');

                    if (idx == -1) {
                        b.append(s);
                        s = """";
                    } else {
                        b.append(s.substring(0, idx));
                        if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') {
                            // remove leading underscore in IDL escaped identifier
                            s = s.substring(idx + 3);
                        } else {
                            s = s.substring(idx + 2);
                        }
                    }
                }
            }

            // Set new IDL name
            oa.setIDLName(b.toString());
        }
    }",java,"protected void fixupOverloadedOperationNames()
            throws RMIIIOPViolationException {
        for (int i = 0; i < methods.length; ++i) {
            if ((m_flags[i] & M_OVERLOADED) == 0)
                continue;

            // Find the operation
            OperationAnalysis oa = null;
            String javaName = methods[i].getName();
            for (int opIdx = 0; oa == null && opIdx < operations.length; ++opIdx)
                if (operations[opIdx].getMethod().equals(methods[i]))
                    oa = operations[opIdx];

            if (oa == null)
                continue; // This method is not mapped.

            // Calculate new IDL name
            ParameterAnalysis[] params = oa.getParameters();
            StringBuffer b = new StringBuffer(oa.getIDLName());
            if (params.length == 0)
                b.append(""__"");
            for (int j = 0; j < params.length; ++j) {
                String s = params[j].getTypeIDLName();

                if (s.startsWith(""::""))
                    s = s.substring(2);

                if (s.startsWith(""_"")) {
                    // remove leading underscore in IDL escaped identifier
                    s = s.substring(1);
                }

                b.append('_');

                while (!"""".equals(s)) {
                    int idx = s.indexOf(""::"");

                    b.append('_');

                    if (idx == -1) {
                        b.append(s);
                        s = """";
                    } else {
                        b.append(s.substring(0, idx));
                        if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') {
                            // remove leading underscore in IDL escaped identifier
                            s = s.substring(idx + 3);
                        } else {
                            s = s.substring(idx + 2);
                        }
                    }
                }
            }

            // Set new IDL name
            oa.setIDLName(b.toString());
        }
    }","['protected', 'void', 'fixupOverloadedOperationNames', '(', ')', 'throws', 'RMIIIOPViolationException', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'methods', '.', 'length', ';', '++', 'i', ')', '{', 'if', '(', '(', 'm_flags', '[', 'i', ']', '&', 'M_OVERLOADED', ')', '==', '0', ')', 'continue', ';', '// Find the operation', 'OperationAnalysis', 'oa', '=', 'null', ';', 'String', 'javaName', '=', 'methods', '[', 'i', ']', '.', 'getName', '(', ')', ';', 'for', '(', 'int', 'opIdx', '=', '0', ';', 'oa', '==', 'null', '&&', 'opIdx', '<', 'operations', '.', 'length', ';', '++', 'opIdx', ')', 'if', '(', 'operations', '[', 'opIdx', ']', '.', 'getMethod', '(', ')', '.', 'equals', '(', 'methods', '[', 'i', ']', ')', ')', 'oa', '=', 'operations', '[', 'opIdx', ']', ';', 'if', '(', 'oa', '==', 'null', ')', 'continue', ';', '// This method is not mapped.', '// Calculate new IDL name', 'ParameterAnalysis', '[', ']', 'params', '=', 'oa', '.', 'getParameters', '(', ')', ';', 'StringBuffer', 'b', '=', 'new', 'StringBuffer', '(', 'oa', '.', 'getIDLName', '(', ')', ')', ';', 'if', '(', 'params', '.', 'length', '==', '0', ')', 'b', '.', 'append', '(', '""__""', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'params', '.', 'length', ';', '++', 'j', ')', '{', 'String', 's', '=', 'params', '[', 'j', ']', '.', 'getTypeIDLName', '(', ')', ';', 'if', '(', 's', '.', 'startsWith', '(', '""::""', ')', ')', 's', '=', 's', '.', 'substring', '(', '2', ')', ';', 'if', '(', 's', '.', 'startsWith', '(', '""_""', ')', ')', '{', '// remove leading underscore in IDL escaped identifier', 's', '=', 's', '.', 'substring', '(', '1', ')', ';', '}', 'b', '.', 'append', '(', ""'"", ""'"", ')', ';', 'while', '(', '!', '""""', '.', 'equals', '(', 's', ')', ')', '{', 'int', 'idx', '=', 's', '.', 'indexOf', '(', '""::""', ')', ';', 'b', '.', 'append', '(', ""'"", ""'"", ')', ';', 'if', '(', 'idx', '==', '-', '1', ')', '{', 'b', '.', 'append', '(', 's', ')', ';', 's', '=', '""""', ';', '}', 'else', '{', 'b', '.', 'append', '(', 's', '.', 'substring', '(', '0', ',', 'idx', ')', ')', ';', 'if', '(', 's', '.', 'length', '(', ')', '>', 'idx', '+', '2', '&&', 's', '.', 'charAt', '(', 'idx', '+', '2', ')', '==', ""'"", ""'"", ')', '{', '// remove leading underscore in IDL escaped identifier', 's', '=', 's', '.', 'substring', '(', 'idx', '+', '3', ')', ';', '}', 'else', '{', 's', '=', 's', '.', 'substring', '(', 'idx', '+', '2', ')', ';', '}', '}', '}', '}', '// Set new IDL name', 'oa', '.', 'setIDLName', '(', 'b', '.', 'toString', '(', ')', ')', ';', '}', '}']","Fixup overloaded operation names.
As specified in section 1.3.2.6.","['Fixup', 'overloaded', 'operation', 'names', '.', 'As', 'specified', 'in', 'section', '1', '.', '3', '.', '2', '.', '6', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java#L581-L638,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java,GridCoordSys.findXYindexFromCoord,"@Override
  public int[] findXYindexFromCoord(double x_coord, double y_coord, int[] result) {
    if (result == null)
      result = new int[2];

    if ((horizXaxis instanceof CoordinateAxis1D) && (horizYaxis instanceof CoordinateAxis1D)) {
      result[0] = ((CoordinateAxis1D) horizXaxis).findCoordElement(x_coord);
      result[1] = ((CoordinateAxis1D) horizYaxis).findCoordElement(y_coord);
      return result;

    } else if ((horizXaxis instanceof CoordinateAxis2D) && (horizYaxis instanceof CoordinateAxis2D)) {
      if (g2d == null)
        g2d = new GridCoordinate2D((CoordinateAxis2D) horizYaxis, (CoordinateAxis2D) horizXaxis);
      int[] result2 = new int[2];
      boolean found = g2d.findCoordElement(y_coord, x_coord, result2);
      if (found) {
        result[0] = result2[1];
        result[1] = result2[0];
      } else {
        result[0] = -1;
        result[1] = -1;
      }
      return result;
    }

    // cant happen
    throw new IllegalStateException(""GridCoordSystem.findXYindexFromCoord"");
  }",java,"@Override
  public int[] findXYindexFromCoord(double x_coord, double y_coord, int[] result) {
    if (result == null)
      result = new int[2];

    if ((horizXaxis instanceof CoordinateAxis1D) && (horizYaxis instanceof CoordinateAxis1D)) {
      result[0] = ((CoordinateAxis1D) horizXaxis).findCoordElement(x_coord);
      result[1] = ((CoordinateAxis1D) horizYaxis).findCoordElement(y_coord);
      return result;

    } else if ((horizXaxis instanceof CoordinateAxis2D) && (horizYaxis instanceof CoordinateAxis2D)) {
      if (g2d == null)
        g2d = new GridCoordinate2D((CoordinateAxis2D) horizYaxis, (CoordinateAxis2D) horizXaxis);
      int[] result2 = new int[2];
      boolean found = g2d.findCoordElement(y_coord, x_coord, result2);
      if (found) {
        result[0] = result2[1];
        result[1] = result2[0];
      } else {
        result[0] = -1;
        result[1] = -1;
      }
      return result;
    }

    // cant happen
    throw new IllegalStateException(""GridCoordSystem.findXYindexFromCoord"");
  }","['@', 'Override', 'public', 'int', '[', ']', 'findXYindexFromCoord', '(', 'double', 'x_coord', ',', 'double', 'y_coord', ',', 'int', '[', ']', 'result', ')', '{', 'if', '(', 'result', '==', 'null', ')', 'result', '=', 'new', 'int', '[', '2', ']', ';', 'if', '(', '(', 'horizXaxis', 'instanceof', 'CoordinateAxis1D', ')', '&&', '(', 'horizYaxis', 'instanceof', 'CoordinateAxis1D', ')', ')', '{', 'result', '[', '0', ']', '=', '(', '(', 'CoordinateAxis1D', ')', 'horizXaxis', ')', '.', 'findCoordElement', '(', 'x_coord', ')', ';', 'result', '[', '1', ']', '=', '(', '(', 'CoordinateAxis1D', ')', 'horizYaxis', ')', '.', 'findCoordElement', '(', 'y_coord', ')', ';', 'return', 'result', ';', '}', 'else', 'if', '(', '(', 'horizXaxis', 'instanceof', 'CoordinateAxis2D', ')', '&&', '(', 'horizYaxis', 'instanceof', 'CoordinateAxis2D', ')', ')', '{', 'if', '(', 'g2d', '==', 'null', ')', 'g2d', '=', 'new', 'GridCoordinate2D', '(', '(', 'CoordinateAxis2D', ')', 'horizYaxis', ',', '(', 'CoordinateAxis2D', ')', 'horizXaxis', ')', ';', 'int', '[', ']', 'result2', '=', 'new', 'int', '[', '2', ']', ';', 'boolean', 'found', '=', 'g2d', '.', 'findCoordElement', '(', 'y_coord', ',', 'x_coord', ',', 'result2', ')', ';', 'if', '(', 'found', ')', '{', 'result', '[', '0', ']', '=', 'result2', '[', '1', ']', ';', 'result', '[', '1', ']', '=', 'result2', '[', '0', ']', ';', '}', 'else', '{', 'result', '[', '0', ']', '=', '-', '1', ';', 'result', '[', '1', ']', '=', '-', '1', ';', '}', 'return', 'result', ';', '}', '// cant happen\r', 'throw', 'new', 'IllegalStateException', '(', '""GridCoordSystem.findXYindexFromCoord""', ')', ';', '}']","Given a point in x,y coordinate space, find the x,y index in the coordinate system.

@param x_coord position in x coordinate space.
@param y_coord position in y coordinate space.
@param result  put result (x,y) index in here, may be null
@return int[2], 0=x,1=y indices in the coordinate system of the point. These will be -1 if out of range.","['Given', 'a', 'point', 'in', 'x', 'y', 'coordinate', 'space', 'find', 'the', 'x', 'y', 'index', 'in', 'the', 'coordinate', 'system', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java#L784-L811,test
google/openrtb,openrtb-core/src/main/java/com/google/openrtb/snippet/SnippetProcessor.java,SnippetProcessor.process,"public String process(SnippetProcessorContext ctx, String snippet) {
    checkNotNull(ctx);
    StringBuilder sb = ctx.builder();
    sb.setLength(0);
    String currSnippet = snippet;

    boolean processedMacros = false;
    int snippetPos = 0;
    int macroPos = currSnippet.indexOf(""${"");

    while (macroPos != -1) {
      sb.append(currSnippet.substring(snippetPos, macroPos));
      int macroEnd = processMacroAt(ctx, currSnippet, macroPos);

      if (macroEnd == -1) {
        sb.append(""${"");
        snippetPos = macroPos + 2;
      } else {
        snippetPos = macroEnd;
        processedMacros = true;
      }

      macroPos = currSnippet.indexOf(""${"", snippetPos);
    }

    if (processedMacros) {
      sb.append(currSnippet, snippetPos, currSnippet.length());
      currSnippet = sb.toString();
    }
    sb.setLength(0);

    String ret = urlEncode(ctx, currSnippet);
    sb.setLength(0);
    return ret;
  }",java,"public String process(SnippetProcessorContext ctx, String snippet) {
    checkNotNull(ctx);
    StringBuilder sb = ctx.builder();
    sb.setLength(0);
    String currSnippet = snippet;

    boolean processedMacros = false;
    int snippetPos = 0;
    int macroPos = currSnippet.indexOf(""${"");

    while (macroPos != -1) {
      sb.append(currSnippet.substring(snippetPos, macroPos));
      int macroEnd = processMacroAt(ctx, currSnippet, macroPos);

      if (macroEnd == -1) {
        sb.append(""${"");
        snippetPos = macroPos + 2;
      } else {
        snippetPos = macroEnd;
        processedMacros = true;
      }

      macroPos = currSnippet.indexOf(""${"", snippetPos);
    }

    if (processedMacros) {
      sb.append(currSnippet, snippetPos, currSnippet.length());
      currSnippet = sb.toString();
    }
    sb.setLength(0);

    String ret = urlEncode(ctx, currSnippet);
    sb.setLength(0);
    return ret;
  }","['public', 'String', 'process', '(', 'SnippetProcessorContext', 'ctx', ',', 'String', 'snippet', ')', '{', 'checkNotNull', '(', 'ctx', ')', ';', 'StringBuilder', 'sb', '=', 'ctx', '.', 'builder', '(', ')', ';', 'sb', '.', 'setLength', '(', '0', ')', ';', 'String', 'currSnippet', '=', 'snippet', ';', 'boolean', 'processedMacros', '=', 'false', ';', 'int', 'snippetPos', '=', '0', ';', 'int', 'macroPos', '=', 'currSnippet', '.', 'indexOf', '(', '""${""', ')', ';', 'while', '(', 'macroPos', '!=', '-', '1', ')', '{', 'sb', '.', 'append', '(', 'currSnippet', '.', 'substring', '(', 'snippetPos', ',', 'macroPos', ')', ')', ';', 'int', 'macroEnd', '=', 'processMacroAt', '(', 'ctx', ',', 'currSnippet', ',', 'macroPos', ')', ';', 'if', '(', 'macroEnd', '==', '-', '1', ')', '{', 'sb', '.', 'append', '(', '""${""', ')', ';', 'snippetPos', '=', 'macroPos', '+', '2', ';', '}', 'else', '{', 'snippetPos', '=', 'macroEnd', ';', 'processedMacros', '=', 'true', ';', '}', 'macroPos', '=', 'currSnippet', '.', 'indexOf', '(', '""${""', ',', 'snippetPos', ')', ';', '}', 'if', '(', 'processedMacros', ')', '{', 'sb', '.', 'append', '(', 'currSnippet', ',', 'snippetPos', ',', 'currSnippet', '.', 'length', '(', ')', ')', ';', 'currSnippet', '=', 'sb', '.', 'toString', '(', ')', ';', '}', 'sb', '.', 'setLength', '(', '0', ')', ';', 'String', 'ret', '=', 'urlEncode', '(', 'ctx', ',', 'currSnippet', ')', ';', 'sb', '.', 'setLength', '(', '0', ')', ';', 'return', 'ret', ';', '}']","Processes the raw snippet that was set by the bid, making any transformations necessary.","['Processes', 'the', 'raw', 'snippet', 'that', 'was', 'set', 'by', 'the', 'bid', 'making', 'any', 'transformations', 'necessary', '.']",384ed8dde6bd16ac2faab9afbe5b33367836fdec,https://github.com/google/openrtb/blob/384ed8dde6bd16ac2faab9afbe5b33367836fdec/openrtb-core/src/main/java/com/google/openrtb/snippet/SnippetProcessor.java#L81-L115,test
oblac/jodd,jodd-joy/src/main/java/jodd/joy/page/DbPager.java,DbPager.removeSelect,"protected String removeSelect(String sql) {
		int ndx = StringUtil.indexOfIgnoreCase(sql, ""select"");
		if (ndx != -1) {
			sql = sql.substring(ndx + 6);	// select.length()
		}
		return sql;
	}",java,"protected String removeSelect(String sql) {
		int ndx = StringUtil.indexOfIgnoreCase(sql, ""select"");
		if (ndx != -1) {
			sql = sql.substring(ndx + 6);	// select.length()
		}
		return sql;
	}","['protected', 'String', 'removeSelect', '(', 'String', 'sql', ')', '{', 'int', 'ndx', '=', 'StringUtil', '.', 'indexOfIgnoreCase', '(', 'sql', ',', '""select""', ')', ';', 'if', '(', 'ndx', '!=', '-', '1', ')', '{', 'sql', '=', 'sql', '.', 'substring', '(', 'ndx', '+', '6', ')', ';', '// select.length()', '}', 'return', 'sql', ';', '}']",Removes the first 'select' from the sql query.,"['Removes', 'the', 'first', 'select', 'from', 'the', 'sql', 'query', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-joy/src/main/java/jodd/joy/page/DbPager.java#L171-L177,test
TooTallNate/Java-WebSocket,src/main/java/org/java_websocket/AbstractWebSocket.java,AbstractWebSocket.startConnectionLostTimer,"protected void startConnectionLostTimer() {
        synchronized (syncConnectionLost) {
            if (this.connectionLostTimeout <= 0) {
                log.trace(""Connection lost timer deactivated"");
                return;
            }
            log.trace(""Connection lost timer started"");
            this.websocketRunning = true;
            restartConnectionLostTimer();
        }
    }",java,"protected void startConnectionLostTimer() {
        synchronized (syncConnectionLost) {
            if (this.connectionLostTimeout <= 0) {
                log.trace(""Connection lost timer deactivated"");
                return;
            }
            log.trace(""Connection lost timer started"");
            this.websocketRunning = true;
            restartConnectionLostTimer();
        }
    }","['protected', 'void', 'startConnectionLostTimer', '(', ')', '{', 'synchronized', '(', 'syncConnectionLost', ')', '{', 'if', '(', 'this', '.', 'connectionLostTimeout', '<=', '0', ')', '{', 'log', '.', 'trace', '(', '""Connection lost timer deactivated""', ')', ';', 'return', ';', '}', 'log', '.', 'trace', '(', '""Connection lost timer started""', ')', ';', 'this', '.', 'websocketRunning', '=', 'true', ';', 'restartConnectionLostTimer', '(', ')', ';', '}', '}']","Start the connection lost timer
@since 1.3.4","['Start', 'the', 'connection', 'lost', 'timer']",73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9,https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/AbstractWebSocket.java#L156-L166,test
arnohaase/a-foundation,a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/JavaUtilMapWrapper.java,JavaUtilMapWrapper.keySet,"@Override
    public Set<K> keySet() {
        return new AbstractSet<K>() {
            @Override
            public Iterator<K> iterator() {
                return new Iterator<K>() {
                    final Iterator<AMapEntry<K,V>> it = inner.iterator();

                    @Override
                    public boolean hasNext() {
                        return it.hasNext();
                    }

                    @Override
                    public K next() {
                        return it.next().getKey ();
                    }

                    @Override
                    public void remove() {
                        throw new UnsupportedOperationException();
                    }
                };
            }

            @Override
            public int size() {
                return inner.size();
            }
        };
    }",java,"@Override
    public Set<K> keySet() {
        return new AbstractSet<K>() {
            @Override
            public Iterator<K> iterator() {
                return new Iterator<K>() {
                    final Iterator<AMapEntry<K,V>> it = inner.iterator();

                    @Override
                    public boolean hasNext() {
                        return it.hasNext();
                    }

                    @Override
                    public K next() {
                        return it.next().getKey ();
                    }

                    @Override
                    public void remove() {
                        throw new UnsupportedOperationException();
                    }
                };
            }

            @Override
            public int size() {
                return inner.size();
            }
        };
    }","['@', 'Override', 'public', 'Set', '<', 'K', '>', 'keySet', '(', ')', '{', 'return', 'new', 'AbstractSet', '<', 'K', '>', '(', ')', '{', '@', 'Override', 'public', 'Iterator', '<', 'K', '>', 'iterator', '(', ')', '{', 'return', 'new', 'Iterator', '<', 'K', '>', '(', ')', '{', 'final', 'Iterator', '<', 'AMapEntry', '<', 'K', ',', 'V', '>', '>', 'it', '=', 'inner', '.', 'iterator', '(', ')', ';', '@', 'Override', 'public', 'boolean', 'hasNext', '(', ')', '{', 'return', 'it', '.', 'hasNext', '(', ')', ';', '}', '@', 'Override', 'public', 'K', 'next', '(', ')', '{', 'return', 'it', '.', 'next', '(', ')', '.', 'getKey', '(', ')', ';', '}', '@', 'Override', 'public', 'void', 'remove', '(', ')', '{', 'throw', 'new', 'UnsupportedOperationException', '(', ')', ';', '}', '}', ';', '}', '@', 'Override', 'public', 'int', 'size', '(', ')', '{', 'return', 'inner', '.', 'size', '(', ')', ';', '}', '}', ';', '}']",There is usually a performance gain to be had by overriding this default implementation,"['There', 'is', 'usually', 'a', 'performance', 'gain', 'to', 'be', 'had', 'by', 'overriding', 'this', 'default', 'implementation']",f3eef2ca89d67775f202a4c28140230a6229291e,https://github.com/arnohaase/a-foundation/blob/f3eef2ca89d67775f202a4c28140230a6229291e/a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/JavaUtilMapWrapper.java#L48-L78,test
Unidata/thredds,grib/src/main/java/ucar/nc2/grib/grib2/table/FslHrrrLocalTables.java,FslHrrrLocalTables.getSubCenterName,"@Override
  public String getSubCenterName(int center, int subcenter) {

    switch (subcenter) {
      case 0:
        return null;
      case 1:
        return ""FSL/FRD Regional Analysis and Prediction Branch"";
      case 2:
        return ""FSL/FRD Local Analysis and Prediction Branch"";
    }
    return super.getSubCenterName(center, subcenter);
  }",java,"@Override
  public String getSubCenterName(int center, int subcenter) {

    switch (subcenter) {
      case 0:
        return null;
      case 1:
        return ""FSL/FRD Regional Analysis and Prediction Branch"";
      case 2:
        return ""FSL/FRD Local Analysis and Prediction Branch"";
    }
    return super.getSubCenterName(center, subcenter);
  }","['@', 'Override', 'public', 'String', 'getSubCenterName', '(', 'int', 'center', ',', 'int', 'subcenter', ')', '{', 'switch', '(', 'subcenter', ')', '{', 'case', '0', ':', 'return', 'null', ';', 'case', '1', ':', 'return', '""FSL/FRD Regional Analysis and Prediction Branch""', ';', 'case', '2', ':', 'return', '""FSL/FRD Local Analysis and Prediction Branch""', ';', '}', 'return', 'super', '.', 'getSubCenterName', '(', 'center', ',', 'subcenter', ')', ';', '}']","LOOK  maybe combine grib1, grib2 and bufr ??","['LOOK', 'maybe', 'combine', 'grib1', 'grib2', 'and', 'bufr', '??']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/grib/src/main/java/ucar/nc2/grib/grib2/table/FslHrrrLocalTables.java#L54-L66,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/IRObjectImpl.java,IRObjectImpl.shutdown,"public void shutdown() {
        POA poa = getPOA();
        try {
            poa.deactivate_object(poa.reference_to_id(getReference()));
        } catch (UserException ex) {
            IIOPLogger.ROOT_LOGGER.warnCouldNotDeactivateIRObject(ex);
        }
    }",java,"public void shutdown() {
        POA poa = getPOA();
        try {
            poa.deactivate_object(poa.reference_to_id(getReference()));
        } catch (UserException ex) {
            IIOPLogger.ROOT_LOGGER.warnCouldNotDeactivateIRObject(ex);
        }
    }","['public', 'void', 'shutdown', '(', ')', '{', 'POA', 'poa', '=', 'getPOA', '(', ')', ';', 'try', '{', 'poa', '.', 'deactivate_object', '(', 'poa', '.', 'reference_to_id', '(', 'getReference', '(', ')', ')', ')', ';', '}', 'catch', '(', 'UserException', 'ex', ')', '{', 'IIOPLogger', '.', 'ROOT_LOGGER', '.', 'warnCouldNotDeactivateIRObject', '(', 'ex', ')', ';', '}', '}']",Unexport this object.,"['Unexport', 'this', 'object', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/IRObjectImpl.java#L71-L78,test
rupertlssmith/lojix,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/nativemachine/WAMResolvingNativeMachine.java,WAMResolvingNativeMachine.getInstance,"public static WAMResolvingNativeMachine getInstance(SymbolTableImpl<Integer, String, Object> symbolTable)
        throws ImplementationUnavailableException
    {
        try
        {
            if (!libraryLoadAttempted)
            {
                libraryLoadAttempted = true;

                System.loadLibrary(""aima_native"");

                libraryFound = true;
            }

            if (libraryFound)
            {
                return new WAMResolvingNativeMachine(symbolTable);
            }
            else
            {
                throw new ImplementationUnavailableException(""The native library could not be found."", null, null,
                    null);
            }
        }
        catch (UnsatisfiedLinkError e)
        {
            libraryFound = false;
            throw new ImplementationUnavailableException(""The native library could not be found."", e, null, null);
        }
    }",java,"public static WAMResolvingNativeMachine getInstance(SymbolTableImpl<Integer, String, Object> symbolTable)
        throws ImplementationUnavailableException
    {
        try
        {
            if (!libraryLoadAttempted)
            {
                libraryLoadAttempted = true;

                System.loadLibrary(""aima_native"");

                libraryFound = true;
            }

            if (libraryFound)
            {
                return new WAMResolvingNativeMachine(symbolTable);
            }
            else
            {
                throw new ImplementationUnavailableException(""The native library could not be found."", null, null,
                    null);
            }
        }
        catch (UnsatisfiedLinkError e)
        {
            libraryFound = false;
            throw new ImplementationUnavailableException(""The native library could not be found."", e, null, null);
        }
    }","['public', 'static', 'WAMResolvingNativeMachine', 'getInstance', '(', 'SymbolTableImpl', '<', 'Integer', ',', 'String', ',', 'Object', '>', 'symbolTable', ')', 'throws', 'ImplementationUnavailableException', '{', 'try', '{', 'if', '(', '!', 'libraryLoadAttempted', ')', '{', 'libraryLoadAttempted', '=', 'true', ';', 'System', '.', 'loadLibrary', '(', '""aima_native""', ')', ';', 'libraryFound', '=', 'true', ';', '}', 'if', '(', 'libraryFound', ')', '{', 'return', 'new', 'WAMResolvingNativeMachine', '(', 'symbolTable', ')', ';', '}', 'else', '{', 'throw', 'new', 'ImplementationUnavailableException', '(', '""The native library could not be found.""', ',', 'null', ',', 'null', ',', 'null', ')', ';', '}', '}', 'catch', '(', 'UnsatisfiedLinkError', 'e', ')', '{', 'libraryFound', '=', 'false', ';', 'throw', 'new', 'ImplementationUnavailableException', '(', '""The native library could not be found.""', ',', 'e', ',', 'null', ',', 'null', ')', ';', '}', '}']","Creates an instance of this machine, loading and checking for availability of the native implementation library
as required.

@param  symbolTable The symbol table for the machine.

@return An instance of the native l3 machine.

@throws ImplementationUnavailableException If the native library cannot be loaded and linked.","['Creates', 'an', 'instance', 'of', 'this', 'machine', 'loading', 'and', 'checking', 'for', 'availability', 'of', 'the', 'native', 'implementation', 'library', 'as', 'required', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/nativemachine/WAMResolvingNativeMachine.java#L88-L117,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/dataset/api/iterator/MultipleEpochsIterator.java,MultipleEpochsIterator.next,"@Override
    public DataSet next() {
        if (!iter.hasNext() && passes < numPasses) {
            passes++;
            batch = 0;
            log.info(""Epoch "" + passes + "" batch "" + batch);
            iter.reset();
        }
        batch++;

        DataSet next = iter.next();
        if (preProcessor != null)
            preProcessor.preProcess(next);
        return next;
    }",java,"@Override
    public DataSet next() {
        if (!iter.hasNext() && passes < numPasses) {
            passes++;
            batch = 0;
            log.info(""Epoch "" + passes + "" batch "" + batch);
            iter.reset();
        }
        batch++;

        DataSet next = iter.next();
        if (preProcessor != null)
            preProcessor.preProcess(next);
        return next;
    }","['@', 'Override', 'public', 'DataSet', 'next', '(', ')', '{', 'if', '(', '!', 'iter', '.', 'hasNext', '(', ')', '&&', 'passes', '<', 'numPasses', ')', '{', 'passes', '++', ';', 'batch', '=', '0', ';', 'log', '.', 'info', '(', '""Epoch ""', '+', 'passes', '+', '"" batch ""', '+', 'batch', ')', ';', 'iter', '.', 'reset', '(', ')', ';', '}', 'batch', '++', ';', 'DataSet', 'next', '=', 'iter', '.', 'next', '(', ')', ';', 'if', '(', 'preProcessor', '!=', 'null', ')', 'preProcessor', '.', 'preProcess', '(', 'next', ')', ';', 'return', 'next', ';', '}']","Returns the next element in the iteration.

@return the next element in the iteration","['Returns', 'the', 'next', 'element', 'in', 'the', 'iteration', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/dataset/api/iterator/MultipleEpochsIterator.java#L186-L200,test
RestComm/jain-slee,container/common/src/main/java/org/mobicents/slee/container/management/jmx/SleeManagementMBeanImpl.java,SleeManagementMBeanImpl.start,"public void start() throws InvalidStateException, ManagementException {

		try {
			// request to change to STARTING
			final SleeStateChangeRequest startingRequest = new SleeStateChangeRequest() {

				@Override
				public void stateChanged(SleeState oldState) {
					if(logger.isDebugEnabled()) {
						logger.debug(generateMessageWithLogo(""starting""));
					}
					notifyStateChange(oldState, getNewState());
				}

				@Override
				public void requestCompleted() {
					// inner request, executed when the parent completes, to change to RUNNING
					final SleeStateChangeRequest runningRequest = new SleeStateChangeRequest() {

						private SleeState oldState;

						@Override
						public void stateChanged(SleeState oldState) {
							logger.info(generateMessageWithLogo(""started""));
							this.oldState = oldState;
						}

						@Override
						public void requestCompleted() {
							notifyStateChange(oldState, getNewState());
						}

						@Override
						public boolean isBlockingRequest() {
							return true;
						}

						@Override
						public SleeState getNewState() {
							return SleeState.RUNNING;
						}
					};
					try {
						sleeContainer.setSleeState(runningRequest);
					} catch (Throwable e) {
						logger.error(
								""Failed to set container in RUNNING state"", e);
						try {
							stop(false);
						} catch (Throwable f) {
							logger.error(
									""Failed to set container in STOPPED state, after failure to set in RUNNING state"",
									e);
						}
					}
				}

				@Override
				public boolean isBlockingRequest() {
					// should be false, but the tck doesn't like it
					return true;
				}

				@Override
				public SleeState getNewState() {
					return SleeState.STARTING;
				}
			};
			sleeContainer.setSleeState(startingRequest);

		} catch (InvalidStateException ex) {
			throw ex;
		} catch (Exception ex) {
			throw new ManagementException(ex.getMessage(), ex);
		}
	}",java,"public void start() throws InvalidStateException, ManagementException {

		try {
			// request to change to STARTING
			final SleeStateChangeRequest startingRequest = new SleeStateChangeRequest() {

				@Override
				public void stateChanged(SleeState oldState) {
					if(logger.isDebugEnabled()) {
						logger.debug(generateMessageWithLogo(""starting""));
					}
					notifyStateChange(oldState, getNewState());
				}

				@Override
				public void requestCompleted() {
					// inner request, executed when the parent completes, to change to RUNNING
					final SleeStateChangeRequest runningRequest = new SleeStateChangeRequest() {

						private SleeState oldState;

						@Override
						public void stateChanged(SleeState oldState) {
							logger.info(generateMessageWithLogo(""started""));
							this.oldState = oldState;
						}

						@Override
						public void requestCompleted() {
							notifyStateChange(oldState, getNewState());
						}

						@Override
						public boolean isBlockingRequest() {
							return true;
						}

						@Override
						public SleeState getNewState() {
							return SleeState.RUNNING;
						}
					};
					try {
						sleeContainer.setSleeState(runningRequest);
					} catch (Throwable e) {
						logger.error(
								""Failed to set container in RUNNING state"", e);
						try {
							stop(false);
						} catch (Throwable f) {
							logger.error(
									""Failed to set container in STOPPED state, after failure to set in RUNNING state"",
									e);
						}
					}
				}

				@Override
				public boolean isBlockingRequest() {
					// should be false, but the tck doesn't like it
					return true;
				}

				@Override
				public SleeState getNewState() {
					return SleeState.STARTING;
				}
			};
			sleeContainer.setSleeState(startingRequest);

		} catch (InvalidStateException ex) {
			throw ex;
		} catch (Exception ex) {
			throw new ManagementException(ex.getMessage(), ex);
		}
	}","['public', 'void', 'start', '(', ')', 'throws', 'InvalidStateException', ',', 'ManagementException', '{', 'try', '{', '// request to change to STARTING\r', 'final', 'SleeStateChangeRequest', 'startingRequest', '=', 'new', 'SleeStateChangeRequest', '(', ')', '{', '@', 'Override', 'public', 'void', 'stateChanged', '(', 'SleeState', 'oldState', ')', '{', 'if', '(', 'logger', '.', 'isDebugEnabled', '(', ')', ')', '{', 'logger', '.', 'debug', '(', 'generateMessageWithLogo', '(', '""starting""', ')', ')', ';', '}', 'notifyStateChange', '(', 'oldState', ',', 'getNewState', '(', ')', ')', ';', '}', '@', 'Override', 'public', 'void', 'requestCompleted', '(', ')', '{', '// inner request, executed when the parent completes, to change to RUNNING\r', 'final', 'SleeStateChangeRequest', 'runningRequest', '=', 'new', 'SleeStateChangeRequest', '(', ')', '{', 'private', 'SleeState', 'oldState', ';', '@', 'Override', 'public', 'void', 'stateChanged', '(', 'SleeState', 'oldState', ')', '{', 'logger', '.', 'info', '(', 'generateMessageWithLogo', '(', '""started""', ')', ')', ';', 'this', '.', 'oldState', '=', 'oldState', ';', '}', '@', 'Override', 'public', 'void', 'requestCompleted', '(', ')', '{', 'notifyStateChange', '(', 'oldState', ',', 'getNewState', '(', ')', ')', ';', '}', '@', 'Override', 'public', 'boolean', 'isBlockingRequest', '(', ')', '{', 'return', 'true', ';', '}', '@', 'Override', 'public', 'SleeState', 'getNewState', '(', ')', '{', 'return', 'SleeState', '.', 'RUNNING', ';', '}', '}', ';', 'try', '{', 'sleeContainer', '.', 'setSleeState', '(', 'runningRequest', ')', ';', '}', 'catch', '(', 'Throwable', 'e', ')', '{', 'logger', '.', 'error', '(', '""Failed to set container in RUNNING state""', ',', 'e', ')', ';', 'try', '{', 'stop', '(', 'false', ')', ';', '}', 'catch', '(', 'Throwable', 'f', ')', '{', 'logger', '.', 'error', '(', '""Failed to set container in STOPPED state, after failure to set in RUNNING state""', ',', 'e', ')', ';', '}', '}', '}', '@', 'Override', 'public', 'boolean', 'isBlockingRequest', '(', ')', '{', ""// should be false, but the tck doesn't like it\r"", 'return', 'true', ';', '}', '@', 'Override', 'public', 'SleeState', 'getNewState', '(', ')', '{', 'return', 'SleeState', '.', 'STARTING', ';', '}', '}', ';', 'sleeContainer', '.', 'setSleeState', '(', 'startingRequest', ')', ';', '}', 'catch', '(', 'InvalidStateException', 'ex', ')', '{', 'throw', 'ex', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'throw', 'new', 'ManagementException', '(', 'ex', '.', 'getMessage', '(', ')', ',', 'ex', ')', ';', '}', '}']","Start the SLEE container

@see javax.slee.management.SleeManagementMBean#start()","['Start', 'the', 'SLEE', 'container']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/container/management/jmx/SleeManagementMBeanImpl.java#L133-L208,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/nids/Nidsheader.java,Nidsheader.uncompressed,"byte[] uncompressed( ByteBuffer buf, int offset, int uncomplen ) throws IOException
    {
        byte[] header = new byte[offset];
        buf.position(0);
        buf.get(header);
        byte[] out = new byte[offset+uncomplen];
        System.arraycopy(header, 0, out, 0, offset);


        CBZip2InputStream cbzip2 = new CBZip2InputStream();

        int numCompBytes = buf.remaining();
        byte[] bufc = new byte[numCompBytes];
        buf.get(bufc, 0, numCompBytes);

        ByteArrayInputStream bis = new ByteArrayInputStream(bufc, 2, numCompBytes - 2);

        //CBZip2InputStream cbzip2 = new CBZip2InputStream(bis);
        cbzip2.setStream(bis);
        int total = 0;
        int nread;
        byte[] ubuff = new byte[40000];
        byte[] obuff = new byte[40000];
        try {
            while ((nread = cbzip2.read(ubuff)) != -1) {
              if (total + nread > obuff.length) {
                byte[] temp = obuff;
                obuff = new byte[temp.length * 2];
                System.arraycopy(temp, 0, obuff, 0, temp.length);
              }
              System.arraycopy(ubuff, 0, obuff, total, nread);
              total += nread;
            }
            if (obuff.length >= 0)
              System.arraycopy(obuff, 0, out, offset, total);
          } catch (BZip2ReadException ioe) {
            log.warn(""Nexrad2IOSP.uncompress ""+raf.getLocation(), ioe);
        }

        return out;

    }",java,"byte[] uncompressed( ByteBuffer buf, int offset, int uncomplen ) throws IOException
    {
        byte[] header = new byte[offset];
        buf.position(0);
        buf.get(header);
        byte[] out = new byte[offset+uncomplen];
        System.arraycopy(header, 0, out, 0, offset);


        CBZip2InputStream cbzip2 = new CBZip2InputStream();

        int numCompBytes = buf.remaining();
        byte[] bufc = new byte[numCompBytes];
        buf.get(bufc, 0, numCompBytes);

        ByteArrayInputStream bis = new ByteArrayInputStream(bufc, 2, numCompBytes - 2);

        //CBZip2InputStream cbzip2 = new CBZip2InputStream(bis);
        cbzip2.setStream(bis);
        int total = 0;
        int nread;
        byte[] ubuff = new byte[40000];
        byte[] obuff = new byte[40000];
        try {
            while ((nread = cbzip2.read(ubuff)) != -1) {
              if (total + nread > obuff.length) {
                byte[] temp = obuff;
                obuff = new byte[temp.length * 2];
                System.arraycopy(temp, 0, obuff, 0, temp.length);
              }
              System.arraycopy(ubuff, 0, obuff, total, nread);
              total += nread;
            }
            if (obuff.length >= 0)
              System.arraycopy(obuff, 0, out, offset, total);
          } catch (BZip2ReadException ioe) {
            log.warn(""Nexrad2IOSP.uncompress ""+raf.getLocation(), ioe);
        }

        return out;

    }","['byte', '[', ']', 'uncompressed', '(', 'ByteBuffer', 'buf', ',', 'int', 'offset', ',', 'int', 'uncomplen', ')', 'throws', 'IOException', '{', 'byte', '[', ']', 'header', '=', 'new', 'byte', '[', 'offset', ']', ';', 'buf', '.', 'position', '(', '0', ')', ';', 'buf', '.', 'get', '(', 'header', ')', ';', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'offset', '+', 'uncomplen', ']', ';', 'System', '.', 'arraycopy', '(', 'header', ',', '0', ',', 'out', ',', '0', ',', 'offset', ')', ';', 'CBZip2InputStream', 'cbzip2', '=', 'new', 'CBZip2InputStream', '(', ')', ';', 'int', 'numCompBytes', '=', 'buf', '.', 'remaining', '(', ')', ';', 'byte', '[', ']', 'bufc', '=', 'new', 'byte', '[', 'numCompBytes', ']', ';', 'buf', '.', 'get', '(', 'bufc', ',', '0', ',', 'numCompBytes', ')', ';', 'ByteArrayInputStream', 'bis', '=', 'new', 'ByteArrayInputStream', '(', 'bufc', ',', '2', ',', 'numCompBytes', '-', '2', ')', ';', '//CBZip2InputStream cbzip2 = new CBZip2InputStream(bis);\r', 'cbzip2', '.', 'setStream', '(', 'bis', ')', ';', 'int', 'total', '=', '0', ';', 'int', 'nread', ';', 'byte', '[', ']', 'ubuff', '=', 'new', 'byte', '[', '40000', ']', ';', 'byte', '[', ']', 'obuff', '=', 'new', 'byte', '[', '40000', ']', ';', 'try', '{', 'while', '(', '(', 'nread', '=', 'cbzip2', '.', 'read', '(', 'ubuff', ')', ')', '!=', '-', '1', ')', '{', 'if', '(', 'total', '+', 'nread', '>', 'obuff', '.', 'length', ')', '{', 'byte', '[', ']', 'temp', '=', 'obuff', ';', 'obuff', '=', 'new', 'byte', '[', 'temp', '.', 'length', '*', '2', ']', ';', 'System', '.', 'arraycopy', '(', 'temp', ',', '0', ',', 'obuff', ',', '0', ',', 'temp', '.', 'length', ')', ';', '}', 'System', '.', 'arraycopy', '(', 'ubuff', ',', '0', ',', 'obuff', ',', 'total', ',', 'nread', ')', ';', 'total', '+=', 'nread', ';', '}', 'if', '(', 'obuff', '.', 'length', '>=', '0', ')', 'System', '.', 'arraycopy', '(', 'obuff', ',', '0', ',', 'out', ',', 'offset', ',', 'total', ')', ';', '}', 'catch', '(', 'BZip2ReadException', 'ioe', ')', '{', 'log', '.', 'warn', '(', '""Nexrad2IOSP.uncompress ""', '+', 'raf', '.', 'getLocation', '(', ')', ',', 'ioe', ')', ';', '}', 'return', 'out', ';', '}']","uncompress the TDWR products
@param buf          compressed buffer
@param offset       data offset
@param uncomplen    uncompressed length
@return
@throws IOException","['uncompress', 'the', 'TDWR', 'products']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/nids/Nidsheader.java#L2802-L2843,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,ShiftFormulaUtility.fixupRefRelativeRowOneToOne,"protected static Object fixupRefRelativeRowOneToOne(final Object ptg,
			final Row newRow) {
		if (ptg instanceof RefPtgBase) {
			if (ptg instanceof Ref3DPxg) {
				Ref3DPxg ref3dPxg = (Ref3DPxg) ptg;
				Ref3DPxg new3dpxg = new Ref3DPxg(
						ref3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(ref3dPxg.getSheetName(),
										false)),
						new CellReference(newRow.getRowNum(),
								ref3dPxg.getColumn()));
				new3dpxg.setClass(ref3dPxg.getPtgClass());
				new3dpxg.setColRelative(ref3dPxg.isColRelative());
				new3dpxg.setRowRelative(ref3dPxg.isRowRelative());
				new3dpxg.setLastSheetName(ref3dPxg.getLastSheetName());
				return new3dpxg;
			} else {
				RefPtgBase refPtgBase = (RefPtgBase) ptg;
				return new RefPtg(newRow.getRowNum(),
						refPtgBase.getColumn(), refPtgBase.isRowRelative(),
						refPtgBase.isColRelative());

			}
		} else {
			if (ptg instanceof Area3DPxg) {
				Area3DPxg area3dPxg = (Area3DPxg) ptg;
				Area3DPxg new3dpxg = new Area3DPxg(
						area3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(area3dPxg.getSheetName(),
										false)),
						area3dPxg.format2DRefAsString());
				new3dpxg.setClass(area3dPxg.getPtgClass());
				new3dpxg.setFirstColRelative(
						area3dPxg.isFirstColRelative());
				new3dpxg.setLastColRelative(area3dPxg.isLastColRelative());
				int shiftRow = newRow.getRowNum() - area3dPxg.getFirstRow();
				new3dpxg.setFirstRow(area3dPxg.getFirstRow() + shiftRow);
				new3dpxg.setLastRow(area3dPxg.getLastRow() + shiftRow);
				new3dpxg.setFirstRowRelative(
						area3dPxg.isFirstRowRelative());
				new3dpxg.setLastRowRelative(area3dPxg.isLastRowRelative());
				new3dpxg.setLastSheetName(area3dPxg.getLastSheetName());
				return new3dpxg;
			} else {
				AreaPtgBase areaPtgBase = (AreaPtgBase) ptg;
				int shiftRow = newRow.getRowNum()
						- areaPtgBase.getFirstRow();
				return new AreaPtg(areaPtgBase.getFirstRow() + shiftRow,
						areaPtgBase.getLastRow() + shiftRow,
						areaPtgBase.getFirstColumn(),
						areaPtgBase.getLastColumn(),
						areaPtgBase.isFirstRowRelative(),
						areaPtgBase.isLastRowRelative(),
						areaPtgBase.isFirstColRelative(),
						areaPtgBase.isLastColRelative());
			}
		}

	}",java,"protected static Object fixupRefRelativeRowOneToOne(final Object ptg,
			final Row newRow) {
		if (ptg instanceof RefPtgBase) {
			if (ptg instanceof Ref3DPxg) {
				Ref3DPxg ref3dPxg = (Ref3DPxg) ptg;
				Ref3DPxg new3dpxg = new Ref3DPxg(
						ref3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(ref3dPxg.getSheetName(),
										false)),
						new CellReference(newRow.getRowNum(),
								ref3dPxg.getColumn()));
				new3dpxg.setClass(ref3dPxg.getPtgClass());
				new3dpxg.setColRelative(ref3dPxg.isColRelative());
				new3dpxg.setRowRelative(ref3dPxg.isRowRelative());
				new3dpxg.setLastSheetName(ref3dPxg.getLastSheetName());
				return new3dpxg;
			} else {
				RefPtgBase refPtgBase = (RefPtgBase) ptg;
				return new RefPtg(newRow.getRowNum(),
						refPtgBase.getColumn(), refPtgBase.isRowRelative(),
						refPtgBase.isColRelative());

			}
		} else {
			if (ptg instanceof Area3DPxg) {
				Area3DPxg area3dPxg = (Area3DPxg) ptg;
				Area3DPxg new3dpxg = new Area3DPxg(
						area3dPxg.getExternalWorkbookNumber(),
						new SheetIdentifier(null,
								new NameIdentifier(area3dPxg.getSheetName(),
										false)),
						area3dPxg.format2DRefAsString());
				new3dpxg.setClass(area3dPxg.getPtgClass());
				new3dpxg.setFirstColRelative(
						area3dPxg.isFirstColRelative());
				new3dpxg.setLastColRelative(area3dPxg.isLastColRelative());
				int shiftRow = newRow.getRowNum() - area3dPxg.getFirstRow();
				new3dpxg.setFirstRow(area3dPxg.getFirstRow() + shiftRow);
				new3dpxg.setLastRow(area3dPxg.getLastRow() + shiftRow);
				new3dpxg.setFirstRowRelative(
						area3dPxg.isFirstRowRelative());
				new3dpxg.setLastRowRelative(area3dPxg.isLastRowRelative());
				new3dpxg.setLastSheetName(area3dPxg.getLastSheetName());
				return new3dpxg;
			} else {
				AreaPtgBase areaPtgBase = (AreaPtgBase) ptg;
				int shiftRow = newRow.getRowNum()
						- areaPtgBase.getFirstRow();
				return new AreaPtg(areaPtgBase.getFirstRow() + shiftRow,
						areaPtgBase.getLastRow() + shiftRow,
						areaPtgBase.getFirstColumn(),
						areaPtgBase.getLastColumn(),
						areaPtgBase.isFirstRowRelative(),
						areaPtgBase.isLastRowRelative(),
						areaPtgBase.isFirstColRelative(),
						areaPtgBase.isLastColRelative());
			}
		}

	}","['protected', 'static', 'Object', 'fixupRefRelativeRowOneToOne', '(', 'final', 'Object', 'ptg', ',', 'final', 'Row', 'newRow', ')', '{', 'if', '(', 'ptg', 'instanceof', 'RefPtgBase', ')', '{', 'if', '(', 'ptg', 'instanceof', 'Ref3DPxg', ')', '{', 'Ref3DPxg', 'ref3dPxg', '=', '(', 'Ref3DPxg', ')', 'ptg', ';', 'Ref3DPxg', 'new3dpxg', '=', 'new', 'Ref3DPxg', '(', 'ref3dPxg', '.', 'getExternalWorkbookNumber', '(', ')', ',', 'new', 'SheetIdentifier', '(', 'null', ',', 'new', 'NameIdentifier', '(', 'ref3dPxg', '.', 'getSheetName', '(', ')', ',', 'false', ')', ')', ',', 'new', 'CellReference', '(', 'newRow', '.', 'getRowNum', '(', ')', ',', 'ref3dPxg', '.', 'getColumn', '(', ')', ')', ')', ';', 'new3dpxg', '.', 'setClass', '(', 'ref3dPxg', '.', 'getPtgClass', '(', ')', ')', ';', 'new3dpxg', '.', 'setColRelative', '(', 'ref3dPxg', '.', 'isColRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setRowRelative', '(', 'ref3dPxg', '.', 'isRowRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setLastSheetName', '(', 'ref3dPxg', '.', 'getLastSheetName', '(', ')', ')', ';', 'return', 'new3dpxg', ';', '}', 'else', '{', 'RefPtgBase', 'refPtgBase', '=', '(', 'RefPtgBase', ')', 'ptg', ';', 'return', 'new', 'RefPtg', '(', 'newRow', '.', 'getRowNum', '(', ')', ',', 'refPtgBase', '.', 'getColumn', '(', ')', ',', 'refPtgBase', '.', 'isRowRelative', '(', ')', ',', 'refPtgBase', '.', 'isColRelative', '(', ')', ')', ';', '}', '}', 'else', '{', 'if', '(', 'ptg', 'instanceof', 'Area3DPxg', ')', '{', 'Area3DPxg', 'area3dPxg', '=', '(', 'Area3DPxg', ')', 'ptg', ';', 'Area3DPxg', 'new3dpxg', '=', 'new', 'Area3DPxg', '(', 'area3dPxg', '.', 'getExternalWorkbookNumber', '(', ')', ',', 'new', 'SheetIdentifier', '(', 'null', ',', 'new', 'NameIdentifier', '(', 'area3dPxg', '.', 'getSheetName', '(', ')', ',', 'false', ')', ')', ',', 'area3dPxg', '.', 'format2DRefAsString', '(', ')', ')', ';', 'new3dpxg', '.', 'setClass', '(', 'area3dPxg', '.', 'getPtgClass', '(', ')', ')', ';', 'new3dpxg', '.', 'setFirstColRelative', '(', 'area3dPxg', '.', 'isFirstColRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setLastColRelative', '(', 'area3dPxg', '.', 'isLastColRelative', '(', ')', ')', ';', 'int', 'shiftRow', '=', 'newRow', '.', 'getRowNum', '(', ')', '-', 'area3dPxg', '.', 'getFirstRow', '(', ')', ';', 'new3dpxg', '.', 'setFirstRow', '(', 'area3dPxg', '.', 'getFirstRow', '(', ')', '+', 'shiftRow', ')', ';', 'new3dpxg', '.', 'setLastRow', '(', 'area3dPxg', '.', 'getLastRow', '(', ')', '+', 'shiftRow', ')', ';', 'new3dpxg', '.', 'setFirstRowRelative', '(', 'area3dPxg', '.', 'isFirstRowRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setLastRowRelative', '(', 'area3dPxg', '.', 'isLastRowRelative', '(', ')', ')', ';', 'new3dpxg', '.', 'setLastSheetName', '(', 'area3dPxg', '.', 'getLastSheetName', '(', ')', ')', ';', 'return', 'new3dpxg', ';', '}', 'else', '{', 'AreaPtgBase', 'areaPtgBase', '=', '(', 'AreaPtgBase', ')', 'ptg', ';', 'int', 'shiftRow', '=', 'newRow', '.', 'getRowNum', '(', ')', '-', 'areaPtgBase', '.', 'getFirstRow', '(', ')', ';', 'return', 'new', 'AreaPtg', '(', 'areaPtgBase', '.', 'getFirstRow', '(', ')', '+', 'shiftRow', ',', 'areaPtgBase', '.', 'getLastRow', '(', ')', '+', 'shiftRow', ',', 'areaPtgBase', '.', 'getFirstColumn', '(', ')', ',', 'areaPtgBase', '.', 'getLastColumn', '(', ')', ',', 'areaPtgBase', '.', 'isFirstRowRelative', '(', ')', ',', 'areaPtgBase', '.', 'isLastRowRelative', '(', ')', ',', 'areaPtgBase', '.', 'isFirstColRelative', '(', ')', ',', 'areaPtgBase', '.', 'isLastColRelative', '(', ')', ')', ';', '}', '}', '}']","Fixup ref relative row one to one.

@param ptg
the ptg
@param newRow
the new row
@return the object","['Fixup', 'ref', 'relative', 'row', 'one', 'to', 'one', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java#L278-L338,test
cologneintelligence/FitGoodies,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/readers/CSVRecordReader.java,CSVRecordReader.nextRecord,"@Override
	public final boolean nextRecord() throws IOException {
		final String line = reader.readLine();
		if (line == null) {
			parts = null;
			return false;
		}

		final List<String> newParts = splitLine(line);
		parts = newParts.toArray(new String[newParts.size()]);
		partIndex = 0;
		return true;
	}",java,"@Override
	public final boolean nextRecord() throws IOException {
		final String line = reader.readLine();
		if (line == null) {
			parts = null;
			return false;
		}

		final List<String> newParts = splitLine(line);
		parts = newParts.toArray(new String[newParts.size()]);
		partIndex = 0;
		return true;
	}","['@', 'Override', 'public', 'final', 'boolean', 'nextRecord', '(', ')', 'throws', 'IOException', '{', 'final', 'String', 'line', '=', 'reader', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '==', 'null', ')', '{', 'parts', '=', 'null', ';', 'return', 'false', ';', '}', 'final', 'List', '<', 'String', '>', 'newParts', '=', 'splitLine', '(', 'line', ')', ';', 'parts', '=', 'newParts', '.', 'toArray', '(', 'new', 'String', '[', 'newParts', '.', 'size', '(', ')', ']', ')', ';', 'partIndex', '=', '0', ';', 'return', 'true', ';', '}']","Reads the next row.

@return {@code true} if a record set could been read,
{@code false} on end of file.
@throws IOException when the underlying Stream reports an error","['Reads', 'the', 'next', 'row', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/readers/CSVRecordReader.java#L113-L125,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/security/symmetrickey/OSymmetricKey.java,OSymmetricKey.fromStream,"public static OSymmetricKey fromStream(final String algorithm, final InputStream is) {
    String base64Key = null;

    try {
      base64Key = OIOUtils.readStreamAsString(is);
    } catch (Exception ex) {
      throw OException.wrapException(new OSecurityException(""OSymmetricKey.fromStream() Exception: "" + ex.getMessage()), ex);
    }

    return new OSymmetricKey(algorithm, base64Key);
  }",java,"public static OSymmetricKey fromStream(final String algorithm, final InputStream is) {
    String base64Key = null;

    try {
      base64Key = OIOUtils.readStreamAsString(is);
    } catch (Exception ex) {
      throw OException.wrapException(new OSecurityException(""OSymmetricKey.fromStream() Exception: "" + ex.getMessage()), ex);
    }

    return new OSymmetricKey(algorithm, base64Key);
  }","['public', 'static', 'OSymmetricKey', 'fromStream', '(', 'final', 'String', 'algorithm', ',', 'final', 'InputStream', 'is', ')', '{', 'String', 'base64Key', '=', 'null', ';', 'try', '{', 'base64Key', '=', 'OIOUtils', '.', 'readStreamAsString', '(', 'is', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'throw', 'OException', '.', 'wrapException', '(', 'new', 'OSecurityException', '(', '""OSymmetricKey.fromStream() Exception: ""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ',', 'ex', ')', ';', '}', 'return', 'new', 'OSymmetricKey', '(', 'algorithm', ',', 'base64Key', ')', ';', '}']",Creates an OSymmetricKey from an InputStream containing a Base64 key.,"['Creates', 'an', 'OSymmetricKey', 'from', 'an', 'InputStream', 'containing', 'a', 'Base64', 'key', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/security/symmetrickey/OSymmetricKey.java#L267-L277,test
liveontologies/elk-reasoner,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/saturation/rules/RuleApplicationTimer.java,RuleApplicationTimer.add,"public synchronized void add(RuleApplicationTimer timer) {
		timeOwlThingContextInitRule += timer.timeOwlThingContextInitRule;
		timeRootContextInitializationRule += timer.timeRootContextInitializationRule;
		timeDisjointSubsumerFromMemberRule += timer.timeDisjointSubsumerFromMemberRule;
		timeContradictionFromNegationRule += timer.timeContradictionFromNegationRule;
		timeObjectIntersectionFromFirstConjunctRule += timer.timeObjectIntersectionFromFirstConjunctRule;
		timeObjectIntersectionFromSecondConjunctRule += timer.timeObjectIntersectionFromSecondConjunctRule;
		timeSuperClassFromSubClassRule += timer.timeSuperClassFromSubClassRule;
		timePropagationFromExistentialFillerRule += timer.timePropagationFromExistentialFillerRule;
		timeObjectUnionFromDisjunctRule += timer.timeObjectUnionFromDisjunctRule;
		timeBackwardLinkChainFromBackwardLinkRule += timer.timeBackwardLinkChainFromBackwardLinkRule;
		timeReflexiveBackwardLinkCompositionRule += timer.timeReflexiveBackwardLinkCompositionRule;
		timeNonReflexiveBackwardLinkCompositionRule += timer.timeNonReflexiveBackwardLinkCompositionRule;
		timeSubsumerBackwardLinkRule += timer.timeSubsumerBackwardLinkRule;
		timeContradictionOverBackwardLinkRule += timer.timeContradictionOverBackwardLinkRule;
		timeContradictionPropagationRule += timer.timeContradictionPropagationRule;
		timeContradictionCompositionRule += timer.timeContradictionCompositionRule;
		timeIndexedObjectIntersectionOfDecomposition += timer.timeIndexedObjectIntersectionOfDecomposition;
		timeIndexedObjectSomeValuesFromDecomposition += timer.timeIndexedObjectSomeValuesFromDecomposition;
		timeIndexedObjectComplementOfDecomposition += timer.timeIndexedObjectComplementOfDecomposition;
		timeIndexedObjectHasSelfDecomposition += timer.timeIndexedObjectHasSelfDecomposition;
		timeContradictionFromOwlNothingRule += timer.timeContradictionFromOwlNothingRule;
		timeSubsumerPropagationRule += timer.timeSubsumerPropagationRule;
		timePropagationInitializationRule += timer.timePropagationInitializationRule;
		timeBackwardLinkFromForwardLinkRule += timer.timeBackwardLinkFromForwardLinkRule;
		timeComposedFromDecomposedSubsumerRule += timer.timeComposedFromDecomposedSubsumerRule;
		timeIndexedClassDecompositionRule += timer.timeIndexedClassDecompositionRule;
		timeIndexedClassFromDefinitionRule += timer.timeIndexedClassFromDefinitionRule;
		timeEquivalentClassFirstFromSecondRule += timer.timeEquivalentClassFirstFromSecondRule;
		timeEquivalentClassSecondFromFirstRule += timer.timeEquivalentClassSecondFromFirstRule;
	}",java,"public synchronized void add(RuleApplicationTimer timer) {
		timeOwlThingContextInitRule += timer.timeOwlThingContextInitRule;
		timeRootContextInitializationRule += timer.timeRootContextInitializationRule;
		timeDisjointSubsumerFromMemberRule += timer.timeDisjointSubsumerFromMemberRule;
		timeContradictionFromNegationRule += timer.timeContradictionFromNegationRule;
		timeObjectIntersectionFromFirstConjunctRule += timer.timeObjectIntersectionFromFirstConjunctRule;
		timeObjectIntersectionFromSecondConjunctRule += timer.timeObjectIntersectionFromSecondConjunctRule;
		timeSuperClassFromSubClassRule += timer.timeSuperClassFromSubClassRule;
		timePropagationFromExistentialFillerRule += timer.timePropagationFromExistentialFillerRule;
		timeObjectUnionFromDisjunctRule += timer.timeObjectUnionFromDisjunctRule;
		timeBackwardLinkChainFromBackwardLinkRule += timer.timeBackwardLinkChainFromBackwardLinkRule;
		timeReflexiveBackwardLinkCompositionRule += timer.timeReflexiveBackwardLinkCompositionRule;
		timeNonReflexiveBackwardLinkCompositionRule += timer.timeNonReflexiveBackwardLinkCompositionRule;
		timeSubsumerBackwardLinkRule += timer.timeSubsumerBackwardLinkRule;
		timeContradictionOverBackwardLinkRule += timer.timeContradictionOverBackwardLinkRule;
		timeContradictionPropagationRule += timer.timeContradictionPropagationRule;
		timeContradictionCompositionRule += timer.timeContradictionCompositionRule;
		timeIndexedObjectIntersectionOfDecomposition += timer.timeIndexedObjectIntersectionOfDecomposition;
		timeIndexedObjectSomeValuesFromDecomposition += timer.timeIndexedObjectSomeValuesFromDecomposition;
		timeIndexedObjectComplementOfDecomposition += timer.timeIndexedObjectComplementOfDecomposition;
		timeIndexedObjectHasSelfDecomposition += timer.timeIndexedObjectHasSelfDecomposition;
		timeContradictionFromOwlNothingRule += timer.timeContradictionFromOwlNothingRule;
		timeSubsumerPropagationRule += timer.timeSubsumerPropagationRule;
		timePropagationInitializationRule += timer.timePropagationInitializationRule;
		timeBackwardLinkFromForwardLinkRule += timer.timeBackwardLinkFromForwardLinkRule;
		timeComposedFromDecomposedSubsumerRule += timer.timeComposedFromDecomposedSubsumerRule;
		timeIndexedClassDecompositionRule += timer.timeIndexedClassDecompositionRule;
		timeIndexedClassFromDefinitionRule += timer.timeIndexedClassFromDefinitionRule;
		timeEquivalentClassFirstFromSecondRule += timer.timeEquivalentClassFirstFromSecondRule;
		timeEquivalentClassSecondFromFirstRule += timer.timeEquivalentClassSecondFromFirstRule;
	}","['public', 'synchronized', 'void', 'add', '(', 'RuleApplicationTimer', 'timer', ')', '{', 'timeOwlThingContextInitRule', '+=', 'timer', '.', 'timeOwlThingContextInitRule', ';', 'timeRootContextInitializationRule', '+=', 'timer', '.', 'timeRootContextInitializationRule', ';', 'timeDisjointSubsumerFromMemberRule', '+=', 'timer', '.', 'timeDisjointSubsumerFromMemberRule', ';', 'timeContradictionFromNegationRule', '+=', 'timer', '.', 'timeContradictionFromNegationRule', ';', 'timeObjectIntersectionFromFirstConjunctRule', '+=', 'timer', '.', 'timeObjectIntersectionFromFirstConjunctRule', ';', 'timeObjectIntersectionFromSecondConjunctRule', '+=', 'timer', '.', 'timeObjectIntersectionFromSecondConjunctRule', ';', 'timeSuperClassFromSubClassRule', '+=', 'timer', '.', 'timeSuperClassFromSubClassRule', ';', 'timePropagationFromExistentialFillerRule', '+=', 'timer', '.', 'timePropagationFromExistentialFillerRule', ';', 'timeObjectUnionFromDisjunctRule', '+=', 'timer', '.', 'timeObjectUnionFromDisjunctRule', ';', 'timeBackwardLinkChainFromBackwardLinkRule', '+=', 'timer', '.', 'timeBackwardLinkChainFromBackwardLinkRule', ';', 'timeReflexiveBackwardLinkCompositionRule', '+=', 'timer', '.', 'timeReflexiveBackwardLinkCompositionRule', ';', 'timeNonReflexiveBackwardLinkCompositionRule', '+=', 'timer', '.', 'timeNonReflexiveBackwardLinkCompositionRule', ';', 'timeSubsumerBackwardLinkRule', '+=', 'timer', '.', 'timeSubsumerBackwardLinkRule', ';', 'timeContradictionOverBackwardLinkRule', '+=', 'timer', '.', 'timeContradictionOverBackwardLinkRule', ';', 'timeContradictionPropagationRule', '+=', 'timer', '.', 'timeContradictionPropagationRule', ';', 'timeContradictionCompositionRule', '+=', 'timer', '.', 'timeContradictionCompositionRule', ';', 'timeIndexedObjectIntersectionOfDecomposition', '+=', 'timer', '.', 'timeIndexedObjectIntersectionOfDecomposition', ';', 'timeIndexedObjectSomeValuesFromDecomposition', '+=', 'timer', '.', 'timeIndexedObjectSomeValuesFromDecomposition', ';', 'timeIndexedObjectComplementOfDecomposition', '+=', 'timer', '.', 'timeIndexedObjectComplementOfDecomposition', ';', 'timeIndexedObjectHasSelfDecomposition', '+=', 'timer', '.', 'timeIndexedObjectHasSelfDecomposition', ';', 'timeContradictionFromOwlNothingRule', '+=', 'timer', '.', 'timeContradictionFromOwlNothingRule', ';', 'timeSubsumerPropagationRule', '+=', 'timer', '.', 'timeSubsumerPropagationRule', ';', 'timePropagationInitializationRule', '+=', 'timer', '.', 'timePropagationInitializationRule', ';', 'timeBackwardLinkFromForwardLinkRule', '+=', 'timer', '.', 'timeBackwardLinkFromForwardLinkRule', ';', 'timeComposedFromDecomposedSubsumerRule', '+=', 'timer', '.', 'timeComposedFromDecomposedSubsumerRule', ';', 'timeIndexedClassDecompositionRule', '+=', 'timer', '.', 'timeIndexedClassDecompositionRule', ';', 'timeIndexedClassFromDefinitionRule', '+=', 'timer', '.', 'timeIndexedClassFromDefinitionRule', ';', 'timeEquivalentClassFirstFromSecondRule', '+=', 'timer', '.', 'timeEquivalentClassFirstFromSecondRule', ';', 'timeEquivalentClassSecondFromFirstRule', '+=', 'timer', '.', 'timeEquivalentClassSecondFromFirstRule', ';', '}']","Add the values the corresponding values of the given timer

@param timer","['Add', 'the', 'values', 'the', 'corresponding', 'values', 'of', 'the', 'given', 'timer']",cfbe5279a57e0433d45c1676c7658ddb6e29b9eb,https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/saturation/rules/RuleApplicationTimer.java#L215-L245,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java,QueryConcept.getConceptType,"public String getConceptType() {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_conceptType == null)
      jcasType.jcas.throwFeatMissing(""conceptType"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    return jcasType.ll_cas.ll_getStringValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_conceptType);}",java,"public String getConceptType() {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_conceptType == null)
      jcasType.jcas.throwFeatMissing(""conceptType"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    return jcasType.ll_cas.ll_getStringValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_conceptType);}","['public', 'String', 'getConceptType', '(', ')', '{', 'if', '(', 'QueryConcept_Type', '.', 'featOkTst', '&&', '(', '(', 'QueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeat_conceptType', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""conceptType""', ',', '""edu.cmu.lti.oaqa.type.retrieval.QueryConcept""', ')', ';', 'return', 'jcasType', '.', 'll_cas', '.', 'll_getStringValue', '(', 'addr', ',', '(', '(', 'QueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeatCode_conceptType', ')', ';', '}']","getter for conceptType - gets The type of this concept.
@generated
@return value of the feature","['getter', 'for', 'conceptType', '-', 'gets', 'The', 'type', 'of', 'this', 'concept', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java#L97-L100,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/core/joran/GenericConfigurator.java,GenericConfigurator.doConfigure,"public final void doConfigure(File file) throws JoranException {
    FileInputStream fis = null;
    try {
      URL url = file.toURI().toURL();
      informContextOfURLUsedForConfiguration(getContext(), url);
      fis = new FileInputStream(file);

      // this closes the stream for us
      doConfigure(fis, url.toExternalForm());
    } catch (IOException ioe) {
      String errMsg = ""Could not open ["" + file.getPath() + ""]."";
      addError(errMsg, ioe);
      throw new JoranException(errMsg, ioe);
    } finally {
      CloseUtil.closeQuietly(fis);
    }
  }",java,"public final void doConfigure(File file) throws JoranException {
    FileInputStream fis = null;
    try {
      URL url = file.toURI().toURL();
      informContextOfURLUsedForConfiguration(getContext(), url);
      fis = new FileInputStream(file);

      // this closes the stream for us
      doConfigure(fis, url.toExternalForm());
    } catch (IOException ioe) {
      String errMsg = ""Could not open ["" + file.getPath() + ""]."";
      addError(errMsg, ioe);
      throw new JoranException(errMsg, ioe);
    } finally {
      CloseUtil.closeQuietly(fis);
    }
  }","['public', 'final', 'void', 'doConfigure', '(', 'File', 'file', ')', 'throws', 'JoranException', '{', 'FileInputStream', 'fis', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'file', '.', 'toURI', '(', ')', '.', 'toURL', '(', ')', ';', 'informContextOfURLUsedForConfiguration', '(', 'getContext', '(', ')', ',', 'url', ')', ';', 'fis', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', '// this closes the stream for us', 'doConfigure', '(', 'fis', ',', 'url', '.', 'toExternalForm', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'String', 'errMsg', '=', '""Could not open [""', '+', 'file', '.', 'getPath', '(', ')', '+', '""].""', ';', 'addError', '(', 'errMsg', ',', 'ioe', ')', ';', 'throw', 'new', 'JoranException', '(', 'errMsg', ',', 'ioe', ')', ';', '}', 'finally', '{', 'CloseUtil', '.', 'closeQuietly', '(', 'fis', ')', ';', '}', '}']","Configures logback with the configuration XML read from a given file

@param file the file, containing the configuration XML
@throws JoranException configuration error occurred","['Configures', 'logback', 'with', 'the', 'configuration', 'XML', 'read', 'from', 'a', 'given', 'file']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/joran/GenericConfigurator.java#L88-L104,test
orientechnologies/orientdb,distributed/src/main/java/com/orientechnologies/orient/server/distributed/impl/task/OAbstract2pcTask.java,OAbstract2pcTask.getDistributedTimeout,"@Override
  public long getDistributedTimeout() {
    final long to = OGlobalConfiguration.DISTRIBUTED_CRUD_TASK_SYNCH_TIMEOUT.getValueAsLong();
    return to + ((to / 2) * tasks.size());
  }",java,"@Override
  public long getDistributedTimeout() {
    final long to = OGlobalConfiguration.DISTRIBUTED_CRUD_TASK_SYNCH_TIMEOUT.getValueAsLong();
    return to + ((to / 2) * tasks.size());
  }","['@', 'Override', 'public', 'long', 'getDistributedTimeout', '(', ')', '{', 'final', 'long', 'to', '=', 'OGlobalConfiguration', '.', 'DISTRIBUTED_CRUD_TASK_SYNCH_TIMEOUT', '.', 'getValueAsLong', '(', ')', ';', 'return', 'to', '+', '(', '(', 'to', '/', '2', ')', '*', 'tasks', '.', 'size', '(', ')', ')', ';', '}']","Computes the timeout according to the transaction size.

@return","['Computes', 'the', 'timeout', 'according', 'to', 'the', 'transaction', 'size', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/distributed/src/main/java/com/orientechnologies/orient/server/distributed/impl/task/OAbstract2pcTask.java#L124-L128,test
akquinet/chameRIA,chameria-webview-factory/src/main/java/de/akquinet/chameria/webview/WebViewFactory.java,WebViewFactory.start,"@Validate
    public  void start() {
        QApplication.invokeLater(new Runnable() {
            public void run() {
                configureApplication();
                m_logger.info(""Creating a web ui..."");
                synchronized (WebViewFactory.this) {
                    m_browser = new WebWindow(m_url, WebViewFactory.this);

                    configureWindow(m_browser);
                    m_browser.show();
                }
                m_logger.info(""Web UI created."");
            }
        });
    }",java,"@Validate
    public  void start() {
        QApplication.invokeLater(new Runnable() {
            public void run() {
                configureApplication();
                m_logger.info(""Creating a web ui..."");
                synchronized (WebViewFactory.this) {
                    m_browser = new WebWindow(m_url, WebViewFactory.this);

                    configureWindow(m_browser);
                    m_browser.show();
                }
                m_logger.info(""Web UI created."");
            }
        });
    }","['@', 'Validate', 'public', 'void', 'start', '(', ')', '{', 'QApplication', '.', 'invokeLater', '(', 'new', 'Runnable', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'configureApplication', '(', ')', ';', 'm_logger', '.', 'info', '(', '""Creating a web ui...""', ')', ';', 'synchronized', '(', 'WebViewFactory', '.', 'this', ')', '{', 'm_browser', '=', 'new', 'WebWindow', '(', 'm_url', ',', 'WebViewFactory', '.', 'this', ')', ';', 'configureWindow', '(', 'm_browser', ')', ';', 'm_browser', '.', 'show', '(', ')', ';', '}', 'm_logger', '.', 'info', '(', '""Web UI created.""', ')', ';', '}', '}', ')', ';', '}']","Starts the browser and loads the
set url in the web view.","['Starts', 'the', 'browser', 'and', 'loads', 'the', 'set', 'url', 'in', 'the', 'web', 'view', '.']",a5c154e0d0f70f24381db93d57b70364e6c2db0b,https://github.com/akquinet/chameRIA/blob/a5c154e0d0f70f24381db93d57b70364e6c2db0b/chameria-webview-factory/src/main/java/de/akquinet/chameria/webview/WebViewFactory.java#L313-L328,test
rupertlssmith/lojix,base/struts-tools/src/main/com/thesett/common/webapp/actions/ErrorHandler.java,ErrorHandler.handleErrors,"public static void handleErrors(Throwable exception, ActionErrors errors)
    {
        // Log the error.
        log.log(Level.SEVERE, exception.getMessage(), exception);

        if (exception.getCause() == null)
        {
            log.fine(""Exception.getCause() is null"");
        }

        // Unwrap the exception if it is a WrappedStrutsServletException, which is a place holder for returning
        // other throwables from struts actions.
        // See BaseAction and WrappedStrutsServletException for more information.
        if ((exception instanceof WrappedStrutsServletException) && (exception.getCause() != null))
        {
            exception = exception.getCause();
            log.fine(""Unwrapped WrappedStrutsServletException"");
        }

        // Create an error called 'exception' in the Struts errors for debugging purposes
        // Debugging code can print this piece of html containing the exception stack trace at the bottom
        // of the page for convenience.
        Writer stackTrace = new StringWriter();

        exception.printStackTrace(new PrintWriter(new HTMLFilter(stackTrace)));
        errors.add(""exception"", new ActionError(""error.general"", stackTrace));

        // Check if the exception is a user readable exception
        if (exception instanceof UserReadableError)
        {
            UserReadableError userError = (UserReadableError) exception;

            // Check that it contains a user readable message
            if (userError.isUserReadable())
            {
                // Check if there is an error message key to use
                if (userError.getUserMessageKey() != null)
                {
                    errors.add(""generalerror"",
                        new ActionError(userError.getUserMessageKey(), userError.getUserMessageKey()));
                }

                // There is no error message key to use so default to error.general and pass the error message as an
                // argument so that it will be displayed
                else
                {
                    errors.add(""generalerror"", new ActionError(""error.general"", userError.getUserMessage()));
                }

                return;
            }
        }

        // Not a user reable exception so print a standard error message
        errors.add(""generalerror"", new ActionError(""error.internalerror""));
    }",java,"public static void handleErrors(Throwable exception, ActionErrors errors)
    {
        // Log the error.
        log.log(Level.SEVERE, exception.getMessage(), exception);

        if (exception.getCause() == null)
        {
            log.fine(""Exception.getCause() is null"");
        }

        // Unwrap the exception if it is a WrappedStrutsServletException, which is a place holder for returning
        // other throwables from struts actions.
        // See BaseAction and WrappedStrutsServletException for more information.
        if ((exception instanceof WrappedStrutsServletException) && (exception.getCause() != null))
        {
            exception = exception.getCause();
            log.fine(""Unwrapped WrappedStrutsServletException"");
        }

        // Create an error called 'exception' in the Struts errors for debugging purposes
        // Debugging code can print this piece of html containing the exception stack trace at the bottom
        // of the page for convenience.
        Writer stackTrace = new StringWriter();

        exception.printStackTrace(new PrintWriter(new HTMLFilter(stackTrace)));
        errors.add(""exception"", new ActionError(""error.general"", stackTrace));

        // Check if the exception is a user readable exception
        if (exception instanceof UserReadableError)
        {
            UserReadableError userError = (UserReadableError) exception;

            // Check that it contains a user readable message
            if (userError.isUserReadable())
            {
                // Check if there is an error message key to use
                if (userError.getUserMessageKey() != null)
                {
                    errors.add(""generalerror"",
                        new ActionError(userError.getUserMessageKey(), userError.getUserMessageKey()));
                }

                // There is no error message key to use so default to error.general and pass the error message as an
                // argument so that it will be displayed
                else
                {
                    errors.add(""generalerror"", new ActionError(""error.general"", userError.getUserMessage()));
                }

                return;
            }
        }

        // Not a user reable exception so print a standard error message
        errors.add(""generalerror"", new ActionError(""error.internalerror""));
    }","['public', 'static', 'void', 'handleErrors', '(', 'Throwable', 'exception', ',', 'ActionErrors', 'errors', ')', '{', '// Log the error.', 'log', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'exception', '.', 'getMessage', '(', ')', ',', 'exception', ')', ';', 'if', '(', 'exception', '.', 'getCause', '(', ')', '==', 'null', ')', '{', 'log', '.', 'fine', '(', '""Exception.getCause() is null""', ')', ';', '}', '// Unwrap the exception if it is a WrappedStrutsServletException, which is a place holder for returning', '// other throwables from struts actions.', '// See BaseAction and WrappedStrutsServletException for more information.', 'if', '(', '(', 'exception', 'instanceof', 'WrappedStrutsServletException', ')', '&&', '(', 'exception', '.', 'getCause', '(', ')', '!=', 'null', ')', ')', '{', 'exception', '=', 'exception', '.', 'getCause', '(', ')', ';', 'log', '.', 'fine', '(', '""Unwrapped WrappedStrutsServletException""', ')', ';', '}', ""// Create an error called 'exception' in the Struts errors for debugging purposes"", '// Debugging code can print this piece of html containing the exception stack trace at the bottom', '// of the page for convenience.', 'Writer', 'stackTrace', '=', 'new', 'StringWriter', '(', ')', ';', 'exception', '.', 'printStackTrace', '(', 'new', 'PrintWriter', '(', 'new', 'HTMLFilter', '(', 'stackTrace', ')', ')', ')', ';', 'errors', '.', 'add', '(', '""exception""', ',', 'new', 'ActionError', '(', '""error.general""', ',', 'stackTrace', ')', ')', ';', '// Check if the exception is a user readable exception', 'if', '(', 'exception', 'instanceof', 'UserReadableError', ')', '{', 'UserReadableError', 'userError', '=', '(', 'UserReadableError', ')', 'exception', ';', '// Check that it contains a user readable message', 'if', '(', 'userError', '.', 'isUserReadable', '(', ')', ')', '{', '// Check if there is an error message key to use', 'if', '(', 'userError', '.', 'getUserMessageKey', '(', ')', '!=', 'null', ')', '{', 'errors', '.', 'add', '(', '""generalerror""', ',', 'new', 'ActionError', '(', 'userError', '.', 'getUserMessageKey', '(', ')', ',', 'userError', '.', 'getUserMessageKey', '(', ')', ')', ')', ';', '}', '// There is no error message key to use so default to error.general and pass the error message as an', '// argument so that it will be displayed', 'else', '{', 'errors', '.', 'add', '(', '""generalerror""', ',', 'new', 'ActionError', '(', '""error.general""', ',', 'userError', '.', 'getUserMessage', '(', ')', ')', ')', ';', '}', 'return', ';', '}', '}', '// Not a user reable exception so print a standard error message', 'errors', '.', 'add', '(', '""generalerror""', ',', 'new', 'ActionError', '(', '""error.internalerror""', ')', ')', ';', '}']","Converts an exception into struts action errors. The exception stack trace is stored under the 'exception'
message key. The message resource 'error.internalerror' is stored under the message key 'generalerror'. The stack
trace is pretty printed in HTML.

@param exception The exception to be converted into struts action errors.
@param errors    The struts action errors object into which the action errors should be placed.

@todo  This method can be modified to check if the exception is a user readable exception and to insert the user
readable message under the 'generalerror' message key. Currently it does not handle user readable errors
like this.","['Converts', 'an', 'exception', 'into', 'struts', 'action', 'errors', '.', 'The', 'exception', 'stack', 'trace', 'is', 'stored', 'under', 'the', 'exception', 'message', 'key', '.', 'The', 'message', 'resource', 'error', '.', 'internalerror', 'is', 'stored', 'under', 'the', 'message', 'key', 'generalerror', '.', 'The', 'stack', 'trace', 'is', 'pretty', 'printed', 'in', 'HTML', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/struts-tools/src/main/com/thesett/common/webapp/actions/ErrorHandler.java#L63-L118,test
ReactiveX/RxJava,src/main/java/io/reactivex/internal/util/BackpressureHelper.java,BackpressureHelper.add,"public static long add(AtomicLong requested, long n) {
        for (;;) {
            long r = requested.get();
            if (r == Long.MAX_VALUE) {
                return Long.MAX_VALUE;
            }
            long u = addCap(r, n);
            if (requested.compareAndSet(r, u)) {
                return r;
            }
        }
    }",java,"public static long add(AtomicLong requested, long n) {
        for (;;) {
            long r = requested.get();
            if (r == Long.MAX_VALUE) {
                return Long.MAX_VALUE;
            }
            long u = addCap(r, n);
            if (requested.compareAndSet(r, u)) {
                return r;
            }
        }
    }","['public', 'static', 'long', 'add', '(', 'AtomicLong', 'requested', ',', 'long', 'n', ')', '{', 'for', '(', ';', ';', ')', '{', 'long', 'r', '=', 'requested', '.', 'get', '(', ')', ';', 'if', '(', 'r', '==', 'Long', '.', 'MAX_VALUE', ')', '{', 'return', 'Long', '.', 'MAX_VALUE', ';', '}', 'long', 'u', '=', 'addCap', '(', 'r', ',', 'n', ')', ';', 'if', '(', 'requested', '.', 'compareAndSet', '(', 'r', ',', 'u', ')', ')', '{', 'return', 'r', ';', '}', '}', '}']","Atomically adds the positive value n to the requested value in the AtomicLong and
caps the result at Long.MAX_VALUE and returns the previous value.
@param requested the AtomicLong holding the current requested value
@param n the value to add, must be positive (not verified)
@return the original value before the add","['Atomically', 'adds', 'the', 'positive', 'value', 'n', 'to', 'the', 'requested', 'value', 'in', 'the', 'AtomicLong', 'and', 'caps', 'the', 'result', 'at', 'Long', '.', 'MAX_VALUE', 'and', 'returns', 'the', 'previous', 'value', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/util/BackpressureHelper.java#L65-L76,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/db/GeoPackageConnection.java,GeoPackageConnection.wrapQuery,"public CursorResult wrapQuery(String sql,
                                  String[] selectionArgs) {
        return new CursorResult(rawQuery(sql, selectionArgs));
    }",java,"public CursorResult wrapQuery(String sql,
                                  String[] selectionArgs) {
        return new CursorResult(rawQuery(sql, selectionArgs));
    }","['public', 'CursorResult', 'wrapQuery', '(', 'String', 'sql', ',', 'String', '[', ']', 'selectionArgs', ')', '{', 'return', 'new', 'CursorResult', '(', 'rawQuery', '(', 'sql', ',', 'selectionArgs', ')', ')', ';', '}']","Perform the query and wrap as a result

@param sql           sql statement
@param selectionArgs selection arguments
@return result
@since 3.1.0","['Perform', 'the', 'query', 'and', 'wrap', 'as', 'a', 'result']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/db/GeoPackageConnection.java#L247-L250,test
streamsets/datacollector,basic-lib/src/main/java/com/streamsets/pipeline/stage/origin/http/HttpClientSource.java,HttpClientSource.incrementSourceOffset,"private void incrementSourceOffset(HttpSourceOffset sourceOffset, int increment) {
    if (conf.pagination.mode == PaginationMode.BY_PAGE) {
      sourceOffset.incrementStartAt(1);
    } else if (conf.pagination.mode == PaginationMode.BY_OFFSET) {
      sourceOffset.incrementStartAt(increment);
    }
  }",java,"private void incrementSourceOffset(HttpSourceOffset sourceOffset, int increment) {
    if (conf.pagination.mode == PaginationMode.BY_PAGE) {
      sourceOffset.incrementStartAt(1);
    } else if (conf.pagination.mode == PaginationMode.BY_OFFSET) {
      sourceOffset.incrementStartAt(increment);
    }
  }","['private', 'void', 'incrementSourceOffset', '(', 'HttpSourceOffset', 'sourceOffset', ',', 'int', 'increment', ')', '{', 'if', '(', 'conf', '.', 'pagination', '.', 'mode', '==', 'PaginationMode', '.', 'BY_PAGE', ')', '{', 'sourceOffset', '.', 'incrementStartAt', '(', '1', ')', ';', '}', 'else', 'if', '(', 'conf', '.', 'pagination', '.', 'mode', '==', 'PaginationMode', '.', 'BY_OFFSET', ')', '{', 'sourceOffset', '.', 'incrementStartAt', '(', 'increment', ')', ';', '}', '}']","Increments the current source offset's startAt portion by the specified amount.
This is the number of records parsed when paging BY_OFFSET or 1 if incrementing
BY_PAGE.

@param sourceOffset the source offset
@param increment the amount to increment the offset by","['Increments', 'the', 'current', 'source', 'offset', 's', 'startAt', 'portion', 'by', 'the', 'specified', 'amount', '.', 'This', 'is', 'the', 'number', 'of', 'records', 'parsed', 'when', 'paging', 'BY_OFFSET', 'or', '1', 'if', 'incrementing', 'BY_PAGE', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/basic-lib/src/main/java/com/streamsets/pipeline/stage/origin/http/HttpClientSource.java#L714-L720,test
spring-projects/spring-security,crypto/src/main/java/org/springframework/security/crypto/password/MessageDigestPasswordEncoder.java,MessageDigestPasswordEncoder.encode,"public String encode(CharSequence rawPassword) {
		String salt = PREFIX + this.saltGenerator.generateKey() + SUFFIX;
		return digest(salt, rawPassword);
	}",java,"public String encode(CharSequence rawPassword) {
		String salt = PREFIX + this.saltGenerator.generateKey() + SUFFIX;
		return digest(salt, rawPassword);
	}","['public', 'String', 'encode', '(', 'CharSequence', 'rawPassword', ')', '{', 'String', 'salt', '=', 'PREFIX', '+', 'this', '.', 'saltGenerator', '.', 'generateKey', '(', ')', '+', 'SUFFIX', ';', 'return', 'digest', '(', 'salt', ',', 'rawPassword', ')', ';', '}']","Encodes the rawPass using a MessageDigest. If a salt is specified it will be merged
with the password before encoding.

@param rawPassword The plain text password
@return Hex string of password digest (or base64 encoded string if
encodeHashAsBase64 is enabled.","['Encodes', 'the', 'rawPass', 'using', 'a', 'MessageDigest', '.', 'If', 'a', 'salt', 'is', 'specified', 'it', 'will', 'be', 'merged', 'with', 'the', 'password', 'before', 'encoding', '.']",98a8467e4c2ae05b3e09c67ece856944fa48ed23,https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/crypto/src/main/java/org/springframework/security/crypto/password/MessageDigestPasswordEncoder.java#L114-L117,test
fracpete/ptstemmer-weka-package,src/main/java/weka/core/stemmers/PTStemmer.java,PTStemmer.main,"public static void main(String[] args) {
    try {
      Stemming.useStemmer(new PTStemmer(), args);
    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }",java,"public static void main(String[] args) {
    try {
      Stemming.useStemmer(new PTStemmer(), args);
    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }","['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'Stemming', '.', 'useStemmer', '(', 'new', 'PTStemmer', '(', ')', ',', 'args', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","Runs the stemmer with the given options.

@param args      the options","['Runs', 'the', 'stemmer', 'with', 'the', 'given', 'options', '.']",58a038cff07e7bef2519bc9c2a2d641f0073bd6a,https://github.com/fracpete/ptstemmer-weka-package/blob/58a038cff07e7bef2519bc9c2a2d641f0073bd6a/src/main/java/weka/core/stemmers/PTStemmer.java#L467-L474,test
mortezaadi/GoodbyDao,GoodbyDao/src/main/java/ir/cafebabe/dao/impl/AbstractDao.java,AbstractDao.updateOne,"@Override
  public void updateOne(E object, String... properties) {
    if (object.getId() == null) {
      throw new RuntimeException(""Not a Persisted entity"");
    }
    if (properties == null || properties.length == 0) {
      entityManager.merge(object);
      return;
    }

    // for performance reason its better to mix getting fields, their values
    // and making query all in one loop
    // in one iteration
    StringBuilder sb = new StringBuilder();
    sb.append(""Update "" + clazz.getName() + "" SET "");

    // cache of fieldName --> value
    Map<String, Object> cache = new HashMap<String, Object>();

    for (String prop : properties) {
      try {
        Field field = object.getClass().getDeclaredField(prop);
        field.setAccessible(true);
        Object value = field.get(object);
        if (value instanceof Collection) {
          // value = new LinkedList<>((Collection< ? extends Object>) value);
          throw new RuntimeException(""Collection property is not suppotred."");
        }
        cache.put(prop, value);

        // ignore first comma
        if (cache.size() > 1) {
          sb.append("" ,"");
        }
        sb.append(prop);
        sb.append("" = :"");
        sb.append(prop);

      } catch (Exception e) { // TODO: use fine grain exceptions
                              // FIX: NEXT RELEASE I hope :)
        throw new RuntimeException(e);
      }
    }

    // this means nothing will be updated so hitting db is unnecessary
    if (cache.size() == 0)
      return;

    sb.append("" WHERE id = "" + object.getId());
    Query query = entityManager.createQuery(sb.toString());
    for (Entry<String, Object> entry : cache.entrySet()) {
      query.setParameter(entry.getKey(), entry.getValue());
    }
    query.executeUpdate();
  }",java,"@Override
  public void updateOne(E object, String... properties) {
    if (object.getId() == null) {
      throw new RuntimeException(""Not a Persisted entity"");
    }
    if (properties == null || properties.length == 0) {
      entityManager.merge(object);
      return;
    }

    // for performance reason its better to mix getting fields, their values
    // and making query all in one loop
    // in one iteration
    StringBuilder sb = new StringBuilder();
    sb.append(""Update "" + clazz.getName() + "" SET "");

    // cache of fieldName --> value
    Map<String, Object> cache = new HashMap<String, Object>();

    for (String prop : properties) {
      try {
        Field field = object.getClass().getDeclaredField(prop);
        field.setAccessible(true);
        Object value = field.get(object);
        if (value instanceof Collection) {
          // value = new LinkedList<>((Collection< ? extends Object>) value);
          throw new RuntimeException(""Collection property is not suppotred."");
        }
        cache.put(prop, value);

        // ignore first comma
        if (cache.size() > 1) {
          sb.append("" ,"");
        }
        sb.append(prop);
        sb.append("" = :"");
        sb.append(prop);

      } catch (Exception e) { // TODO: use fine grain exceptions
                              // FIX: NEXT RELEASE I hope :)
        throw new RuntimeException(e);
      }
    }

    // this means nothing will be updated so hitting db is unnecessary
    if (cache.size() == 0)
      return;

    sb.append("" WHERE id = "" + object.getId());
    Query query = entityManager.createQuery(sb.toString());
    for (Entry<String, Object> entry : cache.entrySet()) {
      query.setParameter(entry.getKey(), entry.getValue());
    }
    query.executeUpdate();
  }","['@', 'Override', 'public', 'void', 'updateOne', '(', 'E', 'object', ',', 'String', '...', 'properties', ')', '{', 'if', '(', 'object', '.', 'getId', '(', ')', '==', 'null', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Not a Persisted entity""', ')', ';', '}', 'if', '(', 'properties', '==', 'null', '||', 'properties', '.', 'length', '==', '0', ')', '{', 'entityManager', '.', 'merge', '(', 'object', ')', ';', 'return', ';', '}', '// for performance reason its better to mix getting fields, their values\r', '// and making query all in one loop\r', '// in one iteration\r', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'sb', '.', 'append', '(', '""Update ""', '+', 'clazz', '.', 'getName', '(', ')', '+', '"" SET ""', ')', ';', '// cache of fieldName --> value\r', 'Map', '<', 'String', ',', 'Object', '>', 'cache', '=', 'new', 'HashMap', '<', 'String', ',', 'Object', '>', '(', ')', ';', 'for', '(', 'String', 'prop', ':', 'properties', ')', '{', 'try', '{', 'Field', 'field', '=', 'object', '.', 'getClass', '(', ')', '.', 'getDeclaredField', '(', 'prop', ')', ';', 'field', '.', 'setAccessible', '(', 'true', ')', ';', 'Object', 'value', '=', 'field', '.', 'get', '(', 'object', ')', ';', 'if', '(', 'value', 'instanceof', 'Collection', ')', '{', '// value = new LinkedList<>((Collection< ? extends Object>) value);\r', 'throw', 'new', 'RuntimeException', '(', '""Collection property is not suppotred.""', ')', ';', '}', 'cache', '.', 'put', '(', 'prop', ',', 'value', ')', ';', '// ignore first comma\r', 'if', '(', 'cache', '.', 'size', '(', ')', '>', '1', ')', '{', 'sb', '.', 'append', '(', '"" ,""', ')', ';', '}', 'sb', '.', 'append', '(', 'prop', ')', ';', 'sb', '.', 'append', '(', '"" = :""', ')', ';', 'sb', '.', 'append', '(', 'prop', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '// TODO: use fine grain exceptions\r', '// FIX: NEXT RELEASE I hope :)\r', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}', '// this means nothing will be updated so hitting db is unnecessary\r', 'if', '(', 'cache', '.', 'size', '(', ')', '==', '0', ')', 'return', ';', 'sb', '.', 'append', '(', '"" WHERE id = ""', '+', 'object', '.', 'getId', '(', ')', ')', ';', 'Query', 'query', '=', 'entityManager', '.', 'createQuery', '(', 'sb', '.', 'toString', '(', ')', ')', ';', 'for', '(', 'Entry', '<', 'String', ',', 'Object', '>', 'entry', ':', 'cache', '.', 'entrySet', '(', ')', ')', '{', 'query', '.', 'setParameter', '(', 'entry', '.', 'getKey', '(', ')', ',', 'entry', '.', 'getValue', '(', ')', ')', ';', '}', 'query', '.', 'executeUpdate', '(', ')', ';', '}']","Only update specified properties of the Object

@param object
An dirty object.
@param properties
array of property names. for now Collection properties in not
supported.","['Only', 'update', 'specified', 'properties', 'of', 'the', 'Object']",0a365f8b96add274e2a64ddc885e4804b07021c6,https://github.com/mortezaadi/GoodbyDao/blob/0a365f8b96add274e2a64ddc885e4804b07021c6/GoodbyDao/src/main/java/ir/cafebabe/dao/impl/AbstractDao.java#L580-L634,test
rackerlabs/blueflood,blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/ScheduleContext.java,ScheduleContext.clearFromRunning,"void clearFromRunning(SlotKey slotKey) {
        synchronized (runningSlots) {
            runningSlots.remove(slotKey);
            UpdateStamp stamp = shardStateManager.getUpdateStamp(slotKey);
            shardStateManager.setAllCoarserSlotsDirtyForSlot(slotKey);

            //When state gets set to ""X"", before it got persisted, it might get scheduled for rollup
            //again, if we get delayed metrics. To prevent this we temporarily set last rollup time with current
            //time. This value wont get persisted.
            long currentTimeInMillis = clock.now().getMillis();
            stamp.setLastRollupTimestamp(currentTimeInMillis);
            log.debug(""SlotKey {} is marked in memory with last rollup time as {}"", slotKey, currentTimeInMillis);

            // Update the stamp to Rolled state if and only if the current state
            // is running. If the current state is active, it means we received
            // a delayed put which toggled the status to Active.
            if (stamp.getState() == UpdateStamp.State.Running) {
                stamp.setState(UpdateStamp.State.Rolled);
                // Note: Rollup state will be updated to the last ACTIVE
                // timestamp which caused rollup process to kick in.
                stamp.setDirty(true);
            }
        }
    }",java,"void clearFromRunning(SlotKey slotKey) {
        synchronized (runningSlots) {
            runningSlots.remove(slotKey);
            UpdateStamp stamp = shardStateManager.getUpdateStamp(slotKey);
            shardStateManager.setAllCoarserSlotsDirtyForSlot(slotKey);

            //When state gets set to ""X"", before it got persisted, it might get scheduled for rollup
            //again, if we get delayed metrics. To prevent this we temporarily set last rollup time with current
            //time. This value wont get persisted.
            long currentTimeInMillis = clock.now().getMillis();
            stamp.setLastRollupTimestamp(currentTimeInMillis);
            log.debug(""SlotKey {} is marked in memory with last rollup time as {}"", slotKey, currentTimeInMillis);

            // Update the stamp to Rolled state if and only if the current state
            // is running. If the current state is active, it means we received
            // a delayed put which toggled the status to Active.
            if (stamp.getState() == UpdateStamp.State.Running) {
                stamp.setState(UpdateStamp.State.Rolled);
                // Note: Rollup state will be updated to the last ACTIVE
                // timestamp which caused rollup process to kick in.
                stamp.setDirty(true);
            }
        }
    }","['void', 'clearFromRunning', '(', 'SlotKey', 'slotKey', ')', '{', 'synchronized', '(', 'runningSlots', ')', '{', 'runningSlots', '.', 'remove', '(', 'slotKey', ')', ';', 'UpdateStamp', 'stamp', '=', 'shardStateManager', '.', 'getUpdateStamp', '(', 'slotKey', ')', ';', 'shardStateManager', '.', 'setAllCoarserSlotsDirtyForSlot', '(', 'slotKey', ')', ';', '//When state gets set to ""X"", before it got persisted, it might get scheduled for rollup', '//again, if we get delayed metrics. To prevent this we temporarily set last rollup time with current', '//time. This value wont get persisted.', 'long', 'currentTimeInMillis', '=', 'clock', '.', 'now', '(', ')', '.', 'getMillis', '(', ')', ';', 'stamp', '.', 'setLastRollupTimestamp', '(', 'currentTimeInMillis', ')', ';', 'log', '.', 'debug', '(', '""SlotKey {} is marked in memory with last rollup time as {}""', ',', 'slotKey', ',', 'currentTimeInMillis', ')', ';', '// Update the stamp to Rolled state if and only if the current state', '// is running. If the current state is active, it means we received', '// a delayed put which toggled the status to Active.', 'if', '(', 'stamp', '.', 'getState', '(', ')', '==', 'UpdateStamp', '.', 'State', '.', 'Running', ')', '{', 'stamp', '.', 'setState', '(', 'UpdateStamp', '.', 'State', '.', 'Rolled', ')', ';', '// Note: Rollup state will be updated to the last ACTIVE', '// timestamp which caused rollup process to kick in.', 'stamp', '.', 'setDirty', '(', 'true', ')', ';', '}', '}', '}']","Remove the given slot from the running group after it has been
successfully re-rolled.

@param slotKey","['Remove', 'the', 'given', 'slot', 'from', 'the', 'running', 'group', 'after', 'it', 'has', 'been', 'successfully', 're', '-', 'rolled', '.']",4722a3449b1a7f8e88889ea8c340c6f24396b5b0,https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-core/src/main/java/com/rackspacecloud/blueflood/service/ScheduleContext.java#L382-L405,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/kb/Triple.java,Triple.getIsObjUri,"public boolean getIsObjUri() {
    if (Triple_Type.featOkTst && ((Triple_Type)jcasType).casFeat_isObjUri == null)
      jcasType.jcas.throwFeatMissing(""isObjUri"", ""edu.cmu.lti.oaqa.type.kb.Triple"");
    return jcasType.ll_cas.ll_getBooleanValue(addr, ((Triple_Type)jcasType).casFeatCode_isObjUri);}",java,"public boolean getIsObjUri() {
    if (Triple_Type.featOkTst && ((Triple_Type)jcasType).casFeat_isObjUri == null)
      jcasType.jcas.throwFeatMissing(""isObjUri"", ""edu.cmu.lti.oaqa.type.kb.Triple"");
    return jcasType.ll_cas.ll_getBooleanValue(addr, ((Triple_Type)jcasType).casFeatCode_isObjUri);}","['public', 'boolean', 'getIsObjUri', '(', ')', '{', 'if', '(', 'Triple_Type', '.', 'featOkTst', '&&', '(', '(', 'Triple_Type', ')', 'jcasType', ')', '.', 'casFeat_isObjUri', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""isObjUri""', ',', '""edu.cmu.lti.oaqa.type.kb.Triple""', ')', ';', 'return', 'jcasType', '.', 'll_cas', '.', 'll_getBooleanValue', '(', 'addr', ',', '(', '(', 'Triple_Type', ')', 'jcasType', ')', '.', 'casFeatCode_isObjUri', ')', ';', '}']","getter for isObjUri - gets Boolean flag - true of object field is a URI, false otherwise.
@generated
@return value of the feature","['getter', 'for', 'isObjUri', '-', 'gets', 'Boolean', 'flag', '-', 'true', 'of', 'object', 'field', 'is', 'a', 'URI', 'false', 'otherwise', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/kb/Triple.java#L140-L143,test
RestComm/jain-slee,container/components/components/src/main/java/org/mobicents/slee/container/component/security/PolicyFileImpl.java,PolicyFileImpl.getPermissions,"private Permissions getPermissions(Permissions permissions, final CodeSource cs, Principal[] principals) {

		List<PolicyHolderEntry> entries = this.currentPolicy.get().policyHolderEntries;

		for (PolicyHolderEntry phe : entries) {

			// general
			selectPermissions(permissions, cs, principals, phe);

			// FIXME: certs?

		}

		return permissions;
	}",java,"private Permissions getPermissions(Permissions permissions, final CodeSource cs, Principal[] principals) {

		List<PolicyHolderEntry> entries = this.currentPolicy.get().policyHolderEntries;

		for (PolicyHolderEntry phe : entries) {

			// general
			selectPermissions(permissions, cs, principals, phe);

			// FIXME: certs?

		}

		return permissions;
	}","['private', 'Permissions', 'getPermissions', '(', 'Permissions', 'permissions', ',', 'final', 'CodeSource', 'cs', ',', 'Principal', '[', ']', 'principals', ')', '{', 'List', '<', 'PolicyHolderEntry', '>', 'entries', '=', 'this', '.', 'currentPolicy', '.', 'get', '(', ')', '.', 'policyHolderEntries', ';', 'for', '(', 'PolicyHolderEntry', 'phe', ':', 'entries', ')', '{', '// general', 'selectPermissions', '(', 'permissions', ',', 'cs', ',', 'principals', ',', 'phe', ')', ';', '// FIXME: certs?', '}', 'return', 'permissions', ';', '}']","generic, for all calls","['generic', 'for', 'all', 'calls']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/security/PolicyFileImpl.java#L179-L193,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/gempak/AbstractGempakStationFileReader.java,AbstractGempakStationFileReader.getFileType,"public String getFileType() {
    String type = ""Unknown"";
    switch (dmLabel.kftype) {

      case MFSN:
        type = ""Sounding"";
        break;

      case MFSF:
        type = ""Surface"";
        break;

      default:
    }
    if (!subType.equals("""")) {
      type = type + "" ("" + subType + "")"";
    }
    return type;
  }",java,"public String getFileType() {
    String type = ""Unknown"";
    switch (dmLabel.kftype) {

      case MFSN:
        type = ""Sounding"";
        break;

      case MFSF:
        type = ""Surface"";
        break;

      default:
    }
    if (!subType.equals("""")) {
      type = type + "" ("" + subType + "")"";
    }
    return type;
  }","['public', 'String', 'getFileType', '(', ')', '{', 'String', 'type', '=', '""Unknown""', ';', 'switch', '(', 'dmLabel', '.', 'kftype', ')', '{', 'case', 'MFSN', ':', 'type', '=', '""Sounding""', ';', 'break', ';', 'case', 'MFSF', ':', 'type', '=', '""Surface""', ';', 'break', ';', 'default', ':', '}', 'if', '(', '!', 'subType', '.', 'equals', '(', '""""', ')', ')', '{', 'type', '=', 'type', '+', '"" (""', '+', 'subType', '+', '"")""', ';', '}', 'return', 'type', ';', '}']","Get the type for this file

@return file type","['Get', 'the', 'type', 'for', 'this', 'file']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/AbstractGempakStationFileReader.java#L518-L536,test
jboss/jboss-common-core,src/main/java/org/jboss/util/Classes.java,Classes.instantiate,"public static Object instantiate(Class expected, String property, String defaultClassName)
   {
      String className = getProperty(property, defaultClassName);
      Class clazz = null;
      try
      {
         clazz = loadClass(className);
      }
      catch (ClassNotFoundException e)
      {
         throw new NestedRuntimeException(""Cannot load class "" + className, e);
      }
      Object result = null;
      try
      {
         result = clazz.newInstance();
      }
      catch (InstantiationException e)
      {
         throw new NestedRuntimeException(""Error instantiating "" + className, e);
      }
      catch (IllegalAccessException e)
      {
         throw new NestedRuntimeException(""Error instantiating "" + className, e);
      }
      if (expected.isAssignableFrom(clazz) == false)
         throw new NestedRuntimeException(""Class "" + className + "" from classloader "" + clazz.getClassLoader() +
            "" is not of the expected class "" + expected + "" loaded from "" + expected.getClassLoader());
      return result;
   }",java,"public static Object instantiate(Class expected, String property, String defaultClassName)
   {
      String className = getProperty(property, defaultClassName);
      Class clazz = null;
      try
      {
         clazz = loadClass(className);
      }
      catch (ClassNotFoundException e)
      {
         throw new NestedRuntimeException(""Cannot load class "" + className, e);
      }
      Object result = null;
      try
      {
         result = clazz.newInstance();
      }
      catch (InstantiationException e)
      {
         throw new NestedRuntimeException(""Error instantiating "" + className, e);
      }
      catch (IllegalAccessException e)
      {
         throw new NestedRuntimeException(""Error instantiating "" + className, e);
      }
      if (expected.isAssignableFrom(clazz) == false)
         throw new NestedRuntimeException(""Class "" + className + "" from classloader "" + clazz.getClassLoader() +
            "" is not of the expected class "" + expected + "" loaded from "" + expected.getClassLoader());
      return result;
   }","['public', 'static', 'Object', 'instantiate', '(', 'Class', 'expected', ',', 'String', 'property', ',', 'String', 'defaultClassName', ')', '{', 'String', 'className', '=', 'getProperty', '(', 'property', ',', 'defaultClassName', ')', ';', 'Class', 'clazz', '=', 'null', ';', 'try', '{', 'clazz', '=', 'loadClass', '(', 'className', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', 'throw', 'new', 'NestedRuntimeException', '(', '""Cannot load class ""', '+', 'className', ',', 'e', ')', ';', '}', 'Object', 'result', '=', 'null', ';', 'try', '{', 'result', '=', 'clazz', '.', 'newInstance', '(', ')', ';', '}', 'catch', '(', 'InstantiationException', 'e', ')', '{', 'throw', 'new', 'NestedRuntimeException', '(', '""Error instantiating ""', '+', 'className', ',', 'e', ')', ';', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', 'throw', 'new', 'NestedRuntimeException', '(', '""Error instantiating ""', '+', 'className', ',', 'e', ')', ';', '}', 'if', '(', 'expected', '.', 'isAssignableFrom', '(', 'clazz', ')', '==', 'false', ')', 'throw', 'new', 'NestedRuntimeException', '(', '""Class ""', '+', 'className', '+', '"" from classloader ""', '+', 'clazz', '.', 'getClassLoader', '(', ')', '+', '"" is not of the expected class ""', '+', 'expected', '+', '"" loaded from ""', '+', 'expected', '.', 'getClassLoader', '(', ')', ')', ';', 'return', 'result', ';', '}']","Instantiate a java class object

@param expected the expected class type
@param property the system property defining the class
@param defaultClassName the default class name
@return the instantiated object","['Instantiate', 'a', 'java', 'class', 'object']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/Classes.java#L544-L573,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/core/joran/action/AppenderAction.java,AppenderAction.end,"public void end(InterpretationContext ec, String name) {
    if (inError) {
      return;
    }

    if (appender instanceof LifeCycle) {
      ((LifeCycle) appender).start();
    }

    Object o = ec.peekObject();

    if (o != appender) {
      addWarn(""The object at the of the stack is not the appender named [""
          + appender.getName() + ""] pushed earlier."");
    } else {
      ec.popObject();
    }
  }",java,"public void end(InterpretationContext ec, String name) {
    if (inError) {
      return;
    }

    if (appender instanceof LifeCycle) {
      ((LifeCycle) appender).start();
    }

    Object o = ec.peekObject();

    if (o != appender) {
      addWarn(""The object at the of the stack is not the appender named [""
          + appender.getName() + ""] pushed earlier."");
    } else {
      ec.popObject();
    }
  }","['public', 'void', 'end', '(', 'InterpretationContext', 'ec', ',', 'String', 'name', ')', '{', 'if', '(', 'inError', ')', '{', 'return', ';', '}', 'if', '(', 'appender', 'instanceof', 'LifeCycle', ')', '{', '(', '(', 'LifeCycle', ')', 'appender', ')', '.', 'start', '(', ')', ';', '}', 'Object', 'o', '=', 'ec', '.', 'peekObject', '(', ')', ';', 'if', '(', 'o', '!=', 'appender', ')', '{', 'addWarn', '(', '""The object at the of the stack is not the appender named [""', '+', 'appender', '.', 'getName', '(', ')', '+', '""] pushed earlier.""', ')', ';', '}', 'else', '{', 'ec', '.', 'popObject', '(', ')', ';', '}', '}']","Once the children elements are also parsed, now is the time to activate the
appender options.","['Once', 'the', 'children', 'elements', 'are', 'also', 'parsed', 'now', 'is', 'the', 'time', 'to', 'activate', 'the', 'appender', 'options', '.']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/joran/action/AppenderAction.java#L99-L116,test
lexicalscope/jewelcli,jewelcli/src/main/java/com/lexicalscope/jewel/cli/CliFactory.java,CliFactory.createCliUsingInstance,"public static <O> Cli<O> createCliUsingInstance(final O options) throws InvalidOptionSpecificationException
    {
        return new CliInstanceImpl<O>(options);
    }",java,"public static <O> Cli<O> createCliUsingInstance(final O options) throws InvalidOptionSpecificationException
    {
        return new CliInstanceImpl<O>(options);
    }","['public', 'static', '<', 'O', '>', 'Cli', '<', 'O', '>', 'createCliUsingInstance', '(', 'final', 'O', 'options', ')', 'throws', 'InvalidOptionSpecificationException', '{', 'return', 'new', 'CliInstanceImpl', '<', 'O', '>', '(', 'options', ')', ';', '}']","Construct a Cli from an annotated class

@param <O>
The type of the class used to present the arguments
@param options
The annotated class

@return A Cli configured to configure the options

@throws ArgumentValidationException the arguments do not meet the CLI specification
@throws InvalidOptionSpecificationException the CLI specification is not valid","['Construct', 'a', 'Cli', 'from', 'an', 'annotated', 'class']",d282f87b937355f8a9d2b91d3b08ee668840cf61,https://github.com/lexicalscope/jewelcli/blob/d282f87b937355f8a9d2b91d3b08ee668840cf61/jewelcli/src/main/java/com/lexicalscope/jewel/cli/CliFactory.java#L44-L47,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/Schema.java,Schema.getEntity,"public int getEntity(String name) {
        // System.err.println(""%% Looking up entity "" + name);
        Integer ch = (Integer) theEntities.get(name);
        if (ch == null)
            return 0;
        return ch.intValue();
    }",java,"public int getEntity(String name) {
        // System.err.println(""%% Looking up entity "" + name);
        Integer ch = (Integer) theEntities.get(name);
        if (ch == null)
            return 0;
        return ch.intValue();
    }","['public', 'int', 'getEntity', '(', 'String', 'name', ')', '{', '// System.err.println(""%% Looking up entity "" + name);', 'Integer', 'ch', '=', '(', 'Integer', ')', 'theEntities', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'ch', '==', 'null', ')', 'return', '0', ';', 'return', 'ch', '.', 'intValue', '(', ')', ';', '}']","Get an entity value by name.

@param name Name of the entity
@return The corresponding character, or 0 if none","['Get', 'an', 'entity', 'value', 'by', 'name', '.']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/Schema.java#L138-L144,test
jboss/jboss-common-core,src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java,PropertyEditors.findEditor,"public static PropertyEditor findEditor(final String typeName)
      throws ClassNotFoundException
   {
      // see if it is a primitive type first
      Class<?> type = Classes.getPrimitiveTypeForName(typeName);
      if (type == null)
      {
         // nope try look up
         ClassLoader loader = Thread.currentThread().getContextClassLoader();
         type = loader.loadClass(typeName);
      }

      return PropertyEditorManager.findEditor(type);
   }",java,"public static PropertyEditor findEditor(final String typeName)
      throws ClassNotFoundException
   {
      // see if it is a primitive type first
      Class<?> type = Classes.getPrimitiveTypeForName(typeName);
      if (type == null)
      {
         // nope try look up
         ClassLoader loader = Thread.currentThread().getContextClassLoader();
         type = loader.loadClass(typeName);
      }

      return PropertyEditorManager.findEditor(type);
   }","['public', 'static', 'PropertyEditor', 'findEditor', '(', 'final', 'String', 'typeName', ')', 'throws', 'ClassNotFoundException', '{', '// see if it is a primitive type first', 'Class', '<', '?', '>', 'type', '=', 'Classes', '.', 'getPrimitiveTypeForName', '(', 'typeName', ')', ';', 'if', '(', 'type', '==', 'null', ')', '{', '// nope try look up', 'ClassLoader', 'loader', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', ';', 'type', '=', 'loader', '.', 'loadClass', '(', 'typeName', ')', ';', '}', 'return', 'PropertyEditorManager', '.', 'findEditor', '(', 'type', ')', ';', '}']","Locate a value editor for a given target type.

@param typeName    The class name of the object to be edited.
@return            An editor for the given type or null if none was found.
@throws ClassNotFoundException when the class could not be found","['Locate', 'a', 'value', 'editor', 'for', 'a', 'given', 'target', 'type', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java#L146-L159,test
Unidata/thredds,cdm/src/main/java/ucar/ma2/Range.java,Range.shiftOrigin,"public Range shiftOrigin(int origin) throws InvalidRangeException {
    if (this == VLEN)
      return VLEN;

    int first = first() - origin;
    int last = last() - origin;
    return new Range(name, first, last, stride);
  }",java,"public Range shiftOrigin(int origin) throws InvalidRangeException {
    if (this == VLEN)
      return VLEN;

    int first = first() - origin;
    int last = last() - origin;
    return new Range(name, first, last, stride);
  }","['public', 'Range', 'shiftOrigin', '(', 'int', 'origin', ')', 'throws', 'InvalidRangeException', '{', 'if', '(', 'this', '==', 'VLEN', ')', 'return', 'VLEN', ';', 'int', 'first', '=', 'first', '(', ')', '-', 'origin', ';', 'int', 'last', '=', 'last', '(', ')', '-', 'origin', ';', 'return', 'new', 'Range', '(', 'name', ',', 'first', ',', 'last', ',', 'stride', ')', ';', '}']","Create a new Range shifting this range by a constant factor.

@param origin subtract this from each element
@return shifted range
@throws InvalidRangeException elements must be nonnegative, 0 <= first <= last","['Create', 'a', 'new', 'Range', 'shifting', 'this', 'range', 'by', 'a', 'constant', 'factor', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/Range.java#L419-L426,test
Unidata/thredds,cdm/src/main/java/ucar/ma2/Index.java,Index.section,"Index section(List<Range> ranges) throws InvalidRangeException {

    // check ranges are valid
    if (ranges.size() != rank)
      throw new InvalidRangeException(""Bad ranges [] length"");
    for (int ii = 0; ii < rank; ii++) {
      Range r = ranges.get(ii);
      if (r == null)
        continue;
      if (r == Range.VLEN)
        continue;
      if ((r.first() < 0) || (r.first() >= shape[ii]))
        throw new InvalidRangeException(""Bad range starting value at index "" + ii + "" == "" + r.first());
      if ((r.last() < 0) || (r.last() >= shape[ii]))
        throw new InvalidRangeException(""Bad range ending value at index "" + ii + "" == "" + r.last());
    }

    int reducedRank = rank;
    for (Range r : ranges) {
      if ((r != null) && (r.length() == 1))
        reducedRank--;
    }
    Index newindex = Index.factory(reducedRank);
    newindex.offset = offset;

    // calc shape, size, and index transformations
    // calc strides into original (backing) store
    int newDim = 0;
    for (int ii = 0; ii < rank; ii++) {
      Range r = ranges.get(ii);
      if (r == null) {          // null range means use the whole original dimension
        newindex.shape[newDim] = shape[ii];
        newindex.stride[newDim] = stride[ii];
        //if (name != null) newindex.name[newDim] = name[ii];
        newDim++;
      } else if (r.length() != 1) {
        newindex.shape[newDim] = r.length();
        newindex.stride[newDim] = stride[ii] * r.stride();
        newindex.offset += stride[ii] * r.first();
        //if (name != null) newindex.name[newDim] = name[ii];
        newDim++;
      } else {
        newindex.offset += stride[ii] * r.first();   // constant due to rank reduction
      }
    }
    newindex.size = computeSize(newindex.shape);
    newindex.fastIterator = fastIterator && (newindex.size == size); // if equal, then its not a real subset, so can still use fastIterator
    newindex.precalc(); // any subclass-specific optimizations
    return newindex;
  }",java,"Index section(List<Range> ranges) throws InvalidRangeException {

    // check ranges are valid
    if (ranges.size() != rank)
      throw new InvalidRangeException(""Bad ranges [] length"");
    for (int ii = 0; ii < rank; ii++) {
      Range r = ranges.get(ii);
      if (r == null)
        continue;
      if (r == Range.VLEN)
        continue;
      if ((r.first() < 0) || (r.first() >= shape[ii]))
        throw new InvalidRangeException(""Bad range starting value at index "" + ii + "" == "" + r.first());
      if ((r.last() < 0) || (r.last() >= shape[ii]))
        throw new InvalidRangeException(""Bad range ending value at index "" + ii + "" == "" + r.last());
    }

    int reducedRank = rank;
    for (Range r : ranges) {
      if ((r != null) && (r.length() == 1))
        reducedRank--;
    }
    Index newindex = Index.factory(reducedRank);
    newindex.offset = offset;

    // calc shape, size, and index transformations
    // calc strides into original (backing) store
    int newDim = 0;
    for (int ii = 0; ii < rank; ii++) {
      Range r = ranges.get(ii);
      if (r == null) {          // null range means use the whole original dimension
        newindex.shape[newDim] = shape[ii];
        newindex.stride[newDim] = stride[ii];
        //if (name != null) newindex.name[newDim] = name[ii];
        newDim++;
      } else if (r.length() != 1) {
        newindex.shape[newDim] = r.length();
        newindex.stride[newDim] = stride[ii] * r.stride();
        newindex.offset += stride[ii] * r.first();
        //if (name != null) newindex.name[newDim] = name[ii];
        newDim++;
      } else {
        newindex.offset += stride[ii] * r.first();   // constant due to rank reduction
      }
    }
    newindex.size = computeSize(newindex.shape);
    newindex.fastIterator = fastIterator && (newindex.size == size); // if equal, then its not a real subset, so can still use fastIterator
    newindex.precalc(); // any subclass-specific optimizations
    return newindex;
  }","['Index', 'section', '(', 'List', '<', 'Range', '>', 'ranges', ')', 'throws', 'InvalidRangeException', '{', '// check ranges are valid\r', 'if', '(', 'ranges', '.', 'size', '(', ')', '!=', 'rank', ')', 'throw', 'new', 'InvalidRangeException', '(', '""Bad ranges [] length""', ')', ';', 'for', '(', 'int', 'ii', '=', '0', ';', 'ii', '<', 'rank', ';', 'ii', '++', ')', '{', 'Range', 'r', '=', 'ranges', '.', 'get', '(', 'ii', ')', ';', 'if', '(', 'r', '==', 'null', ')', 'continue', ';', 'if', '(', 'r', '==', 'Range', '.', 'VLEN', ')', 'continue', ';', 'if', '(', '(', 'r', '.', 'first', '(', ')', '<', '0', ')', '||', '(', 'r', '.', 'first', '(', ')', '>=', 'shape', '[', 'ii', ']', ')', ')', 'throw', 'new', 'InvalidRangeException', '(', '""Bad range starting value at index ""', '+', 'ii', '+', '"" == ""', '+', 'r', '.', 'first', '(', ')', ')', ';', 'if', '(', '(', 'r', '.', 'last', '(', ')', '<', '0', ')', '||', '(', 'r', '.', 'last', '(', ')', '>=', 'shape', '[', 'ii', ']', ')', ')', 'throw', 'new', 'InvalidRangeException', '(', '""Bad range ending value at index ""', '+', 'ii', '+', '"" == ""', '+', 'r', '.', 'last', '(', ')', ')', ';', '}', 'int', 'reducedRank', '=', 'rank', ';', 'for', '(', 'Range', 'r', ':', 'ranges', ')', '{', 'if', '(', '(', 'r', '!=', 'null', ')', '&&', '(', 'r', '.', 'length', '(', ')', '==', '1', ')', ')', 'reducedRank', '--', ';', '}', 'Index', 'newindex', '=', 'Index', '.', 'factory', '(', 'reducedRank', ')', ';', 'newindex', '.', 'offset', '=', 'offset', ';', '// calc shape, size, and index transformations\r', '// calc strides into original (backing) store\r', 'int', 'newDim', '=', '0', ';', 'for', '(', 'int', 'ii', '=', '0', ';', 'ii', '<', 'rank', ';', 'ii', '++', ')', '{', 'Range', 'r', '=', 'ranges', '.', 'get', '(', 'ii', ')', ';', 'if', '(', 'r', '==', 'null', ')', '{', '// null range means use the whole original dimension\r', 'newindex', '.', 'shape', '[', 'newDim', ']', '=', 'shape', '[', 'ii', ']', ';', 'newindex', '.', 'stride', '[', 'newDim', ']', '=', 'stride', '[', 'ii', ']', ';', '//if (name != null) newindex.name[newDim] = name[ii];\r', 'newDim', '++', ';', '}', 'else', 'if', '(', 'r', '.', 'length', '(', ')', '!=', '1', ')', '{', 'newindex', '.', 'shape', '[', 'newDim', ']', '=', 'r', '.', 'length', '(', ')', ';', 'newindex', '.', 'stride', '[', 'newDim', ']', '=', 'stride', '[', 'ii', ']', '*', 'r', '.', 'stride', '(', ')', ';', 'newindex', '.', 'offset', '+=', 'stride', '[', 'ii', ']', '*', 'r', '.', 'first', '(', ')', ';', '//if (name != null) newindex.name[newDim] = name[ii];\r', 'newDim', '++', ';', '}', 'else', '{', 'newindex', '.', 'offset', '+=', 'stride', '[', 'ii', ']', '*', 'r', '.', 'first', '(', ')', ';', '// constant due to rank reduction\r', '}', '}', 'newindex', '.', 'size', '=', 'computeSize', '(', 'newindex', '.', 'shape', ')', ';', 'newindex', '.', 'fastIterator', '=', 'fastIterator', '&&', '(', 'newindex', '.', 'size', '==', 'size', ')', ';', '// if equal, then its not a real subset, so can still use fastIterator\r', 'newindex', '.', 'precalc', '(', ')', ';', '// any subclass-specific optimizations\r', 'return', 'newindex', ';', '}']","create a new Index based on a subsection of this one, with rank reduction if
dimension length == 1.

@param ranges array of Ranges that specify the array subset.
Must be same rank as original Array.
A particular Range: 1) may be a subset; 2) may be null, meaning use entire Range.
@return new Index, with same or smaller rank as original.
@throws InvalidRangeException if ranges dont match current shape","['create', 'a', 'new', 'Index', 'based', 'on', 'a', 'subsection', 'of', 'this', 'one', 'with', 'rank', 'reduction', 'if', 'dimension', 'length', '==', '1', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/Index.java#L215-L264,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/mcidas/McIDASLookup.java,McIDASLookup.getLevelDescription,"public final String getLevelDescription(GridRecord gr) {
    if (cust != null) {
      String result = cust.getLevelDescription( gr.getLevelType1());
      if (result != null) return result;
    }

    // TODO:  flesh this out
    return getLevelName(gr);
  }",java,"public final String getLevelDescription(GridRecord gr) {
    if (cust != null) {
      String result = cust.getLevelDescription( gr.getLevelType1());
      if (result != null) return result;
    }

    // TODO:  flesh this out
    return getLevelName(gr);
  }","['public', 'final', 'String', 'getLevelDescription', '(', 'GridRecord', 'gr', ')', '{', 'if', '(', 'cust', '!=', 'null', ')', '{', 'String', 'result', '=', 'cust', '.', 'getLevelDescription', '(', 'gr', '.', 'getLevelType1', '(', ')', ')', ';', 'if', '(', 'result', '!=', 'null', ')', 'return', 'result', ';', '}', '// TODO:  flesh this out', 'return', 'getLevelName', '(', 'gr', ')', ';', '}']",gets the LevelDescription.,"['gets', 'the', 'LevelDescription', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/mcidas/McIDASLookup.java#L112-L120,test
oblac/jodd,jodd-mail/src/main/java/jodd/mail/CommonEmail.java,CommonEmail.cc,"public T cc(final EmailAddress... ccs) {
		this.cc = ArraysUtil.join(this.cc, valueOrEmptyArray(ccs));
		return _this();
	}",java,"public T cc(final EmailAddress... ccs) {
		this.cc = ArraysUtil.join(this.cc, valueOrEmptyArray(ccs));
		return _this();
	}","['public', 'T', 'cc', '(', 'final', 'EmailAddress', '...', 'ccs', ')', '{', 'this', '.', 'cc', '=', 'ArraysUtil', '.', 'join', '(', 'this', '.', 'cc', ',', 'valueOrEmptyArray', '(', 'ccs', ')', ')', ';', 'return', '_this', '(', ')', ';', '}']","Appends CC addresses.

@param ccs vararg of {@link EmailAddress}es to set.
@return this","['Appends', 'CC', 'addresses', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/CommonEmail.java#L403-L406,test
jkuhnert/ognl,src/main/java/ognl/OgnlRuntime.java,OgnlRuntime.getAppropriateMethod,"public static Method getAppropriateMethod(OgnlContext context, Object source, Object target, String propertyName,
                                              String methodName, List methods, Object[] args, Object[] actualArgs)
    {
        Method result = null;

        if (methods != null)
        {
            Class typeClass = target != null ? target.getClass() : null;
            if (typeClass == null && source != null && Class.class.isInstance(source))
            {
                typeClass = (Class)source;
            }
            Class[] argClasses = getArgClasses(args);

            MatchingMethod mm = findBestMethod(methods, typeClass, methodName, argClasses);
            if (mm != null) {
                result = mm.mMethod;
                Class[] mParameterTypes = mm.mParameterTypes;
                System.arraycopy(args, 0, actualArgs, 0, args.length);

                for (int j = 0; j < mParameterTypes.length; j++)
                {
                    Class type = mParameterTypes[j];

                    if (mm.report.conversionNeeded[j] || (type.isPrimitive() && (actualArgs[j] == null)))
                    {
                        actualArgs[j] = getConvertedType(context, source, result, propertyName, args[j], type);
                    }
                }
            }
        }

        if (result == null)
        {
            result = getConvertedMethodAndArgs(context, target, propertyName, methods, args, actualArgs);
        }

        return result;
    }",java,"public static Method getAppropriateMethod(OgnlContext context, Object source, Object target, String propertyName,
                                              String methodName, List methods, Object[] args, Object[] actualArgs)
    {
        Method result = null;

        if (methods != null)
        {
            Class typeClass = target != null ? target.getClass() : null;
            if (typeClass == null && source != null && Class.class.isInstance(source))
            {
                typeClass = (Class)source;
            }
            Class[] argClasses = getArgClasses(args);

            MatchingMethod mm = findBestMethod(methods, typeClass, methodName, argClasses);
            if (mm != null) {
                result = mm.mMethod;
                Class[] mParameterTypes = mm.mParameterTypes;
                System.arraycopy(args, 0, actualArgs, 0, args.length);

                for (int j = 0; j < mParameterTypes.length; j++)
                {
                    Class type = mParameterTypes[j];

                    if (mm.report.conversionNeeded[j] || (type.isPrimitive() && (actualArgs[j] == null)))
                    {
                        actualArgs[j] = getConvertedType(context, source, result, propertyName, args[j], type);
                    }
                }
            }
        }

        if (result == null)
        {
            result = getConvertedMethodAndArgs(context, target, propertyName, methods, args, actualArgs);
        }

        return result;
    }","['public', 'static', 'Method', 'getAppropriateMethod', '(', 'OgnlContext', 'context', ',', 'Object', 'source', ',', 'Object', 'target', ',', 'String', 'propertyName', ',', 'String', 'methodName', ',', 'List', 'methods', ',', 'Object', '[', ']', 'args', ',', 'Object', '[', ']', 'actualArgs', ')', '{', 'Method', 'result', '=', 'null', ';', 'if', '(', 'methods', '!=', 'null', ')', '{', 'Class', 'typeClass', '=', 'target', '!=', 'null', '?', 'target', '.', 'getClass', '(', ')', ':', 'null', ';', 'if', '(', 'typeClass', '==', 'null', '&&', 'source', '!=', 'null', '&&', 'Class', '.', 'class', '.', 'isInstance', '(', 'source', ')', ')', '{', 'typeClass', '=', '(', 'Class', ')', 'source', ';', '}', 'Class', '[', ']', 'argClasses', '=', 'getArgClasses', '(', 'args', ')', ';', 'MatchingMethod', 'mm', '=', 'findBestMethod', '(', 'methods', ',', 'typeClass', ',', 'methodName', ',', 'argClasses', ')', ';', 'if', '(', 'mm', '!=', 'null', ')', '{', 'result', '=', 'mm', '.', 'mMethod', ';', 'Class', '[', ']', 'mParameterTypes', '=', 'mm', '.', 'mParameterTypes', ';', 'System', '.', 'arraycopy', '(', 'args', ',', '0', ',', 'actualArgs', ',', '0', ',', 'args', '.', 'length', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'mParameterTypes', '.', 'length', ';', 'j', '++', ')', '{', 'Class', 'type', '=', 'mParameterTypes', '[', 'j', ']', ';', 'if', '(', 'mm', '.', 'report', '.', 'conversionNeeded', '[', 'j', ']', '||', '(', 'type', '.', 'isPrimitive', '(', ')', '&&', '(', 'actualArgs', '[', 'j', ']', '==', 'null', ')', ')', ')', '{', 'actualArgs', '[', 'j', ']', '=', 'getConvertedType', '(', 'context', ',', 'source', ',', 'result', ',', 'propertyName', ',', 'args', '[', 'j', ']', ',', 'type', ')', ';', '}', '}', '}', '}', 'if', '(', 'result', '==', 'null', ')', '{', 'result', '=', 'getConvertedMethodAndArgs', '(', 'context', ',', 'target', ',', 'propertyName', ',', 'methods', ',', 'args', ',', 'actualArgs', ')', ';', '}', 'return', 'result', ';', '}']","Gets the appropriate method to be called for the given target, method name and arguments. If
successful this method will return the Method within the target that can be called and the
converted arguments in actualArgs. If unsuccessful this method will return null and the
actualArgs will be empty.

@param context The current execution context.
@param source Target object to run against or method name.
@param target Instance of object to be run against.
@param propertyName Name of property to get method of.
@param methods List of current known methods.
@param args Arguments originally passed in.
@param actualArgs Converted arguments.

@return Best method match or null if none could be found.","['Gets', 'the', 'appropriate', 'method', 'to', 'be', 'called', 'for', 'the', 'given', 'target', 'method', 'name', 'and', 'arguments', '.', 'If', 'successful', 'this', 'method', 'will', 'return', 'the', 'Method', 'within', 'the', 'target', 'that', 'can', 'be', 'called', 'and', 'the', 'converted', 'arguments', 'in', 'actualArgs', '.', 'If', 'unsuccessful', 'this', 'method', 'will', 'return', 'null', 'and', 'the', 'actualArgs', 'will', 'be', 'empty', '.']",53d51a30c8c299b750dede779d05cb84beee73c3,https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/OgnlRuntime.java#L1265-L1303,test
OpenEstate/OpenEstate-IO,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/WazTyp.java,WazTyp.setMonatsmiete,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setMonatsmiete(WazTyp.Monatsmiete value) {
        this.monatsmiete = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setMonatsmiete(WazTyp.Monatsmiete value) {
        this.monatsmiete = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:52:47+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setMonatsmiete', '(', 'WazTyp', '.', 'Monatsmiete', 'value', ')', '{', 'this', '.', 'monatsmiete', '=', 'value', ';', '}']","Sets the value of the monatsmiete property.

@param value
allowed object is
{@link WazTyp.Monatsmiete }","['Sets', 'the', 'value', 'of', 'the', 'monatsmiete', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/WazTyp.java#L267-L270,test
basis-technology-corp/tcl-regex-java,src/main/java/com/basistech/tclre/Runtime.java,Runtime.subset,"private void subset(RuntimeSubexpression sub, int begin, int end) {
        int n = sub.number;

        assert n > 0;

        while (match.size() < (n + 1)) {
            match.add(null);
        }

        match.set(n, new RegMatch(begin, end));
    }",java,"private void subset(RuntimeSubexpression sub, int begin, int end) {
        int n = sub.number;

        assert n > 0;

        while (match.size() < (n + 1)) {
            match.add(null);
        }

        match.set(n, new RegMatch(begin, end));
    }","['private', 'void', 'subset', '(', 'RuntimeSubexpression', 'sub', ',', 'int', 'begin', ',', 'int', 'end', ')', '{', 'int', 'n', '=', 'sub', '.', 'number', ';', 'assert', 'n', '>', '0', ';', 'while', '(', 'match', '.', 'size', '(', ')', '<', '(', 'n', '+', '1', ')', ')', '{', 'match', '.', 'add', '(', 'null', ')', ';', '}', 'match', '.', 'set', '(', 'n', ',', 'new', 'RegMatch', '(', 'begin', ',', 'end', ')', ')', ';', '}']",subset - set any subexpression relevant to a successful subre,"['subset', '-', 'set', 'any', 'subexpression', 'relevant', 'to', 'a', 'successful', 'subre']",de0d5eaccf9a61b694cb8793f234cc229c395b43,https://github.com/basis-technology-corp/tcl-regex-java/blob/de0d5eaccf9a61b694cb8793f234cc229c395b43/src/main/java/com/basistech/tclre/Runtime.java#L310-L320,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/InvDataset.java,InvDataset.getVariables,"public ThreddsMetadata.Variables getVariables(String vocab) {
    ThreddsMetadata.Variables result = new ThreddsMetadata.Variables(vocab, null, null, null, null);
    if (variables == null) return result;

    for (ThreddsMetadata.Variables vs : variables) {
      if (vs.getVocabulary().equals(vocab))
        result.getVariableList().addAll(vs.getVariableList());
    }
    return result;
  }",java,"public ThreddsMetadata.Variables getVariables(String vocab) {
    ThreddsMetadata.Variables result = new ThreddsMetadata.Variables(vocab, null, null, null, null);
    if (variables == null) return result;

    for (ThreddsMetadata.Variables vs : variables) {
      if (vs.getVocabulary().equals(vocab))
        result.getVariableList().addAll(vs.getVariableList());
    }
    return result;
  }","['public', 'ThreddsMetadata', '.', 'Variables', 'getVariables', '(', 'String', 'vocab', ')', '{', 'ThreddsMetadata', '.', 'Variables', 'result', '=', 'new', 'ThreddsMetadata', '.', 'Variables', '(', 'vocab', ',', 'null', ',', 'null', ',', 'null', ',', 'null', ')', ';', 'if', '(', 'variables', '==', 'null', ')', 'return', 'result', ';', 'for', '(', 'ThreddsMetadata', '.', 'Variables', 'vs', ':', 'variables', ')', '{', 'if', '(', 'vs', '.', 'getVocabulary', '(', ')', '.', 'equals', '(', 'vocab', ')', ')', 'result', '.', 'getVariableList', '(', ')', '.', 'addAll', '(', 'vs', '.', 'getVariableList', '(', ')', ')', ';', '}', 'return', 'result', ';', '}']","get Variables from the specified vocabulary

@param vocab look for this vocabulary
@return Variables from the specified vocabulary, may be null","['get', 'Variables', 'from', 'the', 'specified', 'vocabulary']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/InvDataset.java#L501-L510,test
oblac/jodd,jodd-log/src/main/java/jodd/log/impl/SimpleLogger.java,SimpleLogger.print,"protected void print(final Level level, final String message, final Throwable throwable) {
		if (!isEnabled(level)) {
			return;
		}

		StringBuilder msg = new StringBuilder()
			.append(slf.getElapsedTime()).append(' ').append('[')
			.append(level).append(']').append(' ')
			.append(getCallerClass()).append(' ').append('-')
			.append(' ').append(message);

		System.out.println(msg.toString());

		if (throwable != null) {
			throwable.printStackTrace(System.out);
		}
	}",java,"protected void print(final Level level, final String message, final Throwable throwable) {
		if (!isEnabled(level)) {
			return;
		}

		StringBuilder msg = new StringBuilder()
			.append(slf.getElapsedTime()).append(' ').append('[')
			.append(level).append(']').append(' ')
			.append(getCallerClass()).append(' ').append('-')
			.append(' ').append(message);

		System.out.println(msg.toString());

		if (throwable != null) {
			throwable.printStackTrace(System.out);
		}
	}","['protected', 'void', 'print', '(', 'final', 'Level', 'level', ',', 'final', 'String', 'message', ',', 'final', 'Throwable', 'throwable', ')', '{', 'if', '(', '!', 'isEnabled', '(', 'level', ')', ')', '{', 'return', ';', '}', 'StringBuilder', 'msg', '=', 'new', 'StringBuilder', '(', ')', '.', 'append', '(', 'slf', '.', 'getElapsedTime', '(', ')', ')', '.', 'append', '(', ""'"", ""'"", ')', '.', 'append', '(', ""'"", ""'"", ')', '.', 'append', '(', 'level', ')', '.', 'append', '(', ""'"", ""'"", ')', '.', 'append', '(', ""'"", ""'"", ')', '.', 'append', '(', 'getCallerClass', '(', ')', ')', '.', 'append', '(', ""'"", ""'"", ')', '.', 'append', '(', ""'"", ""'"", ')', '.', 'append', '(', ""'"", ""'"", ')', '.', 'append', '(', 'message', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'msg', '.', 'toString', '(', ')', ')', ';', 'if', '(', 'throwable', '!=', 'null', ')', '{', 'throwable', '.', 'printStackTrace', '(', 'System', '.', 'out', ')', ';', '}', '}']",Prints error message if level is enabled.,"['Prints', 'error', 'message', 'if', 'level', 'is', 'enabled', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-log/src/main/java/jodd/log/impl/SimpleLogger.java#L136-L152,test
Unidata/thredds,cdm/src/main/java/thredds/client/catalog/tools/DataFactory.java,DataFactory.openFeatureDataset,"public DataFactory.Result openFeatureDataset(Access access, ucar.nc2.util.CancelTask task) throws IOException {
    Dataset ds = access.getDataset();
    DataFactory.Result result = new Result();
    if (ds.getFeatureType() == null) {
      result.errLog.format(""InvDatasert must specify a FeatureType%n"");
      result.fatalError = true;
      return result;
    }

    return openFeatureDataset(ds.getFeatureType(), access, task, result);
  }",java,"public DataFactory.Result openFeatureDataset(Access access, ucar.nc2.util.CancelTask task) throws IOException {
    Dataset ds = access.getDataset();
    DataFactory.Result result = new Result();
    if (ds.getFeatureType() == null) {
      result.errLog.format(""InvDatasert must specify a FeatureType%n"");
      result.fatalError = true;
      return result;
    }

    return openFeatureDataset(ds.getFeatureType(), access, task, result);
  }","['public', 'DataFactory', '.', 'Result', 'openFeatureDataset', '(', 'Access', 'access', ',', 'ucar', '.', 'nc2', '.', 'util', '.', 'CancelTask', 'task', ')', 'throws', 'IOException', '{', 'Dataset', 'ds', '=', 'access', '.', 'getDataset', '(', ')', ';', 'DataFactory', '.', 'Result', 'result', '=', 'new', 'Result', '(', ')', ';', 'if', '(', 'ds', '.', 'getFeatureType', '(', ')', '==', 'null', ')', '{', 'result', '.', 'errLog', '.', 'format', '(', '""InvDatasert must specify a FeatureType%n""', ')', ';', 'result', '.', 'fatalError', '=', 'true', ';', 'return', 'result', ';', '}', 'return', 'openFeatureDataset', '(', 'ds', '.', 'getFeatureType', '(', ')', ',', 'access', ',', 'task', ',', 'result', ')', ';', '}']","Open a FeatureDataset from an Access object.

@param access use this Access.
@param task   may be null
@return ThreddsDataFactory.Result check fatalError for validity
@throws IOException on read error","['Open', 'a', 'FeatureDataset', 'from', 'an', 'Access', 'object', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/thredds/client/catalog/tools/DataFactory.java#L260-L270,test
objectify/objectify,src/main/java/com/googlecode/objectify/impl/FieldProperty.java,FieldProperty.matches,"private boolean matches(Object onPojo, If<?, ?>[] conditions) {
		if (conditions == null)
			return false;
		
		Object value = this.get(onPojo);

		for (If<?, ?> condition: conditions) {
			@SuppressWarnings(""unchecked"")
			If<Object, Object> cond = (If<Object, Object>)condition;

			if (cond.matchesValue(value))
				return true;

			if (cond.matchesPojo(onPojo))
				return true;
		}

		return false;
	}",java,"private boolean matches(Object onPojo, If<?, ?>[] conditions) {
		if (conditions == null)
			return false;
		
		Object value = this.get(onPojo);

		for (If<?, ?> condition: conditions) {
			@SuppressWarnings(""unchecked"")
			If<Object, Object> cond = (If<Object, Object>)condition;

			if (cond.matchesValue(value))
				return true;

			if (cond.matchesPojo(onPojo))
				return true;
		}

		return false;
	}","['private', 'boolean', 'matches', '(', 'Object', 'onPojo', ',', 'If', '<', '?', ',', '?', '>', '[', ']', 'conditions', ')', '{', 'if', '(', 'conditions', '==', 'null', ')', 'return', 'false', ';', 'Object', 'value', '=', 'this', '.', 'get', '(', 'onPojo', ')', ';', 'for', '(', 'If', '<', '?', ',', '?', '>', 'condition', ':', 'conditions', ')', '{', '@', 'SuppressWarnings', '(', '""unchecked""', ')', 'If', '<', 'Object', ',', 'Object', '>', 'cond', '=', '(', 'If', '<', 'Object', ',', 'Object', '>', ')', 'condition', ';', 'if', '(', 'cond', '.', 'matchesValue', '(', 'value', ')', ')', 'return', 'true', ';', 'if', '(', 'cond', '.', 'matchesPojo', '(', 'onPojo', ')', ')', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","Tests whether a set of conditions match.
@param conditions can be null; this always matches false
@return true if we match the conditions, false if we do not","['Tests', 'whether', 'a', 'set', 'of', 'conditions', 'match', '.']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/impl/FieldProperty.java#L123-L141,test
objectify/objectify,src/main/java/com/googlecode/objectify/impl/ref/LiveRef.java,LiveRef.ofy,"private Objectify ofy() {
		// If we have an expired transaction context, we need a new context
		if (ofy == null || (ofy.getTransaction() != null && !ofy.getTransaction().isActive()))
			ofy = ObjectifyService.ofy();

		return ofy;
	}",java,"private Objectify ofy() {
		// If we have an expired transaction context, we need a new context
		if (ofy == null || (ofy.getTransaction() != null && !ofy.getTransaction().isActive()))
			ofy = ObjectifyService.ofy();

		return ofy;
	}","['private', 'Objectify', 'ofy', '(', ')', '{', '// If we have an expired transaction context, we need a new context\r', 'if', '(', 'ofy', '==', 'null', '||', '(', 'ofy', '.', 'getTransaction', '(', ')', '!=', 'null', '&&', '!', 'ofy', '.', 'getTransaction', '(', ')', '.', 'isActive', '(', ')', ')', ')', 'ofy', '=', 'ObjectifyService', '.', 'ofy', '(', ')', ';', 'return', 'ofy', ';', '}']",Get the current objectify instance associated with this ref,"['Get', 'the', 'current', 'objectify', 'instance', 'associated', 'with', 'this', 'ref']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/impl/ref/LiveRef.java#L61-L67,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,ConfigurationUtility.changeUpperLevelFinalLength,"public static void changeUpperLevelFinalLength(
			final Map<String, ConfigRangeAttrs> shiftMap,
			final String addedFullName, final int increasedLength) {
		String[] parts = addedFullName.split("":"");
		StringBuilder fname = new StringBuilder();
		for (int i = 0; i < (parts.length - 1); i++) {
			if (i == 0) {
				fname.append(parts[i]);
			} else {
				fname.append("":"").append(parts[i]);
			}
			String sname = fname.toString();
			shiftMap.get(sname).setFinalLength(
					shiftMap.get(sname).getFinalLength() + increasedLength);
		}
	}",java,"public static void changeUpperLevelFinalLength(
			final Map<String, ConfigRangeAttrs> shiftMap,
			final String addedFullName, final int increasedLength) {
		String[] parts = addedFullName.split("":"");
		StringBuilder fname = new StringBuilder();
		for (int i = 0; i < (parts.length - 1); i++) {
			if (i == 0) {
				fname.append(parts[i]);
			} else {
				fname.append("":"").append(parts[i]);
			}
			String sname = fname.toString();
			shiftMap.get(sname).setFinalLength(
					shiftMap.get(sname).getFinalLength() + increasedLength);
		}
	}","['public', 'static', 'void', 'changeUpperLevelFinalLength', '(', 'final', 'Map', '<', 'String', ',', 'ConfigRangeAttrs', '>', 'shiftMap', ',', 'final', 'String', 'addedFullName', ',', 'final', 'int', 'increasedLength', ')', '{', 'String', '[', ']', 'parts', '=', 'addedFullName', '.', 'split', '(', '"":""', ')', ';', 'StringBuilder', 'fname', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '(', 'parts', '.', 'length', '-', '1', ')', ';', 'i', '++', ')', '{', 'if', '(', 'i', '==', '0', ')', '{', 'fname', '.', 'append', '(', 'parts', '[', 'i', ']', ')', ';', '}', 'else', '{', 'fname', '.', 'append', '(', '"":""', ')', '.', 'append', '(', 'parts', '[', 'i', ']', ')', ';', '}', 'String', 'sname', '=', 'fname', '.', 'toString', '(', ')', ';', 'shiftMap', '.', 'get', '(', 'sname', ')', '.', 'setFinalLength', '(', 'shiftMap', '.', 'get', '(', 'sname', ')', '.', 'getFinalLength', '(', ')', '+', 'increasedLength', ')', ';', '}', '}']","Increase upper level final length.

@param shiftMap
the shift map
@param addedFullName
the added full name
@param increasedLength
the increased length","['Increase', 'upper', 'level', 'final', 'length', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java#L254-L269,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/geoloc/vertical/OceanS.java,OceanS.makeC,"private Array makeC(Array s, double a, double b) {
    int nz = (int) s.getSize();
    Index sIndex = s.getIndex();
    if (a == 0) return s;  // per R. Signell, USGS

    ArrayDouble.D1 c = new ArrayDouble.D1(nz);

    double fac1 = 1.0 - b;
    double denom1 = 1.0 / Math.sinh(a);
    double denom2 = 1.0 / (2.0 * Math.tanh(0.5 * a));

    for (int i = 0; i < nz; i++) {
      double sz = s.getDouble(sIndex.set(i));
      double term1 = fac1 * Math.sinh(a * sz) * denom1;
      double term2 = b * (Math.tanh(a * (sz + 0.5))
          * denom2 - 0.5);
      c.set(i, term1 + term2);
    }

    return c;
  }",java,"private Array makeC(Array s, double a, double b) {
    int nz = (int) s.getSize();
    Index sIndex = s.getIndex();
    if (a == 0) return s;  // per R. Signell, USGS

    ArrayDouble.D1 c = new ArrayDouble.D1(nz);

    double fac1 = 1.0 - b;
    double denom1 = 1.0 / Math.sinh(a);
    double denom2 = 1.0 / (2.0 * Math.tanh(0.5 * a));

    for (int i = 0; i < nz; i++) {
      double sz = s.getDouble(sIndex.set(i));
      double term1 = fac1 * Math.sinh(a * sz) * denom1;
      double term2 = b * (Math.tanh(a * (sz + 0.5))
          * denom2 - 0.5);
      c.set(i, term1 + term2);
    }

    return c;
  }","['private', 'Array', 'makeC', '(', 'Array', 's', ',', 'double', 'a', ',', 'double', 'b', ')', '{', 'int', 'nz', '=', '(', 'int', ')', 's', '.', 'getSize', '(', ')', ';', 'Index', 'sIndex', '=', 's', '.', 'getIndex', '(', ')', ';', 'if', '(', 'a', '==', '0', ')', 'return', 's', ';', '// per R. Signell, USGS\r', 'ArrayDouble', '.', 'D1', 'c', '=', 'new', 'ArrayDouble', '.', 'D1', '(', 'nz', ')', ';', 'double', 'fac1', '=', '1.0', '-', 'b', ';', 'double', 'denom1', '=', '1.0', '/', 'Math', '.', 'sinh', '(', 'a', ')', ';', 'double', 'denom2', '=', '1.0', '/', '(', '2.0', '*', 'Math', '.', 'tanh', '(', '0.5', '*', 'a', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'nz', ';', 'i', '++', ')', '{', 'double', 'sz', '=', 's', '.', 'getDouble', '(', 'sIndex', '.', 'set', '(', 'i', ')', ')', ';', 'double', 'term1', '=', 'fac1', '*', 'Math', '.', 'sinh', '(', 'a', '*', 'sz', ')', '*', 'denom1', ';', 'double', 'term2', '=', 'b', '*', '(', 'Math', '.', 'tanh', '(', 'a', '*', '(', 'sz', '+', '0.5', ')', ')', '*', 'denom2', '-', '0.5', ')', ';', 'c', '.', 'set', '(', 'i', ',', 'term1', '+', 'term2', ')', ';', '}', 'return', 'c', ';', '}']","Make the C array

@param s s Array
@param a ""a"" value
@param b ""b"" value
@return the C array","['Make', 'the', 'C', 'array']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/geoloc/vertical/OceanS.java#L163-L183,test
js-lib-com/tiny-container,src/main/java/js/servlet/TinyContainer.java,TinyContainer.login,"@Override
	public boolean login(String username, String password) {
		try {
			getHttpServletRequest().login(username, password);
		} catch (ServletException e) {
			// exception is thrown if request is already authenticated, servlet container authentication is not enabled or
			// credentials are not accepted
			// consider all these conditions as login fail but record the event to application logger
			log.debug(e);
			return false;
		}
		return true;
	}",java,"@Override
	public boolean login(String username, String password) {
		try {
			getHttpServletRequest().login(username, password);
		} catch (ServletException e) {
			// exception is thrown if request is already authenticated, servlet container authentication is not enabled or
			// credentials are not accepted
			// consider all these conditions as login fail but record the event to application logger
			log.debug(e);
			return false;
		}
		return true;
	}","['@', 'Override', 'public', 'boolean', 'login', '(', 'String', 'username', ',', 'String', 'password', ')', '{', 'try', '{', 'getHttpServletRequest', '(', ')', '.', 'login', '(', 'username', ',', 'password', ')', ';', '}', 'catch', '(', 'ServletException', 'e', ')', '{', '// exception is thrown if request is already authenticated, servlet container authentication is not enabled or\r', '// credentials are not accepted\r', '// consider all these conditions as login fail but record the event to application logger\r', 'log', '.', 'debug', '(', 'e', ')', ';', 'return', 'false', ';', '}', 'return', 'true', ';', '}']",SECURITY CONTEXT INTERFACE,"['SECURITY', 'CONTEXT', 'INTERFACE']",ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e,https://github.com/js-lib-com/tiny-container/blob/ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e/src/main/java/js/servlet/TinyContainer.java#L350-L362,test
oblac/jodd,jodd-core/src/main/java/jodd/net/URLCoder.java,URLCoder.encodePort,"public static String encodePort(final String port, final String encoding) {
		return encodeUriComponent(port, encoding, URIPart.PORT);
	}",java,"public static String encodePort(final String port, final String encoding) {
		return encodeUriComponent(port, encoding, URIPart.PORT);
	}","['public', 'static', 'String', 'encodePort', '(', 'final', 'String', 'port', ',', 'final', 'String', 'encoding', ')', '{', 'return', 'encodeUriComponent', '(', 'port', ',', 'encoding', ',', 'URIPart', '.', 'PORT', ')', ';', '}']",Encodes the given URI port with the given encoding.,"['Encodes', 'the', 'given', 'URI', 'port', 'with', 'the', 'given', 'encoding', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/net/URLCoder.java#L280-L282,test
rupertlssmith/lojix,lojix/learning/src/main/com/thesett/aima/learning/AbstractLearningMethod.java,AbstractLearningMethod.reset,"public void reset()
    {
        maxSteps = 0;
        machineToTrain = null;
        inputExamples = new ArrayList<State>();
        inputProperties = new HashSet<String>();
        outputProperties = new HashSet<String>();
        inputPropertiesSet = false;
        outputPropertiesSet = false;
    }",java,"public void reset()
    {
        maxSteps = 0;
        machineToTrain = null;
        inputExamples = new ArrayList<State>();
        inputProperties = new HashSet<String>();
        outputProperties = new HashSet<String>();
        inputPropertiesSet = false;
        outputPropertiesSet = false;
    }","['public', 'void', 'reset', '(', ')', '{', 'maxSteps', '=', '0', ';', 'machineToTrain', '=', 'null', ';', 'inputExamples', '=', 'new', 'ArrayList', '<', 'State', '>', '(', ')', ';', 'inputProperties', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'outputProperties', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'inputPropertiesSet', '=', 'false', ';', 'outputPropertiesSet', '=', 'false', ';', '}']","Resets the learning method. This should clear all the examples, properties to learn from and for and the input
machine to train.","['Resets', 'the', 'learning', 'method', '.', 'This', 'should', 'clear', 'all', 'the', 'examples', 'properties', 'to', 'learn', 'from', 'and', 'for', 'and', 'the', 'input', 'machine', 'to', 'train', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/learning/src/main/com/thesett/aima/learning/AbstractLearningMethod.java#L214-L223,test
rupertlssmith/lojix,lojix/search/src/main/com/thesett/aima/search/util/informed/HeuristicSearchNode.java,HeuristicSearchNode.makeNode,"public HeuristicSearchNode<O, T> makeNode(Successor successor) throws SearchNotExhaustiveException
    {
        HeuristicSearchNode<O, T> node = (HeuristicSearchNode<O, T>) super.makeNode(successor);

        // Make sure the new node has a reference to the heuristic evaluator
        node.heuristic = this.heuristic;

        // Compute h for the new node
        node.computeH();

        return node;
    }",java,"public HeuristicSearchNode<O, T> makeNode(Successor successor) throws SearchNotExhaustiveException
    {
        HeuristicSearchNode<O, T> node = (HeuristicSearchNode<O, T>) super.makeNode(successor);

        // Make sure the new node has a reference to the heuristic evaluator
        node.heuristic = this.heuristic;

        // Compute h for the new node
        node.computeH();

        return node;
    }","['public', 'HeuristicSearchNode', '<', 'O', ',', 'T', '>', 'makeNode', '(', 'Successor', 'successor', ')', 'throws', 'SearchNotExhaustiveException', '{', 'HeuristicSearchNode', '<', 'O', ',', 'T', '>', 'node', '=', '(', 'HeuristicSearchNode', '<', 'O', ',', 'T', '>', ')', 'super', '.', 'makeNode', '(', 'successor', ')', ';', '// Make sure the new node has a reference to the heuristic evaluator', 'node', '.', 'heuristic', '=', 'this', '.', 'heuristic', ';', '// Compute h for the new node', 'node', '.', 'computeH', '(', ')', ';', 'return', 'node', ';', '}']","Returns a new node based on a successor of this node. This new node will also be a HeuristicSearchNode.

@param     successor The successor state in the search space to create a new node for.

@return    A completely new heuristic search node for the successor state. This node will be of the correct
class, even for classes that sub-class this one.

@exception SearchNotExhaustiveException If a new node cannot be created. This may happen due to class visibility
or class loading problems.","['Returns', 'a', 'new', 'node', 'based', 'on', 'a', 'successor', 'of', 'this', 'node', '.', 'This', 'new', 'node', 'will', 'also', 'be', 'a', 'HeuristicSearchNode', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/search/src/main/com/thesett/aima/search/util/informed/HeuristicSearchNode.java#L111-L122,test
AndrewReitz/shillelagh,shillelagh-processor/src/main/java/shillelagh/internal/SqliteInteger.java,SqliteInteger.isTypeOf,"boolean isTypeOf(TypeMirror typeMirror) {
    if (integerKinds.contains(typeMirror.getKind())) {
      return true;
    }

    if (integerObjects.contains(typeMirror.toString())) {
      return true;
    }

    return false;
  }",java,"boolean isTypeOf(TypeMirror typeMirror) {
    if (integerKinds.contains(typeMirror.getKind())) {
      return true;
    }

    if (integerObjects.contains(typeMirror.toString())) {
      return true;
    }

    return false;
  }","['boolean', 'isTypeOf', '(', 'TypeMirror', 'typeMirror', ')', '{', 'if', '(', 'integerKinds', '.', 'contains', '(', 'typeMirror', '.', 'getKind', '(', ')', ')', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'integerObjects', '.', 'contains', '(', 'typeMirror', '.', 'toString', '(', ')', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","Checks if a TypeMirror is mapped to Sqlite Integer Type

@param typeMirror The TypeMirror to check if it's an Sqlite Integer Type
@return true if it maps to Sqlite Integer false otherwise","['Checks', 'if', 'a', 'TypeMirror', 'is', 'mapped', 'to', 'Sqlite', 'Integer', 'Type']",d016971487bf8993686eb7d03146110f658e0f18,https://github.com/AndrewReitz/shillelagh/blob/d016971487bf8993686eb7d03146110f658e0f18/shillelagh-processor/src/main/java/shillelagh/internal/SqliteInteger.java#L58-L68,test
Koekiebox-PTY-LTD/Fluid,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/FlowClient.java,FlowClient.updateFlow,"public Flow updateFlow(Flow flowParam)
    {
        if(flowParam != null && this.serviceTicket != null)
        {
            flowParam.setServiceTicket(this.serviceTicket);
        }

        return new Flow(this.postJson(
                flowParam, WS.Path.Flow.Version1.flowUpdate()));
    }",java,"public Flow updateFlow(Flow flowParam)
    {
        if(flowParam != null && this.serviceTicket != null)
        {
            flowParam.setServiceTicket(this.serviceTicket);
        }

        return new Flow(this.postJson(
                flowParam, WS.Path.Flow.Version1.flowUpdate()));
    }","['public', 'Flow', 'updateFlow', '(', 'Flow', 'flowParam', ')', '{', 'if', '(', 'flowParam', '!=', 'null', '&&', 'this', '.', 'serviceTicket', '!=', 'null', ')', '{', 'flowParam', '.', 'setServiceTicket', '(', 'this', '.', 'serviceTicket', ')', ';', '}', 'return', 'new', 'Flow', '(', 'this', '.', 'postJson', '(', 'flowParam', ',', 'WS', '.', 'Path', '.', 'Flow', '.', 'Version1', '.', 'flowUpdate', '(', ')', ')', ')', ';', '}']","Updates an existing Flow.

@param flowParam The flow to Update.
@return The updated flow.

@see Flow","['Updates', 'an', 'existing', 'Flow', '.']",81153d865f71b84ca933532c7115717bc3979270,https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/FlowClient.java#L81-L90,test
stanfy/enroscar,ui/src/main/java/com/stanfy/enroscar/views/GUIUtils.java,GUIUtils.pixelsWidth,"public static int pixelsWidth(final DisplayMetrics displayMetrics, final int dip) {
    final float scale = displayMetrics.density;
    final float alpha = 0.5f;
    return (int)(dip * scale + alpha);
  }",java,"public static int pixelsWidth(final DisplayMetrics displayMetrics, final int dip) {
    final float scale = displayMetrics.density;
    final float alpha = 0.5f;
    return (int)(dip * scale + alpha);
  }","['public', 'static', 'int', 'pixelsWidth', '(', 'final', 'DisplayMetrics', 'displayMetrics', ',', 'final', 'int', 'dip', ')', '{', 'final', 'float', 'scale', '=', 'displayMetrics', '.', 'density', ';', 'final', 'float', 'alpha', '=', '0.5f', ';', 'return', '(', 'int', ')', '(', 'dip', '*', 'scale', '+', 'alpha', ')', ';', '}']","Converts device independent points to actual pixels.
@param displayMetrics display metrics
@param dip dip value
@return pixels count","['Converts', 'device', 'independent', 'points', 'to', 'actual', 'pixels', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/ui/src/main/java/com/stanfy/enroscar/views/GUIUtils.java#L176-L180,test
jcodec/jcodec,src/main/java/org/jcodec/algo/DataConvert.java,DataConvert.fromByte,"public static int[] fromByte(byte[] b, int depth, boolean isBe) {
        if (depth == 24)
            if (isBe)
                return from24BE(b);
            else
                return from24LE(b);
        else if (depth == 16)
            if (isBe)
                return from16BE(b);
            else
                return from16LE(b);
        throw new NotSupportedException(""Conversion from "" + depth + ""bit ""
                + (isBe ? ""big endian"" : ""little endian"") + "" is not supported."");
    }",java,"public static int[] fromByte(byte[] b, int depth, boolean isBe) {
        if (depth == 24)
            if (isBe)
                return from24BE(b);
            else
                return from24LE(b);
        else if (depth == 16)
            if (isBe)
                return from16BE(b);
            else
                return from16LE(b);
        throw new NotSupportedException(""Conversion from "" + depth + ""bit ""
                + (isBe ? ""big endian"" : ""little endian"") + "" is not supported."");
    }","['public', 'static', 'int', '[', ']', 'fromByte', '(', 'byte', '[', ']', 'b', ',', 'int', 'depth', ',', 'boolean', 'isBe', ')', '{', 'if', '(', 'depth', '==', '24', ')', 'if', '(', 'isBe', ')', 'return', 'from24BE', '(', 'b', ')', ';', 'else', 'return', 'from24LE', '(', 'b', ')', ';', 'else', 'if', '(', 'depth', '==', '16', ')', 'if', '(', 'isBe', ')', 'return', 'from16BE', '(', 'b', ')', ';', 'else', 'return', 'from16LE', '(', 'b', ')', ';', 'throw', 'new', 'NotSupportedException', '(', '""Conversion from ""', '+', 'depth', '+', '""bit ""', '+', '(', 'isBe', '?', '""big endian""', ':', '""little endian""', ')', '+', '"" is not supported.""', ')', ';', '}']","Generic byte-array to integer-array conversion

Converts each depth-bit sequence from the input byte array into integer

@param b
Input bytes
@param depth
Bit depth of the integers
@param isBe
If integers are big-endian or little-endian
@return","['Generic', 'byte', '-', 'array', 'to', 'integer', '-', 'array', 'conversion']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/algo/DataConvert.java#L115-L128,test
jboss/jboss-common-core,src/main/java/org/jboss/util/graph/Vertex.java,Vertex.addEdge,"public boolean addEdge(Edge<T> e)
   {
      if (e.getFrom() == this)
         outgoingEdges.add(e);
      else if (e.getTo() == this)
         incomingEdges.add(e);
      else 
         return false;
      return true;
   }",java,"public boolean addEdge(Edge<T> e)
   {
      if (e.getFrom() == this)
         outgoingEdges.add(e);
      else if (e.getTo() == this)
         incomingEdges.add(e);
      else 
         return false;
      return true;
   }","['public', 'boolean', 'addEdge', '(', 'Edge', '<', 'T', '>', 'e', ')', '{', 'if', '(', 'e', '.', 'getFrom', '(', ')', '==', 'this', ')', 'outgoingEdges', '.', 'add', '(', 'e', ')', ';', 'else', 'if', '(', 'e', '.', 'getTo', '(', ')', '==', 'this', ')', 'incomingEdges', '.', 'add', '(', 'e', ')', ';', 'else', 'return', 'false', ';', 'return', 'true', ';', '}']","Add an edge to the vertex. If edge.from is this vertex, its an
outgoing edge. If edge.to is this vertex, its an incoming
edge. If neither from or to is this vertex, the edge is
not added.

@param e - the edge to add
@return true if the edge was added, false otherwise","['Add', 'an', 'edge', 'to', 'the', 'vertex', '.', 'If', 'edge', '.', 'from', 'is', 'this', 'vertex', 'its', 'an', 'outgoing', 'edge', '.', 'If', 'edge', '.', 'to', 'is', 'this', 'vertex', 'its', 'an', 'incoming', 'edge', '.', 'If', 'neither', 'from', 'or', 'to', 'is', 'this', 'vertex', 'the', 'edge', 'is', 'not', 'added', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/graph/Vertex.java#L103-L112,test
oblac/jodd,jodd-core/src/main/java/jodd/io/FileUtil.java,FileUtil.copy,"public static void copy(final File src, final File dest) throws IOException {
		if (src.isDirectory()) {
			copyDir(src, dest);
			return;
		}
		if (dest.isDirectory()) {
			copyFileToDir(src, dest);
			return;
		}
		copyFile(src, dest);
	}",java,"public static void copy(final File src, final File dest) throws IOException {
		if (src.isDirectory()) {
			copyDir(src, dest);
			return;
		}
		if (dest.isDirectory()) {
			copyFileToDir(src, dest);
			return;
		}
		copyFile(src, dest);
	}","['public', 'static', 'void', 'copy', '(', 'final', 'File', 'src', ',', 'final', 'File', 'dest', ')', 'throws', 'IOException', '{', 'if', '(', 'src', '.', 'isDirectory', '(', ')', ')', '{', 'copyDir', '(', 'src', ',', 'dest', ')', ';', 'return', ';', '}', 'if', '(', 'dest', '.', 'isDirectory', '(', ')', ')', '{', 'copyFileToDir', '(', 'src', ',', 'dest', ')', ';', 'return', ';', '}', 'copyFile', '(', 'src', ',', 'dest', ')', ';', '}']","Smart copy. If source is a directory, copy it to destination.
Otherwise, if destination is directory, copy source file to it.
Otherwise, try to copy source file to destination file.

@param src  source {@link File}
@param dest destination {@link File}
@throws IOException if there is an error copying.
@see #copyDir(File, File)
@see #copyFileToDir(File, File)
@see #copyFile(File, File)","['Smart', 'copy', '.', 'If', 'source', 'is', 'a', 'directory', 'copy', 'it', 'to', 'destination', '.', 'Otherwise', 'if', 'destination', 'is', 'directory', 'copy', 'source', 'file', 'to', 'it', '.', 'Otherwise', 'try', 'to', 'copy', 'source', 'file', 'to', 'destination', 'file', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/FileUtil.java#L1200-L1210,test
robeio/robe,robe-quartz/src/main/java/io/robe/quartz/info/JobInfoProvider.java,JobInfoProvider.setCountIntervalValues,"private static void setCountIntervalValues(TriggerInfo dto, TriggerBuilder<org.quartz.Trigger> builder) {
        SimpleScheduleBuilder builderSc = SimpleScheduleBuilder.simpleSchedule();
        if (dto.getRepeatCount() != 0)
            builderSc.withRepeatCount(dto.getRepeatCount());

        if (dto.getRepeatInterval() > 0)
            builderSc.withIntervalInMilliseconds(dto.getRepeatInterval());
        builder.withSchedule(builderSc);
    }",java,"private static void setCountIntervalValues(TriggerInfo dto, TriggerBuilder<org.quartz.Trigger> builder) {
        SimpleScheduleBuilder builderSc = SimpleScheduleBuilder.simpleSchedule();
        if (dto.getRepeatCount() != 0)
            builderSc.withRepeatCount(dto.getRepeatCount());

        if (dto.getRepeatInterval() > 0)
            builderSc.withIntervalInMilliseconds(dto.getRepeatInterval());
        builder.withSchedule(builderSc);
    }","['private', 'static', 'void', 'setCountIntervalValues', '(', 'TriggerInfo', 'dto', ',', 'TriggerBuilder', '<', 'org', '.', 'quartz', '.', 'Trigger', '>', 'builder', ')', '{', 'SimpleScheduleBuilder', 'builderSc', '=', 'SimpleScheduleBuilder', '.', 'simpleSchedule', '(', ')', ';', 'if', '(', 'dto', '.', 'getRepeatCount', '(', ')', '!=', '0', ')', 'builderSc', '.', 'withRepeatCount', '(', 'dto', '.', 'getRepeatCount', '(', ')', ')', ';', 'if', '(', 'dto', '.', 'getRepeatInterval', '(', ')', '>', '0', ')', 'builderSc', '.', 'withIntervalInMilliseconds', '(', 'dto', '.', 'getRepeatInterval', '(', ')', ')', ';', 'builder', '.', 'withSchedule', '(', 'builderSc', ')', ';', '}']","Helps to set count and intervals

@param dto
@param builder","['Helps', 'to', 'set', 'count', 'and', 'intervals']",a0a8c7cebd1f70f78cf24a66a002859e937badfe,https://github.com/robeio/robe/blob/a0a8c7cebd1f70f78cf24a66a002859e937badfe/robe-quartz/src/main/java/io/robe/quartz/info/JobInfoProvider.java#L72-L80,test
TypedRest/TypedRest-Java,vaadin/src/main/java/net/typedrest/vaadin/views/ElementView.java,ElementView.delete,"protected void delete() {
        String question = ""Are you sure you want to delete "" + getCaption() + ""?"";
        ConfirmDialog.show(getUI(), question, (ConfirmDialog cd) -> {
            if (cd.isConfirmed()) {
                try {
                    onDelete();
                    close();
                } catch (IOException | IllegalArgumentException | IllegalAccessException | IllegalStateException ex) {
                    onError(ex);
                } catch (RuntimeException ex) {
                    // Must explicitly send unhandled exceptions to error handler.
                    // Would otherwise get swallowed silently within callback handler.
                    getUI().getErrorHandler().error(new com.vaadin.server.ErrorEvent(ex));
                }
            }
        });
    }",java,"protected void delete() {
        String question = ""Are you sure you want to delete "" + getCaption() + ""?"";
        ConfirmDialog.show(getUI(), question, (ConfirmDialog cd) -> {
            if (cd.isConfirmed()) {
                try {
                    onDelete();
                    close();
                } catch (IOException | IllegalArgumentException | IllegalAccessException | IllegalStateException ex) {
                    onError(ex);
                } catch (RuntimeException ex) {
                    // Must explicitly send unhandled exceptions to error handler.
                    // Would otherwise get swallowed silently within callback handler.
                    getUI().getErrorHandler().error(new com.vaadin.server.ErrorEvent(ex));
                }
            }
        });
    }","['protected', 'void', 'delete', '(', ')', '{', 'String', 'question', '=', '""Are you sure you want to delete ""', '+', 'getCaption', '(', ')', '+', '""?""', ';', 'ConfirmDialog', '.', 'show', '(', 'getUI', '(', ')', ',', 'question', ',', '(', 'ConfirmDialog', 'cd', ')', '->', '{', 'if', '(', 'cd', '.', 'isConfirmed', '(', ')', ')', '{', 'try', '{', 'onDelete', '(', ')', ';', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', '|', 'IllegalArgumentException', '|', 'IllegalAccessException', '|', 'IllegalStateException', 'ex', ')', '{', 'onError', '(', 'ex', ')', ';', '}', 'catch', '(', 'RuntimeException', 'ex', ')', '{', '// Must explicitly send unhandled exceptions to error handler.', '// Would otherwise get swallowed silently within callback handler.', 'getUI', '(', ')', '.', 'getErrorHandler', '(', ')', '.', 'error', '(', 'new', 'com', '.', 'vaadin', '.', 'server', '.', 'ErrorEvent', '(', 'ex', ')', ')', ';', '}', '}', '}', ')', ';', '}']",Deletes the element.,"['Deletes', 'the', 'element', '.']",8ce8782d4b8bbe68a2fb4417928b18724f178705,https://github.com/TypedRest/TypedRest-Java/blob/8ce8782d4b8bbe68a2fb4417928b18724f178705/vaadin/src/main/java/net/typedrest/vaadin/views/ElementView.java#L94-L110,test
Unidata/thredds,tdcommon/src/main/java/thredds/server/catalog/DataRootPathMatcher.java,DataRootPathMatcher.put,"private boolean put(DataRootExt dateRootExt) {
    map.put(dateRootExt.getPath(), dateRootExt);
    return treeSet.add(dateRootExt.getPath());
  }",java,"private boolean put(DataRootExt dateRootExt) {
    map.put(dateRootExt.getPath(), dateRootExt);
    return treeSet.add(dateRootExt.getPath());
  }","['private', 'boolean', 'put', '(', 'DataRootExt', 'dateRootExt', ')', '{', 'map', '.', 'put', '(', 'dateRootExt', '.', 'getPath', '(', ')', ',', 'dateRootExt', ')', ';', 'return', 'treeSet', '.', 'add', '(', 'dateRootExt', '.', 'getPath', '(', ')', ')', ';', '}']","Add a dataRootExt to in-memory tree.
@return true if not already exist","['Add', 'a', 'dataRootExt', 'to', 'in', '-', 'memory', 'tree', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tdcommon/src/main/java/thredds/server/catalog/DataRootPathMatcher.java#L62-L65,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/related/media/MediaRow.java,MediaRow.setData,"public void setData(Bitmap bitmap, Bitmap.CompressFormat format)
            throws IOException {
        setData(bitmap, format, 100);
    }",java,"public void setData(Bitmap bitmap, Bitmap.CompressFormat format)
            throws IOException {
        setData(bitmap, format, 100);
    }","['public', 'void', 'setData', '(', 'Bitmap', 'bitmap', ',', 'Bitmap', '.', 'CompressFormat', 'format', ')', 'throws', 'IOException', '{', 'setData', '(', 'bitmap', ',', 'format', ',', '100', ')', ';', '}']","Set the data from a full quality bitmap

@param bitmap bitmap
@param format compress format
@throws IOException upon failure
@since 3.2.0","['Set', 'the', 'data', 'from', 'a', 'full', 'quality', 'bitmap']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/related/media/MediaRow.java#L168-L171,test
oblac/jodd,jodd-mail/src/main/java/jodd/mail/EmailFilter.java,EmailFilter.cc,"public EmailFilter cc(final String ccAddress) {
		final SearchTerm toTerm = new RecipientStringTerm(RecipientType.CC, ccAddress);
		concat(toTerm);
		return this;
	}",java,"public EmailFilter cc(final String ccAddress) {
		final SearchTerm toTerm = new RecipientStringTerm(RecipientType.CC, ccAddress);
		concat(toTerm);
		return this;
	}","['public', 'EmailFilter', 'cc', '(', 'final', 'String', 'ccAddress', ')', '{', 'final', 'SearchTerm', 'toTerm', '=', 'new', 'RecipientStringTerm', '(', 'RecipientType', '.', 'CC', ',', 'ccAddress', ')', ';', 'concat', '(', 'toTerm', ')', ';', 'return', 'this', ';', '}']","Defines filter for CC field.

@param ccAddress CC addreses.
@return this","['Defines', 'filter', 'for', 'CC', 'field', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/EmailFilter.java#L147-L151,test
robeio/robe,robe-quartz/src/main/java/io/robe/quartz/info/JobInfoProvider.java,JobInfoProvider.setStartEndTime,"private static void setStartEndTime(TriggerInfo dto, TriggerBuilder<org.quartz.Trigger> builder) {
        if (dto.getStartTime() > -1)
            builder.startAt(new Date(dto.getStartTime()));
        else
            builder.startNow();

        if (dto.getEndTime() > -1)
            builder.endAt(new Date(dto.getEndTime()));
    }",java,"private static void setStartEndTime(TriggerInfo dto, TriggerBuilder<org.quartz.Trigger> builder) {
        if (dto.getStartTime() > -1)
            builder.startAt(new Date(dto.getStartTime()));
        else
            builder.startNow();

        if (dto.getEndTime() > -1)
            builder.endAt(new Date(dto.getEndTime()));
    }","['private', 'static', 'void', 'setStartEndTime', '(', 'TriggerInfo', 'dto', ',', 'TriggerBuilder', '<', 'org', '.', 'quartz', '.', 'Trigger', '>', 'builder', ')', '{', 'if', '(', 'dto', '.', 'getStartTime', '(', ')', '>', '-', '1', ')', 'builder', '.', 'startAt', '(', 'new', 'Date', '(', 'dto', '.', 'getStartTime', '(', ')', ')', ')', ';', 'else', 'builder', '.', 'startNow', '(', ')', ';', 'if', '(', 'dto', '.', 'getEndTime', '(', ')', '>', '-', '1', ')', 'builder', '.', 'endAt', '(', 'new', 'Date', '(', 'dto', '.', 'getEndTime', '(', ')', ')', ')', ';', '}']","Helps to set start and end times

@param dto
@param builder","['Helps', 'to', 'set', 'start', 'and', 'end', 'times']",a0a8c7cebd1f70f78cf24a66a002859e937badfe,https://github.com/robeio/robe/blob/a0a8c7cebd1f70f78cf24a66a002859e937badfe/robe-quartz/src/main/java/io/robe/quartz/info/JobInfoProvider.java#L89-L97,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/PrimitiveAnalysis.java,PrimitiveAnalysis.getPrimitiveAnalysis,"public static PrimitiveAnalysis getPrimitiveAnalysis(final Class cls) {
        if (cls == null)
            throw IIOPLogger.ROOT_LOGGER.cannotAnalyzeNullClass();

        if (cls == Void.TYPE)
            return voidAnalysis;
        if (cls == Boolean.TYPE)
            return booleanAnalysis;
        if (cls == Character.TYPE)
            return charAnalysis;
        if (cls == Byte.TYPE)
            return byteAnalysis;
        if (cls == Short.TYPE)
            return shortAnalysis;
        if (cls == Integer.TYPE)
            return intAnalysis;
        if (cls == Long.TYPE)
            return longAnalysis;
        if (cls == Float.TYPE)
            return floatAnalysis;
        if (cls == Double.TYPE)
            return doubleAnalysis;

        throw IIOPLogger.ROOT_LOGGER.notAPrimitive(cls.getName());
    }",java,"public static PrimitiveAnalysis getPrimitiveAnalysis(final Class cls) {
        if (cls == null)
            throw IIOPLogger.ROOT_LOGGER.cannotAnalyzeNullClass();

        if (cls == Void.TYPE)
            return voidAnalysis;
        if (cls == Boolean.TYPE)
            return booleanAnalysis;
        if (cls == Character.TYPE)
            return charAnalysis;
        if (cls == Byte.TYPE)
            return byteAnalysis;
        if (cls == Short.TYPE)
            return shortAnalysis;
        if (cls == Integer.TYPE)
            return intAnalysis;
        if (cls == Long.TYPE)
            return longAnalysis;
        if (cls == Float.TYPE)
            return floatAnalysis;
        if (cls == Double.TYPE)
            return doubleAnalysis;

        throw IIOPLogger.ROOT_LOGGER.notAPrimitive(cls.getName());
    }","['public', 'static', 'PrimitiveAnalysis', 'getPrimitiveAnalysis', '(', 'final', 'Class', 'cls', ')', '{', 'if', '(', 'cls', '==', 'null', ')', 'throw', 'IIOPLogger', '.', 'ROOT_LOGGER', '.', 'cannotAnalyzeNullClass', '(', ')', ';', 'if', '(', 'cls', '==', 'Void', '.', 'TYPE', ')', 'return', 'voidAnalysis', ';', 'if', '(', 'cls', '==', 'Boolean', '.', 'TYPE', ')', 'return', 'booleanAnalysis', ';', 'if', '(', 'cls', '==', 'Character', '.', 'TYPE', ')', 'return', 'charAnalysis', ';', 'if', '(', 'cls', '==', 'Byte', '.', 'TYPE', ')', 'return', 'byteAnalysis', ';', 'if', '(', 'cls', '==', 'Short', '.', 'TYPE', ')', 'return', 'shortAnalysis', ';', 'if', '(', 'cls', '==', 'Integer', '.', 'TYPE', ')', 'return', 'intAnalysis', ';', 'if', '(', 'cls', '==', 'Long', '.', 'TYPE', ')', 'return', 'longAnalysis', ';', 'if', '(', 'cls', '==', 'Float', '.', 'TYPE', ')', 'return', 'floatAnalysis', ';', 'if', '(', 'cls', '==', 'Double', '.', 'TYPE', ')', 'return', 'doubleAnalysis', ';', 'throw', 'IIOPLogger', '.', 'ROOT_LOGGER', '.', 'notAPrimitive', '(', 'cls', '.', 'getName', '(', ')', ')', ';', '}']",Get a singleton instance representing one of the primitive types.,"['Get', 'a', 'singleton', 'instance', 'representing', 'one', 'of', 'the', 'primitive', 'types', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/PrimitiveAnalysis.java#L55-L79,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/InvDataset.java,InvDataset.getFullName,"public String getFullName() {
    return (parent == null)
        ? name
        : (parent.getFullName() == null || parent.getFullName().length() == 0)
        ? name
        : parent.getFullName() + ""/"" + name;
  }",java,"public String getFullName() {
    return (parent == null)
        ? name
        : (parent.getFullName() == null || parent.getFullName().length() == 0)
        ? name
        : parent.getFullName() + ""/"" + name;
  }","['public', 'String', 'getFullName', '(', ')', '{', 'return', '(', 'parent', '==', 'null', ')', '?', 'name', ':', '(', 'parent', '.', 'getFullName', '(', ')', '==', 'null', '||', 'parent', '.', 'getFullName', '(', ')', '.', 'length', '(', ')', '==', '0', ')', '?', 'name', ':', 'parent', '.', 'getFullName', '(', ')', '+', '""/""', '+', 'name', ';', '}']","Get the full, heirarchical name of the dataset, which has all parent collection names.

@return full, heirarchical name of the dataset, which has all parent collection names.","['Get', 'the', 'full', 'heirarchical', 'name', 'of', 'the', 'dataset', 'which', 'has', 'all', 'parent', 'collection', 'names', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/InvDataset.java#L80-L86,test
objectify/objectify,src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java,GenericTypeReflector.getExactDirectSuperTypes,"private static Type[] getExactDirectSuperTypes(Type type) {
		if (type instanceof ParameterizedType || type instanceof Class) {
			Class<?> clazz;
			if (type instanceof ParameterizedType) {
				clazz = (Class<?>)((ParameterizedType)type).getRawType();
			} else {
				// TODO primitive types?
				clazz = (Class<?>)type;
				if (clazz.isArray())
					return getArrayExactDirectSuperTypes(clazz);
			}
			
			Type[] superInterfaces = clazz.getGenericInterfaces();
			Type superClass = clazz.getGenericSuperclass();
			
			// the only supertype of an interface without superinterfaces is Object
			if (superClass == null && superInterfaces.length == 0 && clazz.isInterface()) {
				return new Type[] {Object.class};
			}
			
			Type[] result;
			int resultIndex;
			if (superClass == null) {
				result = new Type[superInterfaces.length];
				resultIndex = 0;
			} else {
				result = new Type[superInterfaces.length + 1];
				resultIndex = 1;
				result[0] = mapTypeParameters(superClass, type);
			}
			for (Type superInterface : superInterfaces) {
				result[resultIndex++] = mapTypeParameters(superInterface, type);
			}
			
			return result;
		} else if (type instanceof TypeVariable) {
			TypeVariable<?> tv = (TypeVariable<?>) type;
			return tv.getBounds();
		} else if (type instanceof WildcardType) {
			// This should be a rare case: normally this wildcard is already captured.
			// But it does happen if the upper bound of a type variable contains a wildcard
			// TODO shouldn't upper bound of type variable have been captured too? (making this case impossible?)
			return ((WildcardType) type).getUpperBounds();
		} else if (type instanceof CaptureType) {
			return ((CaptureType)type).getUpperBounds();
		} else if (type instanceof GenericArrayType) {
			return getArrayExactDirectSuperTypes(type);
		} else if (type == null) {
			throw new NullPointerException();
		} else {
			throw new RuntimeException(""not implemented type: "" + type);
		}
	}",java,"private static Type[] getExactDirectSuperTypes(Type type) {
		if (type instanceof ParameterizedType || type instanceof Class) {
			Class<?> clazz;
			if (type instanceof ParameterizedType) {
				clazz = (Class<?>)((ParameterizedType)type).getRawType();
			} else {
				// TODO primitive types?
				clazz = (Class<?>)type;
				if (clazz.isArray())
					return getArrayExactDirectSuperTypes(clazz);
			}
			
			Type[] superInterfaces = clazz.getGenericInterfaces();
			Type superClass = clazz.getGenericSuperclass();
			
			// the only supertype of an interface without superinterfaces is Object
			if (superClass == null && superInterfaces.length == 0 && clazz.isInterface()) {
				return new Type[] {Object.class};
			}
			
			Type[] result;
			int resultIndex;
			if (superClass == null) {
				result = new Type[superInterfaces.length];
				resultIndex = 0;
			} else {
				result = new Type[superInterfaces.length + 1];
				resultIndex = 1;
				result[0] = mapTypeParameters(superClass, type);
			}
			for (Type superInterface : superInterfaces) {
				result[resultIndex++] = mapTypeParameters(superInterface, type);
			}
			
			return result;
		} else if (type instanceof TypeVariable) {
			TypeVariable<?> tv = (TypeVariable<?>) type;
			return tv.getBounds();
		} else if (type instanceof WildcardType) {
			// This should be a rare case: normally this wildcard is already captured.
			// But it does happen if the upper bound of a type variable contains a wildcard
			// TODO shouldn't upper bound of type variable have been captured too? (making this case impossible?)
			return ((WildcardType) type).getUpperBounds();
		} else if (type instanceof CaptureType) {
			return ((CaptureType)type).getUpperBounds();
		} else if (type instanceof GenericArrayType) {
			return getArrayExactDirectSuperTypes(type);
		} else if (type == null) {
			throw new NullPointerException();
		} else {
			throw new RuntimeException(""not implemented type: "" + type);
		}
	}","['private', 'static', 'Type', '[', ']', 'getExactDirectSuperTypes', '(', 'Type', 'type', ')', '{', 'if', '(', 'type', 'instanceof', 'ParameterizedType', '||', 'type', 'instanceof', 'Class', ')', '{', 'Class', '<', '?', '>', 'clazz', ';', 'if', '(', 'type', 'instanceof', 'ParameterizedType', ')', '{', 'clazz', '=', '(', 'Class', '<', '?', '>', ')', '(', '(', 'ParameterizedType', ')', 'type', ')', '.', 'getRawType', '(', ')', ';', '}', 'else', '{', '// TODO primitive types?', 'clazz', '=', '(', 'Class', '<', '?', '>', ')', 'type', ';', 'if', '(', 'clazz', '.', 'isArray', '(', ')', ')', 'return', 'getArrayExactDirectSuperTypes', '(', 'clazz', ')', ';', '}', 'Type', '[', ']', 'superInterfaces', '=', 'clazz', '.', 'getGenericInterfaces', '(', ')', ';', 'Type', 'superClass', '=', 'clazz', '.', 'getGenericSuperclass', '(', ')', ';', '// the only supertype of an interface without superinterfaces is Object', 'if', '(', 'superClass', '==', 'null', '&&', 'superInterfaces', '.', 'length', '==', '0', '&&', 'clazz', '.', 'isInterface', '(', ')', ')', '{', 'return', 'new', 'Type', '[', ']', '{', 'Object', '.', 'class', '}', ';', '}', 'Type', '[', ']', 'result', ';', 'int', 'resultIndex', ';', 'if', '(', 'superClass', '==', 'null', ')', '{', 'result', '=', 'new', 'Type', '[', 'superInterfaces', '.', 'length', ']', ';', 'resultIndex', '=', '0', ';', '}', 'else', '{', 'result', '=', 'new', 'Type', '[', 'superInterfaces', '.', 'length', '+', '1', ']', ';', 'resultIndex', '=', '1', ';', 'result', '[', '0', ']', '=', 'mapTypeParameters', '(', 'superClass', ',', 'type', ')', ';', '}', 'for', '(', 'Type', 'superInterface', ':', 'superInterfaces', ')', '{', 'result', '[', 'resultIndex', '++', ']', '=', 'mapTypeParameters', '(', 'superInterface', ',', 'type', ')', ';', '}', 'return', 'result', ';', '}', 'else', 'if', '(', 'type', 'instanceof', 'TypeVariable', ')', '{', 'TypeVariable', '<', '?', '>', 'tv', '=', '(', 'TypeVariable', '<', '?', '>', ')', 'type', ';', 'return', 'tv', '.', 'getBounds', '(', ')', ';', '}', 'else', 'if', '(', 'type', 'instanceof', 'WildcardType', ')', '{', '// This should be a rare case: normally this wildcard is already captured.', '// But it does happen if the upper bound of a type variable contains a wildcard', ""// TODO shouldn't upper bound of type variable have been captured too? (making this case impossible?)"", 'return', '(', '(', 'WildcardType', ')', 'type', ')', '.', 'getUpperBounds', '(', ')', ';', '}', 'else', 'if', '(', 'type', 'instanceof', 'CaptureType', ')', '{', 'return', '(', '(', 'CaptureType', ')', 'type', ')', '.', 'getUpperBounds', '(', ')', ';', '}', 'else', 'if', '(', 'type', 'instanceof', 'GenericArrayType', ')', '{', 'return', 'getArrayExactDirectSuperTypes', '(', 'type', ')', ';', '}', 'else', 'if', '(', 'type', '==', 'null', ')', '{', 'throw', 'new', 'NullPointerException', '(', ')', ';', '}', 'else', '{', 'throw', 'new', 'RuntimeException', '(', '""not implemented type: ""', '+', 'type', ')', ';', '}', '}']",Returns the direct supertypes of the given type. Resolves type parameters.,"['Returns', 'the', 'direct', 'supertypes', 'of', 'the', 'given', 'type', '.', 'Resolves', 'type', 'parameters', '.']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java#L274-L326,test
jboss/jboss-common-core,src/main/java/org/jboss/util/collection/WeakTypeCache.java,WeakTypeCache.getParameterizedType,"protected T getParameterizedType(ParameterizedType type)
   {
      // First check if we already have it
      T result = peek(type);
      if (result != null)
         return result;
      
      // Instantiate
      result = instantiate(type);

      // Put the perlimanary result into the cache
      put(type, result);

      // Generate the details
      generate(type, result);
      
      return result;
   }",java,"protected T getParameterizedType(ParameterizedType type)
   {
      // First check if we already have it
      T result = peek(type);
      if (result != null)
         return result;
      
      // Instantiate
      result = instantiate(type);

      // Put the perlimanary result into the cache
      put(type, result);

      // Generate the details
      generate(type, result);
      
      return result;
   }","['protected', 'T', 'getParameterizedType', '(', 'ParameterizedType', 'type', ')', '{', '// First check if we already have it', 'T', 'result', '=', 'peek', '(', 'type', ')', ';', 'if', '(', 'result', '!=', 'null', ')', 'return', 'result', ';', '// Instantiate', 'result', '=', 'instantiate', '(', 'type', ')', ';', '// Put the perlimanary result into the cache', 'put', '(', 'type', ',', 'result', ')', ';', '// Generate the details', 'generate', '(', 'type', ',', 'result', ')', ';', 'return', 'result', ';', '}']","Get the information for a parameterized type

@param type the parameterized type
@return the info","['Get', 'the', 'information', 'for', 'a', 'parameterized', 'type']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/collection/WeakTypeCache.java#L132-L149,test
lestard/FluxFX,fluxfx/src/main/java/eu/lestard/fluxfx/Dispatcher.java,Dispatcher.dispatchOnFxThread,"public void dispatchOnFxThread(Action action) {
        if(Platform.isFxApplicationThread()) {
            actionStream.push(action);
        } else {
            Platform.runLater(() -> actionStream.push(action));
        }
    }",java,"public void dispatchOnFxThread(Action action) {
        if(Platform.isFxApplicationThread()) {
            actionStream.push(action);
        } else {
            Platform.runLater(() -> actionStream.push(action));
        }
    }","['public', 'void', 'dispatchOnFxThread', '(', 'Action', 'action', ')', '{', 'if', '(', 'Platform', '.', 'isFxApplicationThread', '(', ')', ')', '{', 'actionStream', '.', 'push', '(', 'action', ')', ';', '}', 'else', '{', 'Platform', '.', 'runLater', '(', '(', ')', '->', 'actionStream', '.', 'push', '(', 'action', ')', ')', ';', '}', '}']","Dispatch the given action. Dispatching is always done on the JavaFX application
thread, even if this method is called from another thread.

@param action the action that will be dispatched to the stores.","['Dispatch', 'the', 'given', 'action', '.', 'Dispatching', 'is', 'always', 'done', 'on', 'the', 'JavaFX', 'application', 'thread', 'even', 'if', 'this', 'method', 'is', 'called', 'from', 'another', 'thread', '.']",aa292f3ec63685dcf6ee7fbbfb4b9d98e518645b,https://github.com/lestard/FluxFX/blob/aa292f3ec63685dcf6ee7fbbfb4b9d98e518645b/fluxfx/src/main/java/eu/lestard/fluxfx/Dispatcher.java#L40-L46,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/Attribute.java,Attribute.writeCDL,"protected void writeCDL(Formatter f, boolean strict, String parentname) {
    if(strict && (isString() || this.getEnumType() != null))
      // Force type explicitly for string.
      f.format(""string ""); //note lower case and trailing blank
    if(strict && parentname != null) f.format(NetcdfFile.makeValidCDLName(parentname));
    f.format("":"");
    f.format(""%s"", strict ? NetcdfFile.makeValidCDLName(getShortName()) : getShortName());
    if (isString()) {
      f.format("" = "");
      for(int i = 0; i < getLength(); i++) {
        if(i != 0) f.format("", "");
        String val = getStringValue(i);
        if(val != null)
          f.format(""\""%s\"""", encodeString(val));
      }
    } else if(getEnumType() != null) {
      f.format("" = "");
      for (int i = 0; i < getLength(); i++) {
        if(i != 0) f.format("", "");
        EnumTypedef en = getEnumType();
        String econst = getStringValue(i);
        Integer ecint = en.lookupEnumInt(econst);
        if(ecint == null)
           throw new ForbiddenConversionException(""Illegal enum constant: ""+econst);
        f.format(""\""%s\"""", encodeString(econst));
      }
    } else {
      f.format("" = "");
      for (int i = 0; i < getLength(); i++) {
        if (i != 0) f.format("", "");

        Number number = getNumericValue(i);
        if (dataType.isUnsigned()) {
          // 'number' is unsigned, but will be treated as signed when we print it below, because Java only has signed
          // types. If it is large enough ( >= 2^(BIT_WIDTH-1) ), its most-significant bit will be interpreted as the
          // sign bit, which will result in an invalid (negative) value being printed. To prevent that, we're going
          // to widen the number before printing it.
          number = DataType.widenNumber(number);
        }
        f.format(""%s"", number);

        if (dataType.isUnsigned()) {
          f.format(""U"");
        }

        if (dataType == DataType.FLOAT)
          f.format(""f"");
        else if (dataType == DataType.SHORT || dataType == DataType.USHORT) {
          f.format(""S"");
        } else if (dataType == DataType.BYTE || dataType == DataType.UBYTE) {
          f.format(""B"");
        } else if (dataType == DataType.LONG || dataType == DataType.ULONG) {
          f.format(""L"");
        }
      }
    }
  }",java,"protected void writeCDL(Formatter f, boolean strict, String parentname) {
    if(strict && (isString() || this.getEnumType() != null))
      // Force type explicitly for string.
      f.format(""string ""); //note lower case and trailing blank
    if(strict && parentname != null) f.format(NetcdfFile.makeValidCDLName(parentname));
    f.format("":"");
    f.format(""%s"", strict ? NetcdfFile.makeValidCDLName(getShortName()) : getShortName());
    if (isString()) {
      f.format("" = "");
      for(int i = 0; i < getLength(); i++) {
        if(i != 0) f.format("", "");
        String val = getStringValue(i);
        if(val != null)
          f.format(""\""%s\"""", encodeString(val));
      }
    } else if(getEnumType() != null) {
      f.format("" = "");
      for (int i = 0; i < getLength(); i++) {
        if(i != 0) f.format("", "");
        EnumTypedef en = getEnumType();
        String econst = getStringValue(i);
        Integer ecint = en.lookupEnumInt(econst);
        if(ecint == null)
           throw new ForbiddenConversionException(""Illegal enum constant: ""+econst);
        f.format(""\""%s\"""", encodeString(econst));
      }
    } else {
      f.format("" = "");
      for (int i = 0; i < getLength(); i++) {
        if (i != 0) f.format("", "");

        Number number = getNumericValue(i);
        if (dataType.isUnsigned()) {
          // 'number' is unsigned, but will be treated as signed when we print it below, because Java only has signed
          // types. If it is large enough ( >= 2^(BIT_WIDTH-1) ), its most-significant bit will be interpreted as the
          // sign bit, which will result in an invalid (negative) value being printed. To prevent that, we're going
          // to widen the number before printing it.
          number = DataType.widenNumber(number);
        }
        f.format(""%s"", number);

        if (dataType.isUnsigned()) {
          f.format(""U"");
        }

        if (dataType == DataType.FLOAT)
          f.format(""f"");
        else if (dataType == DataType.SHORT || dataType == DataType.USHORT) {
          f.format(""S"");
        } else if (dataType == DataType.BYTE || dataType == DataType.UBYTE) {
          f.format(""B"");
        } else if (dataType == DataType.LONG || dataType == DataType.ULONG) {
          f.format(""L"");
        }
      }
    }
  }","['protected', 'void', 'writeCDL', '(', 'Formatter', 'f', ',', 'boolean', 'strict', ',', 'String', 'parentname', ')', '{', 'if', '(', 'strict', '&&', '(', 'isString', '(', ')', '||', 'this', '.', 'getEnumType', '(', ')', '!=', 'null', ')', ')', '// Force type explicitly for string.', 'f', '.', 'format', '(', '""string ""', ')', ';', '//note lower case and trailing blank', 'if', '(', 'strict', '&&', 'parentname', '!=', 'null', ')', 'f', '.', 'format', '(', 'NetcdfFile', '.', 'makeValidCDLName', '(', 'parentname', ')', ')', ';', 'f', '.', 'format', '(', '"":""', ')', ';', 'f', '.', 'format', '(', '""%s""', ',', 'strict', '?', 'NetcdfFile', '.', 'makeValidCDLName', '(', 'getShortName', '(', ')', ')', ':', 'getShortName', '(', ')', ')', ';', 'if', '(', 'isString', '(', ')', ')', '{', 'f', '.', 'format', '(', '"" = ""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'i', '!=', '0', ')', 'f', '.', 'format', '(', '"", ""', ')', ';', 'String', 'val', '=', 'getStringValue', '(', 'i', ')', ';', 'if', '(', 'val', '!=', 'null', ')', 'f', '.', 'format', '(', '""\\""%s\\""""', ',', 'encodeString', '(', 'val', ')', ')', ';', '}', '}', 'else', 'if', '(', 'getEnumType', '(', ')', '!=', 'null', ')', '{', 'f', '.', 'format', '(', '"" = ""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'i', '!=', '0', ')', 'f', '.', 'format', '(', '"", ""', ')', ';', 'EnumTypedef', 'en', '=', 'getEnumType', '(', ')', ';', 'String', 'econst', '=', 'getStringValue', '(', 'i', ')', ';', 'Integer', 'ecint', '=', 'en', '.', 'lookupEnumInt', '(', 'econst', ')', ';', 'if', '(', 'ecint', '==', 'null', ')', 'throw', 'new', 'ForbiddenConversionException', '(', '""Illegal enum constant: ""', '+', 'econst', ')', ';', 'f', '.', 'format', '(', '""\\""%s\\""""', ',', 'encodeString', '(', 'econst', ')', ')', ';', '}', '}', 'else', '{', 'f', '.', 'format', '(', '"" = ""', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'i', '!=', '0', ')', 'f', '.', 'format', '(', '"", ""', ')', ';', 'Number', 'number', '=', 'getNumericValue', '(', 'i', ')', ';', 'if', '(', 'dataType', '.', 'isUnsigned', '(', ')', ')', '{', ""// 'number' is unsigned, but will be treated as signed when we print it below, because Java only has signed"", '// types. If it is large enough ( >= 2^(BIT_WIDTH-1) ), its most-significant bit will be interpreted as the', ""// sign bit, which will result in an invalid (negative) value being printed. To prevent that, we're going"", '// to widen the number before printing it.', 'number', '=', 'DataType', '.', 'widenNumber', '(', 'number', ')', ';', '}', 'f', '.', 'format', '(', '""%s""', ',', 'number', ')', ';', 'if', '(', 'dataType', '.', 'isUnsigned', '(', ')', ')', '{', 'f', '.', 'format', '(', '""U""', ')', ';', '}', 'if', '(', 'dataType', '==', 'DataType', '.', 'FLOAT', ')', 'f', '.', 'format', '(', '""f""', ')', ';', 'else', 'if', '(', 'dataType', '==', 'DataType', '.', 'SHORT', '||', 'dataType', '==', 'DataType', '.', 'USHORT', ')', '{', 'f', '.', 'format', '(', '""S""', ')', ';', '}', 'else', 'if', '(', 'dataType', '==', 'DataType', '.', 'BYTE', '||', 'dataType', '==', 'DataType', '.', 'UBYTE', ')', '{', 'f', '.', 'format', '(', '""B""', ')', ';', '}', 'else', 'if', '(', 'dataType', '==', 'DataType', '.', 'LONG', '||', 'dataType', '==', 'DataType', '.', 'ULONG', ')', '{', 'f', '.', 'format', '(', '""L""', ')', ';', '}', '}', '}', '}']","Write CDL representation into f

@param f      write into this
@param strict if true, create strict CDL, escaping names","['Write', 'CDL', 'representation', 'into', 'f']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/Attribute.java#L254-L310,test
dschulten/hydra-java,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/PartialUriTemplate.java,PartialUriTemplate.asComponents,"public PartialUriTemplateComponents asComponents() {
        return getUriTemplateComponents(Collections.<String, Object>emptyMap(), Collections.<String>emptyList());
    }",java,"public PartialUriTemplateComponents asComponents() {
        return getUriTemplateComponents(Collections.<String, Object>emptyMap(), Collections.<String>emptyList());
    }","['public', 'PartialUriTemplateComponents', 'asComponents', '(', ')', '{', 'return', 'getUriTemplateComponents', '(', 'Collections', '.', '<', 'String', ',', 'Object', '>', 'emptyMap', '(', ')', ',', 'Collections', '.', '<', 'String', '>', 'emptyList', '(', ')', ')', ';', '}']","Returns the template as uri components, without variable expansion.

@return components of the Uri","['Returns', 'the', 'template', 'as', 'uri', 'components', 'without', 'variable', 'expansion', '.']",21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a,https://github.com/dschulten/hydra-java/blob/21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/PartialUriTemplate.java#L119-L121,test
streamsets/datacollector,basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/schemagen/generators/AvroSchemaGenerator.java,AvroSchemaGenerator.getDefaultValue,"private JsonNode getDefaultValue(Schema schema) {
    if(getConfig().avroNullableFields && getConfig().avroDefaultNullable) {
      return NullNode.getInstance();
    }

    if(!getConfig().avroNullableFields && defaultValuesForTypes.containsKey(schema.getType())) {
      return defaultValuesForTypes.get(schema.getType());
    }

    return null;
  }",java,"private JsonNode getDefaultValue(Schema schema) {
    if(getConfig().avroNullableFields && getConfig().avroDefaultNullable) {
      return NullNode.getInstance();
    }

    if(!getConfig().avroNullableFields && defaultValuesForTypes.containsKey(schema.getType())) {
      return defaultValuesForTypes.get(schema.getType());
    }

    return null;
  }","['private', 'JsonNode', 'getDefaultValue', '(', 'Schema', 'schema', ')', '{', 'if', '(', 'getConfig', '(', ')', '.', 'avroNullableFields', '&&', 'getConfig', '(', ')', '.', 'avroDefaultNullable', ')', '{', 'return', 'NullNode', '.', 'getInstance', '(', ')', ';', '}', 'if', '(', '!', 'getConfig', '(', ')', '.', 'avroNullableFields', '&&', 'defaultValuesForTypes', '.', 'containsKey', '(', 'schema', '.', 'getType', '(', ')', ')', ')', '{', 'return', 'defaultValuesForTypes', '.', 'get', '(', 'schema', '.', 'getType', '(', ')', ')', ';', '}', 'return', 'null', ';', '}']",Returns default value for given field or null if no default value should be used.,"['Returns', 'default', 'value', 'for', 'given', 'field', 'or', 'null', 'if', 'no', 'default', 'value', 'should', 'be', 'used', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/schemagen/generators/AvroSchemaGenerator.java#L298-L308,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CellUtility.java,CellUtility.copyCellSetValue,"@SuppressWarnings(""deprecation"")
	private static void copyCellSetValue(final Cell sourceCell, final Cell newCell, final boolean checkLock) {

		CellStyle newCellStyle = newCell.getCellStyle();
		String name = sourceCell.getCellTypeEnum().toString();
		CellValueType e = Enum.valueOf(CellValueType.class, name);
		e.setCellValue(newCell, sourceCell, checkLock, newCellStyle);
	}",java,"@SuppressWarnings(""deprecation"")
	private static void copyCellSetValue(final Cell sourceCell, final Cell newCell, final boolean checkLock) {

		CellStyle newCellStyle = newCell.getCellStyle();
		String name = sourceCell.getCellTypeEnum().toString();
		CellValueType e = Enum.valueOf(CellValueType.class, name);
		e.setCellValue(newCell, sourceCell, checkLock, newCellStyle);
	}","['@', 'SuppressWarnings', '(', '""deprecation""', ')', 'private', 'static', 'void', 'copyCellSetValue', '(', 'final', 'Cell', 'sourceCell', ',', 'final', 'Cell', 'newCell', ',', 'final', 'boolean', 'checkLock', ')', '{', 'CellStyle', 'newCellStyle', '=', 'newCell', '.', 'getCellStyle', '(', ')', ';', 'String', 'name', '=', 'sourceCell', '.', 'getCellTypeEnum', '(', ')', '.', 'toString', '(', ')', ';', 'CellValueType', 'e', '=', 'Enum', '.', 'valueOf', '(', 'CellValueType', '.', 'class', ',', 'name', ')', ';', 'e', '.', 'setCellValue', '(', 'newCell', ',', 'sourceCell', ',', 'checkLock', ',', 'newCellStyle', ')', ';', '}']","set cell value.

@param sourceCell
source cell.
@param newCell
new cell.
@param checkLock
check lock flag.","['set', 'cell', 'value', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CellUtility.java#L410-L417,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/StyleRow.java,StyleRow.validateColor,"private String validateColor(String color) {
        String validated = color;
        if (color != null) {
            if (!color.startsWith(""#"")) {
                validated = ""#"" + color;
            }
            if (!colorPattern.matcher(validated).matches()) {
                throw new GeoPackageException(
                        ""Color must be in hex format #RRGGBB or #RGB, invalid value: ""
                                + color);
            }
            validated = validated.toUpperCase();
        }
        return validated;
    }",java,"private String validateColor(String color) {
        String validated = color;
        if (color != null) {
            if (!color.startsWith(""#"")) {
                validated = ""#"" + color;
            }
            if (!colorPattern.matcher(validated).matches()) {
                throw new GeoPackageException(
                        ""Color must be in hex format #RRGGBB or #RGB, invalid value: ""
                                + color);
            }
            validated = validated.toUpperCase();
        }
        return validated;
    }","['private', 'String', 'validateColor', '(', 'String', 'color', ')', '{', 'String', 'validated', '=', 'color', ';', 'if', '(', 'color', '!=', 'null', ')', '{', 'if', '(', '!', 'color', '.', 'startsWith', '(', '""#""', ')', ')', '{', 'validated', '=', '""#""', '+', 'color', ';', '}', 'if', '(', '!', 'colorPattern', '.', 'matcher', '(', 'validated', ')', '.', 'matches', '(', ')', ')', '{', 'throw', 'new', 'GeoPackageException', '(', '""Color must be in hex format #RRGGBB or #RGB, invalid value: ""', '+', 'color', ')', ';', '}', 'validated', '=', 'validated', '.', 'toUpperCase', '(', ')', ';', '}', 'return', 'validated', ';', '}']","Validate and adjust the color value

@param color color","['Validate', 'and', 'adjust', 'the', 'color', 'value']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/StyleRow.java#L466-L480,test
stanfy/enroscar,net/src/main/java/com/stanfy/enroscar/rest/loader/RequestBuilderLoader.java,RequestBuilderLoader.waitForLoader,"void waitForLoader(final long time) {
    try {
      done.await(time, TimeUnit.MILLISECONDS);
    } catch (final InterruptedException e) {
      Log.e(TAG, ""waitForLoader() ininterrupted"", e);
    }
  }",java,"void waitForLoader(final long time) {
    try {
      done.await(time, TimeUnit.MILLISECONDS);
    } catch (final InterruptedException e) {
      Log.e(TAG, ""waitForLoader() ininterrupted"", e);
    }
  }","['void', 'waitForLoader', '(', 'final', 'long', 'time', ')', '{', 'try', '{', 'done', '.', 'await', '(', 'time', ',', 'TimeUnit', '.', 'MILLISECONDS', ')', ';', '}', 'catch', '(', 'final', 'InterruptedException', 'e', ')', '{', 'Log', '.', 'e', '(', 'TAG', ',', '""waitForLoader() ininterrupted""', ',', 'e', ')', ';', '}', '}']",For testing only.,"['For', 'testing', 'only', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/net/src/main/java/com/stanfy/enroscar/rest/loader/RequestBuilderLoader.java#L289-L295,test
fuinorg/srcgen4j-core,src/main/java/org/fuin/srcgen4j/core/velocity/ParameterizedTemplateModels.java,ParameterizedTemplateModels.init,"public final void init(final SrcGen4JContext context, final Map<String, String> vars) {
        if (paramTemplates != null) {
            for (final ParameterizedTemplateModel paramTemplate : paramTemplates) {
                paramTemplate.init(context, vars);
            }
        }
    }",java,"public final void init(final SrcGen4JContext context, final Map<String, String> vars) {
        if (paramTemplates != null) {
            for (final ParameterizedTemplateModel paramTemplate : paramTemplates) {
                paramTemplate.init(context, vars);
            }
        }
    }","['public', 'final', 'void', 'init', '(', 'final', 'SrcGen4JContext', 'context', ',', 'final', 'Map', '<', 'String', ',', 'String', '>', 'vars', ')', '{', 'if', '(', 'paramTemplates', '!=', 'null', ')', '{', 'for', '(', 'final', 'ParameterizedTemplateModel', 'paramTemplate', ':', 'paramTemplates', ')', '{', 'paramTemplate', '.', 'init', '(', 'context', ',', 'vars', ')', ';', '}', '}', '}']","Initalizes the object.

@param context
Current context.
@param vars
Variables to use.","['Initalizes', 'the', 'object', '.']",da2bc58370993e6294ddc4eb7e696fe255f979db,https://github.com/fuinorg/srcgen4j-core/blob/da2bc58370993e6294ddc4eb7e696fe255f979db/src/main/java/org/fuin/srcgen4j/core/velocity/ParameterizedTemplateModels.java#L101-L107,test
playframework/playframework,persistence/play-java-jpa/src/main/java/play/db/jpa/JPAEntityManagerContext.java,JPAEntityManagerContext.emStack,"@SuppressWarnings(""unchecked"")
  public Deque<EntityManager> emStack(boolean threadLocalFallback) {
    return Http.Context.safeCurrent()
        .map(
            context -> {
              Object emsObject = context.args.get(CURRENT_ENTITY_MANAGER);
              if (emsObject != null) {
                return (Deque<EntityManager>) emsObject;
              } else {
                Deque<EntityManager> ems = new ArrayDeque<>();
                context.args.put(CURRENT_ENTITY_MANAGER, ems);
                return ems;
              }
            })
        .orElseGet(
            () -> {
              // Not a web request
              if (threadLocalFallback) {
                return this.get();
              } else {
                throw new RuntimeException(
                    ""No Http.Context is present. If you want to invoke this method outside of a HTTP request, you need to wrap the call with JPA.withTransaction instead."");
              }
            });
  }",java,"@SuppressWarnings(""unchecked"")
  public Deque<EntityManager> emStack(boolean threadLocalFallback) {
    return Http.Context.safeCurrent()
        .map(
            context -> {
              Object emsObject = context.args.get(CURRENT_ENTITY_MANAGER);
              if (emsObject != null) {
                return (Deque<EntityManager>) emsObject;
              } else {
                Deque<EntityManager> ems = new ArrayDeque<>();
                context.args.put(CURRENT_ENTITY_MANAGER, ems);
                return ems;
              }
            })
        .orElseGet(
            () -> {
              // Not a web request
              if (threadLocalFallback) {
                return this.get();
              } else {
                throw new RuntimeException(
                    ""No Http.Context is present. If you want to invoke this method outside of a HTTP request, you need to wrap the call with JPA.withTransaction instead."");
              }
            });
  }","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'Deque', '<', 'EntityManager', '>', 'emStack', '(', 'boolean', 'threadLocalFallback', ')', '{', 'return', 'Http', '.', 'Context', '.', 'safeCurrent', '(', ')', '.', 'map', '(', 'context', '->', '{', 'Object', 'emsObject', '=', 'context', '.', 'args', '.', 'get', '(', 'CURRENT_ENTITY_MANAGER', ')', ';', 'if', '(', 'emsObject', '!=', 'null', ')', '{', 'return', '(', 'Deque', '<', 'EntityManager', '>', ')', 'emsObject', ';', '}', 'else', '{', 'Deque', '<', 'EntityManager', '>', 'ems', '=', 'new', 'ArrayDeque', '<>', '(', ')', ';', 'context', '.', 'args', '.', 'put', '(', 'CURRENT_ENTITY_MANAGER', ',', 'ems', ')', ';', 'return', 'ems', ';', '}', '}', ')', '.', 'orElseGet', '(', '(', ')', '->', '{', '// Not a web request', 'if', '(', 'threadLocalFallback', ')', '{', 'return', 'this', '.', 'get', '(', ')', ';', '}', 'else', '{', 'throw', 'new', 'RuntimeException', '(', '""No Http.Context is present. If you want to invoke this method outside of a HTTP request, you need to wrap the call with JPA.withTransaction instead.""', ')', ';', '}', '}', ')', ';', '}']","Get the EntityManager stack.

@param threadLocalFallback if true, fall back to a ThreadLocal queue of entity managers if no
HTTP.Context object is found.
@return the queue of entity managers.","['Get', 'the', 'EntityManager', 'stack', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/persistence/play-java-jpa/src/main/java/play/db/jpa/JPAEntityManagerContext.java#L66-L90,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java,SymbolTable.addConstantMemberReference,"private Entry addConstantMemberReference(
      final int tag, final String owner, final String name, final String descriptor) {
    int hashCode = hash(tag, owner, name, descriptor);
    Entry entry = get(hashCode);
    while (entry != null) {
      if (entry.tag == tag
          && entry.hashCode == hashCode
          && entry.owner.equals(owner)
          && entry.name.equals(name)
          && entry.value.equals(descriptor)) {
        return entry;
      }
      entry = entry.next;
    }
    constantPool.put122(
        tag, addConstantClass(owner).index, addConstantNameAndType(name, descriptor));
    return put(new Entry(constantPoolCount++, tag, owner, name, descriptor, 0, hashCode));
  }",java,"private Entry addConstantMemberReference(
      final int tag, final String owner, final String name, final String descriptor) {
    int hashCode = hash(tag, owner, name, descriptor);
    Entry entry = get(hashCode);
    while (entry != null) {
      if (entry.tag == tag
          && entry.hashCode == hashCode
          && entry.owner.equals(owner)
          && entry.name.equals(name)
          && entry.value.equals(descriptor)) {
        return entry;
      }
      entry = entry.next;
    }
    constantPool.put122(
        tag, addConstantClass(owner).index, addConstantNameAndType(name, descriptor));
    return put(new Entry(constantPoolCount++, tag, owner, name, descriptor, 0, hashCode));
  }","['private', 'Entry', 'addConstantMemberReference', '(', 'final', 'int', 'tag', ',', 'final', 'String', 'owner', ',', 'final', 'String', 'name', ',', 'final', 'String', 'descriptor', ')', '{', 'int', 'hashCode', '=', 'hash', '(', 'tag', ',', 'owner', ',', 'name', ',', 'descriptor', ')', ';', 'Entry', 'entry', '=', 'get', '(', 'hashCode', ')', ';', 'while', '(', 'entry', '!=', 'null', ')', '{', 'if', '(', 'entry', '.', 'tag', '==', 'tag', '&&', 'entry', '.', 'hashCode', '==', 'hashCode', '&&', 'entry', '.', 'owner', '.', 'equals', '(', 'owner', ')', '&&', 'entry', '.', 'name', '.', 'equals', '(', 'name', ')', '&&', 'entry', '.', 'value', '.', 'equals', '(', 'descriptor', ')', ')', '{', 'return', 'entry', ';', '}', 'entry', '=', 'entry', '.', 'next', ';', '}', 'constantPool', '.', 'put122', '(', 'tag', ',', 'addConstantClass', '(', 'owner', ')', '.', 'index', ',', 'addConstantNameAndType', '(', 'name', ',', 'descriptor', ')', ')', ';', 'return', 'put', '(', 'new', 'Entry', '(', 'constantPoolCount', '++', ',', 'tag', ',', 'owner', ',', 'name', ',', 'descriptor', ',', '0', ',', 'hashCode', ')', ')', ';', '}']","Adds a CONSTANT_Fieldref_info, CONSTANT_Methodref_info or CONSTANT_InterfaceMethodref_info to
the constant pool of this symbol table. Does nothing if the constant pool already contains a
similar item.

@param tag one of {@link Symbol#CONSTANT_FIELDREF_TAG}, {@link Symbol#CONSTANT_METHODREF_TAG}
or {@link Symbol#CONSTANT_INTERFACE_METHODREF_TAG}.
@param owner the internal name of a class.
@param name a field or method name.
@param descriptor a field or method descriptor.
@return a new or already existing Symbol with the given value.","['Adds', 'a', 'CONSTANT_Fieldref_info', 'CONSTANT_Methodref_info', 'or', 'CONSTANT_InterfaceMethodref_info', 'to', 'the', 'constant', 'pool', 'of', 'this', 'symbol', 'table', '.', 'Does', 'nothing', 'if', 'the', 'constant', 'pool', 'already', 'contains', 'a', 'similar', 'item', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/SymbolTable.java#L557-L574,test
real-logic/aeron,aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java,BacklogStat.snapshot,"public Map<StreamCompositeKey, StreamBacklog> snapshot()
    {
        final Map<StreamCompositeKey, StreamBacklog> streams = new HashMap<>();

        counters.forEach(
            (counterId, typeId, keyBuffer, label) ->
            {
                if ((typeId >= PUBLISHER_LIMIT_TYPE_ID && typeId <= RECEIVER_POS_TYPE_ID) ||
                    typeId == SENDER_LIMIT_TYPE_ID || typeId == PER_IMAGE_TYPE_ID || typeId == PUBLISHER_POS_TYPE_ID)
                {
                    final StreamCompositeKey key = new StreamCompositeKey(
                        keyBuffer.getInt(SESSION_ID_OFFSET),
                        keyBuffer.getInt(STREAM_ID_OFFSET),
                        keyBuffer.getStringAscii(CHANNEL_OFFSET));

                    final StreamBacklog streamBacklog = streams.computeIfAbsent(key, (ignore) -> new StreamBacklog());
                    final long registrationId = keyBuffer.getLong(REGISTRATION_ID_OFFSET);
                    final long value = counters.getCounterValue(counterId);
                    switch (typeId)
                    {
                        case PublisherLimit.PUBLISHER_LIMIT_TYPE_ID:
                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);
                            streamBacklog.createPublisherIfAbsent().limit(value);
                            break;

                        case PublisherPos.PUBLISHER_POS_TYPE_ID:
                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);
                            streamBacklog.createPublisherIfAbsent().position(value);
                            break;

                        case SenderPos.SENDER_POSITION_TYPE_ID:
                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);
                            streamBacklog.createSenderIfAbsent().position(value);
                            break;

                        case SenderLimit.SENDER_LIMIT_TYPE_ID:
                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);
                            streamBacklog.createSenderIfAbsent().limit(value);
                            break;

                        case ReceiverHwm.RECEIVER_HWM_TYPE_ID:
                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);
                            streamBacklog.createReceiverIfAbsent().highWaterMark(value);
                            break;

                        case ReceiverPos.RECEIVER_POS_TYPE_ID:
                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);
                            streamBacklog.createReceiverIfAbsent().position(value);
                            break;

                        case SubscriberPos.SUBSCRIBER_POSITION_TYPE_ID:
                            streamBacklog.subscriberBacklogs().put(registrationId, new Subscriber(value));
                            break;
                    }
                }
            });

        return streams;
    }",java,"public Map<StreamCompositeKey, StreamBacklog> snapshot()
    {
        final Map<StreamCompositeKey, StreamBacklog> streams = new HashMap<>();

        counters.forEach(
            (counterId, typeId, keyBuffer, label) ->
            {
                if ((typeId >= PUBLISHER_LIMIT_TYPE_ID && typeId <= RECEIVER_POS_TYPE_ID) ||
                    typeId == SENDER_LIMIT_TYPE_ID || typeId == PER_IMAGE_TYPE_ID || typeId == PUBLISHER_POS_TYPE_ID)
                {
                    final StreamCompositeKey key = new StreamCompositeKey(
                        keyBuffer.getInt(SESSION_ID_OFFSET),
                        keyBuffer.getInt(STREAM_ID_OFFSET),
                        keyBuffer.getStringAscii(CHANNEL_OFFSET));

                    final StreamBacklog streamBacklog = streams.computeIfAbsent(key, (ignore) -> new StreamBacklog());
                    final long registrationId = keyBuffer.getLong(REGISTRATION_ID_OFFSET);
                    final long value = counters.getCounterValue(counterId);
                    switch (typeId)
                    {
                        case PublisherLimit.PUBLISHER_LIMIT_TYPE_ID:
                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);
                            streamBacklog.createPublisherIfAbsent().limit(value);
                            break;

                        case PublisherPos.PUBLISHER_POS_TYPE_ID:
                            streamBacklog.createPublisherIfAbsent().registrationId(registrationId);
                            streamBacklog.createPublisherIfAbsent().position(value);
                            break;

                        case SenderPos.SENDER_POSITION_TYPE_ID:
                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);
                            streamBacklog.createSenderIfAbsent().position(value);
                            break;

                        case SenderLimit.SENDER_LIMIT_TYPE_ID:
                            streamBacklog.createSenderIfAbsent().registrationId(registrationId);
                            streamBacklog.createSenderIfAbsent().limit(value);
                            break;

                        case ReceiverHwm.RECEIVER_HWM_TYPE_ID:
                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);
                            streamBacklog.createReceiverIfAbsent().highWaterMark(value);
                            break;

                        case ReceiverPos.RECEIVER_POS_TYPE_ID:
                            streamBacklog.createReceiverIfAbsent().registrationId(registrationId);
                            streamBacklog.createReceiverIfAbsent().position(value);
                            break;

                        case SubscriberPos.SUBSCRIBER_POSITION_TYPE_ID:
                            streamBacklog.subscriberBacklogs().put(registrationId, new Subscriber(value));
                            break;
                    }
                }
            });

        return streams;
    }","['public', 'Map', '<', 'StreamCompositeKey', ',', 'StreamBacklog', '>', 'snapshot', '(', ')', '{', 'final', 'Map', '<', 'StreamCompositeKey', ',', 'StreamBacklog', '>', 'streams', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'counters', '.', 'forEach', '(', '(', 'counterId', ',', 'typeId', ',', 'keyBuffer', ',', 'label', ')', '->', '{', 'if', '(', '(', 'typeId', '>=', 'PUBLISHER_LIMIT_TYPE_ID', '&&', 'typeId', '<=', 'RECEIVER_POS_TYPE_ID', ')', '||', 'typeId', '==', 'SENDER_LIMIT_TYPE_ID', '||', 'typeId', '==', 'PER_IMAGE_TYPE_ID', '||', 'typeId', '==', 'PUBLISHER_POS_TYPE_ID', ')', '{', 'final', 'StreamCompositeKey', 'key', '=', 'new', 'StreamCompositeKey', '(', 'keyBuffer', '.', 'getInt', '(', 'SESSION_ID_OFFSET', ')', ',', 'keyBuffer', '.', 'getInt', '(', 'STREAM_ID_OFFSET', ')', ',', 'keyBuffer', '.', 'getStringAscii', '(', 'CHANNEL_OFFSET', ')', ')', ';', 'final', 'StreamBacklog', 'streamBacklog', '=', 'streams', '.', 'computeIfAbsent', '(', 'key', ',', '(', 'ignore', ')', '-', '>', 'new', 'StreamBacklog', '(', ')', ')', ';', 'final', 'long', 'registrationId', '=', 'keyBuffer', '.', 'getLong', '(', 'REGISTRATION_ID_OFFSET', ')', ';', 'final', 'long', 'value', '=', 'counters', '.', 'getCounterValue', '(', 'counterId', ')', ';', 'switch', '(', 'typeId', ')', '{', 'case', 'PublisherLimit', '.', 'PUBLISHER_LIMIT_TYPE_ID', ':', 'streamBacklog', '.', 'createPublisherIfAbsent', '(', ')', '.', 'registrationId', '(', 'registrationId', ')', ';', 'streamBacklog', '.', 'createPublisherIfAbsent', '(', ')', '.', 'limit', '(', 'value', ')', ';', 'break', ';', 'case', 'PublisherPos', '.', 'PUBLISHER_POS_TYPE_ID', ':', 'streamBacklog', '.', 'createPublisherIfAbsent', '(', ')', '.', 'registrationId', '(', 'registrationId', ')', ';', 'streamBacklog', '.', 'createPublisherIfAbsent', '(', ')', '.', 'position', '(', 'value', ')', ';', 'break', ';', 'case', 'SenderPos', '.', 'SENDER_POSITION_TYPE_ID', ':', 'streamBacklog', '.', 'createSenderIfAbsent', '(', ')', '.', 'registrationId', '(', 'registrationId', ')', ';', 'streamBacklog', '.', 'createSenderIfAbsent', '(', ')', '.', 'position', '(', 'value', ')', ';', 'break', ';', 'case', 'SenderLimit', '.', 'SENDER_LIMIT_TYPE_ID', ':', 'streamBacklog', '.', 'createSenderIfAbsent', '(', ')', '.', 'registrationId', '(', 'registrationId', ')', ';', 'streamBacklog', '.', 'createSenderIfAbsent', '(', ')', '.', 'limit', '(', 'value', ')', ';', 'break', ';', 'case', 'ReceiverHwm', '.', 'RECEIVER_HWM_TYPE_ID', ':', 'streamBacklog', '.', 'createReceiverIfAbsent', '(', ')', '.', 'registrationId', '(', 'registrationId', ')', ';', 'streamBacklog', '.', 'createReceiverIfAbsent', '(', ')', '.', 'highWaterMark', '(', 'value', ')', ';', 'break', ';', 'case', 'ReceiverPos', '.', 'RECEIVER_POS_TYPE_ID', ':', 'streamBacklog', '.', 'createReceiverIfAbsent', '(', ')', '.', 'registrationId', '(', 'registrationId', ')', ';', 'streamBacklog', '.', 'createReceiverIfAbsent', '(', ')', '.', 'position', '(', 'value', ')', ';', 'break', ';', 'case', 'SubscriberPos', '.', 'SUBSCRIBER_POSITION_TYPE_ID', ':', 'streamBacklog', '.', 'subscriberBacklogs', '(', ')', '.', 'put', '(', 'registrationId', ',', 'new', 'Subscriber', '(', 'value', ')', ')', ';', 'break', ';', '}', '}', '}', ')', ';', 'return', 'streams', ';', '}']","Take a snapshot of all the backlog information and group by stream.

@return a snapshot of all the backlog information and group by stream.","['Take', 'a', 'snapshot', 'of', 'all', 'the', 'backlog', 'information', 'and', 'group', 'by', 'stream', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-samples/src/main/java/io/aeron/samples/BacklogStat.java#L74-L132,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/Activator.java,Activator.logError,"public static void logError(final String message, final Throwable thr) {
		getDefault().getLog().log(error(message, thr));
	}",java,"public static void logError(final String message, final Throwable thr) {
		getDefault().getLog().log(error(message, thr));
	}","['public', 'static', 'void', 'logError', '(', 'final', 'String', 'message', ',', 'final', 'Throwable', 'thr', ')', '{', 'getDefault', '(', ')', '.', 'getLog', '(', ')', '.', 'log', '(', 'error', '(', 'message', ',', 'thr', ')', ')', ';', '}']","Utility method to log errors in the Egit plugin.
@param message User comprehensible message
@param thr The exception through which we noticed the error","['Utility', 'method', 'to', 'log', 'errors', 'in', 'the', 'Egit', 'plugin', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.kie.eclipse/src/main/java/org/kie/eclipse/Activator.java#L104-L106,test
flow/noise,src/main/java/com/flowpowered/noise/Noise.java,Noise.gradientNoise3D,"public static double gradientNoise3D(double fx, double fy, double fz, int ix, int iy, int iz, int seed) {
        // Randomly generate a gradient vector given the integer coordinates of the
        // input value.  This implementation generates a random number and uses it
        // as an index into a normalized-vector lookup table.
        int vectorIndex = (X_NOISE_GEN * ix + Y_NOISE_GEN * iy + Z_NOISE_GEN * iz + SEED_NOISE_GEN * seed);
        vectorIndex ^= (vectorIndex >> SHIFT_NOISE_GEN);
        vectorIndex &= 0xff;

        double xvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2)];
        double yvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2) + 1];
        double zvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2) + 2];

        // Set up us another vector equal to the distance between the two vectors
        // passed to this function.
        double xvPoint = (fx - ix);
        double yvPoint = (fy - iy);
        double zvPoint = (fz - iz);

        // Now compute the dot product of the gradient vector with the distance
        // vector.  The resulting value is gradient noise.  Apply a scaling and
        // offset value so that this noise value ranges from 0 to 1.
        return ((xvGradient * xvPoint) + (yvGradient * yvPoint) + (zvGradient * zvPoint)) + 0.5;
    }",java,"public static double gradientNoise3D(double fx, double fy, double fz, int ix, int iy, int iz, int seed) {
        // Randomly generate a gradient vector given the integer coordinates of the
        // input value.  This implementation generates a random number and uses it
        // as an index into a normalized-vector lookup table.
        int vectorIndex = (X_NOISE_GEN * ix + Y_NOISE_GEN * iy + Z_NOISE_GEN * iz + SEED_NOISE_GEN * seed);
        vectorIndex ^= (vectorIndex >> SHIFT_NOISE_GEN);
        vectorIndex &= 0xff;

        double xvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2)];
        double yvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2) + 1];
        double zvGradient = Utils.RANDOM_VECTORS[(vectorIndex << 2) + 2];

        // Set up us another vector equal to the distance between the two vectors
        // passed to this function.
        double xvPoint = (fx - ix);
        double yvPoint = (fy - iy);
        double zvPoint = (fz - iz);

        // Now compute the dot product of the gradient vector with the distance
        // vector.  The resulting value is gradient noise.  Apply a scaling and
        // offset value so that this noise value ranges from 0 to 1.
        return ((xvGradient * xvPoint) + (yvGradient * yvPoint) + (zvGradient * zvPoint)) + 0.5;
    }","['public', 'static', 'double', 'gradientNoise3D', '(', 'double', 'fx', ',', 'double', 'fy', ',', 'double', 'fz', ',', 'int', 'ix', ',', 'int', 'iy', ',', 'int', 'iz', ',', 'int', 'seed', ')', '{', '// Randomly generate a gradient vector given the integer coordinates of the', '// input value.  This implementation generates a random number and uses it', '// as an index into a normalized-vector lookup table.', 'int', 'vectorIndex', '=', '(', 'X_NOISE_GEN', '*', 'ix', '+', 'Y_NOISE_GEN', '*', 'iy', '+', 'Z_NOISE_GEN', '*', 'iz', '+', 'SEED_NOISE_GEN', '*', 'seed', ')', ';', 'vectorIndex', '^=', '(', 'vectorIndex', '>>', 'SHIFT_NOISE_GEN', ')', ';', 'vectorIndex', '&=', '0xff', ';', 'double', 'xvGradient', '=', 'Utils', '.', 'RANDOM_VECTORS', '[', '(', 'vectorIndex', '<<', '2', ')', ']', ';', 'double', 'yvGradient', '=', 'Utils', '.', 'RANDOM_VECTORS', '[', '(', 'vectorIndex', '<<', '2', ')', '+', '1', ']', ';', 'double', 'zvGradient', '=', 'Utils', '.', 'RANDOM_VECTORS', '[', '(', 'vectorIndex', '<<', '2', ')', '+', '2', ']', ';', '// Set up us another vector equal to the distance between the two vectors', '// passed to this function.', 'double', 'xvPoint', '=', '(', 'fx', '-', 'ix', ')', ';', 'double', 'yvPoint', '=', '(', 'fy', '-', 'iy', ')', ';', 'double', 'zvPoint', '=', '(', 'fz', '-', 'iz', ')', ';', '// Now compute the dot product of the gradient vector with the distance', '// vector.  The resulting value is gradient noise.  Apply a scaling and', '// offset value so that this noise value ranges from 0 to 1.', 'return', '(', '(', 'xvGradient', '*', 'xvPoint', ')', '+', '(', 'yvGradient', '*', 'yvPoint', ')', '+', '(', 'zvGradient', '*', 'zvPoint', ')', ')', '+', '0.5', ';', '}']","Generates a gradient-noise value from the coordinates of a three-dimensional input value and the integer coordinates of a nearby three-dimensional value.

@param fx The floating-point @a x coordinate of the input value.
@param fy The floating-point @a y coordinate of the input value.
@param fz The floating-point @a z coordinate of the input value.
@param ix The integer @a x coordinate of a nearby value.
@param iy The integer @a y coordinate of a nearby value.
@param iz The integer @a z coordinate of a nearby value.
@param seed The random number seed.
@return The generated gradient-noise value.
<p/>
The difference between fx and ix must be less than or equal to one. The difference between @a fy and @a iy must be less than or equal to one. The difference between @a fz and @a iz must be less
than or equal to one.
<p/>
A <i>gradient</i>-noise function generates better-quality noise than a <i>value</i>-noise function. Most noise modules use gradient noise for this reason, although it takes much longer to
calculate.
<p/>
The return value ranges from 0 to 1.
<p/>
This function generates a gradient-noise value by performing the following steps: - It first calculates a random normalized vector based on the nearby integer value passed to this function. -
It then calculates a new value by adding this vector to the nearby integer value passed to this function. - It then calculates the dot product of the above-generated value and the
floating-point input value passed to this function.
<p/>
A noise function differs from a random-number generator because it always returns the same output value if the same input value is passed to it.","['Generates', 'a', 'gradient', '-', 'noise', 'value', 'from', 'the', 'coordinates', 'of', 'a', 'three', '-', 'dimensional', 'input', 'value', 'and', 'the', 'integer', 'coordinates', 'of', 'a', 'nearby', 'three', '-', 'dimensional', 'value', '.']",fe880dbbb09731ade59d9b4c0da6720b70f17509,https://github.com/flow/noise/blob/fe880dbbb09731ade59d9b4c0da6720b70f17509/src/main/java/com/flowpowered/noise/Noise.java#L134-L156,test
blazsolar/HorizontalPicker,HorizontalPicker/src/main/java/com/wefika/horizontalpicker/HorizontalPicker.java,HorizontalPicker.getInBoundsX,"private int getInBoundsX(int x) {

        if(x < 0) {
            x = 0;
        } else if(x > ((itemWidth + (int) dividerSize) * (values.length - 1))) {
            x = ((itemWidth + (int) dividerSize) * (values.length - 1));
        }
        return x;
    }",java,"private int getInBoundsX(int x) {

        if(x < 0) {
            x = 0;
        } else if(x > ((itemWidth + (int) dividerSize) * (values.length - 1))) {
            x = ((itemWidth + (int) dividerSize) * (values.length - 1));
        }
        return x;
    }","['private', 'int', 'getInBoundsX', '(', 'int', 'x', ')', '{', 'if', '(', 'x', '<', '0', ')', '{', 'x', '=', '0', ';', '}', 'else', 'if', '(', 'x', '>', '(', '(', 'itemWidth', '+', '(', 'int', ')', 'dividerSize', ')', '*', '(', 'values', '.', 'length', '-', '1', ')', ')', ')', '{', 'x', '=', '(', '(', 'itemWidth', '+', '(', 'int', ')', 'dividerSize', ')', '*', '(', 'values', '.', 'length', '-', '1', ')', ')', ';', '}', 'return', 'x', ';', '}']","Calculates x scroll position that is still in range of view scroller
@param x Scroll position to calculate.
@return {param x} if is within bounds of over scroller, otherwise it will return min/max
value of scoll position.","['Calculates', 'x', 'scroll', 'position', 'that', 'is', 'still', 'in', 'range', 'of', 'view', 'scroller']",df93a4dd2515474d86b6704cbdeb00a3f98576c2,https://github.com/blazsolar/HorizontalPicker/blob/df93a4dd2515474d86b6704cbdeb00a3f98576c2/HorizontalPicker/src/main/java/com/wefika/horizontalpicker/HorizontalPicker.java#L1010-L1018,test
oblac/jodd,jodd-db/src/main/java/jodd/db/DbQueryBase.java,DbQueryBase.saveResultSet,"protected void saveResultSet(final ResultSet rs) {
		if (resultSets == null) {
			resultSets = new HashSet<>();
		}
		resultSets.add(rs);
	}",java,"protected void saveResultSet(final ResultSet rs) {
		if (resultSets == null) {
			resultSets = new HashSet<>();
		}
		resultSets.add(rs);
	}","['protected', 'void', 'saveResultSet', '(', 'final', 'ResultSet', 'rs', ')', '{', 'if', '(', 'resultSets', '==', 'null', ')', '{', 'resultSets', '=', 'new', 'HashSet', '<>', '(', ')', ';', '}', 'resultSets', '.', 'add', '(', 'rs', ')', ';', '}']",Stores result set.,"['Stores', 'result', 'set', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/DbQueryBase.java#L173-L178,test
objectify/objectify,src/main/java/com/googlecode/objectify/impl/TypeUtils.java,TypeUtils.getAnnotation,"@SuppressWarnings(""unchecked"")
	public static <A extends Annotation> A getAnnotation(Annotation[] annotations, Class<A> annotationType) {
		for (Annotation anno: annotations)
			if (annotationType.isAssignableFrom(anno.getClass()))
				return (A)anno;

		return null;
	}",java,"@SuppressWarnings(""unchecked"")
	public static <A extends Annotation> A getAnnotation(Annotation[] annotations, Class<A> annotationType) {
		for (Annotation anno: annotations)
			if (annotationType.isAssignableFrom(anno.getClass()))
				return (A)anno;

		return null;
	}","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'A', 'extends', 'Annotation', '>', 'A', 'getAnnotation', '(', 'Annotation', '[', ']', 'annotations', ',', 'Class', '<', 'A', '>', 'annotationType', ')', '{', 'for', '(', 'Annotation', 'anno', ':', 'annotations', ')', 'if', '(', 'annotationType', '.', 'isAssignableFrom', '(', 'anno', '.', 'getClass', '(', ')', ')', ')', 'return', '(', 'A', ')', 'anno', ';', 'return', 'null', ';', '}']","Gets the annotation that has the specified type, or null if there isn't one","['Gets', 'the', 'annotation', 'that', 'has', 'the', 'specified', 'type', 'or', 'null', 'if', 'there', 'isn', 't', 'one']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/impl/TypeUtils.java#L107-L114,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ParserController.java,ParserController.parse,"public Node.Nodes parse(String inFileName)
	        throws FileNotFoundException, JasperException, IOException {
	// If we're parsing a packaged tag file or a resource included by it
	// (using an include directive), ctxt.getTagFileJar() returns the 
	// JAR file from which to read the tag file or included resource,
	// respectively.
        isTagFile = ctxt.isTagFile();
        directiveOnly = false;
        return doParse(inFileName, null, ctxt.getTagFileJarUrl());
    }",java,"public Node.Nodes parse(String inFileName)
	        throws FileNotFoundException, JasperException, IOException {
	// If we're parsing a packaged tag file or a resource included by it
	// (using an include directive), ctxt.getTagFileJar() returns the 
	// JAR file from which to read the tag file or included resource,
	// respectively.
        isTagFile = ctxt.isTagFile();
        directiveOnly = false;
        return doParse(inFileName, null, ctxt.getTagFileJarUrl());
    }","['public', 'Node', '.', 'Nodes', 'parse', '(', 'String', 'inFileName', ')', 'throws', 'FileNotFoundException', ',', 'JasperException', ',', 'IOException', '{', ""// If we're parsing a packaged tag file or a resource included by it"", '// (using an include directive), ctxt.getTagFileJar() returns the ', '// JAR file from which to read the tag file or included resource,', '// respectively.', 'isTagFile', '=', 'ctxt', '.', 'isTagFile', '(', ')', ';', 'directiveOnly', '=', 'false', ';', 'return', 'doParse', '(', 'inFileName', ',', 'null', ',', 'ctxt', '.', 'getTagFileJarUrl', '(', ')', ')', ';', '}']","Parses a JSP page or tag file. This is invoked by the compiler.

@param inFileName The path to the JSP page or tag file to be parsed.","['Parses', 'a', 'JSP', 'page', 'or', 'tag', 'file', '.', 'This', 'is', 'invoked', 'by', 'the', 'compiler', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ParserController.java#L137-L146,test
workplacesystems/utilsj,src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java,TransactionalBidiTreeMap.leastNode,"private Node<K,V> leastNode(final Node<K,V> node, final int index) {

        Node<K,V> lval = node;

        if (lval != null) {
            while (lval.getLeft(index) != null) {
                lval = lval.getLeft(index);
            }
        }

        return lval;
    }",java,"private Node<K,V> leastNode(final Node<K,V> node, final int index) {

        Node<K,V> lval = node;

        if (lval != null) {
            while (lval.getLeft(index) != null) {
                lval = lval.getLeft(index);
            }
        }

        return lval;
    }","['private', 'Node', '<', 'K', ',', 'V', '>', 'leastNode', '(', 'final', 'Node', '<', 'K', ',', 'V', '>', 'node', ',', 'final', 'int', 'index', ')', '{', 'Node', '<', 'K', ',', 'V', '>', 'lval', '=', 'node', ';', 'if', '(', 'lval', '!=', 'null', ')', '{', 'while', '(', 'lval', '.', 'getLeft', '(', 'index', ')', '!=', 'null', ')', '{', 'lval', '=', 'lval', '.', 'getLeft', '(', 'index', ')', ';', '}', '}', 'return', 'lval', ';', '}']","find the least node from a given node. very useful for starting
a sorting iterator ...

@param node the node from which we will start searching
@param index KEY or VALUE

@return the smallest node, from the specified node, in the
specified mapping","['find', 'the', 'least', 'node', 'from', 'a', 'given', 'node', '.', 'very', 'useful', 'for', 'starting', 'a', 'sorting', 'iterator', '...']",1b638be51997eafac4d368c14f62a16624a08d3e,https://github.com/workplacesystems/utilsj/blob/1b638be51997eafac4d368c14f62a16624a08d3e/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java#L1022-L1033,test
abmargb/jamppa,src/main/java/org/jivesoftware/smack/Chat.java,Chat.deliver,"void deliver(Message message) {
        // Because the collector and listeners are expecting a thread ID with
        // a specific value, set the thread ID on the message even though it
        // probably never had one.
        message.setThread(threadID);

        for (MessageListener listener : listeners) {
            listener.processMessage(this, message);
        }
    }",java,"void deliver(Message message) {
        // Because the collector and listeners are expecting a thread ID with
        // a specific value, set the thread ID on the message even though it
        // probably never had one.
        message.setThread(threadID);

        for (MessageListener listener : listeners) {
            listener.processMessage(this, message);
        }
    }","['void', 'deliver', '(', 'Message', 'message', ')', '{', '// Because the collector and listeners are expecting a thread ID with', '// a specific value, set the thread ID on the message even though it', '// probably never had one.', 'message', '.', 'setThread', '(', 'threadID', ')', ';', 'for', '(', 'MessageListener', 'listener', ':', 'listeners', ')', '{', 'listener', '.', 'processMessage', '(', 'this', ',', 'message', ')', ';', '}', '}']","Delivers a message directly to this chat, which will add the message to
the collector and deliver it to all listeners registered with the Chat.
This is used by the Connection class to deliver messages without a thread
ID.

@param message
the message.","['Delivers', 'a', 'message', 'directly', 'to', 'this', 'chat', 'which', 'will', 'add', 'the', 'message', 'to', 'the', 'collector', 'and', 'deliver', 'it', 'to', 'all', 'listeners', 'registered', 'with', 'the', 'Chat', '.', 'This', 'is', 'used', 'by', 'the', 'Connection', 'class', 'to', 'deliver', 'messages', 'without', 'a', 'thread', 'ID', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/Chat.java#L175-L184,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft/point/standard/Table.java,Table.replaceDataVars,"protected void replaceDataVars(StructureMembers sm) {
    for (StructureMembers.Member m : sm.getMembers()) {
      VariableSimpleIF org = this.cols.get(m.getName());
      int rank = org.getRank();
      List<Dimension> orgDims = org.getDimensions();
      // only keep the last n
      int n = m.getShape().length;
      List<Dimension> dims = orgDims.subList(rank-n, rank);
      VariableSimpleImpl result = new VariableSimpleImpl(org.getShortName(), org.getDescription(), org.getUnitsString(), org.getDataType(), dims);
      for (Attribute att : org.getAttributes()) result.add(att);
      this.cols.put(m.getName(), result);
    }
  }",java,"protected void replaceDataVars(StructureMembers sm) {
    for (StructureMembers.Member m : sm.getMembers()) {
      VariableSimpleIF org = this.cols.get(m.getName());
      int rank = org.getRank();
      List<Dimension> orgDims = org.getDimensions();
      // only keep the last n
      int n = m.getShape().length;
      List<Dimension> dims = orgDims.subList(rank-n, rank);
      VariableSimpleImpl result = new VariableSimpleImpl(org.getShortName(), org.getDescription(), org.getUnitsString(), org.getDataType(), dims);
      for (Attribute att : org.getAttributes()) result.add(att);
      this.cols.put(m.getName(), result);
    }
  }","['protected', 'void', 'replaceDataVars', '(', 'StructureMembers', 'sm', ')', '{', 'for', '(', 'StructureMembers', '.', 'Member', 'm', ':', 'sm', '.', 'getMembers', '(', ')', ')', '{', 'VariableSimpleIF', 'org', '=', 'this', '.', 'cols', '.', 'get', '(', 'm', '.', 'getName', '(', ')', ')', ';', 'int', 'rank', '=', 'org', '.', 'getRank', '(', ')', ';', 'List', '<', 'Dimension', '>', 'orgDims', '=', 'org', '.', 'getDimensions', '(', ')', ';', '// only keep the last n\r', 'int', 'n', '=', 'm', '.', 'getShape', '(', ')', '.', 'length', ';', 'List', '<', 'Dimension', '>', 'dims', '=', 'orgDims', '.', 'subList', '(', 'rank', '-', 'n', ',', 'rank', ')', ';', 'VariableSimpleImpl', 'result', '=', 'new', 'VariableSimpleImpl', '(', 'org', '.', 'getShortName', '(', ')', ',', 'org', '.', 'getDescription', '(', ')', ',', 'org', '.', 'getUnitsString', '(', ')', ',', 'org', '.', 'getDataType', '(', ')', ',', 'dims', ')', ';', 'for', '(', 'Attribute', 'att', ':', 'org', '.', 'getAttributes', '(', ')', ')', 'result', '.', '(', 'att', ')', ';', 'this', '.', 'cols', '.', 'put', '(', 'm', '.', 'getName', '(', ')', ',', 'result', ')', ';', '}', '}']",change shape of the data variables,"['change', 'shape', 'of', 'the', 'data', 'variables']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/Table.java#L185-L197,test
walokra/markdown-page-generator-plugin,src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java,MdPageGeneratorMojo.substituteVariables,"private String substituteVariables(String template, String patternString, Map<String, String> variables) {
        Pattern pattern = Pattern.compile(patternString);
        Matcher matcher = pattern.matcher(template);
        StringBuffer buffer = new StringBuffer();
        while (matcher.find()) {
            if (variables.containsKey(matcher.group(1))) {
                String replacement = variables.get(matcher.group(1));
                // quote to work properly with $ and {,} signs
                matcher.appendReplacement(buffer, replacement != null ? Matcher.quoteReplacement(replacement) : ""null"");
            }
        }
        matcher.appendTail(buffer);
        return buffer.toString();
    }",java,"private String substituteVariables(String template, String patternString, Map<String, String> variables) {
        Pattern pattern = Pattern.compile(patternString);
        Matcher matcher = pattern.matcher(template);
        StringBuffer buffer = new StringBuffer();
        while (matcher.find()) {
            if (variables.containsKey(matcher.group(1))) {
                String replacement = variables.get(matcher.group(1));
                // quote to work properly with $ and {,} signs
                matcher.appendReplacement(buffer, replacement != null ? Matcher.quoteReplacement(replacement) : ""null"");
            }
        }
        matcher.appendTail(buffer);
        return buffer.toString();
    }","['private', 'String', 'substituteVariables', '(', 'String', 'template', ',', 'String', 'patternString', ',', 'Map', '<', 'String', ',', 'String', '>', 'variables', ')', '{', 'Pattern', 'pattern', '=', 'Pattern', '.', 'compile', '(', 'patternString', ')', ';', 'Matcher', 'matcher', '=', 'pattern', '.', 'matcher', '(', 'template', ')', ';', 'StringBuffer', 'buffer', '=', 'new', 'StringBuffer', '(', ')', ';', 'while', '(', 'matcher', '.', 'find', '(', ')', ')', '{', 'if', '(', 'variables', '.', 'containsKey', '(', 'matcher', '.', 'group', '(', '1', ')', ')', ')', '{', 'String', 'replacement', '=', 'variables', '.', 'get', '(', 'matcher', '.', 'group', '(', '1', ')', ')', ';', '// quote to work properly with $ and {,} signs', 'matcher', '.', 'appendReplacement', '(', 'buffer', ',', 'replacement', '!=', 'null', '?', 'Matcher', '.', 'quoteReplacement', '(', 'replacement', ')', ':', '""null""', ')', ';', '}', '}', 'matcher', '.', 'appendTail', '(', 'buffer', ')', ';', 'return', 'buffer', '.', 'toString', '(', ')', ';', '}']","Replace variables with given pattern.

@param template      String to replace
@param patternString regexp pattern
@param variables     variables to find
@return result","['Replace', 'variables', 'with', 'given', 'pattern', '.']",2d5e0e6ca7a4509c9443d6d2fcf99dd9486bc5f7,https://github.com/walokra/markdown-page-generator-plugin/blob/2d5e0e6ca7a4509c9443d6d2fcf99dd9486bc5f7/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java#L414-L427,test
workplacesystems/utilsj,src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java,TransactionalBidiTreeMap.containsValue,"@Override
    public boolean containsValue(final Object value) {

        checkValue(value);

        return lookupValid(value, VALUE, getCurrentThreadId()) != null;
    }",java,"@Override
    public boolean containsValue(final Object value) {

        checkValue(value);

        return lookupValid(value, VALUE, getCurrentThreadId()) != null;
    }","['@', 'Override', 'public', 'boolean', 'containsValue', '(', 'final', 'Object', 'value', ')', '{', 'checkValue', '(', 'value', ')', ';', 'return', 'lookupValid', '(', 'value', ',', 'VALUE', ',', 'getCurrentThreadId', '(', ')', ')', '!=', 'null', ';', '}']","Returns true if this map maps one or more keys to the
specified value.

@param value value whose presence in this map is to be tested.

@return true if this map maps one or more keys to the specified
value.","['Returns', 'true', 'if', 'this', 'map', 'maps', 'one', 'or', 'more', 'keys', 'to', 'the', 'specified', 'value', '.']",1b638be51997eafac4d368c14f62a16624a08d3e,https://github.com/workplacesystems/utilsj/blob/1b638be51997eafac4d368c14f62a16624a08d3e/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java#L1995-L2001,test
fizzed/jne,src/main/java/com/fizzed/jne/JNE.java,JNE.getOrCreateTempDirectory,"static private File getOrCreateTempDirectory(boolean deleteOnExit) throws ExtractException {
        // return the single instance if already created
        if ((TEMP_DIRECTORY != null) && TEMP_DIRECTORY.exists()) {
            return TEMP_DIRECTORY;
        }

        // use jvm supplied temp directory in case multiple jvms compete
//        try {
//            Path tempDirectory = Files.createTempDirectory(""jne."");
//            File tempDirectoryAsFile = tempDirectory.toFile();
//            if (deleteOnExit) {
//                tempDirectoryAsFile.deleteOnExit();
//            }
//            return tempDirectoryAsFile;
//        } catch (IOException e) {
//            throw new ExtractException(""Unable to create temporary dir"", e);
//        }
        
        // use totally unique name to avoid race conditions
        try {
            Path baseDir = Paths.get(System.getProperty(""java.io.tmpdir""));
            Path tempDirectory = baseDir.resolve(""jne."" + UUID.randomUUID().toString());
            Files.createDirectories(tempDirectory);
            File tempDirectoryAsFile = tempDirectory.toFile();
            if (deleteOnExit) {
                tempDirectoryAsFile.deleteOnExit();
            }
            // save temp directory so its only exactracted once
            TEMP_DIRECTORY = tempDirectoryAsFile;
            return TEMP_DIRECTORY;
        } catch (IOException e) {
            throw new ExtractException(""Unable to create temporary dir"", e);
        }
        
//        File baseDir = new File(System.getProperty(""java.io.tmpdir""));
//        String baseName = System.currentTimeMillis() + ""-"";
//
//        for (int counter = 0; counter < TEMP_DIR_ATTEMPTS; counter++) {
//            File d = new File(baseDir, baseName + counter);
//            if (d.mkdirs()) {
//                // schedule this directory to be deleted on exit
//                if (deleteOnExit) {
//                    d.deleteOnExit();
//                }
//                tempDirectory = d;
//                return d;
//            }
//        }
//
//        throw new ExtractException(""Failed to create temporary directory within "" + TEMP_DIR_ATTEMPTS + "" attempts (tried "" + baseName + ""0 to "" + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
    }",java,"static private File getOrCreateTempDirectory(boolean deleteOnExit) throws ExtractException {
        // return the single instance if already created
        if ((TEMP_DIRECTORY != null) && TEMP_DIRECTORY.exists()) {
            return TEMP_DIRECTORY;
        }

        // use jvm supplied temp directory in case multiple jvms compete
//        try {
//            Path tempDirectory = Files.createTempDirectory(""jne."");
//            File tempDirectoryAsFile = tempDirectory.toFile();
//            if (deleteOnExit) {
//                tempDirectoryAsFile.deleteOnExit();
//            }
//            return tempDirectoryAsFile;
//        } catch (IOException e) {
//            throw new ExtractException(""Unable to create temporary dir"", e);
//        }
        
        // use totally unique name to avoid race conditions
        try {
            Path baseDir = Paths.get(System.getProperty(""java.io.tmpdir""));
            Path tempDirectory = baseDir.resolve(""jne."" + UUID.randomUUID().toString());
            Files.createDirectories(tempDirectory);
            File tempDirectoryAsFile = tempDirectory.toFile();
            if (deleteOnExit) {
                tempDirectoryAsFile.deleteOnExit();
            }
            // save temp directory so its only exactracted once
            TEMP_DIRECTORY = tempDirectoryAsFile;
            return TEMP_DIRECTORY;
        } catch (IOException e) {
            throw new ExtractException(""Unable to create temporary dir"", e);
        }
        
//        File baseDir = new File(System.getProperty(""java.io.tmpdir""));
//        String baseName = System.currentTimeMillis() + ""-"";
//
//        for (int counter = 0; counter < TEMP_DIR_ATTEMPTS; counter++) {
//            File d = new File(baseDir, baseName + counter);
//            if (d.mkdirs()) {
//                // schedule this directory to be deleted on exit
//                if (deleteOnExit) {
//                    d.deleteOnExit();
//                }
//                tempDirectory = d;
//                return d;
//            }
//        }
//
//        throw new ExtractException(""Failed to create temporary directory within "" + TEMP_DIR_ATTEMPTS + "" attempts (tried "" + baseName + ""0 to "" + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
    }","['static', 'private', 'File', 'getOrCreateTempDirectory', '(', 'boolean', 'deleteOnExit', ')', 'throws', 'ExtractException', '{', '// return the single instance if already created', 'if', '(', '(', 'TEMP_DIRECTORY', '!=', 'null', ')', '&&', 'TEMP_DIRECTORY', '.', 'exists', '(', ')', ')', '{', 'return', 'TEMP_DIRECTORY', ';', '}', '// use jvm supplied temp directory in case multiple jvms compete', '//        try {', '//            Path tempDirectory = Files.createTempDirectory(""jne."");', '//            File tempDirectoryAsFile = tempDirectory.toFile();', '//            if (deleteOnExit) {', '//                tempDirectoryAsFile.deleteOnExit();', '//            }', '//            return tempDirectoryAsFile;', '//        } catch (IOException e) {', '//            throw new ExtractException(""Unable to create temporary dir"", e);', '//        }', '// use totally unique name to avoid race conditions', 'try', '{', 'Path', 'baseDir', '=', 'Paths', '.', 'get', '(', 'System', '.', 'getProperty', '(', '""java.io.tmpdir""', ')', ')', ';', 'Path', 'tempDirectory', '=', 'baseDir', '.', 'resolve', '(', '""jne.""', '+', 'UUID', '.', 'randomUUID', '(', ')', '.', 'toString', '(', ')', ')', ';', 'Files', '.', 'createDirectories', '(', 'tempDirectory', ')', ';', 'File', 'tempDirectoryAsFile', '=', 'tempDirectory', '.', 'toFile', '(', ')', ';', 'if', '(', 'deleteOnExit', ')', '{', 'tempDirectoryAsFile', '.', 'deleteOnExit', '(', ')', ';', '}', '// save temp directory so its only exactracted once', 'TEMP_DIRECTORY', '=', 'tempDirectoryAsFile', ';', 'return', 'TEMP_DIRECTORY', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'ExtractException', '(', '""Unable to create temporary dir""', ',', 'e', ')', ';', '}', '//        File baseDir = new File(System.getProperty(""java.io.tmpdir""));', '//        String baseName = System.currentTimeMillis() + ""-"";', '//', '//        for (int counter = 0; counter < TEMP_DIR_ATTEMPTS; counter++) {', '//            File d = new File(baseDir, baseName + counter);', '//            if (d.mkdirs()) {', '//                // schedule this directory to be deleted on exit', '//                if (deleteOnExit) {', '//                    d.deleteOnExit();', '//                }', '//                tempDirectory = d;', '//                return d;', '//            }', '//        }', '//', '//        throw new ExtractException(""Failed to create temporary directory within "" + TEMP_DIR_ATTEMPTS + "" attempts (tried "" + baseName + ""0 to "" + baseName + (TEMP_DIR_ATTEMPTS - 1) + \')\');', '}']",Attempts to create a temporary directory that did not exist previously.,"['Attempts', 'to', 'create', 'a', 'temporary', 'directory', 'that', 'did', 'not', 'exist', 'previously', '.']",783226a1fb002d304d22f841870c5c73575fc994,https://github.com/fizzed/jne/blob/783226a1fb002d304d22f841870c5c73575fc994/src/main/java/com/fizzed/jne/JNE.java#L577-L627,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/Message.java,Message.write,"public void write(OutputStream os) throws IOException {
        Assert.isTrue(!inputRead);
        Assert.isTrue(!hasInputStream);

        int bytesRead = 0;
        int totalBytesRead = 0;
        byte[] buffer = bufferPool.getBuffer();
        long contentLength = getContentLength();

        try {
            while (bytesRead != -1 && (contentLength == -1 || contentLength > totalBytesRead)) {
                if (contentLength == -1) {
                    bytesRead = is.read(buffer);
                } else {
                    bytesRead = is.read(buffer, 0, (int) Math.min(buffer.length, contentLength - totalBytesRead));
                }
                if (bytesRead == -1) {
                    if (contentLength >= 0) {
                        throw new IOException(Policy.bind(""exception.unexpectedEndStream"")); //$NON-NLS-1$
                    }
                } else {
                    totalBytesRead += bytesRead;
                    os.write(buffer, 0, bytesRead);
                }
            }
        } finally {
            bufferPool.putBuffer(buffer);
            inputRead = true;
        }
    }",java,"public void write(OutputStream os) throws IOException {
        Assert.isTrue(!inputRead);
        Assert.isTrue(!hasInputStream);

        int bytesRead = 0;
        int totalBytesRead = 0;
        byte[] buffer = bufferPool.getBuffer();
        long contentLength = getContentLength();

        try {
            while (bytesRead != -1 && (contentLength == -1 || contentLength > totalBytesRead)) {
                if (contentLength == -1) {
                    bytesRead = is.read(buffer);
                } else {
                    bytesRead = is.read(buffer, 0, (int) Math.min(buffer.length, contentLength - totalBytesRead));
                }
                if (bytesRead == -1) {
                    if (contentLength >= 0) {
                        throw new IOException(Policy.bind(""exception.unexpectedEndStream"")); //$NON-NLS-1$
                    }
                } else {
                    totalBytesRead += bytesRead;
                    os.write(buffer, 0, bytesRead);
                }
            }
        } finally {
            bufferPool.putBuffer(buffer);
            inputRead = true;
        }
    }","['public', 'void', 'write', '(', 'OutputStream', 'os', ')', 'throws', 'IOException', '{', 'Assert', '.', 'isTrue', '(', '!', 'inputRead', ')', ';', 'Assert', '.', 'isTrue', '(', '!', 'hasInputStream', ')', ';', 'int', 'bytesRead', '=', '0', ';', 'int', 'totalBytesRead', '=', '0', ';', 'byte', '[', ']', 'buffer', '=', 'bufferPool', '.', 'getBuffer', '(', ')', ';', 'long', 'contentLength', '=', 'getContentLength', '(', ')', ';', 'try', '{', 'while', '(', 'bytesRead', '!=', '-', '1', '&&', '(', 'contentLength', '==', '-', '1', '||', 'contentLength', '>', 'totalBytesRead', ')', ')', '{', 'if', '(', 'contentLength', '==', '-', '1', ')', '{', 'bytesRead', '=', 'is', '.', 'read', '(', 'buffer', ')', ';', '}', 'else', '{', 'bytesRead', '=', 'is', '.', 'read', '(', 'buffer', ',', '0', ',', '(', 'int', ')', 'Math', '.', 'min', '(', 'buffer', '.', 'length', ',', 'contentLength', '-', 'totalBytesRead', ')', ')', ';', '}', 'if', '(', 'bytesRead', '==', '-', '1', ')', '{', 'if', '(', 'contentLength', '>=', '0', ')', '{', 'throw', 'new', 'IOException', '(', 'Policy', '.', 'bind', '(', '""exception.unexpectedEndStream""', ')', ')', ';', '//$NON-NLS-1$', '}', '}', 'else', '{', 'totalBytesRead', '+=', 'bytesRead', ';', 'os', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', '}', '}', '}', 'finally', '{', 'bufferPool', '.', 'putBuffer', '(', 'buffer', ')', ';', 'inputRead', '=', 'true', ';', '}', '}']","Writes this messages body to the given output stream. This method may
only be called once during the lifetime of this message.

@param os an output stream
@exception IOException if there is an I/O error","['Writes', 'this', 'messages', 'body', 'to', 'the', 'given', 'output', 'stream', '.', 'This', 'method', 'may', 'only', 'be', 'called', 'once', 'during', 'the', 'lifetime', 'of', 'this', 'message', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/Message.java#L115-L144,test
PistoiaHELM/HELMNotationParser,src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotationGroup.java,MonomerNotationGroup.addElement,"public void addElement(String str, String type, double one, double two, boolean interval, boolean isDefault) throws NotationException{
    this.elements.add(ValidationMethod.decideWhichMonomerNotationInGroup(str, type, one, two, interval, isDefault));

  }",java,"public void addElement(String str, String type, double one, double two, boolean interval, boolean isDefault) throws NotationException{
    this.elements.add(ValidationMethod.decideWhichMonomerNotationInGroup(str, type, one, two, interval, isDefault));

  }","['public', 'void', 'addElement', '(', 'String', 'str', ',', 'String', 'type', ',', 'double', 'one', ',', 'double', 'two', ',', 'boolean', 'interval', ',', 'boolean', 'isDefault', ')', 'throws', 'NotationException', '{', 'this', '.', 'elements', '.', 'add', '(', 'ValidationMethod', '.', 'decideWhichMonomerNotationInGroup', '(', 'str', ',', 'type', ',', 'one', ',', 'two', ',', 'interval', ',', 'isDefault', ')', ')', ';', '}']","method to add a single element to the group

@param str Monomer
@param type type of current polymer
@param one value of the monomer
@param two value of the monomer
@param interval is the value on interval
@param isDefault if the value is the default one
@throws NotationException if notation is not valid","['method', 'to', 'add', 'a', 'single', 'element', 'to', 'the', 'group']",685d7ab7886e9b5cc15fb904025fe6eee703f8f6,https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotationGroup.java#L68-L71,test
rupertlssmith/lojix,lojix/power_model/src/main/com/thesett/aima/attribute/impl/EnumeratedStringAttribute.java,EnumeratedStringAttribute.getStringValue,"public String getStringValue()
    {
        // Check if the attribute class has been finalized yet.
        if (attributeClass.finalized)
        {
            // Fetch the string value from the attribute class.
            return attributeClass.lookupValue[value].label;
        }
        else
        {
            return attributeClass.lookupValueList.get(value).label;
        }
    }",java,"public String getStringValue()
    {
        // Check if the attribute class has been finalized yet.
        if (attributeClass.finalized)
        {
            // Fetch the string value from the attribute class.
            return attributeClass.lookupValue[value].label;
        }
        else
        {
            return attributeClass.lookupValueList.get(value).label;
        }
    }","['public', 'String', 'getStringValue', '(', ')', '{', '// Check if the attribute class has been finalized yet.', 'if', '(', 'attributeClass', '.', 'finalized', ')', '{', '// Fetch the string value from the attribute class.', 'return', 'attributeClass', '.', 'lookupValue', '[', 'value', ']', '.', 'label', ';', '}', 'else', '{', 'return', 'attributeClass', '.', 'lookupValueList', '.', 'get', '(', 'value', ')', '.', 'label', ';', '}', '}']","Gets the string value of a string attribute.

@return The underlying string value of this attribute.","['Gets', 'the', 'string', 'value', 'of', 'a', 'string', 'attribute', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/power_model/src/main/com/thesett/aima/attribute/impl/EnumeratedStringAttribute.java#L228-L240,test
blademainer/common_utils,common_helper/src/main/java/com/xiongyingqi/util/MethodInvoker.java,MethodInvoker.findMatchingMethod,"protected Method findMatchingMethod() {
        String targetMethod = getTargetMethod();
        Object[] arguments = getArguments();
        int argCount = arguments.length;

        Method[] candidates = ReflectionUtils.getAllDeclaredMethods(getTargetClass());
        int minTypeDiffWeight = Integer.MAX_VALUE;
        Method matchingMethod = null;

        for (Method candidate : candidates) {
            if (candidate.getName().equals(targetMethod)) {
                Class<?>[] paramTypes = candidate.getParameterTypes();
                if (paramTypes.length == argCount) {
                    int typeDiffWeight = getTypeDifferenceWeight(paramTypes, arguments);
                    if (typeDiffWeight < minTypeDiffWeight) {
                        minTypeDiffWeight = typeDiffWeight;
                        matchingMethod = candidate;
                    }
                }
            }
        }

        return matchingMethod;
    }",java,"protected Method findMatchingMethod() {
        String targetMethod = getTargetMethod();
        Object[] arguments = getArguments();
        int argCount = arguments.length;

        Method[] candidates = ReflectionUtils.getAllDeclaredMethods(getTargetClass());
        int minTypeDiffWeight = Integer.MAX_VALUE;
        Method matchingMethod = null;

        for (Method candidate : candidates) {
            if (candidate.getName().equals(targetMethod)) {
                Class<?>[] paramTypes = candidate.getParameterTypes();
                if (paramTypes.length == argCount) {
                    int typeDiffWeight = getTypeDifferenceWeight(paramTypes, arguments);
                    if (typeDiffWeight < minTypeDiffWeight) {
                        minTypeDiffWeight = typeDiffWeight;
                        matchingMethod = candidate;
                    }
                }
            }
        }

        return matchingMethod;
    }","['protected', 'Method', 'findMatchingMethod', '(', ')', '{', 'String', 'targetMethod', '=', 'getTargetMethod', '(', ')', ';', 'Object', '[', ']', 'arguments', '=', 'getArguments', '(', ')', ';', 'int', 'argCount', '=', 'arguments', '.', 'length', ';', 'Method', '[', ']', 'candidates', '=', 'ReflectionUtils', '.', 'getAllDeclaredMethods', '(', 'getTargetClass', '(', ')', ')', ';', 'int', 'minTypeDiffWeight', '=', 'Integer', '.', 'MAX_VALUE', ';', 'Method', 'matchingMethod', '=', 'null', ';', 'for', '(', 'Method', 'candidate', ':', 'candidates', ')', '{', 'if', '(', 'candidate', '.', 'getName', '(', ')', '.', 'equals', '(', 'targetMethod', ')', ')', '{', 'Class', '<', '?', '>', '[', ']', 'paramTypes', '=', 'candidate', '.', 'getParameterTypes', '(', ')', ';', 'if', '(', 'paramTypes', '.', 'length', '==', 'argCount', ')', '{', 'int', 'typeDiffWeight', '=', 'getTypeDifferenceWeight', '(', 'paramTypes', ',', 'arguments', ')', ';', 'if', '(', 'typeDiffWeight', '<', 'minTypeDiffWeight', ')', '{', 'minTypeDiffWeight', '=', 'typeDiffWeight', ';', 'matchingMethod', '=', 'candidate', ';', '}', '}', '}', '}', 'return', 'matchingMethod', ';', '}']","Find a matching method with the specified name for the specified arguments.

@return a matching method, or {@code null} if none
@see #getTargetClass()
@see #getTargetMethod()
@see #getArguments()","['Find', 'a', 'matching', 'method', 'with', 'the', 'specified', 'name', 'for', 'the', 'specified', 'arguments', '.']",ef6baf0367c16de95a28caab67a7d5842a6d13db,https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/common_helper/src/main/java/com/xiongyingqi/util/MethodInvoker.java#L215-L238,test
RestComm/jain-slee,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java,ResourceAdaptorObjectImpl.raUnconfigure,"public void raUnconfigure() throws InvalidStateException {

		if (doTraceLogs) {
			logger.trace(""raUnconfigure()"");
		}

		if (state == ResourceAdaptorObjectState.INACTIVE) {
			state = ResourceAdaptorObjectState.UNCONFIGURED;
			object.raUnconfigure();
		} else {
			throw new InvalidStateException(""ra object is in state "" + state);
		}
	}",java,"public void raUnconfigure() throws InvalidStateException {

		if (doTraceLogs) {
			logger.trace(""raUnconfigure()"");
		}

		if (state == ResourceAdaptorObjectState.INACTIVE) {
			state = ResourceAdaptorObjectState.UNCONFIGURED;
			object.raUnconfigure();
		} else {
			throw new InvalidStateException(""ra object is in state "" + state);
		}
	}","['public', 'void', 'raUnconfigure', '(', ')', 'throws', 'InvalidStateException', '{', 'if', '(', 'doTraceLogs', ')', '{', 'logger', '.', 'trace', '(', '""raUnconfigure()""', ')', ';', '}', 'if', '(', 'state', '==', 'ResourceAdaptorObjectState', '.', 'INACTIVE', ')', '{', 'state', '=', 'ResourceAdaptorObjectState', '.', 'UNCONFIGURED', ';', 'object', '.', 'raUnconfigure', '(', ')', ';', '}', 'else', '{', 'throw', 'new', 'InvalidStateException', '(', '""ra object is in state ""', '+', 'state', ')', ';', '}', '}']","Unconfigures the ra object

@throws InvalidStateException
if the ra object is not in INACTIVE state","['Unconfigures', 'the', 'ra', 'object']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java#L309-L321,test
blademainer/common_utils,common_helper/src/main/java/com/xiongyingqi/util/SerializationUtils.java,SerializationUtils.deserialize,"public static Object deserialize(byte[] bytes) {
        if (bytes == null) {
            return null;
        }
        try {
            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));
            return ois.readObject();
        } catch (IOException ex) {
            throw new IllegalArgumentException(""Failed to deserialize object"", ex);
        } catch (ClassNotFoundException ex) {
            throw new IllegalStateException(""Failed to deserialize object type"", ex);
        }
    }",java,"public static Object deserialize(byte[] bytes) {
        if (bytes == null) {
            return null;
        }
        try {
            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));
            return ois.readObject();
        } catch (IOException ex) {
            throw new IllegalArgumentException(""Failed to deserialize object"", ex);
        } catch (ClassNotFoundException ex) {
            throw new IllegalStateException(""Failed to deserialize object type"", ex);
        }
    }","['public', 'static', 'Object', 'deserialize', '(', 'byte', '[', ']', 'bytes', ')', '{', 'if', '(', 'bytes', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'try', '{', 'ObjectInputStream', 'ois', '=', 'new', 'ObjectInputStream', '(', 'new', 'ByteArrayInputStream', '(', 'bytes', ')', ')', ';', 'return', 'ois', '.', 'readObject', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Failed to deserialize object""', ',', 'ex', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'ex', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Failed to deserialize object type""', ',', 'ex', ')', ';', '}', '}']","Deserialize the byte array into an object.

@param bytes a serialized object
@return the result of deserializing the bytes","['Deserialize', 'the', 'byte', 'array', 'into', 'an', 'object', '.']",ef6baf0367c16de95a28caab67a7d5842a6d13db,https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/common_helper/src/main/java/com/xiongyingqi/util/SerializationUtils.java#L56-L68,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/lossfunctions/impl/LossMixtureDensity.java,LossMixtureDensity.negativeLogLikelihood,"private INDArray negativeLogLikelihood(INDArray labels, INDArray alpha, INDArray mu, INDArray sigma) {
        INDArray labelsMinusMu = labelsMinusMu(labels, mu);
        INDArray diffsquared = labelsMinusMu.mul(labelsMinusMu).sum(2);
        INDArray phitimesalphasum = phi(diffsquared, sigma).muli(alpha).sum(1);

        // result = See Bishop(28,29)
        INDArray result = Transforms.log(phitimesalphasum).negi();
        return result;
    }",java,"private INDArray negativeLogLikelihood(INDArray labels, INDArray alpha, INDArray mu, INDArray sigma) {
        INDArray labelsMinusMu = labelsMinusMu(labels, mu);
        INDArray diffsquared = labelsMinusMu.mul(labelsMinusMu).sum(2);
        INDArray phitimesalphasum = phi(diffsquared, sigma).muli(alpha).sum(1);

        // result = See Bishop(28,29)
        INDArray result = Transforms.log(phitimesalphasum).negi();
        return result;
    }","['private', 'INDArray', 'negativeLogLikelihood', '(', 'INDArray', 'labels', ',', 'INDArray', 'alpha', ',', 'INDArray', 'mu', ',', 'INDArray', 'sigma', ')', '{', 'INDArray', 'labelsMinusMu', '=', 'labelsMinusMu', '(', 'labels', ',', 'mu', ')', ';', 'INDArray', 'diffsquared', '=', 'labelsMinusMu', '.', 'mul', '(', 'labelsMinusMu', ')', '.', 'sum', '(', '2', ')', ';', 'INDArray', 'phitimesalphasum', '=', 'phi', '(', 'diffsquared', ',', 'sigma', ')', '.', 'muli', '(', 'alpha', ')', '.', 'sum', '(', '1', ')', ';', '// result = See Bishop(28,29)', 'INDArray', 'result', '=', 'Transforms', '.', 'log', '(', 'phitimesalphasum', ')', '.', 'negi', '(', ')', ';', 'return', 'result', ';', '}']","This method returns an array consisting of each of the training samples,
for each label in each sample, the negative log likelihood of that
value falling within the given gaussian mixtures.
@param alpha
@param mu
@param sigma
@param labels
@return","['This', 'method', 'returns', 'an', 'array', 'consisting', 'of', 'each', 'of', 'the', 'training', 'samples', 'for', 'each', 'label', 'in', 'each', 'sample', 'the', 'negative', 'log', 'likelihood', 'of', 'that', 'value', 'falling', 'within', 'the', 'given', 'gaussian', 'mixtures', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/lossfunctions/impl/LossMixtureDensity.java#L326-L334,test
oblac/jodd,jodd-json/src/main/java/jodd/json/TypeJsonSerializerMap.java,TypeJsonSerializerMap.register,"public void register(final Class type, final TypeJsonSerializer typeJsonSerializer) {
		map.put(type, typeJsonSerializer);
		cache.clear();
	}",java,"public void register(final Class type, final TypeJsonSerializer typeJsonSerializer) {
		map.put(type, typeJsonSerializer);
		cache.clear();
	}","['public', 'void', 'register', '(', 'final', 'Class', 'type', ',', 'final', 'TypeJsonSerializer', 'typeJsonSerializer', ')', '{', 'map', '.', 'put', '(', 'type', ',', 'typeJsonSerializer', ')', ';', 'cache', '.', 'clear', '(', ')', ';', '}']",Registers new serializer.,"['Registers', 'new', 'serializer', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-json/src/main/java/jodd/json/TypeJsonSerializerMap.java#L215-L218,test
Unidata/thredds,ui/src/main/java/ucar/util/prefs/ui/ComboBox.java,ComboBox.addItem,"public void addItem( Object item) {
    if (item == null) return;
    for (int i=0; i<getItemCount(); i++) {
      if (item.equals( getItemAt(i))) {
        if (i == 0) {
          setSelectedIndex(0);
          return; // already there
        }
        removeItemAt(i);
      }
    }

    // add as first in the list
    insertItemAt( item, 0);
    setSelectedIndex(0);
  }",java,"public void addItem( Object item) {
    if (item == null) return;
    for (int i=0; i<getItemCount(); i++) {
      if (item.equals( getItemAt(i))) {
        if (i == 0) {
          setSelectedIndex(0);
          return; // already there
        }
        removeItemAt(i);
      }
    }

    // add as first in the list
    insertItemAt( item, 0);
    setSelectedIndex(0);
  }","['public', 'void', 'addItem', '(', 'Object', 'item', ')', '{', 'if', '(', 'item', '==', 'null', ')', 'return', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'getItemCount', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'item', '.', 'equals', '(', 'getItemAt', '(', 'i', ')', ')', ')', '{', 'if', '(', 'i', '==', '0', ')', '{', 'setSelectedIndex', '(', '0', ')', ';', 'return', ';', '// already there\r', '}', 'removeItemAt', '(', 'i', ')', ';', '}', '}', '// add as first in the list\r', 'insertItemAt', '(', 'item', ',', '0', ')', ';', 'setSelectedIndex', '(', '0', ')', ';', '}']","Add the item to the top of the list. If it already exists, move it to the top.
@param item to be added.","['Add', 'the', 'item', 'to', 'the', 'top', 'of', 'the', 'list', '.', 'If', 'it', 'already', 'exists', 'move', 'it', 'to', 'the', 'top', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/util/prefs/ui/ComboBox.java#L148-L163,test
oblac/jodd,jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerBundlesManager.java,HtmlStaplerBundlesManager.lookupGzipBundleFile,"public File lookupGzipBundleFile(final File file) throws IOException {
		String path = file.getPath() + ZipUtil.GZIP_EXT;
		File gzipFile = new File(path);

		if (!gzipFile.exists()) {
			if (log.isDebugEnabled()) {
				log.debug(""gzip bundle to "" + path);
			}
			ZipUtil.gzip(file);
		}

		return gzipFile;
	}",java,"public File lookupGzipBundleFile(final File file) throws IOException {
		String path = file.getPath() + ZipUtil.GZIP_EXT;
		File gzipFile = new File(path);

		if (!gzipFile.exists()) {
			if (log.isDebugEnabled()) {
				log.debug(""gzip bundle to "" + path);
			}
			ZipUtil.gzip(file);
		}

		return gzipFile;
	}","['public', 'File', 'lookupGzipBundleFile', '(', 'final', 'File', 'file', ')', 'throws', 'IOException', '{', 'String', 'path', '=', 'file', '.', 'getPath', '(', ')', '+', 'ZipUtil', '.', 'GZIP_EXT', ';', 'File', 'gzipFile', '=', 'new', 'File', '(', 'path', ')', ';', 'if', '(', '!', 'gzipFile', '.', 'exists', '(', ')', ')', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', '{', 'log', '.', 'debug', '(', '""gzip bundle to ""', '+', 'path', ')', ';', '}', 'ZipUtil', '.', 'gzip', '(', 'file', ')', ';', '}', 'return', 'gzipFile', ';', '}']","Locates gzipped version of bundle file. If gzip file
does not exist, it will be created.","['Locates', 'gzipped', 'version', 'of', 'bundle', 'file', '.', 'If', 'gzip', 'file', 'does', 'not', 'exist', 'it', 'will', 'be', 'created', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerBundlesManager.java#L315-L327,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/dsl/editor/DSLAdapter.java,DSLAdapter.loadConfig,"private void loadConfig(IFile input) {
        IResource res = findDSLResource( input, dslConfigName );
        if (res instanceof IFile) {
            IFile dslConf = (IFile) res;
            if (dslConf.exists()) {
                InputStream stream = null;
                try {
                    stream = dslConf.getContents();
                    readConfig( stream );
                    valid = true;
                } catch ( Exception e ) {
                    throw new IllegalStateException(""Unable to open DSL config file. (Exception: "" + e.getMessage() + "")"");
                } finally {
                    closeStream( stream );
                }
                
            }
        }
    }",java,"private void loadConfig(IFile input) {
        IResource res = findDSLResource( input, dslConfigName );
        if (res instanceof IFile) {
            IFile dslConf = (IFile) res;
            if (dslConf.exists()) {
                InputStream stream = null;
                try {
                    stream = dslConf.getContents();
                    readConfig( stream );
                    valid = true;
                } catch ( Exception e ) {
                    throw new IllegalStateException(""Unable to open DSL config file. (Exception: "" + e.getMessage() + "")"");
                } finally {
                    closeStream( stream );
                }
                
            }
        }
    }","['private', 'void', 'loadConfig', '(', 'IFile', 'input', ')', '{', 'IResource', 'res', '=', 'findDSLResource', '(', 'input', ',', 'dslConfigName', ')', ';', 'if', '(', 'res', 'instanceof', 'IFile', ')', '{', 'IFile', 'dslConf', '=', '(', 'IFile', ')', 'res', ';', 'if', '(', 'dslConf', '.', 'exists', '(', ')', ')', '{', 'InputStream', 'stream', '=', 'null', ';', 'try', '{', 'stream', '=', 'dslConf', '.', 'getContents', '(', ')', ';', 'readConfig', '(', 'stream', ')', ';', 'valid', '=', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Unable to open DSL config file. (Exception: ""', '+', 'e', '.', 'getMessage', '(', ')', '+', '"")""', ')', ';', '}', 'finally', '{', 'closeStream', '(', 'stream', ')', ';', '}', '}', '}', '}']",This does the hunting around the projec to find the .dsl file.,"['This', 'does', 'the', 'hunting', 'around', 'the', 'projec', 'to', 'find', 'the', '.', 'dsl', 'file', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/dsl/editor/DSLAdapter.java#L94-L112,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java,Compiler.systemJarInWebinf,"private boolean systemJarInWebinf(String path) {

        if (path.indexOf(""/WEB-INF/"") < 0) {
            return false;
        }

        Boolean useMyFaces = (Boolean) ctxt.getServletContext().
                getAttribute(""com.sun.faces.useMyFaces"");

        if (useMyFaces == null || !useMyFaces) {
            for (String jar: systemJsfJars) {
                if (path.indexOf(jar) > 0) {
                    return true;
                }
            }
        }

        for (String jar: systemJars) {
            if (path.indexOf(jar) > 0) {
                return true;
            }
        }
        return false;
    }",java,"private boolean systemJarInWebinf(String path) {

        if (path.indexOf(""/WEB-INF/"") < 0) {
            return false;
        }

        Boolean useMyFaces = (Boolean) ctxt.getServletContext().
                getAttribute(""com.sun.faces.useMyFaces"");

        if (useMyFaces == null || !useMyFaces) {
            for (String jar: systemJsfJars) {
                if (path.indexOf(jar) > 0) {
                    return true;
                }
            }
        }

        for (String jar: systemJars) {
            if (path.indexOf(jar) > 0) {
                return true;
            }
        }
        return false;
    }","['private', 'boolean', 'systemJarInWebinf', '(', 'String', 'path', ')', '{', 'if', '(', 'path', '.', 'indexOf', '(', '""/WEB-INF/""', ')', '<', '0', ')', '{', 'return', 'false', ';', '}', 'Boolean', 'useMyFaces', '=', '(', 'Boolean', ')', 'ctxt', '.', 'getServletContext', '(', ')', '.', 'getAttribute', '(', '""com.sun.faces.useMyFaces""', ')', ';', 'if', '(', 'useMyFaces', '==', 'null', '||', '!', 'useMyFaces', ')', '{', 'for', '(', 'String', 'jar', ':', 'systemJsfJars', ')', '{', 'if', '(', 'path', '.', 'indexOf', '(', 'jar', ')', '>', '0', ')', '{', 'return', 'true', ';', '}', '}', '}', 'for', '(', 'String', 'jar', ':', 'systemJars', ')', '{', 'if', '(', 'path', '.', 'indexOf', '(', 'jar', ')', '>', '0', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","Return true if the path refers to a jar file in WEB-INF and is a
system jar.","['Return', 'true', 'if', 'the', 'path', 'refers', 'to', 'a', 'jar', 'file', 'in', 'WEB', '-', 'INF', 'and', 'is', 'a', 'system', 'jar', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java#L801-L824,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dataset/transform/AbstractTransformBuilder.java,AbstractTransformBuilder.readAttributeDouble,"protected double readAttributeDouble(AttributeContainer v, String attname, double defValue) {
    Attribute att = v.findAttributeIgnoreCase(attname);
    if (att == null) return defValue;
    if (att.isString())
      return Double.parseDouble(att.getStringValue());
    else
      return att.getNumericValue().doubleValue();
  }",java,"protected double readAttributeDouble(AttributeContainer v, String attname, double defValue) {
    Attribute att = v.findAttributeIgnoreCase(attname);
    if (att == null) return defValue;
    if (att.isString())
      return Double.parseDouble(att.getStringValue());
    else
      return att.getNumericValue().doubleValue();
  }","['protected', 'double', 'readAttributeDouble', '(', 'AttributeContainer', 'v', ',', 'String', 'attname', ',', 'double', 'defValue', ')', '{', 'Attribute', 'att', '=', 'v', '.', 'findAttributeIgnoreCase', '(', 'attname', ')', ';', 'if', '(', 'att', '==', 'null', ')', 'return', 'defValue', ';', 'if', '(', 'att', '.', 'isString', '(', ')', ')', 'return', 'Double', '.', 'parseDouble', '(', 'att', '.', 'getStringValue', '(', ')', ')', ';', 'else', 'return', 'att', '.', 'getNumericValue', '(', ')', '.', 'doubleValue', '(', ')', ';', '}']","Read a variable attribute as a double.

@param v        the variable
@param attname  name of variable
@param defValue default value if attribute is not found
@return attribute value as a double, else NaN if not found","['Read', 'a', 'variable', 'attribute', 'as', 'a', 'double', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/transform/AbstractTransformBuilder.java#L111-L118,test
grzesiek-galezowski/AutoFixtureGenerator,src/main/java/autofixture/publicinterface/Any.java,Any.collectionOf,"@NonNull
  public static <T> Collection<T> collectionOf(final InstanceOf<T> typeToken, final InlineConstrainedGenerator<T> omittedValues) {
    return PrivateGenerate.manyAsListOf(typeToken, omittedValues);
  }",java,"@NonNull
  public static <T> Collection<T> collectionOf(final InstanceOf<T> typeToken, final InlineConstrainedGenerator<T> omittedValues) {
    return PrivateGenerate.manyAsListOf(typeToken, omittedValues);
  }","['@', 'NonNull', 'public', 'static', '<', 'T', '>', 'Collection', '<', 'T', '>', 'collectionOf', '(', 'final', 'InstanceOf', '<', 'T', '>', 'typeToken', ',', 'final', 'InlineConstrainedGenerator', '<', 'T', '>', 'omittedValues', ')', '{', 'return', 'PrivateGenerate', '.', 'manyAsListOf', '(', 'typeToken', ',', 'omittedValues', ')', ';', '}']",COLLECTIONS - complete,"['COLLECTIONS', '-', 'complete']",a5e1146ec5109e6505f8aff604a20461ec86a57d,https://github.com/grzesiek-galezowski/AutoFixtureGenerator/blob/a5e1146ec5109e6505f8aff604a20461ec86a57d/src/main/java/autofixture/publicinterface/Any.java#L472-L475,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/ThreddsMetadata.java,ThreddsMetadata.removeDocumentation,"public void removeDocumentation(String type) {
    Iterator iter = docs.iterator();
    while (iter.hasNext()) {
      InvDocumentation doc = (InvDocumentation) iter.next();
      String dtype = doc.getType();
      if ((dtype != null) && dtype.equalsIgnoreCase(type))
        iter.remove();
    }
  }",java,"public void removeDocumentation(String type) {
    Iterator iter = docs.iterator();
    while (iter.hasNext()) {
      InvDocumentation doc = (InvDocumentation) iter.next();
      String dtype = doc.getType();
      if ((dtype != null) && dtype.equalsIgnoreCase(type))
        iter.remove();
    }
  }","['public', 'void', 'removeDocumentation', '(', 'String', 'type', ')', '{', 'Iterator', 'iter', '=', 'docs', '.', 'iterator', '(', ')', ';', 'while', '(', 'iter', '.', 'hasNext', '(', ')', ')', '{', 'InvDocumentation', 'doc', '=', '(', 'InvDocumentation', ')', 'iter', '.', 'next', '(', ')', ';', 'String', 'dtype', '=', 'doc', '.', 'getType', '(', ')', ';', 'if', '(', '(', 'dtype', '!=', 'null', ')', '&&', 'dtype', '.', 'equalsIgnoreCase', '(', 'type', ')', ')', 'iter', '.', 'remove', '(', ')', ';', '}', '}']","remove all instances of specified type of documentation
@param type type of documentation","['remove', 'all', 'instances', 'of', 'specified', 'type', 'of', 'documentation']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/ThreddsMetadata.java#L586-L594,test
PistoiaHELM/HELMNotationParser,src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotation.java,MonomerNotation.setAnnotation,"public void setAnnotation(String str) {
    if (str != null) {
      annotation = str;
      isAnnotationHere = true;
    } else {
      annotation = null;
      isAnnotationHere = false;
    }
  }",java,"public void setAnnotation(String str) {
    if (str != null) {
      annotation = str;
      isAnnotationHere = true;
    } else {
      annotation = null;
      isAnnotationHere = false;
    }
  }","['public', 'void', 'setAnnotation', '(', 'String', 'str', ')', '{', 'if', '(', 'str', '!=', 'null', ')', '{', 'annotation', '=', 'str', ';', 'isAnnotationHere', '=', 'true', ';', '}', 'else', '{', 'annotation', '=', 'null', ';', 'isAnnotationHere', '=', 'false', ';', '}', '}']","method to add annotation to this monomer

@param str annotation","['method', 'to', 'add', 'annotation', 'to', 'this', 'monomer']",685d7ab7886e9b5cc15fb904025fe6eee703f8f6,https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/notation/polymer/MonomerNotation.java#L94-L102,test
CloudI/cloudi_api_java,src/main/java/org/cloudi/API.java,API.shutdown,"public void shutdown(final String reason)
    {
        OtpOutputStream shutdown = new OtpOutputStream();
        shutdown.write(OtpExternal.versionTag);
        final OtpErlangObject[] tuple = {new OtpErlangAtom(""shutdown""),
                                         new OtpErlangString(reason)};
        shutdown.write_any(new OtpErlangTuple(tuple));
        send(shutdown);
    }",java,"public void shutdown(final String reason)
    {
        OtpOutputStream shutdown = new OtpOutputStream();
        shutdown.write(OtpExternal.versionTag);
        final OtpErlangObject[] tuple = {new OtpErlangAtom(""shutdown""),
                                         new OtpErlangString(reason)};
        shutdown.write_any(new OtpErlangTuple(tuple));
        send(shutdown);
    }","['public', 'void', 'shutdown', '(', 'final', 'String', 'reason', ')', '{', 'OtpOutputStream', 'shutdown', '=', 'new', 'OtpOutputStream', '(', ')', ';', 'shutdown', '.', 'write', '(', 'OtpExternal', '.', 'versionTag', ')', ';', 'final', 'OtpErlangObject', '[', ']', 'tuple', '=', '{', 'new', 'OtpErlangAtom', '(', '""shutdown""', ')', ',', 'new', 'OtpErlangString', '(', 'reason', ')', '}', ';', 'shutdown', '.', 'write_any', '(', 'new', 'OtpErlangTuple', '(', 'tuple', ')', ')', ';', 'send', '(', 'shutdown', ')', ';', '}']","Shutdown the service successfully

@param  reason      the shutdown reason","['Shutdown', 'the', 'service', 'successfully']",e8ccaeb9ad562c82d742dc31a5f06bcb1b637446,https://github.com/CloudI/cloudi_api_java/blob/e8ccaeb9ad562c82d742dc31a5f06bcb1b637446/src/main/java/org/cloudi/API.java#L1526-L1534,test
retog/wymiwyg-commons-core,src/main/java/org/wymiwyg/commons/util/URI.java,URI.setPort,"private void setPort(int p_port) throws MalformedURIException {
		if (p_port >= 0 && p_port <= 65535) {
			if (m_host == null) {
				throw new MalformedURIException(""Port cannot be set when host is null!"");
			}
		} else if (p_port != -1) {
			throw new MalformedURIException(""Invalid port number!"");
		}
		n_port = p_port;

	}",java,"private void setPort(int p_port) throws MalformedURIException {
		if (p_port >= 0 && p_port <= 65535) {
			if (m_host == null) {
				throw new MalformedURIException(""Port cannot be set when host is null!"");
			}
		} else if (p_port != -1) {
			throw new MalformedURIException(""Invalid port number!"");
		}
		n_port = p_port;

	}","['private', 'void', 'setPort', '(', 'int', 'p_port', ')', 'throws', 'MalformedURIException', '{', 'if', '(', 'p_port', '>=', '0', '&&', 'p_port', '<=', '65535', ')', '{', 'if', '(', 'm_host', '==', 'null', ')', '{', 'throw', 'new', 'MalformedURIException', '(', '""Port cannot be set when host is null!""', ')', ';', '}', '}', 'else', 'if', '(', 'p_port', '!=', '-', '1', ')', '{', 'throw', 'new', 'MalformedURIException', '(', '""Invalid port number!""', ')', ';', '}', 'n_port', '=', 'p_port', ';', '}']","Set the port for this URI. -1 is used to indicate that the port is
not specified, otherwise valid port numbers are  between 0 and 65535.
If a valid port number is passed in and the host field is null,
an exception is thrown.

@param p_port the port number for this URI

@exception MalformedURIException if p_port is not -1 and not a
valid port number","['Set', 'the', 'port', 'for', 'this', 'URI', '.', '-', '1', 'is', 'used', 'to', 'indicate', 'that', 'the', 'port', 'is', 'not', 'specified', 'otherwise', 'valid', 'port', 'numbers', 'are', 'between', '0', 'and', '65535', '.', 'If', 'a', 'valid', 'port', 'number', 'is', 'passed', 'in', 'and', 'the', 'host', 'field', 'is', 'null', 'an', 'exception', 'is', 'thrown', '.']",f64530a2690e2d9ee0184c5671214ee32572482d,https://github.com/retog/wymiwyg-commons-core/blob/f64530a2690e2d9ee0184c5671214ee32572482d/src/main/java/org/wymiwyg/commons/util/URI.java#L970-L980,test
apache/parquet-mr,parquet-column/src/main/java/org/apache/parquet/filter/PagedRecordFilter.java,PagedRecordFilter.page,"public static final UnboundRecordFilter page( final long startPos, final long pageSize ) {
    return new UnboundRecordFilter() {
      @Override
      public RecordFilter bind(Iterable<ColumnReader> readers) {
        return new PagedRecordFilter( startPos, pageSize );
      }
    };
  }",java,"public static final UnboundRecordFilter page( final long startPos, final long pageSize ) {
    return new UnboundRecordFilter() {
      @Override
      public RecordFilter bind(Iterable<ColumnReader> readers) {
        return new PagedRecordFilter( startPos, pageSize );
      }
    };
  }","['public', 'static', 'final', 'UnboundRecordFilter', 'page', '(', 'final', 'long', 'startPos', ',', 'final', 'long', 'pageSize', ')', '{', 'return', 'new', 'UnboundRecordFilter', '(', ')', '{', '@', 'Override', 'public', 'RecordFilter', 'bind', '(', 'Iterable', '<', 'ColumnReader', '>', 'readers', ')', '{', 'return', 'new', 'PagedRecordFilter', '(', 'startPos', ',', 'pageSize', ')', ';', '}', '}', ';', '}']","Returns builder for creating a paged query.
@param startPos The record to start from, numbering starts at 1.
@param pageSize The size of the page.
@return a paged record filter","['Returns', 'builder', 'for', 'creating', 'a', 'paged', 'query', '.']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-column/src/main/java/org/apache/parquet/filter/PagedRecordFilter.java#L38-L45,test
OpenEstate/OpenEstate-IO,Core/src/main/java/org/openestate/io/core/CsvRecord.java,CsvRecord.set,"protected final void set(int pos, String value) {
        value = StringUtils.trimToNull(value);
        if (value != null)
            this.values.put(pos, value);
        else if (this.values.containsKey(pos))
            this.values.remove(pos);
    }",java,"protected final void set(int pos, String value) {
        value = StringUtils.trimToNull(value);
        if (value != null)
            this.values.put(pos, value);
        else if (this.values.containsKey(pos))
            this.values.remove(pos);
    }","['protected', 'final', 'void', 'set', '(', 'int', 'pos', ',', 'String', 'value', ')', '{', 'value', '=', 'StringUtils', '.', 'trimToNull', '(', 'value', ')', ';', 'if', '(', 'value', '!=', 'null', ')', 'this', '.', 'values', '.', 'put', '(', 'pos', ',', 'value', ')', ';', 'else', 'if', '(', 'this', '.', 'values', '.', 'containsKey', '(', 'pos', ')', ')', 'this', '.', 'values', '.', 'remove', '(', 'pos', ')', ';', '}']","Sets the value of this record at a certain index position.

@param pos   index position
@param value the value to set","['Sets', 'the', 'value', 'of', 'this', 'record', 'at', 'a', 'certain', 'index', 'position', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Core/src/main/java/org/openestate/io/core/CsvRecord.java#L157-L163,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/gempak/GempakParameterTable.java,GempakParameterTable.addParameters,"public void addParameters(String tbl) throws IOException {
    try (InputStream is = getInputStream(tbl)) {
      if (is == null) {
        throw new IOException(""Unable to open "" + tbl);
      }
      String content = readContents(is);   // LOOK this is silly - should just read one line at a time
      // List           lines   = StringUtil.split(content, ""\n"", false);
      String[] lines = content.split(""\n"");
      List<String[]> result = new ArrayList<>();
      for (String line : lines) {
        //String line  = (String) lines.get(i);
        String tline = line.trim();
        if (tline.length() == 0) {
          continue;
        }
        if (tline.startsWith(""!"")) {
          continue;
        }
        String[] words = new String[indices.length];
        for (int idx = 0; idx < indices.length; idx++) {
          if (indices[idx] >= tline.length()) {
            continue;
          }
          if (indices[idx] + lengths[idx] > tline.length()) {
            words[idx] = line.substring(indices[idx]);
          } else {
            words[idx] = line.substring(indices[idx],
                    indices[idx] + lengths[idx]);
          }
          //if (trimWords) {
          words[idx] = words[idx].trim();
          //}
        }
        result.add(words);
      }
      for (String[] aResult : result) {
        GempakParameter p = makeParameter(aResult);
        if (p != null) {
          if (p.getName().contains(""("")) {
            templateParamMap.put(p.getName(), p);
          } else {
            paramMap.put(p.getName(), p);
          }
        }
      }
    }

  }",java,"public void addParameters(String tbl) throws IOException {
    try (InputStream is = getInputStream(tbl)) {
      if (is == null) {
        throw new IOException(""Unable to open "" + tbl);
      }
      String content = readContents(is);   // LOOK this is silly - should just read one line at a time
      // List           lines   = StringUtil.split(content, ""\n"", false);
      String[] lines = content.split(""\n"");
      List<String[]> result = new ArrayList<>();
      for (String line : lines) {
        //String line  = (String) lines.get(i);
        String tline = line.trim();
        if (tline.length() == 0) {
          continue;
        }
        if (tline.startsWith(""!"")) {
          continue;
        }
        String[] words = new String[indices.length];
        for (int idx = 0; idx < indices.length; idx++) {
          if (indices[idx] >= tline.length()) {
            continue;
          }
          if (indices[idx] + lengths[idx] > tline.length()) {
            words[idx] = line.substring(indices[idx]);
          } else {
            words[idx] = line.substring(indices[idx],
                    indices[idx] + lengths[idx]);
          }
          //if (trimWords) {
          words[idx] = words[idx].trim();
          //}
        }
        result.add(words);
      }
      for (String[] aResult : result) {
        GempakParameter p = makeParameter(aResult);
        if (p != null) {
          if (p.getName().contains(""("")) {
            templateParamMap.put(p.getName(), p);
          } else {
            paramMap.put(p.getName(), p);
          }
        }
      }
    }

  }","['public', 'void', 'addParameters', '(', 'String', 'tbl', ')', 'throws', 'IOException', '{', 'try', '(', 'InputStream', 'is', '=', 'getInputStream', '(', 'tbl', ')', ')', '{', 'if', '(', 'is', '==', 'null', ')', '{', 'throw', 'new', 'IOException', '(', '""Unable to open ""', '+', 'tbl', ')', ';', '}', 'String', 'content', '=', 'readContents', '(', 'is', ')', ';', '// LOOK this is silly - should just read one line at a time\r', '// List           lines   = StringUtil.split(content, ""\\n"", false);\r', 'String', '[', ']', 'lines', '=', 'content', '.', 'split', '(', '""\\n""', ')', ';', 'List', '<', 'String', '[', ']', '>', 'result', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'for', '(', 'String', 'line', ':', 'lines', ')', '{', '//String line  = (String) lines.get(i);\r', 'String', 'tline', '=', 'line', '.', 'trim', '(', ')', ';', 'if', '(', 'tline', '.', 'length', '(', ')', '==', '0', ')', '{', 'continue', ';', '}', 'if', '(', 'tline', '.', 'startsWith', '(', '""!""', ')', ')', '{', 'continue', ';', '}', 'String', '[', ']', 'words', '=', 'new', 'String', '[', 'indices', '.', 'length', ']', ';', 'for', '(', 'int', 'idx', '=', '0', ';', 'idx', '<', 'indices', '.', 'length', ';', 'idx', '++', ')', '{', 'if', '(', 'indices', '[', 'idx', ']', '>=', 'tline', '.', 'length', '(', ')', ')', '{', 'continue', ';', '}', 'if', '(', 'indices', '[', 'idx', ']', '+', 'lengths', '[', 'idx', ']', '>', 'tline', '.', 'length', '(', ')', ')', '{', 'words', '[', 'idx', ']', '=', 'line', '.', 'substring', '(', 'indices', '[', 'idx', ']', ')', ';', '}', 'else', '{', 'words', '[', 'idx', ']', '=', 'line', '.', 'substring', '(', 'indices', '[', 'idx', ']', ',', 'indices', '[', 'idx', ']', '+', 'lengths', '[', 'idx', ']', ')', ';', '}', '//if (trimWords) {\r', 'words', '[', 'idx', ']', '=', 'words', '[', 'idx', ']', '.', 'trim', '(', ')', ';', '//}\r', '}', 'result', '.', 'add', '(', 'words', ')', ';', '}', 'for', '(', 'String', '[', ']', 'aResult', ':', 'result', ')', '{', 'GempakParameter', 'p', '=', 'makeParameter', '(', 'aResult', ')', ';', 'if', '(', 'p', '!=', 'null', ')', '{', 'if', '(', 'p', '.', 'getName', '(', ')', '.', 'contains', '(', '""(""', ')', ')', '{', 'templateParamMap', '.', 'put', '(', 'p', '.', 'getName', '(', ')', ',', 'p', ')', ';', '}', 'else', '{', 'paramMap', '.', 'put', '(', 'p', '.', 'getName', '(', ')', ',', 'p', ')', ';', '}', '}', '}', '}', '}']","Add parameters from the table

@param tbl table location
@throws IOException problem reading table.","['Add', 'parameters', 'from', 'the', 'table']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/GempakParameterTable.java#L72-L119,test
DigitalPebble/storm-crawler,external/tika/src/main/java/com/digitalpebble/stormcrawler/tika/DOMBuilder.java,DOMBuilder.ignorableWhitespace,"@Override
    public void ignorableWhitespace(char ch[], int start, int length)
            throws org.xml.sax.SAXException {
        if (isOutsideDocElem()) {
            return; // avoid DOM006 Hierarchy request error
        }

        String s = new String(ch, start, length);

        append(m_doc.createTextNode(s));
    }",java,"@Override
    public void ignorableWhitespace(char ch[], int start, int length)
            throws org.xml.sax.SAXException {
        if (isOutsideDocElem()) {
            return; // avoid DOM006 Hierarchy request error
        }

        String s = new String(ch, start, length);

        append(m_doc.createTextNode(s));
    }","['@', 'Override', 'public', 'void', 'ignorableWhitespace', '(', 'char', 'ch', '[', ']', ',', 'int', 'start', ',', 'int', 'length', ')', 'throws', 'org', '.', 'xml', '.', 'sax', '.', 'SAXException', '{', 'if', '(', 'isOutsideDocElem', '(', ')', ')', '{', 'return', ';', '// avoid DOM006 Hierarchy request error', '}', 'String', 's', '=', 'new', 'String', '(', 'ch', ',', 'start', ',', 'length', ')', ';', 'append', '(', 'm_doc', '.', 'createTextNode', '(', 's', ')', ')', ';', '}']","Receive notification of ignorable whitespace in element content.

<p>
Validating Parsers must use this method to report each chunk of ignorable
whitespace (see the W3C XML 1.0 recommendation, section 2.10):
non-validating parsers may also use this method if they are capable of
parsing and using content models.
</p>

<p>
SAX parsers may return all contiguous whitespace in a single chunk, or
they may split it into several chunks; however, all of the characters in
any single event must come from the same external entity, so that the
Locator provides useful information.
</p>

<p>
The application must not attempt to read from the array outside of the
specified range.
</p>

@param ch
The characters from the XML document.
@param start
The start position in the array.
@param length
The number of characters to read from the array.
@see #characters","['Receive', 'notification', 'of', 'ignorable', 'whitespace', 'in', 'element', 'content', '.']",5d0465192ab8fbd89a90db32cb20960a282411ea,https://github.com/DigitalPebble/storm-crawler/blob/5d0465192ab8fbd89a90db32cb20960a282411ea/external/tika/src/main/java/com/digitalpebble/stormcrawler/tika/DOMBuilder.java#L542-L552,test
ReactiveX/RxJava,src/main/java/io/reactivex/internal/operators/observable/ObservableScalarXMap.java,ObservableScalarXMap.scalarXMap,"public static <T, U> Observable<U> scalarXMap(T value,
            Function<? super T, ? extends ObservableSource<? extends U>> mapper) {
        return RxJavaPlugins.onAssembly(new ScalarXMapObservable<T, U>(value, mapper));
    }",java,"public static <T, U> Observable<U> scalarXMap(T value,
            Function<? super T, ? extends ObservableSource<? extends U>> mapper) {
        return RxJavaPlugins.onAssembly(new ScalarXMapObservable<T, U>(value, mapper));
    }","['public', 'static', '<', 'T', ',', 'U', '>', 'Observable', '<', 'U', '>', 'scalarXMap', '(', 'T', 'value', ',', 'Function', '<', '?', 'super', 'T', ',', '?', 'extends', 'ObservableSource', '<', '?', 'extends', 'U', '>', '>', 'mapper', ')', '{', 'return', 'RxJavaPlugins', '.', 'onAssembly', '(', 'new', 'ScalarXMapObservable', '<', 'T', ',', 'U', '>', '(', 'value', ',', 'mapper', ')', ')', ';', '}']","Maps a scalar value into an Observable and emits its values.

@param <T> the scalar value type
@param <U> the output value type
@param value the scalar value to map
@param mapper the function that gets the scalar value and should return
an ObservableSource that gets streamed
@return the new Observable instance","['Maps', 'a', 'scalar', 'value', 'into', 'an', 'Observable', 'and', 'emits', 'its', 'values', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/operators/observable/ObservableScalarXMap.java#L114-L117,test
lightcouch/LightCouch,src/main/java/org/lightcouch/View.java,View.queryValue,"private <V> V queryValue(Class<V> classOfV) {
		InputStream instream = null;
		try {  
			Reader reader = new InputStreamReader(instream = queryForStream(), Charsets.UTF_8);
			JsonArray array = new JsonParser().parse(reader).
							getAsJsonObject().get(""rows"").getAsJsonArray();
			if(array.size() != 1) { 
				throw new NoDocumentException(""Expecting a single result but was: "" + array.size());
			}
			return JsonToObject(gson, array.get(0), ""value"", classOfV);
		} finally {
			close(instream);
		}
	}",java,"private <V> V queryValue(Class<V> classOfV) {
		InputStream instream = null;
		try {  
			Reader reader = new InputStreamReader(instream = queryForStream(), Charsets.UTF_8);
			JsonArray array = new JsonParser().parse(reader).
							getAsJsonObject().get(""rows"").getAsJsonArray();
			if(array.size() != 1) { 
				throw new NoDocumentException(""Expecting a single result but was: "" + array.size());
			}
			return JsonToObject(gson, array.get(0), ""value"", classOfV);
		} finally {
			close(instream);
		}
	}","['private', '<', 'V', '>', 'V', 'queryValue', '(', 'Class', '<', 'V', '>', 'classOfV', ')', '{', 'InputStream', 'instream', '=', 'null', ';', 'try', '{', 'Reader', 'reader', '=', 'new', 'InputStreamReader', '(', 'instream', '=', 'queryForStream', '(', ')', ',', 'Charsets', '.', 'UTF_8', ')', ';', 'JsonArray', 'array', '=', 'new', 'JsonParser', '(', ')', '.', 'parse', '(', 'reader', ')', '.', 'getAsJsonObject', '(', ')', '.', 'get', '(', '""rows""', ')', '.', 'getAsJsonArray', '(', ')', ';', 'if', '(', 'array', '.', 'size', '(', ')', '!=', '1', ')', '{', 'throw', 'new', 'NoDocumentException', '(', '""Expecting a single result but was: ""', '+', 'array', '.', 'size', '(', ')', ')', ';', '}', 'return', 'JsonToObject', '(', 'gson', ',', 'array', '.', 'get', '(', '0', ')', ',', '""value""', ',', 'classOfV', ')', ';', '}', 'finally', '{', 'close', '(', 'instream', ')', ';', '}', '}']",Queries for scalar values. Internal use.,"['Queries', 'for', 'scalar', 'values', '.', 'Internal', 'use', '.']",9646889503475e862fd2158487e1cdd805447f4a,https://github.com/lightcouch/LightCouch/blob/9646889503475e862fd2158487e1cdd805447f4a/src/main/java/org/lightcouch/View.java#L231-L244,test
oblac/jodd,jodd-joy/src/main/java/jodd/joy/JoyDb.java,JoyDb.checkConnectionProvider,"protected void checkConnectionProvider() {
		final Connection connection = connectionProvider.getConnection();
		try {
			final DatabaseMetaData databaseMetaData = connection.getMetaData();
			String name = databaseMetaData.getDatabaseProductName();
			String version = databaseMetaData.getDatabaseProductVersion();

			if (log.isInfoEnabled()) {
				log.info(""Connected to database: "" + name + "" v"" + version);
			}
		} catch (SQLException sex) {
			log.error(""DB connection failed: "", sex);
		} finally {
			connectionProvider.closeConnection(connection);
		}
	}",java,"protected void checkConnectionProvider() {
		final Connection connection = connectionProvider.getConnection();
		try {
			final DatabaseMetaData databaseMetaData = connection.getMetaData();
			String name = databaseMetaData.getDatabaseProductName();
			String version = databaseMetaData.getDatabaseProductVersion();

			if (log.isInfoEnabled()) {
				log.info(""Connected to database: "" + name + "" v"" + version);
			}
		} catch (SQLException sex) {
			log.error(""DB connection failed: "", sex);
		} finally {
			connectionProvider.closeConnection(connection);
		}
	}","['protected', 'void', 'checkConnectionProvider', '(', ')', '{', 'final', 'Connection', 'connection', '=', 'connectionProvider', '.', 'getConnection', '(', ')', ';', 'try', '{', 'final', 'DatabaseMetaData', 'databaseMetaData', '=', 'connection', '.', 'getMetaData', '(', ')', ';', 'String', 'name', '=', 'databaseMetaData', '.', 'getDatabaseProductName', '(', ')', ';', 'String', 'version', '=', 'databaseMetaData', '.', 'getDatabaseProductVersion', '(', ')', ';', 'if', '(', 'log', '.', 'isInfoEnabled', '(', ')', ')', '{', 'log', '.', 'info', '(', '""Connected to database: ""', '+', 'name', '+', '"" v""', '+', 'version', ')', ';', '}', '}', 'catch', '(', 'SQLException', 'sex', ')', '{', 'log', '.', 'error', '(', '""DB connection failed: ""', ',', 'sex', ')', ';', '}', 'finally', '{', 'connectionProvider', '.', 'closeConnection', '(', 'connection', ')', ';', '}', '}']",Checks if connection provider can return a connection.,"['Checks', 'if', 'connection', 'provider', 'can', 'return', 'a', 'connection', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-joy/src/main/java/jodd/joy/JoyDb.java#L256-L271,test
jboss/jboss-common-core,src/main/java/org/jboss/util/TimedCachePolicy.java,TimedCachePolicy.get,"public Object get(Object key) 
   {
      TimedEntry entry = (TimedEntry) entryMap.get(key);
      if( entry == null )
         return null;

      if( entry.isCurrent(now) == false )
      {   // Try to refresh the entry
         if( entry.refresh() == false )
         {   // Failed, remove the entry and return null
            entry.destroy();
            entryMap.remove(key);
            return null;
         }
      }
      Object value = entry.getValue();
      return value;
   }",java,"public Object get(Object key) 
   {
      TimedEntry entry = (TimedEntry) entryMap.get(key);
      if( entry == null )
         return null;

      if( entry.isCurrent(now) == false )
      {   // Try to refresh the entry
         if( entry.refresh() == false )
         {   // Failed, remove the entry and return null
            entry.destroy();
            entryMap.remove(key);
            return null;
         }
      }
      Object value = entry.getValue();
      return value;
   }","['public', 'Object', 'get', '(', 'Object', 'key', ')', '{', 'TimedEntry', 'entry', '=', '(', 'TimedEntry', ')', 'entryMap', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'entry', '==', 'null', ')', 'return', 'null', ';', 'if', '(', 'entry', '.', 'isCurrent', '(', 'now', ')', '==', 'false', ')', '{', '// Try to refresh the entry', 'if', '(', 'entry', '.', 'refresh', '(', ')', '==', 'false', ')', '{', '// Failed, remove the entry and return null', 'entry', '.', 'destroy', '(', ')', ';', 'entryMap', '.', 'remove', '(', 'key', ')', ';', 'return', 'null', ';', '}', '}', 'Object', 'value', '=', 'entry', '.', 'getValue', '(', ')', ';', 'return', 'value', ';', '}']","Get the cache value for key if it has not expired. If the TimedEntry
is expired its destroy method is called and then removed from the cache.
@return the TimedEntry value or the original value if it was not an
instance of TimedEntry if key is in the cache, null otherwise.","['Get', 'the', 'cache', 'value', 'for', 'key', 'if', 'it', 'has', 'not', 'expired', '.', 'If', 'the', 'TimedEntry', 'is', 'expired', 'its', 'destroy', 'method', 'is', 'called', 'and', 'then', 'removed', 'from', 'the', 'cache', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/TimedCachePolicy.java#L254-L271,test
sialcasa/mvvmFX,mvvmfx-utils/src/main/java/de/saxsys/mvvmfx/utils/listener/ListenerManager.java,ListenerManager.clearMap,"private <T, U> void clearMap(Map<T, Set<U>> map, BiConsumer<T, U> consumer) {
		for (T observable : map.keySet()) {
			for (U listener : map.get(observable)) {
				consumer.accept(observable, listener);
			}
		}
		map.clear();
	}",java,"private <T, U> void clearMap(Map<T, Set<U>> map, BiConsumer<T, U> consumer) {
		for (T observable : map.keySet()) {
			for (U listener : map.get(observable)) {
				consumer.accept(observable, listener);
			}
		}
		map.clear();
	}","['private', '<', 'T', ',', 'U', '>', 'void', 'clearMap', '(', 'Map', '<', 'T', ',', 'Set', '<', 'U', '>', '>', 'map', ',', 'BiConsumer', '<', 'T', ',', 'U', '>', 'consumer', ')', '{', 'for', '(', 'T', 'observable', ':', 'map', '.', 'keySet', '(', ')', ')', '{', 'for', '(', 'U', 'listener', ':', 'map', '.', 'get', '(', 'observable', ')', ')', '{', 'consumer', '.', 'accept', '(', 'observable', ',', 'listener', ')', ';', '}', '}', 'map', '.', 'clear', '(', ')', ';', '}']","This method is used to clear the given map. To do this you need to implement a BiConsumer that calls the specific
method to remove a listener from an observable.

This needs to be done as there is no common interface with a remove method that all types of observables are
implementing. Therefore the method call to the specific removeListener method needs to be done in an extra
function.

@param map
the multimap that contains the observables and listeners.
@param consumer
a function that calls the specific remove method for the given types.","['This', 'method', 'is', 'used', 'to', 'clear', 'the', 'given', 'map', '.', 'To', 'do', 'this', 'you', 'need', 'to', 'implement', 'a', 'BiConsumer', 'that', 'calls', 'the', 'specific', 'method', 'to', 'remove', 'a', 'listener', 'from', 'an', 'observable', '.']",240566a358a8e01c94c0bbb99228140a69690d02,https://github.com/sialcasa/mvvmFX/blob/240566a358a8e01c94c0bbb99228140a69690d02/mvvmfx-utils/src/main/java/de/saxsys/mvvmfx/utils/listener/ListenerManager.java#L133-L140,test
agentsoz/jill,jill/src/main/java/io/github/agentsoz/jill/lang/PlanBindings.java,PlanBindings.getResultAtIndex,"private Belief getResultAtIndex(Set<Belief> results, int index) {
    Belief belief = null;
    if (!(results == null || index < 0 || index >= results.size())) {
      int idx = 0;
      for (Belief b : results) {
        if (idx == index) {
          belief = b;
          break;
        }
        idx++;
      }
    }
    return belief;
  }",java,"private Belief getResultAtIndex(Set<Belief> results, int index) {
    Belief belief = null;
    if (!(results == null || index < 0 || index >= results.size())) {
      int idx = 0;
      for (Belief b : results) {
        if (idx == index) {
          belief = b;
          break;
        }
        idx++;
      }
    }
    return belief;
  }","['private', 'Belief', 'getResultAtIndex', '(', 'Set', '<', 'Belief', '>', 'results', ',', 'int', 'index', ')', '{', 'Belief', 'belief', '=', 'null', ';', 'if', '(', '!', '(', 'results', '==', 'null', '||', 'index', '<', '0', '||', 'index', '>=', 'results', '.', 'size', '(', ')', ')', ')', '{', 'int', 'idx', '=', '0', ';', 'for', '(', 'Belief', 'b', ':', 'results', ')', '{', 'if', '(', 'idx', '==', 'index', ')', '{', 'belief', '=', 'b', ';', 'break', ';', '}', 'idx', '++', ';', '}', '}', 'return', 'belief', ';', '}']","Gets the result at the given index from the results set.

@param results results set (implementation must support predictable iteration order)
@param index the index within the set {@code (0 < index < results.size())} to retrieve
@return the result at the given index, or null if there was an error","['Gets', 'the', 'result', 'at', 'the', 'given', 'index', 'from', 'the', 'results', 'set', '.']",13126fc78350465b477386132465f84cad719426,https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/lang/PlanBindings.java#L244-L257,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/CommandLineParser.java,CommandLineParser.getErrors,"public String getErrors()
    {
        // Return the empty string if there are no errors.
        if (parsingErrors.isEmpty())
        {
            return """";
        }

        // Concatenate all the parsing errors together.
        String result = """";

        for (String s : parsingErrors)
        {
            result += s;
        }

        return result;
    }",java,"public String getErrors()
    {
        // Return the empty string if there are no errors.
        if (parsingErrors.isEmpty())
        {
            return """";
        }

        // Concatenate all the parsing errors together.
        String result = """";

        for (String s : parsingErrors)
        {
            result += s;
        }

        return result;
    }","['public', 'String', 'getErrors', '(', ')', '{', '// Return the empty string if there are no errors.', 'if', '(', 'parsingErrors', '.', 'isEmpty', '(', ')', ')', '{', 'return', '""""', ';', '}', '// Concatenate all the parsing errors together.', 'String', 'result', '=', '""""', ';', 'for', '(', 'String', 's', ':', 'parsingErrors', ')', '{', 'result', '+=', 's', ';', '}', 'return', 'result', ';', '}']","Lists all the parsing errors from the most recent parsing in a string.

@return All the parsing errors from the most recent parsing.","['Lists', 'all', 'the', 'parsing', 'errors', 'from', 'the', 'most', 'recent', 'parsing', 'in', 'a', 'string', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/CommandLineParser.java#L208-L225,test
deeplearning4j/nd4j,nd4j-common/src/main/java/org/nd4j/linalg/util/MathUtils.java,MathUtils.partitionVariable,"public static List<List<Double>> partitionVariable(List<Double> arr, int chunk) {
        int count = 0;
        List<List<Double>> ret = new ArrayList<List<Double>>();


        while (count < arr.size()) {

            List<Double> sublist = arr.subList(count, count + chunk);
            count += chunk;
            ret.add(sublist);

        }
        //All data sets must be same size
        for (List<Double> lists : ret) {
            if (lists.size() < chunk)
                ret.remove(lists);
        }
        return ret;
    }",java,"public static List<List<Double>> partitionVariable(List<Double> arr, int chunk) {
        int count = 0;
        List<List<Double>> ret = new ArrayList<List<Double>>();


        while (count < arr.size()) {

            List<Double> sublist = arr.subList(count, count + chunk);
            count += chunk;
            ret.add(sublist);

        }
        //All data sets must be same size
        for (List<Double> lists : ret) {
            if (lists.size() < chunk)
                ret.remove(lists);
        }
        return ret;
    }","['public', 'static', 'List', '<', 'List', '<', 'Double', '>', '>', 'partitionVariable', '(', 'List', '<', 'Double', '>', 'arr', ',', 'int', 'chunk', ')', '{', 'int', 'count', '=', '0', ';', 'List', '<', 'List', '<', 'Double', '>', '>', 'ret', '=', 'new', 'ArrayList', '<', 'List', '<', 'Double', '>', '>', '(', ')', ';', 'while', '(', 'count', '<', 'arr', '.', 'size', '(', ')', ')', '{', 'List', '<', 'Double', '>', 'sublist', '=', 'arr', '.', 'subList', '(', 'count', ',', 'count', '+', 'chunk', ')', ';', 'count', '+=', 'chunk', ';', 'ret', '.', 'add', '(', 'sublist', ')', ';', '}', '//All data sets must be same size', 'for', '(', 'List', '<', 'Double', '>', 'lists', ':', 'ret', ')', '{', 'if', '(', 'lists', '.', 'size', '(', ')', '<', 'chunk', ')', 'ret', '.', 'remove', '(', 'lists', ')', ';', '}', 'return', 'ret', ';', '}']","This will partition the given whole variable data applyTransformToDestination in to the specified chunk number.

@param arr   the data applyTransformToDestination to pass in
@param chunk the number to separate by
@return a partition data applyTransformToDestination relative to the passed in chunk number","['This', 'will', 'partition', 'the', 'given', 'whole', 'variable', 'data', 'applyTransformToDestination', 'in', 'to', 'the', 'specified', 'chunk', 'number', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-common/src/main/java/org/nd4j/linalg/util/MathUtils.java#L626-L644,test
Unidata/thredds,cdm/src/main/java/thredds/inventory/partition/DirectoryBuilder.java,DirectoryBuilder.scanForChildren,"private void scanForChildren() {
    if (debug) System.out.printf(""DirectoryBuilder.scanForChildren on %s "", dir);

    int count = 0;
    try (DirectoryStream<Path> ds = Files.newDirectoryStream(dir)) {
      for (Path p : ds) {
        BasicFileAttributes attr = Files.readAttributes(p, BasicFileAttributes.class);
        if (attr.isDirectory()) {
          children.add(new DirectoryBuilder(topCollectionName, p, attr, suffix));
          if (debug && (++count % 10 == 0)) System.out.printf(""%d "", count);
        }
      }
    } catch (IOException e) {
      e.printStackTrace();
    }
    if (debug) System.out.printf(""done=%d%n"", count);
    childrenConstructed = true;
  }",java,"private void scanForChildren() {
    if (debug) System.out.printf(""DirectoryBuilder.scanForChildren on %s "", dir);

    int count = 0;
    try (DirectoryStream<Path> ds = Files.newDirectoryStream(dir)) {
      for (Path p : ds) {
        BasicFileAttributes attr = Files.readAttributes(p, BasicFileAttributes.class);
        if (attr.isDirectory()) {
          children.add(new DirectoryBuilder(topCollectionName, p, attr, suffix));
          if (debug && (++count % 10 == 0)) System.out.printf(""%d "", count);
        }
      }
    } catch (IOException e) {
      e.printStackTrace();
    }
    if (debug) System.out.printf(""done=%d%n"", count);
    childrenConstructed = true;
  }","['private', 'void', 'scanForChildren', '(', ')', '{', 'if', '(', 'debug', ')', 'System', '.', 'out', '.', 'printf', '(', '""DirectoryBuilder.scanForChildren on %s ""', ',', 'dir', ')', ';', 'int', 'count', '=', '0', ';', 'try', '(', 'DirectoryStream', '<', 'Path', '>', 'ds', '=', 'Files', '.', 'newDirectoryStream', '(', 'dir', ')', ')', '{', 'for', '(', 'Path', 'p', ':', 'ds', ')', '{', 'BasicFileAttributes', 'attr', '=', 'Files', '.', 'readAttributes', '(', 'p', ',', 'BasicFileAttributes', '.', 'class', ')', ';', 'if', '(', 'attr', '.', 'isDirectory', '(', ')', ')', '{', 'children', '.', 'add', '(', 'new', 'DirectoryBuilder', '(', 'topCollectionName', ',', 'p', ',', 'attr', ',', 'suffix', ')', ')', ';', 'if', '(', 'debug', '&&', '(', '++', 'count', '%', '10', '==', '0', ')', ')', 'System', '.', 'out', '.', 'printf', '(', '""%d ""', ',', 'count', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'if', '(', 'debug', ')', 'System', '.', 'out', '.', 'printf', '(', '""done=%d%n""', ',', 'count', ')', ';', 'childrenConstructed', '=', 'true', ';', '}']","Scan for subdirectories, make each into a DirectoryBuilder and add as a child","['Scan', 'for', 'subdirectories', 'make', 'each', 'into', 'a', 'DirectoryBuilder', 'and', 'add', 'as', 'a', 'child']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/thredds/inventory/partition/DirectoryBuilder.java#L230-L247,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CellUtility.java,CellUtility.getPoiCellFromSheet,"public static Cell getPoiCellFromSheet(final int rowIndex, final int colIndex, final Sheet sheet1) {
		if ((sheet1 != null) && (sheet1.getRow(rowIndex) != null)) {
			return sheet1.getRow(rowIndex).getCell(colIndex);
		}
		return null;
	}",java,"public static Cell getPoiCellFromSheet(final int rowIndex, final int colIndex, final Sheet sheet1) {
		if ((sheet1 != null) && (sheet1.getRow(rowIndex) != null)) {
			return sheet1.getRow(rowIndex).getCell(colIndex);
		}
		return null;
	}","['public', 'static', 'Cell', 'getPoiCellFromSheet', '(', 'final', 'int', 'rowIndex', ',', 'final', 'int', 'colIndex', ',', 'final', 'Sheet', 'sheet1', ')', '{', 'if', '(', '(', 'sheet1', '!=', 'null', ')', '&&', '(', 'sheet1', '.', 'getRow', '(', 'rowIndex', ')', '!=', 'null', ')', ')', '{', 'return', 'sheet1', '.', 'getRow', '(', 'rowIndex', ')', '.', 'getCell', '(', 'colIndex', ')', ';', '}', 'return', 'null', ';', '}']","Gets the poi cell from sheet.

@param rowIndex
the row index
@param colIndex
the col index
@param sheet1
the sheet 1
@return the poi cell from sheet","['Gets', 'the', 'poi', 'cell', 'from', 'sheet', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CellUtility.java#L916-L921,test
dschulten/hydra-java,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionInputParameter.java,SpringActionInputParameter.containsPropertyIncludeValue,"private boolean containsPropertyIncludeValue(String property) {
        return arrayContains(inputAnnotation.readOnly(), property)
                || arrayContains(inputAnnotation.hidden(), property)
                || arrayContains(inputAnnotation.include(), property);
    }",java,"private boolean containsPropertyIncludeValue(String property) {
        return arrayContains(inputAnnotation.readOnly(), property)
                || arrayContains(inputAnnotation.hidden(), property)
                || arrayContains(inputAnnotation.include(), property);
    }","['private', 'boolean', 'containsPropertyIncludeValue', '(', 'String', 'property', ')', '{', 'return', 'arrayContains', '(', 'inputAnnotation', '.', 'readOnly', '(', ')', ',', 'property', ')', '||', 'arrayContains', '(', 'inputAnnotation', '.', 'hidden', '(', ')', ',', 'property', ')', '||', 'arrayContains', '(', 'inputAnnotation', '.', 'include', '(', ')', ',', 'property', ')', ';', '}']","Find out if property is included by searching through all annotations.

@param property
@return","['Find', 'out', 'if', 'property', 'is', 'included', 'by', 'searching', 'through', 'all', 'annotations', '.']",21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a,https://github.com/dschulten/hydra-java/blob/21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionInputParameter.java#L233-L237,test
GojaFramework/goja,goja-core/src/main/java/goja/core/Validator.java,Validator.isDateTime,"public static boolean isDateTime(String value) {
        String check =
                ""^(\\d{4})(/|-|\\.|年)(\\d{1,2})(/|-|\\.|月)(\\d{1,2})(日)?(\\s+\\d{1,2}(:|时)\\d{1,2}(:|分)?(\\d{1,2}(秒)?)?)?$"";// check = ""^(\\d{4})(/|-|\\.)(\\d{1,2})(/|-|\\.)(\\d{1,2})$"";
        return match(check, Pattern.CASE_INSENSITIVE, value);
    }",java,"public static boolean isDateTime(String value) {
        String check =
                ""^(\\d{4})(/|-|\\.|年)(\\d{1,2})(/|-|\\.|月)(\\d{1,2})(日)?(\\s+\\d{1,2}(:|时)\\d{1,2}(:|分)?(\\d{1,2}(秒)?)?)?$"";// check = ""^(\\d{4})(/|-|\\.)(\\d{1,2})(/|-|\\.)(\\d{1,2})$"";
        return match(check, Pattern.CASE_INSENSITIVE, value);
    }","['public', 'static', 'boolean', 'isDateTime', '(', 'String', 'value', ')', '{', 'String', 'check', '=', '""^(\\\\d{4})(/|-|\\\\.|年)(\\\\d{1,2})(/|-|\\\\.|月)(\\\\d{1,2})(日)?(\\\\s+\\\\d{1,2}(:|时)\\\\d{1,2}(:|分)?(\\\\d{1,2}(秒)?)?)?$"";// check = ', '""', '^(\\\\d{4})(/|-|\\\\.)(\\\\d{1,2})(/|-|\\\\.)(\\\\d{1,2})$"";', 'return', 'match', '(', 'check', ',', 'Pattern', '.', 'CASE_INSENSITIVE', ',', 'value', ')', ';', '}']","Tell the time

@param value value
@return boolean","['Tell', 'the', 'time']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/Validator.java#L291-L295,test
cologneintelligence/FitGoodies,fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/LogHelper.java,LogHelper.remove,"public void remove(final AppenderAttachable logger, final String appenderName) {
		logger.removeAppender(CaptureAppender.getAppenderNameFor(appenderName));
	}",java,"public void remove(final AppenderAttachable logger, final String appenderName) {
		logger.removeAppender(CaptureAppender.getAppenderNameFor(appenderName));
	}","['public', 'void', 'remove', '(', 'final', 'AppenderAttachable', 'logger', ',', 'final', 'String', 'appenderName', ')', '{', 'logger', '.', 'removeAppender', '(', 'CaptureAppender', '.', 'getAppenderNameFor', '(', 'appenderName', ')', ')', ';', '}']","Removes a CaptureAppender from a logger.

@param logger       logger to use
@param appenderName name of the appender which is captured","['Removes', 'a', 'CaptureAppender', 'from', 'a', 'logger', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-logging-log4j/src/main/java/de/cologneintelligence/fitgoodies/log4j/LogHelper.java#L61-L63,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/util/DiskCache2.java,DiskCache2.getExistingFileOrCache,"public File getExistingFileOrCache(String fileLocation) {
    File f = new File(fileLocation);
    if (f.exists()) return f;

    if (neverUseCache) return null;

    File fc = new File(makeCachePath(fileLocation));
    if (fc.exists()) return fc;

    return null;
  }",java,"public File getExistingFileOrCache(String fileLocation) {
    File f = new File(fileLocation);
    if (f.exists()) return f;

    if (neverUseCache) return null;

    File fc = new File(makeCachePath(fileLocation));
    if (fc.exists()) return fc;

    return null;
  }","['public', 'File', 'getExistingFileOrCache', '(', 'String', 'fileLocation', ')', '{', 'File', 'f', '=', 'new', 'File', '(', 'fileLocation', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', 'return', 'f', ';', 'if', '(', 'neverUseCache', ')', 'return', 'null', ';', 'File', 'fc', '=', 'new', 'File', '(', 'makeCachePath', '(', 'fileLocation', ')', ')', ';', 'if', '(', 'fc', '.', 'exists', '(', ')', ')', 'return', 'fc', ';', 'return', 'null', ';', '}']","Looking for an existing file, in cache or no
@param fileLocation the original name
@return existing file if you can find it","['Looking', 'for', 'an', 'existing', 'file', 'in', 'cache', 'or', 'no']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/util/DiskCache2.java#L265-L275,test
streamsets/datacollector,client-api/src/main/java/com/streamsets/datacollector/client/api/StoreApi.java,StoreApi.createDraftPipelineFragment,"public PipelineFragmentEnvelopeJson createDraftPipelineFragment (
      String fragmentId,
      String description,
      List<StageConfigurationJson> stageInstances
  ) throws ApiException {
    Object postBody = stageInstances;
    byte[] postBinaryBody = null;

    // verify the required parameter 'pipelineId' is set
    if (fragmentId == null) {
      throw new ApiException(400, ""Missing the required parameter 'fragmentId' when calling createPipelineFragment"");
    }

    // create path and map variables
    String path = ""/v1/fragment/{fragmentId}"".replaceAll(""\\{format\\}"",""json"")
        .replaceAll(""\\{"" + ""fragmentId"" + ""\\}"", apiClient.escapeString(fragmentId.toString()));

    // query params
    List<Pair> queryParams = new ArrayList<Pair>();
    Map<String, String> headerParams = new HashMap<String, String>();
    Map<String, Object> formParams = new HashMap<String, Object>();

    queryParams.addAll(apiClient.parameterToPairs("""", ""description"", description));
    queryParams.addAll(apiClient.parameterToPairs("""", ""draft"", true));

    final String[] accepts = {
        ""application/json""
    };
    final String accept = apiClient.selectHeaderAccept(accepts);

    final String[] contentTypes = {

    };
    final String contentType = apiClient.selectHeaderContentType(contentTypes);

    String[] authNames = new String[] { ""basic"" };

    TypeRef returnType = new TypeRef<PipelineFragmentEnvelopeJson>() {};
    return apiClient.invokeAPI(path, ""PUT"", queryParams, postBody, postBinaryBody, headerParams, formParams,
        accept, contentType, authNames, returnType);
  }",java,"public PipelineFragmentEnvelopeJson createDraftPipelineFragment (
      String fragmentId,
      String description,
      List<StageConfigurationJson> stageInstances
  ) throws ApiException {
    Object postBody = stageInstances;
    byte[] postBinaryBody = null;

    // verify the required parameter 'pipelineId' is set
    if (fragmentId == null) {
      throw new ApiException(400, ""Missing the required parameter 'fragmentId' when calling createPipelineFragment"");
    }

    // create path and map variables
    String path = ""/v1/fragment/{fragmentId}"".replaceAll(""\\{format\\}"",""json"")
        .replaceAll(""\\{"" + ""fragmentId"" + ""\\}"", apiClient.escapeString(fragmentId.toString()));

    // query params
    List<Pair> queryParams = new ArrayList<Pair>();
    Map<String, String> headerParams = new HashMap<String, String>();
    Map<String, Object> formParams = new HashMap<String, Object>();

    queryParams.addAll(apiClient.parameterToPairs("""", ""description"", description));
    queryParams.addAll(apiClient.parameterToPairs("""", ""draft"", true));

    final String[] accepts = {
        ""application/json""
    };
    final String accept = apiClient.selectHeaderAccept(accepts);

    final String[] contentTypes = {

    };
    final String contentType = apiClient.selectHeaderContentType(contentTypes);

    String[] authNames = new String[] { ""basic"" };

    TypeRef returnType = new TypeRef<PipelineFragmentEnvelopeJson>() {};
    return apiClient.invokeAPI(path, ""PUT"", queryParams, postBody, postBinaryBody, headerParams, formParams,
        accept, contentType, authNames, returnType);
  }","['public', 'PipelineFragmentEnvelopeJson', 'createDraftPipelineFragment', '(', 'String', 'fragmentId', ',', 'String', 'description', ',', 'List', '<', 'StageConfigurationJson', '>', 'stageInstances', ')', 'throws', 'ApiException', '{', 'Object', 'postBody', '=', 'stageInstances', ';', 'byte', '[', ']', 'postBinaryBody', '=', 'null', ';', ""// verify the required parameter 'pipelineId' is set"", 'if', '(', 'fragmentId', '==', 'null', ')', '{', 'throw', 'new', 'ApiException', '(', '400', ',', '""Missing the required parameter \'fragmentId\' when calling createPipelineFragment""', ')', ';', '}', '// create path and map variables', 'String', 'path', '=', '""/v1/fragment/{fragmentId}""', '.', 'replaceAll', '(', '""\\\\{format\\\\}""', ',', '""json""', ')', '.', 'replaceAll', '(', '""\\\\{""', '+', '""fragmentId""', '+', '""\\\\}""', ',', 'apiClient', '.', 'escapeString', '(', 'fragmentId', '.', 'toString', '(', ')', ')', ')', ';', '// query params', 'List', '<', 'Pair', '>', 'queryParams', '=', 'new', 'ArrayList', '<', 'Pair', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'String', '>', 'headerParams', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'Object', '>', 'formParams', '=', 'new', 'HashMap', '<', 'String', ',', 'Object', '>', '(', ')', ';', 'queryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""description""', ',', 'description', ')', ')', ';', 'queryParams', '.', 'addAll', '(', 'apiClient', '.', 'parameterToPairs', '(', '""""', ',', '""draft""', ',', 'true', ')', ')', ';', 'final', 'String', '[', ']', 'accepts', '=', '{', '""application/json""', '}', ';', 'final', 'String', 'accept', '=', 'apiClient', '.', 'selectHeaderAccept', '(', 'accepts', ')', ';', 'final', 'String', '[', ']', 'contentTypes', '=', '{', '}', ';', 'final', 'String', 'contentType', '=', 'apiClient', '.', 'selectHeaderContentType', '(', 'contentTypes', ')', ';', 'String', '[', ']', 'authNames', '=', 'new', 'String', '[', ']', '{', '""basic""', '}', ';', 'TypeRef', 'returnType', '=', 'new', 'TypeRef', '<', 'PipelineFragmentEnvelopeJson', '>', '(', ')', '{', '}', ';', 'return', 'apiClient', '.', 'invokeAPI', '(', 'path', ',', '""PUT""', ',', 'queryParams', ',', 'postBody', ',', 'postBinaryBody', ',', 'headerParams', ',', 'formParams', ',', 'accept', ',', 'contentType', ',', 'authNames', ',', 'returnType', ')', ';', '}']","Add a new Pipeline Fragment Configuration to the store

@param fragmentId Frgament Id
@param description Description
@return PipelineFragmentEnvelopeJson","['Add', 'a', 'new', 'Pipeline', 'Fragment', 'Configuration', 'to', 'the', 'store']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/client-api/src/main/java/com/streamsets/datacollector/client/api/StoreApi.java#L187-L227,test
sharneng/gm4java,src/main/java/org/gm4java/im4java/GMOperation.java,GMOperation.font,"public GMOperation font(final String style, final int size, final String color) {
        if (isBlank(style)) {
            throw new IllegalArgumentException(""Text font style must be defined"");
        }
        if (isBlank(color)) {
            throw new IllegalArgumentException(""Text font color must be defined"");
        }
        font(style);
        pointsize(size);
        fill(color);
        return this;
    }",java,"public GMOperation font(final String style, final int size, final String color) {
        if (isBlank(style)) {
            throw new IllegalArgumentException(""Text font style must be defined"");
        }
        if (isBlank(color)) {
            throw new IllegalArgumentException(""Text font color must be defined"");
        }
        font(style);
        pointsize(size);
        fill(color);
        return this;
    }","['public', 'GMOperation', 'font', '(', 'final', 'String', 'style', ',', 'final', 'int', 'size', ',', 'final', 'String', 'color', ')', '{', 'if', '(', 'isBlank', '(', 'style', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Text font style must be defined""', ')', ';', '}', 'if', '(', 'isBlank', '(', 'color', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Text font color must be defined""', ')', ';', '}', 'font', '(', 'style', ')', ';', 'pointsize', '(', 'size', ')', ';', 'fill', '(', 'color', ')', ';', 'return', 'this', ';', '}']","Defines font for text overlay.

@param style
Text font style (system-dependent based on installed fonts).
@param size
Text point size.
@param color
Text color, either named or {@code #RGB} variant.
@return Builder object for chained options setup.","['Defines', 'font', 'for', 'text', 'overlay', '.']",92f3f3b64a45f312ef6978f2367263ec64ff0c04,https://github.com/sharneng/gm4java/blob/92f3f3b64a45f312ef6978f2367263ec64ff0c04/src/main/java/org/gm4java/im4java/GMOperation.java#L287-L298,test
markhobson/microbrowser,spi/src/main/java/org/hobsoft/microbrowser/spi/Urls.java,Urls.newUrl,"public static URL newUrl(String spec)
	{
		try
		{
			return new URL(spec);
		}
		catch (MalformedURLException exception)
		{
			throw new IllegalArgumentException(""Invalid URL: "" + spec);
		}
	}",java,"public static URL newUrl(String spec)
	{
		try
		{
			return new URL(spec);
		}
		catch (MalformedURLException exception)
		{
			throw new IllegalArgumentException(""Invalid URL: "" + spec);
		}
	}","['public', 'static', 'URL', 'newUrl', '(', 'String', 'spec', ')', '{', 'try', '{', 'return', 'new', 'URL', '(', 'spec', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'exception', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Invalid URL: ""', '+', 'spec', ')', ';', '}', '}']","Creates a URL for the specified string representation.

@param spec
the string representation
@return the URL
@throws IllegalArgumentException
if the specified string representation is not a valid URL","['Creates', 'a', 'URL', 'for', 'the', 'specified', 'string', 'representation', '.']",732d2dadc1c3eaad688de31dc09f360df580faf1,https://github.com/markhobson/microbrowser/blob/732d2dadc1c3eaad688de31dc09f360df580faf1/spi/src/main/java/org/hobsoft/microbrowser/spi/Urls.java#L46-L56,test
playframework/playframework,core/play-guice/src/main/java/play/inject/guice/GuiceApplicationBuilder.java,GuiceApplicationBuilder.load,"public GuiceApplicationBuilder load(GuiceableModule... modules) {
    return newBuilder(delegate.load(Scala.varargs(modules)));
  }",java,"public GuiceApplicationBuilder load(GuiceableModule... modules) {
    return newBuilder(delegate.load(Scala.varargs(modules)));
  }","['public', 'GuiceApplicationBuilder', 'load', '(', 'GuiceableModule', '...', 'modules', ')', '{', 'return', 'newBuilder', '(', 'delegate', '.', 'load', '(', 'Scala', '.', 'varargs', '(', 'modules', ')', ')', ')', ';', '}']","Override the module loader with the given guiceable modules.

@param modules the set of overriding modules
@return an application builder that incorporates the overrides","['Override', 'the', 'module', 'loader', 'with', 'the', 'given', 'guiceable', 'modules', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play-guice/src/main/java/play/inject/guice/GuiceApplicationBuilder.java#L81-L83,test
RestComm/jain-slee,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorEntityImpl.java,ResourceAdaptorEntityImpl.remove,"public void remove() throws InvalidStateException {
		if (!this.state.isInactive()) {
			throw new InvalidStateException(""entity "" + name + "" is in state: ""
						+ this.state);
		}
		object.raUnconfigure();
		if (object.isFaultTolerant()) {
			object.unsetFaultTolerantResourceAdaptorContext();
			ftResourceAdaptorContext.shutdown();
		}
		object.unsetResourceAdaptorContext();
		this.sleeContainer.getTraceManagement()
				.deregisterNotificationSource(this.getNotificationSource());
		state = null;
	}",java,"public void remove() throws InvalidStateException {
		if (!this.state.isInactive()) {
			throw new InvalidStateException(""entity "" + name + "" is in state: ""
						+ this.state);
		}
		object.raUnconfigure();
		if (object.isFaultTolerant()) {
			object.unsetFaultTolerantResourceAdaptorContext();
			ftResourceAdaptorContext.shutdown();
		}
		object.unsetResourceAdaptorContext();
		this.sleeContainer.getTraceManagement()
				.deregisterNotificationSource(this.getNotificationSource());
		state = null;
	}","['public', 'void', 'remove', '(', ')', 'throws', 'InvalidStateException', '{', 'if', '(', '!', 'this', '.', 'state', '.', 'isInactive', '(', ')', ')', '{', 'throw', 'new', 'InvalidStateException', '(', '""entity ""', '+', 'name', '+', '"" is in state: ""', '+', 'this', '.', 'state', ')', ';', '}', 'object', '.', 'raUnconfigure', '(', ')', ';', 'if', '(', 'object', '.', 'isFaultTolerant', '(', ')', ')', '{', 'object', '.', 'unsetFaultTolerantResourceAdaptorContext', '(', ')', ';', 'ftResourceAdaptorContext', '.', 'shutdown', '(', ')', ';', '}', 'object', '.', 'unsetResourceAdaptorContext', '(', ')', ';', 'this', '.', 'sleeContainer', '.', 'getTraceManagement', '(', ')', '.', 'deregisterNotificationSource', '(', 'this', '.', 'getNotificationSource', '(', ')', ')', ';', 'state', '=', 'null', ';', '}']","Removes the entity, it will unconfigure and unset the ra context, the
entity object can not be reused

@throws InvalidStateException","['Removes', 'the', 'entity', 'it', 'will', 'unconfigure', 'and', 'unset', 'the', 'ra', 'context', 'the', 'entity', 'object', 'can', 'not', 'be', 'reused']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorEntityImpl.java#L487-L501,test
deeplearning4j/nd4j,nd4j-common/src/main/java/org/nd4j/linalg/util/BigDecimalMath.java,BigDecimalMath.sqrt,"static public BigDecimal sqrt(final BigDecimal x) {
        if (x.compareTo(BigDecimal.ZERO) < 0) {
            throw new ArithmeticException(""negative argument "" + x.toString() + "" of square root"");
        }
        return root(2, x);
    }",java,"static public BigDecimal sqrt(final BigDecimal x) {
        if (x.compareTo(BigDecimal.ZERO) < 0) {
            throw new ArithmeticException(""negative argument "" + x.toString() + "" of square root"");
        }
        return root(2, x);
    }","['static', 'public', 'BigDecimal', 'sqrt', '(', 'final', 'BigDecimal', 'x', ')', '{', 'if', '(', 'x', '.', 'compareTo', '(', 'BigDecimal', '.', 'ZERO', ')', '<', '0', ')', '{', 'throw', 'new', 'ArithmeticException', '(', '""negative argument ""', '+', 'x', '.', 'toString', '(', ')', '+', '"" of square root""', ')', ';', '}', 'return', 'root', '(', '2', ',', 'x', ')', ';', '}']","The square root.

@param x the non-negative argument.
@return the square root of the BigDecimal rounded to the precision implied by x.","['The', 'square', 'root', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-common/src/main/java/org/nd4j/linalg/util/BigDecimalMath.java#L209-L214,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/model/WroModel.java,WroModel.identifyDuplicateGroupNames,"private void identifyDuplicateGroupNames(final Collection<Group> groups) {
    LOG.debug(""identifyDuplicateGroupNames"");
    final List<String> groupNames = new ArrayList<String>();
    for (final Group group : groups) {
      if (groupNames.contains(group.getName())) {
        throw new WroRuntimeException(""Duplicate group name detected: "" + group.getName());
      }
      groupNames.add(group.getName());
    }
  }",java,"private void identifyDuplicateGroupNames(final Collection<Group> groups) {
    LOG.debug(""identifyDuplicateGroupNames"");
    final List<String> groupNames = new ArrayList<String>();
    for (final Group group : groups) {
      if (groupNames.contains(group.getName())) {
        throw new WroRuntimeException(""Duplicate group name detected: "" + group.getName());
      }
      groupNames.add(group.getName());
    }
  }","['private', 'void', 'identifyDuplicateGroupNames', '(', 'final', 'Collection', '<', 'Group', '>', 'groups', ')', '{', 'LOG', '.', 'debug', '(', '""identifyDuplicateGroupNames""', ')', ';', 'final', 'List', '<', 'String', '>', 'groupNames', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'for', '(', 'final', 'Group', 'group', ':', 'groups', ')', '{', 'if', '(', 'groupNames', '.', 'contains', '(', 'group', '.', 'getName', '(', ')', ')', ')', '{', 'throw', 'new', 'WroRuntimeException', '(', '""Duplicate group name detected: ""', '+', 'group', '.', 'getName', '(', ')', ')', ';', '}', 'groupNames', '.', 'add', '(', 'group', '.', 'getName', '(', ')', ')', ';', '}', '}']","Identify duplicate group names.

@param groups a collection of group to validate.","['Identify', 'duplicate', 'group', 'names', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/model/WroModel.java#L63-L72,test
1337joe/cubesensors-for-java,src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java,StateParser.extractValues,"private static State extractValues(final List<Object> values, final Map<ExpectedLabels, Integer> map) {
		final ZonedDateTime time = ZonedDateTime.parse((String) values.get(map.get(ExpectedLabels.time)));
		final int temp = safeInt((Integer) values.get(map.get(ExpectedLabels.temp)));
		final int pressure = safeInt((Integer) values.get(map.get(ExpectedLabels.pressure)));
		final int humidity = safeInt((Integer) values.get(map.get(ExpectedLabels.humidity)));
		final int voc = safeInt((Integer) values.get(map.get(ExpectedLabels.voc)));
		final int light = safeInt((Integer) values.get(map.get(ExpectedLabels.light)));
		final int noise = safeInt((Integer) values.get(map.get(ExpectedLabels.noise)));
		final int noisedba = safeInt((Integer) values.get(map.get(ExpectedLabels.noisedba)));
		final int battery = safeInt((Integer) values.get(map.get(ExpectedLabels.battery)));
		final boolean shake = safeBoolean((Boolean) values.get(map.get(ExpectedLabels.shake)));
		final boolean cable = safeBoolean((Boolean) values.get(map.get(ExpectedLabels.cable)));
		final int vocResistance = safeInt((Integer) values.get(map.get(ExpectedLabels.voc_resistance)));
		final int rssi = safeInt((Integer) values.get(map.get(ExpectedLabels.rssi)));
		return new State(time, temp, pressure, humidity, voc, light, noise, noisedba, battery, shake, cable, vocResistance, rssi);
	}",java,"private static State extractValues(final List<Object> values, final Map<ExpectedLabels, Integer> map) {
		final ZonedDateTime time = ZonedDateTime.parse((String) values.get(map.get(ExpectedLabels.time)));
		final int temp = safeInt((Integer) values.get(map.get(ExpectedLabels.temp)));
		final int pressure = safeInt((Integer) values.get(map.get(ExpectedLabels.pressure)));
		final int humidity = safeInt((Integer) values.get(map.get(ExpectedLabels.humidity)));
		final int voc = safeInt((Integer) values.get(map.get(ExpectedLabels.voc)));
		final int light = safeInt((Integer) values.get(map.get(ExpectedLabels.light)));
		final int noise = safeInt((Integer) values.get(map.get(ExpectedLabels.noise)));
		final int noisedba = safeInt((Integer) values.get(map.get(ExpectedLabels.noisedba)));
		final int battery = safeInt((Integer) values.get(map.get(ExpectedLabels.battery)));
		final boolean shake = safeBoolean((Boolean) values.get(map.get(ExpectedLabels.shake)));
		final boolean cable = safeBoolean((Boolean) values.get(map.get(ExpectedLabels.cable)));
		final int vocResistance = safeInt((Integer) values.get(map.get(ExpectedLabels.voc_resistance)));
		final int rssi = safeInt((Integer) values.get(map.get(ExpectedLabels.rssi)));
		return new State(time, temp, pressure, humidity, voc, light, noise, noisedba, battery, shake, cable, vocResistance, rssi);
	}","['private', 'static', 'State', 'extractValues', '(', 'final', 'List', '<', 'Object', '>', 'values', ',', 'final', 'Map', '<', 'ExpectedLabels', ',', 'Integer', '>', 'map', ')', '{', 'final', 'ZonedDateTime', 'time', '=', 'ZonedDateTime', '.', 'parse', '(', '(', 'String', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'time', ')', ')', ')', ';', 'final', 'int', 'temp', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'temp', ')', ')', ')', ';', 'final', 'int', 'pressure', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'pressure', ')', ')', ')', ';', 'final', 'int', 'humidity', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'humidity', ')', ')', ')', ';', 'final', 'int', 'voc', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'voc', ')', ')', ')', ';', 'final', 'int', 'light', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'light', ')', ')', ')', ';', 'final', 'int', 'noise', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'noise', ')', ')', ')', ';', 'final', 'int', 'noisedba', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'noisedba', ')', ')', ')', ';', 'final', 'int', 'battery', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'battery', ')', ')', ')', ';', 'final', 'boolean', 'shake', '=', 'safeBoolean', '(', '(', 'Boolean', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'shake', ')', ')', ')', ';', 'final', 'boolean', 'cable', '=', 'safeBoolean', '(', '(', 'Boolean', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'cable', ')', ')', ')', ';', 'final', 'int', 'vocResistance', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'voc_resistance', ')', ')', ')', ';', 'final', 'int', 'rssi', '=', 'safeInt', '(', '(', 'Integer', ')', 'values', '.', 'get', '(', 'map', '.', 'get', '(', 'ExpectedLabels', '.', 'rssi', ')', ')', ')', ';', 'return', 'new', 'State', '(', 'time', ',', 'temp', ',', 'pressure', ',', 'humidity', ',', 'voc', ',', 'light', ',', 'noise', ',', 'noisedba', ',', 'battery', ',', 'shake', ',', 'cable', ',', 'vocResistance', ',', 'rssi', ')', ';', '}']",Uses the provided label-index mapping to extract state values and create a new State object.,"['Uses', 'the', 'provided', 'label', '-', 'index', 'mapping', 'to', 'extract', 'state', 'values', 'and', 'create', 'a', 'new', 'State', 'object', '.']",f3ba432d36b744e68b916682d7ef24afaff447f8,https://github.com/1337joe/cubesensors-for-java/blob/f3ba432d36b744e68b916682d7ef24afaff447f8/src/main/java/com/w3asel/cubesensors/api/v1/json/StateParser.java#L71-L86,test
playframework/playframework,core/play/src/main/java/play/i18n/Lang.java,Lang.availables,"public static List<Lang> availables(Application app) {
    play.api.i18n.Langs langs = app.injector().instanceOf(play.api.i18n.Langs.class);
    List<play.api.i18n.Lang> availableLangs = Scala.asJava(langs.availables());
    return availableLangs.stream().map(Lang::new).collect(toList());
  }",java,"public static List<Lang> availables(Application app) {
    play.api.i18n.Langs langs = app.injector().instanceOf(play.api.i18n.Langs.class);
    List<play.api.i18n.Lang> availableLangs = Scala.asJava(langs.availables());
    return availableLangs.stream().map(Lang::new).collect(toList());
  }","['public', 'static', 'List', '<', 'Lang', '>', 'availables', '(', 'Application', 'app', ')', '{', 'play', '.', 'api', '.', 'i18n', '.', 'Langs', 'langs', '=', 'app', '.', 'injector', '(', ')', '.', 'instanceOf', '(', 'play', '.', 'api', '.', 'i18n', '.', 'Langs', '.', 'class', ')', ';', 'List', '<', 'play', '.', 'api', '.', 'i18n', '.', 'Lang', '>', 'availableLangs', '=', 'Scala', '.', 'asJava', '(', 'langs', '.', 'availables', '(', ')', ')', ';', 'return', 'availableLangs', '.', 'stream', '(', ')', '.', 'map', '(', 'Lang', '::', 'new', ')', '.', 'collect', '(', 'toList', '(', ')', ')', ';', '}']","Retrieve Lang availables from the application configuration.

@param app the current application.
@return the list of available Lang.","['Retrieve', 'Lang', 'availables', 'from', 'the', 'application', 'configuration', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/i18n/Lang.java#L77-L81,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ncml/Aggregation.java,Aggregation.finish,"public void finish(CancelTask cancelTask) throws IOException {
    datasetManager.scan(true); // Make the list of Datasets, by scanning if needed.
    cacheDirty = true;
    makeDatasets(cancelTask);

    //ucar.unidata.io.RandomAccessFile.setDebugAccess( true);
    buildNetcdfDataset(cancelTask);
    //ucar.unidata.io.RandomAccessFile.setDebugAccess( false);
  }",java,"public void finish(CancelTask cancelTask) throws IOException {
    datasetManager.scan(true); // Make the list of Datasets, by scanning if needed.
    cacheDirty = true;
    makeDatasets(cancelTask);

    //ucar.unidata.io.RandomAccessFile.setDebugAccess( true);
    buildNetcdfDataset(cancelTask);
    //ucar.unidata.io.RandomAccessFile.setDebugAccess( false);
  }","['public', 'void', 'finish', '(', 'CancelTask', 'cancelTask', ')', 'throws', 'IOException', '{', 'datasetManager', '.', 'scan', '(', 'true', ')', ';', '// Make the list of Datasets, by scanning if needed.\r', 'cacheDirty', '=', 'true', ';', 'makeDatasets', '(', 'cancelTask', ')', ';', '//ucar.unidata.io.RandomAccessFile.setDebugAccess( true);\r', 'buildNetcdfDataset', '(', 'cancelTask', ')', ';', '//ucar.unidata.io.RandomAccessFile.setDebugAccess( false);\r', '}']","all elements are processed, finish construction","['all', 'elements', 'are', 'processed', 'finish', 'construction']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ncml/Aggregation.java#L387-L395,test
arnohaase/a-foundation,a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/AOption.java,AOption.fromNullable,"public static <T> AOption<T> fromNullable(T nullable) {
        return nullable != null ? some(nullable) : AOption.<T>none();
    }",java,"public static <T> AOption<T> fromNullable(T nullable) {
        return nullable != null ? some(nullable) : AOption.<T>none();
    }","['public', 'static', '<', 'T', '>', 'AOption', '<', 'T', '>', 'fromNullable', '(', 'T', 'nullable', ')', '{', 'return', 'nullable', '!=', 'null', '?', 'some', '(', 'nullable', ')', ':', 'AOption', '.', '<', 'T', '>', 'none', '(', ')', ';', '}']","This is a convenience method that creates an AOption based on Java conventions.

@return 'none()' if the parameter is null, 'some(nullable)' otherwise","['This', 'is', 'a', 'convenience', 'method', 'that', 'creates', 'an', 'AOption', 'based', 'on', 'Java', 'conventions', '.']",f3eef2ca89d67775f202a4c28140230a6229291e,https://github.com/arnohaase/a-foundation/blob/f3eef2ca89d67775f202a4c28140230a6229291e/a-foundation/src/main/java/com/ajjpj/afoundation/collection/immutable/AOption.java#L55-L57,test
cologneintelligence/FitGoodies,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSelector.java,FileSelector.getLastFile,"public File getLastFile() throws FileNotFoundException {
		File[] files = directory.listFiles(filter);
		if (files == null || files.length == 0) {
			throw new FileNotFoundException();
		}

		return files[files.length - 1];
	}",java,"public File getLastFile() throws FileNotFoundException {
		File[] files = directory.listFiles(filter);
		if (files == null || files.length == 0) {
			throw new FileNotFoundException();
		}

		return files[files.length - 1];
	}","['public', 'File', 'getLastFile', '(', ')', 'throws', 'FileNotFoundException', '{', 'File', '[', ']', 'files', '=', 'directory', '.', 'listFiles', '(', 'filter', ')', ';', 'if', '(', 'files', '==', 'null', '||', 'files', '.', 'length', '==', '0', ')', '{', 'throw', 'new', 'FileNotFoundException', '(', ')', ';', '}', 'return', 'files', '[', 'files', '.', 'length', '-', '1', ']', ';', '}']","Returns the last matching file.

@return the matching file or <code>null</code> if no file matches
@throws FileNotFoundException thrown, if the directory does not exist","['Returns', 'the', 'last', 'matching', 'file', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSelector.java#L105-L112,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/features/index/FeatureIndexManager.java,FeatureIndexManager.getIndexedTypes,"public List<FeatureIndexType> getIndexedTypes() {
        List<FeatureIndexType> indexed = new ArrayList<>();
        for (FeatureIndexType type : indexLocationQueryOrder) {
            if (isIndexed(type)) {
                indexed.add(type);
            }
        }
        return indexed;
    }",java,"public List<FeatureIndexType> getIndexedTypes() {
        List<FeatureIndexType> indexed = new ArrayList<>();
        for (FeatureIndexType type : indexLocationQueryOrder) {
            if (isIndexed(type)) {
                indexed.add(type);
            }
        }
        return indexed;
    }","['public', 'List', '<', 'FeatureIndexType', '>', 'getIndexedTypes', '(', ')', '{', 'List', '<', 'FeatureIndexType', '>', 'indexed', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'for', '(', 'FeatureIndexType', 'type', ':', 'indexLocationQueryOrder', ')', '{', 'if', '(', 'isIndexed', '(', 'type', ')', ')', '{', 'indexed', '.', 'add', '(', 'type', ')', ';', '}', '}', 'return', 'indexed', ';', '}']","Get the indexed types that are currently indexed

@return indexed types
@since 2.0.0","['Get', 'the', 'indexed', 'types', 'that', 'are', 'currently', 'indexed']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/features/index/FeatureIndexManager.java#L656-L664,test
oblac/jodd,jodd-bean/src/main/java/jodd/introspector/PropertyDescriptor.java,PropertyDescriptor.resolveComponentType,"public Class resolveComponentType(final boolean declared) {
		Class componentType = null;

		Getter getter = getGetter(declared);

		if (getter != null) {
			componentType = getter.getGetterRawComponentType();
		}

		if (componentType == null) {
			FieldDescriptor fieldDescriptor = getFieldDescriptor();

			if (fieldDescriptor != null) {
				componentType = fieldDescriptor.getRawComponentType();
			}
		}

		return componentType;
	}",java,"public Class resolveComponentType(final boolean declared) {
		Class componentType = null;

		Getter getter = getGetter(declared);

		if (getter != null) {
			componentType = getter.getGetterRawComponentType();
		}

		if (componentType == null) {
			FieldDescriptor fieldDescriptor = getFieldDescriptor();

			if (fieldDescriptor != null) {
				componentType = fieldDescriptor.getRawComponentType();
			}
		}

		return componentType;
	}","['public', 'Class', 'resolveComponentType', '(', 'final', 'boolean', 'declared', ')', '{', 'Class', 'componentType', '=', 'null', ';', 'Getter', 'getter', '=', 'getGetter', '(', 'declared', ')', ';', 'if', '(', 'getter', '!=', 'null', ')', '{', 'componentType', '=', 'getter', '.', 'getGetterRawComponentType', '(', ')', ';', '}', 'if', '(', 'componentType', '==', 'null', ')', '{', 'FieldDescriptor', 'fieldDescriptor', '=', 'getFieldDescriptor', '(', ')', ';', 'if', '(', 'fieldDescriptor', '!=', 'null', ')', '{', 'componentType', '=', 'fieldDescriptor', '.', 'getRawComponentType', '(', ')', ';', '}', '}', 'return', 'componentType', ';', '}']",Resolves component type for given property descriptor.,"['Resolves', 'component', 'type', 'for', 'given', 'property', 'descriptor', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-bean/src/main/java/jodd/introspector/PropertyDescriptor.java#L293-L311,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java,QueryConcept.getNamedEntityTypes,"public StringList getNamedEntityTypes() {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_namedEntityTypes == null)
      jcasType.jcas.throwFeatMissing(""namedEntityTypes"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    return (StringList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_namedEntityTypes)));}",java,"public StringList getNamedEntityTypes() {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_namedEntityTypes == null)
      jcasType.jcas.throwFeatMissing(""namedEntityTypes"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    return (StringList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_namedEntityTypes)));}","['public', 'StringList', 'getNamedEntityTypes', '(', ')', '{', 'if', '(', 'QueryConcept_Type', '.', 'featOkTst', '&&', '(', '(', 'QueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeat_namedEntityTypes', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""namedEntityTypes""', ',', '""edu.cmu.lti.oaqa.type.retrieval.QueryConcept""', ')', ';', 'return', '(', 'StringList', ')', '(', 'jcasType', '.', 'll_cas', '.', 'll_getFSForRef', '(', 'jcasType', '.', 'll_cas', '.', 'll_getRefValue', '(', 'addr', ',', '(', '(', 'QueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeatCode_namedEntityTypes', ')', ')', ')', ';', '}']","getter for namedEntityTypes - gets List of Named Entity types associated with this concept.
@generated
@return value of the feature","['getter', 'for', 'namedEntityTypes', '-', 'gets', 'List', 'of', 'Named', 'Entity', 'types', 'associated', 'with', 'this', 'concept', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java#L75-L78,test
liveontologies/elk-reasoner,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java,AbstractReasonerState.restoreTaxonomy,"protected Taxonomy<ElkClass> restoreTaxonomy()
			throws ElkInconsistentOntologyException, ElkException {

		ruleAndConclusionStats.reset();

		// also restores saturation and cleans the taxonomy if necessary
		restoreConsistencyCheck();
		if (consistencyCheckingState.isInconsistent()) {
			throw new ElkInconsistentOntologyException();
		}

		complete(stageManager.classTaxonomyComputationStage);

		return classTaxonomyState.getTaxonomy();
	}",java,"protected Taxonomy<ElkClass> restoreTaxonomy()
			throws ElkInconsistentOntologyException, ElkException {

		ruleAndConclusionStats.reset();

		// also restores saturation and cleans the taxonomy if necessary
		restoreConsistencyCheck();
		if (consistencyCheckingState.isInconsistent()) {
			throw new ElkInconsistentOntologyException();
		}

		complete(stageManager.classTaxonomyComputationStage);

		return classTaxonomyState.getTaxonomy();
	}","['protected', 'Taxonomy', '<', 'ElkClass', '>', 'restoreTaxonomy', '(', ')', 'throws', 'ElkInconsistentOntologyException', ',', 'ElkException', '{', 'ruleAndConclusionStats', '.', 'reset', '(', ')', ';', '// also restores saturation and cleans the taxonomy if necessary', 'restoreConsistencyCheck', '(', ')', ';', 'if', '(', 'consistencyCheckingState', '.', 'isInconsistent', '(', ')', ')', '{', 'throw', 'new', 'ElkInconsistentOntologyException', '(', ')', ';', '}', 'complete', '(', 'stageManager', '.', 'classTaxonomyComputationStage', ')', ';', 'return', 'classTaxonomyState', '.', 'getTaxonomy', '(', ')', ';', '}']","Complete the taxonomy computation stage and the stages it depends on, if
it has not been done yet.

@return the class taxonomy implied by the current ontology
@throws ElkInconsistentOntologyException
if the ontology is inconsistent
@throws ElkException
if the reasoning process cannot be completed successfully","['Complete', 'the', 'taxonomy', 'computation', 'stage', 'and', 'the', 'stages', 'it', 'depends', 'on', 'if', 'it', 'has', 'not', 'been', 'done', 'yet', '.']",cfbe5279a57e0433d45c1676c7658ddb6e29b9eb,https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java#L507-L521,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java,InterfaceRepository.addClass,"private void addClass(Class cls)
            throws RMIIIOPViolationException, IRConstructionException {
        if (cls.isPrimitive())
            return; // No need to add primitives.

        if (cls.isArray()) {
            // Add array mapping
            addArray(cls);
        } else if (cls.isInterface()) {
            if (!RmiIdlUtil.isAbstractValueType(cls)) {
                // Analyse the interface
                InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

                // Add analyzed interface (which may be abstract)
                addInterface(ia);
            } else {
                // Analyse the value
                ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

                // Add analyzed value
                addValue(va);
            }
        } else if (Exception.class.isAssignableFrom(cls)) { // Exception type.
            // Analyse the exception
            ExceptionAnalysis ea = ExceptionAnalysis.getExceptionAnalysis(cls);

            // Add analyzed exception
            addException(ea);
        } else { // Got to be a value type.
            // Analyse the value
            ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

            // Add analyzed value
            addValue(va);
        }
    }",java,"private void addClass(Class cls)
            throws RMIIIOPViolationException, IRConstructionException {
        if (cls.isPrimitive())
            return; // No need to add primitives.

        if (cls.isArray()) {
            // Add array mapping
            addArray(cls);
        } else if (cls.isInterface()) {
            if (!RmiIdlUtil.isAbstractValueType(cls)) {
                // Analyse the interface
                InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

                // Add analyzed interface (which may be abstract)
                addInterface(ia);
            } else {
                // Analyse the value
                ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

                // Add analyzed value
                addValue(va);
            }
        } else if (Exception.class.isAssignableFrom(cls)) { // Exception type.
            // Analyse the exception
            ExceptionAnalysis ea = ExceptionAnalysis.getExceptionAnalysis(cls);

            // Add analyzed exception
            addException(ea);
        } else { // Got to be a value type.
            // Analyse the value
            ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

            // Add analyzed value
            addValue(va);
        }
    }","['private', 'void', 'addClass', '(', 'Class', 'cls', ')', 'throws', 'RMIIIOPViolationException', ',', 'IRConstructionException', '{', 'if', '(', 'cls', '.', 'isPrimitive', '(', ')', ')', 'return', ';', '// No need to add primitives.', 'if', '(', 'cls', '.', 'isArray', '(', ')', ')', '{', '// Add array mapping', 'addArray', '(', 'cls', ')', ';', '}', 'else', 'if', '(', 'cls', '.', 'isInterface', '(', ')', ')', '{', 'if', '(', '!', 'RmiIdlUtil', '.', 'isAbstractValueType', '(', 'cls', ')', ')', '{', '// Analyse the interface', 'InterfaceAnalysis', 'ia', '=', 'InterfaceAnalysis', '.', 'getInterfaceAnalysis', '(', 'cls', ')', ';', '// Add analyzed interface (which may be abstract)', 'addInterface', '(', 'ia', ')', ';', '}', 'else', '{', '// Analyse the value', 'ValueAnalysis', 'va', '=', 'ValueAnalysis', '.', 'getValueAnalysis', '(', 'cls', ')', ';', '// Add analyzed value', 'addValue', '(', 'va', ')', ';', '}', '}', 'else', 'if', '(', 'Exception', '.', 'class', '.', 'isAssignableFrom', '(', 'cls', ')', ')', '{', '// Exception type.', '// Analyse the exception', 'ExceptionAnalysis', 'ea', '=', 'ExceptionAnalysis', '.', 'getExceptionAnalysis', '(', 'cls', ')', ';', '// Add analyzed exception', 'addException', '(', 'ea', ')', ';', '}', 'else', '{', '// Got to be a value type.', '// Analyse the value', 'ValueAnalysis', 'va', '=', 'ValueAnalysis', '.', 'getValueAnalysis', '(', 'cls', ')', ';', '// Add analyzed value', 'addValue', '(', 'va', ')', ';', '}', '}']",Map the class and add its IIOP mapping to the repository.,"['Map', 'the', 'class', 'and', 'add', 'its', 'IIOP', 'mapping', 'to', 'the', 'repository', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ir/InterfaceRepository.java#L623-L658,test
google/guice,extensions/servlet/src/com/google/inject/servlet/ServletScopes.java,ServletScopes.transferRequest,"public static <T> Callable<T> transferRequest(Callable<T> callable) {
    return wrap(callable, transferRequest());
  }",java,"public static <T> Callable<T> transferRequest(Callable<T> callable) {
    return wrap(callable, transferRequest());
  }","['public', 'static', '<', 'T', '>', 'Callable', '<', 'T', '>', 'transferRequest', '(', 'Callable', '<', 'T', '>', 'callable', ')', '{', 'return', 'wrap', '(', 'callable', ',', 'transferRequest', '(', ')', ')', ';', '}']","Wraps the given callable in a contextual callable that ""transfers"" the request to another
thread. This acts as a way of transporting request context data from the current thread to a
future thread.

<p>As opposed to {@link #continueRequest}, this method propagates all existing scoped objects.
The primary use case is in server implementations where you can detach the request processing
thread while waiting for data, and reattach to a different thread to finish processing at a
later time.

<p>Because request-scoped objects are not typically thread-safe, the callable returned by this
method must not be run on a different thread until the current request scope has terminated.
The returned callable will block until the current thread has released the request scope.

@param callable code to be executed in another thread, which depends on the request scope.
@return a callable that will invoke the given callable, making the request context available to
it.
@throws OutOfScopeException if this method is called from a non-request thread, or if the
request has completed.
@since 4.0","['Wraps', 'the', 'given', 'callable', 'in', 'a', 'contextual', 'callable', 'that', 'transfers', 'the', 'request', 'to', 'another', 'thread', '.', 'This', 'acts', 'as', 'a', 'way', 'of', 'transporting', 'request', 'context', 'data', 'from', 'the', 'current', 'thread', 'to', 'a', 'future', 'thread', '.']",a0552a16d813ead98fe73737fb001db336650251,https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/extensions/servlet/src/com/google/inject/servlet/ServletScopes.java#L265-L267,test
objectify/objectify,src/main/java/com/googlecode/objectify/Ref.java,Ref.create,"public static <T> Ref<T> create(T value) {
		Key<T> key = Key.create(value);
		return create(key);
	}",java,"public static <T> Ref<T> create(T value) {
		Key<T> key = Key.create(value);
		return create(key);
	}","['public', 'static', '<', 'T', '>', 'Ref', '<', 'T', '>', 'create', '(', 'T', 'value', ')', '{', 'Key', '<', 'T', '>', 'key', '=', 'Key', '.', 'create', '(', 'value', ')', ';', 'return', 'create', '(', 'key', ')', ';', '}']",Creates a Ref from a registered pojo entity,"['Creates', 'a', 'Ref', 'from', 'a', 'registered', 'pojo', 'entity']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/Ref.java#L30-L33,test
oblac/jodd,jodd-joy/src/main/java/jodd/joy/page/DbPager.java,DbPager.page,"protected <T> PageData<T> page(String sql, final Map params, final int page, final int pageSize, final String sortColumnName, final boolean ascending, final Class[] target) {
		if (sortColumnName != null) {
			sql = buildOrderSql(sql, sortColumnName, ascending);
		}

		int from = (page - 1) * pageSize;

		String pageSql = buildPageSql(sql, from, pageSize);
		DbSqlBuilder dbsql = sql(pageSql);

		DbOomQuery query = query(dbsql);
		query.setMaxRows(pageSize);
		query.setFetchSize(pageSize);
		query.setMap(params);

		List<T> list = query.list(pageSize, target);
		query.close();

		String countSql = buildCountSql(sql);
		dbsql = sql(countSql);
		query = query(dbsql);
		query.setMap(params);
		long count = query.executeCount();
		query.close();

		return new PageData<>(page, (int) count, pageSize, list);
	}",java,"protected <T> PageData<T> page(String sql, final Map params, final int page, final int pageSize, final String sortColumnName, final boolean ascending, final Class[] target) {
		if (sortColumnName != null) {
			sql = buildOrderSql(sql, sortColumnName, ascending);
		}

		int from = (page - 1) * pageSize;

		String pageSql = buildPageSql(sql, from, pageSize);
		DbSqlBuilder dbsql = sql(pageSql);

		DbOomQuery query = query(dbsql);
		query.setMaxRows(pageSize);
		query.setFetchSize(pageSize);
		query.setMap(params);

		List<T> list = query.list(pageSize, target);
		query.close();

		String countSql = buildCountSql(sql);
		dbsql = sql(countSql);
		query = query(dbsql);
		query.setMap(params);
		long count = query.executeCount();
		query.close();

		return new PageData<>(page, (int) count, pageSize, list);
	}","['protected', '<', 'T', '>', 'PageData', '<', 'T', '>', 'page', '(', 'String', 'sql', ',', 'final', 'Map', 'params', ',', 'final', 'int', 'page', ',', 'final', 'int', 'pageSize', ',', 'final', 'String', 'sortColumnName', ',', 'final', 'boolean', 'ascending', ',', 'final', 'Class', '[', ']', 'target', ')', '{', 'if', '(', 'sortColumnName', '!=', 'null', ')', '{', 'sql', '=', 'buildOrderSql', '(', 'sql', ',', 'sortColumnName', ',', 'ascending', ')', ';', '}', 'int', 'from', '=', '(', 'page', '-', '1', ')', '*', 'pageSize', ';', 'String', 'pageSql', '=', 'buildPageSql', '(', 'sql', ',', 'from', ',', 'pageSize', ')', ';', 'DbSqlBuilder', 'dbsql', '=', 'sql', '(', 'pageSql', ')', ';', 'DbOomQuery', 'query', '=', 'query', '(', 'dbsql', ')', ';', 'query', '.', 'setMaxRows', '(', 'pageSize', ')', ';', 'query', '.', 'setFetchSize', '(', 'pageSize', ')', ';', 'query', '.', 'setMap', '(', 'params', ')', ';', 'List', '<', 'T', '>', 'list', '=', 'query', '.', 'list', '(', 'pageSize', ',', 'target', ')', ';', 'query', '.', 'close', '(', ')', ';', 'String', 'countSql', '=', 'buildCountSql', '(', 'sql', ')', ';', 'dbsql', '=', 'sql', '(', 'countSql', ')', ';', 'query', '=', 'query', '(', 'dbsql', ')', ';', 'query', '.', 'setMap', '(', 'params', ')', ';', 'long', 'count', '=', 'query', '.', 'executeCount', '(', ')', ';', 'query', '.', 'close', '(', ')', ';', 'return', 'new', 'PageData', '<>', '(', 'page', ',', '(', 'int', ')', 'count', ',', 'pageSize', ',', 'list', ')', ';', '}']","Pages given page.

@param sql sql query that lists <b>all</b> items
@param params map of SQL parameters
@param page current page to show
@param pageSize number of items to show
@param sortColumnName name of sorting column, <code>null</code> for no sorting
@param ascending <code>true</code> for ascending order
@param target db entities for mapping (sa usual in DbOom)","['Pages', 'given', 'page', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-joy/src/main/java/jodd/joy/page/DbPager.java#L118-L144,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/classic/net/server/ServerSocketReceiver.java,ServerSocketReceiver.shouldStart,"protected boolean shouldStart() {
    ServerSocket serverSocket = null;
    try {
      serverSocket = getServerSocketFactory().createServerSocket(
          getPort(), getBacklog(), getInetAddress());

      ServerListener<RemoteAppenderClient> listener =
          createServerListener(serverSocket);

      runner = createServerRunner(listener, getContext().getScheduledExecutorService());
      runner.setContext(getContext());
      return true;
    }
    catch (Exception ex) {
      addError(""server startup error: "" + ex, ex);
      CloseUtil.closeQuietly(serverSocket);
      return false;
    }
  }",java,"protected boolean shouldStart() {
    ServerSocket serverSocket = null;
    try {
      serverSocket = getServerSocketFactory().createServerSocket(
          getPort(), getBacklog(), getInetAddress());

      ServerListener<RemoteAppenderClient> listener =
          createServerListener(serverSocket);

      runner = createServerRunner(listener, getContext().getScheduledExecutorService());
      runner.setContext(getContext());
      return true;
    }
    catch (Exception ex) {
      addError(""server startup error: "" + ex, ex);
      CloseUtil.closeQuietly(serverSocket);
      return false;
    }
  }","['protected', 'boolean', 'shouldStart', '(', ')', '{', 'ServerSocket', 'serverSocket', '=', 'null', ';', 'try', '{', 'serverSocket', '=', 'getServerSocketFactory', '(', ')', '.', 'createServerSocket', '(', 'getPort', '(', ')', ',', 'getBacklog', '(', ')', ',', 'getInetAddress', '(', ')', ')', ';', 'ServerListener', '<', 'RemoteAppenderClient', '>', 'listener', '=', 'createServerListener', '(', 'serverSocket', ')', ';', 'runner', '=', 'createServerRunner', '(', 'listener', ',', 'getContext', '(', ')', '.', 'getScheduledExecutorService', '(', ')', ')', ';', 'runner', '.', 'setContext', '(', 'getContext', '(', ')', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'addError', '(', '""server startup error: ""', '+', 'ex', ',', 'ex', ')', ';', 'CloseUtil', '.', 'closeQuietly', '(', 'serverSocket', ')', ';', 'return', 'false', ';', '}', '}']",Starts the server.,"['Starts', 'the', 'server', '.']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/classic/net/server/ServerSocketReceiver.java#L53-L71,test
Unidata/thredds,tdcommon/src/main/java/thredds/server/catalog/tracker/CatalogWatcher.java,CatalogWatcher.processEvents,"public void processEvents() {
    if (!enable) return;

    for (; ; ) {

      // wait for key to be signalled
      WatchKey key;
      try {
        key = watcher.take();
      } catch (InterruptedException x) {
        return;
      }

      Path dir = keys.get(key);
      if (dir == null) {
        System.err.println(""WatchKey not recognized!!"");
        continue;
      }

      for (WatchEvent<?> event : key.pollEvents()) {
        WatchEvent.Kind kind = event.kind();

        // TBD - provide example of how OVERFLOW event is handled
        if (kind == OVERFLOW) {
          continue;
        }

        // Context for directory entry event is the file name of entry
        WatchEvent<Path> ev = cast(event);
        Path name = ev.context();
        Path child = dir.resolve(name);

        // print out event
        System.out.format(""%s: %s%n"", event.kind().name(), child);

        // if directory is created, and watching recursively, then
        // register it and its sub-directories
        if (recursive && (kind == ENTRY_CREATE)) {
          try {
            if (Files.isDirectory(child, NOFOLLOW_LINKS)) {
              registerAll(child);
            }
          } catch (IOException x) {
            // ignore to keep sample readbale
          }
        }
      }

      // reset key and remove from set if directory no longer accessible
      boolean valid = key.reset();
      if (!valid) {
        keys.remove(key);

        // all directories are inaccessible
        if (keys.isEmpty()) {
          break;
        }
      }
    }
  }",java,"public void processEvents() {
    if (!enable) return;

    for (; ; ) {

      // wait for key to be signalled
      WatchKey key;
      try {
        key = watcher.take();
      } catch (InterruptedException x) {
        return;
      }

      Path dir = keys.get(key);
      if (dir == null) {
        System.err.println(""WatchKey not recognized!!"");
        continue;
      }

      for (WatchEvent<?> event : key.pollEvents()) {
        WatchEvent.Kind kind = event.kind();

        // TBD - provide example of how OVERFLOW event is handled
        if (kind == OVERFLOW) {
          continue;
        }

        // Context for directory entry event is the file name of entry
        WatchEvent<Path> ev = cast(event);
        Path name = ev.context();
        Path child = dir.resolve(name);

        // print out event
        System.out.format(""%s: %s%n"", event.kind().name(), child);

        // if directory is created, and watching recursively, then
        // register it and its sub-directories
        if (recursive && (kind == ENTRY_CREATE)) {
          try {
            if (Files.isDirectory(child, NOFOLLOW_LINKS)) {
              registerAll(child);
            }
          } catch (IOException x) {
            // ignore to keep sample readbale
          }
        }
      }

      // reset key and remove from set if directory no longer accessible
      boolean valid = key.reset();
      if (!valid) {
        keys.remove(key);

        // all directories are inaccessible
        if (keys.isEmpty()) {
          break;
        }
      }
    }
  }","['public', 'void', 'processEvents', '(', ')', '{', 'if', '(', '!', 'enable', ')', 'return', ';', 'for', '(', ';', ';', ')', '{', '// wait for key to be signalled', 'WatchKey', 'key', ';', 'try', '{', 'key', '=', 'watcher', '.', 'take', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'x', ')', '{', 'return', ';', '}', 'Path', 'dir', '=', 'keys', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'dir', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""WatchKey not recognized!!""', ')', ';', 'continue', ';', '}', 'for', '(', 'WatchEvent', '<', '?', '>', 'event', ':', 'key', '.', 'pollEvents', '(', ')', ')', '{', 'WatchEvent', '.', 'Kind', 'kind', '=', 'event', '.', 'kind', '(', ')', ';', '// TBD - provide example of how OVERFLOW event is handled', 'if', '(', 'kind', '==', 'OVERFLOW', ')', '{', 'continue', ';', '}', '// Context for directory entry event is the file name of entry', 'WatchEvent', '<', 'Path', '>', 'ev', '=', 'cast', '(', 'event', ')', ';', 'Path', 'name', '=', 'ev', '.', 'context', '(', ')', ';', 'Path', 'child', '=', 'dir', '.', 'resolve', '(', 'name', ')', ';', '// print out event', 'System', '.', 'out', '.', 'format', '(', '""%s: %s%n""', ',', 'event', '.', 'kind', '(', ')', '.', 'name', '(', ')', ',', 'child', ')', ';', '// if directory is created, and watching recursively, then', '// register it and its sub-directories', 'if', '(', 'recursive', '&&', '(', 'kind', '==', 'ENTRY_CREATE', ')', ')', '{', 'try', '{', 'if', '(', 'Files', '.', 'isDirectory', '(', 'child', ',', 'NOFOLLOW_LINKS', ')', ')', '{', 'registerAll', '(', 'child', ')', ';', '}', '}', 'catch', '(', 'IOException', 'x', ')', '{', '// ignore to keep sample readbale', '}', '}', '}', '// reset key and remove from set if directory no longer accessible', 'boolean', 'valid', '=', 'key', '.', 'reset', '(', ')', ';', 'if', '(', '!', 'valid', ')', '{', 'keys', '.', 'remove', '(', 'key', ')', ';', '// all directories are inaccessible', 'if', '(', 'keys', '.', 'isEmpty', '(', ')', ')', '{', 'break', ';', '}', '}', '}', '}']",Process all events for keys queued to the watcher,"['Process', 'all', 'events', 'for', 'keys', 'queued', 'to', 'the', 'watcher']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tdcommon/src/main/java/thredds/server/catalog/tracker/CatalogWatcher.java#L95-L154,test
boonproject/boon,boon/src/main/java/org/boon/core/reflection/MapperSimple.java,MapperSimple.fromMap,"@Override
    public  Object fromMap(Map<String, Object> map) {
        String clazz = (String) map.get( ""class"" );
        Class cls = Reflection.loadClass( clazz );
        return fromMap(map, cls);
    }",java,"@Override
    public  Object fromMap(Map<String, Object> map) {
        String clazz = (String) map.get( ""class"" );
        Class cls = Reflection.loadClass( clazz );
        return fromMap(map, cls);
    }","['@', 'Override', 'public', 'Object', 'fromMap', '(', 'Map', '<', 'String', ',', 'Object', '>', 'map', ')', '{', 'String', 'clazz', '=', '(', 'String', ')', 'map', '.', 'get', '(', '""class""', ')', ';', 'Class', 'cls', '=', 'Reflection', '.', 'loadClass', '(', 'clazz', ')', ';', 'return', 'fromMap', '(', 'map', ',', 'cls', ')', ';', '}']","fromMap converts a map into a Java object.
This version will see if there is a class parameter in the map, and dies if there is not.
@param map map to create the object from.
@return new object","['fromMap', 'converts', 'a', 'map', 'into', 'a', 'Java', 'object', '.', 'This', 'version', 'will', 'see', 'if', 'there', 'is', 'a', 'class', 'parameter', 'in', 'the', 'map', 'and', 'dies', 'if', 'there', 'is', 'not', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/core/reflection/MapperSimple.java#L1477-L1482,test
seedstack/jpa-addon,src/main/java/org/seedstack/jpa/internal/specification/JpaTranslationContext.java,JpaTranslationContext.pickExpression,"@SuppressWarnings(""unchecked"")
    public <E> Expression<E> pickExpression() {
        Preconditions.checkState(this.expression != null, ""No expression has been set"");
        Expression<E> result = (Expression<E>) this.expression;
        expression = null;
        return result;
    }",java,"@SuppressWarnings(""unchecked"")
    public <E> Expression<E> pickExpression() {
        Preconditions.checkState(this.expression != null, ""No expression has been set"");
        Expression<E> result = (Expression<E>) this.expression;
        expression = null;
        return result;
    }","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', '<', 'E', '>', 'Expression', '<', 'E', '>', 'pickExpression', '(', ')', '{', 'Preconditions', '.', 'checkState', '(', 'this', '.', 'expression', '!=', 'null', ',', '""No expression has been set""', ')', ';', 'Expression', '<', 'E', '>', 'result', '=', '(', 'Expression', '<', 'E', '>', ')', 'this', '.', 'expression', ';', 'expression', '=', 'null', ';', 'return', 'result', ';', '}']","Returns the expression currently active in the building context.

@param <E> the type of the expression.
@return the JPA expression.","['Returns', 'the', 'expression', 'currently', 'active', 'in', 'the', 'building', 'context', '.']",7b49f55b0af55d83804ccee68a7211e61dd06482,https://github.com/seedstack/jpa-addon/blob/7b49f55b0af55d83804ccee68a7211e61dd06482/src/main/java/org/seedstack/jpa/internal/specification/JpaTranslationContext.java#L51-L57,test
Unidata/thredds,opendap/src/main/java/opendap/dap/Attribute.java,Attribute.dispatchCheckValue,"private static void dispatchCheckValue(int type, String value)
            throws AttributeBadValueException
    {

        switch (type) {

        case BYTE:
            if(!checkByte(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Byte value."");
            break;

        case INT16:
            if(!checkShort(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an Int16 value."");
            break;

        case UINT16:
            if(!checkUShort(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an UInt16 value."");
            break;

        case INT32:
            if(!checkInt(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an Int32 value."");
            break;

        case UINT32:
            if(!checkUInt(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an UInt32 value."");
            break;

        case FLOAT32:
            if(!checkFloat(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Float32 value."");
            break;

        case FLOAT64:
            if(!checkDouble(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Float64 value."");
            break;

        //    case BOOLEAN:
        //      if(!checkBoolean(value))
        //	throw new AttributeBadValueException(""`"" + value + ""' is not a Boolean value."");
        //      break;

        default:
            // Assume UNKNOWN, CONTAINER, STRING, and URL are okay.
        }
    }",java,"private static void dispatchCheckValue(int type, String value)
            throws AttributeBadValueException
    {

        switch (type) {

        case BYTE:
            if(!checkByte(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Byte value."");
            break;

        case INT16:
            if(!checkShort(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an Int16 value."");
            break;

        case UINT16:
            if(!checkUShort(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an UInt16 value."");
            break;

        case INT32:
            if(!checkInt(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an Int32 value."");
            break;

        case UINT32:
            if(!checkUInt(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not an UInt32 value."");
            break;

        case FLOAT32:
            if(!checkFloat(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Float32 value."");
            break;

        case FLOAT64:
            if(!checkDouble(value))
                throw new AttributeBadValueException(""`"" + value + ""' is not a Float64 value."");
            break;

        //    case BOOLEAN:
        //      if(!checkBoolean(value))
        //	throw new AttributeBadValueException(""`"" + value + ""' is not a Boolean value."");
        //      break;

        default:
            // Assume UNKNOWN, CONTAINER, STRING, and URL are okay.
        }
    }","['private', 'static', 'void', 'dispatchCheckValue', '(', 'int', 'type', ',', 'String', 'value', ')', 'throws', 'AttributeBadValueException', '{', 'switch', '(', 'type', ')', '{', 'case', 'BYTE', ':', 'if', '(', '!', 'checkByte', '(', 'value', ')', ')', 'throw', 'new', 'AttributeBadValueException', '(', '""`""', '+', 'value', '+', '""\' is not a Byte value.""', ')', ';', 'break', ';', 'case', 'INT16', ':', 'if', '(', '!', 'checkShort', '(', 'value', ')', ')', 'throw', 'new', 'AttributeBadValueException', '(', '""`""', '+', 'value', '+', '""\' is not an Int16 value.""', ')', ';', 'break', ';', 'case', 'UINT16', ':', 'if', '(', '!', 'checkUShort', '(', 'value', ')', ')', 'throw', 'new', 'AttributeBadValueException', '(', '""`""', '+', 'value', '+', '""\' is not an UInt16 value.""', ')', ';', 'break', ';', 'case', 'INT32', ':', 'if', '(', '!', 'checkInt', '(', 'value', ')', ')', 'throw', 'new', 'AttributeBadValueException', '(', '""`""', '+', 'value', '+', '""\' is not an Int32 value.""', ')', ';', 'break', ';', 'case', 'UINT32', ':', 'if', '(', '!', 'checkUInt', '(', 'value', ')', ')', 'throw', 'new', 'AttributeBadValueException', '(', '""`""', '+', 'value', '+', '""\' is not an UInt32 value.""', ')', ';', 'break', ';', 'case', 'FLOAT32', ':', 'if', '(', '!', 'checkFloat', '(', 'value', ')', ')', 'throw', 'new', 'AttributeBadValueException', '(', '""`""', '+', 'value', '+', '""\' is not a Float32 value.""', ')', ';', 'break', ';', 'case', 'FLOAT64', ':', 'if', '(', '!', 'checkDouble', '(', 'value', ')', ')', 'throw', 'new', 'AttributeBadValueException', '(', '""`""', '+', 'value', '+', '""\' is not a Float64 value.""', ')', ';', 'break', ';', '//    case BOOLEAN:', '//      if(!checkBoolean(value))', '//\tthrow new AttributeBadValueException(""`"" + value + ""\' is not a Boolean value."");', '//      break;', 'default', ':', '// Assume UNKNOWN, CONTAINER, STRING, and URL are okay.', '}', '}']","Check if the value is legal for a given type.

@param type  the type of the value.
@param value the value <code>String</code>.
@throws AttributeBadValueException if the value is not a legal
member of type","['Check', 'if', 'the', 'value', 'is', 'legal', 'for', 'a', 'given', 'type', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/Attribute.java#L476-L525,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CellControlsUtility.java,CellControlsUtility.populateAttributes,"public static void populateAttributes(final UIComponent component,
			final FacesCell fcell,
			final Map<String, Map<String, String>> defaultControlMap) {

		List<CellFormAttributes> inputAttrs = fcell.getInputAttrs();
		String cname = findComponentNameFromClass(component);
		if (cname == null) {
			return;
		}

		Map<String, String> defaultMap = defaultControlMap.get(cname);
		if (defaultMap == null) {
			defaultMap = new HashMap<>();
			defaultControlMap.put(cname, defaultMap);
		}
		for (Map.Entry<String, String> entry : defaultMap.entrySet()) {
			setObjectProperty(component, entry.getKey(), entry.getValue(),
					true);
		}
		for (CellFormAttributes attr : inputAttrs) {
			String propertyName = attr.getType();
			String propertyValue = attr.getValue();
			if (!defaultMap.containsKey(propertyName)) {
				String defaultValue = getObjectPropertyValue(component,
						propertyName, true);
				defaultMap.put(propertyName, defaultValue);
			}
			setObjectProperty(component, propertyName, propertyValue, true);
		}

	}",java,"public static void populateAttributes(final UIComponent component,
			final FacesCell fcell,
			final Map<String, Map<String, String>> defaultControlMap) {

		List<CellFormAttributes> inputAttrs = fcell.getInputAttrs();
		String cname = findComponentNameFromClass(component);
		if (cname == null) {
			return;
		}

		Map<String, String> defaultMap = defaultControlMap.get(cname);
		if (defaultMap == null) {
			defaultMap = new HashMap<>();
			defaultControlMap.put(cname, defaultMap);
		}
		for (Map.Entry<String, String> entry : defaultMap.entrySet()) {
			setObjectProperty(component, entry.getKey(), entry.getValue(),
					true);
		}
		for (CellFormAttributes attr : inputAttrs) {
			String propertyName = attr.getType();
			String propertyValue = attr.getValue();
			if (!defaultMap.containsKey(propertyName)) {
				String defaultValue = getObjectPropertyValue(component,
						propertyName, true);
				defaultMap.put(propertyName, defaultValue);
			}
			setObjectProperty(component, propertyName, propertyValue, true);
		}

	}","['public', 'static', 'void', 'populateAttributes', '(', 'final', 'UIComponent', 'component', ',', 'final', 'FacesCell', 'fcell', ',', 'final', 'Map', '<', 'String', ',', 'Map', '<', 'String', ',', 'String', '>', '>', 'defaultControlMap', ')', '{', 'List', '<', 'CellFormAttributes', '>', 'inputAttrs', '=', 'fcell', '.', 'getInputAttrs', '(', ')', ';', 'String', 'cname', '=', 'findComponentNameFromClass', '(', 'component', ')', ';', 'if', '(', 'cname', '==', 'null', ')', '{', 'return', ';', '}', 'Map', '<', 'String', ',', 'String', '>', 'defaultMap', '=', 'defaultControlMap', '.', 'get', '(', 'cname', ')', ';', 'if', '(', 'defaultMap', '==', 'null', ')', '{', 'defaultMap', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'defaultControlMap', '.', 'put', '(', 'cname', ',', 'defaultMap', ')', ';', '}', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'String', '>', 'entry', ':', 'defaultMap', '.', 'entrySet', '(', ')', ')', '{', 'setObjectProperty', '(', 'component', ',', 'entry', '.', 'getKey', '(', ')', ',', 'entry', '.', 'getValue', '(', ')', ',', 'true', ')', ';', '}', 'for', '(', 'CellFormAttributes', 'attr', ':', 'inputAttrs', ')', '{', 'String', 'propertyName', '=', 'attr', '.', 'getType', '(', ')', ';', 'String', 'propertyValue', '=', 'attr', '.', 'getValue', '(', ')', ';', 'if', '(', '!', 'defaultMap', '.', 'containsKey', '(', 'propertyName', ')', ')', '{', 'String', 'defaultValue', '=', 'getObjectPropertyValue', '(', 'component', ',', 'propertyName', ',', 'true', ')', ';', 'defaultMap', '.', 'put', '(', 'propertyName', ',', 'defaultValue', ')', ';', '}', 'setObjectProperty', '(', 'component', ',', 'propertyName', ',', 'propertyValue', ',', 'true', ')', ';', '}', '}']","populate attributes.

@param component
component obj.
@param fcell
facescell.
@param defaultControlMap
default control map.","['populate', 'attributes', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CellControlsUtility.java#L223-L253,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/Filterators.java,Filterators.collectIterator,"public static <T> Collection<T> collectIterator(Iterator<T> iterator, Collection<T> targetCollection)
    {
        while (iterator.hasNext())
        {
            targetCollection.add(iterator.next());
        }

        return targetCollection;
    }",java,"public static <T> Collection<T> collectIterator(Iterator<T> iterator, Collection<T> targetCollection)
    {
        while (iterator.hasNext())
        {
            targetCollection.add(iterator.next());
        }

        return targetCollection;
    }","['public', 'static', '<', 'T', '>', 'Collection', '<', 'T', '>', 'collectIterator', '(', 'Iterator', '<', 'T', '>', 'iterator', ',', 'Collection', '<', 'T', '>', 'targetCollection', ')', '{', 'while', '(', 'iterator', '.', 'hasNext', '(', ')', ')', '{', 'targetCollection', '.', 'add', '(', 'iterator', '.', 'next', '(', ')', ')', ';', '}', 'return', 'targetCollection', ';', '}']","Extracts all elements from an iterator, usually created from a filterator, and adds them into the target
collection, returning that collection as the result.

@param  <T>              The type of the iterator and collection to add to.
@param  iterator         The iterator to extract from.
@param  targetCollection The collection to add to.

@return The collection added to.","['Extracts', 'all', 'elements', 'from', 'an', 'iterator', 'usually', 'created', 'from', 'a', 'filterator', 'and', 'adds', 'them', 'into', 'the', 'target', 'collection', 'returning', 'that', 'collection', 'as', 'the', 'result', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/Filterators.java#L43-L51,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java,ByteArrayOutputStream.write,"@Override
    public synchronized void write(int b) {
        int inBufferPos = count - filledBufferSum;
        if (inBufferPos == currentBuffer.length) {
            needNewBuffer(count + 1);
            inBufferPos = 0;
        }
        currentBuffer[inBufferPos] = (byte) b;
        count++;
    }",java,"@Override
    public synchronized void write(int b) {
        int inBufferPos = count - filledBufferSum;
        if (inBufferPos == currentBuffer.length) {
            needNewBuffer(count + 1);
            inBufferPos = 0;
        }
        currentBuffer[inBufferPos] = (byte) b;
        count++;
    }","['@', 'Override', 'public', 'synchronized', 'void', 'write', '(', 'int', 'b', ')', '{', 'int', 'inBufferPos', '=', 'count', '-', 'filledBufferSum', ';', 'if', '(', 'inBufferPos', '==', 'currentBuffer', '.', 'length', ')', '{', 'needNewBuffer', '(', 'count', '+', '1', ')', ';', 'inBufferPos', '=', '0', ';', '}', 'currentBuffer', '[', 'inBufferPos', ']', '=', '(', 'byte', ')', 'b', ';', 'count', '++', ';', '}']","Write a byte to byte array.
@param b the byte to write","['Write', 'a', 'byte', 'to', 'byte', 'array', '.']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java#L165-L174,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/signature/SignatureReader.java,SignatureReader.parseType,"private static int parseType(
      final String signature, final int startOffset, final SignatureVisitor signatureVisitor) {
    int offset = startOffset; // Current offset in the parsed signature.
    char currentChar = signature.charAt(offset++); // The signature character at 'offset'.

    // Switch based on the first character of the JavaTypeSignature, which indicates its kind.
    switch (currentChar) {
      case 'Z':
      case 'C':
      case 'B':
      case 'S':
      case 'I':
      case 'F':
      case 'J':
      case 'D':
      case 'V':
        // Case of a BaseType or a VoidDescriptor.
        signatureVisitor.visitBaseType(currentChar);
        return offset;

      case '[':
        // Case of an ArrayTypeSignature, a '[' followed by a JavaTypeSignature.
        return parseType(signature, offset, signatureVisitor.visitArrayType());

      case 'T':
        // Case of TypeVariableSignature, an identifier between 'T' and ';'.
        int endOffset = signature.indexOf(';', offset);
        signatureVisitor.visitTypeVariable(signature.substring(offset, endOffset));
        return endOffset + 1;

      case 'L':
        // Case of a ClassTypeSignature, which ends with ';'.
        // These signatures have a main class type followed by zero or more inner class types
        // (separated by '.'). Each can have type arguments, inside '<' and '>'.
        int start = offset; // The start offset of the currently parsed main or inner class name.
        boolean visited = false; // Whether the currently parsed class name has been visited.
        boolean inner = false; // Whether we are currently parsing an inner class type.
        // Parses the signature, one character at a time.
        while (true) {
          currentChar = signature.charAt(offset++);
          if (currentChar == '.' || currentChar == ';') {
            // If a '.' or ';' is encountered, this means we have fully parsed the main class name
            // or an inner class name. This name may already have been visited it is was followed by
            // type arguments between '<' and '>'. If not, we need to visit it here.
            if (!visited) {
              String name = signature.substring(start, offset - 1);
              if (inner) {
                signatureVisitor.visitInnerClassType(name);
              } else {
                signatureVisitor.visitClassType(name);
              }
            }
            // If we reached the end of the ClassTypeSignature return, otherwise start the parsing
            // of a new class name, which is necessarily an inner class name.
            if (currentChar == ';') {
              signatureVisitor.visitEnd();
              break;
            }
            start = offset;
            visited = false;
            inner = true;
          } else if (currentChar == '<') {
            // If a '<' is encountered, this means we have fully parsed the main class name or an
            // inner class name, and that we now need to parse TypeArguments. First, we need to
            // visit the parsed class name.
            String name = signature.substring(start, offset - 1);
            if (inner) {
              signatureVisitor.visitInnerClassType(name);
            } else {
              signatureVisitor.visitClassType(name);
            }
            visited = true;
            // Now, parse the TypeArgument(s), one at a time.
            while ((currentChar = signature.charAt(offset)) != '>') {
              switch (currentChar) {
                case '*':
                  // Unbounded TypeArgument.
                  ++offset;
                  signatureVisitor.visitTypeArgument();
                  break;
                case '+':
                case '-':
                  // Extends or Super TypeArgument. Use offset + 1 to skip the '+' or '-'.
                  offset =
                      parseType(
                          signature, offset + 1, signatureVisitor.visitTypeArgument(currentChar));
                  break;
                default:
                  // Instanceof TypeArgument. The '=' is implicit.
                  offset = parseType(signature, offset, signatureVisitor.visitTypeArgument('='));
                  break;
              }
            }
          }
        }
        return offset;

      default:
        throw new IllegalArgumentException();
    }
  }",java,"private static int parseType(
      final String signature, final int startOffset, final SignatureVisitor signatureVisitor) {
    int offset = startOffset; // Current offset in the parsed signature.
    char currentChar = signature.charAt(offset++); // The signature character at 'offset'.

    // Switch based on the first character of the JavaTypeSignature, which indicates its kind.
    switch (currentChar) {
      case 'Z':
      case 'C':
      case 'B':
      case 'S':
      case 'I':
      case 'F':
      case 'J':
      case 'D':
      case 'V':
        // Case of a BaseType or a VoidDescriptor.
        signatureVisitor.visitBaseType(currentChar);
        return offset;

      case '[':
        // Case of an ArrayTypeSignature, a '[' followed by a JavaTypeSignature.
        return parseType(signature, offset, signatureVisitor.visitArrayType());

      case 'T':
        // Case of TypeVariableSignature, an identifier between 'T' and ';'.
        int endOffset = signature.indexOf(';', offset);
        signatureVisitor.visitTypeVariable(signature.substring(offset, endOffset));
        return endOffset + 1;

      case 'L':
        // Case of a ClassTypeSignature, which ends with ';'.
        // These signatures have a main class type followed by zero or more inner class types
        // (separated by '.'). Each can have type arguments, inside '<' and '>'.
        int start = offset; // The start offset of the currently parsed main or inner class name.
        boolean visited = false; // Whether the currently parsed class name has been visited.
        boolean inner = false; // Whether we are currently parsing an inner class type.
        // Parses the signature, one character at a time.
        while (true) {
          currentChar = signature.charAt(offset++);
          if (currentChar == '.' || currentChar == ';') {
            // If a '.' or ';' is encountered, this means we have fully parsed the main class name
            // or an inner class name. This name may already have been visited it is was followed by
            // type arguments between '<' and '>'. If not, we need to visit it here.
            if (!visited) {
              String name = signature.substring(start, offset - 1);
              if (inner) {
                signatureVisitor.visitInnerClassType(name);
              } else {
                signatureVisitor.visitClassType(name);
              }
            }
            // If we reached the end of the ClassTypeSignature return, otherwise start the parsing
            // of a new class name, which is necessarily an inner class name.
            if (currentChar == ';') {
              signatureVisitor.visitEnd();
              break;
            }
            start = offset;
            visited = false;
            inner = true;
          } else if (currentChar == '<') {
            // If a '<' is encountered, this means we have fully parsed the main class name or an
            // inner class name, and that we now need to parse TypeArguments. First, we need to
            // visit the parsed class name.
            String name = signature.substring(start, offset - 1);
            if (inner) {
              signatureVisitor.visitInnerClassType(name);
            } else {
              signatureVisitor.visitClassType(name);
            }
            visited = true;
            // Now, parse the TypeArgument(s), one at a time.
            while ((currentChar = signature.charAt(offset)) != '>') {
              switch (currentChar) {
                case '*':
                  // Unbounded TypeArgument.
                  ++offset;
                  signatureVisitor.visitTypeArgument();
                  break;
                case '+':
                case '-':
                  // Extends or Super TypeArgument. Use offset + 1 to skip the '+' or '-'.
                  offset =
                      parseType(
                          signature, offset + 1, signatureVisitor.visitTypeArgument(currentChar));
                  break;
                default:
                  // Instanceof TypeArgument. The '=' is implicit.
                  offset = parseType(signature, offset, signatureVisitor.visitTypeArgument('='));
                  break;
              }
            }
          }
        }
        return offset;

      default:
        throw new IllegalArgumentException();
    }
  }","['private', 'static', 'int', 'parseType', '(', 'final', 'String', 'signature', ',', 'final', 'int', 'startOffset', ',', 'final', 'SignatureVisitor', 'signatureVisitor', ')', '{', 'int', 'offset', '=', 'startOffset', ';', '// Current offset in the parsed signature.', 'char', 'currentChar', '=', 'signature', '.', 'charAt', '(', 'offset', '++', ')', ';', ""// The signature character at 'offset'."", '// Switch based on the first character of the JavaTypeSignature, which indicates its kind.', 'switch', '(', 'currentChar', ')', '{', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', '// Case of a BaseType or a VoidDescriptor.', 'signatureVisitor', '.', 'visitBaseType', '(', 'currentChar', ')', ';', 'return', 'offset', ';', 'case', ""'"", ""'"", ':', ""// Case of an ArrayTypeSignature, a '[' followed by a JavaTypeSignature."", 'return', 'parseType', '(', 'signature', ',', 'offset', ',', 'signatureVisitor', '.', 'visitArrayType', '(', ')', ')', ';', 'case', ""'"", ""'"", ':', ""// Case of TypeVariableSignature, an identifier between 'T' and ';'."", 'int', 'endOffset', '=', 'signature', '.', 'indexOf', '(', ""'"", ""'"", ',', 'offset', ')', ';', 'signatureVisitor', '.', 'visitTypeVariable', '(', 'signature', '.', 'substring', '(', 'offset', ',', 'endOffset', ')', ')', ';', 'return', 'endOffset', '+', '1', ';', 'case', ""'"", ""'"", ':', ""// Case of a ClassTypeSignature, which ends with ';'."", '// These signatures have a main class type followed by zero or more inner class types', ""// (separated by '.'). Each can have type arguments, inside '<' and '>'."", 'int', 'start', '=', 'offset', ';', '// The start offset of the currently parsed main or inner class name.', 'boolean', 'visited', '=', 'false', ';', '// Whether the currently parsed class name has been visited.', 'boolean', 'inner', '=', 'false', ';', '// Whether we are currently parsing an inner class type.', '// Parses the signature, one character at a time.', 'while', '(', 'true', ')', '{', 'currentChar', '=', 'signature', '.', 'charAt', '(', 'offset', '++', ')', ';', 'if', '(', 'currentChar', '==', ""'"", ""'"", '||', 'currentChar', '==', ""'"", ""'"", ')', '{', ""// If a '.' or ';' is encountered, this means we have fully parsed the main class name"", '// or an inner class name. This name may already have been visited it is was followed by', ""// type arguments between '<' and '>'. If not, we need to visit it here."", 'if', '(', '!', 'visited', ')', '{', 'String', 'name', '=', 'signature', '.', 'substring', '(', 'start', ',', 'offset', '-', '1', ')', ';', 'if', '(', 'inner', ')', '{', 'signatureVisitor', '.', 'visitInnerClassType', '(', 'name', ')', ';', '}', 'else', '{', 'signatureVisitor', '.', 'visitClassType', '(', 'name', ')', ';', '}', '}', '// If we reached the end of the ClassTypeSignature return, otherwise start the parsing', '// of a new class name, which is necessarily an inner class name.', 'if', '(', 'currentChar', '==', ""'"", ""'"", ')', '{', 'signatureVisitor', '.', 'visitEnd', '(', ')', ';', 'break', ';', '}', 'start', '=', 'offset', ';', 'visited', '=', 'false', ';', 'inner', '=', 'true', ';', '}', 'else', 'if', '(', 'currentChar', '==', ""'"", ""'"", ')', '{', ""// If a '<' is encountered, this means we have fully parsed the main class name or an"", '// inner class name, and that we now need to parse TypeArguments. First, we need to', '// visit the parsed class name.', 'String', 'name', '=', 'signature', '.', 'substring', '(', 'start', ',', 'offset', '-', '1', ')', ';', 'if', '(', 'inner', ')', '{', 'signatureVisitor', '.', 'visitInnerClassType', '(', 'name', ')', ';', '}', 'else', '{', 'signatureVisitor', '.', 'visitClassType', '(', 'name', ')', ';', '}', 'visited', '=', 'true', ';', '// Now, parse the TypeArgument(s), one at a time.', 'while', '(', '(', 'currentChar', '=', 'signature', '.', 'charAt', '(', 'offset', ')', ')', '!=', ""'"", ""'"", ')', '{', 'switch', '(', 'currentChar', ')', '{', 'case', ""'"", ""'"", ':', '// Unbounded TypeArgument.', '++', 'offset', ';', 'signatureVisitor', '.', 'visitTypeArgument', '(', ')', ';', 'break', ';', 'case', ""'"", ""'"", ':', 'case', ""'"", ""'"", ':', ""// Extends or Super TypeArgument. Use offset + 1 to skip the '+' or '-'."", 'offset', '=', 'parseType', '(', 'signature', ',', 'offset', '+', '1', ',', 'signatureVisitor', '.', 'visitTypeArgument', '(', 'currentChar', ')', ')', ';', 'break', ';', 'default', ':', ""// Instanceof TypeArgument. The '=' is implicit."", 'offset', '=', 'parseType', '(', 'signature', ',', 'offset', ',', 'signatureVisitor', '.', 'visitTypeArgument', '(', ""'"", ""'"", ')', ')', ';', 'break', ';', '}', '}', '}', '}', 'return', 'offset', ';', 'default', ':', 'throw', 'new', 'IllegalArgumentException', '(', ')', ';', '}', '}']","Parses a JavaTypeSignature and makes the given visitor visit it.

@param signature a string containing the signature that must be parsed.
@param startOffset index of the first character of the signature to parsed.
@param signatureVisitor the visitor that must visit this signature.
@return the index of the first character after the parsed signature.","['Parses', 'a', 'JavaTypeSignature', 'and', 'makes', 'the', 'given', 'visitor', 'visit', 'it', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/signature/SignatureReader.java#L151-L251,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/serialization/OMemoryStream.java,OMemoryStream.fill,"public void fill(final int iLength, final byte iFiller) {
    assureSpaceFor(iLength);
    Arrays.fill(buffer, position, position + iLength, iFiller);
    position += iLength;
  }",java,"public void fill(final int iLength, final byte iFiller) {
    assureSpaceFor(iLength);
    Arrays.fill(buffer, position, position + iLength, iFiller);
    position += iLength;
  }","['public', 'void', 'fill', '(', 'final', 'int', 'iLength', ',', 'final', 'byte', 'iFiller', ')', '{', 'assureSpaceFor', '(', 'iLength', ')', ';', 'Arrays', '.', 'fill', '(', 'buffer', ',', 'position', ',', 'position', '+', 'iLength', ',', 'iFiller', ')', ';', 'position', '+=', 'iLength', ';', '}']","Fills the stream from current position writing iLength times the iFiller byte

@param iLength Bytes to jump
@param iFiller Byte to use to fill the space","['Fills', 'the', 'stream', 'from', 'current', 'position', 'writing', 'iLength', 'times', 'the', 'iFiller', 'byte']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/serialization/OMemoryStream.java#L314-L318,test
GojaFramework/goja,goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java,StreamUtil.copy,"public static void copy(Reader input, OutputStream output, String encoding) throws IOException {
        Writer out = new OutputStreamWriter(output, encoding);
        copy(input, out);
        out.flush();
    }",java,"public static void copy(Reader input, OutputStream output, String encoding) throws IOException {
        Writer out = new OutputStreamWriter(output, encoding);
        copy(input, out);
        out.flush();
    }","['public', 'static', 'void', 'copy', '(', 'Reader', 'input', ',', 'OutputStream', 'output', ',', 'String', 'encoding', ')', 'throws', 'IOException', '{', 'Writer', 'out', '=', 'new', 'OutputStreamWriter', '(', 'output', ',', 'encoding', ')', ';', 'copy', '(', 'input', ',', 'out', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}']",Copies reader to output stream using buffer and specified encoding.,"['Copies', 'reader', 'to', 'output', 'stream', 'using', 'buffer', 'and', 'specified', 'encoding', '.']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/kits/stream/StreamUtil.java#L226-L230,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java,HTMLWriter.writeName,"private void writeName(String uri, String localName, String qName,
                           boolean isElement) throws SAXException {
        String prefix = doPrefix(uri, qName, isElement);
        if (prefix != null && !"""".equals(prefix)) {
            write(prefix);
            write(':');
        }
        if (localName != null && !"""".equals(localName)) {
            write(localName);
        } else {
            int i = qName.indexOf(':');
            write(qName.substring(i + 1, qName.length()));
        }
    }",java,"private void writeName(String uri, String localName, String qName,
                           boolean isElement) throws SAXException {
        String prefix = doPrefix(uri, qName, isElement);
        if (prefix != null && !"""".equals(prefix)) {
            write(prefix);
            write(':');
        }
        if (localName != null && !"""".equals(localName)) {
            write(localName);
        } else {
            int i = qName.indexOf(':');
            write(qName.substring(i + 1, qName.length()));
        }
    }","['private', 'void', 'writeName', '(', 'String', 'uri', ',', 'String', 'localName', ',', 'String', 'qName', ',', 'boolean', 'isElement', ')', 'throws', 'SAXException', '{', 'String', 'prefix', '=', 'doPrefix', '(', 'uri', ',', 'qName', ',', 'isElement', ')', ';', 'if', '(', 'prefix', '!=', 'null', '&&', '!', '""""', '.', 'equals', '(', 'prefix', ')', ')', '{', 'write', '(', 'prefix', ')', ';', 'write', '(', ""'"", ""'"", ')', ';', '}', 'if', '(', 'localName', '!=', 'null', '&&', '!', '""""', '.', 'equals', '(', 'localName', ')', ')', '{', 'write', '(', 'localName', ')', ';', '}', 'else', '{', 'int', 'i', '=', 'qName', '.', 'indexOf', '(', ""'"", ""'"", ')', ';', 'write', '(', 'qName', '.', 'substring', '(', 'i', '+', '1', ',', 'qName', '.', 'length', '(', ')', ')', ')', ';', '}', '}']","Write an element or attribute name.

@param uri       The Namespace URI.
@param localName The local name.
@param qName     The prefixed name, if available, or the empty string.
@param isElement true if this is an element name, false if it is an attribute
name.
@throws org.xml.sax.SAXException This method will throw an IOException wrapped in a
SAXException if there is an error writing the name.","['Write', 'an', 'element', 'or', 'attribute', 'name', '.']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java#L979-L992,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/user/TileDao.java,TileDao.getBoundingBox,"public BoundingBox getBoundingBox(long zoomLevel) {
        BoundingBox boundingBox = null;
        TileMatrix tileMatrix = getTileMatrix(zoomLevel);
        if (tileMatrix != null) {
            TileGrid tileGrid = queryForTileGrid(zoomLevel);
            if (tileGrid != null) {
                BoundingBox matrixSetBoundingBox = getBoundingBox();
                boundingBox = TileBoundingBoxUtils.getBoundingBox(
                        matrixSetBoundingBox, tileMatrix, tileGrid);
            }

        }
        return boundingBox;
    }",java,"public BoundingBox getBoundingBox(long zoomLevel) {
        BoundingBox boundingBox = null;
        TileMatrix tileMatrix = getTileMatrix(zoomLevel);
        if (tileMatrix != null) {
            TileGrid tileGrid = queryForTileGrid(zoomLevel);
            if (tileGrid != null) {
                BoundingBox matrixSetBoundingBox = getBoundingBox();
                boundingBox = TileBoundingBoxUtils.getBoundingBox(
                        matrixSetBoundingBox, tileMatrix, tileGrid);
            }

        }
        return boundingBox;
    }","['public', 'BoundingBox', 'getBoundingBox', '(', 'long', 'zoomLevel', ')', '{', 'BoundingBox', 'boundingBox', '=', 'null', ';', 'TileMatrix', 'tileMatrix', '=', 'getTileMatrix', '(', 'zoomLevel', ')', ';', 'if', '(', 'tileMatrix', '!=', 'null', ')', '{', 'TileGrid', 'tileGrid', '=', 'queryForTileGrid', '(', 'zoomLevel', ')', ';', 'if', '(', 'tileGrid', '!=', 'null', ')', '{', 'BoundingBox', 'matrixSetBoundingBox', '=', 'getBoundingBox', '(', ')', ';', 'boundingBox', '=', 'TileBoundingBoxUtils', '.', 'getBoundingBox', '(', 'matrixSetBoundingBox', ',', 'tileMatrix', ',', 'tileGrid', ')', ';', '}', '}', 'return', 'boundingBox', ';', '}']","Get the bounding box of tiles

@param zoomLevel zoom level
@return bounding box of zoom level, or null if no tiles
@since 1.1.1","['Get', 'the', 'bounding', 'box', 'of', 'tiles']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/user/TileDao.java#L147-L160,test
nyla-solutions/gedi-geode,gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/client/GemFireJmxClient.java,GemFireJmxClient.getPoolForServer,"public static synchronized Pool getPoolForServer(String serverName, JMX jmx)
	throws InstanceNotFoundException
	{
		Pool pool = PoolManager.find(serverName);
		
		if(pool != null)
			return pool;
		
		PoolFactory poolFactory = PoolManager.createFactory();
		
		//LogWriter logWriter = getClientCache(jmx).getLogger();
		
		try
		{
			//get host name
			//ex: object GemFire:type=Member,member=server_1
			ObjectName objectName = new ObjectName(new StringBuilder(""GemFire:type=Member,member="").append(serverName).toString());
			
			String host =  jmx.getAttribute(objectName, ""Host"");
			
			if(host == null || host.length() == 0)
				throw new IllegalArgumentException(""host not found for serverName:""+serverName+"" not found"");
			
		    host = lookupNetworkHost(host);
		    
		    
				String findJmxPort = new StringBuilder(""GemFire:service=CacheServer,port=*,type=Member,member="")
			.append(serverName).toString();
			
			//search ObjectNames
			Set<ObjectName> objectNames = jmx.searchObjectNames(findJmxPort);
			
			if(objectNames == null || objectNames.isEmpty())
				throw new IllegalArgumentException(""Unable to to find port with server name:""+serverName);
			
			ObjectName portObjectName  = objectNames.iterator().next();
			Integer port = jmx.getAttribute(portObjectName, ""Port"");
			
			
			if(port == null)
				throw new IllegalArgumentException(""Unable to obtain port for objectName:""+portObjectName+"" for server:""+serverName);
			
			System.out.println(""Found cache server host""+host+"" port:""+port);
			
			poolFactory= poolFactory.addServer(host, port.intValue());
			
			return poolFactory.create(serverName);
		}
		catch(InstanceNotFoundException e)
		{
			throw e;
		}
		catch (Exception e)
		{
			throw new RuntimeException(""Unable to create pool for servername:""+serverName+"" error:""+e.getMessage(),e);
		}
		
	}",java,"public static synchronized Pool getPoolForServer(String serverName, JMX jmx)
	throws InstanceNotFoundException
	{
		Pool pool = PoolManager.find(serverName);
		
		if(pool != null)
			return pool;
		
		PoolFactory poolFactory = PoolManager.createFactory();
		
		//LogWriter logWriter = getClientCache(jmx).getLogger();
		
		try
		{
			//get host name
			//ex: object GemFire:type=Member,member=server_1
			ObjectName objectName = new ObjectName(new StringBuilder(""GemFire:type=Member,member="").append(serverName).toString());
			
			String host =  jmx.getAttribute(objectName, ""Host"");
			
			if(host == null || host.length() == 0)
				throw new IllegalArgumentException(""host not found for serverName:""+serverName+"" not found"");
			
		    host = lookupNetworkHost(host);
		    
		    
				String findJmxPort = new StringBuilder(""GemFire:service=CacheServer,port=*,type=Member,member="")
			.append(serverName).toString();
			
			//search ObjectNames
			Set<ObjectName> objectNames = jmx.searchObjectNames(findJmxPort);
			
			if(objectNames == null || objectNames.isEmpty())
				throw new IllegalArgumentException(""Unable to to find port with server name:""+serverName);
			
			ObjectName portObjectName  = objectNames.iterator().next();
			Integer port = jmx.getAttribute(portObjectName, ""Port"");
			
			
			if(port == null)
				throw new IllegalArgumentException(""Unable to obtain port for objectName:""+portObjectName+"" for server:""+serverName);
			
			System.out.println(""Found cache server host""+host+"" port:""+port);
			
			poolFactory= poolFactory.addServer(host, port.intValue());
			
			return poolFactory.create(serverName);
		}
		catch(InstanceNotFoundException e)
		{
			throw e;
		}
		catch (Exception e)
		{
			throw new RuntimeException(""Unable to create pool for servername:""+serverName+"" error:""+e.getMessage(),e);
		}
		
	}","['public', 'static', 'synchronized', 'Pool', 'getPoolForServer', '(', 'String', 'serverName', ',', 'JMX', 'jmx', ')', 'throws', 'InstanceNotFoundException', '{', 'Pool', 'pool', '=', 'PoolManager', '.', 'find', '(', 'serverName', ')', ';', 'if', '(', 'pool', '!=', 'null', ')', 'return', 'pool', ';', 'PoolFactory', 'poolFactory', '=', 'PoolManager', '.', 'createFactory', '(', ')', ';', '//LogWriter logWriter = getClientCache(jmx).getLogger();', 'try', '{', '//get host name', '//ex: object GemFire:type=Member,member=server_1', 'ObjectName', 'objectName', '=', 'new', 'ObjectName', '(', 'new', 'StringBuilder', '(', '""GemFire:type=Member,member=""', ')', '.', 'append', '(', 'serverName', ')', '.', 'toString', '(', ')', ')', ';', 'String', 'host', '=', 'jmx', '.', 'getAttribute', '(', 'objectName', ',', '""Host""', ')', ';', 'if', '(', 'host', '==', 'null', '||', 'host', '.', 'length', '(', ')', '==', '0', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""host not found for serverName:""', '+', 'serverName', '+', '"" not found""', ')', ';', 'host', '=', 'lookupNetworkHost', '(', 'host', ')', ';', 'String', 'findJmxPort', '=', 'new', 'StringBuilder', '(', '""GemFire:service=CacheServer,port=*,type=Member,member=""', ')', '.', 'append', '(', 'serverName', ')', '.', 'toString', '(', ')', ';', '//search ObjectNames', 'Set', '<', 'ObjectName', '>', 'objectNames', '=', 'jmx', '.', 'searchObjectNames', '(', 'findJmxPort', ')', ';', 'if', '(', 'objectNames', '==', 'null', '||', 'objectNames', '.', 'isEmpty', '(', ')', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""Unable to to find port with server name:""', '+', 'serverName', ')', ';', 'ObjectName', 'portObjectName', '=', 'objectNames', '.', 'iterator', '(', ')', '.', 'next', '(', ')', ';', 'Integer', 'port', '=', 'jmx', '.', 'getAttribute', '(', 'portObjectName', ',', '""Port""', ')', ';', 'if', '(', 'port', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""Unable to obtain port for objectName:""', '+', 'portObjectName', '+', '"" for server:""', '+', 'serverName', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Found cache server host""', '+', 'host', '+', '"" port:""', '+', 'port', ')', ';', 'poolFactory', '=', 'poolFactory', '.', 'addServer', '(', 'host', ',', 'port', '.', 'intValue', '(', ')', ')', ';', 'return', 'poolFactory', '.', 'create', '(', 'serverName', ')', ';', '}', 'catch', '(', 'InstanceNotFoundException', 'e', ')', '{', 'throw', 'e', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Unable to create pool for servername:""', '+', 'serverName', '+', '"" error:""', '+', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}']","Dynamically create a GemFire pool with just the server
@param serverName the server name to create a pool for
@param jmx the JMX connection
@return the pool with the server name and its host/port configured
@throws InstanceNotFoundException when the server name does not exist","['Dynamically', 'create', 'a', 'GemFire', 'pool', 'with', 'just', 'the', 'server']",3dd71d6e66e941ce350b306b70677ee95a7d9eee,https://github.com/nyla-solutions/gedi-geode/blob/3dd71d6e66e941ce350b306b70677ee95a7d9eee/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/client/GemFireJmxClient.java#L167-L224,test
OpenEstate/OpenEstate-IO,Filemaker/src/main/jaxb/org/openestate/io/filemaker/xml/result/ResultSetType.java,ResultSetType.getROW,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:42:33+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<ResultSetType.ROW> getROW() {
        if (row == null) {
            row = new ArrayList<ResultSetType.ROW>();
        }
        return this.row;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:42:33+02:00"", comments = ""JAXB RI v2.2.11"")
    public List<ResultSetType.ROW> getROW() {
        if (row == null) {
            row = new ArrayList<ResultSetType.ROW>();
        }
        return this.row;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:42:33+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'List', '<', 'ResultSetType', '.', 'ROW', '>', 'getROW', '(', ')', '{', 'if', '(', 'row', '==', 'null', ')', '{', 'row', '=', 'new', 'ArrayList', '<', 'ResultSetType', '.', 'ROW', '>', '(', ')', ';', '}', 'return', 'this', '.', 'row', ';', '}']","Gets the value of the row property.

<p>
This accessor method returns a reference to the live list,
not a snapshot. Therefore any modification you make to the
returned list will be present inside the JAXB object.
This is why there is not a <CODE>set</CODE> method for the row property.

<p>
For example, to add a new item, do as follows:
<pre>
getROW().add(newItem);
</pre>


<p>
Objects of the following type(s) are allowed in the list
{@link ResultSetType.ROW }","['Gets', 'the', 'value', 'of', 'the', 'row', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Filemaker/src/main/jaxb/org/openestate/io/filemaker/xml/result/ResultSetType.java#L108-L114,test
artclarke/humble-video,humble-video-demos/src/main/java/io/humble/video/demos/DecodeAndPlayAudio.java,DecodeAndPlayAudio.playSound,"private static void playSound(String filename) throws InterruptedException, IOException, LineUnavailableException {
    /*
     * Start by creating a container object, in this case a demuxer since
     * we are reading, to get audio data from.
     */
    Demuxer demuxer = Demuxer.make();

    /*
     * Open the demuxer with the filename passed on.
     */
    demuxer.open(filename, null, false, true, null, null);

    /*
     * Query how many streams the call to open found
     */
    int numStreams = demuxer.getNumStreams();

    /*
     * Iterate through the streams to find the first audio stream
     */
    int audioStreamId = -1;
    Decoder audioDecoder = null;
    for(int i = 0; i < numStreams; i++)
    {
      final DemuxerStream stream = demuxer.getStream(i);
      final Decoder decoder = stream.getDecoder();
      if (decoder != null && decoder.getCodecType() == MediaDescriptor.Type.MEDIA_AUDIO) {
        audioStreamId = i;
        audioDecoder = decoder;
        // stop at the first one.
        break;
      }
    }
    if (audioStreamId == -1)
      throw new RuntimeException(""could not find audio stream in container: ""+filename);

    /*
     * Now we have found the audio stream in this file.  Let's open up our decoder so it can
     * do work.
     */
    audioDecoder.open(null, null);

    /*
     * We allocate a set of samples with the same number of channels as the
     * coder tells us is in this buffer.
     */
    final MediaAudio samples = MediaAudio.make(
        audioDecoder.getFrameSize(),
        audioDecoder.getSampleRate(),
        audioDecoder.getChannels(),
        audioDecoder.getChannelLayout(),
        audioDecoder.getSampleFormat());

    /*
     * A converter object we'll use to convert Humble Audio to a format that
     * Java Audio can actually play. The details are complicated, but essentially
     * this converts any audio format (represented in the samples object) into
     * a default audio format suitable for Java's speaker system (which will
     * be signed 16-bit audio, stereo (2-channels), resampled to 22,050 samples
     * per second).
     */
    
    final MediaAudioConverter converter =
        MediaAudioConverterFactory.createConverter(
            MediaAudioConverterFactory.DEFAULT_JAVA_AUDIO,
            samples);

    /*
     * An AudioFrame is a wrapper for the Java Sound system that abstracts away
     * some stuff. Go read the source code if you want -- it's not very complicated.
     */
    final AudioFrame audioFrame = AudioFrame.make(converter.getJavaFormat());
    if (audioFrame == null)
      throw new LineUnavailableException();

    /* We will use this to cache the raw-audio we pass to and from
     * the java sound system.
     */
    ByteBuffer rawAudio = null;

    /*
     * Now, we start walking through the container looking at each packet. This
     * is a decoding loop, and as you work with Humble you'll write a lot
     * of these.
     * 
     * Notice how in this loop we reuse all of our objects to avoid
     * reallocating them. Each call to Humble resets objects to avoid
     * unnecessary reallocation.
     */
    final MediaPacket packet = MediaPacket.make();
    while(demuxer.read(packet) >= 0) {
      /*
       * Now we have a packet, let's see if it belongs to our audio stream
       */
      if (packet.getStreamIndex() == audioStreamId)
      {
        /*
         * A packet can actually contain multiple sets of samples (or frames of samples
         * in audio-decoding speak).  So, we may need to call decode audio multiple
         * times at different offsets in the packet's data.  We capture that here.
         */
        int offset = 0;
        int bytesRead = 0;
        do {
          bytesRead += audioDecoder.decode(samples, packet, offset);
          if (samples.isComplete()) {
            rawAudio = converter.toJavaAudio(rawAudio, samples);
            audioFrame.play(rawAudio);
          }
          offset += bytesRead;
        } while (offset < packet.getSize());
      }
    }

    // Some audio decoders (especially advanced ones) will cache
    // audio data before they begin decoding, so when you are done you need
    // to flush them. The convention to flush Encoders or Decoders in Humble Video
    // is to keep passing in null until incomplete samples or packets are returned.
    do {
      audioDecoder.decode(samples, null, 0);
      if (samples.isComplete()) {
        rawAudio = converter.toJavaAudio(rawAudio, samples);
        audioFrame.play(rawAudio);
      }
    } while (samples.isComplete());
    
    // It is good practice to close demuxers when you're done to free
    // up file handles. Humble will EVENTUALLY detect if nothing else
    // references this demuxer and close it then, but get in the habit
    // of cleaning up after yourself, and your future girlfriend/boyfriend
    // will appreciate it.
    demuxer.close();
    
    // similar with the demuxer, for the audio playback stuff, clean up after yourself.
    audioFrame.dispose();
  }",java,"private static void playSound(String filename) throws InterruptedException, IOException, LineUnavailableException {
    /*
     * Start by creating a container object, in this case a demuxer since
     * we are reading, to get audio data from.
     */
    Demuxer demuxer = Demuxer.make();

    /*
     * Open the demuxer with the filename passed on.
     */
    demuxer.open(filename, null, false, true, null, null);

    /*
     * Query how many streams the call to open found
     */
    int numStreams = demuxer.getNumStreams();

    /*
     * Iterate through the streams to find the first audio stream
     */
    int audioStreamId = -1;
    Decoder audioDecoder = null;
    for(int i = 0; i < numStreams; i++)
    {
      final DemuxerStream stream = demuxer.getStream(i);
      final Decoder decoder = stream.getDecoder();
      if (decoder != null && decoder.getCodecType() == MediaDescriptor.Type.MEDIA_AUDIO) {
        audioStreamId = i;
        audioDecoder = decoder;
        // stop at the first one.
        break;
      }
    }
    if (audioStreamId == -1)
      throw new RuntimeException(""could not find audio stream in container: ""+filename);

    /*
     * Now we have found the audio stream in this file.  Let's open up our decoder so it can
     * do work.
     */
    audioDecoder.open(null, null);

    /*
     * We allocate a set of samples with the same number of channels as the
     * coder tells us is in this buffer.
     */
    final MediaAudio samples = MediaAudio.make(
        audioDecoder.getFrameSize(),
        audioDecoder.getSampleRate(),
        audioDecoder.getChannels(),
        audioDecoder.getChannelLayout(),
        audioDecoder.getSampleFormat());

    /*
     * A converter object we'll use to convert Humble Audio to a format that
     * Java Audio can actually play. The details are complicated, but essentially
     * this converts any audio format (represented in the samples object) into
     * a default audio format suitable for Java's speaker system (which will
     * be signed 16-bit audio, stereo (2-channels), resampled to 22,050 samples
     * per second).
     */
    
    final MediaAudioConverter converter =
        MediaAudioConverterFactory.createConverter(
            MediaAudioConverterFactory.DEFAULT_JAVA_AUDIO,
            samples);

    /*
     * An AudioFrame is a wrapper for the Java Sound system that abstracts away
     * some stuff. Go read the source code if you want -- it's not very complicated.
     */
    final AudioFrame audioFrame = AudioFrame.make(converter.getJavaFormat());
    if (audioFrame == null)
      throw new LineUnavailableException();

    /* We will use this to cache the raw-audio we pass to and from
     * the java sound system.
     */
    ByteBuffer rawAudio = null;

    /*
     * Now, we start walking through the container looking at each packet. This
     * is a decoding loop, and as you work with Humble you'll write a lot
     * of these.
     * 
     * Notice how in this loop we reuse all of our objects to avoid
     * reallocating them. Each call to Humble resets objects to avoid
     * unnecessary reallocation.
     */
    final MediaPacket packet = MediaPacket.make();
    while(demuxer.read(packet) >= 0) {
      /*
       * Now we have a packet, let's see if it belongs to our audio stream
       */
      if (packet.getStreamIndex() == audioStreamId)
      {
        /*
         * A packet can actually contain multiple sets of samples (or frames of samples
         * in audio-decoding speak).  So, we may need to call decode audio multiple
         * times at different offsets in the packet's data.  We capture that here.
         */
        int offset = 0;
        int bytesRead = 0;
        do {
          bytesRead += audioDecoder.decode(samples, packet, offset);
          if (samples.isComplete()) {
            rawAudio = converter.toJavaAudio(rawAudio, samples);
            audioFrame.play(rawAudio);
          }
          offset += bytesRead;
        } while (offset < packet.getSize());
      }
    }

    // Some audio decoders (especially advanced ones) will cache
    // audio data before they begin decoding, so when you are done you need
    // to flush them. The convention to flush Encoders or Decoders in Humble Video
    // is to keep passing in null until incomplete samples or packets are returned.
    do {
      audioDecoder.decode(samples, null, 0);
      if (samples.isComplete()) {
        rawAudio = converter.toJavaAudio(rawAudio, samples);
        audioFrame.play(rawAudio);
      }
    } while (samples.isComplete());
    
    // It is good practice to close demuxers when you're done to free
    // up file handles. Humble will EVENTUALLY detect if nothing else
    // references this demuxer and close it then, but get in the habit
    // of cleaning up after yourself, and your future girlfriend/boyfriend
    // will appreciate it.
    demuxer.close();
    
    // similar with the demuxer, for the audio playback stuff, clean up after yourself.
    audioFrame.dispose();
  }","['private', 'static', 'void', 'playSound', '(', 'String', 'filename', ')', 'throws', 'InterruptedException', ',', 'IOException', ',', 'LineUnavailableException', '{', '/*\n     * Start by creating a container object, in this case a demuxer since\n     * we are reading, to get audio data from.\n     */', 'Demuxer', 'demuxer', '=', 'Demuxer', '.', 'make', '(', ')', ';', '/*\n     * Open the demuxer with the filename passed on.\n     */', 'demuxer', '.', 'open', '(', 'filename', ',', 'null', ',', 'false', ',', 'true', ',', 'null', ',', 'null', ')', ';', '/*\n     * Query how many streams the call to open found\n     */', 'int', 'numStreams', '=', 'demuxer', '.', 'getNumStreams', '(', ')', ';', '/*\n     * Iterate through the streams to find the first audio stream\n     */', 'int', 'audioStreamId', '=', '-', '1', ';', 'Decoder', 'audioDecoder', '=', 'null', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numStreams', ';', 'i', '++', ')', '{', 'final', 'DemuxerStream', 'stream', '=', 'demuxer', '.', 'getStream', '(', 'i', ')', ';', 'final', 'Decoder', 'decoder', '=', 'stream', '.', 'getDecoder', '(', ')', ';', 'if', '(', 'decoder', '!=', 'null', '&&', 'decoder', '.', 'getCodecType', '(', ')', '==', 'MediaDescriptor', '.', 'Type', '.', 'MEDIA_AUDIO', ')', '{', 'audioStreamId', '=', 'i', ';', 'audioDecoder', '=', 'decoder', ';', '// stop at the first one.', 'break', ';', '}', '}', 'if', '(', 'audioStreamId', '==', '-', '1', ')', 'throw', 'new', 'RuntimeException', '(', '""could not find audio stream in container: ""', '+', 'filename', ')', ';', ""/*\n     * Now we have found the audio stream in this file.  Let's open up our decoder so it can\n     * do work.\n     */"", 'audioDecoder', '.', 'open', '(', 'null', ',', 'null', ')', ';', '/*\n     * We allocate a set of samples with the same number of channels as the\n     * coder tells us is in this buffer.\n     */', 'final', 'MediaAudio', 'samples', '=', 'MediaAudio', '.', 'make', '(', 'audioDecoder', '.', 'getFrameSize', '(', ')', ',', 'audioDecoder', '.', 'getSampleRate', '(', ')', ',', 'audioDecoder', '.', 'getChannels', '(', ')', ',', 'audioDecoder', '.', 'getChannelLayout', '(', ')', ',', 'audioDecoder', '.', 'getSampleFormat', '(', ')', ')', ';', ""/*\n     * A converter object we'll use to convert Humble Audio to a format that\n     * Java Audio can actually play. The details are complicated, but essentially\n     * this converts any audio format (represented in the samples object) into\n     * a default audio format suitable for Java's speaker system (which will\n     * be signed 16-bit audio, stereo (2-channels), resampled to 22,050 samples\n     * per second).\n     */"", 'final', 'MediaAudioConverter', 'converter', '=', 'MediaAudioConverterFactory', '.', 'createConverter', '(', 'MediaAudioConverterFactory', '.', 'DEFAULT_JAVA_AUDIO', ',', 'samples', ')', ';', ""/*\n     * An AudioFrame is a wrapper for the Java Sound system that abstracts away\n     * some stuff. Go read the source code if you want -- it's not very complicated.\n     */"", 'final', 'AudioFrame', 'audioFrame', '=', 'AudioFrame', '.', 'make', '(', 'converter', '.', 'getJavaFormat', '(', ')', ')', ';', 'if', '(', 'audioFrame', '==', 'null', ')', 'throw', 'new', 'LineUnavailableException', '(', ')', ';', '/* We will use this to cache the raw-audio we pass to and from\n     * the java sound system.\n     */', 'ByteBuffer', 'rawAudio', '=', 'null', ';', ""/*\n     * Now, we start walking through the container looking at each packet. This\n     * is a decoding loop, and as you work with Humble you'll write a lot\n     * of these.\n     * \n     * Notice how in this loop we reuse all of our objects to avoid\n     * reallocating them. Each call to Humble resets objects to avoid\n     * unnecessary reallocation.\n     */"", 'final', 'MediaPacket', 'packet', '=', 'MediaPacket', '.', 'make', '(', ')', ';', 'while', '(', 'demuxer', '.', 'read', '(', 'packet', ')', '>=', '0', ')', '{', ""/*\n       * Now we have a packet, let's see if it belongs to our audio stream\n       */"", 'if', '(', 'packet', '.', 'getStreamIndex', '(', ')', '==', 'audioStreamId', ')', '{', ""/*\n         * A packet can actually contain multiple sets of samples (or frames of samples\n         * in audio-decoding speak).  So, we may need to call decode audio multiple\n         * times at different offsets in the packet's data.  We capture that here.\n         */"", 'int', 'offset', '=', '0', ';', 'int', 'bytesRead', '=', '0', ';', 'do', '{', 'bytesRead', '+=', 'audioDecoder', '.', 'decode', '(', 'samples', ',', 'packet', ',', 'offset', ')', ';', 'if', '(', 'samples', '.', 'isComplete', '(', ')', ')', '{', 'rawAudio', '=', 'converter', '.', 'toJavaAudio', '(', 'rawAudio', ',', 'samples', ')', ';', 'audioFrame', '.', 'play', '(', 'rawAudio', ')', ';', '}', 'offset', '+=', 'bytesRead', ';', '}', 'while', '(', 'offset', '<', 'packet', '.', 'getSize', '(', ')', ')', ';', '}', '}', '// Some audio decoders (especially advanced ones) will cache', '// audio data before they begin decoding, so when you are done you need', '// to flush them. The convention to flush Encoders or Decoders in Humble Video', '// is to keep passing in null until incomplete samples or packets are returned.', 'do', '{', 'audioDecoder', '.', 'decode', '(', 'samples', ',', 'null', ',', '0', ')', ';', 'if', '(', 'samples', '.', 'isComplete', '(', ')', ')', '{', 'rawAudio', '=', 'converter', '.', 'toJavaAudio', '(', 'rawAudio', ',', 'samples', ')', ';', 'audioFrame', '.', 'play', '(', 'rawAudio', ')', ';', '}', '}', 'while', '(', 'samples', '.', 'isComplete', '(', ')', ')', ';', ""// It is good practice to close demuxers when you're done to free"", '// up file handles. Humble will EVENTUALLY detect if nothing else', '// references this demuxer and close it then, but get in the habit', '// of cleaning up after yourself, and your future girlfriend/boyfriend', '// will appreciate it.', 'demuxer', '.', 'close', '(', ')', ';', '// similar with the demuxer, for the audio playback stuff, clean up after yourself.', 'audioFrame', '.', 'dispose', '(', ')', ';', '}']","Opens a file, and plays the audio from it on the speakers.
@param filename The file or URL to play.
@throws LineUnavailableException","['Opens', 'a', 'file', 'and', 'plays', 'the', 'audio', 'from', 'it', 'on', 'the', 'speakers', '.']",aa349ae2d7ef74160b7074feac8d298cf90394d1,https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-demos/src/main/java/io/humble/video/demos/DecodeAndPlayAudio.java#L72-L207,test
oblac/jodd,jodd-core/src/main/java/jodd/util/StringBand.java,StringBand.calculateLength,"protected int calculateLength() {
		int len = 0;
		for (int i = 0; i < index; i++) {
			len += array[i].length();
		}
		return len;
	}",java,"protected int calculateLength() {
		int len = 0;
		for (int i = 0; i < index; i++) {
			len += array[i].length();
		}
		return len;
	}","['protected', 'int', 'calculateLength', '(', ')', '{', 'int', 'len', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'index', ';', 'i', '++', ')', '{', 'len', '+=', 'array', '[', 'i', ']', '.', 'length', '(', ')', ';', '}', 'return', 'len', ';', '}']",Calculates string length.,"['Calculates', 'string', 'length', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/StringBand.java#L286-L292,test
rest-assured/rest-assured,rest-assured/src/main/java/io/restassured/builder/RequestSpecBuilder.java,RequestSpecBuilder.addParam,"public RequestSpecBuilder addParam(String parameterName, Object... parameterValues) {
        spec.param(parameterName, parameterValues);
        return this;
    }",java,"public RequestSpecBuilder addParam(String parameterName, Object... parameterValues) {
        spec.param(parameterName, parameterValues);
        return this;
    }","['public', 'RequestSpecBuilder', 'addParam', '(', 'String', 'parameterName', ',', 'Object', '...', 'parameterValues', ')', '{', 'spec', '.', 'param', '(', 'parameterName', ',', 'parameterValues', ')', ';', 'return', 'this', ';', '}']","Add a parameter to be sent with the request.

@param parameterName   The parameter name
@param parameterValues Zero to many parameter values for this parameter name.
@return The request specification builder","['Add', 'a', 'parameter', 'to', 'be', 'sent', 'with', 'the', 'request', '.']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/builder/RequestSpecBuilder.java#L261-L264,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataTiff.java,CoverageDataTiff.setPixelValue,"public void setPixelValue(CoverageDataTiffImage image, int x, int y,
                              float pixelValue) {
        image.getRasters().setFirstPixelSample(x, y, pixelValue);
    }",java,"public void setPixelValue(CoverageDataTiffImage image, int x, int y,
                              float pixelValue) {
        image.getRasters().setFirstPixelSample(x, y, pixelValue);
    }","['public', 'void', 'setPixelValue', '(', 'CoverageDataTiffImage', 'image', ',', 'int', 'x', ',', 'int', 'y', ',', 'float', 'pixelValue', ')', '{', 'image', '.', 'getRasters', '(', ')', '.', 'setFirstPixelSample', '(', 'x', ',', 'y', ',', 'pixelValue', ')', ';', '}']","Set the pixel value into the image

@param image      image
@param x          x coordinate
@param y          y coordinate
@param pixelValue pixel value","['Set', 'the', 'pixel', 'value', 'into', 'the', 'image']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataTiff.java#L393-L396,test
Unidata/thredds,grib/src/main/java/ucar/nc2/grib/grib2/table/Grib2Tables.java,Grib2Tables.getForecastTimeIntervalSizeInHours,"public double getForecastTimeIntervalSizeInHours(Grib2Pds pds) {
    Grib2Pds.PdsInterval pdsIntv = (Grib2Pds.PdsInterval) pds;
    int timeUnitOrg = pds.getTimeUnit();

    // calculate total ""range"" in units of timeUnit
    int range = 0;
    for (Grib2Pds.TimeInterval ti : pdsIntv.getTimeIntervals()) {
      if (ti.timeRangeUnit == 255)
        continue;
      if ((ti.timeRangeUnit != timeUnitOrg) || (ti.timeIncrementUnit != timeUnitOrg && ti.timeIncrementUnit != 255 && ti.timeIncrement != 0)) {
        logger.warn(""TimeInterval(2) has different units timeUnit org="" + timeUnitOrg + "" TimeInterval="" + ti.timeIncrementUnit);
        throw new RuntimeException(""TimeInterval(2) has different units"");
      }

      range += ti.timeRangeLength;
      if (ti.timeIncrementUnit != 255) range += ti.timeIncrement;
    }

    // now convert that range to units of the requested period.
    CalendarPeriod timeUnitPeriod = Grib2Utils.getCalendarPeriod(convertTimeUnit(timeUnitOrg));
    if (timeUnitPeriod == null) return GribNumbers.UNDEFINEDD;
    if (timeUnitPeriod.equals(CalendarPeriod.Hour)) return range;

    double fac;
    if (timeUnitPeriod.getField() == CalendarPeriod.Field.Month) {
      fac = 30.0 * 24.0;  // nominal hours in a month
    } else if (timeUnitPeriod.getField() == CalendarPeriod.Field.Year) {
      fac = 365.0 * 24.0; // nominal hours in a year
    } else {
      fac = CalendarPeriod.Hour.getConvertFactor(timeUnitPeriod);
    }
    return fac * range;
  }",java,"public double getForecastTimeIntervalSizeInHours(Grib2Pds pds) {
    Grib2Pds.PdsInterval pdsIntv = (Grib2Pds.PdsInterval) pds;
    int timeUnitOrg = pds.getTimeUnit();

    // calculate total ""range"" in units of timeUnit
    int range = 0;
    for (Grib2Pds.TimeInterval ti : pdsIntv.getTimeIntervals()) {
      if (ti.timeRangeUnit == 255)
        continue;
      if ((ti.timeRangeUnit != timeUnitOrg) || (ti.timeIncrementUnit != timeUnitOrg && ti.timeIncrementUnit != 255 && ti.timeIncrement != 0)) {
        logger.warn(""TimeInterval(2) has different units timeUnit org="" + timeUnitOrg + "" TimeInterval="" + ti.timeIncrementUnit);
        throw new RuntimeException(""TimeInterval(2) has different units"");
      }

      range += ti.timeRangeLength;
      if (ti.timeIncrementUnit != 255) range += ti.timeIncrement;
    }

    // now convert that range to units of the requested period.
    CalendarPeriod timeUnitPeriod = Grib2Utils.getCalendarPeriod(convertTimeUnit(timeUnitOrg));
    if (timeUnitPeriod == null) return GribNumbers.UNDEFINEDD;
    if (timeUnitPeriod.equals(CalendarPeriod.Hour)) return range;

    double fac;
    if (timeUnitPeriod.getField() == CalendarPeriod.Field.Month) {
      fac = 30.0 * 24.0;  // nominal hours in a month
    } else if (timeUnitPeriod.getField() == CalendarPeriod.Field.Year) {
      fac = 365.0 * 24.0; // nominal hours in a year
    } else {
      fac = CalendarPeriod.Hour.getConvertFactor(timeUnitPeriod);
    }
    return fac * range;
  }","['public', 'double', 'getForecastTimeIntervalSizeInHours', '(', 'Grib2Pds', 'pds', ')', '{', 'Grib2Pds', '.', 'PdsInterval', 'pdsIntv', '=', '(', 'Grib2Pds', '.', 'PdsInterval', ')', 'pds', ';', 'int', 'timeUnitOrg', '=', 'pds', '.', 'getTimeUnit', '(', ')', ';', '// calculate total ""range"" in units of timeUnit\r', 'int', 'range', '=', '0', ';', 'for', '(', 'Grib2Pds', '.', 'TimeInterval', 'ti', ':', 'pdsIntv', '.', 'getTimeIntervals', '(', ')', ')', '{', 'if', '(', 'ti', '.', 'timeRangeUnit', '==', '255', ')', 'continue', ';', 'if', '(', '(', 'ti', '.', 'timeRangeUnit', '!=', 'timeUnitOrg', ')', '||', '(', 'ti', '.', 'timeIncrementUnit', '!=', 'timeUnitOrg', '&&', 'ti', '.', 'timeIncrementUnit', '!=', '255', '&&', 'ti', '.', 'timeIncrement', '!=', '0', ')', ')', '{', 'logger', '.', 'warn', '(', '""TimeInterval(2) has different units timeUnit org=""', '+', 'timeUnitOrg', '+', '"" TimeInterval=""', '+', 'ti', '.', 'timeIncrementUnit', ')', ';', 'throw', 'new', 'RuntimeException', '(', '""TimeInterval(2) has different units""', ')', ';', '}', 'range', '+=', 'ti', '.', 'timeRangeLength', ';', 'if', '(', 'ti', '.', 'timeIncrementUnit', '!=', '255', ')', 'range', '+=', 'ti', '.', 'timeIncrement', ';', '}', '// now convert that range to units of the requested period.\r', 'CalendarPeriod', 'timeUnitPeriod', '=', 'Grib2Utils', '.', 'getCalendarPeriod', '(', 'convertTimeUnit', '(', 'timeUnitOrg', ')', ')', ';', 'if', '(', 'timeUnitPeriod', '==', 'null', ')', 'return', 'GribNumbers', '.', 'UNDEFINEDD', ';', 'if', '(', 'timeUnitPeriod', '.', 'equals', '(', 'CalendarPeriod', '.', 'Hour', ')', ')', 'return', 'range', ';', 'double', 'fac', ';', 'if', '(', 'timeUnitPeriod', '.', 'getField', '(', ')', '==', 'CalendarPeriod', '.', 'Field', '.', 'Month', ')', '{', 'fac', '=', '30.0', '*', '24.0', ';', '// nominal hours in a month\r', '}', 'else', 'if', '(', 'timeUnitPeriod', '.', 'getField', '(', ')', '==', 'CalendarPeriod', '.', 'Field', '.', 'Year', ')', '{', 'fac', '=', '365.0', '*', '24.0', ';', '// nominal hours in a year\r', '}', 'else', '{', 'fac', '=', 'CalendarPeriod', '.', 'Hour', '.', 'getConvertFactor', '(', 'timeUnitPeriod', ')', ';', '}', 'return', 'fac', '*', 'range', ';', '}']","Get interval size in units of hours.
Only use in GribVariable to decide on variable identity when intvMerge = false.
@param pds must be a Grib2Pds.PdsInterval
@return interval size in units of hours","['Get', 'interval', 'size', 'in', 'units', 'of', 'hours', '.', 'Only', 'use', 'in', 'GribVariable', 'to', 'decide', 'on', 'variable', 'identity', 'when', 'intvMerge', '=', 'false', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/grib/src/main/java/ucar/nc2/grib/grib2/table/Grib2Tables.java#L282-L314,test
Unidata/thredds,dap4/d4core/src/main/java/dap4/core/dmr/parser/bison/Dap4ParserImpl.java,Dap4ParserImpl.getGroupScope,"DapGroup
    getGroupScope()
            throws DapException
    {
        DapGroup gscope = (DapGroup) searchScope(DapSort.GROUP, DapSort.DATASET);
        if(gscope == null) throw new DapException(""Undefined Group Scope"");
        return gscope;
    }",java,"DapGroup
    getGroupScope()
            throws DapException
    {
        DapGroup gscope = (DapGroup) searchScope(DapSort.GROUP, DapSort.DATASET);
        if(gscope == null) throw new DapException(""Undefined Group Scope"");
        return gscope;
    }","['DapGroup', 'getGroupScope', '(', ')', 'throws', 'DapException', '{', 'DapGroup', 'gscope', '=', '(', 'DapGroup', ')', 'searchScope', '(', 'DapSort', '.', 'GROUP', ',', 'DapSort', '.', 'DATASET', ')', ';', 'if', '(', 'gscope', '==', 'null', ')', 'throw', 'new', 'DapException', '(', '""Undefined Group Scope""', ')', ';', 'return', 'gscope', ';', '}']",Parser specific methods,"['Parser', 'specific', 'methods']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/dmr/parser/bison/Dap4ParserImpl.java#L91-L98,test
GojaFramework/goja,goja-core/src/main/java/goja/core/kits/JaxbKit.java,JaxbKit.unmarshal,"@SuppressWarnings(""unchecked"")
    public static <T> T unmarshal(String src, Class<T> clazz) {
        T result = null;
        try {
            Unmarshaller avm = JAXBContext.newInstance(clazz).createUnmarshaller();
            result = (T) avm.unmarshal(new StringReader(src));
        } catch (JAXBException e) {
            Throwables.propagate(e);
        }
        return result;
    }",java,"@SuppressWarnings(""unchecked"")
    public static <T> T unmarshal(String src, Class<T> clazz) {
        T result = null;
        try {
            Unmarshaller avm = JAXBContext.newInstance(clazz).createUnmarshaller();
            result = (T) avm.unmarshal(new StringReader(src));
        } catch (JAXBException e) {
            Throwables.propagate(e);
        }
        return result;
    }","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', 'static', '<', 'T', '>', 'T', 'unmarshal', '(', 'String', 'src', ',', 'Class', '<', 'T', '>', 'clazz', ')', '{', 'T', 'result', '=', 'null', ';', 'try', '{', 'Unmarshaller', 'avm', '=', 'JAXBContext', '.', 'newInstance', '(', 'clazz', ')', '.', 'createUnmarshaller', '(', ')', ';', 'result', '=', '(', 'T', ')', 'avm', '.', 'unmarshal', '(', 'new', 'StringReader', '(', 'src', ')', ')', ';', '}', 'catch', '(', 'JAXBException', 'e', ')', '{', 'Throwables', '.', 'propagate', '(', 'e', ')', ';', '}', 'return', 'result', ';', '}']",string -> object,"['string', '-', '>', 'object']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/kits/JaxbKit.java#L27-L37,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/component/AsyncActionExecutor.java,AsyncActionExecutor.invoke,"public void invoke(final ActionRequest actionRequest) {
		if (executorService == null) {
			throw new MadvocException(""No action is marked as async!"");
		}

		final HttpServletRequest servletRequest = actionRequest.getHttpServletRequest();

		log.debug(() -> ""Async call to: "" + actionRequest);

		final AsyncContext asyncContext = servletRequest.startAsync();

		executorService.submit(() -> {
			try {
				actionRequest.invoke();
			} catch (Exception ex) {
				log.error(""Invoking async action path failed: "" , ExceptionUtil.unwrapThrowable(ex));
			} finally {
				asyncContext.complete();
			}
		});
	}",java,"public void invoke(final ActionRequest actionRequest) {
		if (executorService == null) {
			throw new MadvocException(""No action is marked as async!"");
		}

		final HttpServletRequest servletRequest = actionRequest.getHttpServletRequest();

		log.debug(() -> ""Async call to: "" + actionRequest);

		final AsyncContext asyncContext = servletRequest.startAsync();

		executorService.submit(() -> {
			try {
				actionRequest.invoke();
			} catch (Exception ex) {
				log.error(""Invoking async action path failed: "" , ExceptionUtil.unwrapThrowable(ex));
			} finally {
				asyncContext.complete();
			}
		});
	}","['public', 'void', 'invoke', '(', 'final', 'ActionRequest', 'actionRequest', ')', '{', 'if', '(', 'executorService', '==', 'null', ')', '{', 'throw', 'new', 'MadvocException', '(', '""No action is marked as async!""', ')', ';', '}', 'final', 'HttpServletRequest', 'servletRequest', '=', 'actionRequest', '.', 'getHttpServletRequest', '(', ')', ';', 'log', '.', 'debug', '(', '(', ')', '->', '""Async call to: ""', '+', 'actionRequest', ')', ';', 'final', 'AsyncContext', 'asyncContext', '=', 'servletRequest', '.', 'startAsync', '(', ')', ';', 'executorService', '.', 'submit', '(', '(', ')', '->', '{', 'try', '{', 'actionRequest', '.', 'invoke', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'log', '.', 'error', '(', '""Invoking async action path failed: ""', ',', 'ExceptionUtil', '.', 'unwrapThrowable', '(', 'ex', ')', ')', ';', '}', 'finally', '{', 'asyncContext', '.', 'complete', '(', ')', ';', '}', '}', ')', ';', '}']",Invokes an action asynchronously by submitting it to the thread pool.,"['Invokes', 'an', 'action', 'asynchronously', 'by', 'submitting', 'it', 'to', 'the', 'thread', 'pool', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/component/AsyncActionExecutor.java#L62-L82,test
beworker/tinymachine,tinymachine/src/main/java/de/halfbit/tinymachine/TinyMachine.java,TinyMachine.fireEvent,"public void fireEvent(Object event) {
        if (event == null) {
            throw new IllegalArgumentException(""Event must not be null."");
        }
        mTaskQueue.offer(Task.obtainTask(Task.CODE_FIRE_EVENT, event, -1));
        if (!mQueueProcessed) processTaskQueue();
    }",java,"public void fireEvent(Object event) {
        if (event == null) {
            throw new IllegalArgumentException(""Event must not be null."");
        }
        mTaskQueue.offer(Task.obtainTask(Task.CODE_FIRE_EVENT, event, -1));
        if (!mQueueProcessed) processTaskQueue();
    }","['public', 'void', 'fireEvent', '(', 'Object', 'event', ')', '{', 'if', '(', 'event', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Event must not be null.""', ')', ';', '}', 'mTaskQueue', '.', 'offer', '(', 'Task', '.', 'obtainTask', '(', 'Task', '.', 'CODE_FIRE_EVENT', ',', 'event', ',', '-', '1', ')', ')', ';', 'if', '(', '!', 'mQueueProcessed', ')', 'processTaskQueue', '(', ')', ';', '}']","Forwards an event into state machine. State machine will deliver the event to a
handler methods responsible for its processing. If there is no handler method found,
then event gets silently ignored and this call has no effect.

@param event event to be delivered to a handler method","['Forwards', 'an', 'event', 'into', 'state', 'machine', '.', 'State', 'machine', 'will', 'deliver', 'the', 'event', 'to', 'a', 'handler', 'methods', 'responsible', 'for', 'its', 'processing', '.', 'If', 'there', 'is', 'no', 'handler', 'method', 'found', 'then', 'event', 'gets', 'silently', 'ignored', 'and', 'this', 'call', 'has', 'no', 'effect', '.']",29d16ddc5caf171e1aa972b9a8e95586cc409c66,https://github.com/beworker/tinymachine/blob/29d16ddc5caf171e1aa972b9a8e95586cc409c66/tinymachine/src/main/java/de/halfbit/tinymachine/TinyMachine.java#L134-L140,test
boonproject/boon,boon/src/main/java/org/boon/core/reflection/Fields.java,Fields.hasStringField,"public static boolean hasStringField( final Object value1, final String name ) {

        Class<?> clz = value1.getClass();
        return classHasStringField( clz, name );
    }",java,"public static boolean hasStringField( final Object value1, final String name ) {

        Class<?> clz = value1.getClass();
        return classHasStringField( clz, name );
    }","['public', 'static', 'boolean', 'hasStringField', '(', 'final', 'Object', 'value1', ',', 'final', 'String', 'name', ')', '{', 'Class', '<', '?', '>', 'clz', '=', 'value1', '.', 'getClass', '(', ')', ';', 'return', 'classHasStringField', '(', 'clz', ',', 'name', ')', ';', '}']","Checks to see if we have a string field.

@param value1
@param name
@return","['Checks', 'to', 'see', 'if', 'we', 'have', 'a', 'string', 'field', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/core/reflection/Fields.java#L65-L69,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java,ODatabaseDocumentAbstract.countView,"public long countView(final String viewName) {
    final OView cls = getMetadata().getImmutableSchemaSnapshot().getView(viewName);
    if (cls == null)
      throw new IllegalArgumentException(""View '"" + cls + ""' not found in database"");

    return countClass(cls, false);
  }",java,"public long countView(final String viewName) {
    final OView cls = getMetadata().getImmutableSchemaSnapshot().getView(viewName);
    if (cls == null)
      throw new IllegalArgumentException(""View '"" + cls + ""' not found in database"");

    return countClass(cls, false);
  }","['public', 'long', 'countView', '(', 'final', 'String', 'viewName', ')', '{', 'final', 'OView', 'cls', '=', 'getMetadata', '(', ')', '.', 'getImmutableSchemaSnapshot', '(', ')', '.', 'getView', '(', 'viewName', ')', ';', 'if', '(', 'cls', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""View \'""', '+', 'cls', '+', '""\' not found in database""', ')', ';', 'return', 'countClass', '(', 'cls', ',', 'false', ')', ';', '}']",Returns the number of the records of the class iClassName.,"['Returns', 'the', 'number', 'of', 'the', 'records', 'of', 'the', 'class', 'iClassName', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java#L1907-L1913,test
rackerlabs/blueflood,blueflood-core/src/main/java/com/rackspacecloud/blueflood/cache/LocatorCache.java,LocatorCache.isLocatorCurrentInTokenDiscoveryLayer,"public synchronized boolean isLocatorCurrentInTokenDiscoveryLayer(Locator loc) {
        LocatorCacheEntry entry = insertedLocators.getIfPresent(loc.toString());
        return entry != null && entry.isTokenDiscoveryCurrent();
    }",java,"public synchronized boolean isLocatorCurrentInTokenDiscoveryLayer(Locator loc) {
        LocatorCacheEntry entry = insertedLocators.getIfPresent(loc.toString());
        return entry != null && entry.isTokenDiscoveryCurrent();
    }","['public', 'synchronized', 'boolean', 'isLocatorCurrentInTokenDiscoveryLayer', '(', 'Locator', 'loc', ')', '{', 'LocatorCacheEntry', 'entry', '=', 'insertedLocators', '.', 'getIfPresent', '(', 'loc', '.', 'toString', '(', ')', ')', ';', 'return', 'entry', '!=', 'null', '&&', 'entry', '.', 'isTokenDiscoveryCurrent', '(', ')', ';', '}']","Checks if Locator is recently inserted in the token discovery layer

@param loc
@return","['Checks', 'if', 'Locator', 'is', 'recently', 'inserted', 'in', 'the', 'token', 'discovery', 'layer']",4722a3449b1a7f8e88889ea8c340c6f24396b5b0,https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-core/src/main/java/com/rackspacecloud/blueflood/cache/LocatorCache.java#L125-L128,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/gempak/GempakSurfaceFileReader.java,GempakSurfaceFileReader.makeFileSubType,"protected void makeFileSubType() {
    // determine file type
    Key key = findKey(GempakStation.SLAT);
    if (key == null)
      throw new IllegalStateException(""File does not have key=""+GempakStation.SLAT);
    String latType = key.type;
    Key dateKey = findKey(DATE);
    if (dateKey != null && !dateKey.type.equals(latType)) {
      if (latType.equals(ROW)) {
        subType = CLIMATE;
      } else {
        subType = STANDARD;
      }
    } else {
      subType = SHIP;
    }
  }",java,"protected void makeFileSubType() {
    // determine file type
    Key key = findKey(GempakStation.SLAT);
    if (key == null)
      throw new IllegalStateException(""File does not have key=""+GempakStation.SLAT);
    String latType = key.type;
    Key dateKey = findKey(DATE);
    if (dateKey != null && !dateKey.type.equals(latType)) {
      if (latType.equals(ROW)) {
        subType = CLIMATE;
      } else {
        subType = STANDARD;
      }
    } else {
      subType = SHIP;
    }
  }","['protected', 'void', 'makeFileSubType', '(', ')', '{', '// determine file type\r', 'Key', 'key', '=', 'findKey', '(', 'GempakStation', '.', 'SLAT', ')', ';', 'if', '(', 'key', '==', 'null', ')', 'throw', 'new', 'IllegalStateException', '(', '""File does not have key=""', '+', 'GempakStation', '.', 'SLAT', ')', ';', 'String', 'latType', '=', 'key', '.', 'type', ';', 'Key', 'dateKey', '=', 'findKey', '(', 'DATE', ')', ';', 'if', '(', 'dateKey', '!=', 'null', '&&', '!', 'dateKey', '.', 'type', '.', 'equals', '(', 'latType', ')', ')', '{', 'if', '(', 'latType', '.', 'equals', '(', 'ROW', ')', ')', '{', 'subType', '=', 'CLIMATE', ';', '}', 'else', '{', 'subType', '=', 'STANDARD', ';', '}', '}', 'else', '{', 'subType', '=', 'SHIP', ';', '}', '}']",Set the file subType.,"['Set', 'the', 'file', 'subType', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/GempakSurfaceFileReader.java#L144-L160,test
lessthanoptimal/GeoRegression,main/src/georegression/metric/Intersection3D_F64.java,Intersection3D_F64.containedPlane,"private static boolean containedPlane( Point3D_F64 T_v0,
										   Point3D_F64 output,
										   Vector3D_F64 u , Vector3D_F64 v ,
										   Vector3D_F64 w0 ) {
		double uu, uv, vv, wu, wv, D;
		uu = u.dot(u);
		uv = u.dot(v);
		vv = v.dot(v);
		w0.minus(output,T_v0);
		wu = w0.dot(u);
		wv = w0.dot(v);
		D = uv * uv - uu * vv;

		// get and test parametric coords
		double s, t;
		s = (uv * wv - vv * wu) / D;
		if (s < 0.0 || s > 1.0)        // I is outside T
			return false;
		t = (uv * wu - uu * wv) / D;
		return !(t < 0.0) && !((s + t) > 1.0);  // I is outside T
	}",java,"private static boolean containedPlane( Point3D_F64 T_v0,
										   Point3D_F64 output,
										   Vector3D_F64 u , Vector3D_F64 v ,
										   Vector3D_F64 w0 ) {
		double uu, uv, vv, wu, wv, D;
		uu = u.dot(u);
		uv = u.dot(v);
		vv = v.dot(v);
		w0.minus(output,T_v0);
		wu = w0.dot(u);
		wv = w0.dot(v);
		D = uv * uv - uu * vv;

		// get and test parametric coords
		double s, t;
		s = (uv * wv - vv * wu) / D;
		if (s < 0.0 || s > 1.0)        // I is outside T
			return false;
		t = (uv * wu - uu * wv) / D;
		return !(t < 0.0) && !((s + t) > 1.0);  // I is outside T
	}","['private', 'static', 'boolean', 'containedPlane', '(', 'Point3D_F64', 'T_v0', ',', 'Point3D_F64', 'output', ',', 'Vector3D_F64', 'u', ',', 'Vector3D_F64', 'v', ',', 'Vector3D_F64', 'w0', ')', '{', 'double', 'uu', ',', 'uv', ',', 'vv', ',', 'wu', ',', 'wv', ',', 'D', ';', 'uu', '=', 'u', '.', 'dot', '(', 'u', ')', ';', 'uv', '=', 'u', '.', 'dot', '(', 'v', ')', ';', 'vv', '=', 'v', '.', 'dot', '(', 'v', ')', ';', 'w0', '.', 'minus', '(', 'output', ',', 'T_v0', ')', ';', 'wu', '=', 'w0', '.', 'dot', '(', 'u', ')', ';', 'wv', '=', 'w0', '.', 'dot', '(', 'v', ')', ';', 'D', '=', 'uv', '*', 'uv', '-', 'uu', '*', 'vv', ';', '// get and test parametric coords', 'double', 's', ',', 't', ';', 's', '=', '(', 'uv', '*', 'wv', '-', 'vv', '*', 'wu', ')', '/', 'D', ';', 'if', '(', 's', '<', '0.0', '||', 's', '>', '1.0', ')', '// I is outside T', 'return', 'false', ';', 't', '=', '(', 'uv', '*', 'wu', '-', 'uu', '*', 'wv', ')', '/', 'D', ';', 'return', '!', '(', 't', '<', '0.0', ')', '&&', '!', '(', '(', 's', '+', 't', ')', '>', '1.0', ')', ';', '// I is outside T', '}']",Determines if the point on the same plane as T is contained inside of T.,"['Determines', 'if', 'the', 'point', 'on', 'the', 'same', 'plane', 'as', 'T', 'is', 'contained', 'inside', 'of', 'T', '.']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/metric/Intersection3D_F64.java#L404-L424,test
open-korean-text/open-korean-text,src/main/java/org/openkoreantext/processor/OpenKoreanTextProcessorJava.java,OpenKoreanTextProcessorJava.extractPhrases,"public static List<KoreanPhraseExtractor.KoreanPhrase> extractPhrases(Seq<KoreanToken> tokens, boolean filterSpam, boolean includeHashtags) {
    Seq<KoreanPhraseExtractor.KoreanPhrase> seq = OpenKoreanTextProcessor.extractPhrases(tokens, filterSpam, includeHashtags);
    return toJavaList(seq);
  }",java,"public static List<KoreanPhraseExtractor.KoreanPhrase> extractPhrases(Seq<KoreanToken> tokens, boolean filterSpam, boolean includeHashtags) {
    Seq<KoreanPhraseExtractor.KoreanPhrase> seq = OpenKoreanTextProcessor.extractPhrases(tokens, filterSpam, includeHashtags);
    return toJavaList(seq);
  }","['public', 'static', 'List', '<', 'KoreanPhraseExtractor', '.', 'KoreanPhrase', '>', 'extractPhrases', '(', 'Seq', '<', 'KoreanToken', '>', 'tokens', ',', 'boolean', 'filterSpam', ',', 'boolean', 'includeHashtags', ')', '{', 'Seq', '<', 'KoreanPhraseExtractor', '.', 'KoreanPhrase', '>', 'seq', '=', 'OpenKoreanTextProcessor', '.', 'extractPhrases', '(', 'tokens', ',', 'filterSpam', ',', 'includeHashtags', ')', ';', 'return', 'toJavaList', '(', 'seq', ')', ';', '}']","Extract phrases from Korean input text

@param tokens Korean tokens (output of tokenize(CharSequence text)).
@return List of phrase CharSequences.","['Extract', 'phrases', 'from', 'Korean', 'input', 'text']",ed815a224b986e5a5d03fbd8f5c8d154e84e5b40,https://github.com/open-korean-text/open-korean-text/blob/ed815a224b986e5a5d03fbd8f5c8d154e84e5b40/src/main/java/org/openkoreantext/processor/OpenKoreanTextProcessorJava.java#L165-L168,test
oblac/jodd,jodd-petite/src/main/java/jodd/petite/BeanDefinition.java,BeanDefinition.addMethodInjectionPoint,"protected void addMethodInjectionPoint(final MethodInjectionPoint mip) {
		if (methods == null) {
			methods = new MethodInjectionPoint[1];
			methods[0] = mip;
		} else {
			methods = ArraysUtil.append(methods, mip);
		}
	}",java,"protected void addMethodInjectionPoint(final MethodInjectionPoint mip) {
		if (methods == null) {
			methods = new MethodInjectionPoint[1];
			methods[0] = mip;
		} else {
			methods = ArraysUtil.append(methods, mip);
		}
	}","['protected', 'void', 'addMethodInjectionPoint', '(', 'final', 'MethodInjectionPoint', 'mip', ')', '{', 'if', '(', 'methods', '==', 'null', ')', '{', 'methods', '=', 'new', 'MethodInjectionPoint', '[', '1', ']', ';', 'methods', '[', '0', ']', '=', 'mip', ';', '}', 'else', '{', 'methods', '=', 'ArraysUtil', '.', 'append', '(', 'methods', ',', 'mip', ')', ';', '}', '}']",Adds method injection point.,"['Adds', 'method', 'injection', 'point', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-petite/src/main/java/jodd/petite/BeanDefinition.java#L221-L228,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java,QueryConcept.setNamedEntityTypes,"public void setNamedEntityTypes(StringList v) {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_namedEntityTypes == null)
      jcasType.jcas.throwFeatMissing(""namedEntityTypes"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    jcasType.ll_cas.ll_setRefValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_namedEntityTypes, jcasType.ll_cas.ll_getFSRef(v));}",java,"public void setNamedEntityTypes(StringList v) {
    if (QueryConcept_Type.featOkTst && ((QueryConcept_Type)jcasType).casFeat_namedEntityTypes == null)
      jcasType.jcas.throwFeatMissing(""namedEntityTypes"", ""edu.cmu.lti.oaqa.type.retrieval.QueryConcept"");
    jcasType.ll_cas.ll_setRefValue(addr, ((QueryConcept_Type)jcasType).casFeatCode_namedEntityTypes, jcasType.ll_cas.ll_getFSRef(v));}","['public', 'void', 'setNamedEntityTypes', '(', 'StringList', 'v', ')', '{', 'if', '(', 'QueryConcept_Type', '.', 'featOkTst', '&&', '(', '(', 'QueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeat_namedEntityTypes', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""namedEntityTypes""', ',', '""edu.cmu.lti.oaqa.type.retrieval.QueryConcept""', ')', ';', 'jcasType', '.', 'll_cas', '.', 'll_setRefValue', '(', 'addr', ',', '(', '(', 'QueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeatCode_namedEntityTypes', ',', 'jcasType', '.', 'll_cas', '.', 'll_getFSRef', '(', 'v', ')', ')', ';', '}']","setter for namedEntityTypes - sets List of Named Entity types associated with this concept.
@generated
@param v value to set into the feature","['setter', 'for', 'namedEntityTypes', '-', 'sets', 'List', 'of', 'Named', 'Entity', 'types', 'associated', 'with', 'this', 'concept', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/QueryConcept.java#L84-L87,test
workplacesystems/utilsj,src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java,TransactionalBidiTreeMap.isBlack,"private static <K,V> boolean isBlack(final Node<K,V> node, final int index) {

        return ((node == null)
                ? true
                : node.isBlack(index));
    }",java,"private static <K,V> boolean isBlack(final Node<K,V> node, final int index) {

        return ((node == null)
                ? true
                : node.isBlack(index));
    }","['private', 'static', '<', 'K', ',', 'V', '>', 'boolean', 'isBlack', '(', 'final', 'Node', '<', 'K', ',', 'V', '>', 'node', ',', 'final', 'int', 'index', ')', '{', 'return', '(', '(', 'node', '==', 'null', ')', '?', 'true', ':', 'node', '.', 'isBlack', '(', 'index', ')', ')', ';', '}']","is the specified black red? if the node does not exist, sure,
it's black, thank you

@param node the node (may be null) in question
@param index KEY or VALUE","['is', 'the', 'specified', 'black', 'red?', 'if', 'the', 'node', 'does', 'not', 'exist', 'sure', 'it', 's', 'black', 'thank', 'you']",1b638be51997eafac4d368c14f62a16624a08d3e,https://github.com/workplacesystems/utilsj/blob/1b638be51997eafac4d368c14f62a16624a08d3e/src/main/java/com/workplacesystems/utilsj/collections/TransactionalBidiTreeMap.java#L1238-L1243,test
Koekiebox-PTY-LTD/Fluid,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/attachment/AttachmentClient.java,AttachmentClient.deleteAttachment,"public Attachment deleteAttachment(Attachment attachmentParam)
    {
        if(attachmentParam != null && this.serviceTicket != null)
        {
            attachmentParam.setServiceTicket(this.serviceTicket);
        }

        return new Attachment(this.postJson(
                attachmentParam, WS.Path.Attachment.Version1.attachmentDelete()));
    }",java,"public Attachment deleteAttachment(Attachment attachmentParam)
    {
        if(attachmentParam != null && this.serviceTicket != null)
        {
            attachmentParam.setServiceTicket(this.serviceTicket);
        }

        return new Attachment(this.postJson(
                attachmentParam, WS.Path.Attachment.Version1.attachmentDelete()));
    }","['public', 'Attachment', 'deleteAttachment', '(', 'Attachment', 'attachmentParam', ')', '{', 'if', '(', 'attachmentParam', '!=', 'null', '&&', 'this', '.', 'serviceTicket', '!=', 'null', ')', '{', 'attachmentParam', '.', 'setServiceTicket', '(', 'this', '.', 'serviceTicket', ')', ';', '}', 'return', 'new', 'Attachment', '(', 'this', '.', 'postJson', '(', 'attachmentParam', ',', 'WS', '.', 'Path', '.', 'Attachment', '.', 'Version1', '.', 'attachmentDelete', '(', ')', ')', ')', ';', '}']","Delete an existing Attachment.

@param attachmentParam The Attachment to delete.
@return The deleted Attachment.","['Delete', 'an', 'existing', 'Attachment', '.']",81153d865f71b84ca933532c7115717bc3979270,https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/attachment/AttachmentClient.java#L157-L166,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,FeatureStyleExtension.deleteMapping,"private void deleteMapping(StyleMappingDao mappingDao, long featureId,
                               GeometryType geometryType) {
        if (mappingDao != null) {
            mappingDao.deleteByBaseId(featureId, geometryType);
        }
    }",java,"private void deleteMapping(StyleMappingDao mappingDao, long featureId,
                               GeometryType geometryType) {
        if (mappingDao != null) {
            mappingDao.deleteByBaseId(featureId, geometryType);
        }
    }","['private', 'void', 'deleteMapping', '(', 'StyleMappingDao', 'mappingDao', ',', 'long', 'featureId', ',', 'GeometryType', 'geometryType', ')', '{', 'if', '(', 'mappingDao', '!=', 'null', ')', '{', 'mappingDao', '.', 'deleteByBaseId', '(', 'featureId', ',', 'geometryType', ')', ';', '}', '}']","Delete the style mapping with the geometry type value

@param mappingDao   mapping dao
@param featureId    feature id
@param geometryType geometry type","['Delete', 'the', 'style', 'mapping', 'with', 'the', 'geometry', 'type', 'value']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L1789-L1794,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft2/coverage/TimeHelper.java,TimeHelper.setReferenceDate,"public TimeHelper setReferenceDate(CalendarDate refDate) {
    CalendarDateUnit cdUnit = CalendarDateUnit.of(dateUnit.getCalendar(), dateUnit.getCalendarField(), refDate);
    return new TimeHelper(cdUnit);
  }",java,"public TimeHelper setReferenceDate(CalendarDate refDate) {
    CalendarDateUnit cdUnit = CalendarDateUnit.of(dateUnit.getCalendar(), dateUnit.getCalendarField(), refDate);
    return new TimeHelper(cdUnit);
  }","['public', 'TimeHelper', 'setReferenceDate', '(', 'CalendarDate', 'refDate', ')', '{', 'CalendarDateUnit', 'cdUnit', '=', 'CalendarDateUnit', '.', 'of', '(', 'dateUnit', '.', 'getCalendar', '(', ')', ',', 'dateUnit', '.', 'getCalendarField', '(', ')', ',', 'refDate', ')', ';', 'return', 'new', 'TimeHelper', '(', 'cdUnit', ')', ';', '}']",copy on modify,"['copy', 'on', 'modify']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft2/coverage/TimeHelper.java#L60-L63,test
wildfly/wildfly,jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java,PersistenceUnitServiceHandler.lookupProvider,"private static PersistenceProvider lookupProvider(
            PersistenceUnitMetadata pu,
            PersistenceProviderDeploymentHolder persistenceProviderDeploymentHolder,
            DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException {

        /**
         * check if the deployment is already associated with the specified persistence provider
         */
        Map<String, PersistenceProvider> providerMap = persistenceProviderDeploymentHolder != null ?
                persistenceProviderDeploymentHolder.getProviders() : null;
        if (providerMap != null) {
            synchronized (providerMap) {
                if(providerMap.containsKey(pu.getPersistenceProviderClassName())){
                    ROOT_LOGGER.tracef(""deployment %s is using %s"", deploymentUnit.getName(), pu.getPersistenceProviderClassName());
                    return providerMap.get(pu.getPersistenceProviderClassName());
                }
            }
        }

        String configuredPersistenceProviderModule = pu.getProperties().getProperty(Configuration.PROVIDER_MODULE);
        String persistenceProviderClassName = pu.getPersistenceProviderClassName();

        if (persistenceProviderClassName == null) {
            persistenceProviderClassName = Configuration.PROVIDER_CLASS_DEFAULT;
        }

        /**
         * locate persistence provider in specified static module
         */
        if (configuredPersistenceProviderModule != null) {
            List<PersistenceProvider> providers;
            if (Configuration.PROVIDER_MODULE_APPLICATION_SUPPLIED.equals(configuredPersistenceProviderModule)) {
                try {
                    // load the persistence provider from the application deployment
                    final ModuleClassLoader classLoader = deploymentUnit.getAttachment(Attachments.MODULE).getClassLoader();
                    PersistenceProvider provider = PersistenceProviderLoader.loadProviderFromDeployment(classLoader, persistenceProviderClassName);
                    providers = new ArrayList<>();
                    providers.add(provider);
                    PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                    return provider;

                } catch (ClassNotFoundException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                } catch (InstantiationException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                } catch (IllegalAccessException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                }
            } else {
                try {
                    providers = PersistenceProviderLoader.loadProviderModuleByName(configuredPersistenceProviderModule);
                    PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                    PersistenceProvider provider = getProviderByName(pu, providers);
                    if (provider != null) {
                        return provider;
                    }
                } catch (ModuleLoadException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, configuredPersistenceProviderModule, persistenceProviderClassName);
                }
            }
        }

        // try to determine the static module name based on the persistence provider class name
        String providerNameDerivedFromClassName = Configuration.getProviderModuleNameFromProviderClassName(persistenceProviderClassName);

        // see if the providerNameDerivedFromClassName has been loaded yet
        PersistenceProvider provider = getProviderByName(pu);

        // if we haven't loaded the provider yet, try loading now
        if (provider == null && providerNameDerivedFromClassName != null) {
            try {
                List<PersistenceProvider> providers = PersistenceProviderLoader.loadProviderModuleByName(providerNameDerivedFromClassName);
                PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                provider = getProviderByName(pu, providers);
            } catch (ModuleLoadException e) {
                throw JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, providerNameDerivedFromClassName, persistenceProviderClassName);
            }
        }

        if (provider == null)
            throw JpaLogger.ROOT_LOGGER.persistenceProviderNotFound(persistenceProviderClassName);

        return provider;
    }",java,"private static PersistenceProvider lookupProvider(
            PersistenceUnitMetadata pu,
            PersistenceProviderDeploymentHolder persistenceProviderDeploymentHolder,
            DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException {

        /**
         * check if the deployment is already associated with the specified persistence provider
         */
        Map<String, PersistenceProvider> providerMap = persistenceProviderDeploymentHolder != null ?
                persistenceProviderDeploymentHolder.getProviders() : null;
        if (providerMap != null) {
            synchronized (providerMap) {
                if(providerMap.containsKey(pu.getPersistenceProviderClassName())){
                    ROOT_LOGGER.tracef(""deployment %s is using %s"", deploymentUnit.getName(), pu.getPersistenceProviderClassName());
                    return providerMap.get(pu.getPersistenceProviderClassName());
                }
            }
        }

        String configuredPersistenceProviderModule = pu.getProperties().getProperty(Configuration.PROVIDER_MODULE);
        String persistenceProviderClassName = pu.getPersistenceProviderClassName();

        if (persistenceProviderClassName == null) {
            persistenceProviderClassName = Configuration.PROVIDER_CLASS_DEFAULT;
        }

        /**
         * locate persistence provider in specified static module
         */
        if (configuredPersistenceProviderModule != null) {
            List<PersistenceProvider> providers;
            if (Configuration.PROVIDER_MODULE_APPLICATION_SUPPLIED.equals(configuredPersistenceProviderModule)) {
                try {
                    // load the persistence provider from the application deployment
                    final ModuleClassLoader classLoader = deploymentUnit.getAttachment(Attachments.MODULE).getClassLoader();
                    PersistenceProvider provider = PersistenceProviderLoader.loadProviderFromDeployment(classLoader, persistenceProviderClassName);
                    providers = new ArrayList<>();
                    providers.add(provider);
                    PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                    return provider;

                } catch (ClassNotFoundException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                } catch (InstantiationException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                } catch (IllegalAccessException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotDeployApp(e, persistenceProviderClassName);
                }
            } else {
                try {
                    providers = PersistenceProviderLoader.loadProviderModuleByName(configuredPersistenceProviderModule);
                    PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                    PersistenceProvider provider = getProviderByName(pu, providers);
                    if (provider != null) {
                        return provider;
                    }
                } catch (ModuleLoadException e) {
                    throw JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, configuredPersistenceProviderModule, persistenceProviderClassName);
                }
            }
        }

        // try to determine the static module name based on the persistence provider class name
        String providerNameDerivedFromClassName = Configuration.getProviderModuleNameFromProviderClassName(persistenceProviderClassName);

        // see if the providerNameDerivedFromClassName has been loaded yet
        PersistenceProvider provider = getProviderByName(pu);

        // if we haven't loaded the provider yet, try loading now
        if (provider == null && providerNameDerivedFromClassName != null) {
            try {
                List<PersistenceProvider> providers = PersistenceProviderLoader.loadProviderModuleByName(providerNameDerivedFromClassName);
                PersistenceProviderDeploymentHolder.savePersistenceProviderInDeploymentUnit(deploymentUnit, providers, null);
                provider = getProviderByName(pu, providers);
            } catch (ModuleLoadException e) {
                throw JpaLogger.ROOT_LOGGER.cannotLoadPersistenceProviderModule(e, providerNameDerivedFromClassName, persistenceProviderClassName);
            }
        }

        if (provider == null)
            throw JpaLogger.ROOT_LOGGER.persistenceProviderNotFound(persistenceProviderClassName);

        return provider;
    }","['private', 'static', 'PersistenceProvider', 'lookupProvider', '(', 'PersistenceUnitMetadata', 'pu', ',', 'PersistenceProviderDeploymentHolder', 'persistenceProviderDeploymentHolder', ',', 'DeploymentUnit', 'deploymentUnit', ')', 'throws', 'DeploymentUnitProcessingException', '{', '/**\n         * check if the deployment is already associated with the specified persistence provider\n         */', 'Map', '<', 'String', ',', 'PersistenceProvider', '>', 'providerMap', '=', 'persistenceProviderDeploymentHolder', '!=', 'null', '?', 'persistenceProviderDeploymentHolder', '.', 'getProviders', '(', ')', ':', 'null', ';', 'if', '(', 'providerMap', '!=', 'null', ')', '{', 'synchronized', '(', 'providerMap', ')', '{', 'if', '(', 'providerMap', '.', 'containsKey', '(', 'pu', '.', 'getPersistenceProviderClassName', '(', ')', ')', ')', '{', 'ROOT_LOGGER', '.', 'tracef', '(', '""deployment %s is using %s""', ',', 'deploymentUnit', '.', 'getName', '(', ')', ',', 'pu', '.', 'getPersistenceProviderClassName', '(', ')', ')', ';', 'return', 'providerMap', '.', 'get', '(', 'pu', '.', 'getPersistenceProviderClassName', '(', ')', ')', ';', '}', '}', '}', 'String', 'configuredPersistenceProviderModule', '=', 'pu', '.', 'getProperties', '(', ')', '.', 'getProperty', '(', 'Configuration', '.', 'PROVIDER_MODULE', ')', ';', 'String', 'persistenceProviderClassName', '=', 'pu', '.', 'getPersistenceProviderClassName', '(', ')', ';', 'if', '(', 'persistenceProviderClassName', '==', 'null', ')', '{', 'persistenceProviderClassName', '=', 'Configuration', '.', 'PROVIDER_CLASS_DEFAULT', ';', '}', '/**\n         * locate persistence provider in specified static module\n         */', 'if', '(', 'configuredPersistenceProviderModule', '!=', 'null', ')', '{', 'List', '<', 'PersistenceProvider', '>', 'providers', ';', 'if', '(', 'Configuration', '.', 'PROVIDER_MODULE_APPLICATION_SUPPLIED', '.', 'equals', '(', 'configuredPersistenceProviderModule', ')', ')', '{', 'try', '{', '// load the persistence provider from the application deployment', 'final', 'ModuleClassLoader', 'classLoader', '=', 'deploymentUnit', '.', 'getAttachment', '(', 'Attachments', '.', 'MODULE', ')', '.', 'getClassLoader', '(', ')', ';', 'PersistenceProvider', 'provider', '=', 'PersistenceProviderLoader', '.', 'loadProviderFromDeployment', '(', 'classLoader', ',', 'persistenceProviderClassName', ')', ';', 'providers', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'providers', '.', 'add', '(', 'provider', ')', ';', 'PersistenceProviderDeploymentHolder', '.', 'savePersistenceProviderInDeploymentUnit', '(', 'deploymentUnit', ',', 'providers', ',', 'null', ')', ';', 'return', 'provider', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', 'throw', 'JpaLogger', '.', 'ROOT_LOGGER', '.', 'cannotDeployApp', '(', 'e', ',', 'persistenceProviderClassName', ')', ';', '}', 'catch', '(', 'InstantiationException', 'e', ')', '{', 'throw', 'JpaLogger', '.', 'ROOT_LOGGER', '.', 'cannotDeployApp', '(', 'e', ',', 'persistenceProviderClassName', ')', ';', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', 'throw', 'JpaLogger', '.', 'ROOT_LOGGER', '.', 'cannotDeployApp', '(', 'e', ',', 'persistenceProviderClassName', ')', ';', '}', '}', 'else', '{', 'try', '{', 'providers', '=', 'PersistenceProviderLoader', '.', 'loadProviderModuleByName', '(', 'configuredPersistenceProviderModule', ')', ';', 'PersistenceProviderDeploymentHolder', '.', 'savePersistenceProviderInDeploymentUnit', '(', 'deploymentUnit', ',', 'providers', ',', 'null', ')', ';', 'PersistenceProvider', 'provider', '=', 'getProviderByName', '(', 'pu', ',', 'providers', ')', ';', 'if', '(', 'provider', '!=', 'null', ')', '{', 'return', 'provider', ';', '}', '}', 'catch', '(', 'ModuleLoadException', 'e', ')', '{', 'throw', 'JpaLogger', '.', 'ROOT_LOGGER', '.', 'cannotLoadPersistenceProviderModule', '(', 'e', ',', 'configuredPersistenceProviderModule', ',', 'persistenceProviderClassName', ')', ';', '}', '}', '}', '// try to determine the static module name based on the persistence provider class name', 'String', 'providerNameDerivedFromClassName', '=', 'Configuration', '.', 'getProviderModuleNameFromProviderClassName', '(', 'persistenceProviderClassName', ')', ';', '// see if the providerNameDerivedFromClassName has been loaded yet', 'PersistenceProvider', 'provider', '=', 'getProviderByName', '(', 'pu', ')', ';', ""// if we haven't loaded the provider yet, try loading now"", 'if', '(', 'provider', '==', 'null', '&&', 'providerNameDerivedFromClassName', '!=', 'null', ')', '{', 'try', '{', 'List', '<', 'PersistenceProvider', '>', 'providers', '=', 'PersistenceProviderLoader', '.', 'loadProviderModuleByName', '(', 'providerNameDerivedFromClassName', ')', ';', 'PersistenceProviderDeploymentHolder', '.', 'savePersistenceProviderInDeploymentUnit', '(', 'deploymentUnit', ',', 'providers', ',', 'null', ')', ';', 'provider', '=', 'getProviderByName', '(', 'pu', ',', 'providers', ')', ';', '}', 'catch', '(', 'ModuleLoadException', 'e', ')', '{', 'throw', 'JpaLogger', '.', 'ROOT_LOGGER', '.', 'cannotLoadPersistenceProviderModule', '(', 'e', ',', 'providerNameDerivedFromClassName', ',', 'persistenceProviderClassName', ')', ';', '}', '}', 'if', '(', 'provider', '==', 'null', ')', 'throw', 'JpaLogger', '.', 'ROOT_LOGGER', '.', 'persistenceProviderNotFound', '(', 'persistenceProviderClassName', ')', ';', 'return', 'provider', ';', '}']","Look up the persistence provider


@param pu
@param deploymentUnit
@return","['Look', 'up', 'the', 'persistence', 'provider']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/jpa/subsystem/src/main/java/org/jboss/as/jpa/processor/PersistenceUnitServiceHandler.java#L919-L1002,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/InvDataset.java,InvDataset.getUniqueID,"public String getUniqueID() {
    String authority = getAuthority();
    if ((authority != null) && (getID() != null))
      return authority + "":"" + getID();
    else if (getID() != null)
      return getID();
    else
      return null;
  }",java,"public String getUniqueID() {
    String authority = getAuthority();
    if ((authority != null) && (getID() != null))
      return authority + "":"" + getID();
    else if (getID() != null)
      return getID();
    else
      return null;
  }","['public', 'String', 'getUniqueID', '(', ')', '{', 'String', 'authority', '=', 'getAuthority', '(', ')', ';', 'if', '(', '(', 'authority', '!=', 'null', ')', '&&', '(', 'getID', '(', ')', '!=', 'null', ')', ')', 'return', 'authority', '+', '"":""', '+', 'getID', '(', ')', ';', 'else', 'if', '(', 'getID', '(', ')', '!=', 'null', ')', 'return', 'getID', '(', ')', ';', 'else', 'return', 'null', ';', '}']","If this dataset has an authority and an ID, then the concatenation of them is the
globally unique ID.

@return globally unique ID, or null if missing authority or ID.","['If', 'this', 'dataset', 'has', 'an', 'authority', 'and', 'an', 'ID', 'then', 'the', 'concatenation', 'of', 'them', 'is', 'the', 'globally', 'unique', 'ID', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/InvDataset.java#L119-L127,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/record/ORecordInternal.java,ORecordInternal.setVersion,"public static void setVersion(final ORecord record, final int iVersion) {
    final ORecordAbstract rec = (ORecordAbstract) record;
    rec.setVersion(iVersion);
  }",java,"public static void setVersion(final ORecord record, final int iVersion) {
    final ORecordAbstract rec = (ORecordAbstract) record;
    rec.setVersion(iVersion);
  }","['public', 'static', 'void', 'setVersion', '(', 'final', 'ORecord', 'record', ',', 'final', 'int', 'iVersion', ')', '{', 'final', 'ORecordAbstract', 'rec', '=', '(', 'ORecordAbstract', ')', 'record', ';', 'rec', '.', 'setVersion', '(', 'iVersion', ')', ';', '}']",Internal only. Sets the version.,"['Internal', 'only', '.', 'Sets', 'the', 'version', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/record/ORecordInternal.java#L78-L81,test
alipay/sofa-bolt,src/main/java/com/alipay/remoting/ConnectionEventListener.java,ConnectionEventListener.onEvent,"public void onEvent(ConnectionEventType type, String remoteAddr, Connection conn) {
        List<ConnectionEventProcessor> processorList = this.processors.get(type);
        if (processorList != null) {
            for (ConnectionEventProcessor processor : processorList) {
                processor.onEvent(remoteAddr, conn);
            }
        }
    }",java,"public void onEvent(ConnectionEventType type, String remoteAddr, Connection conn) {
        List<ConnectionEventProcessor> processorList = this.processors.get(type);
        if (processorList != null) {
            for (ConnectionEventProcessor processor : processorList) {
                processor.onEvent(remoteAddr, conn);
            }
        }
    }","['public', 'void', 'onEvent', '(', 'ConnectionEventType', 'type', ',', 'String', 'remoteAddr', ',', 'Connection', 'conn', ')', '{', 'List', '<', 'ConnectionEventProcessor', '>', 'processorList', '=', 'this', '.', 'processors', '.', 'get', '(', 'type', ')', ';', 'if', '(', 'processorList', '!=', 'null', ')', '{', 'for', '(', 'ConnectionEventProcessor', 'processor', ':', 'processorList', ')', '{', 'processor', '.', 'onEvent', '(', 'remoteAddr', ',', 'conn', ')', ';', '}', '}', '}']","Dispatch events.

@param type
@param remoteAddr
@param conn","['Dispatch', 'events', '.']",0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046,https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/ConnectionEventListener.java#L40-L47,test
playframework/playframework,core/play-java/src/main/java/play/libs/Comet.java,Comet.json,"public static Flow<JsonNode, ByteString, NotUsed> json(String callbackName) {
    return Flow.of(JsonNode.class)
        .map(
            json -> {
              return ByteString.fromString(Json.stringify(json));
            })
        .via(flow(callbackName));
  }",java,"public static Flow<JsonNode, ByteString, NotUsed> json(String callbackName) {
    return Flow.of(JsonNode.class)
        .map(
            json -> {
              return ByteString.fromString(Json.stringify(json));
            })
        .via(flow(callbackName));
  }","['public', 'static', 'Flow', '<', 'JsonNode', ',', 'ByteString', ',', 'NotUsed', '>', 'json', '(', 'String', 'callbackName', ')', '{', 'return', 'Flow', '.', 'of', '(', 'JsonNode', '.', 'class', ')', '.', 'map', '(', 'json', '->', '{', 'return', 'ByteString', '.', 'fromString', '(', 'Json', '.', 'stringify', '(', 'json', ')', ')', ';', '}', ')', '.', 'via', '(', 'flow', '(', 'callbackName', ')', ')', ';', '}']","Produces a flow of ByteString using `Json.stringify` from a Flow of JsonNode. Calls out to
Comet.flow internally.

@param callbackName the javascript callback method.
@return a flow of ByteString elements.","['Produces', 'a', 'flow', 'of', 'ByteString', 'using', 'Json', '.', 'stringify', 'from', 'a', 'Flow', 'of', 'JsonNode', '.', 'Calls', 'out', 'to', 'Comet', '.', 'flow', 'internally', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play-java/src/main/java/play/libs/Comet.java#L69-L76,test
oblac/jodd,jodd-lagarto/src/main/java/jodd/lagarto/LagartoParser.java,LagartoParser.initialize,"@Override
	protected void initialize(final char[] input) {
		super.initialize(input);
		this.tag = new ParsedTag();
		this.doctype = new ParsedDoctype();
		this.text = new char[1024];
		this.textLen = 0;
		this.parsingTime = -1;
	}",java,"@Override
	protected void initialize(final char[] input) {
		super.initialize(input);
		this.tag = new ParsedTag();
		this.doctype = new ParsedDoctype();
		this.text = new char[1024];
		this.textLen = 0;
		this.parsingTime = -1;
	}","['@', 'Override', 'protected', 'void', 'initialize', '(', 'final', 'char', '[', ']', 'input', ')', '{', 'super', '.', 'initialize', '(', 'input', ')', ';', 'this', '.', 'tag', '=', 'new', 'ParsedTag', '(', ')', ';', 'this', '.', 'doctype', '=', 'new', 'ParsedDoctype', '(', ')', ';', 'this', '.', 'text', '=', 'new', 'char', '[', '1024', ']', ';', 'this', '.', 'textLen', '=', '0', ';', 'this', '.', 'parsingTime', '=', '-', '1', ';', '}']",Initializes parser.,"['Initializes', 'parser', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-lagarto/src/main/java/jodd/lagarto/LagartoParser.java#L88-L96,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java,ShiftFormulaUtility.assembleRowsListFromRowsMapping,"private static List<SerialRow> assembleRowsListFromRowsMapping(
			final List<SerialRow> all, final List<SerialRow> current) {
		List<SerialRow> list;
		if (all == null) {
			list = new ArrayList<>();
			list.addAll(current);
		} else {
			list = all;
			for (SerialRow row : current) {
				if (!all.contains(row)) {
					list.add(row);
				}
			}
		}
		return list;
	}",java,"private static List<SerialRow> assembleRowsListFromRowsMapping(
			final List<SerialRow> all, final List<SerialRow> current) {
		List<SerialRow> list;
		if (all == null) {
			list = new ArrayList<>();
			list.addAll(current);
		} else {
			list = all;
			for (SerialRow row : current) {
				if (!all.contains(row)) {
					list.add(row);
				}
			}
		}
		return list;
	}","['private', 'static', 'List', '<', 'SerialRow', '>', 'assembleRowsListFromRowsMapping', '(', 'final', 'List', '<', 'SerialRow', '>', 'all', ',', 'final', 'List', '<', 'SerialRow', '>', 'current', ')', '{', 'List', '<', 'SerialRow', '>', 'list', ';', 'if', '(', 'all', '==', 'null', ')', '{', 'list', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'list', '.', 'addAll', '(', 'current', ')', ';', '}', 'else', '{', 'list', '=', 'all', ';', 'for', '(', 'SerialRow', 'row', ':', 'current', ')', '{', 'if', '(', '!', 'all', '.', 'contains', '(', 'row', ')', ')', '{', 'list', '.', 'add', '(', 'row', ')', ';', '}', '}', '}', 'return', 'list', ';', '}']","assemble rowslist from rowsmapping.

@param all
list all rows.
@param current
current row list.
@return the list","['assemble', 'rowslist', 'from', 'rowsmapping', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ShiftFormulaUtility.java#L252-L267,test
jboss/jboss-common-core,src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java,PublicId.encodeURN,"public static String encodeURN(String publicId) {
    String urn = PublicId.normalize(publicId);

    urn = PublicId.stringReplace(urn, ""%"", ""%25"");
    urn = PublicId.stringReplace(urn, "";"", ""%3B"");
    urn = PublicId.stringReplace(urn, ""'"", ""%27"");
    urn = PublicId.stringReplace(urn, ""?"", ""%3F"");
    urn = PublicId.stringReplace(urn, ""#"", ""%23"");
    urn = PublicId.stringReplace(urn, ""+"", ""%2B"");
    urn = PublicId.stringReplace(urn, "" "", ""+"");
    urn = PublicId.stringReplace(urn, ""::"", "";"");
    urn = PublicId.stringReplace(urn, "":"", ""%3A"");
    urn = PublicId.stringReplace(urn, ""//"", "":"");
    urn = PublicId.stringReplace(urn, ""/"", ""%2F"");

    return ""urn:publicid:"" + urn;
  }",java,"public static String encodeURN(String publicId) {
    String urn = PublicId.normalize(publicId);

    urn = PublicId.stringReplace(urn, ""%"", ""%25"");
    urn = PublicId.stringReplace(urn, "";"", ""%3B"");
    urn = PublicId.stringReplace(urn, ""'"", ""%27"");
    urn = PublicId.stringReplace(urn, ""?"", ""%3F"");
    urn = PublicId.stringReplace(urn, ""#"", ""%23"");
    urn = PublicId.stringReplace(urn, ""+"", ""%2B"");
    urn = PublicId.stringReplace(urn, "" "", ""+"");
    urn = PublicId.stringReplace(urn, ""::"", "";"");
    urn = PublicId.stringReplace(urn, "":"", ""%3A"");
    urn = PublicId.stringReplace(urn, ""//"", "":"");
    urn = PublicId.stringReplace(urn, ""/"", ""%2F"");

    return ""urn:publicid:"" + urn;
  }","['public', 'static', 'String', 'encodeURN', '(', 'String', 'publicId', ')', '{', 'String', 'urn', '=', 'PublicId', '.', 'normalize', '(', 'publicId', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""%""', ',', '""%25""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '"";""', ',', '""%3B""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""\'""', ',', '""%27""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""?""', ',', '""%3F""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""#""', ',', '""%23""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""+""', ',', '""%2B""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '"" ""', ',', '""+""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""::""', ',', '"";""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '"":""', ',', '""%3A""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""//""', ',', '"":""', ')', ';', 'urn', '=', 'PublicId', '.', 'stringReplace', '(', 'urn', ',', '""/""', ',', '""%2F""', ')', ';', 'return', '""urn:publicid:""', '+', 'urn', ';', '}']","Encode a public identifier as a ""publicid"" URN.

<p>This method is declared static so that other classes
can use it directly.</p>

@param publicId The unnormalized public identifier.

@return The normalized identifier.","['Encode', 'a', 'public', 'identifier', 'as', 'a', 'publicid', 'URN', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java#L83-L99,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CellUtility.java,CellUtility.createCommentAnchor,"private static ClientAnchor createCommentAnchor(final Cell newCell, CreationHelper factory) {
		ClientAnchor anchor = factory.createClientAnchor();
		anchor.setCol1(newCell.getColumnIndex());
		anchor.setCol2(newCell.getColumnIndex() + 1);
		anchor.setRow1(newCell.getRowIndex());
		anchor.setRow2(newCell.getRowIndex() + 3);
		return anchor;
	}",java,"private static ClientAnchor createCommentAnchor(final Cell newCell, CreationHelper factory) {
		ClientAnchor anchor = factory.createClientAnchor();
		anchor.setCol1(newCell.getColumnIndex());
		anchor.setCol2(newCell.getColumnIndex() + 1);
		anchor.setRow1(newCell.getRowIndex());
		anchor.setRow2(newCell.getRowIndex() + 3);
		return anchor;
	}","['private', 'static', 'ClientAnchor', 'createCommentAnchor', '(', 'final', 'Cell', 'newCell', ',', 'CreationHelper', 'factory', ')', '{', 'ClientAnchor', 'anchor', '=', 'factory', '.', 'createClientAnchor', '(', ')', ';', 'anchor', '.', 'setCol1', '(', 'newCell', '.', 'getColumnIndex', '(', ')', ')', ';', 'anchor', '.', 'setCol2', '(', 'newCell', '.', 'getColumnIndex', '(', ')', '+', '1', ')', ';', 'anchor', '.', 'setRow1', '(', 'newCell', '.', 'getRowIndex', '(', ')', ')', ';', 'anchor', '.', 'setRow2', '(', 'newCell', '.', 'getRowIndex', '(', ')', '+', '3', ')', ';', 'return', 'anchor', ';', '}']","Creates the comment anchor.

@param newCell the new cell
@param factory the factory
@return the client anchor","['Creates', 'the', 'comment', 'anchor', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CellUtility.java#L564-L571,test
ieb/sparsemapcontent,app/src/main/java/org/sakaiproject/nakamura/app/LaunchNakamura.java,LaunchNakamura.launchButtonActionPerformed,"private void launchButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // Launch Nakamura
    if (runStatus == APP_NOT_RUNNING) {
      System.setSecurityManager(null);
      try {
        NakamuraMain.main(savedArgs);

        // Update label
        statusLabel.setText(""Nakamura is starting..."");

        // Notify the user
        JOptionPane.showMessageDialog(this,
            ""Nakamura has been started.\nPlease allow 30-60 seconds for it to be ready."",
            ""Information"", JOptionPane.INFORMATION_MESSAGE);

        runStatus = APP_RUNNING;
        isStartupFinished();
      } catch (IOException e) {
        statusLabel.setText(""Nakamura is startup failed "" + e.getMessage());
      }
    } else {
      // Can't start it again...
      // custom title, warning icon
      JOptionPane.showMessageDialog(this, ""Nakamura is already running."", ""Warning"",
          JOptionPane.WARNING_MESSAGE);
    }
  }",java,"private void launchButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // Launch Nakamura
    if (runStatus == APP_NOT_RUNNING) {
      System.setSecurityManager(null);
      try {
        NakamuraMain.main(savedArgs);

        // Update label
        statusLabel.setText(""Nakamura is starting..."");

        // Notify the user
        JOptionPane.showMessageDialog(this,
            ""Nakamura has been started.\nPlease allow 30-60 seconds for it to be ready."",
            ""Information"", JOptionPane.INFORMATION_MESSAGE);

        runStatus = APP_RUNNING;
        isStartupFinished();
      } catch (IOException e) {
        statusLabel.setText(""Nakamura is startup failed "" + e.getMessage());
      }
    } else {
      // Can't start it again...
      // custom title, warning icon
      JOptionPane.showMessageDialog(this, ""Nakamura is already running."", ""Warning"",
          JOptionPane.WARNING_MESSAGE);
    }
  }","['private', 'void', 'launchButtonActionPerformed', '(', 'java', '.', 'awt', '.', 'event', '.', 'ActionEvent', 'evt', ')', '{', '// Launch Nakamura', 'if', '(', 'runStatus', '==', 'APP_NOT_RUNNING', ')', '{', 'System', '.', 'setSecurityManager', '(', 'null', ')', ';', 'try', '{', 'NakamuraMain', '.', 'main', '(', 'savedArgs', ')', ';', '// Update label', 'statusLabel', '.', 'setText', '(', '""Nakamura is starting...""', ')', ';', '// Notify the user', 'JOptionPane', '.', 'showMessageDialog', '(', 'this', ',', '""Nakamura has been started.\\nPlease allow 30-60 seconds for it to be ready.""', ',', '""Information""', ',', 'JOptionPane', '.', 'INFORMATION_MESSAGE', ')', ';', 'runStatus', '=', 'APP_RUNNING', ';', 'isStartupFinished', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'statusLabel', '.', 'setText', '(', '""Nakamura is startup failed ""', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', 'else', '{', ""// Can't start it again..."", '// custom title, warning icon', 'JOptionPane', '.', 'showMessageDialog', '(', 'this', ',', '""Nakamura is already running.""', ',', '""Warning""', ',', 'JOptionPane', '.', 'WARNING_MESSAGE', ')', ';', '}', '}']","This is the launch button action method. This method launches the Apache Sling
bootloader and informs the user to wait before accessing it in a browser.

@param evt
The details of the Action event.
@throws IOException","['This', 'is', 'the', 'launch', 'button', 'action', 'method', '.', 'This', 'method', 'launches', 'the', 'Apache', 'Sling', 'bootloader', 'and', 'informs', 'the', 'user', 'to', 'wait', 'before', 'accessing', 'it', 'in', 'a', 'browser', '.']",0570fdf868adbbf7734790cbc09fe66480e5f2dc,https://github.com/ieb/sparsemapcontent/blob/0570fdf868adbbf7734790cbc09fe66480e5f2dc/app/src/main/java/org/sakaiproject/nakamura/app/LaunchNakamura.java#L214-L240,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Search.java,Search.setSearchId,"public void setSearchId(String v) {
    if (Search_Type.featOkTst && ((Search_Type)jcasType).casFeat_searchId == null)
      jcasType.jcas.throwFeatMissing(""searchId"", ""edu.cmu.lti.oaqa.type.retrieval.Search"");
    jcasType.ll_cas.ll_setStringValue(addr, ((Search_Type)jcasType).casFeatCode_searchId, v);}",java,"public void setSearchId(String v) {
    if (Search_Type.featOkTst && ((Search_Type)jcasType).casFeat_searchId == null)
      jcasType.jcas.throwFeatMissing(""searchId"", ""edu.cmu.lti.oaqa.type.retrieval.Search"");
    jcasType.ll_cas.ll_setStringValue(addr, ((Search_Type)jcasType).casFeatCode_searchId, v);}","['public', 'void', 'setSearchId', '(', 'String', 'v', ')', '{', 'if', '(', 'Search_Type', '.', 'featOkTst', '&&', '(', '(', 'Search_Type', ')', 'jcasType', ')', '.', 'casFeat_searchId', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""searchId""', ',', '""edu.cmu.lti.oaqa.type.retrieval.Search""', ')', ';', 'jcasType', '.', 'll_cas', '.', 'll_setStringValue', '(', 'addr', ',', '(', '(', 'Search_Type', ')', 'jcasType', ')', '.', 'casFeatCode_searchId', ',', 'v', ')', ';', '}']","setter for searchId - sets An identifier for this search result. Used to collect hit-list objects that belong to this search result after they've been split out for parallel processing then gathered up again.
@generated
@param v value to set into the feature","['setter', 'for', 'searchId', '-', 'sets', 'An', 'identifier', 'for', 'this', 'search', 'result', '.', 'Used', 'to', 'collect', 'hit', '-', 'list', 'objects', 'that', 'belong', 'to', 'this', 'search', 'result', 'after', 'they', 've', 'been', 'split', 'out', 'for', 'parallel', 'processing', 'then', 'gathered', 'up', 'again', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/Search.java#L172-L175,test
oblac/jodd,jodd-bean/src/main/java/jodd/bean/BeanUtilUtil.java,BeanUtilUtil.arrayForcedSet,"protected void arrayForcedSet(final BeanProperty bp, Object array, final int index, Object value) {
		Class componentType = array.getClass().getComponentType();
		array = ensureArraySize(bp, array, componentType, index);
		value = convertType(value, componentType);
		Array.set(array, index, value);
	}",java,"protected void arrayForcedSet(final BeanProperty bp, Object array, final int index, Object value) {
		Class componentType = array.getClass().getComponentType();
		array = ensureArraySize(bp, array, componentType, index);
		value = convertType(value, componentType);
		Array.set(array, index, value);
	}","['protected', 'void', 'arrayForcedSet', '(', 'final', 'BeanProperty', 'bp', ',', 'Object', 'array', ',', 'final', 'int', 'index', ',', 'Object', 'value', ')', '{', 'Class', 'componentType', '=', 'array', '.', 'getClass', '(', ')', '.', 'getComponentType', '(', ')', ';', 'array', '=', 'ensureArraySize', '(', 'bp', ',', 'array', ',', 'componentType', ',', 'index', ')', ';', 'value', '=', 'convertType', '(', 'value', ',', 'componentType', ')', ';', 'Array', '.', 'set', '(', 'array', ',', 'index', ',', 'value', ')', ';', '}']","Sets the array element forced. If index is greater then arrays length, array will be expanded to the index.
If speed is critical, it is better to allocate an array with proper size before using this method.","['Sets', 'the', 'array', 'element', 'forced', '.', 'If', 'index', 'is', 'greater', 'then', 'arrays', 'length', 'array', 'will', 'be', 'expanded', 'to', 'the', 'index', '.', 'If', 'speed', 'is', 'critical', 'it', 'is', 'better', 'to', 'allocate', 'an', 'array', 'with', 'proper', 'size', 'before', 'using', 'this', 'method', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-bean/src/main/java/jodd/bean/BeanUtilUtil.java#L154-L159,test
oblac/jodd,jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerFilter.java,HtmlStaplerFilter.readFilterConfigParameters,"protected void readFilterConfigParameters(final FilterConfig filterConfig, final Object target, final String... parameters) {
		for (String parameter : parameters) {
			String value = filterConfig.getInitParameter(parameter);

			if (value != null) {
				BeanUtil.declared.setProperty(target, parameter, value);
			}
		}
	}",java,"protected void readFilterConfigParameters(final FilterConfig filterConfig, final Object target, final String... parameters) {
		for (String parameter : parameters) {
			String value = filterConfig.getInitParameter(parameter);

			if (value != null) {
				BeanUtil.declared.setProperty(target, parameter, value);
			}
		}
	}","['protected', 'void', 'readFilterConfigParameters', '(', 'final', 'FilterConfig', 'filterConfig', ',', 'final', 'Object', 'target', ',', 'final', 'String', '...', 'parameters', ')', '{', 'for', '(', 'String', 'parameter', ':', 'parameters', ')', '{', 'String', 'value', '=', 'filterConfig', '.', 'getInitParameter', '(', 'parameter', ')', ';', 'if', '(', 'value', '!=', 'null', ')', '{', 'BeanUtil', '.', 'declared', '.', 'setProperty', '(', 'target', ',', 'parameter', ',', 'value', ')', ';', '}', '}', '}']",Reads filter config parameters and set into destination target.,"['Reads', 'filter', 'config', 'parameters', 'and', 'set', 'into', 'destination', 'target', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-htmlstapler/src/main/java/jodd/htmlstapler/HtmlStaplerFilter.java#L112-L120,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/MethodWriter.java,MethodWriter.collectAttributePrototypes,"final void collectAttributePrototypes(final Attribute.Set attributePrototypes) {
    attributePrototypes.addAttributes(firstAttribute);
    attributePrototypes.addAttributes(firstCodeAttribute);
  }",java,"final void collectAttributePrototypes(final Attribute.Set attributePrototypes) {
    attributePrototypes.addAttributes(firstAttribute);
    attributePrototypes.addAttributes(firstCodeAttribute);
  }","['final', 'void', 'collectAttributePrototypes', '(', 'final', 'Attribute', '.', 'Set', 'attributePrototypes', ')', '{', 'attributePrototypes', '.', 'addAttributes', '(', 'firstAttribute', ')', ';', 'attributePrototypes', '.', 'addAttributes', '(', 'firstCodeAttribute', ')', ';', '}']","Collects the attributes of this method into the given set of attribute prototypes.

@param attributePrototypes a set of attribute prototypes.","['Collects', 'the', 'attributes', 'of', 'this', 'method', 'into', 'the', 'given', 'set', 'of', 'attribute', 'prototypes', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/MethodWriter.java#L2437-L2440,test
Koekiebox-PTY-LTD/Fluid,fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/impl/SQLFormDefinitionUtil.java,SQLFormDefinitionUtil.getFormDefinitionIdAndTitle,"public Map<Long,String> getFormDefinitionIdAndTitle()
	{
		//When already cached, use the cached value...
		if(!LOCAL_MAPPING.isEmpty())
		{
			Map<Long,String> returnVal = new HashMap<>(LOCAL_MAPPING);

			//The id's are outdated...
			if(System.currentTimeMillis() > timeToUpdateAgain){

				synchronized (LOCAL_MAPPING)
				{
					LOCAL_MAPPING.clear();
				}
			}

			return returnVal;
		}

		//Only allow one thread to set the local mapping...
		synchronized (LOCAL_MAPPING)
		{
			if(!LOCAL_MAPPING.isEmpty())
			{
				return new HashMap<>(LOCAL_MAPPING);
			}

			PreparedStatement preparedStatement = null;
			ResultSet resultSet = null;
			try
			{
				ISyntax syntax = SyntaxFactory.getInstance().getSyntaxFor(
						this.getSQLTypeFromConnection(),
						ISyntax.ProcedureMapping.FormDefinition.GetFormDefinitions);

				preparedStatement = this.getConnection().prepareStatement(
						syntax.getPreparedStatement());

				resultSet = preparedStatement.executeQuery();

				//Iterate each of the form containers...
				while (resultSet.next())
				{
					Long id = resultSet.getLong(1);
					String title = resultSet.getString(2);

					LOCAL_MAPPING.put(id,title);
				}

				//Update in 10 mins...
				timeToUpdateAgain =
						(System.currentTimeMillis() +
								TimeUnit.MINUTES.toMillis(10));
			}
			//
			catch (SQLException sqlError) {
				throw new FluidSQLException(sqlError);
			}
			//
			finally {
				this.closeStatement(preparedStatement,resultSet);
			}

			return new HashMap<>(LOCAL_MAPPING);
		}
	}",java,"public Map<Long,String> getFormDefinitionIdAndTitle()
	{
		//When already cached, use the cached value...
		if(!LOCAL_MAPPING.isEmpty())
		{
			Map<Long,String> returnVal = new HashMap<>(LOCAL_MAPPING);

			//The id's are outdated...
			if(System.currentTimeMillis() > timeToUpdateAgain){

				synchronized (LOCAL_MAPPING)
				{
					LOCAL_MAPPING.clear();
				}
			}

			return returnVal;
		}

		//Only allow one thread to set the local mapping...
		synchronized (LOCAL_MAPPING)
		{
			if(!LOCAL_MAPPING.isEmpty())
			{
				return new HashMap<>(LOCAL_MAPPING);
			}

			PreparedStatement preparedStatement = null;
			ResultSet resultSet = null;
			try
			{
				ISyntax syntax = SyntaxFactory.getInstance().getSyntaxFor(
						this.getSQLTypeFromConnection(),
						ISyntax.ProcedureMapping.FormDefinition.GetFormDefinitions);

				preparedStatement = this.getConnection().prepareStatement(
						syntax.getPreparedStatement());

				resultSet = preparedStatement.executeQuery();

				//Iterate each of the form containers...
				while (resultSet.next())
				{
					Long id = resultSet.getLong(1);
					String title = resultSet.getString(2);

					LOCAL_MAPPING.put(id,title);
				}

				//Update in 10 mins...
				timeToUpdateAgain =
						(System.currentTimeMillis() +
								TimeUnit.MINUTES.toMillis(10));
			}
			//
			catch (SQLException sqlError) {
				throw new FluidSQLException(sqlError);
			}
			//
			finally {
				this.closeStatement(preparedStatement,resultSet);
			}

			return new HashMap<>(LOCAL_MAPPING);
		}
	}","['public', 'Map', '<', 'Long', ',', 'String', '>', 'getFormDefinitionIdAndTitle', '(', ')', '{', '//When already cached, use the cached value...', 'if', '(', '!', 'LOCAL_MAPPING', '.', 'isEmpty', '(', ')', ')', '{', 'Map', '<', 'Long', ',', 'String', '>', 'returnVal', '=', 'new', 'HashMap', '<>', '(', 'LOCAL_MAPPING', ')', ';', ""//The id's are outdated..."", 'if', '(', 'System', '.', 'currentTimeMillis', '(', ')', '>', 'timeToUpdateAgain', ')', '{', 'synchronized', '(', 'LOCAL_MAPPING', ')', '{', 'LOCAL_MAPPING', '.', 'clear', '(', ')', ';', '}', '}', 'return', 'returnVal', ';', '}', '//Only allow one thread to set the local mapping...', 'synchronized', '(', 'LOCAL_MAPPING', ')', '{', 'if', '(', '!', 'LOCAL_MAPPING', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'new', 'HashMap', '<>', '(', 'LOCAL_MAPPING', ')', ';', '}', 'PreparedStatement', 'preparedStatement', '=', 'null', ';', 'ResultSet', 'resultSet', '=', 'null', ';', 'try', '{', 'ISyntax', 'syntax', '=', 'SyntaxFactory', '.', 'getInstance', '(', ')', '.', 'getSyntaxFor', '(', 'this', '.', 'getSQLTypeFromConnection', '(', ')', ',', 'ISyntax', '.', 'ProcedureMapping', '.', 'FormDefinition', '.', 'GetFormDefinitions', ')', ';', 'preparedStatement', '=', 'this', '.', 'getConnection', '(', ')', '.', 'prepareStatement', '(', 'syntax', '.', 'getPreparedStatement', '(', ')', ')', ';', 'resultSet', '=', 'preparedStatement', '.', 'executeQuery', '(', ')', ';', '//Iterate each of the form containers...', 'while', '(', 'resultSet', '.', 'next', '(', ')', ')', '{', 'Long', 'id', '=', 'resultSet', '.', 'getLong', '(', '1', ')', ';', 'String', 'title', '=', 'resultSet', '.', 'getString', '(', '2', ')', ';', 'LOCAL_MAPPING', '.', 'put', '(', 'id', ',', 'title', ')', ';', '}', '//Update in 10 mins...', 'timeToUpdateAgain', '=', '(', 'System', '.', 'currentTimeMillis', '(', ')', '+', 'TimeUnit', '.', 'MINUTES', '.', 'toMillis', '(', '10', ')', ')', ';', '}', '//', 'catch', '(', 'SQLException', 'sqlError', ')', '{', 'throw', 'new', 'FluidSQLException', '(', 'sqlError', ')', ';', '}', '//', 'finally', '{', 'this', '.', 'closeStatement', '(', 'preparedStatement', ',', 'resultSet', ')', ';', '}', 'return', 'new', 'HashMap', '<>', '(', 'LOCAL_MAPPING', ')', ';', '}', '}']","Retrieves the Form Definition and Title mapping
currently stored in Fluid.

@return Form Definition Id and Title.","['Retrieves', 'the', 'Form', 'Definition', 'and', 'Title', 'mapping', 'currently', 'stored', 'in', 'Fluid', '.']",81153d865f71b84ca933532c7115717bc3979270,https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-api/src/main/java/com/fluidbpm/program/api/util/sql/impl/SQLFormDefinitionUtil.java#L60-L125,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ChartUtility.java,ChartUtility.initXSSFAnchorsMap,"public static void initXSSFAnchorsMap(final XSSFWorkbook wb,
            final ChartsData charsData) {

        Map<String, ClientAnchor> anchortMap = charsData
                .getChartAnchorsMap();
        Map<String, String> positionMap = charsData.getChartPositionMap();
        anchortMap.clear();
        positionMap.clear();
        for (int i = 0; i < wb.getNumberOfSheets(); i++) {
            initXSSFAnchorsMapForSheet(anchortMap, positionMap,
                    wb.getSheetAt(i));
        }
    }",java,"public static void initXSSFAnchorsMap(final XSSFWorkbook wb,
            final ChartsData charsData) {

        Map<String, ClientAnchor> anchortMap = charsData
                .getChartAnchorsMap();
        Map<String, String> positionMap = charsData.getChartPositionMap();
        anchortMap.clear();
        positionMap.clear();
        for (int i = 0; i < wb.getNumberOfSheets(); i++) {
            initXSSFAnchorsMapForSheet(anchortMap, positionMap,
                    wb.getSheetAt(i));
        }
    }","['public', 'static', 'void', 'initXSSFAnchorsMap', '(', 'final', 'XSSFWorkbook', 'wb', ',', 'final', 'ChartsData', 'charsData', ')', '{', 'Map', '<', 'String', ',', 'ClientAnchor', '>', 'anchortMap', '=', 'charsData', '.', 'getChartAnchorsMap', '(', ')', ';', 'Map', '<', 'String', ',', 'String', '>', 'positionMap', '=', 'charsData', '.', 'getChartPositionMap', '(', ')', ';', 'anchortMap', '.', 'clear', '(', ')', ';', 'positionMap', '.', 'clear', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'wb', '.', 'getNumberOfSheets', '(', ')', ';', 'i', '++', ')', '{', 'initXSSFAnchorsMapForSheet', '(', 'anchortMap', ',', 'positionMap', ',', 'wb', '.', 'getSheetAt', '(', 'i', ')', ')', ';', '}', '}']","retrieve anchor information from draw.xml for all the charts in the
workbook. then save them to anchors map.

@param wb
workbook.
@param charsData
the chars data","['retrieve', 'anchor', 'information', 'from', 'draw', '.', 'xml', 'for', 'all', 'the', 'charts', 'in', 'the', 'workbook', '.', 'then', 'save', 'them', 'to', 'anchors', 'map', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ChartUtility.java#L217-L229,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Context.java,Context.getOverwrite,"public boolean getOverwrite() {
        String overwriteString = get(OVERWRITE);
        return overwriteString == null ? false : overwriteString.equalsIgnoreCase(""T""); //$NON-NLS-1$
    }",java,"public boolean getOverwrite() {
        String overwriteString = get(OVERWRITE);
        return overwriteString == null ? false : overwriteString.equalsIgnoreCase(""T""); //$NON-NLS-1$
    }","['public', 'boolean', 'getOverwrite', '(', ')', '{', 'String', 'overwriteString', '=', 'get', '(', 'OVERWRITE', ')', ';', 'return', 'overwriteString', '==', 'null', '?', 'false', ':', 'overwriteString', '.', 'equalsIgnoreCase', '(', '""T""', ')', ';', '//$NON-NLS-1$', '}']","Get the flag that indicates if copy or move should overwrite
an existing destination. Return the boolean value for the
OVERWRITE key.

<p>Implements the corresponding API in the interface
<code>Context</code>.</p>

@return the value for OVERWRITE
@see Context#OVERWRITE","['Get', 'the', 'flag', 'that', 'indicates', 'if', 'copy', 'or', 'move', 'should', 'overwrite', 'an', 'existing', 'destination', '.', 'Return', 'the', 'boolean', 'value', 'for', 'the', 'OVERWRITE', 'key', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Context.java#L741-L744,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/grid/GridCoordSys.java,GridCoordSys.addToNetcdfFile,"void addToNetcdfFile(NetcdfFile ncfile, Group g) {
    if (dontUseVertical) {
      return;
    }

    if (g == null) {
      g = ncfile.getRootGroup();
    }

    String dims = ""time"";
    if (!dontUseVertical) {
      dims = dims + "" "" + verticalName;
    }
    if (hcs.isLatLon()) {
      dims = dims + "" lat lon"";
    } else {
      dims = dims + "" y x"";
    }

    //Collections.sort( levels);
    int nlevs = levels.size();
    // ncfile.addDimension(g, new Dimension(verticalName, nlevs, true));

    // coordinate axis and coordinate system Variable
    Variable v = new Variable(ncfile, g, null, verticalName);
    v.setDataType(DataType.DOUBLE);

    v.addAttribute(new Attribute(""long_name"",
            lookup.getLevelDescription(record)));
    v.addAttribute(new Attribute(""units"", lookup.getLevelUnit(record)));

    // positive attribute needed for CF-1 Height and Pressure
    if (positive != null) {
      v.addAttribute(new Attribute(""positive"", positive));
    }

    if (units != null) {
      AxisType axisType;
      if (SimpleUnit.isCompatible(""millibar"", units)) {
        axisType = AxisType.Pressure;
      } else if (SimpleUnit.isCompatible(""m"", units)) {
        axisType = AxisType.Height;
      } else {
        axisType = AxisType.GeoZ;
      }

      v.addAttribute(
              new Attribute(
                      ""grid_level_type"",
                      Integer.toString(record.getLevelType1())));

      v.addAttribute(new Attribute(_Coordinate.AxisType,
              axisType.toString()));
      v.addAttribute(new Attribute(_Coordinate.Axes, dims));
      if (!hcs.isLatLon()) {
        v.addAttribute(new Attribute(_Coordinate.Transforms,
                hcs.getGridName()));
      }
    }

    double[] data = new double[nlevs];
    for (int i = 0; i < levels.size(); i++) {
      Double d = (Double) levels.get(i);
      data[i] = d.doubleValue();
    }
    Array dataArray = Array.factory(DataType.DOUBLE, new int[]{nlevs}, data);

    v.setDimensions(verticalName);
    v.setCachedData(dataArray, false);

    ncfile.addVariable(g, v);

    // look for vertical transforms
    if (record.getLevelType1() == 109) {
      findCoordinateTransform(g, ""Pressure"", record.getLevelType1());
    }
  }",java,"void addToNetcdfFile(NetcdfFile ncfile, Group g) {
    if (dontUseVertical) {
      return;
    }

    if (g == null) {
      g = ncfile.getRootGroup();
    }

    String dims = ""time"";
    if (!dontUseVertical) {
      dims = dims + "" "" + verticalName;
    }
    if (hcs.isLatLon()) {
      dims = dims + "" lat lon"";
    } else {
      dims = dims + "" y x"";
    }

    //Collections.sort( levels);
    int nlevs = levels.size();
    // ncfile.addDimension(g, new Dimension(verticalName, nlevs, true));

    // coordinate axis and coordinate system Variable
    Variable v = new Variable(ncfile, g, null, verticalName);
    v.setDataType(DataType.DOUBLE);

    v.addAttribute(new Attribute(""long_name"",
            lookup.getLevelDescription(record)));
    v.addAttribute(new Attribute(""units"", lookup.getLevelUnit(record)));

    // positive attribute needed for CF-1 Height and Pressure
    if (positive != null) {
      v.addAttribute(new Attribute(""positive"", positive));
    }

    if (units != null) {
      AxisType axisType;
      if (SimpleUnit.isCompatible(""millibar"", units)) {
        axisType = AxisType.Pressure;
      } else if (SimpleUnit.isCompatible(""m"", units)) {
        axisType = AxisType.Height;
      } else {
        axisType = AxisType.GeoZ;
      }

      v.addAttribute(
              new Attribute(
                      ""grid_level_type"",
                      Integer.toString(record.getLevelType1())));

      v.addAttribute(new Attribute(_Coordinate.AxisType,
              axisType.toString()));
      v.addAttribute(new Attribute(_Coordinate.Axes, dims));
      if (!hcs.isLatLon()) {
        v.addAttribute(new Attribute(_Coordinate.Transforms,
                hcs.getGridName()));
      }
    }

    double[] data = new double[nlevs];
    for (int i = 0; i < levels.size(); i++) {
      Double d = (Double) levels.get(i);
      data[i] = d.doubleValue();
    }
    Array dataArray = Array.factory(DataType.DOUBLE, new int[]{nlevs}, data);

    v.setDimensions(verticalName);
    v.setCachedData(dataArray, false);

    ncfile.addVariable(g, v);

    // look for vertical transforms
    if (record.getLevelType1() == 109) {
      findCoordinateTransform(g, ""Pressure"", record.getLevelType1());
    }
  }","['void', 'addToNetcdfFile', '(', 'NetcdfFile', 'ncfile', ',', 'Group', 'g', ')', '{', 'if', '(', 'dontUseVertical', ')', '{', 'return', ';', '}', 'if', '(', 'g', '==', 'null', ')', '{', 'g', '=', 'ncfile', '.', 'getRootGroup', '(', ')', ';', '}', 'String', 'dims', '=', '""time""', ';', 'if', '(', '!', 'dontUseVertical', ')', '{', 'dims', '=', 'dims', '+', '"" ""', '+', 'verticalName', ';', '}', 'if', '(', 'hcs', '.', 'isLatLon', '(', ')', ')', '{', 'dims', '=', 'dims', '+', '"" lat lon""', ';', '}', 'else', '{', 'dims', '=', 'dims', '+', '"" y x""', ';', '}', '//Collections.sort( levels);', 'int', 'nlevs', '=', 'levels', '.', 'size', '(', ')', ';', '// ncfile.addDimension(g, new Dimension(verticalName, nlevs, true));', '// coordinate axis and coordinate system Variable', 'Variable', 'v', '=', 'new', 'Variable', '(', 'ncfile', ',', 'g', ',', 'null', ',', 'verticalName', ')', ';', 'v', '.', 'setDataType', '(', 'DataType', '.', 'DOUBLE', ')', ';', 'v', '.', 'addAttribute', '(', 'new', 'Attribute', '(', '""long_name""', ',', 'lookup', '.', 'getLevelDescription', '(', 'record', ')', ')', ')', ';', 'v', '.', 'addAttribute', '(', 'new', 'Attribute', '(', '""units""', ',', 'lookup', '.', 'getLevelUnit', '(', 'record', ')', ')', ')', ';', '// positive attribute needed for CF-1 Height and Pressure', 'if', '(', 'positive', '!=', 'null', ')', '{', 'v', '.', 'addAttribute', '(', 'new', 'Attribute', '(', '""positive""', ',', 'positive', ')', ')', ';', '}', 'if', '(', 'units', '!=', 'null', ')', '{', 'AxisType', 'axisType', ';', 'if', '(', 'SimpleUnit', '.', 'isCompatible', '(', '""millibar""', ',', 'units', ')', ')', '{', 'axisType', '=', 'AxisType', '.', 'Pressure', ';', '}', 'else', 'if', '(', 'SimpleUnit', '.', 'isCompatible', '(', '""m""', ',', 'units', ')', ')', '{', 'axisType', '=', 'AxisType', '.', 'Height', ';', '}', 'else', '{', 'axisType', '=', 'AxisType', '.', 'GeoZ', ';', '}', 'v', '.', 'addAttribute', '(', 'new', 'Attribute', '(', '""grid_level_type""', ',', 'Integer', '.', 'toString', '(', 'record', '.', 'getLevelType1', '(', ')', ')', ')', ')', ';', 'v', '.', 'addAttribute', '(', 'new', 'Attribute', '(', '_Coordinate', '.', 'AxisType', ',', 'axisType', '.', 'toString', '(', ')', ')', ')', ';', 'v', '.', 'addAttribute', '(', 'new', 'Attribute', '(', '_Coordinate', '.', 'Axes', ',', 'dims', ')', ')', ';', 'if', '(', '!', 'hcs', '.', 'isLatLon', '(', ')', ')', '{', 'v', '.', 'addAttribute', '(', 'new', 'Attribute', '(', '_Coordinate', '.', 'Transforms', ',', 'hcs', '.', 'getGridName', '(', ')', ')', ')', ';', '}', '}', 'double', '[', ']', 'data', '=', 'new', 'double', '[', 'nlevs', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'levels', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'Double', 'd', '=', '(', 'Double', ')', 'levels', '.', 'get', '(', 'i', ')', ';', 'data', '[', 'i', ']', '=', 'd', '.', 'doubleValue', '(', ')', ';', '}', 'Array', 'dataArray', '=', 'Array', '.', 'factory', '(', 'DataType', '.', 'DOUBLE', ',', 'new', 'int', '[', ']', '{', 'nlevs', '}', ',', 'data', ')', ';', 'v', '.', 'setDimensions', '(', 'verticalName', ')', ';', 'v', '.', 'setCachedData', '(', 'dataArray', ',', 'false', ')', ';', 'ncfile', '.', 'addVariable', '(', 'g', ',', 'v', ')', ';', '// look for vertical transforms', 'if', '(', 'record', '.', 'getLevelType1', '(', ')', '==', '109', ')', '{', 'findCoordinateTransform', '(', 'g', ',', '""Pressure""', ',', 'record', '.', 'getLevelType1', '(', ')', ')', ';', '}', '}']","Add this coordinate system to the netCDF file

@param ncfile the netCDF file
@param g      the group to add to","['Add', 'this', 'coordinate', 'system', 'to', 'the', 'netCDF', 'file']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/grid/GridCoordSys.java#L212-L288,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/permanentSoundOutput/events/MuteEvent.java,MuteEvent.createMuteEvent,"public static Optional<MuteEvent> createMuteEvent(Identification source) {
        if (source == null)
            return Optional.empty();
        try {
            MuteEvent muteRequest = new MuteEvent(source);
            return Optional.of(muteRequest);
        } catch (IllegalArgumentException e) {
            return Optional.empty();
        }
    }",java,"public static Optional<MuteEvent> createMuteEvent(Identification source) {
        if (source == null)
            return Optional.empty();
        try {
            MuteEvent muteRequest = new MuteEvent(source);
            return Optional.of(muteRequest);
        } catch (IllegalArgumentException e) {
            return Optional.empty();
        }
    }","['public', 'static', 'Optional', '<', 'MuteEvent', '>', 'createMuteEvent', '(', 'Identification', 'source', ')', '{', 'if', '(', 'source', '==', 'null', ')', 'return', 'Optional', '.', 'empty', '(', ')', ';', 'try', '{', 'MuteEvent', 'muteRequest', '=', 'new', 'MuteEvent', '(', 'source', ')', ';', 'return', 'Optional', '.', 'of', '(', 'muteRequest', ')', ';', '}', 'catch', '(', 'IllegalArgumentException', 'e', ')', '{', 'return', 'Optional', '.', 'empty', '(', ')', ';', '}', '}']","creates a new MuteEvent, will mute everything
@param source the caller
@return the optional StartMusicRequest","['creates', 'a', 'new', 'MuteEvent', 'will', 'mute', 'everything']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/permanentSoundOutput/events/MuteEvent.java#L55-L64,test
Unidata/thredds,ui/src/main/java/thredds/logs/PathMatcher.java,PathMatcher.match,"public Match match( String path) {
    SortedMap<String, Match> tail = treeMap.tailMap( path);
    if (tail.isEmpty()) return null;
    String after = tail.firstKey();
    //System.out.println(""  ""+path+""; after=""+afterPath);
    if (path.startsWith( after)) // common case
      return treeMap.get( after);

    // have to check more, until no common starting chars
    for (String key : tail.keySet()) {
      if (path.startsWith(key))
        return treeMap.get(key);
      // terminate when there's no match at all.
      if (StringUtil2.match(path, key) == 0)
        break;
    }

    return null;
  }",java,"public Match match( String path) {
    SortedMap<String, Match> tail = treeMap.tailMap( path);
    if (tail.isEmpty()) return null;
    String after = tail.firstKey();
    //System.out.println(""  ""+path+""; after=""+afterPath);
    if (path.startsWith( after)) // common case
      return treeMap.get( after);

    // have to check more, until no common starting chars
    for (String key : tail.keySet()) {
      if (path.startsWith(key))
        return treeMap.get(key);
      // terminate when there's no match at all.
      if (StringUtil2.match(path, key) == 0)
        break;
    }

    return null;
  }","['public', 'Match', 'match', '(', 'String', 'path', ')', '{', 'SortedMap', '<', 'String', ',', 'Match', '>', 'tail', '=', 'treeMap', '.', 'tailMap', '(', 'path', ')', ';', 'if', '(', 'tail', '.', 'isEmpty', '(', ')', ')', 'return', 'null', ';', 'String', 'after', '=', 'tail', '.', 'firstKey', '(', ')', ';', '//System.out.println(""  ""+path+""; after=""+afterPath);\r', 'if', '(', 'path', '.', 'startsWith', '(', 'after', ')', ')', '// common case\r', 'return', 'treeMap', '.', 'get', '(', 'after', ')', ';', '// have to check more, until no common starting chars\r', 'for', '(', 'String', 'key', ':', 'tail', '.', 'keySet', '(', ')', ')', '{', 'if', '(', 'path', '.', 'startsWith', '(', 'key', ')', ')', 'return', 'treeMap', '.', 'get', '(', 'key', ')', ';', ""// terminate when there's no match at all.\r"", 'if', '(', 'StringUtil2', '.', 'match', '(', 'path', ',', 'key', ')', '==', '0', ')', 'break', ';', '}', 'return', 'null', ';', '}']","Find the longest match.
@param path find object with longest match where path.startsWith( key)
@return the value whose key is the longest that matches path, or null if none","['Find', 'the', 'longest', 'match', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/thredds/logs/PathMatcher.java#L68-L86,test
lightcouch/LightCouch,src/main/java/org/lightcouch/CouchDbClientBase.java,CouchDbClientBase.setEntity,"private void setEntity(HttpEntityEnclosingRequestBase httpRequest, String json) {
		StringEntity entity = new StringEntity(json, ""UTF-8"");
		entity.setContentType(""application/json"");
		httpRequest.setEntity(entity);
	}",java,"private void setEntity(HttpEntityEnclosingRequestBase httpRequest, String json) {
		StringEntity entity = new StringEntity(json, ""UTF-8"");
		entity.setContentType(""application/json"");
		httpRequest.setEntity(entity);
	}","['private', 'void', 'setEntity', '(', 'HttpEntityEnclosingRequestBase', 'httpRequest', ',', 'String', 'json', ')', '{', 'StringEntity', 'entity', '=', 'new', 'StringEntity', '(', 'json', ',', '""UTF-8""', ')', ';', 'entity', '.', 'setContentType', '(', '""application/json""', ')', ';', 'httpRequest', '.', 'setEntity', '(', 'entity', ')', ';', '}']","Sets a JSON String as a request entity.
@param httpRequest The request to set entity.
@param json The JSON String to set.","['Sets', 'a', 'JSON', 'String', 'as', 'a', 'request', 'entity', '.']",9646889503475e862fd2158487e1cdd805447f4a,https://github.com/lightcouch/LightCouch/blob/9646889503475e862fd2158487e1cdd805447f4a/src/main/java/org/lightcouch/CouchDbClientBase.java#L688-L692,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Context.java,Context.getTimeout,"public int getTimeout() {
        String timeoutString = get(TIMEOUT);
        if (timeoutString == null)
            return -1;
        if (timeoutString.equalsIgnoreCase(DEPTH_INFINITY))
            return -2;
        if (timeoutString.regionMatches(true, 1, ""Second-"", 1, 7)) //$NON-NLS-1$
            return Integer.parseInt(timeoutString.substring(7));
        // ignore all other cases, and use infinite timeout
        return -2;
    }",java,"public int getTimeout() {
        String timeoutString = get(TIMEOUT);
        if (timeoutString == null)
            return -1;
        if (timeoutString.equalsIgnoreCase(DEPTH_INFINITY))
            return -2;
        if (timeoutString.regionMatches(true, 1, ""Second-"", 1, 7)) //$NON-NLS-1$
            return Integer.parseInt(timeoutString.substring(7));
        // ignore all other cases, and use infinite timeout
        return -2;
    }","['public', 'int', 'getTimeout', '(', ')', '{', 'String', 'timeoutString', '=', 'get', '(', 'TIMEOUT', ')', ';', 'if', '(', 'timeoutString', '==', 'null', ')', 'return', '-', '1', ';', 'if', '(', 'timeoutString', '.', 'equalsIgnoreCase', '(', 'DEPTH_INFINITY', ')', ')', 'return', '-', '2', ';', 'if', '(', 'timeoutString', '.', 'regionMatches', '(', 'true', ',', '1', ',', '""Second-""', ',', '1', ',', '7', ')', ')', '//$NON-NLS-1$', 'return', 'Integer', '.', 'parseInt', '(', 'timeoutString', '.', 'substring', '(', '7', ')', ')', ';', '// ignore all other cases, and use infinite timeout', 'return', '-', '2', ';', '}']","Get the lock timeout value. The value -1 means that the
value was not set, the value -2 means that the value was ""Infinity"".
Return the integer value for the TIMEOUT key.

<p>Implements the corresponding API in the interface
<code>Context</code>.</p>

@return the value for TIMEOUT
@see Context#getTimeout()","['Get', 'the', 'lock', 'timeout', 'value', '.', 'The', 'value', '-', '1', 'means', 'that', 'the', 'value', 'was', 'not', 'set', 'the', 'value', '-', '2', 'means', 'that', 'the', 'value', 'was', 'Infinity', '.', 'Return', 'the', 'integer', 'value', 'for', 'the', 'TIMEOUT', 'key', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/kernel/org/eclipse/webdav/internal/kernel/Context.java#L946-L956,test
orientechnologies/orientdb,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java,OrientBaseGraph.getElement,"public OrientElement getElement(final Object id) {
    makeActive();

    if (null == id)
      throw new IllegalArgumentException(""id cannot be null"");

    if (id instanceof OrientElement)
      return (OrientElement) id;

    OIdentifiable rec;
    if (id instanceof OIdentifiable)
      rec = (OIdentifiable) id;
    else
      try {
        rec = new ORecordId(id.toString());
      } catch (IllegalArgumentException iae) {
        // orientdb throws IllegalArgumentException: Argument 'xxxx' is
        // not a RecordId in form of string. Format must be:
        // <cluster-id>:<cluster-position>
        return null;
      }

    final ODocument doc = rec.getRecord();
    if (doc != null) {
      final OImmutableClass schemaClass = ODocumentInternal.getImmutableSchemaClass(doc);
      if (schemaClass != null && schemaClass.isEdgeType())
        return getEdge(doc);
      else
        return getVertexInstance(doc);
    }

    return null;
  }",java,"public OrientElement getElement(final Object id) {
    makeActive();

    if (null == id)
      throw new IllegalArgumentException(""id cannot be null"");

    if (id instanceof OrientElement)
      return (OrientElement) id;

    OIdentifiable rec;
    if (id instanceof OIdentifiable)
      rec = (OIdentifiable) id;
    else
      try {
        rec = new ORecordId(id.toString());
      } catch (IllegalArgumentException iae) {
        // orientdb throws IllegalArgumentException: Argument 'xxxx' is
        // not a RecordId in form of string. Format must be:
        // <cluster-id>:<cluster-position>
        return null;
      }

    final ODocument doc = rec.getRecord();
    if (doc != null) {
      final OImmutableClass schemaClass = ODocumentInternal.getImmutableSchemaClass(doc);
      if (schemaClass != null && schemaClass.isEdgeType())
        return getEdge(doc);
      else
        return getVertexInstance(doc);
    }

    return null;
  }","['public', 'OrientElement', 'getElement', '(', 'final', 'Object', 'id', ')', '{', 'makeActive', '(', ')', ';', 'if', '(', 'null', '==', 'id', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""id cannot be null""', ')', ';', 'if', '(', 'id', 'instanceof', 'OrientElement', ')', 'return', '(', 'OrientElement', ')', 'id', ';', 'OIdentifiable', 'rec', ';', 'if', '(', 'id', 'instanceof', 'OIdentifiable', ')', 'rec', '=', '(', 'OIdentifiable', ')', 'id', ';', 'else', 'try', '{', 'rec', '=', 'new', 'ORecordId', '(', 'id', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'IllegalArgumentException', 'iae', ')', '{', ""// orientdb throws IllegalArgumentException: Argument 'xxxx' is"", '// not a RecordId in form of string. Format must be:', '// <cluster-id>:<cluster-position>', 'return', 'null', ';', '}', 'final', 'ODocument', 'doc', '=', 'rec', '.', 'getRecord', '(', ')', ';', 'if', '(', 'doc', '!=', 'null', ')', '{', 'final', 'OImmutableClass', 'schemaClass', '=', 'ODocumentInternal', '.', 'getImmutableSchemaClass', '(', 'doc', ')', ';', 'if', '(', 'schemaClass', '!=', 'null', '&&', 'schemaClass', '.', 'isEdgeType', '(', ')', ')', 'return', 'getEdge', '(', 'doc', ')', ';', 'else', 'return', 'getVertexInstance', '(', 'doc', ')', ';', '}', 'return', 'null', ';', '}']","Returns a graph element, vertex or edge, starting from an ID.

@param id Can by a String, ODocument or an OIdentifiable object.

@return OrientElement subclass such as OrientVertex or OrientEdge","['Returns', 'a', 'graph', 'element', 'vertex', 'or', 'edge', 'starting', 'from', 'an', 'ID', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java#L1589-L1621,test
stanfy/enroscar,images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java,ImagesManager.setResultImage,"protected final void setResultImage(final ImageConsumer consumer, final ImageResult result, final boolean animate) {
    decorateResult(consumer, result);
    consumer.setImage(createDrawable(result.getBitmap()), animate);
    consumer.reset();
  }",java,"protected final void setResultImage(final ImageConsumer consumer, final ImageResult result, final boolean animate) {
    decorateResult(consumer, result);
    consumer.setImage(createDrawable(result.getBitmap()), animate);
    consumer.reset();
  }","['protected', 'final', 'void', 'setResultImage', '(', 'final', 'ImageConsumer', 'consumer', ',', 'final', 'ImageResult', 'result', ',', 'final', 'boolean', 'animate', ')', '{', 'decorateResult', '(', 'consumer', ',', 'result', ')', ';', 'consumer', '.', 'setImage', '(', 'createDrawable', '(', 'result', '.', 'getBitmap', '(', ')', ')', ',', 'animate', ')', ';', 'consumer', '.', 'reset', '(', ')', ';', '}']","It must be executed in the main thread.
@param consumer image consumer
@param result result instance
@param animate whether to animate image change","['It', 'must', 'be', 'executed', 'in', 'the', 'main', 'thread', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java#L391-L395,test
wildfly/wildfly,webservices/server-integration/src/main/java/org/jboss/as/webservices/publish/EndpointPublisherImpl.java,EndpointPublisherImpl.doPrepare,"protected DeploymentUnit doPrepare(String context, ClassLoader loader,
            Map<String, String> urlPatternToClassNameMap, JBossWebMetaData jbwmd, WebservicesMetaData metadata, JBossWebservicesMetaData jbwsMetadata) {
        ClassLoader origClassLoader = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();
        WSEndpointDeploymentUnit unit = new WSEndpointDeploymentUnit(loader, context, urlPatternToClassNameMap, jbwmd, metadata, jbwsMetadata);
        try {
            WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ClassLoaderProvider.getDefaultProvider().getServerIntegrationClassLoader());
            WSDeploymentBuilder.getInstance().build(unit);
            return unit;
        } finally {
            WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(origClassLoader);
        }
    }",java,"protected DeploymentUnit doPrepare(String context, ClassLoader loader,
            Map<String, String> urlPatternToClassNameMap, JBossWebMetaData jbwmd, WebservicesMetaData metadata, JBossWebservicesMetaData jbwsMetadata) {
        ClassLoader origClassLoader = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();
        WSEndpointDeploymentUnit unit = new WSEndpointDeploymentUnit(loader, context, urlPatternToClassNameMap, jbwmd, metadata, jbwsMetadata);
        try {
            WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ClassLoaderProvider.getDefaultProvider().getServerIntegrationClassLoader());
            WSDeploymentBuilder.getInstance().build(unit);
            return unit;
        } finally {
            WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(origClassLoader);
        }
    }","['protected', 'DeploymentUnit', 'doPrepare', '(', 'String', 'context', ',', 'ClassLoader', 'loader', ',', 'Map', '<', 'String', ',', 'String', '>', 'urlPatternToClassNameMap', ',', 'JBossWebMetaData', 'jbwmd', ',', 'WebservicesMetaData', 'metadata', ',', 'JBossWebservicesMetaData', 'jbwsMetadata', ')', '{', 'ClassLoader', 'origClassLoader', '=', 'WildFlySecurityManager', '.', 'getCurrentContextClassLoaderPrivileged', '(', ')', ';', 'WSEndpointDeploymentUnit', 'unit', '=', 'new', 'WSEndpointDeploymentUnit', '(', 'loader', ',', 'context', ',', 'urlPatternToClassNameMap', ',', 'jbwmd', ',', 'metadata', ',', 'jbwsMetadata', ')', ';', 'try', '{', 'WildFlySecurityManager', '.', 'setCurrentContextClassLoaderPrivileged', '(', 'ClassLoaderProvider', '.', 'getDefaultProvider', '(', ')', '.', 'getServerIntegrationClassLoader', '(', ')', ')', ';', 'WSDeploymentBuilder', '.', 'getInstance', '(', ')', '.', 'build', '(', 'unit', ')', ';', 'return', 'unit', ';', '}', 'finally', '{', 'WildFlySecurityManager', '.', 'setCurrentContextClassLoaderPrivileged', '(', 'origClassLoader', ')', ';', '}', '}']","Prepare the ws Deployment and return a DeploymentUnit containing it

@param context
@param loader
@param urlPatternToClassNameMap
@param jbwmd
@param metadata
@param jbwsMetadata
@return","['Prepare', 'the', 'ws', 'Deployment', 'and', 'return', 'a', 'DeploymentUnit', 'containing', 'it']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/webservices/server-integration/src/main/java/org/jboss/as/webservices/publish/EndpointPublisherImpl.java#L130-L141,test
streamsets/datacollector,container/src/main/java/com/streamsets/datacollector/classpath/CollisionWhitelist.java,CollisionWhitelist.versionsMatch,"private static boolean versionsMatch(String expectedVersions, Set<String> versions) {
    Set<String> expectedSet = Sets.newHashSet(expectedVersions.split("",""));
    return Sets.symmetricDifference(expectedSet, versions).isEmpty();
  }",java,"private static boolean versionsMatch(String expectedVersions, Set<String> versions) {
    Set<String> expectedSet = Sets.newHashSet(expectedVersions.split("",""));
    return Sets.symmetricDifference(expectedSet, versions).isEmpty();
  }","['private', 'static', 'boolean', 'versionsMatch', '(', 'String', 'expectedVersions', ',', 'Set', '<', 'String', '>', 'versions', ')', '{', 'Set', '<', 'String', '>', 'expectedSet', '=', 'Sets', '.', 'newHashSet', '(', 'expectedVersions', '.', 'split', '(', '"",""', ')', ')', ';', 'return', 'Sets', '.', 'symmetricDifference', '(', 'expectedSet', ',', 'versions', ')', '.', 'isEmpty', '(', ')', ';', '}']","Compare expected versions with given versions to see if they are the same or not.

@param expectedVersions Versions that are expected (and thus whitelisted)
@param versions Versions that were detected on the classpath.
@return True if and only if those two ""sets"" equals","['Compare', 'expected', 'versions', 'with', 'given', 'versions', 'to', 'see', 'if', 'they', 'are', 'the', 'same', 'or', 'not', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/classpath/CollisionWhitelist.java#L77-L80,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/classic/android/SQLiteAppender.java,SQLiteAppender.lastCheckExpired,"private boolean lastCheckExpired(Duration expiry, long lastCleanupTime) {
    boolean isExpired = false;
    if (expiry != null && expiry.getMilliseconds() > 0) {
      final long now = this.clock.currentTimeMillis();
      final long timeDiff = now - lastCleanupTime;
      isExpired = (lastCleanupTime <= 0) || (timeDiff >= expiry.getMilliseconds());
    }
    return isExpired;
  }",java,"private boolean lastCheckExpired(Duration expiry, long lastCleanupTime) {
    boolean isExpired = false;
    if (expiry != null && expiry.getMilliseconds() > 0) {
      final long now = this.clock.currentTimeMillis();
      final long timeDiff = now - lastCleanupTime;
      isExpired = (lastCleanupTime <= 0) || (timeDiff >= expiry.getMilliseconds());
    }
    return isExpired;
  }","['private', 'boolean', 'lastCheckExpired', '(', 'Duration', 'expiry', ',', 'long', 'lastCleanupTime', ')', '{', 'boolean', 'isExpired', '=', 'false', ';', 'if', '(', 'expiry', '!=', 'null', '&&', 'expiry', '.', 'getMilliseconds', '(', ')', '>', '0', ')', '{', 'final', 'long', 'now', '=', 'this', '.', 'clock', '.', 'currentTimeMillis', '(', ')', ';', 'final', 'long', 'timeDiff', '=', 'now', '-', 'lastCleanupTime', ';', 'isExpired', '=', '(', 'lastCleanupTime', '<=', '0', ')', '||', '(', 'timeDiff', '>=', 'expiry', '.', 'getMilliseconds', '(', ')', ')', ';', '}', 'return', 'isExpired', ';', '}']","Determines whether it's time to clear expired logs
@param expiry max time duration between checks
@param lastCleanupTime timestamp (ms) of last cleanup
@return true if last check has expired","['Determines', 'whether', 'it', 's', 'time', 'to', 'clear', 'expired', 'logs']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/classic/android/SQLiteAppender.java#L197-L205,test
subchen/jetbrick-all-1x,jetbrick-commons/src/main/java/jetbrick/collections/ArrayStack.java,ArrayStack.push,"public T push(T element) {
        int i;
        Object[] els;
        if ((i = size++) >= (els = elements).length) {
            System.arraycopy(els, 0, els = elements = new Object[i << 1], 0, i);
        }
        els[i] = element;
        return element;
    }",java,"public T push(T element) {
        int i;
        Object[] els;
        if ((i = size++) >= (els = elements).length) {
            System.arraycopy(els, 0, els = elements = new Object[i << 1], 0, i);
        }
        els[i] = element;
        return element;
    }","['public', 'T', 'push', '(', 'T', 'element', ')', '{', 'int', 'i', ';', 'Object', '[', ']', 'els', ';', 'if', '(', '(', 'i', '=', 'size', '++', ')', '>=', '(', 'els', '=', 'elements', ')', '.', 'length', ')', '{', 'System', '.', 'arraycopy', '(', 'els', ',', '0', ',', 'els', '=', 'elements', '=', 'new', 'Object', '[', 'i', '<<', '1', ']', ',', '0', ',', 'i', ')', ';', '}', 'els', '[', 'i', ']', '=', 'element', ';', 'return', 'element', ';', '}']","Pushes an item onto the top of this stack.

@param element － the element to be pushed onto this stack
@return the item argument","['Pushes', 'an', 'item', 'onto', 'the', 'top', 'of', 'this', 'stack', '.']",abe54629a508592287afe5ca4ffc93bf8bf4940c,https://github.com/subchen/jetbrick-all-1x/blob/abe54629a508592287afe5ca4ffc93bf8bf4940c/jetbrick-commons/src/main/java/jetbrick/collections/ArrayStack.java#L70-L78,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java,JspUtil.checkScope,"public static void checkScope(String scope, Node n, ErrorDispatcher err)
            throws JasperException {
	if (scope != null && !scope.equals(""page"") && !scope.equals(""request"")
		&& !scope.equals(""session"") && !scope.equals(""application"")) {
	    err.jspError(n, ""jsp.error.invalid.scope"", scope);
	}
    }",java,"public static void checkScope(String scope, Node n, ErrorDispatcher err)
            throws JasperException {
	if (scope != null && !scope.equals(""page"") && !scope.equals(""request"")
		&& !scope.equals(""session"") && !scope.equals(""application"")) {
	    err.jspError(n, ""jsp.error.invalid.scope"", scope);
	}
    }","['public', 'static', 'void', 'checkScope', '(', 'String', 'scope', ',', 'Node', 'n', ',', 'ErrorDispatcher', 'err', ')', 'throws', 'JasperException', '{', 'if', '(', 'scope', '!=', 'null', '&&', '!', 'scope', '.', 'equals', '(', '""page""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""request""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""session""', ')', '&&', '!', 'scope', '.', 'equals', '(', '""application""', ')', ')', '{', 'err', '.', 'jspError', '(', 'n', ',', '""jsp.error.invalid.scope""', ',', 'scope', ')', ';', '}', '}']","Checks to see if the given scope is valid.

@param scope The scope to be checked
@param n The Node containing the 'scope' attribute whose value is to be
checked
@param err error dispatcher

@throws JasperException if scope is not null and different from
&quot;page&quot;, &quot;request&quot;, &quot;session&quot;, and
&quot;application&quot;","['Checks', 'to', 'see', 'if', 'the', 'given', 'scope', 'is', 'valid', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java#L251-L257,test
blademainer/common_utils,commons-file/src/main/java/jargs/gnu/CmdLineParser.java,CmdLineParser.addDoubleOption,"public final Option addDoubleOption( char shortForm, String longForm ) {
        return addOption(new Option.DoubleOption(shortForm, longForm));
    }",java,"public final Option addDoubleOption( char shortForm, String longForm ) {
        return addOption(new Option.DoubleOption(shortForm, longForm));
    }","['public', 'final', 'Option', 'addDoubleOption', '(', 'char', 'shortForm', ',', 'String', 'longForm', ')', '{', 'return', 'addOption', '(', 'new', 'Option', '.', 'DoubleOption', '(', 'shortForm', ',', 'longForm', ')', ')', ';', '}']","Convenience method for adding a double option.
@return the new Option","['Convenience', 'method', 'for', 'adding', 'a', 'double', 'option', '.']",ef6baf0367c16de95a28caab67a7d5842a6d13db,https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/jargs/gnu/CmdLineParser.java#L326-L328,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/TieWebSheetView.java,TieWebSheetView.getDefaultDatePattern,"public String getDefaultDatePattern() {
		if (defaultDatePattern == null) {
			DateFormat formatter = DateFormat.getDateInstance(DateFormat.SHORT, Locale.getDefault());
			defaultDatePattern = ((SimpleDateFormat) formatter).toLocalizedPattern();
		}
		return defaultDatePattern;
	}",java,"public String getDefaultDatePattern() {
		if (defaultDatePattern == null) {
			DateFormat formatter = DateFormat.getDateInstance(DateFormat.SHORT, Locale.getDefault());
			defaultDatePattern = ((SimpleDateFormat) formatter).toLocalizedPattern();
		}
		return defaultDatePattern;
	}","['public', 'String', 'getDefaultDatePattern', '(', ')', '{', 'if', '(', 'defaultDatePattern', '==', 'null', ')', '{', 'DateFormat', 'formatter', '=', 'DateFormat', '.', 'getDateInstance', '(', 'DateFormat', '.', 'SHORT', ',', 'Locale', '.', 'getDefault', '(', ')', ')', ';', 'defaultDatePattern', '=', '(', '(', 'SimpleDateFormat', ')', 'formatter', ')', '.', 'toLocalizedPattern', '(', ')', ';', '}', 'return', 'defaultDatePattern', ';', '}']","Gets the default date pattern.

@return the default date pattern","['Gets', 'the', 'default', 'date', 'pattern', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/TieWebSheetView.java#L583-L589,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/nids/Nidsheader.java,Nidsheader.convert,"protected Object convert( byte[] barray, DataType dataType, int nelems, int byteOrder) {

        if (dataType == DataType.BYTE) {
          return barray;
        }

        if (dataType == DataType.CHAR) {
          return IospHelper.convertByteToChar( barray);
        }

        ByteBuffer bbuff = ByteBuffer.wrap( barray);
        if (byteOrder >= 0)
          bbuff.order( byteOrder == ucar.unidata.io.RandomAccessFile.LITTLE_ENDIAN? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN);

        if (dataType == DataType.SHORT) {
          ShortBuffer tbuff = bbuff.asShortBuffer();
          short[] pa = new short[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.INT) {
          IntBuffer tbuff = bbuff.asIntBuffer();
          int[] pa = new int[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.FLOAT) {
          FloatBuffer tbuff = bbuff.asFloatBuffer();
          float[] pa = new float[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.DOUBLE) {
          DoubleBuffer tbuff = bbuff.asDoubleBuffer();
          double[] pa = new double[nelems];
          tbuff.get( pa);
          return pa;
        }

        throw new IllegalStateException();
    }",java,"protected Object convert( byte[] barray, DataType dataType, int nelems, int byteOrder) {

        if (dataType == DataType.BYTE) {
          return barray;
        }

        if (dataType == DataType.CHAR) {
          return IospHelper.convertByteToChar( barray);
        }

        ByteBuffer bbuff = ByteBuffer.wrap( barray);
        if (byteOrder >= 0)
          bbuff.order( byteOrder == ucar.unidata.io.RandomAccessFile.LITTLE_ENDIAN? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN);

        if (dataType == DataType.SHORT) {
          ShortBuffer tbuff = bbuff.asShortBuffer();
          short[] pa = new short[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.INT) {
          IntBuffer tbuff = bbuff.asIntBuffer();
          int[] pa = new int[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.FLOAT) {
          FloatBuffer tbuff = bbuff.asFloatBuffer();
          float[] pa = new float[nelems];
          tbuff.get( pa);
          return pa;

        } else if (dataType == DataType.DOUBLE) {
          DoubleBuffer tbuff = bbuff.asDoubleBuffer();
          double[] pa = new double[nelems];
          tbuff.get( pa);
          return pa;
        }

        throw new IllegalStateException();
    }","['protected', 'Object', 'convert', '(', 'byte', '[', ']', 'barray', ',', 'DataType', 'dataType', ',', 'int', 'nelems', ',', 'int', 'byteOrder', ')', '{', 'if', '(', 'dataType', '==', 'DataType', '.', 'BYTE', ')', '{', 'return', 'barray', ';', '}', 'if', '(', 'dataType', '==', 'DataType', '.', 'CHAR', ')', '{', 'return', 'IospHelper', '.', 'convertByteToChar', '(', 'barray', ')', ';', '}', 'ByteBuffer', 'bbuff', '=', 'ByteBuffer', '.', 'wrap', '(', 'barray', ')', ';', 'if', '(', 'byteOrder', '>=', '0', ')', 'bbuff', '.', 'order', '(', 'byteOrder', '==', 'ucar', '.', 'unidata', '.', 'io', '.', 'RandomAccessFile', '.', 'LITTLE_ENDIAN', '?', 'ByteOrder', '.', 'LITTLE_ENDIAN', ':', 'ByteOrder', '.', 'BIG_ENDIAN', ')', ';', 'if', '(', 'dataType', '==', 'DataType', '.', 'SHORT', ')', '{', 'ShortBuffer', 'tbuff', '=', 'bbuff', '.', 'asShortBuffer', '(', ')', ';', 'short', '[', ']', 'pa', '=', 'new', 'short', '[', 'nelems', ']', ';', 'tbuff', '.', 'get', '(', 'pa', ')', ';', 'return', 'pa', ';', '}', 'else', 'if', '(', 'dataType', '==', 'DataType', '.', 'INT', ')', '{', 'IntBuffer', 'tbuff', '=', 'bbuff', '.', 'asIntBuffer', '(', ')', ';', 'int', '[', ']', 'pa', '=', 'new', 'int', '[', 'nelems', ']', ';', 'tbuff', '.', 'get', '(', 'pa', ')', ';', 'return', 'pa', ';', '}', 'else', 'if', '(', 'dataType', '==', 'DataType', '.', 'FLOAT', ')', '{', 'FloatBuffer', 'tbuff', '=', 'bbuff', '.', 'asFloatBuffer', '(', ')', ';', 'float', '[', ']', 'pa', '=', 'new', 'float', '[', 'nelems', ']', ';', 'tbuff', '.', 'get', '(', 'pa', ')', ';', 'return', 'pa', ';', '}', 'else', 'if', '(', 'dataType', '==', 'DataType', '.', 'DOUBLE', ')', '{', 'DoubleBuffer', 'tbuff', '=', 'bbuff', '.', 'asDoubleBuffer', '(', ')', ';', 'double', '[', ']', 'pa', '=', 'new', 'double', '[', 'nelems', ']', ';', 'tbuff', '.', 'get', '(', 'pa', ')', ';', 'return', 'pa', ';', '}', 'throw', 'new', 'IllegalStateException', '(', ')', ';', '}']","this converts a byte array to another primitive array
@param barray
@param dataType
@param nelems
@param byteOrder
@return","['this', 'converts', 'a', 'byte', 'array', 'to', 'another', 'primitive', 'array']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/nids/Nidsheader.java#L3332-L3372,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/util/ComplexUtil.java,ComplexUtil.neg,"public static IComplexNumber neg(IComplexNumber num) {
        Complex c = new Complex(num.realComponent().doubleValue(), num.imaginaryComponent().doubleValue()).negate();
        return Nd4j.createDouble(c.getReal(), c.getImaginary());
    }",java,"public static IComplexNumber neg(IComplexNumber num) {
        Complex c = new Complex(num.realComponent().doubleValue(), num.imaginaryComponent().doubleValue()).negate();
        return Nd4j.createDouble(c.getReal(), c.getImaginary());
    }","['public', 'static', 'IComplexNumber', 'neg', '(', 'IComplexNumber', 'num', ')', '{', 'Complex', 'c', '=', 'new', 'Complex', '(', 'num', '.', 'realComponent', '(', ')', '.', 'doubleValue', '(', ')', ',', 'num', '.', 'imaginaryComponent', '(', ')', '.', 'doubleValue', '(', ')', ')', '.', 'negate', '(', ')', ';', 'return', 'Nd4j', '.', 'createDouble', '(', 'c', '.', 'getReal', '(', ')', ',', 'c', '.', 'getImaginary', '(', ')', ')', ';', '}']","Return the  log value of the given complex number

@param num the number to getScalar the absolute value for
@return the absolute value of this complex number","['Return', 'the', 'log', 'value', 'of', 'the', 'given', 'complex', 'number']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/util/ComplexUtil.java#L160-L163,test
orientechnologies/orientdb,server/src/main/java/com/orientechnologies/orient/server/OSystemDatabase.java,OSystemDatabase.createCluster,"public void createCluster(final String className, final String clusterName) {
    final ODatabaseDocumentInternal currentDB = ODatabaseRecordThreadLocal.instance().getIfDefined();
    try {
      final ODatabaseDocumentInternal sysdb = openSystemDatabase();
      try {

        if (!sysdb.existsCluster(clusterName)) {
          OSchema schema = sysdb.getMetadata().getSchema();
          OClass cls = schema.getClass(className);

          if (cls != null) {
            cls.addCluster(clusterName);
          } else {
            OLogManager.instance().error(this, ""createCluster() Class name %s does not exist"", null, className);
          }
        }

      } finally {
        sysdb.close();
      }

    } finally {
      if (currentDB != null)
        ODatabaseRecordThreadLocal.instance().set(currentDB);
      else
        ODatabaseRecordThreadLocal.instance().remove();
    }
  }",java,"public void createCluster(final String className, final String clusterName) {
    final ODatabaseDocumentInternal currentDB = ODatabaseRecordThreadLocal.instance().getIfDefined();
    try {
      final ODatabaseDocumentInternal sysdb = openSystemDatabase();
      try {

        if (!sysdb.existsCluster(clusterName)) {
          OSchema schema = sysdb.getMetadata().getSchema();
          OClass cls = schema.getClass(className);

          if (cls != null) {
            cls.addCluster(clusterName);
          } else {
            OLogManager.instance().error(this, ""createCluster() Class name %s does not exist"", null, className);
          }
        }

      } finally {
        sysdb.close();
      }

    } finally {
      if (currentDB != null)
        ODatabaseRecordThreadLocal.instance().set(currentDB);
      else
        ODatabaseRecordThreadLocal.instance().remove();
    }
  }","['public', 'void', 'createCluster', '(', 'final', 'String', 'className', ',', 'final', 'String', 'clusterName', ')', '{', 'final', 'ODatabaseDocumentInternal', 'currentDB', '=', 'ODatabaseRecordThreadLocal', '.', 'instance', '(', ')', '.', 'getIfDefined', '(', ')', ';', 'try', '{', 'final', 'ODatabaseDocumentInternal', 'sysdb', '=', 'openSystemDatabase', '(', ')', ';', 'try', '{', 'if', '(', '!', 'sysdb', '.', 'existsCluster', '(', 'clusterName', ')', ')', '{', 'OSchema', 'schema', '=', 'sysdb', '.', 'getMetadata', '(', ')', '.', 'getSchema', '(', ')', ';', 'OClass', 'cls', '=', 'schema', '.', 'getClass', '(', 'className', ')', ';', 'if', '(', 'cls', '!=', 'null', ')', '{', 'cls', '.', 'addCluster', '(', 'clusterName', ')', ';', '}', 'else', '{', 'OLogManager', '.', 'instance', '(', ')', '.', 'error', '(', 'this', ',', '""createCluster() Class name %s does not exist""', ',', 'null', ',', 'className', ')', ';', '}', '}', '}', 'finally', '{', 'sysdb', '.', 'close', '(', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'currentDB', '!=', 'null', ')', 'ODatabaseRecordThreadLocal', '.', 'instance', '(', ')', '.', 'set', '(', 'currentDB', ')', ';', 'else', 'ODatabaseRecordThreadLocal', '.', 'instance', '(', ')', '.', 'remove', '(', ')', ';', '}', '}']","Adds the specified cluster to the class, if it doesn't already exist.","['Adds', 'the', 'specified', 'cluster', 'to', 'the', 'class', 'if', 'it', 'doesn', 't', 'already', 'exist', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/server/src/main/java/com/orientechnologies/orient/server/OSystemDatabase.java#L55-L82,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Generator.java,Generator.generatePostamble,"private void generatePostamble(Node.Nodes page) {
        out.popIndent();
        out.printil(""} catch (Throwable t) {"");
        out.pushIndent();
        out.printil(
            ""if (!(t instanceof SkipPageException)){"");
        out.pushIndent();
        out.printil(""out = _jspx_out;"");
        out.printil(""if (out != null && out.getBufferSize() != 0)"");
        out.pushIndent();
        out.printil(""out.clearBuffer();"");
        out.popIndent();

        out.printil(
            ""if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);"");
        out.printil(""else throw new ServletException(t);"");
        out.popIndent();
        out.printil(""}"");
        out.popIndent();
        out.printil(""} finally {"");
        out.pushIndent();

        out.printil(
            ""_jspxFactory.releasePageContext(_jspx_page_context);"");

        out.popIndent();
        out.printil(""}"");

        // Close the service method
        out.popIndent();
        out.printil(""}"");

        // Generated methods, helper classes, etc.
        genCommonPostamble();
    }",java,"private void generatePostamble(Node.Nodes page) {
        out.popIndent();
        out.printil(""} catch (Throwable t) {"");
        out.pushIndent();
        out.printil(
            ""if (!(t instanceof SkipPageException)){"");
        out.pushIndent();
        out.printil(""out = _jspx_out;"");
        out.printil(""if (out != null && out.getBufferSize() != 0)"");
        out.pushIndent();
        out.printil(""out.clearBuffer();"");
        out.popIndent();

        out.printil(
            ""if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);"");
        out.printil(""else throw new ServletException(t);"");
        out.popIndent();
        out.printil(""}"");
        out.popIndent();
        out.printil(""} finally {"");
        out.pushIndent();

        out.printil(
            ""_jspxFactory.releasePageContext(_jspx_page_context);"");

        out.popIndent();
        out.printil(""}"");

        // Close the service method
        out.popIndent();
        out.printil(""}"");

        // Generated methods, helper classes, etc.
        genCommonPostamble();
    }","['private', 'void', 'generatePostamble', '(', 'Node', '.', 'Nodes', 'page', ')', '{', 'out', '.', 'popIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""} catch (Throwable t) {""', ')', ';', 'out', '.', 'pushIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""if (!(t instanceof SkipPageException)){""', ')', ';', 'out', '.', 'pushIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""out = _jspx_out;""', ')', ';', 'out', '.', 'printil', '(', '""if (out != null && out.getBufferSize() != 0)""', ')', ';', 'out', '.', 'pushIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""out.clearBuffer();""', ')', ';', 'out', '.', 'popIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);""', ')', ';', 'out', '.', 'printil', '(', '""else throw new ServletException(t);""', ')', ';', 'out', '.', 'popIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""}""', ')', ';', 'out', '.', 'popIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""} finally {""', ')', ';', 'out', '.', 'pushIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""_jspxFactory.releasePageContext(_jspx_page_context);""', ')', ';', 'out', '.', 'popIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""}""', ')', ';', '// Close the service method', 'out', '.', 'popIndent', '(', ')', ';', 'out', '.', 'printil', '(', '""}""', ')', ';', '// Generated methods, helper classes, etc.', 'genCommonPostamble', '(', ')', ';', '}']",Generates the ending part of the static portion of the servlet.,"['Generates', 'the', 'ending', 'part', 'of', 'the', 'static', 'portion', 'of', 'the', 'servlet', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Generator.java#L3380-L3414,test
alipay/sofa-bolt,src/main/java/com/alipay/remoting/codec/ProtocolCodeBasedDecoder.java,ProtocolCodeBasedDecoder.decodeProtocolCode,"protected ProtocolCode decodeProtocolCode(ByteBuf in) {
        if (in.readableBytes() >= protocolCodeLength) {
            byte[] protocolCodeBytes = new byte[protocolCodeLength];
            in.readBytes(protocolCodeBytes);
            return ProtocolCode.fromBytes(protocolCodeBytes);
        }
        return null;
    }",java,"protected ProtocolCode decodeProtocolCode(ByteBuf in) {
        if (in.readableBytes() >= protocolCodeLength) {
            byte[] protocolCodeBytes = new byte[protocolCodeLength];
            in.readBytes(protocolCodeBytes);
            return ProtocolCode.fromBytes(protocolCodeBytes);
        }
        return null;
    }","['protected', 'ProtocolCode', 'decodeProtocolCode', '(', 'ByteBuf', 'in', ')', '{', 'if', '(', 'in', '.', 'readableBytes', '(', ')', '>=', 'protocolCodeLength', ')', '{', 'byte', '[', ']', 'protocolCodeBytes', '=', 'new', 'byte', '[', 'protocolCodeLength', ']', ';', 'in', '.', 'readBytes', '(', 'protocolCodeBytes', ')', ';', 'return', 'ProtocolCode', '.', 'fromBytes', '(', 'protocolCodeBytes', ')', ';', '}', 'return', 'null', ';', '}']","decode the protocol code

@param in input byte buf
@return an instance of ProtocolCode","['decode', 'the', 'protocol', 'code']",0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046,https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/codec/ProtocolCodeBasedDecoder.java#L57-L64,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/related/UserMappingDao.java,UserMappingDao.uniqueBaseIds,"public List<Long> uniqueBaseIds() {
        return querySingleColumnTypedResults(
                ""SELECT DISTINCT "" + CoreSQLUtils.quoteWrap(UserMappingTable.COLUMN_BASE_ID) + "" FROM ""
                        + CoreSQLUtils.quoteWrap(getTableName()), null);
    }",java,"public List<Long> uniqueBaseIds() {
        return querySingleColumnTypedResults(
                ""SELECT DISTINCT "" + CoreSQLUtils.quoteWrap(UserMappingTable.COLUMN_BASE_ID) + "" FROM ""
                        + CoreSQLUtils.quoteWrap(getTableName()), null);
    }","['public', 'List', '<', 'Long', '>', 'uniqueBaseIds', '(', ')', '{', 'return', 'querySingleColumnTypedResults', '(', '""SELECT DISTINCT ""', '+', 'CoreSQLUtils', '.', 'quoteWrap', '(', 'UserMappingTable', '.', 'COLUMN_BASE_ID', ')', '+', '"" FROM ""', '+', 'CoreSQLUtils', '.', 'quoteWrap', '(', 'getTableName', '(', ')', ')', ',', 'null', ')', ';', '}']","Get the unique base ids

@return list of unique base ids
@since 3.2.0","['Get', 'the', 'unique', 'base', 'ids']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/related/UserMappingDao.java#L183-L187,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxyAspectData.java,ProxyAspectData.getCachedAdviceClassReader,"private ClassReader getCachedAdviceClassReader(final Class<? extends ProxyAdvice> advice) {
		if (adviceClassReaderCache == null) {
			adviceClassReaderCache = TypeCache.createDefault();
		}
		ClassReader adviceReader = adviceClassReaderCache.get(advice);
		if (adviceReader == null) {
			adviceReader = createAdviceClassReader(advice);
			adviceClassReaderCache.put(advice, adviceReader);
		}
		return adviceReader;
	}",java,"private ClassReader getCachedAdviceClassReader(final Class<? extends ProxyAdvice> advice) {
		if (adviceClassReaderCache == null) {
			adviceClassReaderCache = TypeCache.createDefault();
		}
		ClassReader adviceReader = adviceClassReaderCache.get(advice);
		if (adviceReader == null) {
			adviceReader = createAdviceClassReader(advice);
			adviceClassReaderCache.put(advice, adviceReader);
		}
		return adviceReader;
	}","['private', 'ClassReader', 'getCachedAdviceClassReader', '(', 'final', 'Class', '<', '?', 'extends', 'ProxyAdvice', '>', 'advice', ')', '{', 'if', '(', 'adviceClassReaderCache', '==', 'null', ')', '{', 'adviceClassReaderCache', '=', 'TypeCache', '.', 'createDefault', '(', ')', ';', '}', 'ClassReader', 'adviceReader', '=', 'adviceClassReaderCache', '.', 'get', '(', 'advice', ')', ';', 'if', '(', 'adviceReader', '==', 'null', ')', '{', 'adviceReader', '=', 'createAdviceClassReader', '(', 'advice', ')', ';', 'adviceClassReaderCache', '.', 'put', '(', 'advice', ',', 'adviceReader', ')', ';', '}', 'return', 'adviceReader', ';', '}']",Returns class reader for advice.,"['Returns', 'class', 'reader', 'for', 'advice', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxyAspectData.java#L119-L129,test
oblac/jodd,jodd-core/src/main/java/jodd/util/CharSequenceUtil.java,CharSequenceUtil.findFirstEqual,"public static int findFirstEqual(final CharSequence source, final int index, final CharSequence match) {
		for (int i = index; i < source.length(); i++) {
			if (equalsOne(source.charAt(i), match)) {
				return i;
			}
		}
		return -1;
	}",java,"public static int findFirstEqual(final CharSequence source, final int index, final CharSequence match) {
		for (int i = index; i < source.length(); i++) {
			if (equalsOne(source.charAt(i), match)) {
				return i;
			}
		}
		return -1;
	}","['public', 'static', 'int', 'findFirstEqual', '(', 'final', 'CharSequence', 'source', ',', 'final', 'int', 'index', ',', 'final', 'CharSequence', 'match', ')', '{', 'for', '(', 'int', 'i', '=', 'index', ';', 'i', '<', 'source', '.', 'length', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'equalsOne', '(', 'source', '.', 'charAt', '(', 'i', ')', ',', 'match', ')', ')', '{', 'return', 'i', ';', '}', '}', 'return', '-', '1', ';', '}']","Finds index of the first character in given charsequence the matches any from the
given set of characters.

@return index of matched character or -1","['Finds', 'index', 'of', 'the', 'first', 'character', 'in', 'given', 'charsequence', 'the', 'matches', 'any', 'from', 'the', 'given', 'set', 'of', 'characters', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/CharSequenceUtil.java#L129-L136,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadataDataSource.java,GeoPackageMetadataDataSource.get,"public GeoPackageMetadata get(long id) {
        GeoPackageMetadata metadata = null;
        String selection = GeoPackageMetadata.COLUMN_ID + "" = ?"";
        String[] selectionArgs = new String[]{String.valueOf(id)};
        Cursor cursor = db.query(
                GeoPackageMetadata.TABLE_NAME,
                GeoPackageMetadata.COLUMNS, selection, selectionArgs, null, null, null);
        try {
            if (cursor.moveToNext()) {
                metadata = createGeoPackageMetadata(cursor);
            }
        } finally {
            cursor.close();
        }
        return metadata;
    }",java,"public GeoPackageMetadata get(long id) {
        GeoPackageMetadata metadata = null;
        String selection = GeoPackageMetadata.COLUMN_ID + "" = ?"";
        String[] selectionArgs = new String[]{String.valueOf(id)};
        Cursor cursor = db.query(
                GeoPackageMetadata.TABLE_NAME,
                GeoPackageMetadata.COLUMNS, selection, selectionArgs, null, null, null);
        try {
            if (cursor.moveToNext()) {
                metadata = createGeoPackageMetadata(cursor);
            }
        } finally {
            cursor.close();
        }
        return metadata;
    }","['public', 'GeoPackageMetadata', 'get', '(', 'long', 'id', ')', '{', 'GeoPackageMetadata', 'metadata', '=', 'null', ';', 'String', 'selection', '=', 'GeoPackageMetadata', '.', 'COLUMN_ID', '+', '"" = ?""', ';', 'String', '[', ']', 'selectionArgs', '=', 'new', 'String', '[', ']', '{', 'String', '.', 'valueOf', '(', 'id', ')', '}', ';', 'Cursor', 'cursor', '=', 'db', '.', 'query', '(', 'GeoPackageMetadata', '.', 'TABLE_NAME', ',', 'GeoPackageMetadata', '.', 'COLUMNS', ',', 'selection', ',', 'selectionArgs', ',', 'null', ',', 'null', ',', 'null', ')', ';', 'try', '{', 'if', '(', 'cursor', '.', 'moveToNext', '(', ')', ')', '{', 'metadata', '=', 'createGeoPackageMetadata', '(', 'cursor', ')', ';', '}', '}', 'finally', '{', 'cursor', '.', 'close', '(', ')', ';', '}', 'return', 'metadata', ';', '}']","Get GeoPackage metadata by id

@param id id
@return GeoPackage metadata","['Get', 'GeoPackage', 'metadata', 'by', 'id']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadataDataSource.java#L203-L218,test
playframework/playframework,core/play/src/main/java/play/inject/BindingKey.java,BindingKey.to,"public Binding<T> to(final Class<? extends T> implementation) {
    return underlying.to(implementation).asJava();
  }",java,"public Binding<T> to(final Class<? extends T> implementation) {
    return underlying.to(implementation).asJava();
  }","['public', 'Binding', '<', 'T', '>', 'to', '(', 'final', 'Class', '<', '?', 'extends', 'T', '>', 'implementation', ')', '{', 'return', 'underlying', '.', 'to', '(', 'implementation', ')', '.', 'asJava', '(', ')', ';', '}']","Bind this binding key to the given implementation class.

<p>This class will be instantiated and injected by the injection framework.","['Bind', 'this', 'binding', 'key', 'to', 'the', 'given', 'implementation', 'class', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/inject/BindingKey.java#L126-L128,test
google/guice,core/src/com/google/inject/internal/RealMapBinder.java,RealMapBinder.getKeyForNewValue,"Key<V> getKeyForNewValue(K key) {
    checkNotNull(key, ""key"");
    checkConfiguration(!bindingSelection.isInitialized(), ""MapBinder was already initialized"");
    RealMultibinder<Map.Entry<K, Provider<V>>> entrySetBinder =
        bindingSelection.getEntrySetBinder();

    Key<V> valueKey =
        Key.get(
            bindingSelection.getValueType(),
            new RealElement(
                entrySetBinder.getSetName(), MAPBINDER, bindingSelection.getKeyType().toString()));
    entrySetBinder.addBinding().toProvider(new ProviderMapEntry<K, V>(key, valueKey));
    return valueKey;
  }",java,"Key<V> getKeyForNewValue(K key) {
    checkNotNull(key, ""key"");
    checkConfiguration(!bindingSelection.isInitialized(), ""MapBinder was already initialized"");
    RealMultibinder<Map.Entry<K, Provider<V>>> entrySetBinder =
        bindingSelection.getEntrySetBinder();

    Key<V> valueKey =
        Key.get(
            bindingSelection.getValueType(),
            new RealElement(
                entrySetBinder.getSetName(), MAPBINDER, bindingSelection.getKeyType().toString()));
    entrySetBinder.addBinding().toProvider(new ProviderMapEntry<K, V>(key, valueKey));
    return valueKey;
  }","['Key', '<', 'V', '>', 'getKeyForNewValue', '(', 'K', 'key', ')', '{', 'checkNotNull', '(', 'key', ',', '""key""', ')', ';', 'checkConfiguration', '(', '!', 'bindingSelection', '.', 'isInitialized', '(', ')', ',', '""MapBinder was already initialized""', ')', ';', 'RealMultibinder', '<', 'Map', '.', 'Entry', '<', 'K', ',', 'Provider', '<', 'V', '>', '>', '>', 'entrySetBinder', '=', 'bindingSelection', '.', 'getEntrySetBinder', '(', ')', ';', 'Key', '<', 'V', '>', 'valueKey', '=', 'Key', '.', 'get', '(', 'bindingSelection', '.', 'getValueType', '(', ')', ',', 'new', 'RealElement', '(', 'entrySetBinder', '.', 'getSetName', '(', ')', ',', 'MAPBINDER', ',', 'bindingSelection', '.', 'getKeyType', '(', ')', '.', 'toString', '(', ')', ')', ')', ';', 'entrySetBinder', '.', 'addBinding', '(', ')', '.', 'toProvider', '(', 'new', 'ProviderMapEntry', '<', 'K', ',', 'V', '>', '(', 'key', ',', 'valueKey', ')', ')', ';', 'return', 'valueKey', ';', '}']",Adds a binding to the map for the given key.,"['Adds', 'a', 'binding', 'to', 'the', 'map', 'for', 'the', 'given', 'key', '.']",a0552a16d813ead98fe73737fb001db336650251,https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/core/src/com/google/inject/internal/RealMapBinder.java#L271-L284,test
real-logic/aeron,aeron-driver/src/main/java/io/aeron/driver/Configuration.java,Configuration.validateSocketBufferLengths,"public static void validateSocketBufferLengths(final MediaDriver.Context ctx)
    {
        try (DatagramChannel probe = DatagramChannel.open())
        {
            final int defaultSoSndBuf = probe.getOption(StandardSocketOptions.SO_SNDBUF);

            probe.setOption(StandardSocketOptions.SO_SNDBUF, Integer.MAX_VALUE);
            final int maxSoSndBuf = probe.getOption(StandardSocketOptions.SO_SNDBUF);

            if (maxSoSndBuf < ctx.socketSndbufLength())
            {
                System.err.format(
                    ""WARNING: Could not get desired SO_SNDBUF, adjust OS to allow %s: attempted=%d, actual=%d%n"",
                    SOCKET_SNDBUF_LENGTH_PROP_NAME,
                    ctx.socketSndbufLength(),
                    maxSoSndBuf);
            }

            probe.setOption(StandardSocketOptions.SO_RCVBUF, Integer.MAX_VALUE);
            final int maxSoRcvBuf = probe.getOption(StandardSocketOptions.SO_RCVBUF);

            if (maxSoRcvBuf < ctx.socketRcvbufLength())
            {
                System.err.format(
                    ""WARNING: Could not get desired SO_RCVBUF, adjust OS to allow %s: attempted=%d, actual=%d%n"",
                    SOCKET_RCVBUF_LENGTH_PROP_NAME,
                    ctx.socketRcvbufLength(),
                    maxSoRcvBuf);
            }

            final int soSndBuf = 0 == ctx.socketSndbufLength() ? defaultSoSndBuf : ctx.socketSndbufLength();

            if (ctx.mtuLength() > soSndBuf)
            {
                throw new ConfigurationException(String.format(
                    ""MTU greater than socket SO_SNDBUF, adjust %s to match MTU: mtuLength=%d, SO_SNDBUF=%d"",
                    SOCKET_SNDBUF_LENGTH_PROP_NAME,
                    ctx.mtuLength(),
                    soSndBuf));
            }

            if (ctx.initialWindowLength() > maxSoRcvBuf)
            {
                throw new ConfigurationException(""window length greater than socket SO_RCVBUF, increase '"" +
                    Configuration.INITIAL_WINDOW_LENGTH_PROP_NAME +
                    ""' to match window: windowLength="" + ctx.initialWindowLength() + "", SO_RCVBUF="" + maxSoRcvBuf);
            }
        }
        catch (final IOException ex)
        {
            throw new AeronException(""probe socket: "" + ex.toString(), ex);
        }
    }",java,"public static void validateSocketBufferLengths(final MediaDriver.Context ctx)
    {
        try (DatagramChannel probe = DatagramChannel.open())
        {
            final int defaultSoSndBuf = probe.getOption(StandardSocketOptions.SO_SNDBUF);

            probe.setOption(StandardSocketOptions.SO_SNDBUF, Integer.MAX_VALUE);
            final int maxSoSndBuf = probe.getOption(StandardSocketOptions.SO_SNDBUF);

            if (maxSoSndBuf < ctx.socketSndbufLength())
            {
                System.err.format(
                    ""WARNING: Could not get desired SO_SNDBUF, adjust OS to allow %s: attempted=%d, actual=%d%n"",
                    SOCKET_SNDBUF_LENGTH_PROP_NAME,
                    ctx.socketSndbufLength(),
                    maxSoSndBuf);
            }

            probe.setOption(StandardSocketOptions.SO_RCVBUF, Integer.MAX_VALUE);
            final int maxSoRcvBuf = probe.getOption(StandardSocketOptions.SO_RCVBUF);

            if (maxSoRcvBuf < ctx.socketRcvbufLength())
            {
                System.err.format(
                    ""WARNING: Could not get desired SO_RCVBUF, adjust OS to allow %s: attempted=%d, actual=%d%n"",
                    SOCKET_RCVBUF_LENGTH_PROP_NAME,
                    ctx.socketRcvbufLength(),
                    maxSoRcvBuf);
            }

            final int soSndBuf = 0 == ctx.socketSndbufLength() ? defaultSoSndBuf : ctx.socketSndbufLength();

            if (ctx.mtuLength() > soSndBuf)
            {
                throw new ConfigurationException(String.format(
                    ""MTU greater than socket SO_SNDBUF, adjust %s to match MTU: mtuLength=%d, SO_SNDBUF=%d"",
                    SOCKET_SNDBUF_LENGTH_PROP_NAME,
                    ctx.mtuLength(),
                    soSndBuf));
            }

            if (ctx.initialWindowLength() > maxSoRcvBuf)
            {
                throw new ConfigurationException(""window length greater than socket SO_RCVBUF, increase '"" +
                    Configuration.INITIAL_WINDOW_LENGTH_PROP_NAME +
                    ""' to match window: windowLength="" + ctx.initialWindowLength() + "", SO_RCVBUF="" + maxSoRcvBuf);
            }
        }
        catch (final IOException ex)
        {
            throw new AeronException(""probe socket: "" + ex.toString(), ex);
        }
    }","['public', 'static', 'void', 'validateSocketBufferLengths', '(', 'final', 'MediaDriver', '.', 'Context', 'ctx', ')', '{', 'try', '(', 'DatagramChannel', 'probe', '=', 'DatagramChannel', '.', 'open', '(', ')', ')', '{', 'final', 'int', 'defaultSoSndBuf', '=', 'probe', '.', 'getOption', '(', 'StandardSocketOptions', '.', 'SO_SNDBUF', ')', ';', 'probe', '.', 'setOption', '(', 'StandardSocketOptions', '.', 'SO_SNDBUF', ',', 'Integer', '.', 'MAX_VALUE', ')', ';', 'final', 'int', 'maxSoSndBuf', '=', 'probe', '.', 'getOption', '(', 'StandardSocketOptions', '.', 'SO_SNDBUF', ')', ';', 'if', '(', 'maxSoSndBuf', '<', 'ctx', '.', 'socketSndbufLength', '(', ')', ')', '{', 'System', '.', 'err', '.', 'format', '(', '""WARNING: Could not get desired SO_SNDBUF, adjust OS to allow %s: attempted=%d, actual=%d%n""', ',', 'SOCKET_SNDBUF_LENGTH_PROP_NAME', ',', 'ctx', '.', 'socketSndbufLength', '(', ')', ',', 'maxSoSndBuf', ')', ';', '}', 'probe', '.', 'setOption', '(', 'StandardSocketOptions', '.', 'SO_RCVBUF', ',', 'Integer', '.', 'MAX_VALUE', ')', ';', 'final', 'int', 'maxSoRcvBuf', '=', 'probe', '.', 'getOption', '(', 'StandardSocketOptions', '.', 'SO_RCVBUF', ')', ';', 'if', '(', 'maxSoRcvBuf', '<', 'ctx', '.', 'socketRcvbufLength', '(', ')', ')', '{', 'System', '.', 'err', '.', 'format', '(', '""WARNING: Could not get desired SO_RCVBUF, adjust OS to allow %s: attempted=%d, actual=%d%n""', ',', 'SOCKET_RCVBUF_LENGTH_PROP_NAME', ',', 'ctx', '.', 'socketRcvbufLength', '(', ')', ',', 'maxSoRcvBuf', ')', ';', '}', 'final', 'int', 'soSndBuf', '=', '0', '==', 'ctx', '.', 'socketSndbufLength', '(', ')', '?', 'defaultSoSndBuf', ':', 'ctx', '.', 'socketSndbufLength', '(', ')', ';', 'if', '(', 'ctx', '.', 'mtuLength', '(', ')', '>', 'soSndBuf', ')', '{', 'throw', 'new', 'ConfigurationException', '(', 'String', '.', 'format', '(', '""MTU greater than socket SO_SNDBUF, adjust %s to match MTU: mtuLength=%d, SO_SNDBUF=%d""', ',', 'SOCKET_SNDBUF_LENGTH_PROP_NAME', ',', 'ctx', '.', 'mtuLength', '(', ')', ',', 'soSndBuf', ')', ')', ';', '}', 'if', '(', 'ctx', '.', 'initialWindowLength', '(', ')', '>', 'maxSoRcvBuf', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '""window length greater than socket SO_RCVBUF, increase \'""', '+', 'Configuration', '.', 'INITIAL_WINDOW_LENGTH_PROP_NAME', '+', '""\' to match window: windowLength=""', '+', 'ctx', '.', 'initialWindowLength', '(', ')', '+', '"", SO_RCVBUF=""', '+', 'maxSoRcvBuf', ')', ';', '}', '}', 'catch', '(', 'final', 'IOException', 'ex', ')', '{', 'throw', 'new', 'AeronException', '(', '""probe socket: ""', '+', 'ex', '.', 'toString', '(', ')', ',', 'ex', ')', ';', '}', '}']","Validate that the socket buffer lengths are sufficient for the media driver configuration.

@param ctx to be validated.","['Validate', 'that', 'the', 'socket', 'buffer', 'lengths', 'are', 'sufficient', 'for', 'the', 'media', 'driver', 'configuration', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-driver/src/main/java/io/aeron/driver/Configuration.java#L1168-L1220,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OSBTreeBonsaiLocal.java,OSBTreeBonsaiLocal.clear,"@Override
  public void clear() throws IOException {
    boolean rollback = false;
    final OAtomicOperation atomicOperation = startAtomicOperation(true);
    try {
      final Lock lock = FILE_LOCK_MANAGER.acquireExclusiveLock(fileId);
      try {
        final Queue<OBonsaiBucketPointer> subTreesToDelete = new LinkedList<>();

        final OCacheEntry cacheEntry = loadPageForWrite(atomicOperation, fileId, rootBucketPointer.getPageIndex(), false, true);
        try {
          OSBTreeBonsaiBucket<K, V> rootBucket = new OSBTreeBonsaiBucket<>(cacheEntry, rootBucketPointer.getPageOffset(),
              keySerializer, valueSerializer, this);

          addChildrenToQueue(subTreesToDelete, rootBucket);

          rootBucket.shrink(0);
          rootBucket = new OSBTreeBonsaiBucket<>(cacheEntry, rootBucketPointer.getPageOffset(), true, keySerializer,
              valueSerializer, this);

          rootBucket.setTreeSize(0);
        } finally {
          releasePageFromWrite(atomicOperation, cacheEntry);
        }

        recycleSubTrees(subTreesToDelete, atomicOperation);
      } finally {
        lock.unlock();
      }
    } catch (final Exception e) {
      rollback = true;
      throw e;
    } finally {
      endAtomicOperation(rollback);
    }
  }",java,"@Override
  public void clear() throws IOException {
    boolean rollback = false;
    final OAtomicOperation atomicOperation = startAtomicOperation(true);
    try {
      final Lock lock = FILE_LOCK_MANAGER.acquireExclusiveLock(fileId);
      try {
        final Queue<OBonsaiBucketPointer> subTreesToDelete = new LinkedList<>();

        final OCacheEntry cacheEntry = loadPageForWrite(atomicOperation, fileId, rootBucketPointer.getPageIndex(), false, true);
        try {
          OSBTreeBonsaiBucket<K, V> rootBucket = new OSBTreeBonsaiBucket<>(cacheEntry, rootBucketPointer.getPageOffset(),
              keySerializer, valueSerializer, this);

          addChildrenToQueue(subTreesToDelete, rootBucket);

          rootBucket.shrink(0);
          rootBucket = new OSBTreeBonsaiBucket<>(cacheEntry, rootBucketPointer.getPageOffset(), true, keySerializer,
              valueSerializer, this);

          rootBucket.setTreeSize(0);
        } finally {
          releasePageFromWrite(atomicOperation, cacheEntry);
        }

        recycleSubTrees(subTreesToDelete, atomicOperation);
      } finally {
        lock.unlock();
      }
    } catch (final Exception e) {
      rollback = true;
      throw e;
    } finally {
      endAtomicOperation(rollback);
    }
  }","['@', 'Override', 'public', 'void', 'clear', '(', ')', 'throws', 'IOException', '{', 'boolean', 'rollback', '=', 'false', ';', 'final', 'OAtomicOperation', 'atomicOperation', '=', 'startAtomicOperation', '(', 'true', ')', ';', 'try', '{', 'final', 'Lock', 'lock', '=', 'FILE_LOCK_MANAGER', '.', 'acquireExclusiveLock', '(', 'fileId', ')', ';', 'try', '{', 'final', 'Queue', '<', 'OBonsaiBucketPointer', '>', 'subTreesToDelete', '=', 'new', 'LinkedList', '<>', '(', ')', ';', 'final', 'OCacheEntry', 'cacheEntry', '=', 'loadPageForWrite', '(', 'atomicOperation', ',', 'fileId', ',', 'rootBucketPointer', '.', 'getPageIndex', '(', ')', ',', 'false', ',', 'true', ')', ';', 'try', '{', 'OSBTreeBonsaiBucket', '<', 'K', ',', 'V', '>', 'rootBucket', '=', 'new', 'OSBTreeBonsaiBucket', '<>', '(', 'cacheEntry', ',', 'rootBucketPointer', '.', 'getPageOffset', '(', ')', ',', 'keySerializer', ',', 'valueSerializer', ',', 'this', ')', ';', 'addChildrenToQueue', '(', 'subTreesToDelete', ',', 'rootBucket', ')', ';', 'rootBucket', '.', 'shrink', '(', '0', ')', ';', 'rootBucket', '=', 'new', 'OSBTreeBonsaiBucket', '<>', '(', 'cacheEntry', ',', 'rootBucketPointer', '.', 'getPageOffset', '(', ')', ',', 'true', ',', 'keySerializer', ',', 'valueSerializer', ',', 'this', ')', ';', 'rootBucket', '.', 'setTreeSize', '(', '0', ')', ';', '}', 'finally', '{', 'releasePageFromWrite', '(', 'atomicOperation', ',', 'cacheEntry', ')', ';', '}', 'recycleSubTrees', '(', 'subTreesToDelete', ',', 'atomicOperation', ')', ';', '}', 'finally', '{', 'lock', '.', 'unlock', '(', ')', ';', '}', '}', 'catch', '(', 'final', 'Exception', 'e', ')', '{', 'rollback', '=', 'true', ';', 'throw', 'e', ';', '}', 'finally', '{', 'endAtomicOperation', '(', 'rollback', ')', ';', '}', '}']",Removes all entries from bonsai tree. Put all but the root page to free list for further reuse.,"['Removes', 'all', 'entries', 'from', 'bonsai', 'tree', '.', 'Put', 'all', 'but', 'the', 'root', 'page', 'to', 'free', 'list', 'for', 'further', 'reuse', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/storage/index/sbtreebonsai/local/OSBTreeBonsaiLocal.java#L272-L307,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/image/PictureCache.java,PictureCache.stopBackgroundLoadingExcept,"public static boolean stopBackgroundLoadingExcept( URL exemptionURL ) {
		SourcePicture sp;
		String exemptionURLString = exemptionURL.toString();
		Enumeration e = cacheLoadsInProgress.elements();
		boolean inProgress = false;
		while ( e.hasMoreElements() ) {
			sp = ((SourcePicture) e.nextElement());
			if ( ! sp.getUrlString().equals( exemptionURLString ) )
				sp.stopLoading();
			else {
				Tools.log( ""PictureCache.stopBackgroundLoading: picture was already loading"");
				inProgress = true;
			}
		}
		return inProgress;
	}",java,"public static boolean stopBackgroundLoadingExcept( URL exemptionURL ) {
		SourcePicture sp;
		String exemptionURLString = exemptionURL.toString();
		Enumeration e = cacheLoadsInProgress.elements();
		boolean inProgress = false;
		while ( e.hasMoreElements() ) {
			sp = ((SourcePicture) e.nextElement());
			if ( ! sp.getUrlString().equals( exemptionURLString ) )
				sp.stopLoading();
			else {
				Tools.log( ""PictureCache.stopBackgroundLoading: picture was already loading"");
				inProgress = true;
			}
		}
		return inProgress;
	}","['public', 'static', 'boolean', 'stopBackgroundLoadingExcept', '(', 'URL', 'exemptionURL', ')', '{', 'SourcePicture', 'sp', ';', 'String', 'exemptionURLString', '=', 'exemptionURL', '.', 'toString', '(', ')', ';', 'Enumeration', 'e', '=', 'cacheLoadsInProgress', '.', 'elements', '(', ')', ';', 'boolean', 'inProgress', '=', 'false', ';', 'while', '(', 'e', '.', 'hasMoreElements', '(', ')', ')', '{', 'sp', '=', '(', '(', 'SourcePicture', ')', 'e', '.', 'nextElement', '(', ')', ')', ';', 'if', '(', '!', 'sp', '.', 'getUrlString', '(', ')', '.', 'equals', '(', 'exemptionURLString', ')', ')', 'sp', '.', 'stopLoading', '(', ')', ';', 'else', '{', 'Tools', '.', 'log', '(', '""PictureCache.stopBackgroundLoading: picture was already loading""', ')', ';', 'inProgress', '=', 'true', ';', '}', '}', 'return', 'inProgress', ';', '}']","method to stop all background loading except the indicated file. Returns whether the
image is already being loaded. True = loading in progress, False = not in progress.","['method', 'to', 'stop', 'all', 'background', 'loading', 'except', 'the', 'indicated', 'file', '.', 'Returns', 'whether', 'the', 'image', 'is', 'already', 'being', 'loaded', '.', 'True', '=', 'loading', 'in', 'progress', 'False', '=', 'not', 'in', 'progress', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/image/PictureCache.java#L212-L227,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/part/VertexEditPartFactory.java,VertexEditPartFactory.getPartForElement,"private EditPart getPartForElement(Object modelElement) {
        if ( modelElement instanceof ReteGraph ) {
            return new DiagramEditPart();
        }
        if ( modelElement instanceof BaseVertex ) {
            return new VertexEditPart();
        }
        if ( modelElement instanceof Connection ) {
            return new ConnectionEditPart();
        }
        DroolsEclipsePlugin.log( new Exception( ""Can't create part for model element: "" + ((modelElement != null) ? modelElement.getClass().getName() : ""null"") ) );
        return null;
        
    }",java,"private EditPart getPartForElement(Object modelElement) {
        if ( modelElement instanceof ReteGraph ) {
            return new DiagramEditPart();
        }
        if ( modelElement instanceof BaseVertex ) {
            return new VertexEditPart();
        }
        if ( modelElement instanceof Connection ) {
            return new ConnectionEditPart();
        }
        DroolsEclipsePlugin.log( new Exception( ""Can't create part for model element: "" + ((modelElement != null) ? modelElement.getClass().getName() : ""null"") ) );
        return null;
        
    }","['private', 'EditPart', 'getPartForElement', '(', 'Object', 'modelElement', ')', '{', 'if', '(', 'modelElement', 'instanceof', 'ReteGraph', ')', '{', 'return', 'new', 'DiagramEditPart', '(', ')', ';', '}', 'if', '(', 'modelElement', 'instanceof', 'BaseVertex', ')', '{', 'return', 'new', 'VertexEditPart', '(', ')', ';', '}', 'if', '(', 'modelElement', 'instanceof', 'Connection', ')', '{', 'return', 'new', 'ConnectionEditPart', '(', ')', ';', '}', 'DroolsEclipsePlugin', '.', 'log', '(', 'new', 'Exception', '(', '""Can\'t create part for model element: ""', '+', '(', '(', 'modelElement', '!=', 'null', ')', '?', 'modelElement', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', ':', '""null""', ')', ')', ')', ';', 'return', 'null', ';', '}']","Maps object to EditPart.

@throws RuntimeException if no match was found","['Maps', 'object', 'to', 'EditPart', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/part/VertexEditPartFactory.java#L51-L64,test
rupertlssmith/lojix,lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/PrologParser.java,PrologParser.peekAndConsume,"private boolean peekAndConsume(int kind)
    {
        Token nextToken = tokenSource.peek();

        if (nextToken.kind == kind)
        {
            try
            {
                consumeToken(kind);
            }
            catch (SourceCodeException e)
            {
                // If the peek ahead kind can not be consumed then something strange has gone wrong so report this
                // as a bug rather than try to recover from it.
                throw new IllegalStateException(e);
            }

            return true;
        }
        else
        {
            return false;
        }
    }",java,"private boolean peekAndConsume(int kind)
    {
        Token nextToken = tokenSource.peek();

        if (nextToken.kind == kind)
        {
            try
            {
                consumeToken(kind);
            }
            catch (SourceCodeException e)
            {
                // If the peek ahead kind can not be consumed then something strange has gone wrong so report this
                // as a bug rather than try to recover from it.
                throw new IllegalStateException(e);
            }

            return true;
        }
        else
        {
            return false;
        }
    }","['private', 'boolean', 'peekAndConsume', '(', 'int', 'kind', ')', '{', 'Token', 'nextToken', '=', 'tokenSource', '.', 'peek', '(', ')', ';', 'if', '(', 'nextToken', '.', 'kind', '==', 'kind', ')', '{', 'try', '{', 'consumeToken', '(', 'kind', ')', ';', '}', 'catch', '(', 'SourceCodeException', 'e', ')', '{', '// If the peek ahead kind can not be consumed then something strange has gone wrong so report this', '// as a bug rather than try to recover from it.', 'throw', 'new', 'IllegalStateException', '(', 'e', ')', ';', '}', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","Peeks ahead for the given token type, and if one is foudn with that type, it is consumed.

@param  kind The token kind to look for.

@return <tt>true</tt> iff the token was found and consumed.","['Peeks', 'ahead', 'for', 'the', 'given', 'token', 'type', 'and', 'if', 'one', 'is', 'foudn', 'with', 'that', 'type', 'it', 'is', 'consumed', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/PrologParser.java#L900-L923,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java,ConfigurationHandler.buildSheet,"public final void buildSheet(final Sheet sheet, final Map<String, SheetConfiguration> sheetConfigMap,
			final CellAttributesMap cellAttributesMap) {

		if ((sheet.getLastRowNum() <= 0) && (sheet.getRow(0) == null)) {
			// this is a empty sheet. skip it.
			return;
		}
		checkAndRepairLastRow(sheet);

		int sheetRightCol = WebSheetUtility.getSheetRightCol(sheet);

		List<ConfigCommand> commandList = buildCommandListFromSheetComment((XSSFSheet) sheet, sheetRightCol,
				cellAttributesMap);

		boolean hasEachCommand = hasEachCommandInTheList(commandList);

		List<String> formList = new ArrayList<>();

		buildSheetConfigMapFromFormCommand(sheet, sheetConfigMap, commandList, formList, sheetRightCol);
		// match parent command
		matchParentCommand(commandList);
		// setup save attrs in hidden column in the sheet.
		// loop command list again to assemble other command list into sheet
		// configuration
		matchSheetConfigForm(sheetConfigMap, commandList, formList);
		initTemplateForCommand(sheet, sheetConfigMap, formList, hasEachCommand);
	}",java,"public final void buildSheet(final Sheet sheet, final Map<String, SheetConfiguration> sheetConfigMap,
			final CellAttributesMap cellAttributesMap) {

		if ((sheet.getLastRowNum() <= 0) && (sheet.getRow(0) == null)) {
			// this is a empty sheet. skip it.
			return;
		}
		checkAndRepairLastRow(sheet);

		int sheetRightCol = WebSheetUtility.getSheetRightCol(sheet);

		List<ConfigCommand> commandList = buildCommandListFromSheetComment((XSSFSheet) sheet, sheetRightCol,
				cellAttributesMap);

		boolean hasEachCommand = hasEachCommandInTheList(commandList);

		List<String> formList = new ArrayList<>();

		buildSheetConfigMapFromFormCommand(sheet, sheetConfigMap, commandList, formList, sheetRightCol);
		// match parent command
		matchParentCommand(commandList);
		// setup save attrs in hidden column in the sheet.
		// loop command list again to assemble other command list into sheet
		// configuration
		matchSheetConfigForm(sheetConfigMap, commandList, formList);
		initTemplateForCommand(sheet, sheetConfigMap, formList, hasEachCommand);
	}","['public', 'final', 'void', 'buildSheet', '(', 'final', 'Sheet', 'sheet', ',', 'final', 'Map', '<', 'String', ',', 'SheetConfiguration', '>', 'sheetConfigMap', ',', 'final', 'CellAttributesMap', 'cellAttributesMap', ')', '{', 'if', '(', '(', 'sheet', '.', 'getLastRowNum', '(', ')', '<=', '0', ')', '&&', '(', 'sheet', '.', 'getRow', '(', '0', ')', '==', 'null', ')', ')', '{', '// this is a empty sheet. skip it.\r', 'return', ';', '}', 'checkAndRepairLastRow', '(', 'sheet', ')', ';', 'int', 'sheetRightCol', '=', 'WebSheetUtility', '.', 'getSheetRightCol', '(', 'sheet', ')', ';', 'List', '<', 'ConfigCommand', '>', 'commandList', '=', 'buildCommandListFromSheetComment', '(', '(', 'XSSFSheet', ')', 'sheet', ',', 'sheetRightCol', ',', 'cellAttributesMap', ')', ';', 'boolean', 'hasEachCommand', '=', 'hasEachCommandInTheList', '(', 'commandList', ')', ';', 'List', '<', 'String', '>', 'formList', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'buildSheetConfigMapFromFormCommand', '(', 'sheet', ',', 'sheetConfigMap', ',', 'commandList', ',', 'formList', ',', 'sheetRightCol', ')', ';', '// match parent command\r', 'matchParentCommand', '(', 'commandList', ')', ';', '// setup save attrs in hidden column in the sheet.\r', '// loop command list again to assemble other command list into sheet\r', '// configuration\r', 'matchSheetConfigForm', '(', 'sheetConfigMap', ',', 'commandList', ',', 'formList', ')', ';', 'initTemplateForCommand', '(', 'sheet', ',', 'sheetConfigMap', ',', 'formList', ',', 'hasEachCommand', ')', ';', '}']","build a sheet for configuration map.

@param sheet
sheet.
@param sheetConfigMap
sheetConfiguration map.
@param cellAttributesMap
the cell attributes map","['build', 'a', 'sheet', 'for', 'configuration', 'map', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java#L253-L279,test
streamsets/datacollector,jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/multithread/ConnectionManager.java,ConnectionManager.closeConnection,"public void closeConnection() {
    LOGGER.debug(""Closing connection"");
    Connection connectionToRemove = threadLocalConnection.get();
    jdbcUtil.closeQuietly(connectionToRemove);
    if (connectionToRemove != null) {
      synchronized (this) {
        connectionsToCloseDuringDestroy.remove(connectionToRemove);
      }
    }
    threadLocalConnection.set(null);
  }",java,"public void closeConnection() {
    LOGGER.debug(""Closing connection"");
    Connection connectionToRemove = threadLocalConnection.get();
    jdbcUtil.closeQuietly(connectionToRemove);
    if (connectionToRemove != null) {
      synchronized (this) {
        connectionsToCloseDuringDestroy.remove(connectionToRemove);
      }
    }
    threadLocalConnection.set(null);
  }","['public', 'void', 'closeConnection', '(', ')', '{', 'LOGGER', '.', 'debug', '(', '""Closing connection""', ')', ';', 'Connection', 'connectionToRemove', '=', 'threadLocalConnection', '.', 'get', '(', ')', ';', 'jdbcUtil', '.', 'closeQuietly', '(', 'connectionToRemove', ')', ';', 'if', '(', 'connectionToRemove', '!=', 'null', ')', '{', 'synchronized', '(', 'this', ')', '{', 'connectionsToCloseDuringDestroy', '.', 'remove', '(', 'connectionToRemove', ')', ';', '}', '}', 'threadLocalConnection', '.', 'set', '(', 'null', ')', ';', '}']",Close the current thread's connection,"['Close', 'the', 'current', 'thread', 's', 'connection']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/multithread/ConnectionManager.java#L78-L88,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/TileGenerator.java,TileGenerator.adjustGoogleBounds,"private void adjustGoogleBounds() {
        // Set the tile matrix set bounding box to be the world
        BoundingBox standardWgs84Box = new BoundingBox(-ProjectionConstants.WGS84_HALF_WORLD_LON_WIDTH,
                ProjectionConstants.WEB_MERCATOR_MIN_LAT_RANGE,
                ProjectionConstants.WGS84_HALF_WORLD_LON_WIDTH,
                ProjectionConstants.WEB_MERCATOR_MAX_LAT_RANGE);
        ProjectionTransform wgs84ToWebMercatorTransform = ProjectionFactory.getProjection(ProjectionConstants.EPSG_WORLD_GEODETIC_SYSTEM)
                .getTransformation(ProjectionConstants.EPSG_WEB_MERCATOR);
        tileGridBoundingBox = standardWgs84Box.transform(wgs84ToWebMercatorTransform);
    }",java,"private void adjustGoogleBounds() {
        // Set the tile matrix set bounding box to be the world
        BoundingBox standardWgs84Box = new BoundingBox(-ProjectionConstants.WGS84_HALF_WORLD_LON_WIDTH,
                ProjectionConstants.WEB_MERCATOR_MIN_LAT_RANGE,
                ProjectionConstants.WGS84_HALF_WORLD_LON_WIDTH,
                ProjectionConstants.WEB_MERCATOR_MAX_LAT_RANGE);
        ProjectionTransform wgs84ToWebMercatorTransform = ProjectionFactory.getProjection(ProjectionConstants.EPSG_WORLD_GEODETIC_SYSTEM)
                .getTransformation(ProjectionConstants.EPSG_WEB_MERCATOR);
        tileGridBoundingBox = standardWgs84Box.transform(wgs84ToWebMercatorTransform);
    }","['private', 'void', 'adjustGoogleBounds', '(', ')', '{', '// Set the tile matrix set bounding box to be the world', 'BoundingBox', 'standardWgs84Box', '=', 'new', 'BoundingBox', '(', '-', 'ProjectionConstants', '.', 'WGS84_HALF_WORLD_LON_WIDTH', ',', 'ProjectionConstants', '.', 'WEB_MERCATOR_MIN_LAT_RANGE', ',', 'ProjectionConstants', '.', 'WGS84_HALF_WORLD_LON_WIDTH', ',', 'ProjectionConstants', '.', 'WEB_MERCATOR_MAX_LAT_RANGE', ')', ';', 'ProjectionTransform', 'wgs84ToWebMercatorTransform', '=', 'ProjectionFactory', '.', 'getProjection', '(', 'ProjectionConstants', '.', 'EPSG_WORLD_GEODETIC_SYSTEM', ')', '.', 'getTransformation', '(', 'ProjectionConstants', '.', 'EPSG_WEB_MERCATOR', ')', ';', 'tileGridBoundingBox', '=', 'standardWgs84Box', '.', 'transform', '(', 'wgs84ToWebMercatorTransform', ')', ';', '}']",Adjust the tile matrix set and web mercator bounds for Google tile format,"['Adjust', 'the', 'tile', 'matrix', 'set', 'and', 'web', 'mercator', 'bounds', 'for', 'Google', 'tile', 'format']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/TileGenerator.java#L521-L530,test
playframework/playframework,persistence/play-java-jpa/src/main/java/play/db/jpa/DefaultJPAConfig.java,DefaultJPAConfig.of,"public static JPAConfig of(String n1, String u1, String n2, String u2) {
    return new DefaultJPAConfig(
        new JPAConfig.PersistenceUnit(n1, u1), new JPAConfig.PersistenceUnit(n2, u2));
  }",java,"public static JPAConfig of(String n1, String u1, String n2, String u2) {
    return new DefaultJPAConfig(
        new JPAConfig.PersistenceUnit(n1, u1), new JPAConfig.PersistenceUnit(n2, u2));
  }","['public', 'static', 'JPAConfig', 'of', '(', 'String', 'n1', ',', 'String', 'u1', ',', 'String', 'n2', ',', 'String', 'u2', ')', '{', 'return', 'new', 'DefaultJPAConfig', '(', 'new', 'JPAConfig', '.', 'PersistenceUnit', '(', 'n1', ',', 'u1', ')', ',', 'new', 'JPAConfig', '.', 'PersistenceUnit', '(', 'n2', ',', 'u2', ')', ')', ';', '}']","Create a default JPA configuration with the given names and unit names.

@param n1 Name of the first entity manager factory
@param u1 Name of the first unit
@param n2 Name of the second entity manager factory
@param u2 Name of the second unit
@return a default JPA configuration with the provided persistence units.","['Create', 'a', 'default', 'JPA', 'configuration', 'with', 'the', 'given', 'names', 'and', 'unit', 'names', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/persistence/play-java-jpa/src/main/java/play/db/jpa/DefaultJPAConfig.java#L84-L87,test
streamsets/datacollector,common/src/main/java/com/streamsets/pipeline/lib/parser/shaded/com/google/code/regexp/Pattern.java,Pattern.countOpenParens,"static private int countOpenParens(String s, int pos) {
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(""\\("");
        java.util.regex.Matcher m = p.matcher(s.subSequence(0, pos));

        int numParens = 0;

        while (m.find()) {
            // ignore parentheses inside character classes: [0-9()a-f]
            // which are just literals
            if (isInsideCharClass(s, m.start())) {
                continue;
            }

            // ignore escaped parens
            if (isEscapedChar(s, m.start())) continue;

            if (!isNoncapturingParen(s, m.start())) {
                numParens++;
            }
        }
        return numParens;
    }",java,"static private int countOpenParens(String s, int pos) {
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(""\\("");
        java.util.regex.Matcher m = p.matcher(s.subSequence(0, pos));

        int numParens = 0;

        while (m.find()) {
            // ignore parentheses inside character classes: [0-9()a-f]
            // which are just literals
            if (isInsideCharClass(s, m.start())) {
                continue;
            }

            // ignore escaped parens
            if (isEscapedChar(s, m.start())) continue;

            if (!isNoncapturingParen(s, m.start())) {
                numParens++;
            }
        }
        return numParens;
    }","['static', 'private', 'int', 'countOpenParens', '(', 'String', 's', ',', 'int', 'pos', ')', '{', 'java', '.', 'util', '.', 'regex', '.', 'Pattern', 'p', '=', 'java', '.', 'util', '.', 'regex', '.', 'Pattern', '.', 'compile', '(', '""\\\\(""', ')', ';', 'java', '.', 'util', '.', 'regex', '.', 'Matcher', 'm', '=', 'p', '.', 'matcher', '(', 's', '.', 'subSequence', '(', '0', ',', 'pos', ')', ')', ';', 'int', 'numParens', '=', '0', ';', 'while', '(', 'm', '.', 'find', '(', ')', ')', '{', '// ignore parentheses inside character classes: [0-9()a-f]', '// which are just literals', 'if', '(', 'isInsideCharClass', '(', 's', ',', 'm', '.', 'start', '(', ')', ')', ')', '{', 'continue', ';', '}', '// ignore escaped parens', 'if', '(', 'isEscapedChar', '(', 's', ',', 'm', '.', 'start', '(', ')', ')', ')', 'continue', ';', 'if', '(', '!', 'isNoncapturingParen', '(', 's', ',', 'm', '.', 'start', '(', ')', ')', ')', '{', 'numParens', '++', ';', '}', '}', 'return', 'numParens', ';', '}']","Counts the open-parentheses to the left of a string position,
excluding escaped parentheses

@param s string to evaluate
@param pos ending position of string; characters to the left
of this position are evaluated
@return number of open parentheses","['Counts', 'the', 'open', '-', 'parentheses', 'to', 'the', 'left', 'of', 'a', 'string', 'position', 'excluding', 'escaped', 'parentheses']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/common/src/main/java/com/streamsets/pipeline/lib/parser/shaded/com/google/code/regexp/Pattern.java#L431-L452,test
playframework/playframework,core/play/src/main/java-scala-2.13+/play/libs/CrossScala.java,CrossScala.toSeq,"public static <T> scala.collection.immutable.Seq<T> toSeq(java.util.List<T> list) {
        return scala.collection.JavaConverters.asScalaBufferConverter(list).asScala().toList();
    }",java,"public static <T> scala.collection.immutable.Seq<T> toSeq(java.util.List<T> list) {
        return scala.collection.JavaConverters.asScalaBufferConverter(list).asScala().toList();
    }","['public', 'static', '<', 'T', '>', 'scala', '.', 'collection', '.', 'immutable', '.', 'Seq', '<', 'T', '>', 'toSeq', '(', 'java', '.', 'util', '.', 'List', '<', 'T', '>', 'list', ')', '{', 'return', 'scala', '.', 'collection', '.', 'JavaConverters', '.', 'asScalaBufferConverter', '(', 'list', ')', '.', 'asScala', '(', ')', '.', 'toList', '(', ')', ';', '}']","Converts a Java List to Scala Seq.

@param list    the java list.
@return the converted Seq.
@param <T> the element type.","['Converts', 'a', 'Java', 'List', 'to', 'Scala', 'Seq', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java-scala-2.13+/play/libs/CrossScala.java#L15-L17,test
rest-assured/rest-assured,json-path/src/main/java/io/restassured/path/json/JsonPath.java,JsonPath.getByte,"public byte getByte(String path) {
        //The type returned from Groovy depends on the input, so we need to handle different numerical types.
        Object value = get(path);
        if (value instanceof Byte) {
            return (Byte) value;
        } else if (value instanceof Long) {
            return ((Long) value).byteValue();
        } else if (value instanceof Integer) {
            return ((Integer) value).byteValue();
        } else {
            return ObjectConverter.convertObjectTo(value, Byte.class);
        }
    }",java,"public byte getByte(String path) {
        //The type returned from Groovy depends on the input, so we need to handle different numerical types.
        Object value = get(path);
        if (value instanceof Byte) {
            return (Byte) value;
        } else if (value instanceof Long) {
            return ((Long) value).byteValue();
        } else if (value instanceof Integer) {
            return ((Integer) value).byteValue();
        } else {
            return ObjectConverter.convertObjectTo(value, Byte.class);
        }
    }","['public', 'byte', 'getByte', '(', 'String', 'path', ')', '{', '//The type returned from Groovy depends on the input, so we need to handle different numerical types.', 'Object', 'value', '=', 'get', '(', 'path', ')', ';', 'if', '(', 'value', 'instanceof', 'Byte', ')', '{', 'return', '(', 'Byte', ')', 'value', ';', '}', 'else', 'if', '(', 'value', 'instanceof', 'Long', ')', '{', 'return', '(', '(', 'Long', ')', 'value', ')', '.', 'byteValue', '(', ')', ';', '}', 'else', 'if', '(', 'value', 'instanceof', 'Integer', ')', '{', 'return', '(', '(', 'Integer', ')', 'value', ')', '.', 'byteValue', '(', ')', ';', '}', 'else', '{', 'return', 'ObjectConverter', '.', 'convertObjectTo', '(', 'value', ',', 'Byte', '.', 'class', ')', ';', '}', '}']","Get the result of an Object path expression as a byte.

@param path The Object path.
@return The object matching the Object path. A {@link java.lang.ClassCastException} will be thrown if the object
cannot be casted to the expected type.","['Get', 'the', 'result', 'of', 'an', 'Object', 'path', 'expression', 'as', 'a', 'byte', '.']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/json-path/src/main/java/io/restassured/path/json/JsonPath.java#L256-L268,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java,HTMLWriter.writeEscUTF16,"private void writeEscUTF16(String s, int start, int length, boolean isAttVal) throws SAXException {
        String subString = s.substring(start, start + length);
        write(StringEscapeUtils.escapeHtml4(subString));
    }",java,"private void writeEscUTF16(String s, int start, int length, boolean isAttVal) throws SAXException {
        String subString = s.substring(start, start + length);
        write(StringEscapeUtils.escapeHtml4(subString));
    }","['private', 'void', 'writeEscUTF16', '(', 'String', 's', ',', 'int', 'start', ',', 'int', 'length', ',', 'boolean', 'isAttVal', ')', 'throws', 'SAXException', '{', 'String', 'subString', '=', 's', '.', 'substring', '(', 'start', ',', 'start', '+', 'length', ')', ';', 'write', '(', 'StringEscapeUtils', '.', 'escapeHtml4', '(', 'subString', ')', ')', ';', '}']","Write an array of data characters with escaping.

@param ch       The array of characters.
@param start    The starting position.
@param length   The number of characters to use.
@param isAttVal true if this is an attribute value literal.
@throws org.xml.SAXException If there is an error writing the characters, this method
will throw an IOException wrapped in a SAXException.","['Write', 'an', 'array', 'of', 'data', 'characters', 'with', 'escaping', '.']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/HTMLWriter.java#L934-L937,test
boonproject/boon,boon/src/main/java/org/boon/cache/FastConcurrentReadLruLfuFifoCache.java,FastConcurrentReadLruLfuFifoCache.evictIfNeeded,"private final void evictIfNeeded() {
        if ( list.size() > evictSize ) {

            final List<CacheEntry<KEY, VALUE>> killList = list.sortAndReturnPurgeList( 0.1f );

            for ( CacheEntry<KEY, VALUE> cacheEntry : killList ) {
                map.remove( cacheEntry.key );
            }
        }

    }",java,"private final void evictIfNeeded() {
        if ( list.size() > evictSize ) {

            final List<CacheEntry<KEY, VALUE>> killList = list.sortAndReturnPurgeList( 0.1f );

            for ( CacheEntry<KEY, VALUE> cacheEntry : killList ) {
                map.remove( cacheEntry.key );
            }
        }

    }","['private', 'final', 'void', 'evictIfNeeded', '(', ')', '{', 'if', '(', 'list', '.', 'size', '(', ')', '>', 'evictSize', ')', '{', 'final', 'List', '<', 'CacheEntry', '<', 'KEY', ',', 'VALUE', '>', '>', 'killList', '=', 'list', '.', 'sortAndReturnPurgeList', '(', '0.1f', ')', ';', 'for', '(', 'CacheEntry', '<', 'KEY', ',', 'VALUE', '>', 'cacheEntry', ':', 'killList', ')', '{', 'map', '.', 'remove', '(', 'cacheEntry', '.', 'key', ')', ';', '}', '}', '}']",Evict if we are over the size limit.,"['Evict', 'if', 'we', 'are', 'over', 'the', 'size', 'limit', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/cache/FastConcurrentReadLruLfuFifoCache.java#L226-L236,test
dschulten/hydra-java,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/xhtml/XhtmlWriter.java,XhtmlWriter.inputButton,"private void inputButton(Type type, String value) throws IOException {
        write(""<input type=\"""");
        write(type.toString());
        write(""\"" "");
        write(""value"");
        write(""="");
        quote();
        write(value);
        quote();
        write(""/>"");
    }",java,"private void inputButton(Type type, String value) throws IOException {
        write(""<input type=\"""");
        write(type.toString());
        write(""\"" "");
        write(""value"");
        write(""="");
        quote();
        write(value);
        quote();
        write(""/>"");
    }","['private', 'void', 'inputButton', '(', 'Type', 'type', ',', 'String', 'value', ')', 'throws', 'IOException', '{', 'write', '(', '""<input type=\\""""', ')', ';', 'write', '(', 'type', '.', 'toString', '(', ')', ')', ';', 'write', '(', '""\\"" ""', ')', ';', 'write', '(', '""value""', ')', ';', 'write', '(', '""=""', ')', ';', 'quote', '(', ')', ';', 'write', '(', 'value', ')', ';', 'quote', '(', ')', ';', 'write', '(', '""/>""', ')', ';', '}']","Classic submit or reset button.

@param type
submit or reset
@param value
caption on the button
@throws IOException","['Classic', 'submit', 'or', 'reset', 'button', '.']",21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a,https://github.com/dschulten/hydra-java/blob/21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/xhtml/XhtmlWriter.java#L404-L414,test
ArpNetworking/logback-steno,src/main/aspect/com/arpnetworking/steno/aspect/LogBuilderAspect.java,LogBuilderAspect.addToContextLineAndMethod,"@Before(""call(* com.arpnetworking.steno.LogBuilder.log())"")
    public void addToContextLineAndMethod(final JoinPoint joinPoint) {
        final SourceLocation sourceLocation = joinPoint.getSourceLocation();
        final LogBuilder targetLogBuilder = (LogBuilder) joinPoint.getTarget();
        targetLogBuilder.addContext(""line"", String.valueOf(sourceLocation.getLine()));
        targetLogBuilder.addContext(""file"", sourceLocation.getFileName());
        targetLogBuilder.addContext(""class"", sourceLocation.getWithinType());
    }",java,"@Before(""call(* com.arpnetworking.steno.LogBuilder.log())"")
    public void addToContextLineAndMethod(final JoinPoint joinPoint) {
        final SourceLocation sourceLocation = joinPoint.getSourceLocation();
        final LogBuilder targetLogBuilder = (LogBuilder) joinPoint.getTarget();
        targetLogBuilder.addContext(""line"", String.valueOf(sourceLocation.getLine()));
        targetLogBuilder.addContext(""file"", sourceLocation.getFileName());
        targetLogBuilder.addContext(""class"", sourceLocation.getWithinType());
    }","['@', 'Before', '(', '""call(* com.arpnetworking.steno.LogBuilder.log())""', ')', 'public', 'void', 'addToContextLineAndMethod', '(', 'final', 'JoinPoint', 'joinPoint', ')', '{', 'final', 'SourceLocation', 'sourceLocation', '=', 'joinPoint', '.', 'getSourceLocation', '(', ')', ';', 'final', 'LogBuilder', 'targetLogBuilder', '=', '(', 'LogBuilder', ')', 'joinPoint', '.', 'getTarget', '(', ')', ';', 'targetLogBuilder', '.', 'addContext', '(', '""line""', ',', 'String', '.', 'valueOf', '(', 'sourceLocation', '.', 'getLine', '(', ')', ')', ')', ';', 'targetLogBuilder', '.', 'addContext', '(', '""file""', ',', 'sourceLocation', '.', 'getFileName', '(', ')', ')', ';', 'targetLogBuilder', '.', 'addContext', '(', '""class""', ',', 'sourceLocation', '.', 'getWithinType', '(', ')', ')', ';', '}']","Before outputting the message inject additional context.

@param joinPoint The <code>JoinPoint</code>.","['Before', 'outputting', 'the', 'message', 'inject', 'additional', 'context', '.']",abd5c68ce7d42c39f80ffbad6d162d5fed3a346e,https://github.com/ArpNetworking/logback-steno/blob/abd5c68ce7d42c39f80ffbad6d162d5fed3a346e/src/main/aspect/com/arpnetworking/steno/aspect/LogBuilderAspect.java#L40-L47,test
objectify/objectify,src/main/java/com/googlecode/objectify/Key.java,Key.compareToWithIdentityHash,"private int compareToWithIdentityHash(final Object k1, final Object k2) {
		return Integer.compare(System.identityHashCode(k1), System.identityHashCode(k2));
	}",java,"private int compareToWithIdentityHash(final Object k1, final Object k2) {
		return Integer.compare(System.identityHashCode(k1), System.identityHashCode(k2));
	}","['private', 'int', 'compareToWithIdentityHash', '(', 'final', 'Object', 'k1', ',', 'final', 'Object', 'k2', ')', '{', 'return', 'Integer', '.', 'compare', '(', 'System', '.', 'identityHashCode', '(', 'k1', ')', ',', 'System', '.', 'identityHashCode', '(', 'k2', ')', ')', ';', '}']","I have no idea what this is about, it was in the old logic","['I', 'have', 'no', 'idea', 'what', 'this', 'is', 'about', 'it', 'was', 'in', 'the', 'old', 'logic']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/Key.java#L271-L273,test
wavesplatform/WavesJ,src/main/java/com/wavesplatform/wavesj/Node.java,Node.getTransaction,"public Transaction getTransaction(String txId) throws IOException {
        return wavesJsonMapper.convertValue(send(""/transactions/info/"" + txId), Transaction.class);
    }",java,"public Transaction getTransaction(String txId) throws IOException {
        return wavesJsonMapper.convertValue(send(""/transactions/info/"" + txId), Transaction.class);
    }","['public', 'Transaction', 'getTransaction', '(', 'String', 'txId', ')', 'throws', 'IOException', '{', 'return', 'wavesJsonMapper', '.', 'convertValue', '(', 'send', '(', '""/transactions/info/""', '+', 'txId', ')', ',', 'Transaction', '.', 'class', ')', ';', '}']","Returns object by its ID.

@param txId object ID
@return object object
@throws IOException if no object with the given ID exists","['Returns', 'object', 'by', 'its', 'ID', '.']",ae13a61c4e780b608c30a86e45c9a811549e11dd,https://github.com/wavesplatform/WavesJ/blob/ae13a61c4e780b608c30a86e45c9a811549e11dd/src/main/java/com/wavesplatform/wavesj/Node.java#L164-L166,test
eclipse/packagedrone,bundles/org.tukani.xz/src/org/tukaani/xz/SingleXZInputStream.java,SingleXZInputStream.readStreamHeader,"private static byte[] readStreamHeader(InputStream in) throws IOException {
        byte[] streamHeader = new byte[DecoderUtil.STREAM_HEADER_SIZE];
        new DataInputStream(in).readFully(streamHeader);
        return streamHeader;
    }",java,"private static byte[] readStreamHeader(InputStream in) throws IOException {
        byte[] streamHeader = new byte[DecoderUtil.STREAM_HEADER_SIZE];
        new DataInputStream(in).readFully(streamHeader);
        return streamHeader;
    }","['private', 'static', 'byte', '[', ']', 'readStreamHeader', '(', 'InputStream', 'in', ')', 'throws', 'IOException', '{', 'byte', '[', ']', 'streamHeader', '=', 'new', 'byte', '[', 'DecoderUtil', '.', 'STREAM_HEADER_SIZE', ']', ';', 'new', 'DataInputStream', '(', 'in', ')', '.', 'readFully', '(', 'streamHeader', ')', ';', 'return', 'streamHeader', ';', '}']","Reads the Stream Header into a buffer.
This is a helper function for the constructors.","['Reads', 'the', 'Stream', 'Header', 'into', 'a', 'buffer', '.', 'This', 'is', 'a', 'helper', 'function', 'for', 'the', 'constructors', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.tukani.xz/src/org/tukaani/xz/SingleXZInputStream.java#L60-L64,test
oblac/jodd,jodd-jtx/src/main/java/jodd/jtx/JtxTransaction.java,JtxTransaction.rollbackAllResources,"protected void rollbackAllResources(final boolean wasForced) {
		status = STATUS_ROLLING_BACK;
		Exception lastException = null;
		Iterator<JtxResource> it = resources.iterator();
		while (it.hasNext()) {
			JtxResource resource = it.next();
			try {
				resource.rollbackTransaction();
			} catch (Exception ex) {
				lastException = ex;
			} finally {
				it.remove();
			}
		}
		txManager.removeTransaction(this);
		status = STATUS_ROLLEDBACK;
		if (lastException != null) {
			status = STATUS_UNKNOWN;
			throw new JtxException(""Rollback failed: one or more TX resources couldn't rollback a TX"", lastException);
		}
		if (wasForced) {
			throw new JtxException(""TX rolled back because it has been marked as rollback-only"", rollbackCause);
		}
	}",java,"protected void rollbackAllResources(final boolean wasForced) {
		status = STATUS_ROLLING_BACK;
		Exception lastException = null;
		Iterator<JtxResource> it = resources.iterator();
		while (it.hasNext()) {
			JtxResource resource = it.next();
			try {
				resource.rollbackTransaction();
			} catch (Exception ex) {
				lastException = ex;
			} finally {
				it.remove();
			}
		}
		txManager.removeTransaction(this);
		status = STATUS_ROLLEDBACK;
		if (lastException != null) {
			status = STATUS_UNKNOWN;
			throw new JtxException(""Rollback failed: one or more TX resources couldn't rollback a TX"", lastException);
		}
		if (wasForced) {
			throw new JtxException(""TX rolled back because it has been marked as rollback-only"", rollbackCause);
		}
	}","['protected', 'void', 'rollbackAllResources', '(', 'final', 'boolean', 'wasForced', ')', '{', 'status', '=', 'STATUS_ROLLING_BACK', ';', 'Exception', 'lastException', '=', 'null', ';', 'Iterator', '<', 'JtxResource', '>', 'it', '=', 'resources', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'JtxResource', 'resource', '=', 'it', '.', 'next', '(', ')', ';', 'try', '{', 'resource', '.', 'rollbackTransaction', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'lastException', '=', 'ex', ';', '}', 'finally', '{', 'it', '.', 'remove', '(', ')', ';', '}', '}', 'txManager', '.', 'removeTransaction', '(', 'this', ')', ';', 'status', '=', 'STATUS_ROLLEDBACK', ';', 'if', '(', 'lastException', '!=', 'null', ')', '{', 'status', '=', 'STATUS_UNKNOWN', ';', 'throw', 'new', 'JtxException', '(', '""Rollback failed: one or more TX resources couldn\'t rollback a TX""', ',', 'lastException', ')', ';', '}', 'if', '(', 'wasForced', ')', '{', 'throw', 'new', 'JtxException', '(', '""TX rolled back because it has been marked as rollback-only""', ',', 'rollbackCause', ')', ';', '}', '}']","Rollbacks all attached resources. Resource will be closed. and detached from this transaction.
If exception occurs, it will be rethrown at the end.","['Rollbacks', 'all', 'attached', 'resources', '.', 'Resource', 'will', 'be', 'closed', '.', 'and', 'detached', 'from', 'this', 'transaction', '.', 'If', 'exception', 'occurs', 'it', 'will', 'be', 'rethrown', 'at', 'the', 'end', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-jtx/src/main/java/jodd/jtx/JtxTransaction.java#L317-L340,test
Unidata/thredds,dap4/d4servlet/src/main/java/dap4/servlet/ChunkWriter.java,ChunkWriter.close,"public void close()
            throws IOException
    {
        if(closed)
            return;
        closed = true;

        if(dmr8 != null) {
            sendDXR(dmr8);
            dmr8 = null;
        }

        if(mode == RequestMode.DMR)
            return; // only DMR should be sent

        // If there is no partial chunk to write then
        // we are done; else verify we can write and write the last
        // chunk; => multiple closes are ok.
        if(chunk == null || chunk.position() == 0)
            return;

        // There is data left to write.
        verifystate(); // are we in a state supporting data write?

        // Force out the current chunk (might be empty)
        // but do not close the underlying output stream
        state = State.DATA; // pretend

        int flags = DapUtil.CHUNK_END;
        writeChunk(flags);
        state = State.END;
        this.output.flush(); // Do not close
        if(this.saveoutput != null) {
            // write to true output target
            this.saveoutput.write(((ByteArrayOutputStream) this.output).toByteArray());
        }
    }",java,"public void close()
            throws IOException
    {
        if(closed)
            return;
        closed = true;

        if(dmr8 != null) {
            sendDXR(dmr8);
            dmr8 = null;
        }

        if(mode == RequestMode.DMR)
            return; // only DMR should be sent

        // If there is no partial chunk to write then
        // we are done; else verify we can write and write the last
        // chunk; => multiple closes are ok.
        if(chunk == null || chunk.position() == 0)
            return;

        // There is data left to write.
        verifystate(); // are we in a state supporting data write?

        // Force out the current chunk (might be empty)
        // but do not close the underlying output stream
        state = State.DATA; // pretend

        int flags = DapUtil.CHUNK_END;
        writeChunk(flags);
        state = State.END;
        this.output.flush(); // Do not close
        if(this.saveoutput != null) {
            // write to true output target
            this.saveoutput.write(((ByteArrayOutputStream) this.output).toByteArray());
        }
    }","['public', 'void', 'close', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'closed', ')', 'return', ';', 'closed', '=', 'true', ';', 'if', '(', 'dmr8', '!=', 'null', ')', '{', 'sendDXR', '(', 'dmr8', ')', ';', 'dmr8', '=', 'null', ';', '}', 'if', '(', 'mode', '==', 'RequestMode', '.', 'DMR', ')', 'return', ';', '// only DMR should be sent', '// If there is no partial chunk to write then', '// we are done; else verify we can write and write the last', '// chunk; => multiple closes are ok.', 'if', '(', 'chunk', '==', 'null', '||', 'chunk', '.', 'position', '(', ')', '==', '0', ')', 'return', ';', '// There is data left to write.', 'verifystate', '(', ')', ';', '// are we in a state supporting data write?', '// Force out the current chunk (might be empty)', '// but do not close the underlying output stream', 'state', '=', 'State', '.', 'DATA', ';', '// pretend', 'int', 'flags', '=', 'DapUtil', '.', 'CHUNK_END', ';', 'writeChunk', '(', 'flags', ')', ';', 'state', '=', 'State', '.', 'END', ';', 'this', '.', 'output', '.', 'flush', '(', ')', ';', '// Do not close', 'if', '(', 'this', '.', 'saveoutput', '!=', 'null', ')', '{', '// write to true output target', 'this', '.', 'saveoutput', '.', 'write', '(', '(', '(', 'ByteArrayOutputStream', ')', 'this', '.', 'output', ')', '.', 'toByteArray', '(', ')', ')', ';', '}', '}']","Closes this output stream and releases any system resources
associated with this stream. Except, the underlying stream is not
actually closed; that is left to the servlet level

@throws IOException on IO related errors","['Closes', 'this', 'output', 'stream', 'and', 'releases', 'any', 'system', 'resources', 'associated', 'with', 'this', 'stream', '.', 'Except', 'the', 'underlying', 'stream', 'is', 'not', 'actually', 'closed', ';', 'that', 'is', 'left', 'to', 'the', 'servlet', 'level']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4servlet/src/main/java/dap4/servlet/ChunkWriter.java#L341-L377,test
streamsets/datacollector,hive-protolib/src/main/java/com/streamsets/pipeline/stage/processor/hive/HiveMetadataProcessor.java,HiveMetadataProcessor.updateRecordForHDFS,"@VisibleForTesting
  static void updateRecordForHDFS(
      Record record,
      boolean roll,
      String avroSchema,
      String location
  ){
    if(roll){
      record.getHeader().setAttribute(HDFS_HEADER_ROLL, ""true"");
    }
    record.getHeader().setAttribute(HDFS_HEADER_AVROSCHEMA, avroSchema);
    record.getHeader().setAttribute(HDFS_HEADER_TARGET_DIRECTORY, location);
    LOG.trace(""Record {} will be stored in {} path: roll({}), avro schema: {}"", record.getHeader().getSourceId(), location, roll, avroSchema);
  }",java,"@VisibleForTesting
  static void updateRecordForHDFS(
      Record record,
      boolean roll,
      String avroSchema,
      String location
  ){
    if(roll){
      record.getHeader().setAttribute(HDFS_HEADER_ROLL, ""true"");
    }
    record.getHeader().setAttribute(HDFS_HEADER_AVROSCHEMA, avroSchema);
    record.getHeader().setAttribute(HDFS_HEADER_TARGET_DIRECTORY, location);
    LOG.trace(""Record {} will be stored in {} path: roll({}), avro schema: {}"", record.getHeader().getSourceId(), location, roll, avroSchema);
  }","['@', 'VisibleForTesting', 'static', 'void', 'updateRecordForHDFS', '(', 'Record', 'record', ',', 'boolean', 'roll', ',', 'String', 'avroSchema', ',', 'String', 'location', ')', '{', 'if', '(', 'roll', ')', '{', 'record', '.', 'getHeader', '(', ')', '.', 'setAttribute', '(', 'HDFS_HEADER_ROLL', ',', '""true""', ')', ';', '}', 'record', '.', 'getHeader', '(', ')', '.', 'setAttribute', '(', 'HDFS_HEADER_AVROSCHEMA', ',', 'avroSchema', ')', ';', 'record', '.', 'getHeader', '(', ')', '.', 'setAttribute', '(', 'HDFS_HEADER_TARGET_DIRECTORY', ',', 'location', ')', ';', 'LOG', '.', 'trace', '(', '""Record {} will be stored in {} path: roll({}), avro schema: {}""', ',', 'record', '.', 'getHeader', '(', ')', '.', 'getSourceId', '(', ')', ',', 'location', ',', 'roll', ',', 'avroSchema', ')', ';', '}']",Add header information to send to HDFS,"['Add', 'header', 'information', 'to', 'send', 'to', 'HDFS']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/hive-protolib/src/main/java/com/streamsets/pipeline/stage/processor/hive/HiveMetadataProcessor.java#L791-L804,test
wildfly/wildfly,ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerImpl.java,TimerImpl.setTimerState,"protected void setTimerState(TimerState state, Thread thread) {
        assert ((state == TimerState.IN_TIMEOUT || state == TimerState.RETRY_TIMEOUT) && thread != null) || thread == null : ""Invalid to set timer state "" + state + "" with executing Thread "" + thread;
        this.timerState = state;
        this.executingThread = thread;
    }",java,"protected void setTimerState(TimerState state, Thread thread) {
        assert ((state == TimerState.IN_TIMEOUT || state == TimerState.RETRY_TIMEOUT) && thread != null) || thread == null : ""Invalid to set timer state "" + state + "" with executing Thread "" + thread;
        this.timerState = state;
        this.executingThread = thread;
    }","['protected', 'void', 'setTimerState', '(', 'TimerState', 'state', ',', 'Thread', 'thread', ')', '{', 'assert', '(', '(', 'state', '==', 'TimerState', '.', 'IN_TIMEOUT', '||', 'state', '==', 'TimerState', '.', 'RETRY_TIMEOUT', ')', '&&', 'thread', '!=', 'null', ')', '||', 'thread', '==', 'null', ':', '""Invalid to set timer state ""', '+', 'state', '+', '"" with executing Thread ""', '+', 'thread', ';', 'this', '.', 'timerState', '=', 'state', ';', 'this', '.', 'executingThread', '=', 'thread', ';', '}']","Sets the state and timer task executing thread of this timer

@param state The state of this timer
@param thread The executing thread which is processing the timeout task","['Sets', 'the', 'state', 'and', 'timer', 'task', 'executing', 'thread', 'of', 'this', 'timer']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerImpl.java#L498-L502,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/core/status/StatusUtil.java,StatusUtil.timeOfLastReset,"public long timeOfLastReset() {
    List<Status> statusList = sm.getCopyOfStatusList();
    if (statusList == null)
      return -1;

    int len = statusList.size();
    for (int i = len - 1; i >= 0; i--) {
      Status s = statusList.get(i);
      if (CoreConstants.RESET_MSG_PREFIX.equals(s.getMessage())) {
        return s.getDate();
      }
    }
    return -1;
  }",java,"public long timeOfLastReset() {
    List<Status> statusList = sm.getCopyOfStatusList();
    if (statusList == null)
      return -1;

    int len = statusList.size();
    for (int i = len - 1; i >= 0; i--) {
      Status s = statusList.get(i);
      if (CoreConstants.RESET_MSG_PREFIX.equals(s.getMessage())) {
        return s.getDate();
      }
    }
    return -1;
  }","['public', 'long', 'timeOfLastReset', '(', ')', '{', 'List', '<', 'Status', '>', 'statusList', '=', 'sm', '.', 'getCopyOfStatusList', '(', ')', ';', 'if', '(', 'statusList', '==', 'null', ')', 'return', '-', '1', ';', 'int', 'len', '=', 'statusList', '.', 'size', '(', ')', ';', 'for', '(', 'int', 'i', '=', 'len', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'Status', 's', '=', 'statusList', '.', 'get', '(', 'i', ')', ';', 'if', '(', 'CoreConstants', '.', 'RESET_MSG_PREFIX', '.', 'equals', '(', 's', '.', 'getMessage', '(', ')', ')', ')', '{', 'return', 's', '.', 'getDate', '(', ')', ';', '}', '}', 'return', '-', '1', ';', '}']","Return the time of last reset. -1 if last reset time could not be found

@return time of last reset or -1","['Return', 'the', 'time', 'of', 'last', 'reset', '.', '-', '1', 'if', 'last', 'reset', 'time', 'could', 'not', 'be', 'found']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/status/StatusUtil.java#L179-L192,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/units/DateUnit.java,DateUnit.getStandardDate,"static public Date getStandardDate(String text) {
    double value;
    String udunitString;

    text = text.trim();
    StringTokenizer stoker = new StringTokenizer(text);
    String firstToke = stoker.nextToken();
    try {
      value = Double.parseDouble(firstToke);
      udunitString = text.substring(firstToke.length());
    } catch (NumberFormatException e) { // stupid way to test if it starts with a number
      value = 0.0;
      udunitString = text;
    }

    DateUnit du;
    try {
      du = new DateUnit(udunitString);
    } catch (Exception e) {
      return null;
    }

    return du.makeDate(value);
  }",java,"static public Date getStandardDate(String text) {
    double value;
    String udunitString;

    text = text.trim();
    StringTokenizer stoker = new StringTokenizer(text);
    String firstToke = stoker.nextToken();
    try {
      value = Double.parseDouble(firstToke);
      udunitString = text.substring(firstToke.length());
    } catch (NumberFormatException e) { // stupid way to test if it starts with a number
      value = 0.0;
      udunitString = text;
    }

    DateUnit du;
    try {
      du = new DateUnit(udunitString);
    } catch (Exception e) {
      return null;
    }

    return du.makeDate(value);
  }","['static', 'public', 'Date', 'getStandardDate', '(', 'String', 'text', ')', '{', 'double', 'value', ';', 'String', 'udunitString', ';', 'text', '=', 'text', '.', 'trim', '(', ')', ';', 'StringTokenizer', 'stoker', '=', 'new', 'StringTokenizer', '(', 'text', ')', ';', 'String', 'firstToke', '=', 'stoker', '.', 'nextToken', '(', ')', ';', 'try', '{', 'value', '=', 'Double', '.', 'parseDouble', '(', 'firstToke', ')', ';', 'udunitString', '=', 'text', '.', 'substring', '(', 'firstToke', '.', 'length', '(', ')', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'e', ')', '{', '// stupid way to test if it starts with a number\r', 'value', '=', '0.0', ';', 'udunitString', '=', 'text', ';', '}', 'DateUnit', 'du', ';', 'try', '{', 'du', '=', 'new', 'DateUnit', '(', 'udunitString', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'return', 'null', ';', '}', 'return', 'du', '.', 'makeDate', '(', 'value', ')', ';', '}']","Create a java.util.Date from this udunits String.

@param text a udunit string.
<pre>[number] (units) since [-]Y[Y[Y[Y]]]-MM-DD[(T| )hh[:mm[:ss[.sss*]]][ [+|-]hh[[:]mm]]]</pre>
@return Date or null if not date unit.","['Create', 'a', 'java', '.', 'util', '.', 'Date', 'from', 'this', 'udunits', 'String', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/units/DateUnit.java#L32-L55,test
rackerlabs/blueflood,blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java,Granularity.granularityFromPointsLessThanEqual,"private static Granularity granularityFromPointsLessThanEqual(double requestedDuration, int points, long assumedIntervalMillis) {
        Granularity gran = granularityFromPointsLinear(requestedDuration, points, assumedIntervalMillis);

        if (requestedDuration / gran.milliseconds() > points) {
            try {
                gran = gran.coarser();
            } catch (GranularityException e) { /* do nothing, already at 1440m */ }
        }

        return gran;
    }",java,"private static Granularity granularityFromPointsLessThanEqual(double requestedDuration, int points, long assumedIntervalMillis) {
        Granularity gran = granularityFromPointsLinear(requestedDuration, points, assumedIntervalMillis);

        if (requestedDuration / gran.milliseconds() > points) {
            try {
                gran = gran.coarser();
            } catch (GranularityException e) { /* do nothing, already at 1440m */ }
        }

        return gran;
    }","['private', 'static', 'Granularity', 'granularityFromPointsLessThanEqual', '(', 'double', 'requestedDuration', ',', 'int', 'points', ',', 'long', 'assumedIntervalMillis', ')', '{', 'Granularity', 'gran', '=', 'granularityFromPointsLinear', '(', 'requestedDuration', ',', 'points', ',', 'assumedIntervalMillis', ')', ';', 'if', '(', 'requestedDuration', '/', 'gran', '.', 'milliseconds', '(', ')', '>', 'points', ')', '{', 'try', '{', 'gran', '=', 'gran', '.', 'coarser', '(', ')', ';', '}', 'catch', '(', 'GranularityException', 'e', ')', '{', '/* do nothing, already at 1440m */', '}', '}', 'return', 'gran', ';', '}']","Find the granularity in the interval that will yield a number of data points that are
closest to the requested points but <= requested points.

@param requestedDuration
@param points
@return","['Find', 'the', 'granularity', 'in', 'the', 'interval', 'that', 'will', 'yield', 'a', 'number', 'of', 'data', 'points', 'that', 'are', 'closest', 'to', 'the', 'requested', 'points', 'but', '<', '=', 'requested', 'points', '.']",4722a3449b1a7f8e88889ea8c340c6f24396b5b0,https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-core/src/main/java/com/rackspacecloud/blueflood/rollup/Granularity.java#L248-L258,test
apache/parquet-mr,parquet-avro/src/main/java/org/apache/parquet/avro/AvroSchemaConverter.java,AvroSchemaConverter.getNonNull,"public static Schema getNonNull(Schema schema) {
    if (schema.getType().equals(Schema.Type.UNION)) {
      List<Schema> schemas = schema.getTypes();
      if (schemas.size() == 2) {
        if (schemas.get(0).getType().equals(Schema.Type.NULL)) {
          return schemas.get(1);
        } else if (schemas.get(1).getType().equals(Schema.Type.NULL)) {
          return schemas.get(0);
        } else {
          return schema;
        }
      } else {
        return schema;
      }
    } else {
      return schema;
    }
  }",java,"public static Schema getNonNull(Schema schema) {
    if (schema.getType().equals(Schema.Type.UNION)) {
      List<Schema> schemas = schema.getTypes();
      if (schemas.size() == 2) {
        if (schemas.get(0).getType().equals(Schema.Type.NULL)) {
          return schemas.get(1);
        } else if (schemas.get(1).getType().equals(Schema.Type.NULL)) {
          return schemas.get(0);
        } else {
          return schema;
        }
      } else {
        return schema;
      }
    } else {
      return schema;
    }
  }","['public', 'static', 'Schema', 'getNonNull', '(', 'Schema', 'schema', ')', '{', 'if', '(', 'schema', '.', 'getType', '(', ')', '.', 'equals', '(', 'Schema', '.', 'Type', '.', 'UNION', ')', ')', '{', 'List', '<', 'Schema', '>', 'schemas', '=', 'schema', '.', 'getTypes', '(', ')', ';', 'if', '(', 'schemas', '.', 'size', '(', ')', '==', '2', ')', '{', 'if', '(', 'schemas', '.', 'get', '(', '0', ')', '.', 'getType', '(', ')', '.', 'equals', '(', 'Schema', '.', 'Type', '.', 'NULL', ')', ')', '{', 'return', 'schemas', '.', 'get', '(', '1', ')', ';', '}', 'else', 'if', '(', 'schemas', '.', 'get', '(', '1', ')', '.', 'getType', '(', ')', '.', 'equals', '(', 'Schema', '.', 'Type', '.', 'NULL', ')', ')', '{', 'return', 'schemas', '.', 'get', '(', '0', ')', ';', '}', 'else', '{', 'return', 'schema', ';', '}', '}', 'else', '{', 'return', 'schema', ';', '}', '}', 'else', '{', 'return', 'schema', ';', '}', '}']","Given a schema, check to see if it is a union of a null type and a regular schema,
and then return the non-null sub-schema. Otherwise, return the given schema.

@param schema The schema to check
@return The non-null portion of a union schema, or the given schema","['Given', 'a', 'schema', 'check', 'to', 'see', 'if', 'it', 'is', 'a', 'union', 'of', 'a', 'null', 'type', 'and', 'a', 'regular', 'schema', 'and', 'then', 'return', 'the', 'non', '-', 'null', 'sub', '-', 'schema', '.', 'Otherwise', 'return', 'the', 'given', 'schema', '.']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-avro/src/main/java/org/apache/parquet/avro/AvroSchemaConverter.java#L101-L118,test
hawkular/hawkular-metrics,core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/MetricsServiceImpl.java,MetricsServiceImpl.addTags,"@Override
    public Observable<Void> addTags(Metric<?> metric, Map<String, String> tags) {
        try {
            checkArgument(tags != null, ""Missing tags"");
            checkArgument(isValidTagMap(tags), ""Invalid tags; tag key is required"");
        } catch (Exception e) {
            return Observable.error(e);
        }

        return dataAccess.insertIntoMetricsTagsIndex(metric, tags).concatWith(dataAccess.addTags(metric, tags))
                .toList().map(l -> null);
    }",java,"@Override
    public Observable<Void> addTags(Metric<?> metric, Map<String, String> tags) {
        try {
            checkArgument(tags != null, ""Missing tags"");
            checkArgument(isValidTagMap(tags), ""Invalid tags; tag key is required"");
        } catch (Exception e) {
            return Observable.error(e);
        }

        return dataAccess.insertIntoMetricsTagsIndex(metric, tags).concatWith(dataAccess.addTags(metric, tags))
                .toList().map(l -> null);
    }","['@', 'Override', 'public', 'Observable', '<', 'Void', '>', 'addTags', '(', 'Metric', '<', '?', '>', 'metric', ',', 'Map', '<', 'String', ',', 'String', '>', 'tags', ')', '{', 'try', '{', 'checkArgument', '(', 'tags', '!=', 'null', ',', '""Missing tags""', ')', ';', 'checkArgument', '(', 'isValidTagMap', '(', 'tags', ')', ',', '""Invalid tags; tag key is required""', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'return', 'Observable', '.', 'error', '(', 'e', ')', ';', '}', 'return', 'dataAccess', '.', 'insertIntoMetricsTagsIndex', '(', 'metric', ',', 'tags', ')', '.', 'concatWith', '(', 'dataAccess', '.', 'addTags', '(', 'metric', ',', 'tags', ')', ')', '.', 'toList', '(', ')', '.', 'map', '(', 'l', '->', 'null', ')', ';', '}']",functionality into a separate class.,"['functionality', 'into', 'a', 'separate', 'class', '.']",6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c,https://github.com/hawkular/hawkular-metrics/blob/6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c/core/metrics-core-service/src/main/java/org/hawkular/metrics/core/service/MetricsServiceImpl.java#L607-L618,test
jcodec/jcodec,src/main/java/org/jcodec/codecs/wav/WavHeader.java,WavHeader.createWavHeader,"public static WavHeader createWavHeader(AudioFormat format, int samples) {
        WavHeader w = new WavHeader(""RIFF"", 40, ""WAVE"", new FmtChunk((short) 1, (short) format.getChannels(), format.getSampleRate(),
                format.getSampleRate() * format.getChannels() * (format.getSampleSizeInBits() >> 3),
                (short) (format.getChannels() * (format.getSampleSizeInBits() >> 3)),
                (short) format.getSampleSizeInBits()), 44, calcDataSize(format.getChannels(),
                format.getSampleSizeInBits() >> 3, samples));
        return w;
    }",java,"public static WavHeader createWavHeader(AudioFormat format, int samples) {
        WavHeader w = new WavHeader(""RIFF"", 40, ""WAVE"", new FmtChunk((short) 1, (short) format.getChannels(), format.getSampleRate(),
                format.getSampleRate() * format.getChannels() * (format.getSampleSizeInBits() >> 3),
                (short) (format.getChannels() * (format.getSampleSizeInBits() >> 3)),
                (short) format.getSampleSizeInBits()), 44, calcDataSize(format.getChannels(),
                format.getSampleSizeInBits() >> 3, samples));
        return w;
    }","['public', 'static', 'WavHeader', 'createWavHeader', '(', 'AudioFormat', 'format', ',', 'int', 'samples', ')', '{', 'WavHeader', 'w', '=', 'new', 'WavHeader', '(', '""RIFF""', ',', '40', ',', '""WAVE""', ',', 'new', 'FmtChunk', '(', '(', 'short', ')', '1', ',', '(', 'short', ')', 'format', '.', 'getChannels', '(', ')', ',', 'format', '.', 'getSampleRate', '(', ')', ',', 'format', '.', 'getSampleRate', '(', ')', '*', 'format', '.', 'getChannels', '(', ')', '*', '(', 'format', '.', 'getSampleSizeInBits', '(', ')', '>>', '3', ')', ',', '(', 'short', ')', '(', 'format', '.', 'getChannels', '(', ')', '*', '(', 'format', '.', 'getSampleSizeInBits', '(', ')', '>>', '3', ')', ')', ',', '(', 'short', ')', 'format', '.', 'getSampleSizeInBits', '(', ')', ')', ',', '44', ',', 'calcDataSize', '(', 'format', '.', 'getChannels', '(', ')', ',', 'format', '.', 'getSampleSizeInBits', '(', ')', '>>', '3', ',', 'samples', ')', ')', ';', 'return', 'w', ';', '}']","Creates wav header for the specified audio format

@param format
@param samples","['Creates', 'wav', 'header', 'for', 'the', 'specified', 'audio', 'format']",cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75,https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/codecs/wav/WavHeader.java#L180-L187,test
jboss/jboss-common-core,src/main/java/org/jboss/net/protocol/URLStreamHandlerFactory.java,URLStreamHandlerFactory.preload,"@SuppressWarnings(""unused"")
   public static void preload()
   {
      for (int i = 0; i < PROTOCOLS.length; i ++)
      {
         try
         {
            URL url = new URL(PROTOCOLS[i], """", -1, """");
            log.trace(""Loaded protocol: "" + PROTOCOLS[i]);
         }
         catch (Exception e)
         {
            log.warn(""Failed to load protocol: "" + PROTOCOLS[i], e);
         }
      }
   }",java,"@SuppressWarnings(""unused"")
   public static void preload()
   {
      for (int i = 0; i < PROTOCOLS.length; i ++)
      {
         try
         {
            URL url = new URL(PROTOCOLS[i], """", -1, """");
            log.trace(""Loaded protocol: "" + PROTOCOLS[i]);
         }
         catch (Exception e)
         {
            log.warn(""Failed to load protocol: "" + PROTOCOLS[i], e);
         }
      }
   }","['@', 'SuppressWarnings', '(', '""unused""', ')', 'public', 'static', 'void', 'preload', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'PROTOCOLS', '.', 'length', ';', 'i', '++', ')', '{', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'PROTOCOLS', '[', 'i', ']', ',', '""""', ',', '-', '1', ',', '""""', ')', ';', 'log', '.', 'trace', '(', '""Loaded protocol: ""', '+', 'PROTOCOLS', '[', 'i', ']', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', '""Failed to load protocol: ""', '+', 'PROTOCOLS', '[', 'i', ']', ',', 'e', ')', ';', '}', '}', '}']","Preload the JBoss specific protocol handlers, so that URL knows about
them even if the handler factory is changed.","['Preload', 'the', 'JBoss', 'specific', 'protocol', 'handlers', 'so', 'that', 'URL', 'knows', 'about', 'them', 'even', 'if', 'the', 'handler', 'factory', 'is', 'changed', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/net/protocol/URLStreamHandlerFactory.java#L115-L130,test
streamsets/datacollector,container/src/main/java/com/streamsets/datacollector/stagelibrary/ClassLoaderStageLibraryTask.java,ClassLoaderStageLibraryTask.validateAllServicesAvailable,"private void validateAllServicesAvailable() {
    // Firstly validate that all stages have satisfied service dependencies
    List<String> missingServices = new LinkedList<>();

    for(StageDefinition stage : stageList) {
      for(ServiceDependencyDefinition service : stage.getServices()) {
        if(!serviceMap.containsKey(service.getService())) {
          missingServices.add(Utils.format(""Stage {} is missing service {}"", stage.getName(), service.getService().getName()));
        }
      }
    }
    if(!missingServices.isEmpty()) {
      throw new RuntimeException(""Missing services: "" + StringUtils.join(missingServices, "", ""));
    }

    // Secondly ensure that all loaded services are compatible with what is supported by our runtime engine
    List<String> unsupportedServices = new LinkedList<>();
    for(ServiceDefinition serviceDefinition : serviceList) {
      if(!ServiceRuntime.supports(serviceDefinition.getProvides())) {
        unsupportedServices.add(serviceDefinition.getProvides().toString());
      }
    }
    if(!unsupportedServices.isEmpty()) {
      throw new RuntimeException(""Unsupported services: "" + StringUtils.join(unsupportedServices, "", ""));
    }
  }",java,"private void validateAllServicesAvailable() {
    // Firstly validate that all stages have satisfied service dependencies
    List<String> missingServices = new LinkedList<>();

    for(StageDefinition stage : stageList) {
      for(ServiceDependencyDefinition service : stage.getServices()) {
        if(!serviceMap.containsKey(service.getService())) {
          missingServices.add(Utils.format(""Stage {} is missing service {}"", stage.getName(), service.getService().getName()));
        }
      }
    }
    if(!missingServices.isEmpty()) {
      throw new RuntimeException(""Missing services: "" + StringUtils.join(missingServices, "", ""));
    }

    // Secondly ensure that all loaded services are compatible with what is supported by our runtime engine
    List<String> unsupportedServices = new LinkedList<>();
    for(ServiceDefinition serviceDefinition : serviceList) {
      if(!ServiceRuntime.supports(serviceDefinition.getProvides())) {
        unsupportedServices.add(serviceDefinition.getProvides().toString());
      }
    }
    if(!unsupportedServices.isEmpty()) {
      throw new RuntimeException(""Unsupported services: "" + StringUtils.join(unsupportedServices, "", ""));
    }
  }","['private', 'void', 'validateAllServicesAvailable', '(', ')', '{', '// Firstly validate that all stages have satisfied service dependencies', 'List', '<', 'String', '>', 'missingServices', '=', 'new', 'LinkedList', '<>', '(', ')', ';', 'for', '(', 'StageDefinition', 'stage', ':', 'stageList', ')', '{', 'for', '(', 'ServiceDependencyDefinition', 'service', ':', 'stage', '.', 'getServices', '(', ')', ')', '{', 'if', '(', '!', 'serviceMap', '.', 'containsKey', '(', 'service', '.', 'getService', '(', ')', ')', ')', '{', 'missingServices', '.', 'add', '(', 'Utils', '.', 'format', '(', '""Stage {} is missing service {}""', ',', 'stage', '.', 'getName', '(', ')', ',', 'service', '.', 'getService', '(', ')', '.', 'getName', '(', ')', ')', ')', ';', '}', '}', '}', 'if', '(', '!', 'missingServices', '.', 'isEmpty', '(', ')', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Missing services: ""', '+', 'StringUtils', '.', 'join', '(', 'missingServices', ',', '"", ""', ')', ')', ';', '}', '// Secondly ensure that all loaded services are compatible with what is supported by our runtime engine', 'List', '<', 'String', '>', 'unsupportedServices', '=', 'new', 'LinkedList', '<>', '(', ')', ';', 'for', '(', 'ServiceDefinition', 'serviceDefinition', ':', 'serviceList', ')', '{', 'if', '(', '!', 'ServiceRuntime', '.', 'supports', '(', 'serviceDefinition', '.', 'getProvides', '(', ')', ')', ')', '{', 'unsupportedServices', '.', 'add', '(', 'serviceDefinition', '.', 'getProvides', '(', ')', '.', 'toString', '(', ')', ')', ';', '}', '}', 'if', '(', '!', 'unsupportedServices', '.', 'isEmpty', '(', ')', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""Unsupported services: ""', '+', 'StringUtils', '.', 'join', '(', 'unsupportedServices', ',', '"", ""', ')', ')', ';', '}', '}']","Validate service dependencies.

Any error is considered fatal and RuntimeException() will be thrown that will terminate the SDC start up procedure.","['Validate', 'service', 'dependencies', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/stagelibrary/ClassLoaderStageLibraryTask.java#L399-L424,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/Util.java,Util.getTypeIDLName,"public static String getTypeIDLName(Class cls)
            throws RMIIIOPViolationException {

        if (cls.isPrimitive())
            return PrimitiveAnalysis.getPrimitiveAnalysis(cls).getIDLName();

        if (cls.isArray()) {
            // boxedRMI 1.3.6
            Class componentClass = cls;
            int sequence = 0;
            while (componentClass.isArray()) {
                componentClass = componentClass.getComponentType();
                ++sequence;
            }

            String idlName = getTypeIDLName(componentClass);
            int idx = idlName.lastIndexOf(""::"");
            String idlModule = idlName.substring(0, idx + 2);
            String baseName = idlName.substring(idx + 2);
            return ""::org::omg::boxedRMI"" + idlModule + ""seq"" + sequence + ""_"" + baseName;
        }

        // special classes
        if (cls == java.lang.String.class)
            return ""::CORBA::WStringValue"";
        if (cls == java.lang.Object.class)
            return ""::java::lang::_Object"";
        if (cls == java.lang.Class.class)
            return ""::javax::rmi::CORBA::ClassDesc"";
        if (cls == java.io.Serializable.class)
            return ""::java::io::Serializable"";
        if (cls == java.io.Externalizable.class)
            return ""::java::io::Externalizable"";
        if (cls == java.rmi.Remote.class)
            return ""::java::rmi::Remote"";
        if (cls == org.omg.CORBA.Object.class)
            return ""::CORBA::Object"";


        // remote interface?
        if (cls.isInterface() && java.rmi.Remote.class.isAssignableFrom(cls)) {
            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();
        }

        // IDL interface?
        if (cls.isInterface() &&
                org.omg.CORBA.Object.class.isAssignableFrom(cls) &&
                org.omg.CORBA.portable.IDLEntity.class.isAssignableFrom(cls)) {
            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();
        }

        // exception?
        if (Throwable.class.isAssignableFrom(cls)) {
            if (Exception.class.isAssignableFrom(cls) &&
                    !RuntimeException.class.isAssignableFrom(cls)) {
                ExceptionAnalysis ea = ExceptionAnalysis.getExceptionAnalysis(cls);

                return ea.getIDLModuleName() + ""::"" + ea.getIDLName();
            }
        }

        // got to be value
        ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

        return va.getIDLModuleName() + ""::"" + va.getIDLName();
    }",java,"public static String getTypeIDLName(Class cls)
            throws RMIIIOPViolationException {

        if (cls.isPrimitive())
            return PrimitiveAnalysis.getPrimitiveAnalysis(cls).getIDLName();

        if (cls.isArray()) {
            // boxedRMI 1.3.6
            Class componentClass = cls;
            int sequence = 0;
            while (componentClass.isArray()) {
                componentClass = componentClass.getComponentType();
                ++sequence;
            }

            String idlName = getTypeIDLName(componentClass);
            int idx = idlName.lastIndexOf(""::"");
            String idlModule = idlName.substring(0, idx + 2);
            String baseName = idlName.substring(idx + 2);
            return ""::org::omg::boxedRMI"" + idlModule + ""seq"" + sequence + ""_"" + baseName;
        }

        // special classes
        if (cls == java.lang.String.class)
            return ""::CORBA::WStringValue"";
        if (cls == java.lang.Object.class)
            return ""::java::lang::_Object"";
        if (cls == java.lang.Class.class)
            return ""::javax::rmi::CORBA::ClassDesc"";
        if (cls == java.io.Serializable.class)
            return ""::java::io::Serializable"";
        if (cls == java.io.Externalizable.class)
            return ""::java::io::Externalizable"";
        if (cls == java.rmi.Remote.class)
            return ""::java::rmi::Remote"";
        if (cls == org.omg.CORBA.Object.class)
            return ""::CORBA::Object"";


        // remote interface?
        if (cls.isInterface() && java.rmi.Remote.class.isAssignableFrom(cls)) {
            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();
        }

        // IDL interface?
        if (cls.isInterface() &&
                org.omg.CORBA.Object.class.isAssignableFrom(cls) &&
                org.omg.CORBA.portable.IDLEntity.class.isAssignableFrom(cls)) {
            InterfaceAnalysis ia = InterfaceAnalysis.getInterfaceAnalysis(cls);

            return ia.getIDLModuleName() + ""::"" + ia.getIDLName();
        }

        // exception?
        if (Throwable.class.isAssignableFrom(cls)) {
            if (Exception.class.isAssignableFrom(cls) &&
                    !RuntimeException.class.isAssignableFrom(cls)) {
                ExceptionAnalysis ea = ExceptionAnalysis.getExceptionAnalysis(cls);

                return ea.getIDLModuleName() + ""::"" + ea.getIDLName();
            }
        }

        // got to be value
        ValueAnalysis va = ValueAnalysis.getValueAnalysis(cls);

        return va.getIDLModuleName() + ""::"" + va.getIDLName();
    }","['public', 'static', 'String', 'getTypeIDLName', '(', 'Class', 'cls', ')', 'throws', 'RMIIIOPViolationException', '{', 'if', '(', 'cls', '.', 'isPrimitive', '(', ')', ')', 'return', 'PrimitiveAnalysis', '.', 'getPrimitiveAnalysis', '(', 'cls', ')', '.', 'getIDLName', '(', ')', ';', 'if', '(', 'cls', '.', 'isArray', '(', ')', ')', '{', '// boxedRMI 1.3.6', 'Class', 'componentClass', '=', 'cls', ';', 'int', 'sequence', '=', '0', ';', 'while', '(', 'componentClass', '.', 'isArray', '(', ')', ')', '{', 'componentClass', '=', 'componentClass', '.', 'getComponentType', '(', ')', ';', '++', 'sequence', ';', '}', 'String', 'idlName', '=', 'getTypeIDLName', '(', 'componentClass', ')', ';', 'int', 'idx', '=', 'idlName', '.', 'lastIndexOf', '(', '""::""', ')', ';', 'String', 'idlModule', '=', 'idlName', '.', 'substring', '(', '0', ',', 'idx', '+', '2', ')', ';', 'String', 'baseName', '=', 'idlName', '.', 'substring', '(', 'idx', '+', '2', ')', ';', 'return', '""::org::omg::boxedRMI""', '+', 'idlModule', '+', '""seq""', '+', 'sequence', '+', '""_""', '+', 'baseName', ';', '}', '// special classes', 'if', '(', 'cls', '==', 'java', '.', 'lang', '.', 'String', '.', 'class', ')', 'return', '""::CORBA::WStringValue""', ';', 'if', '(', 'cls', '==', 'java', '.', 'lang', '.', 'Object', '.', 'class', ')', 'return', '""::java::lang::_Object""', ';', 'if', '(', 'cls', '==', 'java', '.', 'lang', '.', 'Class', '.', 'class', ')', 'return', '""::javax::rmi::CORBA::ClassDesc""', ';', 'if', '(', 'cls', '==', 'java', '.', 'io', '.', 'Serializable', '.', 'class', ')', 'return', '""::java::io::Serializable""', ';', 'if', '(', 'cls', '==', 'java', '.', 'io', '.', 'Externalizable', '.', 'class', ')', 'return', '""::java::io::Externalizable""', ';', 'if', '(', 'cls', '==', 'java', '.', 'rmi', '.', 'Remote', '.', 'class', ')', 'return', '""::java::rmi::Remote""', ';', 'if', '(', 'cls', '==', 'org', '.', 'omg', '.', 'CORBA', '.', 'Object', '.', 'class', ')', 'return', '""::CORBA::Object""', ';', '// remote interface?', 'if', '(', 'cls', '.', 'isInterface', '(', ')', '&&', 'java', '.', 'rmi', '.', 'Remote', '.', 'class', '.', 'isAssignableFrom', '(', 'cls', ')', ')', '{', 'InterfaceAnalysis', 'ia', '=', 'InterfaceAnalysis', '.', 'getInterfaceAnalysis', '(', 'cls', ')', ';', 'return', 'ia', '.', 'getIDLModuleName', '(', ')', '+', '""::""', '+', 'ia', '.', 'getIDLName', '(', ')', ';', '}', '// IDL interface?', 'if', '(', 'cls', '.', 'isInterface', '(', ')', '&&', 'org', '.', 'omg', '.', 'CORBA', '.', 'Object', '.', 'class', '.', 'isAssignableFrom', '(', 'cls', ')', '&&', 'org', '.', 'omg', '.', 'CORBA', '.', 'portable', '.', 'IDLEntity', '.', 'class', '.', 'isAssignableFrom', '(', 'cls', ')', ')', '{', 'InterfaceAnalysis', 'ia', '=', 'InterfaceAnalysis', '.', 'getInterfaceAnalysis', '(', 'cls', ')', ';', 'return', 'ia', '.', 'getIDLModuleName', '(', ')', '+', '""::""', '+', 'ia', '.', 'getIDLName', '(', ')', ';', '}', '// exception?', 'if', '(', 'Throwable', '.', 'class', '.', 'isAssignableFrom', '(', 'cls', ')', ')', '{', 'if', '(', 'Exception', '.', 'class', '.', 'isAssignableFrom', '(', 'cls', ')', '&&', '!', 'RuntimeException', '.', 'class', '.', 'isAssignableFrom', '(', 'cls', ')', ')', '{', 'ExceptionAnalysis', 'ea', '=', 'ExceptionAnalysis', '.', 'getExceptionAnalysis', '(', 'cls', ')', ';', 'return', 'ea', '.', 'getIDLModuleName', '(', ')', '+', '""::""', '+', 'ea', '.', 'getIDLName', '(', ')', ';', '}', '}', '// got to be value', 'ValueAnalysis', 'va', '=', 'ValueAnalysis', '.', 'getValueAnalysis', '(', 'cls', ')', ';', 'return', 'va', '.', 'getIDLModuleName', '(', ')', '+', '""::""', '+', 'va', '.', 'getIDLName', '(', ')', ';', '}']","Return the IDL type name for the given class.
Here we use the mapping for parameter types and return values.","['Return', 'the', 'IDL', 'type', 'name', 'for', 'the', 'given', 'class', '.', 'Here', 'we', 'use', 'the', 'mapping', 'for', 'parameter', 'types', 'and', 'return', 'values', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/Util.java#L63-L132,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dataset/StructureDS.java,StructureDS.reallyRead,"@Override
  public Array reallyRead(Variable client, CancelTask cancelTask) throws IOException {
    Array result;

    if (hasCachedData())
      result = super.reallyRead(client, cancelTask);
    else if (orgVar != null)
      result = orgVar.read();
    else {
      throw new IllegalStateException(""StructureDS has no way to get data"");
      //Object data = smProxy.getFillValue(getDataType());
      //return Array.factoryConstant(dataType.getPrimitiveClassType(), getShape(), data);
    }

    return convert(result, null);
  }",java,"@Override
  public Array reallyRead(Variable client, CancelTask cancelTask) throws IOException {
    Array result;

    if (hasCachedData())
      result = super.reallyRead(client, cancelTask);
    else if (orgVar != null)
      result = orgVar.read();
    else {
      throw new IllegalStateException(""StructureDS has no way to get data"");
      //Object data = smProxy.getFillValue(getDataType());
      //return Array.factoryConstant(dataType.getPrimitiveClassType(), getShape(), data);
    }

    return convert(result, null);
  }","['@', 'Override', 'public', 'Array', 'reallyRead', '(', 'Variable', 'client', ',', 'CancelTask', 'cancelTask', ')', 'throws', 'IOException', '{', 'Array', 'result', ';', 'if', '(', 'hasCachedData', '(', ')', ')', 'result', '=', 'super', '.', 'reallyRead', '(', 'client', ',', 'cancelTask', ')', ';', 'else', 'if', '(', 'orgVar', '!=', 'null', ')', 'result', '=', 'orgVar', '.', 'read', '(', ')', ';', 'else', '{', 'throw', 'new', 'IllegalStateException', '(', '""StructureDS has no way to get data""', ')', ';', '//Object data = smProxy.getFillValue(getDataType());\r', '//return Array.factoryConstant(dataType.getPrimitiveClassType(), getShape(), data);\r', '}', 'return', 'convert', '(', 'result', ',', 'null', ')', ';', '}']",regular Variables.,"['regular', 'Variables', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/StructureDS.java#L197-L212,test
orientechnologies/orientdb,server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedResponseManagerImpl.java,ODistributedResponseManagerImpl.getBestResponsesGroup,"protected int getBestResponsesGroup() {
    int maxCoherentResponses = 0;
    int bestGroupSoFar = 0;
    for (int i = 0; i < responseGroups.size(); ++i) {
      final int currentGroupSize = responseGroups.get(i).size();
      if (currentGroupSize > maxCoherentResponses) {
        maxCoherentResponses = currentGroupSize;
        bestGroupSoFar = i;
      }
    }
    return bestGroupSoFar;
  }",java,"protected int getBestResponsesGroup() {
    int maxCoherentResponses = 0;
    int bestGroupSoFar = 0;
    for (int i = 0; i < responseGroups.size(); ++i) {
      final int currentGroupSize = responseGroups.get(i).size();
      if (currentGroupSize > maxCoherentResponses) {
        maxCoherentResponses = currentGroupSize;
        bestGroupSoFar = i;
      }
    }
    return bestGroupSoFar;
  }","['protected', 'int', 'getBestResponsesGroup', '(', ')', '{', 'int', 'maxCoherentResponses', '=', '0', ';', 'int', 'bestGroupSoFar', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'responseGroups', '.', 'size', '(', ')', ';', '++', 'i', ')', '{', 'final', 'int', 'currentGroupSize', '=', 'responseGroups', '.', 'get', '(', 'i', ')', '.', 'size', '(', ')', ';', 'if', '(', 'currentGroupSize', '>', 'maxCoherentResponses', ')', '{', 'maxCoherentResponses', '=', 'currentGroupSize', ';', 'bestGroupSoFar', '=', 'i', ';', '}', '}', 'return', 'bestGroupSoFar', ';', '}']","Returns the biggest response group.

@return","['Returns', 'the', 'biggest', 'response', 'group', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/server/src/main/java/com/orientechnologies/orient/server/distributed/ODistributedResponseManagerImpl.java#L580-L591,test
dschulten/hydra-java,spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionDescriptor.java,SpringActionDescriptor.getActionInputParameter,"@Override
    public ActionInputParameter getActionInputParameter(String name) {
        ActionInputParameter ret = requestParams.get(name);
        if (ret == null) {
            ret = pathVariables.get(name);
        }
        if (ret == null) {
            for (ActionInputParameter annotatedParameter : getInputParameters()) {
                // TODO create ActionInputParameter for bean property at property path
                // TODO field access in addition to bean?
                PropertyDescriptor pd = getPropertyDescriptorForPropertyPath(name,
                        annotatedParameter.getParameterType());
                if (pd != null) {
                    if (pd.getWriteMethod() != null) {

                        Object callValue = annotatedParameter.getValue();
                        Object propertyValue = null;
                        if (callValue != null) {
                            BeanWrapper beanWrapper = PropertyAccessorFactory
                                    .forBeanPropertyAccess(callValue);
                            propertyValue = beanWrapper.getPropertyValue(name);
                        }
                        ret = new SpringActionInputParameter(new MethodParameter(pd
                                .getWriteMethod(), 0), propertyValue);
                    }
                    break;
                }
            }
        }
        return ret;
    }",java,"@Override
    public ActionInputParameter getActionInputParameter(String name) {
        ActionInputParameter ret = requestParams.get(name);
        if (ret == null) {
            ret = pathVariables.get(name);
        }
        if (ret == null) {
            for (ActionInputParameter annotatedParameter : getInputParameters()) {
                // TODO create ActionInputParameter for bean property at property path
                // TODO field access in addition to bean?
                PropertyDescriptor pd = getPropertyDescriptorForPropertyPath(name,
                        annotatedParameter.getParameterType());
                if (pd != null) {
                    if (pd.getWriteMethod() != null) {

                        Object callValue = annotatedParameter.getValue();
                        Object propertyValue = null;
                        if (callValue != null) {
                            BeanWrapper beanWrapper = PropertyAccessorFactory
                                    .forBeanPropertyAccess(callValue);
                            propertyValue = beanWrapper.getPropertyValue(name);
                        }
                        ret = new SpringActionInputParameter(new MethodParameter(pd
                                .getWriteMethod(), 0), propertyValue);
                    }
                    break;
                }
            }
        }
        return ret;
    }","['@', 'Override', 'public', 'ActionInputParameter', 'getActionInputParameter', '(', 'String', 'name', ')', '{', 'ActionInputParameter', 'ret', '=', 'requestParams', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'ret', '==', 'null', ')', '{', 'ret', '=', 'pathVariables', '.', 'get', '(', 'name', ')', ';', '}', 'if', '(', 'ret', '==', 'null', ')', '{', 'for', '(', 'ActionInputParameter', 'annotatedParameter', ':', 'getInputParameters', '(', ')', ')', '{', '// TODO create ActionInputParameter for bean property at property path', '// TODO field access in addition to bean?', 'PropertyDescriptor', 'pd', '=', 'getPropertyDescriptorForPropertyPath', '(', 'name', ',', 'annotatedParameter', '.', 'getParameterType', '(', ')', ')', ';', 'if', '(', 'pd', '!=', 'null', ')', '{', 'if', '(', 'pd', '.', 'getWriteMethod', '(', ')', '!=', 'null', ')', '{', 'Object', 'callValue', '=', 'annotatedParameter', '.', 'getValue', '(', ')', ';', 'Object', 'propertyValue', '=', 'null', ';', 'if', '(', 'callValue', '!=', 'null', ')', '{', 'BeanWrapper', 'beanWrapper', '=', 'PropertyAccessorFactory', '.', 'forBeanPropertyAccess', '(', 'callValue', ')', ';', 'propertyValue', '=', 'beanWrapper', '.', 'getPropertyValue', '(', 'name', ')', ';', '}', 'ret', '=', 'new', 'SpringActionInputParameter', '(', 'new', 'MethodParameter', '(', 'pd', '.', 'getWriteMethod', '(', ')', ',', '0', ')', ',', 'propertyValue', ')', ';', '}', 'break', ';', '}', '}', '}', 'return', 'ret', ';', '}']","Gets input parameter info which is part of the URL mapping, be it request parameters, path variables or request
body attributes.

@param name
to retrieve
@return parameter descriptor or null","['Gets', 'input', 'parameter', 'info', 'which', 'is', 'part', 'of', 'the', 'URL', 'mapping', 'be', 'it', 'request', 'parameters', 'path', 'variables', 'or', 'request', 'body', 'attributes', '.']",21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a,https://github.com/dschulten/hydra-java/blob/21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/SpringActionDescriptor.java#L183-L213,test
streamsets/datacollector,hive-protolib/src/main/java/com/streamsets/pipeline/stage/processor/hive/HiveMetadataProcessor.java,HiveMetadataProcessor.detectNewPartition,"private Map<PartitionInfoCacheSupport.PartitionValues, String> detectNewPartition(
      PartitionInfoCacheSupport.PartitionValues partitionValues,
      PartitionInfoCacheSupport.PartitionInfo pCache,
      String location
  ) throws StageException{
    Map<PartitionInfoCacheSupport.PartitionValues, String> partitionInfoDiff = new HashMap<>();
    partitionInfoDiff.put(partitionValues, location);

    partitionInfoDiff
        = (pCache != null)? pCache.getDiff(partitionInfoDiff) : partitionInfoDiff;
    if (pCache == null || !partitionInfoDiff.isEmpty()){
      return partitionInfoDiff;
    }
    return null;
  }",java,"private Map<PartitionInfoCacheSupport.PartitionValues, String> detectNewPartition(
      PartitionInfoCacheSupport.PartitionValues partitionValues,
      PartitionInfoCacheSupport.PartitionInfo pCache,
      String location
  ) throws StageException{
    Map<PartitionInfoCacheSupport.PartitionValues, String> partitionInfoDiff = new HashMap<>();
    partitionInfoDiff.put(partitionValues, location);

    partitionInfoDiff
        = (pCache != null)? pCache.getDiff(partitionInfoDiff) : partitionInfoDiff;
    if (pCache == null || !partitionInfoDiff.isEmpty()){
      return partitionInfoDiff;
    }
    return null;
  }","['private', 'Map', '<', 'PartitionInfoCacheSupport', '.', 'PartitionValues', ',', 'String', '>', 'detectNewPartition', '(', 'PartitionInfoCacheSupport', '.', 'PartitionValues', 'partitionValues', ',', 'PartitionInfoCacheSupport', '.', 'PartitionInfo', 'pCache', ',', 'String', 'location', ')', 'throws', 'StageException', '{', 'Map', '<', 'PartitionInfoCacheSupport', '.', 'PartitionValues', ',', 'String', '>', 'partitionInfoDiff', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'partitionInfoDiff', '.', 'put', '(', 'partitionValues', ',', 'location', ')', ';', 'partitionInfoDiff', '=', '(', 'pCache', '!=', 'null', ')', '?', 'pCache', '.', 'getDiff', '(', 'partitionInfoDiff', ')', ':', 'partitionInfoDiff', ';', 'if', '(', 'pCache', '==', 'null', '||', '!', 'partitionInfoDiff', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'partitionInfoDiff', ';', '}', 'return', 'null', ';', '}']","Using partition name and value that were obtained from record, compare them
with cached partition.
@param partitionValues Partition representation
@param pCache  Cache that has existing partitions
@return Diff of partitions if new partition is detected. Otherwise null.
@throws StageException","['Using', 'partition', 'name', 'and', 'value', 'that', 'were', 'obtained', 'from', 'record', 'compare', 'them', 'with', 'cached', 'partition', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/hive-protolib/src/main/java/com/streamsets/pipeline/stage/processor/hive/HiveMetadataProcessor.java#L674-L688,test
ReactiveX/RxJava,src/main/java/io/reactivex/internal/functions/Functions.java,Functions.justCallable,"public static <T> Callable<T> justCallable(T value) {
        return new JustValue<Object, T>(value);
    }",java,"public static <T> Callable<T> justCallable(T value) {
        return new JustValue<Object, T>(value);
    }","['public', 'static', '<', 'T', '>', 'Callable', '<', 'T', '>', 'justCallable', '(', 'T', 'value', ')', '{', 'return', 'new', 'JustValue', '<', 'Object', ',', 'T', '>', '(', 'value', ')', ';', '}']","Returns a Callable that returns the given value.
@param <T> the value type
@param value the value to return
@return the new Callable instance","['Returns', 'a', 'Callable', 'that', 'returns', 'the', 'given', 'value', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/functions/Functions.java#L198-L200,test
playframework/playframework,core/play/src/main/java/play/mvc/Results.java,Results.status,"public static Result status(int status, byte[] content) {
    if (content == null) {
      throw new NullPointerException(""Null content"");
    }
    return new Result(
        status, new HttpEntity.Strict(ByteString.fromArray(content), Optional.empty()));
  }",java,"public static Result status(int status, byte[] content) {
    if (content == null) {
      throw new NullPointerException(""Null content"");
    }
    return new Result(
        status, new HttpEntity.Strict(ByteString.fromArray(content), Optional.empty()));
  }","['public', 'static', 'Result', 'status', '(', 'int', 'status', ',', 'byte', '[', ']', 'content', ')', '{', 'if', '(', 'content', '==', 'null', ')', '{', 'throw', 'new', 'NullPointerException', '(', '""Null content""', ')', ';', '}', 'return', 'new', 'Result', '(', 'status', ',', 'new', 'HttpEntity', '.', 'Strict', '(', 'ByteString', '.', 'fromArray', '(', 'content', ')', ',', 'Optional', '.', 'empty', '(', ')', ')', ')', ';', '}']","Generates a simple result with byte-array content.

@param status the HTTP status for this result e.g. 200 (OK), 404 (NOT_FOUND)
@param content the result's body content, as a byte array
@return the result","['Generates', 'a', 'simple', 'result', 'with', 'byte', '-', 'array', 'content', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/mvc/Results.java#L124-L130,test
apache/parquet-mr,parquet-common/src/main/java/org/apache/parquet/bytes/BytesUtils.java,BytesUtils.readIntLittleEndian,"public static int readIntLittleEndian(ByteBuffer in, int offset) throws IOException {
    int ch4 = in.get(offset) & 0xff;
    int ch3 = in.get(offset + 1) & 0xff;
    int ch2 = in.get(offset + 2) & 0xff;
    int ch1 = in.get(offset + 3) & 0xff;
    return ((ch1 << 24) + (ch2 << 16) + (ch3 << 8) + (ch4 << 0));
  }",java,"public static int readIntLittleEndian(ByteBuffer in, int offset) throws IOException {
    int ch4 = in.get(offset) & 0xff;
    int ch3 = in.get(offset + 1) & 0xff;
    int ch2 = in.get(offset + 2) & 0xff;
    int ch1 = in.get(offset + 3) & 0xff;
    return ((ch1 << 24) + (ch2 << 16) + (ch3 << 8) + (ch4 << 0));
  }","['public', 'static', 'int', 'readIntLittleEndian', '(', 'ByteBuffer', 'in', ',', 'int', 'offset', ')', 'throws', 'IOException', '{', 'int', 'ch4', '=', 'in', '.', 'get', '(', 'offset', ')', '&', '0xff', ';', 'int', 'ch3', '=', 'in', '.', 'get', '(', 'offset', '+', '1', ')', '&', '0xff', ';', 'int', 'ch2', '=', 'in', '.', 'get', '(', 'offset', '+', '2', ')', '&', '0xff', ';', 'int', 'ch1', '=', 'in', '.', 'get', '(', 'offset', '+', '3', ')', '&', '0xff', ';', 'return', '(', '(', 'ch1', '<<', '24', ')', '+', '(', 'ch2', '<<', '16', ')', '+', '(', 'ch3', '<<', '8', ')', '+', '(', 'ch4', '<<', '0', ')', ')', ';', '}']","reads an int in little endian at the given position
@param in a byte buffer
@param offset an offset into the byte buffer
@return the integer at position offset read using little endian byte order
@throws IOException if there is an exception reading from the byte buffer","['reads', 'an', 'int', 'in', 'little', 'endian', 'at', 'the', 'given', 'position']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-common/src/main/java/org/apache/parquet/bytes/BytesUtils.java#L58-L64,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/samediff/SameDiff.java,SameDiff.exec,"public Pair<Map<SDVariable, DifferentialFunction>, List<DifferentialFunction>> exec(String functionName) {
        if (debugMode) {
            return sameDiffFunctionInstances.get(functionName).enableDebugMode().exec();

        } else
            return sameDiffFunctionInstances.get(functionName).exec();
    }",java,"public Pair<Map<SDVariable, DifferentialFunction>, List<DifferentialFunction>> exec(String functionName) {
        if (debugMode) {
            return sameDiffFunctionInstances.get(functionName).enableDebugMode().exec();

        } else
            return sameDiffFunctionInstances.get(functionName).exec();
    }","['public', 'Pair', '<', 'Map', '<', 'SDVariable', ',', 'DifferentialFunction', '>', ',', 'List', '<', 'DifferentialFunction', '>', '>', 'exec', '(', 'String', 'functionName', ')', '{', 'if', '(', 'debugMode', ')', '{', 'return', 'sameDiffFunctionInstances', '.', 'get', '(', 'functionName', ')', '.', 'enableDebugMode', '(', ')', '.', 'exec', '(', ')', ';', '}', 'else', 'return', 'sameDiffFunctionInstances', '.', 'get', '(', 'functionName', ')', '.', 'exec', '(', ')', ';', '}']","Exec a given function

@param functionName the opName of the function
to invoke
@return","['Exec', 'a', 'given', 'function']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/samediff/SameDiff.java#L5093-L5099,test
NanoHttpd/nanohttpd,core/src/main/java/org/nanohttpd/protocols/http/response/Response.java,Response.sendBody,"private void sendBody(OutputStream outputStream, long pending) throws IOException {
        long BUFFER_SIZE = 16 * 1024;
        byte[] buff = new byte[(int) BUFFER_SIZE];
        boolean sendEverything = pending == -1;
        while (pending > 0 || sendEverything) {
            long bytesToRead = sendEverything ? BUFFER_SIZE : Math.min(pending, BUFFER_SIZE);
            int read = this.data.read(buff, 0, (int) bytesToRead);
            if (read <= 0) {
                break;
            }
            try {
                outputStream.write(buff, 0, read);
            } catch (Exception e) {
                if(this.data != null) {
                    this.data.close();
                }
            }
            if (!sendEverything) {
                pending -= read;
            }
        }
    }",java,"private void sendBody(OutputStream outputStream, long pending) throws IOException {
        long BUFFER_SIZE = 16 * 1024;
        byte[] buff = new byte[(int) BUFFER_SIZE];
        boolean sendEverything = pending == -1;
        while (pending > 0 || sendEverything) {
            long bytesToRead = sendEverything ? BUFFER_SIZE : Math.min(pending, BUFFER_SIZE);
            int read = this.data.read(buff, 0, (int) bytesToRead);
            if (read <= 0) {
                break;
            }
            try {
                outputStream.write(buff, 0, read);
            } catch (Exception e) {
                if(this.data != null) {
                    this.data.close();
                }
            }
            if (!sendEverything) {
                pending -= read;
            }
        }
    }","['private', 'void', 'sendBody', '(', 'OutputStream', 'outputStream', ',', 'long', 'pending', ')', 'throws', 'IOException', '{', 'long', 'BUFFER_SIZE', '=', '16', '*', '1024', ';', 'byte', '[', ']', 'buff', '=', 'new', 'byte', '[', '(', 'int', ')', 'BUFFER_SIZE', ']', ';', 'boolean', 'sendEverything', '=', 'pending', '==', '-', '1', ';', 'while', '(', 'pending', '>', '0', '||', 'sendEverything', ')', '{', 'long', 'bytesToRead', '=', 'sendEverything', '?', 'BUFFER_SIZE', ':', 'Math', '.', 'min', '(', 'pending', ',', 'BUFFER_SIZE', ')', ';', 'int', 'read', '=', 'this', '.', 'data', '.', 'read', '(', 'buff', ',', '0', ',', '(', 'int', ')', 'bytesToRead', ')', ';', 'if', '(', 'read', '<=', '0', ')', '{', 'break', ';', '}', 'try', '{', 'outputStream', '.', 'write', '(', 'buff', ',', '0', ',', 'read', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'this', '.', 'data', '!=', 'null', ')', '{', 'this', '.', 'data', '.', 'close', '(', ')', ';', '}', '}', 'if', '(', '!', 'sendEverything', ')', '{', 'pending', '-=', 'read', ';', '}', '}', '}']","Sends the body to the specified OutputStream. The pending parameter
limits the maximum amounts of bytes sent unless it is -1, in which case
everything is sent.

@param outputStream
the OutputStream to send data to
@param pending
-1 to send everything, otherwise sets a max limit to the
number of bytes sent
@throws IOException
if something goes wrong while sending the data.","['Sends', 'the', 'body', 'to', 'the', 'specified', 'OutputStream', '.', 'The', 'pending', 'parameter', 'limits', 'the', 'maximum', 'amounts', 'of', 'bytes', 'sent', 'unless', 'it', 'is', '-', '1', 'in', 'which', 'case', 'everything', 'is', 'sent', '.']",b04a342a4bcd0ff44be65138acffc73a29381c72,https://github.com/NanoHttpd/nanohttpd/blob/b04a342a4bcd0ff44be65138acffc73a29381c72/core/src/main/java/org/nanohttpd/protocols/http/response/Response.java#L344-L365,test
turbomanage/storm-gen,storm-apt/api/src/main/java/com/turbomanage/storm/TableHelper.java,TableHelper.restore,"public void restore(SQLiteDatabase db, Context ctx, String suffix) {
		new CsvTableReader(this).importFromCsv(ctx, db, suffix);
	}",java,"public void restore(SQLiteDatabase db, Context ctx, String suffix) {
		new CsvTableReader(this).importFromCsv(ctx, db, suffix);
	}","['public', 'void', 'restore', '(', 'SQLiteDatabase', 'db', ',', 'Context', 'ctx', ',', 'String', 'suffix', ')', '{', 'new', 'CsvTableReader', '(', 'this', ')', '.', 'importFromCsv', '(', 'ctx', ',', 'db', ',', 'suffix', ')', ';', '}']","Restores a table from a text file.

@param db
@param ctx
@param suffix","['Restores', 'a', 'table', 'from', 'a', 'text', 'file', '.']",22caa69439548a074d035745215bce5aff55853d,https://github.com/turbomanage/storm-gen/blob/22caa69439548a074d035745215bce5aff55853d/storm-apt/api/src/main/java/com/turbomanage/storm/TableHelper.java#L231-L233,test
oblac/jodd,jodd-lagarto/src/main/java/jodd/lagarto/dom/Node.java,Node.insertAfter,"public void insertAfter(final Node newChild, final Node refChild) {
		int siblingIndex = refChild.getSiblingIndex() + 1;
		if (siblingIndex == refChild.parentNode.getChildNodesCount()) {
			refChild.parentNode.addChild(newChild);
		} else {
			refChild.parentNode.insertChild(newChild, siblingIndex);
		}
	}",java,"public void insertAfter(final Node newChild, final Node refChild) {
		int siblingIndex = refChild.getSiblingIndex() + 1;
		if (siblingIndex == refChild.parentNode.getChildNodesCount()) {
			refChild.parentNode.addChild(newChild);
		} else {
			refChild.parentNode.insertChild(newChild, siblingIndex);
		}
	}","['public', 'void', 'insertAfter', '(', 'final', 'Node', 'newChild', ',', 'final', 'Node', 'refChild', ')', '{', 'int', 'siblingIndex', '=', 'refChild', '.', 'getSiblingIndex', '(', ')', '+', '1', ';', 'if', '(', 'siblingIndex', '==', 'refChild', '.', 'parentNode', '.', 'getChildNodesCount', '(', ')', ')', '{', 'refChild', '.', 'parentNode', '.', 'addChild', '(', 'newChild', ')', ';', '}', 'else', '{', 'refChild', '.', 'parentNode', '.', 'insertChild', '(', 'newChild', ',', 'siblingIndex', ')', ';', '}', '}']",Inserts node after provided node.,"['Inserts', 'node', 'after', 'provided', 'node', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-lagarto/src/main/java/jodd/lagarto/dom/Node.java#L268-L275,test
RuedigerMoeller/fast-serialization,src/main/java/org/nustaq/serialization/simpleapi/OnHeapCoder.java,OnHeapCoder.toByteArray,"@Override
    public int toByteArray( Object o, byte arr[], int startIndex, int availableSize ) {
        out.resetForReUse();
        writeTarget.setBase(arr, startIndex, availableSize);
        try {
            out.writeObject(o);
        } catch (IOException e) {
            FSTUtil.<RuntimeException>rethrow(e);
        }
        int written = out.getWritten();
        return written;
    }",java,"@Override
    public int toByteArray( Object o, byte arr[], int startIndex, int availableSize ) {
        out.resetForReUse();
        writeTarget.setBase(arr, startIndex, availableSize);
        try {
            out.writeObject(o);
        } catch (IOException e) {
            FSTUtil.<RuntimeException>rethrow(e);
        }
        int written = out.getWritten();
        return written;
    }","['@', 'Override', 'public', 'int', 'toByteArray', '(', 'Object', 'o', ',', 'byte', 'arr', '[', ']', ',', 'int', 'startIndex', ',', 'int', 'availableSize', ')', '{', 'out', '.', 'resetForReUse', '(', ')', ';', 'writeTarget', '.', 'setBase', '(', 'arr', ',', 'startIndex', ',', 'availableSize', ')', ';', 'try', '{', 'out', '.', 'writeObject', '(', 'o', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'FSTUtil', '.', '<', 'RuntimeException', '>', 'rethrow', '(', 'e', ')', ';', '}', 'int', 'written', '=', 'out', '.', 'getWritten', '(', ')', ';', 'return', 'written', ';', '}']","throws FSTBufferTooSmallExcpetion in case object does not fit into given range
Zero Copy method

@param o
@param availableSize
@throws java.io.IOException
@return number of bytes written to the memory region","['throws', 'FSTBufferTooSmallExcpetion', 'in', 'case', 'object', 'does', 'not', 'fit', 'into', 'given', 'range', 'Zero', 'Copy', 'method']",59f8f800b79479d0b9c80901cf55903d9b027f26,https://github.com/RuedigerMoeller/fast-serialization/blob/59f8f800b79479d0b9c80901cf55903d9b027f26/src/main/java/org/nustaq/serialization/simpleapi/OnHeapCoder.java#L115-L126,test
js-lib-com/tiny-container,src/main/java/js/http/ContentType.java,ContentType.getParameter,"public String getParameter(String name) {
		Params.notNullOrEmpty(name, ""Parameter name"");
		return parameters.get(name);
	}",java,"public String getParameter(String name) {
		Params.notNullOrEmpty(name, ""Parameter name"");
		return parameters.get(name);
	}","['public', 'String', 'getParameter', '(', 'String', 'name', ')', '{', 'Params', '.', 'notNullOrEmpty', '(', 'name', ',', '""Parameter name""', ')', ';', 'return', 'parameters', '.', 'get', '(', 'name', ')', ';', '}']","Get parameter value or null if parameter does not exist.

@param name parameter name.
@return parameter value, possible null.
@throws IllegalArgumentException if <code>name</code> argument is null or empty.","['Get', 'parameter', 'value', 'or', 'null', 'if', 'parameter', 'does', 'not', 'exist', '.']",ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e,https://github.com/js-lib-com/tiny-container/blob/ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e/src/main/java/js/http/ContentType.java#L255-L258,test
walokra/markdown-page-generator-plugin,src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java,MdPageGeneratorMojo.preprocessMarkdownFiles,"@SuppressWarnings(""UnusedReturnValue"")
    private boolean preprocessMarkdownFiles(File inputDirectory) throws MojoExecutionException {
        getLog().debug(""Read files from: "" + inputDirectory);

        try {
            if (!inputDirectory.exists()) {
                getLog().info(""There is no input folder for the project. Skipping."");
                return false;
            }
            int baseDepth = StringUtils.countMatches(inputDirectory.getAbsolutePath(), File.separator);

            // Reading just the markdown dir and sub dirs if recursive option set
            List<File> markdownFiles = getFilesAsArray(FileUtils.iterateFiles(inputDirectory, getInputFileExtensions(), recursiveInput));

            for (File file : markdownFiles) {
                getLog().debug(""File getName() "" + file.getName());
                getLog().debug(""File getAbsolutePath() "" + file.getAbsolutePath());
                getLog().debug(""File getPath() "" + file.getPath());

                MarkdownDTO dto = new MarkdownDTO();
                dto.markdownFile = file;

                dto.folderDepth = StringUtils.countMatches(file.getAbsolutePath(), File.separator) - (baseDepth + 1);

                if (alwaysUseDefaultTitle) {
                    dto.title = defaultTitle;
                } else {
                    List<String> raw = FileUtils.readLines(file, getInputEncoding());
                    dto.title = getTitle(raw);
                }

                if (applyFiltering) {
                    for (String line : FileUtils.readLines(file, getInputEncoding())) {
                        if (isVariableLine(line)) {
                            String key = line.replaceAll(""(^\\{)|(=.*)"", """");
                            String value = line.replaceAll(""(^\\{(.*?)=)|(}$)"", """");
                            getLog().debug(""Substitute: '"" + key + ""' -> '"" + value + ""'"");
                            dto.substitutes.put(key, value);
                        }
                    }
                }

                String inputFileExtension = FilenameUtils.getExtension(file.getName());
                dto.htmlFile = new File(
                        recursiveInput
                                ? outputDirectory + File.separator + file.getParentFile().getPath().substring(inputDirectory.getPath().length()) + File.separator + file.getName().replaceAll(
                                ""."" + inputFileExtension,
                                "".html""
                        )
                                : outputDirectory + File.separator + file.getName().replaceAll(""."" + inputFileExtension, "".html"")
                );

                getLog().debug(""File htmlFile() "" + dto.htmlFile);

                markdownDTOs.add(dto);
            }
        } catch (IOException e) {
            throw new MojoExecutionException(""Unable to load file "" + e.getMessage(), e);
        }

        return true;
    }",java,"@SuppressWarnings(""UnusedReturnValue"")
    private boolean preprocessMarkdownFiles(File inputDirectory) throws MojoExecutionException {
        getLog().debug(""Read files from: "" + inputDirectory);

        try {
            if (!inputDirectory.exists()) {
                getLog().info(""There is no input folder for the project. Skipping."");
                return false;
            }
            int baseDepth = StringUtils.countMatches(inputDirectory.getAbsolutePath(), File.separator);

            // Reading just the markdown dir and sub dirs if recursive option set
            List<File> markdownFiles = getFilesAsArray(FileUtils.iterateFiles(inputDirectory, getInputFileExtensions(), recursiveInput));

            for (File file : markdownFiles) {
                getLog().debug(""File getName() "" + file.getName());
                getLog().debug(""File getAbsolutePath() "" + file.getAbsolutePath());
                getLog().debug(""File getPath() "" + file.getPath());

                MarkdownDTO dto = new MarkdownDTO();
                dto.markdownFile = file;

                dto.folderDepth = StringUtils.countMatches(file.getAbsolutePath(), File.separator) - (baseDepth + 1);

                if (alwaysUseDefaultTitle) {
                    dto.title = defaultTitle;
                } else {
                    List<String> raw = FileUtils.readLines(file, getInputEncoding());
                    dto.title = getTitle(raw);
                }

                if (applyFiltering) {
                    for (String line : FileUtils.readLines(file, getInputEncoding())) {
                        if (isVariableLine(line)) {
                            String key = line.replaceAll(""(^\\{)|(=.*)"", """");
                            String value = line.replaceAll(""(^\\{(.*?)=)|(}$)"", """");
                            getLog().debug(""Substitute: '"" + key + ""' -> '"" + value + ""'"");
                            dto.substitutes.put(key, value);
                        }
                    }
                }

                String inputFileExtension = FilenameUtils.getExtension(file.getName());
                dto.htmlFile = new File(
                        recursiveInput
                                ? outputDirectory + File.separator + file.getParentFile().getPath().substring(inputDirectory.getPath().length()) + File.separator + file.getName().replaceAll(
                                ""."" + inputFileExtension,
                                "".html""
                        )
                                : outputDirectory + File.separator + file.getName().replaceAll(""."" + inputFileExtension, "".html"")
                );

                getLog().debug(""File htmlFile() "" + dto.htmlFile);

                markdownDTOs.add(dto);
            }
        } catch (IOException e) {
            throw new MojoExecutionException(""Unable to load file "" + e.getMessage(), e);
        }

        return true;
    }","['@', 'SuppressWarnings', '(', '""UnusedReturnValue""', ')', 'private', 'boolean', 'preprocessMarkdownFiles', '(', 'File', 'inputDirectory', ')', 'throws', 'MojoExecutionException', '{', 'getLog', '(', ')', '.', 'debug', '(', '""Read files from: ""', '+', 'inputDirectory', ')', ';', 'try', '{', 'if', '(', '!', 'inputDirectory', '.', 'exists', '(', ')', ')', '{', 'getLog', '(', ')', '.', 'info', '(', '""There is no input folder for the project. Skipping.""', ')', ';', 'return', 'false', ';', '}', 'int', 'baseDepth', '=', 'StringUtils', '.', 'countMatches', '(', 'inputDirectory', '.', 'getAbsolutePath', '(', ')', ',', 'File', '.', 'separator', ')', ';', '// Reading just the markdown dir and sub dirs if recursive option set', 'List', '<', 'File', '>', 'markdownFiles', '=', 'getFilesAsArray', '(', 'FileUtils', '.', 'iterateFiles', '(', 'inputDirectory', ',', 'getInputFileExtensions', '(', ')', ',', 'recursiveInput', ')', ')', ';', 'for', '(', 'File', 'file', ':', 'markdownFiles', ')', '{', 'getLog', '(', ')', '.', 'debug', '(', '""File getName() ""', '+', 'file', '.', 'getName', '(', ')', ')', ';', 'getLog', '(', ')', '.', 'debug', '(', '""File getAbsolutePath() ""', '+', 'file', '.', 'getAbsolutePath', '(', ')', ')', ';', 'getLog', '(', ')', '.', 'debug', '(', '""File getPath() ""', '+', 'file', '.', 'getPath', '(', ')', ')', ';', 'MarkdownDTO', 'dto', '=', 'new', 'MarkdownDTO', '(', ')', ';', 'dto', '.', 'markdownFile', '=', 'file', ';', 'dto', '.', 'folderDepth', '=', 'StringUtils', '.', 'countMatches', '(', 'file', '.', 'getAbsolutePath', '(', ')', ',', 'File', '.', 'separator', ')', '-', '(', 'baseDepth', '+', '1', ')', ';', 'if', '(', 'alwaysUseDefaultTitle', ')', '{', 'dto', '.', 'title', '=', 'defaultTitle', ';', '}', 'else', '{', 'List', '<', 'String', '>', 'raw', '=', 'FileUtils', '.', 'readLines', '(', 'file', ',', 'getInputEncoding', '(', ')', ')', ';', 'dto', '.', 'title', '=', 'getTitle', '(', 'raw', ')', ';', '}', 'if', '(', 'applyFiltering', ')', '{', 'for', '(', 'String', 'line', ':', 'FileUtils', '.', 'readLines', '(', 'file', ',', 'getInputEncoding', '(', ')', ')', ')', '{', 'if', '(', 'isVariableLine', '(', 'line', ')', ')', '{', 'String', 'key', '=', 'line', '.', 'replaceAll', '(', '""(^\\\\{)|(=.*)""', ',', '""""', ')', ';', 'String', 'value', '=', 'line', '.', 'replaceAll', '(', '""(^\\\\{(.*?)=)|(}$)""', ',', '""""', ')', ';', 'getLog', '(', ')', '.', 'debug', '(', '""Substitute: \'""', '+', 'key', '+', '""\' -> \'""', '+', 'value', '+', '""\'""', ')', ';', 'dto', '.', 'substitutes', '.', 'put', '(', 'key', ',', 'value', ')', ';', '}', '}', '}', 'String', 'inputFileExtension', '=', 'FilenameUtils', '.', 'getExtension', '(', 'file', '.', 'getName', '(', ')', ')', ';', 'dto', '.', 'htmlFile', '=', 'new', 'File', '(', 'recursiveInput', '?', 'outputDirectory', '+', 'File', '.', 'separator', '+', 'file', '.', 'getParentFile', '(', ')', '.', 'getPath', '(', ')', '.', 'substring', '(', 'inputDirectory', '.', 'getPath', '(', ')', '.', 'length', '(', ')', ')', '+', 'File', '.', 'separator', '+', 'file', '.', 'getName', '(', ')', '.', 'replaceAll', '(', '"".""', '+', 'inputFileExtension', ',', '"".html""', ')', ':', 'outputDirectory', '+', 'File', '.', 'separator', '+', 'file', '.', 'getName', '(', ')', '.', 'replaceAll', '(', '"".""', '+', 'inputFileExtension', ',', '"".html""', ')', ')', ';', 'getLog', '(', ')', '.', 'debug', '(', '""File htmlFile() ""', '+', 'dto', '.', 'htmlFile', ')', ';', 'markdownDTOs', '.', 'add', '(', 'dto', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'MojoExecutionException', '(', '""Unable to load file ""', '+', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', 'return', 'true', ';', '}']","Read Markdown files from directory.

@return boolean
Is there files to read
@throws MojoExecutionException Unable to load file","['Read', 'Markdown', 'files', 'from', 'directory', '.']",2d5e0e6ca7a4509c9443d6d2fcf99dd9486bc5f7,https://github.com/walokra/markdown-page-generator-plugin/blob/2d5e0e6ca7a4509c9443d6d2fcf99dd9486bc5f7/src/main/java/com/ruleoftech/markdown/page/generator/plugin/MdPageGeneratorMojo.java#L343-L404,test
braintree/braintree_android,Braintree/src/main/java/com/braintreepayments/api/models/VenmoConfiguration.java,VenmoConfiguration.fromJson,"static VenmoConfiguration fromJson(JSONObject json) {
        if (json == null) {
            json = new JSONObject();
        }

        VenmoConfiguration venmoConfiguration = new VenmoConfiguration();
        venmoConfiguration.mAccessToken = Json.optString(json, ACCESS_TOKEN_KEY, """");
        venmoConfiguration.mEnvironment = Json.optString(json, ENVIRONMENT_KEY, """");
        venmoConfiguration.mMerchantId = Json.optString(json, MERCHANT_ID_KEY, """");

        return venmoConfiguration;
    }",java,"static VenmoConfiguration fromJson(JSONObject json) {
        if (json == null) {
            json = new JSONObject();
        }

        VenmoConfiguration venmoConfiguration = new VenmoConfiguration();
        venmoConfiguration.mAccessToken = Json.optString(json, ACCESS_TOKEN_KEY, """");
        venmoConfiguration.mEnvironment = Json.optString(json, ENVIRONMENT_KEY, """");
        venmoConfiguration.mMerchantId = Json.optString(json, MERCHANT_ID_KEY, """");

        return venmoConfiguration;
    }","['static', 'VenmoConfiguration', 'fromJson', '(', 'JSONObject', 'json', ')', '{', 'if', '(', 'json', '==', 'null', ')', '{', 'json', '=', 'new', 'JSONObject', '(', ')', ';', '}', 'VenmoConfiguration', 'venmoConfiguration', '=', 'new', 'VenmoConfiguration', '(', ')', ';', 'venmoConfiguration', '.', 'mAccessToken', '=', 'Json', '.', 'optString', '(', 'json', ',', 'ACCESS_TOKEN_KEY', ',', '""""', ')', ';', 'venmoConfiguration', '.', 'mEnvironment', '=', 'Json', '.', 'optString', '(', 'json', ',', 'ENVIRONMENT_KEY', ',', '""""', ')', ';', 'venmoConfiguration', '.', 'mMerchantId', '=', 'Json', '.', 'optString', '(', 'json', ',', 'MERCHANT_ID_KEY', ',', '""""', ')', ';', 'return', 'venmoConfiguration', ';', '}']","Parses the Venmo configuration from json.

@param json The json to parse.
@return A {@link VenmoConfiguration} instance with data that was able to be parsed from the
{@link JSONObject}.","['Parses', 'the', 'Venmo', 'configuration', 'from', 'json', '.']",07b32e6fad73f9fb8432971b0e79fc8c94b11873,https://github.com/braintree/braintree_android/blob/07b32e6fad73f9fb8432971b0e79fc8c94b11873/Braintree/src/main/java/com/braintreepayments/api/models/VenmoConfiguration.java#L33-L44,test
apache/parquet-mr,parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterBase.java,ColumnWriterBase.writeNull,"@Override
  public void writeNull(int repetitionLevel, int definitionLevel) {
    if (DEBUG)
      log(null, repetitionLevel, definitionLevel);
    repetitionLevel(repetitionLevel);
    definitionLevel(definitionLevel);
    statistics.incrementNumNulls();
    ++valueCount;
  }",java,"@Override
  public void writeNull(int repetitionLevel, int definitionLevel) {
    if (DEBUG)
      log(null, repetitionLevel, definitionLevel);
    repetitionLevel(repetitionLevel);
    definitionLevel(definitionLevel);
    statistics.incrementNumNulls();
    ++valueCount;
  }","['@', 'Override', 'public', 'void', 'writeNull', '(', 'int', 'repetitionLevel', ',', 'int', 'definitionLevel', ')', '{', 'if', '(', 'DEBUG', ')', 'log', '(', 'null', ',', 'repetitionLevel', ',', 'definitionLevel', ')', ';', 'repetitionLevel', '(', 'repetitionLevel', ')', ';', 'definitionLevel', '(', 'definitionLevel', ')', ';', 'statistics', '.', 'incrementNumNulls', '(', ')', ';', '++', 'valueCount', ';', '}']","Writes the current null value

@param repetitionLevel
@param definitionLevel","['Writes', 'the', 'current', 'null', 'value']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterBase.java#L99-L107,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/http/WroFilter.java,WroFilter.registerChangeListeners,"private void registerChangeListeners() {
    wroConfiguration.registerCacheUpdatePeriodChangeListener(new PropertyChangeListener() {
      public void propertyChange(final PropertyChangeEvent event) {
        // reset cache headers when any property is changed in order to avoid browser caching
        headersConfigurer = newResponseHeadersConfigurer();
        wroManagerFactory.onCachePeriodChanged(valueAsLong(event.getNewValue()));
      }
    });
    wroConfiguration.registerModelUpdatePeriodChangeListener(new PropertyChangeListener() {
      public void propertyChange(final PropertyChangeEvent event) {
        headersConfigurer = newResponseHeadersConfigurer();
        wroManagerFactory.onModelPeriodChanged(valueAsLong(event.getNewValue()));
      }
    });
    LOG.debug(""Cache & Model change listeners were registered"");
  }",java,"private void registerChangeListeners() {
    wroConfiguration.registerCacheUpdatePeriodChangeListener(new PropertyChangeListener() {
      public void propertyChange(final PropertyChangeEvent event) {
        // reset cache headers when any property is changed in order to avoid browser caching
        headersConfigurer = newResponseHeadersConfigurer();
        wroManagerFactory.onCachePeriodChanged(valueAsLong(event.getNewValue()));
      }
    });
    wroConfiguration.registerModelUpdatePeriodChangeListener(new PropertyChangeListener() {
      public void propertyChange(final PropertyChangeEvent event) {
        headersConfigurer = newResponseHeadersConfigurer();
        wroManagerFactory.onModelPeriodChanged(valueAsLong(event.getNewValue()));
      }
    });
    LOG.debug(""Cache & Model change listeners were registered"");
  }","['private', 'void', 'registerChangeListeners', '(', ')', '{', 'wroConfiguration', '.', 'registerCacheUpdatePeriodChangeListener', '(', 'new', 'PropertyChangeListener', '(', ')', '{', 'public', 'void', 'propertyChange', '(', 'final', 'PropertyChangeEvent', 'event', ')', '{', '// reset cache headers when any property is changed in order to avoid browser caching', 'headersConfigurer', '=', 'newResponseHeadersConfigurer', '(', ')', ';', 'wroManagerFactory', '.', 'onCachePeriodChanged', '(', 'valueAsLong', '(', 'event', '.', 'getNewValue', '(', ')', ')', ')', ';', '}', '}', ')', ';', 'wroConfiguration', '.', 'registerModelUpdatePeriodChangeListener', '(', 'new', 'PropertyChangeListener', '(', ')', '{', 'public', 'void', 'propertyChange', '(', 'final', 'PropertyChangeEvent', 'event', ')', '{', 'headersConfigurer', '=', 'newResponseHeadersConfigurer', '(', ')', ';', 'wroManagerFactory', '.', 'onModelPeriodChanged', '(', 'valueAsLong', '(', 'event', '.', 'getNewValue', '(', ')', ')', ')', ';', '}', '}', ')', ';', 'LOG', '.', 'debug', '(', '""Cache & Model change listeners were registered""', ')', ';', '}']",Register property change listeners.,"['Register', 'property', 'change', 'listeners', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/http/WroFilter.java#L237-L252,test
Unidata/thredds,dap4/d4cdm/src/main/java/dap4/cdm/nc2/CDMArrayStructure.java,CDMArrayStructure.getScalarStructure,"public StructureData
    getScalarStructure(int index, StructureMembers.Member m)
    {
        if(m.getDataType() != DataType.STRUCTURE)
            throw new ForbiddenConversionException(""Atomic field cannot be converted to Structure"");
        Array ca = memberArray(index, memberIndex(m));
        if(ca.getDataType() != DataType.STRUCTURE && ca.getDataType() != DataType.SEQUENCE)
            throw new ForbiddenConversionException(""Attempt to access non-structure member"");
        CDMArrayStructure as = (CDMArrayStructure) ca;
        return as.getStructureData(0);
    }",java,"public StructureData
    getScalarStructure(int index, StructureMembers.Member m)
    {
        if(m.getDataType() != DataType.STRUCTURE)
            throw new ForbiddenConversionException(""Atomic field cannot be converted to Structure"");
        Array ca = memberArray(index, memberIndex(m));
        if(ca.getDataType() != DataType.STRUCTURE && ca.getDataType() != DataType.SEQUENCE)
            throw new ForbiddenConversionException(""Attempt to access non-structure member"");
        CDMArrayStructure as = (CDMArrayStructure) ca;
        return as.getStructureData(0);
    }","['public', 'StructureData', 'getScalarStructure', '(', 'int', 'index', ',', 'StructureMembers', '.', 'Member', 'm', ')', '{', 'if', '(', 'm', '.', 'getDataType', '(', ')', '!=', 'DataType', '.', 'STRUCTURE', ')', 'throw', 'new', 'ForbiddenConversionException', '(', '""Atomic field cannot be converted to Structure""', ')', ';', 'Array', 'ca', '=', 'memberArray', '(', 'index', ',', 'memberIndex', '(', 'm', ')', ')', ';', 'if', '(', 'ca', '.', 'getDataType', '(', ')', '!=', 'DataType', '.', 'STRUCTURE', '&&', 'ca', '.', 'getDataType', '(', ')', '!=', 'DataType', '.', 'SEQUENCE', ')', 'throw', 'new', 'ForbiddenConversionException', '(', '""Attempt to access non-structure member""', ')', ';', 'CDMArrayStructure', 'as', '=', '(', 'CDMArrayStructure', ')', 'ca', ';', 'return', 'as', '.', 'getStructureData', '(', '0', ')', ';', '}']",Non-atomic cases,"['Non', '-', 'atomic', 'cases']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4cdm/src/main/java/dap4/cdm/nc2/CDMArrayStructure.java#L420-L430,test
wildfly/wildfly,webservices/server-integration/src/main/java/org/jboss/as/webservices/util/WebMetaDataHelper.java,WebMetaDataHelper.getContextParams,"public static List<ParamValueMetaData> getContextParams(final JBossWebMetaData jbossWebMD) {
        List<ParamValueMetaData> contextParamsMD = jbossWebMD.getContextParams();

        if (contextParamsMD == null) {
            contextParamsMD = new LinkedList<ParamValueMetaData>();
            jbossWebMD.setContextParams(contextParamsMD);
        }

        return contextParamsMD;
    }",java,"public static List<ParamValueMetaData> getContextParams(final JBossWebMetaData jbossWebMD) {
        List<ParamValueMetaData> contextParamsMD = jbossWebMD.getContextParams();

        if (contextParamsMD == null) {
            contextParamsMD = new LinkedList<ParamValueMetaData>();
            jbossWebMD.setContextParams(contextParamsMD);
        }

        return contextParamsMD;
    }","['public', 'static', 'List', '<', 'ParamValueMetaData', '>', 'getContextParams', '(', 'final', 'JBossWebMetaData', 'jbossWebMD', ')', '{', 'List', '<', 'ParamValueMetaData', '>', 'contextParamsMD', '=', 'jbossWebMD', '.', 'getContextParams', '(', ')', ';', 'if', '(', 'contextParamsMD', '==', 'null', ')', '{', 'contextParamsMD', '=', 'new', 'LinkedList', '<', 'ParamValueMetaData', '>', '(', ')', ';', 'jbossWebMD', '.', 'setContextParams', '(', 'contextParamsMD', ')', ';', '}', 'return', 'contextParamsMD', ';', '}']","Gets context parameters meta data from jboss web meta data. If not found it creates new context parameters meta data and
associates them with jboss web meta data.

@param jbossWebMD jboss web meta data
@return context parameters meta data","['Gets', 'context', 'parameters', 'meta', 'data', 'from', 'jboss', 'web', 'meta', 'data', '.', 'If', 'not', 'found', 'it', 'creates', 'new', 'context', 'parameters', 'meta', 'data', 'and', 'associates', 'them', 'with', 'jboss', 'web', 'meta', 'data', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/webservices/server-integration/src/main/java/org/jboss/as/webservices/util/WebMetaDataHelper.java#L201-L210,test
OpenEstate/OpenEstate-IO,OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Einzelhandel.java,Einzelhandel.setHandelTyp,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setHandelTyp(Einzelhandel.HandelTyp value) {
        this.handelTyp = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setHandelTyp(Einzelhandel.HandelTyp value) {
        this.handelTyp = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:54:50+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setHandelTyp', '(', 'Einzelhandel', '.', 'HandelTyp', 'value', ')', '{', 'this', '.', 'handelTyp', '=', 'value', ';', '}']","Sets the value of the handelTyp property.

@param value
allowed object is
{@link Einzelhandel.HandelTyp }","['Sets', 'the', 'value', 'of', 'the', 'handelTyp', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Einzelhandel.java#L63-L66,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/IospHelper.java,IospHelper.sectionArrayStructure,"static private ArrayStructure sectionArrayStructure(ParsedSectionSpec child, ArrayStructure innerData, StructureMembers.Member m) throws IOException, InvalidRangeException {
    StructureMembers membersw = new StructureMembers(m.getStructureMembers()); // no data arrays get propagated
    ArrayStructureW result = new ArrayStructureW(membersw, child.section.getShape());

    int count = 0;
    Section.Iterator iter = child.section.getIterator(child.v.getShape());
    while (iter.hasNext()) {
      int recno = iter.next(null);
      StructureData sd = innerData.getStructureData(recno);
      result.setStructureData(sd, count++);
    }

    return result;
  }",java,"static private ArrayStructure sectionArrayStructure(ParsedSectionSpec child, ArrayStructure innerData, StructureMembers.Member m) throws IOException, InvalidRangeException {
    StructureMembers membersw = new StructureMembers(m.getStructureMembers()); // no data arrays get propagated
    ArrayStructureW result = new ArrayStructureW(membersw, child.section.getShape());

    int count = 0;
    Section.Iterator iter = child.section.getIterator(child.v.getShape());
    while (iter.hasNext()) {
      int recno = iter.next(null);
      StructureData sd = innerData.getStructureData(recno);
      result.setStructureData(sd, count++);
    }

    return result;
  }","['static', 'private', 'ArrayStructure', 'sectionArrayStructure', '(', 'ParsedSectionSpec', 'child', ',', 'ArrayStructure', 'innerData', ',', 'StructureMembers', '.', 'Member', 'm', ')', 'throws', 'IOException', ',', 'InvalidRangeException', '{', 'StructureMembers', 'membersw', '=', 'new', 'StructureMembers', '(', 'm', '.', 'getStructureMembers', '(', ')', ')', ';', '// no data arrays get propagated\r', 'ArrayStructureW', 'result', '=', 'new', 'ArrayStructureW', '(', 'membersw', ',', 'child', '.', 'section', '.', 'getShape', '(', ')', ')', ';', 'int', 'count', '=', '0', ';', 'Section', '.', 'Iterator', 'iter', '=', 'child', '.', 'section', '.', 'getIterator', '(', 'child', '.', 'v', '.', 'getShape', '(', ')', ')', ';', 'while', '(', 'iter', '.', 'hasNext', '(', ')', ')', '{', 'int', 'recno', '=', 'iter', '.', 'next', '(', 'null', ')', ';', 'StructureData', 'sd', '=', 'innerData', '.', 'getStructureData', '(', 'recno', ')', ';', 'result', '.', 'setStructureData', '(', 'sd', ',', 'count', '++', ')', ';', '}', 'return', 'result', ';', '}']",LOOK could be used in createView ??,"['LOOK', 'could', 'be', 'used', 'in', 'createView', '??']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/IospHelper.java#L848-L861,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/RemoteToCorba.java,RemoteToCorba.getStateToBind,"public Object getStateToBind(Object orig, Name name, Context ctx,
                                 Hashtable<?, ?> env) throws NamingException {
        if (orig instanceof org.omg.CORBA.Object) {
            // Already a CORBA object, just use it
            return null;
        }

        if (orig instanceof Remote) {
            // Turn remote object into org.omg.CORBA.Object
            try {
                // Returns null if JRMP; let next factory try
                // CNCtx will eventually throw IllegalArgumentException if
                // no CORBA object gotten
                return
                        CorbaUtils.remoteToCorba((Remote) orig, ((CNCtx) ctx)._orb);
            } catch (ClassNotFoundException e) {
                // RMI-IIOP library not available
                throw IIOPLogger.ROOT_LOGGER.unavailableRMIPackages();
            }
        }
        return null; // pass and let next state factory try
    }",java,"public Object getStateToBind(Object orig, Name name, Context ctx,
                                 Hashtable<?, ?> env) throws NamingException {
        if (orig instanceof org.omg.CORBA.Object) {
            // Already a CORBA object, just use it
            return null;
        }

        if (orig instanceof Remote) {
            // Turn remote object into org.omg.CORBA.Object
            try {
                // Returns null if JRMP; let next factory try
                // CNCtx will eventually throw IllegalArgumentException if
                // no CORBA object gotten
                return
                        CorbaUtils.remoteToCorba((Remote) orig, ((CNCtx) ctx)._orb);
            } catch (ClassNotFoundException e) {
                // RMI-IIOP library not available
                throw IIOPLogger.ROOT_LOGGER.unavailableRMIPackages();
            }
        }
        return null; // pass and let next state factory try
    }","['public', 'Object', 'getStateToBind', '(', 'Object', 'orig', ',', 'Name', 'name', ',', 'Context', 'ctx', ',', 'Hashtable', '<', '?', ',', '?', '>', 'env', ')', 'throws', 'NamingException', '{', 'if', '(', 'orig', 'instanceof', 'org', '.', 'omg', '.', 'CORBA', '.', 'Object', ')', '{', '// Already a CORBA object, just use it', 'return', 'null', ';', '}', 'if', '(', 'orig', 'instanceof', 'Remote', ')', '{', '// Turn remote object into org.omg.CORBA.Object', 'try', '{', '// Returns null if JRMP; let next factory try', '// CNCtx will eventually throw IllegalArgumentException if', '// no CORBA object gotten', 'return', 'CorbaUtils', '.', 'remoteToCorba', '(', '(', 'Remote', ')', 'orig', ',', '(', '(', 'CNCtx', ')', 'ctx', ')', '.', '_orb', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', '// RMI-IIOP library not available', 'throw', 'IIOPLogger', '.', 'ROOT_LOGGER', '.', 'unavailableRMIPackages', '(', ')', ';', '}', '}', 'return', 'null', ';', '// pass and let next state factory try', '}']","Returns the CORBA object for a Remote object.
If input is not a Remote object, or if Remote object uses JRMP, return null.
If the RMI-IIOP library is not available, throw ConfigurationException.

@param orig The object to turn into a CORBA object. If not Remote,
or if is a JRMP stub or impl, return null.
@param name Ignored
@param ctx  The non-null CNCtx whose ORB to use.
@param env  Ignored
@return The CORBA object for <tt>orig</tt> or null.
@throws javax.naming.ConfigurationException If the CORBA object cannot be obtained
due to configuration problems, for instance, if RMI-IIOP not available.
@throws NamingException        If some other problem prevented a CORBA
object from being obtained from the Remote object.","['Returns', 'the', 'CORBA', 'object', 'for', 'a', 'Remote', 'object', '.', 'If', 'input', 'is', 'not', 'a', 'Remote', 'object', 'or', 'if', 'Remote', 'object', 'uses', 'JRMP', 'return', 'null', '.', 'If', 'the', 'RMI', '-', 'IIOP', 'library', 'is', 'not', 'available', 'throw', 'ConfigurationException', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/RemoteToCorba.java#L65-L86,test
Jasig/NotificationPortlet,notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/action/favorite/FavoriteAction.java,FavoriteAction.invoke,"@Override
    public void invoke(final ActionRequest req, final ActionResponse res) throws IOException {
        final NotificationEntry entry = getTarget();
        final String notificationId = entry.getId();
        final Set<String> favoriteNotices = this.getFavoriteNotices(req);
        if (favoriteNotices.contains(notificationId)) {
            favoriteNotices.remove(notificationId);
        } else {
            favoriteNotices.add(notificationId);
        }
        setFavoriteNotices(req, favoriteNotices);
    }",java,"@Override
    public void invoke(final ActionRequest req, final ActionResponse res) throws IOException {
        final NotificationEntry entry = getTarget();
        final String notificationId = entry.getId();
        final Set<String> favoriteNotices = this.getFavoriteNotices(req);
        if (favoriteNotices.contains(notificationId)) {
            favoriteNotices.remove(notificationId);
        } else {
            favoriteNotices.add(notificationId);
        }
        setFavoriteNotices(req, favoriteNotices);
    }","['@', 'Override', 'public', 'void', 'invoke', '(', 'final', 'ActionRequest', 'req', ',', 'final', 'ActionResponse', 'res', ')', 'throws', 'IOException', '{', 'final', 'NotificationEntry', 'entry', '=', 'getTarget', '(', ')', ';', 'final', 'String', 'notificationId', '=', 'entry', '.', 'getId', '(', ')', ';', 'final', 'Set', '<', 'String', '>', 'favoriteNotices', '=', 'this', '.', 'getFavoriteNotices', '(', 'req', ')', ';', 'if', '(', 'favoriteNotices', '.', 'contains', '(', 'notificationId', ')', ')', '{', 'favoriteNotices', '.', 'remove', '(', 'notificationId', ')', ';', '}', 'else', '{', 'favoriteNotices', '.', 'add', '(', 'notificationId', ')', ';', '}', 'setFavoriteNotices', '(', 'req', ',', 'favoriteNotices', ')', ';', '}']",Invoking a FavoriteAction toggles it.,"['Invoking', 'a', 'FavoriteAction', 'toggles', 'it', '.']",a74b87c145b66166a2cb6849d17ce9b0f2c98f3b,https://github.com/Jasig/NotificationPortlet/blob/a74b87c145b66166a2cb6849d17ce9b0f2c98f3b/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/action/favorite/FavoriteAction.java#L75-L86,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/CommandUtility.java,CommandUtility.createCellComment,"public static void createCellComment(final Cell cell,
			final String newComment,
			final Map<Cell, String> finalCommentMap) {
		// due to poi's bug. the comment must be set in sorted order ( row first
		// then column),
		// otherwise poi will mess up.
		// workaround solution is to save all comments into a map,
		// and output them together when download workbook.

		if (newComment != null) {
			finalCommentMap.put(cell, newComment);

		}
	}",java,"public static void createCellComment(final Cell cell,
			final String newComment,
			final Map<Cell, String> finalCommentMap) {
		// due to poi's bug. the comment must be set in sorted order ( row first
		// then column),
		// otherwise poi will mess up.
		// workaround solution is to save all comments into a map,
		// and output them together when download workbook.

		if (newComment != null) {
			finalCommentMap.put(cell, newComment);

		}
	}","['public', 'static', 'void', 'createCellComment', '(', 'final', 'Cell', 'cell', ',', 'final', 'String', 'newComment', ',', 'final', 'Map', '<', 'Cell', ',', 'String', '>', 'finalCommentMap', ')', '{', ""// due to poi's bug. the comment must be set in sorted order ( row first\r"", '// then column),\r', '// otherwise poi will mess up.\r', '// workaround solution is to save all comments into a map,\r', '// and output them together when download workbook.\r', 'if', '(', 'newComment', '!=', 'null', ')', '{', 'finalCommentMap', '.', 'put', '(', 'cell', ',', 'newComment', ')', ';', '}', '}']","Creates the cell comment.

@param cell
the cell
@param newComment
the new comment
@param finalCommentMap
the final comment map","['Creates', 'the', 'cell', 'comment', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/CommandUtility.java#L671-L684,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/compression/OCompressionFactory.java,OCompressionFactory.register,"public void register(final Class<? extends OCompression> compression) {
    try {
      final OCompression tempInstance = compression.newInstance();

      final String name = tempInstance.name();

      if (compressions.containsKey(name))
        throw new IllegalArgumentException(""Compression with name '"" + name + ""' was already registered"");

      if (compressionClasses.containsKey(tempInstance.name()))
        throw new IllegalArgumentException(""Compression with name '"" + name + ""' was already registered"");

      compressionClasses.put(name, compression);
    } catch (Exception e) {
      OLogManager.instance().error(this, ""Cannot register storage compression algorithm '%s'"", e, compression);
    }
  }",java,"public void register(final Class<? extends OCompression> compression) {
    try {
      final OCompression tempInstance = compression.newInstance();

      final String name = tempInstance.name();

      if (compressions.containsKey(name))
        throw new IllegalArgumentException(""Compression with name '"" + name + ""' was already registered"");

      if (compressionClasses.containsKey(tempInstance.name()))
        throw new IllegalArgumentException(""Compression with name '"" + name + ""' was already registered"");

      compressionClasses.put(name, compression);
    } catch (Exception e) {
      OLogManager.instance().error(this, ""Cannot register storage compression algorithm '%s'"", e, compression);
    }
  }","['public', 'void', 'register', '(', 'final', 'Class', '<', '?', 'extends', 'OCompression', '>', 'compression', ')', '{', 'try', '{', 'final', 'OCompression', 'tempInstance', '=', 'compression', '.', 'newInstance', '(', ')', ';', 'final', 'String', 'name', '=', 'tempInstance', '.', 'name', '(', ')', ';', 'if', '(', 'compressions', '.', 'containsKey', '(', 'name', ')', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""Compression with name \'""', '+', 'name', '+', '""\' was already registered""', ')', ';', 'if', '(', 'compressionClasses', '.', 'containsKey', '(', 'tempInstance', '.', 'name', '(', ')', ')', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""Compression with name \'""', '+', 'name', '+', '""\' was already registered""', ')', ';', 'compressionClasses', '.', 'put', '(', 'name', ',', 'compression', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'OLogManager', '.', 'instance', '(', ')', '.', 'error', '(', 'this', ',', '""Cannot register storage compression algorithm \'%s\'""', ',', 'e', ',', 'compression', ')', ';', '}', '}']","Registers a stateless implementations, the same instance will be shared on all the storages.

@param compression Compression class","['Registers', 'a', 'stateless', 'implementations', 'the', 'same', 'instance', 'will', 'be', 'shared', 'on', 'all', 'the', 'storages', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/compression/OCompressionFactory.java#L110-L126,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/GraphicalVertex.java,GraphicalVertex.setSize,"public void setSize(Dimension newSize) {
        if ( newSize != null ) {
            size.setSize( newSize );
            firePropertyChange( SIZE_PROP,
                                null,
                                size );
        }
    }",java,"public void setSize(Dimension newSize) {
        if ( newSize != null ) {
            size.setSize( newSize );
            firePropertyChange( SIZE_PROP,
                                null,
                                size );
        }
    }","['public', 'void', 'setSize', '(', 'Dimension', 'newSize', ')', '{', 'if', '(', 'newSize', '!=', 'null', ')', '{', 'size', '.', 'setSize', '(', 'newSize', ')', ';', 'firePropertyChange', '(', 'SIZE_PROP', ',', 'null', ',', 'size', ')', ';', '}', '}']","Set the Size of this vertex.
Will not update the size if newSize is null.
@param newSize a non-null Dimension instance or null","['Set', 'the', 'Size', 'of', 'this', 'vertex', '.', 'Will', 'not', 'update', 'the', 'size', 'if', 'newSize', 'is', 'null', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/GraphicalVertex.java#L257-L264,test
boonproject/boon,slumberdb/slumberdb-service-model/src/main/java/org/boon/slumberdb/stores/log/CollectorManager.java,CollectorManager.allocateBuffer,"public final ByteBuffer allocateBuffer(int size) {

        if (RECYCLE_BUFFER) {
            ByteBuffer spentBuffer = recycleChannel.poll();
            if (spentBuffer == null) {
                spentBuffer = ByteBuffer.allocateDirect(size);
            }
            spentBuffer.clear();
            return spentBuffer;
        } else {
            return ByteBuffer.allocateDirect(size);
        }
    }",java,"public final ByteBuffer allocateBuffer(int size) {

        if (RECYCLE_BUFFER) {
            ByteBuffer spentBuffer = recycleChannel.poll();
            if (spentBuffer == null) {
                spentBuffer = ByteBuffer.allocateDirect(size);
            }
            spentBuffer.clear();
            return spentBuffer;
        } else {
            return ByteBuffer.allocateDirect(size);
        }
    }","['public', 'final', 'ByteBuffer', 'allocateBuffer', '(', 'int', 'size', ')', '{', 'if', '(', 'RECYCLE_BUFFER', ')', '{', 'ByteBuffer', 'spentBuffer', '=', 'recycleChannel', '.', 'poll', '(', ')', ';', 'if', '(', 'spentBuffer', '==', 'null', ')', '{', 'spentBuffer', '=', 'ByteBuffer', '.', 'allocateDirect', '(', 'size', ')', ';', '}', 'spentBuffer', '.', 'clear', '(', ')', ';', 'return', 'spentBuffer', ';', '}', 'else', '{', 'return', 'ByteBuffer', '.', 'allocateDirect', '(', 'size', ')', ';', '}', '}']","This gets called from the http post handler  or event bus handler.

@param size the size of the buffer that you would like.
@return","['This', 'gets', 'called', 'from', 'the', 'http', 'post', 'handler', 'or', 'event', 'bus', 'handler', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/slumberdb/slumberdb-service-model/src/main/java/org/boon/slumberdb/stores/log/CollectorManager.java#L136-L148,test
playframework/playframework,core/play/src/main/java/play/mvc/Controller.java,Controller.session,"@Deprecated
  public static void session(String key, String value) {
    session().put(key, value);
  }",java,"@Deprecated
  public static void session(String key, String value) {
    session().put(key, value);
  }","['@', 'Deprecated', 'public', 'static', 'void', 'session', '(', 'String', 'key', ',', 'String', 'value', ')', '{', 'session', '(', ')', '.', 'put', '(', 'key', ',', 'value', ')', ';', '}']","Puts a new value into the current session.

@param key the key to set into the session
@param value the value to set for <code>key</code>
@deprecated Deprecated as of 2.7.0. Use {@link Result} instead.","['Puts', 'a', 'new', 'value', 'into', 'the', 'current', 'session', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/mvc/Controller.java#L135-L138,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/time/CalendarDate.java,CalendarDate.of,"public static CalendarDate of(Calendar cal, long msecs) {
    Chronology base = Calendar.getChronology(cal);
    DateTime dt = new DateTime(msecs, base) ;
    return new CalendarDate(cal, dt);
  }",java,"public static CalendarDate of(Calendar cal, long msecs) {
    Chronology base = Calendar.getChronology(cal);
    DateTime dt = new DateTime(msecs, base) ;
    return new CalendarDate(cal, dt);
  }","['public', 'static', 'CalendarDate', 'of', '(', 'Calendar', 'cal', ',', 'long', 'msecs', ')', '{', 'Chronology', 'base', '=', 'Calendar', '.', 'getChronology', '(', 'cal', ')', ';', 'DateTime', 'dt', '=', 'new', 'DateTime', '(', 'msecs', ',', 'base', ')', ';', 'return', 'new', 'CalendarDate', '(', 'cal', ',', 'dt', ')', ';', '}']","Create CalendarDate from msecs since epoch
Uses the given  Calendar.
@param cal calendar to use, or null for default
@param msecs milliseconds from 1970-01-01T00:00:00Z
@return CalendarDate in UTC time zone.","['Create', 'CalendarDate', 'from', 'msecs', 'since', 'epoch', 'Uses', 'the', 'given', 'Calendar', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/time/CalendarDate.java#L114-L118,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,FeatureStyleExtension.getTableStyles,"public Styles getTableStyles(String featureTable) {
        Styles styles = null;
        Long id = contentsId.getId(featureTable);
        if (id != null) {
            styles = getTableStyles(featureTable, id);
        }
        return styles;
    }",java,"public Styles getTableStyles(String featureTable) {
        Styles styles = null;
        Long id = contentsId.getId(featureTable);
        if (id != null) {
            styles = getTableStyles(featureTable, id);
        }
        return styles;
    }","['public', 'Styles', 'getTableStyles', '(', 'String', 'featureTable', ')', '{', 'Styles', 'styles', '=', 'null', ';', 'Long', 'id', '=', 'contentsId', '.', 'getId', '(', 'featureTable', ')', ';', 'if', '(', 'id', '!=', 'null', ')', '{', 'styles', '=', 'getTableStyles', '(', 'featureTable', ',', 'id', ')', ';', '}', 'return', 'styles', ';', '}']","Get the feature table default styles

@param featureTable feature table
@return table styles or null","['Get', 'the', 'feature', 'table', 'default', 'styles']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L191-L198,test
oblac/jodd,jodd-core/src/main/java/jodd/util/StringUtil.java,StringUtil.endsWithChar,"public static boolean endsWithChar(final String s, final char c) {
		if (s.length() == 0) {
			return false;
		}
		return s.charAt(s.length() - 1) == c;
	}",java,"public static boolean endsWithChar(final String s, final char c) {
		if (s.length() == 0) {
			return false;
		}
		return s.charAt(s.length() - 1) == c;
	}","['public', 'static', 'boolean', 'endsWithChar', '(', 'final', 'String', 's', ',', 'final', 'char', 'c', ')', '{', 'if', '(', 's', '.', 'length', '(', ')', '==', '0', ')', '{', 'return', 'false', ';', '}', 'return', 's', '.', 'charAt', '(', 's', '.', 'length', '(', ')', '-', '1', ')', '==', 'c', ';', '}']",Returns if string ends with provided character.,"['Returns', 'if', 'string', 'ends', 'with', 'provided', 'character', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/StringUtil.java#L1331-L1336,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java,ContainerAnalysis.attributeReadName,"protected String attributeReadName(String name) {
        if (name.startsWith(""get""))
            name = name.substring(3);
        else if (name.startsWith(""is""))
            name = name.substring(2);
        else
            throw IIOPLogger.ROOT_LOGGER.notAnAccessor(name);

        return name;
    }",java,"protected String attributeReadName(String name) {
        if (name.startsWith(""get""))
            name = name.substring(3);
        else if (name.startsWith(""is""))
            name = name.substring(2);
        else
            throw IIOPLogger.ROOT_LOGGER.notAnAccessor(name);

        return name;
    }","['protected', 'String', 'attributeReadName', '(', 'String', 'name', ')', '{', 'if', '(', 'name', '.', 'startsWith', '(', '""get""', ')', ')', 'name', '=', 'name', '.', 'substring', '(', '3', ')', ';', 'else', 'if', '(', 'name', '.', 'startsWith', '(', '""is""', ')', ')', 'name', '=', 'name', '.', 'substring', '(', '2', ')', ';', 'else', 'throw', 'IIOPLogger', '.', 'ROOT_LOGGER', '.', 'notAnAccessor', '(', 'name', ')', ';', 'return', 'name', ';', '}']","Convert an attribute read method name in Java format to
an attribute name in Java format.","['Convert', 'an', 'attribute', 'read', 'method', 'name', 'in', 'Java', 'format', 'to', 'an', 'attribute', 'name', 'in', 'Java', 'format', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ContainerAnalysis.java#L475-L484,test
fuinorg/srcgen4j-core,src/main/java/org/fuin/srcgen4j/core/emf/AbstractEMFParser.java,AbstractEMFParser.getFiles,"private File[] getFiles(final File dir) {
        final File[] files = dir.listFiles(new FileFilter() {
            @Override
            public boolean accept(final File file) {
                final boolean pointFile = file.getName().startsWith(""."");
                final String extension = FilenameUtils.getExtension(file.getName());
                return (!pointFile && fileExtensions.contains(extension)) || file.isDirectory();
            }
        });
        return files;
    }",java,"private File[] getFiles(final File dir) {
        final File[] files = dir.listFiles(new FileFilter() {
            @Override
            public boolean accept(final File file) {
                final boolean pointFile = file.getName().startsWith(""."");
                final String extension = FilenameUtils.getExtension(file.getName());
                return (!pointFile && fileExtensions.contains(extension)) || file.isDirectory();
            }
        });
        return files;
    }","['private', 'File', '[', ']', 'getFiles', '(', 'final', 'File', 'dir', ')', '{', 'final', 'File', '[', ']', 'files', '=', 'dir', '.', 'listFiles', '(', 'new', 'FileFilter', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'accept', '(', 'final', 'File', 'file', ')', '{', 'final', 'boolean', 'pointFile', '=', 'file', '.', 'getName', '(', ')', '.', 'startsWith', '(', '"".""', ')', ';', 'final', 'String', 'extension', '=', 'FilenameUtils', '.', 'getExtension', '(', 'file', '.', 'getName', '(', ')', ')', ';', 'return', '(', '!', 'pointFile', '&&', 'fileExtensions', '.', 'contains', '(', 'extension', ')', ')', '||', 'file', '.', 'isDirectory', '(', ')', ';', '}', '}', ')', ';', 'return', 'files', ';', '}']","Returns files that end with java and all directories. Files and directories started with a ""."" are excluded.

@param dir
Directory to scan.

@return List of files in the directory.","['Returns', 'files', 'that', 'end', 'with', 'java', 'and', 'all', 'directories', '.', 'Files', 'and', 'directories', 'started', 'with', 'a', '.', 'are', 'excluded', '.']",da2bc58370993e6294ddc4eb7e696fe255f979db,https://github.com/fuinorg/srcgen4j-core/blob/da2bc58370993e6294ddc4eb7e696fe255f979db/src/main/java/org/fuin/srcgen4j/core/emf/AbstractEMFParser.java#L185-L195,test
westnordost/countryboundaries,library/src/main/java/de/westnordost/countryboundaries/CountryBoundaries.java,CountryBoundaries.getContainingIds,"public Set<String> getContainingIds(
			double minLongitude, double minLatitude, double maxLongitude, double maxLatitude)
	{
		Set<String> ids = new HashSet<>();
		forCellsIn(minLongitude, minLatitude, maxLongitude, maxLatitude, cell ->
		{
			if(ids.isEmpty())
			{
				ids.addAll(cell.getContainingIds());
			}
			else
			{
				ids.retainAll(cell.getContainingIds());
			}
		});
		return ids;
	}",java,"public Set<String> getContainingIds(
			double minLongitude, double minLatitude, double maxLongitude, double maxLatitude)
	{
		Set<String> ids = new HashSet<>();
		forCellsIn(minLongitude, minLatitude, maxLongitude, maxLatitude, cell ->
		{
			if(ids.isEmpty())
			{
				ids.addAll(cell.getContainingIds());
			}
			else
			{
				ids.retainAll(cell.getContainingIds());
			}
		});
		return ids;
	}","['public', 'Set', '<', 'String', '>', 'getContainingIds', '(', 'double', 'minLongitude', ',', 'double', 'minLatitude', ',', 'double', 'maxLongitude', ',', 'double', 'maxLatitude', ')', '{', 'Set', '<', 'String', '>', 'ids', '=', 'new', 'HashSet', '<>', '(', ')', ';', 'forCellsIn', '(', 'minLongitude', ',', 'minLatitude', ',', 'maxLongitude', ',', 'maxLatitude', ',', 'cell', '->', '{', 'if', '(', 'ids', '.', 'isEmpty', '(', ')', ')', '{', 'ids', '.', 'addAll', '(', 'cell', '.', 'getContainingIds', '(', ')', ')', ';', '}', 'else', '{', 'ids', '.', 'retainAll', '(', 'cell', '.', 'getContainingIds', '(', ')', ')', ';', '}', '}', ')', ';', 'return', 'ids', ';', '}']","Identify which countries are guaranteed to contain the given bounding box fully.
The given bounding box may wrap around the 180th longitude, i.e minLongitude = 170 and
maxLongitude = -170.

@param minLongitude minimum longitude of geo position (-180...180)
@param minLatitude minimum latitude of geo position (-90...90)
@param maxLongitude maximum longitude of geo position (-180...180)
@param maxLatitude maximum latitude of geo position (-90...90)

@return the ids of the countries the given bounding box is guaranteed to be contained in,
not in any particular order","['Identify', 'which', 'countries', 'are', 'guaranteed', 'to', 'contain', 'the', 'given', 'bounding', 'box', 'fully', '.', 'The', 'given', 'bounding', 'box', 'may', 'wrap', 'around', 'the', '180th', 'longitude', 'i', '.', 'e', 'minLongitude', '=', '170', 'and', 'maxLongitude', '=', '-', '170', '.']",7b8f8db9345ce6b3853e32cb656e60606da26fd8,https://github.com/westnordost/countryboundaries/blob/7b8f8db9345ce6b3853e32cb656e60606da26fd8/library/src/main/java/de/westnordost/countryboundaries/CountryBoundaries.java#L74-L90,test
cglib/cglib,cglib/src/main/java/net/sf/cglib/core/EmitUtils.java,EmitUtils.process_array,"public static void process_array(CodeEmitter e, Type type, ProcessArrayCallback callback) {
        Type componentType = TypeUtils.getComponentType(type);
        Local array = e.make_local();
        Local loopvar = e.make_local(Type.INT_TYPE);
        Label loopbody = e.make_label();
        Label checkloop = e.make_label();
        e.store_local(array);
        e.push(0);
        e.store_local(loopvar);
        e.goTo(checkloop);
        
        e.mark(loopbody);
        e.load_local(array);
        e.load_local(loopvar);
        e.array_load(componentType);
        callback.processElement(componentType);
        e.iinc(loopvar, 1);
        
        e.mark(checkloop);
        e.load_local(loopvar);
        e.load_local(array);
        e.arraylength();
        e.if_icmp(e.LT, loopbody);
    }",java,"public static void process_array(CodeEmitter e, Type type, ProcessArrayCallback callback) {
        Type componentType = TypeUtils.getComponentType(type);
        Local array = e.make_local();
        Local loopvar = e.make_local(Type.INT_TYPE);
        Label loopbody = e.make_label();
        Label checkloop = e.make_label();
        e.store_local(array);
        e.push(0);
        e.store_local(loopvar);
        e.goTo(checkloop);
        
        e.mark(loopbody);
        e.load_local(array);
        e.load_local(loopvar);
        e.array_load(componentType);
        callback.processElement(componentType);
        e.iinc(loopvar, 1);
        
        e.mark(checkloop);
        e.load_local(loopvar);
        e.load_local(array);
        e.arraylength();
        e.if_icmp(e.LT, loopbody);
    }","['public', 'static', 'void', 'process_array', '(', 'CodeEmitter', 'e', ',', 'Type', 'type', ',', 'ProcessArrayCallback', 'callback', ')', '{', 'Type', 'componentType', '=', 'TypeUtils', '.', 'getComponentType', '(', 'type', ')', ';', 'Local', 'array', '=', 'e', '.', 'make_local', '(', ')', ';', 'Local', 'loopvar', '=', 'e', '.', 'make_local', '(', 'Type', '.', 'INT_TYPE', ')', ';', 'Label', 'loopbody', '=', 'e', '.', 'make_label', '(', ')', ';', 'Label', 'checkloop', '=', 'e', '.', 'make_label', '(', ')', ';', 'e', '.', 'store_local', '(', 'array', ')', ';', 'e', '.', 'push', '(', '0', ')', ';', 'e', '.', 'store_local', '(', 'loopvar', ')', ';', 'e', '.', 'goTo', '(', 'checkloop', ')', ';', 'e', '.', 'mark', '(', 'loopbody', ')', ';', 'e', '.', 'load_local', '(', 'array', ')', ';', 'e', '.', 'load_local', '(', 'loopvar', ')', ';', 'e', '.', 'array_load', '(', 'componentType', ')', ';', 'callback', '.', 'processElement', '(', 'componentType', ')', ';', 'e', '.', 'iinc', '(', 'loopvar', ',', '1', ')', ';', 'e', '.', 'mark', '(', 'checkloop', ')', ';', 'e', '.', 'load_local', '(', 'loopvar', ')', ';', 'e', '.', 'load_local', '(', 'array', ')', ';', 'e', '.', 'arraylength', '(', ')', ';', 'e', '.', 'if_icmp', '(', 'e', '.', 'LT', ',', 'loopbody', ')', ';', '}']","Process an array on the stack. Assumes the top item on the stack
is an array of the specified type. For each element in the array,
puts the element on the stack and triggers the callback.
@param type the type of the array (type.isArray() must be true)
@param callback the callback triggered for each element","['Process', 'an', 'array', 'on', 'the', 'stack', '.', 'Assumes', 'the', 'top', 'item', 'on', 'the', 'stack', 'is', 'an', 'array', 'of', 'the', 'specified', 'type', '.', 'For', 'each', 'element', 'in', 'the', 'array', 'puts', 'the', 'element', 'on', 'the', 'stack', 'and', 'triggers', 'the', 'callback', '.']",cd01695c11fd3c66641b295b9596f74cf13c548b,https://github.com/cglib/cglib/blob/cd01695c11fd3c66641b295b9596f74cf13c548b/cglib/src/main/java/net/sf/cglib/core/EmitUtils.java#L103-L126,test
oblac/jodd,jodd-log/src/main/java/jodd/log/impl/SimpleLogger.java,SimpleLogger.getCallerClass,"protected String getCallerClass() {
		Exception exception = new Exception();

		StackTraceElement[] stackTrace = exception.getStackTrace();

		for (StackTraceElement stackTraceElement : stackTrace) {
			String className = stackTraceElement.getClassName();
			if (className.equals(SimpleLoggerProvider.class.getName())) {
				continue;
			}
			if (className.equals(SimpleLogger.class.getName())) {
				continue;
			}
			if (className.equals(Logger.class.getName())) {
				continue;
			}
			return shortenClassName(className)
				+ '.' + stackTraceElement.getMethodName()
				+ ':' + stackTraceElement.getLineNumber();
		}
		return ""N/A"";
	}",java,"protected String getCallerClass() {
		Exception exception = new Exception();

		StackTraceElement[] stackTrace = exception.getStackTrace();

		for (StackTraceElement stackTraceElement : stackTrace) {
			String className = stackTraceElement.getClassName();
			if (className.equals(SimpleLoggerProvider.class.getName())) {
				continue;
			}
			if (className.equals(SimpleLogger.class.getName())) {
				continue;
			}
			if (className.equals(Logger.class.getName())) {
				continue;
			}
			return shortenClassName(className)
				+ '.' + stackTraceElement.getMethodName()
				+ ':' + stackTraceElement.getLineNumber();
		}
		return ""N/A"";
	}","['protected', 'String', 'getCallerClass', '(', ')', '{', 'Exception', 'exception', '=', 'new', 'Exception', '(', ')', ';', 'StackTraceElement', '[', ']', 'stackTrace', '=', 'exception', '.', 'getStackTrace', '(', ')', ';', 'for', '(', 'StackTraceElement', 'stackTraceElement', ':', 'stackTrace', ')', '{', 'String', 'className', '=', 'stackTraceElement', '.', 'getClassName', '(', ')', ';', 'if', '(', 'className', '.', 'equals', '(', 'SimpleLoggerProvider', '.', 'class', '.', 'getName', '(', ')', ')', ')', '{', 'continue', ';', '}', 'if', '(', 'className', '.', 'equals', '(', 'SimpleLogger', '.', 'class', '.', 'getName', '(', ')', ')', ')', '{', 'continue', ';', '}', 'if', '(', 'className', '.', 'equals', '(', 'Logger', '.', 'class', '.', 'getName', '(', ')', ')', ')', '{', 'continue', ';', '}', 'return', 'shortenClassName', '(', 'className', ')', '+', ""'"", ""'"", '+', 'stackTraceElement', '.', 'getMethodName', '(', ')', '+', ""'"", ""'"", '+', 'stackTraceElement', '.', 'getLineNumber', '(', ')', ';', '}', 'return', '""N/A""', ';', '}']",Returns called class.,"['Returns', 'called', 'class', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-log/src/main/java/jodd/log/impl/SimpleLogger.java#L157-L178,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/configuration/RowsMapping.java,RowsMapping.mergeMap,"public final void mergeMap(final RowsMapping addMap) {
		Map<Integer, List<SerialRow>> map = addMap.getRowsMap();
		for (Map.Entry<Integer, List<SerialRow>> entry : map.entrySet()) {
			List<SerialRow> entryRowList = entry.getValue();
			if ((entryRowList != null) && (!entryRowList.isEmpty())) {
				for (SerialRow row : entryRowList) {
					this.addRow(entry.getKey(), row.getRow());
				}
			}
		}
	}",java,"public final void mergeMap(final RowsMapping addMap) {
		Map<Integer, List<SerialRow>> map = addMap.getRowsMap();
		for (Map.Entry<Integer, List<SerialRow>> entry : map.entrySet()) {
			List<SerialRow> entryRowList = entry.getValue();
			if ((entryRowList != null) && (!entryRowList.isEmpty())) {
				for (SerialRow row : entryRowList) {
					this.addRow(entry.getKey(), row.getRow());
				}
			}
		}
	}","['public', 'final', 'void', 'mergeMap', '(', 'final', 'RowsMapping', 'addMap', ')', '{', 'Map', '<', 'Integer', ',', 'List', '<', 'SerialRow', '>', '>', 'map', '=', 'addMap', '.', 'getRowsMap', '(', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'Integer', ',', 'List', '<', 'SerialRow', '>', '>', 'entry', ':', 'map', '.', 'entrySet', '(', ')', ')', '{', 'List', '<', 'SerialRow', '>', 'entryRowList', '=', 'entry', '.', 'getValue', '(', ')', ';', 'if', '(', '(', 'entryRowList', '!=', 'null', ')', '&&', '(', '!', 'entryRowList', '.', 'isEmpty', '(', ')', ')', ')', '{', 'for', '(', 'SerialRow', 'row', ':', 'entryRowList', ')', '{', 'this', '.', 'addRow', '(', 'entry', '.', 'getKey', '(', ')', ',', 'row', '.', 'getRow', '(', ')', ')', ';', '}', '}', '}', '}']","Merge map.

@param addMap
the add map","['Merge', 'map', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/configuration/RowsMapping.java#L110-L120,test
liveontologies/elk-reasoner,elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java,AbstractReasonerState.isInconsistent,"public synchronized boolean isInconsistent() throws ElkException {

		restoreConsistencyCheck();

		if (!consistencyCheckingState.isInconsistent()) {
			incompleteness_.log(incompleteness_
					.getIncompletenessMonitorForClassification());
		}
		return consistencyCheckingState.isInconsistent();
	}",java,"public synchronized boolean isInconsistent() throws ElkException {

		restoreConsistencyCheck();

		if (!consistencyCheckingState.isInconsistent()) {
			incompleteness_.log(incompleteness_
					.getIncompletenessMonitorForClassification());
		}
		return consistencyCheckingState.isInconsistent();
	}","['public', 'synchronized', 'boolean', 'isInconsistent', '(', ')', 'throws', 'ElkException', '{', 'restoreConsistencyCheck', '(', ')', ';', 'if', '(', '!', 'consistencyCheckingState', '.', 'isInconsistent', '(', ')', ')', '{', 'incompleteness_', '.', 'log', '(', 'incompleteness_', '.', 'getIncompletenessMonitorForClassification', '(', ')', ')', ';', '}', 'return', 'consistencyCheckingState', '.', 'isInconsistent', '(', ')', ';', '}']","Check consistency of the current ontology, if this has not been done yet.

@return {@code true} if the ontology is inconsistent, that is,
unsatisfiable.
@throws ElkException
if the reasoning process cannot be completed successfully","['Check', 'consistency', 'of', 'the', 'current', 'ontology', 'if', 'this', 'has', 'not', 'been', 'done', 'yet', '.']",cfbe5279a57e0433d45c1676c7658ddb6e29b9eb,https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/stages/AbstractReasonerState.java#L486-L495,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/grid/GridVariable.java,GridVariable.findRecord,"public GridRecord findRecord(int ens, int time, int level) {
    if (hasEnsemble()) {
      return recordTracker[ens * (ntimes * nlevels) + (time * nlevels) + level];
    } else {
      return recordTracker[time * nlevels + level];
    }
  }",java,"public GridRecord findRecord(int ens, int time, int level) {
    if (hasEnsemble()) {
      return recordTracker[ens * (ntimes * nlevels) + (time * nlevels) + level];
    } else {
      return recordTracker[time * nlevels + level];
    }
  }","['public', 'GridRecord', 'findRecord', '(', 'int', 'ens', ',', 'int', 'time', ',', 'int', 'level', ')', '{', 'if', '(', 'hasEnsemble', '(', ')', ')', '{', 'return', 'recordTracker', '[', 'ens', '*', '(', 'ntimes', '*', 'nlevels', ')', '+', '(', 'time', '*', 'nlevels', ')', '+', 'level', ']', ';', '}', 'else', '{', 'return', 'recordTracker', '[', 'time', '*', 'nlevels', '+', 'level', ']', ';', '}', '}']","Find the grid record for the time and level indices
Canonical ordering is ens, time, level
@param ens   ensemble index
@param time  time index
@param level level index
@return the record or null","['Find', 'the', 'grid', 'record', 'for', 'the', 'time', 'and', 'level', 'indices', 'Canonical', 'ordering', 'is', 'ens', 'time', 'level']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/grid/GridVariable.java#L541-L547,test
oblac/jodd,jodd-http/src/main/java/jodd/http/HttpRequest.java,HttpRequest.post,"public static HttpRequest post(final String destination) {
		return new HttpRequest()
				.method(HttpMethod.POST)
				.set(destination);
	}",java,"public static HttpRequest post(final String destination) {
		return new HttpRequest()
				.method(HttpMethod.POST)
				.set(destination);
	}","['public', 'static', 'HttpRequest', 'post', '(', 'final', 'String', 'destination', ')', '{', 'return', 'new', 'HttpRequest', '(', ')', '.', 'method', '(', 'HttpMethod', '.', 'POST', ')', '.', 'set', '(', 'destination', ')', ';', '}']",Builds a POST request.,"['Builds', 'a', 'POST', 'request', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-http/src/main/java/jodd/http/HttpRequest.java#L235-L239,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/concurrent/BatchSynchQueueBase.java,BatchSynchQueueBase.poll,"public E poll(long timeout, TimeUnit unit) throws InterruptedException
    {
        ReentrantLock lock = this.lock;
        lock.lockInterruptibly();

        try
        {
            long nanos = unit.toNanos(timeout);

            do
            {
                if (count != 0)
                {
                    return extract(true, true).getElement();
                }

                try
                {
                    nanos = notEmpty.awaitNanos(nanos);
                }
                catch (InterruptedException ie)
                {
                    notEmpty.signal(); // propagate to non-interrupted thread
                    throw ie;
                }
            }
            while (nanos > 0);

            return null;
        }
        finally
        {
            lock.unlock();
        }
    }",java,"public E poll(long timeout, TimeUnit unit) throws InterruptedException
    {
        ReentrantLock lock = this.lock;
        lock.lockInterruptibly();

        try
        {
            long nanos = unit.toNanos(timeout);

            do
            {
                if (count != 0)
                {
                    return extract(true, true).getElement();
                }

                try
                {
                    nanos = notEmpty.awaitNanos(nanos);
                }
                catch (InterruptedException ie)
                {
                    notEmpty.signal(); // propagate to non-interrupted thread
                    throw ie;
                }
            }
            while (nanos > 0);

            return null;
        }
        finally
        {
            lock.unlock();
        }
    }","['public', 'E', 'poll', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'InterruptedException', '{', 'ReentrantLock', 'lock', '=', 'this', '.', 'lock', ';', 'lock', '.', 'lockInterruptibly', '(', ')', ';', 'try', '{', 'long', 'nanos', '=', 'unit', '.', 'toNanos', '(', 'timeout', ')', ';', 'do', '{', 'if', '(', 'count', '!=', '0', ')', '{', 'return', 'extract', '(', 'true', ',', 'true', ')', '.', 'getElement', '(', ')', ';', '}', 'try', '{', 'nanos', '=', 'notEmpty', '.', 'awaitNanos', '(', 'nanos', ')', ';', '}', 'catch', '(', 'InterruptedException', 'ie', ')', '{', 'notEmpty', '.', 'signal', '(', ')', ';', '// propagate to non-interrupted thread', 'throw', 'ie', ';', '}', '}', 'while', '(', 'nanos', '>', '0', ')', ';', 'return', 'null', ';', '}', 'finally', '{', 'lock', '.', 'unlock', '(', ')', ';', '}', '}']","Retrieves and removes the head of this queue, waiting if necessary up to the specified wait time if no elements
are present on this queue.

@param  timeout How long to wait before giving up, in units of <tt>unit</tt>.
@param  unit    A <tt>TimeUnit</tt> determining how to interpret the <tt>timeout</tt> parameter.

@return The head of this queue, or <tt>null</tt> if the specified waiting time elapses before an element is
present.

@throws InterruptedException If interrupted while waiting.","['Retrieves', 'and', 'removes', 'the', 'head', 'of', 'this', 'queue', 'waiting', 'if', 'necessary', 'up', 'to', 'the', 'specified', 'wait', 'time', 'if', 'no', 'elements', 'are', 'present', 'on', 'this', 'queue', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/concurrent/BatchSynchQueueBase.java#L268-L302,test
agentsoz/jill,jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java,IntentionSelector.shutdown,"public void shutdown() {
    synchronized (lock) {
      logger.debug(""Pool {} received shutdown message"", poolid);
      shutdown = true;
      hasMessage = true;
      lock.notify(); // NOPMD - ignore notifyall() warning
    }
  }",java,"public void shutdown() {
    synchronized (lock) {
      logger.debug(""Pool {} received shutdown message"", poolid);
      shutdown = true;
      hasMessage = true;
      lock.notify(); // NOPMD - ignore notifyall() warning
    }
  }","['public', 'void', 'shutdown', '(', ')', '{', 'synchronized', '(', 'lock', ')', '{', 'logger', '.', 'debug', '(', '""Pool {} received shutdown message""', ',', 'poolid', ')', ';', 'shutdown', '=', 'true', ';', 'hasMessage', '=', 'true', ';', 'lock', '.', 'notify', '(', ')', ';', '// NOPMD - ignore notifyall() warning', '}', '}']",Terminates this intention selector thread.,"['Terminates', 'this', 'intention', 'selector', 'thread', '.']",13126fc78350465b477386132465f84cad719426,https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java#L344-L351,test
Unidata/thredds,ui/src/main/java/thredds/ui/catalog/CatalogChooser.java,CatalogChooser.save,"public void save() {
    if (catListBox != null) catListBox.save();

    if (prefs != null) {
      if (fileChooser != null)
        fileChooser.save();
      if (catgenFileChooser != null)
        catgenFileChooser.save();
      prefs.putInt(HDIVIDER, split.getDividerLocation());
    }
  }",java,"public void save() {
    if (catListBox != null) catListBox.save();

    if (prefs != null) {
      if (fileChooser != null)
        fileChooser.save();
      if (catgenFileChooser != null)
        catgenFileChooser.save();
      prefs.putInt(HDIVIDER, split.getDividerLocation());
    }
  }","['public', 'void', 'save', '(', ')', '{', 'if', '(', 'catListBox', '!=', 'null', ')', 'catListBox', '.', 'save', '(', ')', ';', 'if', '(', 'prefs', '!=', 'null', ')', '{', 'if', '(', 'fileChooser', '!=', 'null', ')', 'fileChooser', '.', 'save', '(', ')', ';', 'if', '(', 'catgenFileChooser', '!=', 'null', ')', 'catgenFileChooser', '.', 'save', '(', ')', ';', 'prefs', '.', 'putInt', '(', 'HDIVIDER', ',', 'split', '.', 'getDividerLocation', '(', ')', ')', ';', '}', '}']",Save persistent state.,"['Save', 'persistent', 'state', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/thredds/ui/catalog/CatalogChooser.java#L311-L321,test
rupertlssmith/lojix,lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/TermWalkers.java,TermWalkers.positionalPostfixWalker,"public static TermWalker positionalPostfixWalker(PositionalTermVisitor visitor)
    {
        PositionalTermTraverser positionalTraverser = new PositionalTermTraverserImpl();
        positionalTraverser.setContextChangeVisitor(visitor);
        visitor.setPositionalTraverser(positionalTraverser);

        return new TermWalker(new PostFixSearch<Term, Term>(), positionalTraverser, visitor);
    }",java,"public static TermWalker positionalPostfixWalker(PositionalTermVisitor visitor)
    {
        PositionalTermTraverser positionalTraverser = new PositionalTermTraverserImpl();
        positionalTraverser.setContextChangeVisitor(visitor);
        visitor.setPositionalTraverser(positionalTraverser);

        return new TermWalker(new PostFixSearch<Term, Term>(), positionalTraverser, visitor);
    }","['public', 'static', 'TermWalker', 'positionalPostfixWalker', '(', 'PositionalTermVisitor', 'visitor', ')', '{', 'PositionalTermTraverser', 'positionalTraverser', '=', 'new', 'PositionalTermTraverserImpl', '(', ')', ';', 'positionalTraverser', '.', 'setContextChangeVisitor', '(', 'visitor', ')', ';', 'visitor', '.', 'setPositionalTraverser', '(', 'positionalTraverser', ')', ';', 'return', 'new', 'TermWalker', '(', 'new', 'PostFixSearch', '<', 'Term', ',', 'Term', '>', '(', ')', ',', 'positionalTraverser', ',', 'visitor', ')', ';', '}']","Provides a positional postfix walk over a term.

@param  visitor The visitor to apply to each term, and to notify of positional context changes.

@return A positional postfix first walk over a term.","['Provides', 'a', 'positional', 'postfix', 'walk', 'over', 'a', 'term', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/wam_prolog/src/main/com/thesett/aima/logic/fol/wam/TermWalkers.java#L122-L129,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/completion/CompletionUtil.java,CompletionUtil.stripLastWord,"public static String stripLastWord(String prefix) {
        if ( """".equals( prefix ) ) {
            return prefix;
        }
        if ( prefix.charAt( prefix.length() - 1 ) == ' ' ) {
            return """";
        } else {
            char[] c = prefix.toCharArray();
            int start = 0;
            for ( int i = c.length - 1; i >= 0; i-- ) {
                if ( Character.isWhitespace( c[i] ) || c[i] == '(' || c[i] == ':' || c[i] == ';' || c[i] == '=' || c[i] == '<' || c[i] == '>' || c[i] == '.' || c[i] == '{' || c[i] == '}' ) {
                    start = i + 1;
                    break;
                }
            }
            prefix = prefix.substring( start,
                                       prefix.length() );
            return prefix;
        }
    }",java,"public static String stripLastWord(String prefix) {
        if ( """".equals( prefix ) ) {
            return prefix;
        }
        if ( prefix.charAt( prefix.length() - 1 ) == ' ' ) {
            return """";
        } else {
            char[] c = prefix.toCharArray();
            int start = 0;
            for ( int i = c.length - 1; i >= 0; i-- ) {
                if ( Character.isWhitespace( c[i] ) || c[i] == '(' || c[i] == ':' || c[i] == ';' || c[i] == '=' || c[i] == '<' || c[i] == '>' || c[i] == '.' || c[i] == '{' || c[i] == '}' ) {
                    start = i + 1;
                    break;
                }
            }
            prefix = prefix.substring( start,
                                       prefix.length() );
            return prefix;
        }
    }","['public', 'static', 'String', 'stripLastWord', '(', 'String', 'prefix', ')', '{', 'if', '(', '""""', '.', 'equals', '(', 'prefix', ')', ')', '{', 'return', 'prefix', ';', '}', 'if', '(', 'prefix', '.', 'charAt', '(', 'prefix', '.', 'length', '(', ')', '-', '1', ')', '==', ""'"", ""'"", ')', '{', 'return', '""""', ';', '}', 'else', '{', 'char', '[', ']', 'c', '=', 'prefix', '.', 'toCharArray', '(', ')', ';', 'int', 'start', '=', '0', ';', 'for', '(', 'int', 'i', '=', 'c', '.', 'length', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'if', '(', 'Character', '.', 'isWhitespace', '(', 'c', '[', 'i', ']', ')', '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", '||', 'c', '[', 'i', ']', '==', ""'"", ""'"", ')', '{', 'start', '=', 'i', '+', '1', ';', 'break', ';', '}', '}', 'prefix', '=', 'prefix', '.', 'substring', '(', 'start', ',', 'prefix', '.', 'length', '(', ')', ')', ';', 'return', 'prefix', ';', '}', '}']","Looks behind, gets stuff after the white space. Basically ripping out the
last word.","['Looks', 'behind', 'gets', 'stuff', 'after', 'the', 'white', 'space', '.', 'Basically', 'ripping', 'out', 'the', 'last', 'word', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/completion/CompletionUtil.java#L50-L69,test
Unidata/thredds,bufr/src/main/java/ucar/nc2/iosp/bufr/BitCounterUncompressed.java,BitCounterUncompressed.makeNested,"public BitCounterUncompressed makeNested(DataDescriptor subKey, int n, int row, int replicationCountSize) {
    if (subCounters == null)
      subCounters = new HashMap<DataDescriptor, BitCounterUncompressed[]>(5); // assumes DataDescriptor.equals is ==

    BitCounterUncompressed[] subCounter = subCounters.get(subKey);
    if (subCounter == null) {
      subCounter = new BitCounterUncompressed[nrows]; // one for each row in this table
      subCounters.put(subKey, subCounter);
    }

    BitCounterUncompressed rc = new BitCounterUncompressed(subKey, n, replicationCountSize);
    subCounter[row] = rc;

    return rc;
  }",java,"public BitCounterUncompressed makeNested(DataDescriptor subKey, int n, int row, int replicationCountSize) {
    if (subCounters == null)
      subCounters = new HashMap<DataDescriptor, BitCounterUncompressed[]>(5); // assumes DataDescriptor.equals is ==

    BitCounterUncompressed[] subCounter = subCounters.get(subKey);
    if (subCounter == null) {
      subCounter = new BitCounterUncompressed[nrows]; // one for each row in this table
      subCounters.put(subKey, subCounter);
    }

    BitCounterUncompressed rc = new BitCounterUncompressed(subKey, n, replicationCountSize);
    subCounter[row] = rc;

    return rc;
  }","['public', 'BitCounterUncompressed', 'makeNested', '(', 'DataDescriptor', 'subKey', ',', 'int', 'n', ',', 'int', 'row', ',', 'int', 'replicationCountSize', ')', '{', 'if', '(', 'subCounters', '==', 'null', ')', 'subCounters', '=', 'new', 'HashMap', '<', 'DataDescriptor', ',', 'BitCounterUncompressed', '[', ']', '>', '(', '5', ')', ';', '// assumes DataDescriptor.equals is ==\r', 'BitCounterUncompressed', '[', ']', 'subCounter', '=', 'subCounters', '.', 'get', '(', 'subKey', ')', ';', 'if', '(', 'subCounter', '==', 'null', ')', '{', 'subCounter', '=', 'new', 'BitCounterUncompressed', '[', 'nrows', ']', ';', '// one for each row in this table\r', 'subCounters', '.', 'put', '(', 'subKey', ',', 'subCounter', ')', ';', '}', 'BitCounterUncompressed', 'rc', '=', 'new', 'BitCounterUncompressed', '(', 'subKey', ',', 'n', ',', 'replicationCountSize', ')', ';', 'subCounter', '[', 'row', ']', '=', 'rc', ';', 'return', 'rc', ';', '}']","Track nested Tables.
@param subKey  subKey is a structure or a sequence - so itself has subKeys
@param n numbers of rows in the nested table
@param row which row in the parent Table this belongs to
@param replicationCountSize number of bits taken up by the count (non-zero for sequences)
@return  nested ReplicationCounter","['Track', 'nested', 'Tables', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/bufr/src/main/java/ucar/nc2/iosp/bufr/BitCounterUncompressed.java#L66-L80,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java,ActionRequest.createExecutionArray,"protected ActionWrapper[] createExecutionArray() {
		int totalInterceptors = (this.actionRuntime.getInterceptors() != null ? this.actionRuntime.getInterceptors().length : 0);
		int totalFilters = (this.actionRuntime.getFilters() != null ? this.actionRuntime.getFilters().length : 0);

		ActionWrapper[] executionArray = new ActionWrapper[totalFilters + 1 + totalInterceptors + 1];

		// filters

		int index = 0;

		if (totalFilters > 0) {
			System.arraycopy(actionRuntime.getFilters(), 0, executionArray, index, totalFilters);
			index += totalFilters;
		}

		// result is executed AFTER the action AND interceptors

		executionArray[index++] = actionRequest -> {
			Object actionResult = actionRequest.invoke();

			ActionRequest.this.madvocController.render(ActionRequest.this, actionResult);

			return actionResult;
		};

		// interceptors

		if (totalInterceptors > 0) {
			System.arraycopy(actionRuntime.getInterceptors(), 0, executionArray, index, totalInterceptors);
			index += totalInterceptors;
		}

		// action

		executionArray[index] = actionRequest -> {
			actionResult = invokeActionMethod();
			return actionResult;
		};

		return executionArray;
	}",java,"protected ActionWrapper[] createExecutionArray() {
		int totalInterceptors = (this.actionRuntime.getInterceptors() != null ? this.actionRuntime.getInterceptors().length : 0);
		int totalFilters = (this.actionRuntime.getFilters() != null ? this.actionRuntime.getFilters().length : 0);

		ActionWrapper[] executionArray = new ActionWrapper[totalFilters + 1 + totalInterceptors + 1];

		// filters

		int index = 0;

		if (totalFilters > 0) {
			System.arraycopy(actionRuntime.getFilters(), 0, executionArray, index, totalFilters);
			index += totalFilters;
		}

		// result is executed AFTER the action AND interceptors

		executionArray[index++] = actionRequest -> {
			Object actionResult = actionRequest.invoke();

			ActionRequest.this.madvocController.render(ActionRequest.this, actionResult);

			return actionResult;
		};

		// interceptors

		if (totalInterceptors > 0) {
			System.arraycopy(actionRuntime.getInterceptors(), 0, executionArray, index, totalInterceptors);
			index += totalInterceptors;
		}

		// action

		executionArray[index] = actionRequest -> {
			actionResult = invokeActionMethod();
			return actionResult;
		};

		return executionArray;
	}","['protected', 'ActionWrapper', '[', ']', 'createExecutionArray', '(', ')', '{', 'int', 'totalInterceptors', '=', '(', 'this', '.', 'actionRuntime', '.', 'getInterceptors', '(', ')', '!=', 'null', '?', 'this', '.', 'actionRuntime', '.', 'getInterceptors', '(', ')', '.', 'length', ':', '0', ')', ';', 'int', 'totalFilters', '=', '(', 'this', '.', 'actionRuntime', '.', 'getFilters', '(', ')', '!=', 'null', '?', 'this', '.', 'actionRuntime', '.', 'getFilters', '(', ')', '.', 'length', ':', '0', ')', ';', 'ActionWrapper', '[', ']', 'executionArray', '=', 'new', 'ActionWrapper', '[', 'totalFilters', '+', '1', '+', 'totalInterceptors', '+', '1', ']', ';', '// filters', 'int', 'index', '=', '0', ';', 'if', '(', 'totalFilters', '>', '0', ')', '{', 'System', '.', 'arraycopy', '(', 'actionRuntime', '.', 'getFilters', '(', ')', ',', '0', ',', 'executionArray', ',', 'index', ',', 'totalFilters', ')', ';', 'index', '+=', 'totalFilters', ';', '}', '// result is executed AFTER the action AND interceptors', 'executionArray', '[', 'index', '++', ']', '=', 'actionRequest', '->', '{', 'Object', 'actionResult', '=', 'actionRequest', '.', 'invoke', '(', ')', ';', 'ActionRequest', '.', 'this', '.', 'madvocController', '.', 'render', '(', 'ActionRequest', '.', 'this', ',', 'actionResult', ')', ';', 'return', 'actionResult', ';', '}', ';', '// interceptors', 'if', '(', 'totalInterceptors', '>', '0', ')', '{', 'System', '.', 'arraycopy', '(', 'actionRuntime', '.', 'getInterceptors', '(', ')', ',', '0', ',', 'executionArray', ',', 'index', ',', 'totalInterceptors', ')', ';', 'index', '+=', 'totalInterceptors', ';', '}', '// action', 'executionArray', '[', 'index', ']', '=', 'actionRequest', '->', '{', 'actionResult', '=', 'invokeActionMethod', '(', ')', ';', 'return', 'actionResult', ';', '}', ';', 'return', 'executionArray', ';', '}']","Creates execution array that will invoke all filters, actions and results
in correct order.","['Creates', 'execution', 'array', 'that', 'will', 'invoke', 'all', 'filters', 'actions', 'and', 'results', 'in', 'correct', 'order', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/ActionRequest.java#L191-L231,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/db/record/ridbag/ORidBag.java,ORidBag.tryMerge,"public boolean tryMerge(final ORidBag otherValue, boolean iMergeSingleItemsOfMultiValueFields) {
    if (!isEmbedded() && !otherValue.isEmbedded()) {
      final OSBTreeRidBag thisTree = (OSBTreeRidBag) delegate;
      final OSBTreeRidBag otherTree = (OSBTreeRidBag) otherValue.delegate;
      if (thisTree.getCollectionPointer().equals(otherTree.getCollectionPointer())) {

        thisTree.mergeChanges(otherTree);

        uuid = otherValue.uuid;

        return true;
      }
    } else if (iMergeSingleItemsOfMultiValueFields) {
      final Iterator<OIdentifiable> iter = otherValue.rawIterator();
      while (iter.hasNext()) {
        final OIdentifiable value = iter.next();
        if (value != null) {
          final Iterator<OIdentifiable> localIter = rawIterator();
          boolean found = false;
          while (localIter.hasNext()) {
            final OIdentifiable v = localIter.next();
            if (value.equals(v)) {
              found = true;
              break;
            }
          }
          if (!found)
            add(value);
        }
      }
      return true;
    }
    return false;
  }",java,"public boolean tryMerge(final ORidBag otherValue, boolean iMergeSingleItemsOfMultiValueFields) {
    if (!isEmbedded() && !otherValue.isEmbedded()) {
      final OSBTreeRidBag thisTree = (OSBTreeRidBag) delegate;
      final OSBTreeRidBag otherTree = (OSBTreeRidBag) otherValue.delegate;
      if (thisTree.getCollectionPointer().equals(otherTree.getCollectionPointer())) {

        thisTree.mergeChanges(otherTree);

        uuid = otherValue.uuid;

        return true;
      }
    } else if (iMergeSingleItemsOfMultiValueFields) {
      final Iterator<OIdentifiable> iter = otherValue.rawIterator();
      while (iter.hasNext()) {
        final OIdentifiable value = iter.next();
        if (value != null) {
          final Iterator<OIdentifiable> localIter = rawIterator();
          boolean found = false;
          while (localIter.hasNext()) {
            final OIdentifiable v = localIter.next();
            if (value.equals(v)) {
              found = true;
              break;
            }
          }
          if (!found)
            add(value);
        }
      }
      return true;
    }
    return false;
  }","['public', 'boolean', 'tryMerge', '(', 'final', 'ORidBag', 'otherValue', ',', 'boolean', 'iMergeSingleItemsOfMultiValueFields', ')', '{', 'if', '(', '!', 'isEmbedded', '(', ')', '&&', '!', 'otherValue', '.', 'isEmbedded', '(', ')', ')', '{', 'final', 'OSBTreeRidBag', 'thisTree', '=', '(', 'OSBTreeRidBag', ')', 'delegate', ';', 'final', 'OSBTreeRidBag', 'otherTree', '=', '(', 'OSBTreeRidBag', ')', 'otherValue', '.', 'delegate', ';', 'if', '(', 'thisTree', '.', 'getCollectionPointer', '(', ')', '.', 'equals', '(', 'otherTree', '.', 'getCollectionPointer', '(', ')', ')', ')', '{', 'thisTree', '.', 'mergeChanges', '(', 'otherTree', ')', ';', 'uuid', '=', 'otherValue', '.', 'uuid', ';', 'return', 'true', ';', '}', '}', 'else', 'if', '(', 'iMergeSingleItemsOfMultiValueFields', ')', '{', 'final', 'Iterator', '<', 'OIdentifiable', '>', 'iter', '=', 'otherValue', '.', 'rawIterator', '(', ')', ';', 'while', '(', 'iter', '.', 'hasNext', '(', ')', ')', '{', 'final', 'OIdentifiable', 'value', '=', 'iter', '.', 'next', '(', ')', ';', 'if', '(', 'value', '!=', 'null', ')', '{', 'final', 'Iterator', '<', 'OIdentifiable', '>', 'localIter', '=', 'rawIterator', '(', ')', ';', 'boolean', 'found', '=', 'false', ';', 'while', '(', 'localIter', '.', 'hasNext', '(', ')', ')', '{', 'final', 'OIdentifiable', 'v', '=', 'localIter', '.', 'next', '(', ')', ';', 'if', '(', 'value', '.', 'equals', '(', 'v', ')', ')', '{', 'found', '=', 'true', ';', 'break', ';', '}', '}', 'if', '(', '!', 'found', ')', 'add', '(', 'value', ')', ';', '}', '}', 'return', 'true', ';', '}', 'return', 'false', ';', '}']",IMPORTANT! Only for internal usage.,"['IMPORTANT!', 'Only', 'for', 'internal', 'usage', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/record/ridbag/ORidBag.java#L424-L457,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/geoloc/projection/Sinusoidal.java,Sinusoidal.projToLatLon,"@Override
    public LatLonPoint projToLatLon(ProjectionPoint world, LatLonPointImpl result) {
        double fromX = world.getX() - falseEasting;
        double fromY = world.getY() - falseNorthing;

        double toLat_r = fromY / earthRadius;
        double toLon_r;

        if (Misc.nearlyEquals(Math.abs(toLat_r), PI_OVER_2, 1e-10)) {
            toLat_r = toLat_r < 0 ? -PI_OVER_2 : +PI_OVER_2;
            toLon_r = Math.toRadians(centMeridian);  // if lat == +- pi/2, set lon = centMeridian (Snyder 248)
        } else if (Math.abs(toLat_r) < PI_OVER_2) {
            toLon_r = Math.toRadians(centMeridian) + fromX / (earthRadius * Math.cos(toLat_r));
        } else {
            return INVALID;  // Projection point is off the map.
        }

        if (Misc.nearlyEquals(Math.abs(toLon_r), PI, 1e-10)) {
            toLon_r = toLon_r < 0 ? -PI : +PI;
        } else if (Math.abs(toLon_r) > PI) {
            return INVALID;  // Projection point is off the map.
        }

        result.setLatitude(Math.toDegrees(toLat_r));
        result.setLongitude(Math.toDegrees(toLon_r));
        return result;
    }",java,"@Override
    public LatLonPoint projToLatLon(ProjectionPoint world, LatLonPointImpl result) {
        double fromX = world.getX() - falseEasting;
        double fromY = world.getY() - falseNorthing;

        double toLat_r = fromY / earthRadius;
        double toLon_r;

        if (Misc.nearlyEquals(Math.abs(toLat_r), PI_OVER_2, 1e-10)) {
            toLat_r = toLat_r < 0 ? -PI_OVER_2 : +PI_OVER_2;
            toLon_r = Math.toRadians(centMeridian);  // if lat == +- pi/2, set lon = centMeridian (Snyder 248)
        } else if (Math.abs(toLat_r) < PI_OVER_2) {
            toLon_r = Math.toRadians(centMeridian) + fromX / (earthRadius * Math.cos(toLat_r));
        } else {
            return INVALID;  // Projection point is off the map.
        }

        if (Misc.nearlyEquals(Math.abs(toLon_r), PI, 1e-10)) {
            toLon_r = toLon_r < 0 ? -PI : +PI;
        } else if (Math.abs(toLon_r) > PI) {
            return INVALID;  // Projection point is off the map.
        }

        result.setLatitude(Math.toDegrees(toLat_r));
        result.setLongitude(Math.toDegrees(toLon_r));
        return result;
    }","['@', 'Override', 'public', 'LatLonPoint', 'projToLatLon', '(', 'ProjectionPoint', 'world', ',', 'LatLonPointImpl', 'result', ')', '{', 'double', 'fromX', '=', 'world', '.', 'getX', '(', ')', '-', 'falseEasting', ';', 'double', 'fromY', '=', 'world', '.', 'getY', '(', ')', '-', 'falseNorthing', ';', 'double', 'toLat_r', '=', 'fromY', '/', 'earthRadius', ';', 'double', 'toLon_r', ';', 'if', '(', 'Misc', '.', 'nearlyEquals', '(', 'Math', '.', 'abs', '(', 'toLat_r', ')', ',', 'PI_OVER_2', ',', '1e-10', ')', ')', '{', 'toLat_r', '=', 'toLat_r', '<', '0', '?', '-', 'PI_OVER_2', ':', '+', 'PI_OVER_2', ';', 'toLon_r', '=', 'Math', '.', 'toRadians', '(', 'centMeridian', ')', ';', '// if lat == +- pi/2, set lon = centMeridian (Snyder 248)\r', '}', 'else', 'if', '(', 'Math', '.', 'abs', '(', 'toLat_r', ')', '<', 'PI_OVER_2', ')', '{', 'toLon_r', '=', 'Math', '.', 'toRadians', '(', 'centMeridian', ')', '+', 'fromX', '/', '(', 'earthRadius', '*', 'Math', '.', 'cos', '(', 'toLat_r', ')', ')', ';', '}', 'else', '{', 'return', 'INVALID', ';', '// Projection point is off the map.\r', '}', 'if', '(', 'Misc', '.', 'nearlyEquals', '(', 'Math', '.', 'abs', '(', 'toLon_r', ')', ',', 'PI', ',', '1e-10', ')', ')', '{', 'toLon_r', '=', 'toLon_r', '<', '0', '?', '-', 'PI', ':', '+', 'PI', ';', '}', 'else', 'if', '(', 'Math', '.', 'abs', '(', 'toLon_r', ')', '>', 'PI', ')', '{', 'return', 'INVALID', ';', '// Projection point is off the map.\r', '}', 'result', '.', 'setLatitude', '(', 'Math', '.', 'toDegrees', '(', 'toLat_r', ')', ')', ';', 'result', '.', 'setLongitude', '(', 'Math', '.', 'toDegrees', '(', 'toLon_r', ')', ')', ';', 'return', 'result', ';', '}']","Convert projection coordinates to a LatLonPoint

@param world  convert from these projection coordinates
@param result the object to write to
@return LatLonPoint the lat/lon coordinates","['Convert', 'projection', 'coordinates', 'to', 'a', 'LatLonPoint']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/geoloc/projection/Sinusoidal.java#L253-L279,test
hawkular/hawkular-metrics,core/metrics-model/src/main/java/org/hawkular/metrics/model/BucketPoint.java,BucketPoint.toList,"public static <T extends BucketPoint> List<T> toList(Map<Long, T> pointMap, Buckets buckets, BiFunction<Long,
            Long, T> emptyBucketFactory) {
        List<T> result = new ArrayList<>(buckets.getCount());
        for (int index = 0; index < buckets.getCount(); index++) {
            long from = buckets.getBucketStart(index);
            T bucketPoint = pointMap.get(from);
            if (bucketPoint == null) {
                long to = from + buckets.getStep();
                bucketPoint = emptyBucketFactory.apply(from, to);
            }
            result.add(bucketPoint);
        }
        return result;
    }",java,"public static <T extends BucketPoint> List<T> toList(Map<Long, T> pointMap, Buckets buckets, BiFunction<Long,
            Long, T> emptyBucketFactory) {
        List<T> result = new ArrayList<>(buckets.getCount());
        for (int index = 0; index < buckets.getCount(); index++) {
            long from = buckets.getBucketStart(index);
            T bucketPoint = pointMap.get(from);
            if (bucketPoint == null) {
                long to = from + buckets.getStep();
                bucketPoint = emptyBucketFactory.apply(from, to);
            }
            result.add(bucketPoint);
        }
        return result;
    }","['public', 'static', '<', 'T', 'extends', 'BucketPoint', '>', 'List', '<', 'T', '>', 'toList', '(', 'Map', '<', 'Long', ',', 'T', '>', 'pointMap', ',', 'Buckets', 'buckets', ',', 'BiFunction', '<', 'Long', ',', 'Long', ',', 'T', '>', 'emptyBucketFactory', ')', '{', 'List', '<', 'T', '>', 'result', '=', 'new', 'ArrayList', '<>', '(', 'buckets', '.', 'getCount', '(', ')', ')', ';', 'for', '(', 'int', 'index', '=', '0', ';', 'index', '<', 'buckets', '.', 'getCount', '(', ')', ';', 'index', '++', ')', '{', 'long', 'from', '=', 'buckets', '.', 'getBucketStart', '(', 'index', ')', ';', 'T', 'bucketPoint', '=', 'pointMap', '.', 'get', '(', 'from', ')', ';', 'if', '(', 'bucketPoint', '==', 'null', ')', '{', 'long', 'to', '=', 'from', '+', 'buckets', '.', 'getStep', '(', ')', ';', 'bucketPoint', '=', 'emptyBucketFactory', '.', 'apply', '(', 'from', ',', 'to', ')', ';', '}', 'result', '.', 'add', '(', 'bucketPoint', ')', ';', '}', 'return', 'result', ';', '}']","Converts bucket points indexed by start time into a list, ordered by start time. Blanks will be filled with
empty bucket points.","['Converts', 'bucket', 'points', 'indexed', 'by', 'start', 'time', 'into', 'a', 'list', 'ordered', 'by', 'start', 'time', '.', 'Blanks', 'will', 'be', 'filled', 'with', 'empty', 'bucket', 'points', '.']",6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c,https://github.com/hawkular/hawkular-metrics/blob/6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c/core/metrics-model/src/main/java/org/hawkular/metrics/model/BucketPoint.java#L70-L83,test
jboss/jboss-common-core,src/main/java/org/jboss/util/Classes.java,Classes.getProperty,"private static String getProperty(final String name, final String defaultValue)
   {
      return (String) AccessController.doPrivileged(
      new PrivilegedAction()
      {
         public Object run()
         {
            return System.getProperty(name, defaultValue);
         }

      });
   }",java,"private static String getProperty(final String name, final String defaultValue)
   {
      return (String) AccessController.doPrivileged(
      new PrivilegedAction()
      {
         public Object run()
         {
            return System.getProperty(name, defaultValue);
         }

      });
   }","['private', 'static', 'String', 'getProperty', '(', 'final', 'String', 'name', ',', 'final', 'String', 'defaultValue', ')', '{', 'return', '(', 'String', ')', 'AccessController', '.', 'doPrivileged', '(', 'new', 'PrivilegedAction', '(', ')', '{', 'public', 'Object', 'run', '(', ')', '{', 'return', 'System', '.', 'getProperty', '(', 'name', ',', 'defaultValue', ')', ';', '}', '}', ')', ';', '}']","Get a system property

@param name the property name
@param defaultValue the default value","['Get', 'a', 'system', 'property']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/Classes.java#L817-L828,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/NetcdfFile.java,NetcdfFile.readArrays,"public java.util.List<Array> readArrays(java.util.List<Variable> variables) throws IOException {
    java.util.List<Array> result = new java.util.ArrayList<>();
    for (Variable variable : variables)
      result.add(variable.read());
    return result;
  }",java,"public java.util.List<Array> readArrays(java.util.List<Variable> variables) throws IOException {
    java.util.List<Array> result = new java.util.ArrayList<>();
    for (Variable variable : variables)
      result.add(variable.read());
    return result;
  }","['public', 'java', '.', 'util', '.', 'List', '<', 'Array', '>', 'readArrays', '(', 'java', '.', 'util', '.', 'List', '<', 'Variable', '>', 'variables', ')', 'throws', 'IOException', '{', 'java', '.', 'util', '.', 'List', '<', 'Array', '>', 'result', '=', 'new', 'java', '.', 'util', '.', 'ArrayList', '<>', '(', ')', ';', 'for', '(', 'Variable', 'variable', ':', 'variables', ')', 'result', '.', '(', 'variable', '.', 'read', '(', ')', ')', ';', 'return', 'result', ';', '}']","Do a bulk read on a list of Variables and
return a corresponding list of Array that contains the results
of a full read on each Variable.
This is mostly here so DODSNetcdf can override it with one call to the server.

@param variables List of type Variable
@return List of Array, one for each Variable in the input.
@throws IOException if read error","['Do', 'a', 'bulk', 'read', 'on', 'a', 'list', 'of', 'Variables', 'and', 'return', 'a', 'corresponding', 'list', 'of', 'Array', 'that', 'contains', 'the', 'results', 'of', 'a', 'full', 'read', 'on', 'each', 'Variable', '.', 'This', 'is', 'mostly', 'here', 'so', 'DODSNetcdf', 'can', 'override', 'it', 'with', 'one', 'call', 'to', 'the', 'server', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/NetcdfFile.java#L2205-L2210,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/NetcdfFileWriter.java,NetcdfFileWriter.createNew,"static public NetcdfFileWriter createNew(Version version, String location, Nc4Chunking chunker) throws IOException {
    return new NetcdfFileWriter(version, location, false, chunker);
  }",java,"static public NetcdfFileWriter createNew(Version version, String location, Nc4Chunking chunker) throws IOException {
    return new NetcdfFileWriter(version, location, false, chunker);
  }","['static', 'public', 'NetcdfFileWriter', 'createNew', '(', 'Version', 'version', ',', 'String', 'location', ',', 'Nc4Chunking', 'chunker', ')', 'throws', 'IOException', '{', 'return', 'new', 'NetcdfFileWriter', '(', 'version', ',', 'location', ',', 'false', ',', 'chunker', ')', ';', '}']","Create a new Netcdf file, with fill mode true.

@param version  netcdf-3 or 4
@param location name of new file to open; if it exists, will overwrite it.
@param chunker  used only for netcdf4, or null for default chunking algorithm
@return new NetcdfFileWriter
@throws IOException on I/O error","['Create', 'a', 'new', 'Netcdf', 'file', 'with', 'fill', 'mode', 'true', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/NetcdfFileWriter.java#L121-L123,test
rest-assured/rest-assured,modules/spring-mock-mvc/src/main/java/io/restassured/module/mockmvc/config/RestAssuredMockMvcConfig.java,RestAssuredMockMvcConfig.encoderConfig,"public RestAssuredMockMvcConfig encoderConfig(EncoderConfig encoderConfig) {
        notNull(encoderConfig, ""EncoderConfig"");
        return new RestAssuredMockMvcConfig(logConfig, encoderConfig, decoderConfig, sessionConfig,
                objectMapperConfig, jsonConfig, xmlConfig, headerConfig, asyncConfig, multiPartConfig, mockMvcConfig, paramConfig, matcherConfig);
    }",java,"public RestAssuredMockMvcConfig encoderConfig(EncoderConfig encoderConfig) {
        notNull(encoderConfig, ""EncoderConfig"");
        return new RestAssuredMockMvcConfig(logConfig, encoderConfig, decoderConfig, sessionConfig,
                objectMapperConfig, jsonConfig, xmlConfig, headerConfig, asyncConfig, multiPartConfig, mockMvcConfig, paramConfig, matcherConfig);
    }","['public', 'RestAssuredMockMvcConfig', 'encoderConfig', '(', 'EncoderConfig', 'encoderConfig', ')', '{', 'notNull', '(', 'encoderConfig', ',', '""EncoderConfig""', ')', ';', 'return', 'new', 'RestAssuredMockMvcConfig', '(', 'logConfig', ',', 'encoderConfig', ',', 'decoderConfig', ',', 'sessionConfig', ',', 'objectMapperConfig', ',', 'jsonConfig', ',', 'xmlConfig', ',', 'headerConfig', ',', 'asyncConfig', ',', 'multiPartConfig', ',', 'mockMvcConfig', ',', 'paramConfig', ',', 'matcherConfig', ')', ';', '}']","Set the encoder config

@param encoderConfig The {@link EncoderConfig} to set
@return An updated RestAssuredMockMvcConfig","['Set', 'the', 'encoder', 'config']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/modules/spring-mock-mvc/src/main/java/io/restassured/module/mockmvc/config/RestAssuredMockMvcConfig.java#L167-L171,test
Unidata/thredds,udunits/src/main/java/ucar/units/UnitFormatImpl.java,UnitFormatImpl.parse,"public final Unit parse(final String spec) throws NoSuchUnitException,
			UnitParseException, SpecificationException, UnitDBException,
			PrefixDBException, UnitSystemException {
		synchronized (MUTEX) {
			return parse(spec, UnitDBManager.instance());
		}
	}",java,"public final Unit parse(final String spec) throws NoSuchUnitException,
			UnitParseException, SpecificationException, UnitDBException,
			PrefixDBException, UnitSystemException {
		synchronized (MUTEX) {
			return parse(spec, UnitDBManager.instance());
		}
	}","['public', 'final', 'Unit', 'parse', '(', 'final', 'String', 'spec', ')', 'throws', 'NoSuchUnitException', ',', 'UnitParseException', ',', 'SpecificationException', ',', 'UnitDBException', ',', 'PrefixDBException', ',', 'UnitSystemException', '{', 'synchronized', '(', 'MUTEX', ')', '{', 'return', 'parse', '(', 'spec', ',', 'UnitDBManager', '.', 'instance', '(', ')', ')', ';', '}', '}']","Parses a unit specification.  This method is thread-safe.

@param spec
The unit specification (e.g. ""m/s"");
@return The unit corresponding to the specification.
@throws NoSuchUnitException
A unit in the specification couldn't be found (e.g. the ""m""
in the example).
@throws UnitParseException
The specification is grammatically incorrect.
@throws SpecificationException
The specification is incorrect somehow.
@throws UnitDBException
Problem with the unit database.
@throws PrefixDBException
Problem with the unit-prefix database.
@throws UnitSystemException
Problem with the system of units.","['Parses', 'a', 'unit', 'specification', '.', 'This', 'method', 'is', 'thread', '-', 'safe', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/udunits/src/main/java/ucar/units/UnitFormatImpl.java#L40-L46,test
Unidata/thredds,udunits/src/main/java/ucar/units/PrefixDBImpl.java,PrefixDBImpl.getPrefix,"private static Prefix getPrefix(final String string, final Set<Prefix> set) {
		for (final Iterator<Prefix> iter = set.iterator(); iter.hasNext();) {
			final Prefix prefix = iter.next();
			final int comp = prefix.compareTo(string);
			if (comp == 0) {
				return prefix;
			}
			if (comp > 0) {
				break;
			}
		}
		return null;
	}",java,"private static Prefix getPrefix(final String string, final Set<Prefix> set) {
		for (final Iterator<Prefix> iter = set.iterator(); iter.hasNext();) {
			final Prefix prefix = iter.next();
			final int comp = prefix.compareTo(string);
			if (comp == 0) {
				return prefix;
			}
			if (comp > 0) {
				break;
			}
		}
		return null;
	}","['private', 'static', 'Prefix', 'getPrefix', '(', 'final', 'String', 'string', ',', 'final', 'Set', '<', 'Prefix', '>', 'set', ')', '{', 'for', '(', 'final', 'Iterator', '<', 'Prefix', '>', 'iter', '=', 'set', '.', 'iterator', '(', ')', ';', 'iter', '.', 'hasNext', '(', ')', ';', ')', '{', 'final', 'Prefix', 'prefix', '=', 'iter', '.', 'next', '(', ')', ';', 'final', 'int', 'comp', '=', 'prefix', '.', 'compareTo', '(', 'string', ')', ';', 'if', '(', 'comp', '==', '0', ')', '{', 'return', 'prefix', ';', '}', 'if', '(', 'comp', '>', '0', ')', '{', 'break', ';', '}', '}', 'return', 'null', ';', '}']","Returns the prefix from the given set with the given identifier.

@param string
The prefix identifier.
@param set
The set to search.","['Returns', 'the', 'prefix', 'from', 'the', 'given', 'set', 'with', 'the', 'given', 'identifier', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/udunits/src/main/java/ucar/units/PrefixDBImpl.java#L131-L143,test
jboss/jboss-common-core,src/main/java/org/jboss/util/xml/catalog/Catalog.java,Catalog.addDelegate,"protected void addDelegate(CatalogEntry entry) {
    int pos = 0;
    String partial = entry.getEntryArg(0);

    Enumeration local = localDelegate.elements();
    while (local.hasMoreElements()) {
      CatalogEntry dpe = (CatalogEntry) local.nextElement();
      String dp = dpe.getEntryArg(0);
      if (dp.equals(partial)) {
	// we already have this prefix
	return;
      }
      if (dp.length() > partial.length()) {
	pos++;
      }
      if (dp.length() < partial.length()) {
	break;
      }
    }

    // now insert partial into the vector at [pos]
    if (localDelegate.size() == 0) {
      localDelegate.addElement(entry);
    } else {
      localDelegate.insertElementAt(entry, pos);
    }
  }",java,"protected void addDelegate(CatalogEntry entry) {
    int pos = 0;
    String partial = entry.getEntryArg(0);

    Enumeration local = localDelegate.elements();
    while (local.hasMoreElements()) {
      CatalogEntry dpe = (CatalogEntry) local.nextElement();
      String dp = dpe.getEntryArg(0);
      if (dp.equals(partial)) {
	// we already have this prefix
	return;
      }
      if (dp.length() > partial.length()) {
	pos++;
      }
      if (dp.length() < partial.length()) {
	break;
      }
    }

    // now insert partial into the vector at [pos]
    if (localDelegate.size() == 0) {
      localDelegate.addElement(entry);
    } else {
      localDelegate.insertElementAt(entry, pos);
    }
  }","['protected', 'void', 'addDelegate', '(', 'CatalogEntry', 'entry', ')', '{', 'int', 'pos', '=', '0', ';', 'String', 'partial', '=', 'entry', '.', 'getEntryArg', '(', '0', ')', ';', 'Enumeration', 'local', '=', 'localDelegate', '.', 'elements', '(', ')', ';', 'while', '(', 'local', '.', 'hasMoreElements', '(', ')', ')', '{', 'CatalogEntry', 'dpe', '=', '(', 'CatalogEntry', ')', 'local', '.', 'nextElement', '(', ')', ';', 'String', 'dp', '=', 'dpe', '.', 'getEntryArg', '(', '0', ')', ';', 'if', '(', 'dp', '.', 'equals', '(', 'partial', ')', ')', '{', '// we already have this prefix', 'return', ';', '}', 'if', '(', 'dp', '.', 'length', '(', ')', '>', 'partial', '.', 'length', '(', ')', ')', '{', 'pos', '++', ';', '}', 'if', '(', 'dp', '.', 'length', '(', ')', '<', 'partial', '.', 'length', '(', ')', ')', '{', 'break', ';', '}', '}', '// now insert partial into the vector at [pos]', 'if', '(', 'localDelegate', '.', 'size', '(', ')', '==', '0', ')', '{', 'localDelegate', '.', 'addElement', '(', 'entry', ')', ';', '}', 'else', '{', 'localDelegate', '.', 'insertElementAt', '(', 'entry', ',', 'pos', ')', ';', '}', '}']","Add to the current list of delegated catalogs.

<p>This method always constructs the {@link #localDelegate}
vector so that it is ordered by length of partial
public identifier.</p>

@param entry The DELEGATE catalog entry","['Add', 'to', 'the', 'current', 'list', 'of', 'delegated', 'catalogs', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/Catalog.java#L2105-L2131,test
Unidata/thredds,cdm/src/main/java/ucar/ma2/StructureDataW.java,StructureDataW.getScalarByte,"public byte getScalarByte(StructureMembers.Member m) {
    Array data = getArray(m);
    return data.getByte(Index.scalarIndexImmutable);
  }",java,"public byte getScalarByte(StructureMembers.Member m) {
    Array data = getArray(m);
    return data.getByte(Index.scalarIndexImmutable);
  }","['public', 'byte', 'getScalarByte', '(', 'StructureMembers', '.', 'Member', 'm', ')', '{', 'Array', 'data', '=', 'getArray', '(', 'm', ')', ';', 'return', 'data', '.', 'getByte', '(', 'Index', '.', 'scalarIndexImmutable', ')', ';', '}']","Get member data of type byte.
@param m get data from this StructureMembers.Member. Must be of type byte.
@return scalar byte value","['Get', 'member', 'data', 'of', 'type', 'byte', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/StructureDataW.java#L144-L147,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/indexing/BooleanIndexing.java,BooleanIndexing.or,"public static boolean[] or(final INDArray n, final Condition condition, int... dimension) {
        if (!(condition instanceof BaseCondition))
            throw new UnsupportedOperationException(""Only static Conditions are supported"");

        MatchCondition op = new MatchCondition(n, condition);
        INDArray arr = Nd4j.getExecutioner().exec(op, dimension);

        // FIXME: int cast

        boolean[] result = new boolean[(int) arr.length()];

        for (int i = 0; i < arr.length(); i++) {
            if (arr.getDouble(i) > 0)
                result[i] = true;
            else
                result[i] = false;
        }

        return result;
    }",java,"public static boolean[] or(final INDArray n, final Condition condition, int... dimension) {
        if (!(condition instanceof BaseCondition))
            throw new UnsupportedOperationException(""Only static Conditions are supported"");

        MatchCondition op = new MatchCondition(n, condition);
        INDArray arr = Nd4j.getExecutioner().exec(op, dimension);

        // FIXME: int cast

        boolean[] result = new boolean[(int) arr.length()];

        for (int i = 0; i < arr.length(); i++) {
            if (arr.getDouble(i) > 0)
                result[i] = true;
            else
                result[i] = false;
        }

        return result;
    }","['public', 'static', 'boolean', '[', ']', 'or', '(', 'final', 'INDArray', 'n', ',', 'final', 'Condition', 'condition', ',', 'int', '...', 'dimension', ')', '{', 'if', '(', '!', '(', 'condition', 'instanceof', 'BaseCondition', ')', ')', 'throw', 'new', 'UnsupportedOperationException', '(', '""Only static Conditions are supported""', ')', ';', 'MatchCondition', 'op', '=', 'new', 'MatchCondition', '(', 'n', ',', 'condition', ')', ';', 'INDArray', 'arr', '=', 'Nd4j', '.', 'getExecutioner', '(', ')', '.', 'exec', '(', 'op', ',', 'dimension', ')', ';', '// FIXME: int cast', 'boolean', '[', ']', 'result', '=', 'new', 'boolean', '[', '(', 'int', ')', 'arr', '.', 'length', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'arr', '.', 'length', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'arr', '.', 'getDouble', '(', 'i', ')', '>', '0', ')', 'result', '[', 'i', ']', '=', 'true', ';', 'else', 'result', '[', 'i', ']', '=', 'false', ';', '}', 'return', 'result', ';', '}']","Or over the whole ndarray given some condition, with respect to dimensions

@param n    the ndarray to test
@param condition the condition to test against
@return true if all of the elements meet the specified
condition false otherwise","['Or', 'over', 'the', 'whole', 'ndarray', 'given', 'some', 'condition', 'with', 'respect', 'to', 'dimensions']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/indexing/BooleanIndexing.java#L152-L171,test
Unidata/thredds,tds/src/main/java/thredds/core/DatasetManager.java,DatasetManager.resourceControlOk,"public boolean resourceControlOk(HttpServletRequest req, HttpServletResponse res, String reqPath) {
    if (null == reqPath)
      reqPath = TdsPathUtils.extractPath(req, null);

    // see if its under resource control
    String rc = null;
    DataRootManager.DataRootMatch match = dataRootManager.findDataRootMatch(reqPath);
    if (match != null) {
      rc = match.dataRoot.getRestrict(); // datasetScan, featCollection are restricted at the dataRoot
    }

    if (rc == null) {
      rc = datasetTracker.findResourceControl(reqPath); // regular datasets tracked here
    }

    return resourceAuthorized(req, res, rc);
  }",java,"public boolean resourceControlOk(HttpServletRequest req, HttpServletResponse res, String reqPath) {
    if (null == reqPath)
      reqPath = TdsPathUtils.extractPath(req, null);

    // see if its under resource control
    String rc = null;
    DataRootManager.DataRootMatch match = dataRootManager.findDataRootMatch(reqPath);
    if (match != null) {
      rc = match.dataRoot.getRestrict(); // datasetScan, featCollection are restricted at the dataRoot
    }

    if (rc == null) {
      rc = datasetTracker.findResourceControl(reqPath); // regular datasets tracked here
    }

    return resourceAuthorized(req, res, rc);
  }","['public', 'boolean', 'resourceControlOk', '(', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'res', ',', 'String', 'reqPath', ')', '{', 'if', '(', 'null', '==', 'reqPath', ')', 'reqPath', '=', 'TdsPathUtils', '.', 'extractPath', '(', 'req', ',', 'null', ')', ';', '// see if its under resource control', 'String', 'rc', '=', 'null', ';', 'DataRootManager', '.', 'DataRootMatch', 'match', '=', 'dataRootManager', '.', 'findDataRootMatch', '(', 'reqPath', ')', ';', 'if', '(', 'match', '!=', 'null', ')', '{', 'rc', '=', 'match', '.', 'dataRoot', '.', 'getRestrict', '(', ')', ';', '// datasetScan, featCollection are restricted at the dataRoot', '}', 'if', '(', 'rc', '==', 'null', ')', '{', 'rc', '=', 'datasetTracker', '.', 'findResourceControl', '(', 'reqPath', ')', ';', '// regular datasets tracked here', '}', 'return', 'resourceAuthorized', '(', 'req', ',', 'res', ',', 'rc', ')', ';', '}']","Check if this is making a request for a restricted dataset, and if so, if its allowed.

@param req     the request
@param res     the response
@param reqPath the request path; if null, use req.getPathInfo()
@return true if ok to proceed. If false, the appropriate error or redirect message has been sent, the caller only needs to return.","['Check', 'if', 'this', 'is', 'making', 'a', 'request', 'for', 'a', 'restricted', 'dataset', 'and', 'if', 'so', 'if', 'its', 'allowed', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tds/src/main/java/thredds/core/DatasetManager.java#L398-L414,test
alipay/sofa-bolt,src/main/java/com/alipay/remoting/config/ConfigManager.java,ConfigManager.getBool,"public static boolean getBool(String key, String defaultValue) {
        return Boolean.parseBoolean(System.getProperty(key, defaultValue));
    }",java,"public static boolean getBool(String key, String defaultValue) {
        return Boolean.parseBoolean(System.getProperty(key, defaultValue));
    }","['public', 'static', 'boolean', 'getBool', '(', 'String', 'key', ',', 'String', 'defaultValue', ')', '{', 'return', 'Boolean', '.', 'parseBoolean', '(', 'System', '.', 'getProperty', '(', 'key', ',', 'defaultValue', ')', ')', ';', '}']",~~~ public helper methods to retrieve system property,"['~~~', 'public', 'helper', 'methods', 'to', 'retrieve', 'system', 'property']",0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046,https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/config/ConfigManager.java#L156-L158,test
Unidata/thredds,legacy/src/main/java/thredds/catalog/parser/jdom/InvCatalogFactory10.java,InvCatalogFactory10.readMetadataContentFromURL,"public Object readMetadataContentFromURL(InvDataset dataset, java.net.URI uri) throws java.io.IOException {
    Element elem = readContentFromURL(uri);
    Object contentObject = readMetadataContent(dataset, elem);
    if (debugMetadataRead) System.out.println("" convert to "" + contentObject.getClass().getName());
    return contentObject;
  }",java,"public Object readMetadataContentFromURL(InvDataset dataset, java.net.URI uri) throws java.io.IOException {
    Element elem = readContentFromURL(uri);
    Object contentObject = readMetadataContent(dataset, elem);
    if (debugMetadataRead) System.out.println("" convert to "" + contentObject.getClass().getName());
    return contentObject;
  }","['public', 'Object', 'readMetadataContentFromURL', '(', 'InvDataset', 'dataset', ',', 'java', '.', 'net', '.', 'URI', 'uri', ')', 'throws', 'java', '.', 'io', '.', 'IOException', '{', 'Element', 'elem', '=', 'readContentFromURL', '(', 'uri', ')', ';', 'Object', 'contentObject', '=', 'readMetadataContent', '(', 'dataset', ',', 'elem', ')', ';', 'if', '(', 'debugMetadataRead', ')', 'System', '.', 'out', '.', 'println', '(', '"" convert to ""', '+', 'contentObject', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', ')', ';', 'return', 'contentObject', ';', '}']",this is only called for ThredddsMetadata,"['this', 'is', 'only', 'called', 'for', 'ThredddsMetadata']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/parser/jdom/InvCatalogFactory10.java#L1151-L1156,test
wildfly/wildfly,naming/src/main/java/org/jboss/as/naming/context/ModularReference.java,ModularReference.create,"public static ModularReference create(final String className, final Class<?> factoryClass) {
        return new ModularReference(className, factoryClass.getName(), Module.forClass(factoryClass).getIdentifier());
    }",java,"public static ModularReference create(final String className, final Class<?> factoryClass) {
        return new ModularReference(className, factoryClass.getName(), Module.forClass(factoryClass).getIdentifier());
    }","['public', 'static', 'ModularReference', 'create', '(', 'final', 'String', 'className', ',', 'final', 'Class', '<', '?', '>', 'factoryClass', ')', '{', 'return', 'new', 'ModularReference', '(', 'className', ',', 'factoryClass', '.', 'getName', '(', ')', ',', 'Module', '.', 'forClass', '(', 'factoryClass', ')', '.', 'getIdentifier', '(', ')', ')', ';', '}']","Create a ModuleReference from a target class name and factory class.

@param className The class name for the reference
@param factoryClass The factory class
@return A ModularReference","['Create', 'a', 'ModuleReference', 'from', 'a', 'target', 'class', 'name', 'and', 'factory', 'class', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/naming/src/main/java/org/jboss/as/naming/context/ModularReference.java#L58-L60,test
robeio/robe,robe-convert/src/main/java/io/robe/convert/excel/parsers/ParseDate.java,ParseDate.parse,"@Override
    public Date parse(Object o, Field field) {
        if (!isValid(o)) {
            return null;
        }
        JsonFormat formatAnn = field.getAnnotation(JsonFormat.class);
        if (formatAnn == null) {
            throw new RuntimeException(""JsonFormat with pattern needed for: "" + field.getName());
        }
        try {
            return new SimpleDateFormat(formatAnn.pattern(), Locale.getDefault()).parse(o.toString());
        } catch (ParseException e) {
            throw new RuntimeException(""JsonFormat with pattern is wrong for: "" + field.getName() + "" pattern: "" + formatAnn.pattern());
        }
    }",java,"@Override
    public Date parse(Object o, Field field) {
        if (!isValid(o)) {
            return null;
        }
        JsonFormat formatAnn = field.getAnnotation(JsonFormat.class);
        if (formatAnn == null) {
            throw new RuntimeException(""JsonFormat with pattern needed for: "" + field.getName());
        }
        try {
            return new SimpleDateFormat(formatAnn.pattern(), Locale.getDefault()).parse(o.toString());
        } catch (ParseException e) {
            throw new RuntimeException(""JsonFormat with pattern is wrong for: "" + field.getName() + "" pattern: "" + formatAnn.pattern());
        }
    }","['@', 'Override', 'public', 'Date', 'parse', '(', 'Object', 'o', ',', 'Field', 'field', ')', '{', 'if', '(', '!', 'isValid', '(', 'o', ')', ')', '{', 'return', 'null', ';', '}', 'JsonFormat', 'formatAnn', '=', 'field', '.', 'getAnnotation', '(', 'JsonFormat', '.', 'class', ')', ';', 'if', '(', 'formatAnn', '==', 'null', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""JsonFormat with pattern needed for: ""', '+', 'field', '.', 'getName', '(', ')', ')', ';', '}', 'try', '{', 'return', 'new', 'SimpleDateFormat', '(', 'formatAnn', '.', 'pattern', '(', ')', ',', 'Locale', '.', 'getDefault', '(', ')', ')', '.', 'parse', '(', 'o', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""JsonFormat with pattern is wrong for: ""', '+', 'field', '.', 'getName', '(', ')', '+', '"" pattern: ""', '+', 'formatAnn', '.', 'pattern', '(', ')', ')', ';', '}', '}']","First it checks is there any annotation class for parsing operations,
if it is, parses with given format, if there is a exception while
parsing with given format catches and tries with default values,
If there is no given format, tries with static values

@param o     Object from cell value
@param field Field from given pojo
@return Valid date after parsing with pattern","['First', 'it', 'checks', 'is', 'there', 'any', 'annotation', 'class', 'for', 'parsing', 'operations', 'if', 'it', 'is', 'parses', 'with', 'given', 'format', 'if', 'there', 'is', 'a', 'exception', 'while', 'parsing', 'with', 'given', 'format', 'catches', 'and', 'tries', 'with', 'default', 'values', 'If', 'there', 'is', 'no', 'given', 'format', 'tries', 'with', 'static', 'values']",a0a8c7cebd1f70f78cf24a66a002859e937badfe,https://github.com/robeio/robe/blob/a0a8c7cebd1f70f78cf24a66a002859e937badfe/robe-convert/src/main/java/io/robe/convert/excel/parsers/ParseDate.java#L24-L38,test
ReactiveX/RxJava,src/main/java/io/reactivex/internal/util/EndConsumerHelper.java,EndConsumerHelper.setOnce,"public static boolean setOnce(AtomicReference<Subscription> upstream, Subscription next, Class<?> subscriber) {
        ObjectHelper.requireNonNull(next, ""next is null"");
        if (!upstream.compareAndSet(null, next)) {
            next.cancel();
            if (upstream.get() != SubscriptionHelper.CANCELLED) {
                reportDoubleSubscription(subscriber);
            }
            return false;
        }
        return true;
    }",java,"public static boolean setOnce(AtomicReference<Subscription> upstream, Subscription next, Class<?> subscriber) {
        ObjectHelper.requireNonNull(next, ""next is null"");
        if (!upstream.compareAndSet(null, next)) {
            next.cancel();
            if (upstream.get() != SubscriptionHelper.CANCELLED) {
                reportDoubleSubscription(subscriber);
            }
            return false;
        }
        return true;
    }","['public', 'static', 'boolean', 'setOnce', '(', 'AtomicReference', '<', 'Subscription', '>', 'upstream', ',', 'Subscription', 'next', ',', 'Class', '<', '?', '>', 'subscriber', ')', '{', 'ObjectHelper', '.', 'requireNonNull', '(', 'next', ',', '""next is null""', ')', ';', 'if', '(', '!', 'upstream', '.', 'compareAndSet', '(', 'null', ',', 'next', ')', ')', '{', 'next', '.', 'cancel', '(', ')', ';', 'if', '(', 'upstream', '.', 'get', '(', ')', '!=', 'SubscriptionHelper', '.', 'CANCELLED', ')', '{', 'reportDoubleSubscription', '(', 'subscriber', ')', ';', '}', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","Atomically updates the target upstream AtomicReference from null to the non-null
next Subscription, otherwise cancels next and reports a ProtocolViolationException
if the AtomicReference doesn't contain the shared cancelled indicator.
@param upstream the target AtomicReference to update
@param next the Subscription to set on it atomically
@param subscriber the class of the consumer to have a personalized
error message if the upstream already contains a non-cancelled Subscription.
@return true if successful, false if the content of the AtomicReference was non null","['Atomically', 'updates', 'the', 'target', 'upstream', 'AtomicReference', 'from', 'null', 'to', 'the', 'non', '-', 'null', 'next', 'Subscription', 'otherwise', 'cancels', 'next', 'and', 'reports', 'a', 'ProtocolViolationException', 'if', 'the', 'AtomicReference', 'doesn', 't', 'contain', 'the', 'shared', 'cancelled', 'indicator', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/util/EndConsumerHelper.java#L119-L129,test
playframework/playframework,persistence/play-java-jpa/src/main/java/play/db/jpa/JPAEntityManagerContext.java,JPAEntityManagerContext.pushOrPopEm,"void pushOrPopEm(EntityManager em, boolean threadLocalFallback) {
    Deque<EntityManager> ems = this.emStack(threadLocalFallback);
    if (em != null) {
      ems.push(em);
    } else {
      if (ems.isEmpty()) {
        throw new IllegalStateException(""Tried to remove the EntityManager, but none was set."");
      }
      ems.pop();
    }
  }",java,"void pushOrPopEm(EntityManager em, boolean threadLocalFallback) {
    Deque<EntityManager> ems = this.emStack(threadLocalFallback);
    if (em != null) {
      ems.push(em);
    } else {
      if (ems.isEmpty()) {
        throw new IllegalStateException(""Tried to remove the EntityManager, but none was set."");
      }
      ems.pop();
    }
  }","['void', 'pushOrPopEm', '(', 'EntityManager', 'em', ',', 'boolean', 'threadLocalFallback', ')', '{', 'Deque', '<', 'EntityManager', '>', 'ems', '=', 'this', '.', 'emStack', '(', 'threadLocalFallback', ')', ';', 'if', '(', 'em', '!=', 'null', ')', '{', 'ems', '.', 'push', '(', 'em', ')', ';', '}', 'else', '{', 'if', '(', 'ems', '.', 'isEmpty', '(', ')', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Tried to remove the EntityManager, but none was set.""', ')', ';', '}', 'ems', '.', 'pop', '(', ')', ';', '}', '}']","Pushes or pops the EntityManager stack depending on the value of the em argument. If em is
null, then the current EntityManager is popped. If em is non-null, then em is pushed onto the
stack and becomes the current EntityManager.

@param em the entity manager to push, if null then will pop one off the stack.
@param threadLocalFallback if true, fall back to a ThreadLocal queue of entity managers if no
HTTP.Context object is found.","['Pushes', 'or', 'pops', 'the', 'EntityManager', 'stack', 'depending', 'on', 'the', 'value', 'of', 'the', 'em', 'argument', '.', 'If', 'em', 'is', 'null', 'then', 'the', 'current', 'EntityManager', 'is', 'popped', '.', 'If', 'em', 'is', 'non', '-', 'null', 'then', 'em', 'is', 'pushed', 'onto', 'the', 'stack', 'and', 'becomes', 'the', 'current', 'EntityManager', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/persistence/play-java-jpa/src/main/java/play/db/jpa/JPAEntityManagerContext.java#L116-L126,test
jboss/jboss-common-core,src/main/java/org/jboss/util/TimedCachePolicy.java,TimedCachePolicy.setResolution,"public synchronized void setResolution(int resolution)
   {
      if( resolution <= 0 )
         resolution = 60;
      if( resolution != this.resolution )
      {
         this.resolution = resolution;
         theTimer.cancel();
         theTimer = new ResolutionTimer();
         resolutionTimer.scheduleAtFixedRate(theTimer, 0, 1000*resolution);
      }
   }",java,"public synchronized void setResolution(int resolution)
   {
      if( resolution <= 0 )
         resolution = 60;
      if( resolution != this.resolution )
      {
         this.resolution = resolution;
         theTimer.cancel();
         theTimer = new ResolutionTimer();
         resolutionTimer.scheduleAtFixedRate(theTimer, 0, 1000*resolution);
      }
   }","['public', 'synchronized', 'void', 'setResolution', '(', 'int', 'resolution', ')', '{', 'if', '(', 'resolution', '<=', '0', ')', 'resolution', '=', '60', ';', 'if', '(', 'resolution', '!=', 'this', '.', 'resolution', ')', '{', 'this', '.', 'resolution', '=', 'resolution', ';', 'theTimer', '.', 'cancel', '(', ')', ';', 'theTimer', '=', 'new', 'ResolutionTimer', '(', ')', ';', 'resolutionTimer', '.', 'scheduleAtFixedRate', '(', 'theTimer', ',', '0', ',', '1000', '*', 'resolution', ')', ';', '}', '}']","Set the cache timer resolution

@param resolution - the resolution in seconds of the cache timer. A cache does
not query the system time on every get() invocation. Rather the cache
updates its notion of the current time every 'resolution' seconds.","['Set', 'the', 'cache', 'timer', 'resolution']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/TimedCachePolicy.java#L399-L410,test
RestComm/jain-slee,container/common/src/main/java/org/mobicents/slee/container/deployment/jboss/DeployableUnit.java,DeployableUnit.getUninstallActions,"public Collection<ManagementAction> getUninstallActions() {
	  Collection<ManagementAction> uActions = new ArrayList<ManagementAction>(uninstallActions);

	  // ensures uninstall is the last action related with DU components
	  uActions.add(new UninstallDeployableUnitAction(diURL.toString(), sleeContainerDeployer.getDeploymentMBean()));

	  // if we have some remaining uninstall actions it means it is actions related with components not in DU
	  // thus should be executed last
	  if (!preUninstallActions.values().isEmpty()) {
		  for (String componentId : preUninstallActions.keySet()) {
			  uActions.addAll(preUninstallActions.get(componentId));
		  }
	  }

	  return uActions;
  }",java,"public Collection<ManagementAction> getUninstallActions() {
	  Collection<ManagementAction> uActions = new ArrayList<ManagementAction>(uninstallActions);

	  // ensures uninstall is the last action related with DU components
	  uActions.add(new UninstallDeployableUnitAction(diURL.toString(), sleeContainerDeployer.getDeploymentMBean()));

	  // if we have some remaining uninstall actions it means it is actions related with components not in DU
	  // thus should be executed last
	  if (!preUninstallActions.values().isEmpty()) {
		  for (String componentId : preUninstallActions.keySet()) {
			  uActions.addAll(preUninstallActions.get(componentId));
		  }
	  }

	  return uActions;
  }","['public', 'Collection', '<', 'ManagementAction', '>', 'getUninstallActions', '(', ')', '{', 'Collection', '<', 'ManagementAction', '>', 'uActions', '=', 'new', 'ArrayList', '<', 'ManagementAction', '>', '(', 'uninstallActions', ')', ';', '// ensures uninstall is the last action related with DU components\r', 'uActions', '.', 'add', '(', 'new', 'UninstallDeployableUnitAction', '(', 'diURL', '.', 'toString', '(', ')', ',', 'sleeContainerDeployer', '.', 'getDeploymentMBean', '(', ')', ')', ')', ';', '// if we have some remaining uninstall actions it means it is actions related with components not in DU\r', '// thus should be executed last\r', 'if', '(', '!', 'preUninstallActions', '.', 'values', '(', ')', '.', 'isEmpty', '(', ')', ')', '{', 'for', '(', 'String', 'componentId', ':', 'preUninstallActions', '.', 'keySet', '(', ')', ')', '{', 'uActions', '.', 'addAll', '(', 'preUninstallActions', '.', 'get', '(', 'componentId', ')', ')', ';', '}', '}', 'return', 'uActions', ';', '}']","Getter for the Uninstall Actions.
@return a Collection of actions.","['Getter', 'for', 'the', 'Uninstall', 'Actions', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/container/deployment/jboss/DeployableUnit.java#L273-L288,test
Unidata/thredds,dap4/d4lib/src/main/java/dap4/dap4lib/DSPPrinter.java,DSPPrinter.printCompoundInstance,"protected void
    printCompoundInstance(DataCursor datav)
            throws DapException
    {
        //Index index = datav.getIndex();
        DapStructure dstruct = (DapStructure) ((DapVariable) datav.getTemplate()).getBaseType();
        switch (datav.getScheme()) {
        case STRUCTURE:
        case RECORD:
            List<DapVariable> dfields = dstruct.getFields();
            for(int f = 0; f < dfields.size(); f++) {
                DapVariable field = dfields.get(f);
                List<Slice> fieldslices = this.ce.getConstrainedSlices(field);
                DataCursor fdata = datav.readField(f);
                printVariable(fdata,fieldslices);
            }
            break;

        case SEQUENCE:
            DapSequence dseq = (DapSequence)dstruct;
            long count = datav.getRecordCount();
            for(long r = 0; r < count; r++) {
                DataCursor dr = datav.readRecord(r);
                printer.marginPrint(""["");
                printer.eol();
                printer.indent();
                printCompoundInstance(dr);
                printer.outdent();
                printer.marginPrint(""]"");
            }
            break;
        default:
            throw new DapException(""Unexpected data cursor scheme:"" + datav.getScheme());
        }
    }",java,"protected void
    printCompoundInstance(DataCursor datav)
            throws DapException
    {
        //Index index = datav.getIndex();
        DapStructure dstruct = (DapStructure) ((DapVariable) datav.getTemplate()).getBaseType();
        switch (datav.getScheme()) {
        case STRUCTURE:
        case RECORD:
            List<DapVariable> dfields = dstruct.getFields();
            for(int f = 0; f < dfields.size(); f++) {
                DapVariable field = dfields.get(f);
                List<Slice> fieldslices = this.ce.getConstrainedSlices(field);
                DataCursor fdata = datav.readField(f);
                printVariable(fdata,fieldslices);
            }
            break;

        case SEQUENCE:
            DapSequence dseq = (DapSequence)dstruct;
            long count = datav.getRecordCount();
            for(long r = 0; r < count; r++) {
                DataCursor dr = datav.readRecord(r);
                printer.marginPrint(""["");
                printer.eol();
                printer.indent();
                printCompoundInstance(dr);
                printer.outdent();
                printer.marginPrint(""]"");
            }
            break;
        default:
            throw new DapException(""Unexpected data cursor scheme:"" + datav.getScheme());
        }
    }","['protected', 'void', 'printCompoundInstance', '(', 'DataCursor', 'datav', ')', 'throws', 'DapException', '{', '//Index index = datav.getIndex();', 'DapStructure', 'dstruct', '=', '(', 'DapStructure', ')', '(', '(', 'DapVariable', ')', 'datav', '.', 'getTemplate', '(', ')', ')', '.', 'getBaseType', '(', ')', ';', 'switch', '(', 'datav', '.', 'getScheme', '(', ')', ')', '{', 'case', 'STRUCTURE', ':', 'case', 'RECORD', ':', 'List', '<', 'DapVariable', '>', 'dfields', '=', 'dstruct', '.', 'getFields', '(', ')', ';', 'for', '(', 'int', 'f', '=', '0', ';', 'f', '<', 'dfields', '.', 'size', '(', ')', ';', 'f', '++', ')', '{', 'DapVariable', 'field', '=', 'dfields', '.', 'get', '(', 'f', ')', ';', 'List', '<', 'Slice', '>', 'fieldslices', '=', 'this', '.', 'ce', '.', 'getConstrainedSlices', '(', 'field', ')', ';', 'DataCursor', 'fdata', '=', 'datav', '.', 'readField', '(', 'f', ')', ';', 'printVariable', '(', 'fdata', ',', 'fieldslices', ')', ';', '}', 'break', ';', 'case', 'SEQUENCE', ':', 'DapSequence', 'dseq', '=', '(', 'DapSequence', ')', 'dstruct', ';', 'long', 'count', '=', 'datav', '.', 'getRecordCount', '(', ')', ';', 'for', '(', 'long', 'r', '=', '0', ';', 'r', '<', 'count', ';', 'r', '++', ')', '{', 'DataCursor', 'dr', '=', 'datav', '.', 'readRecord', '(', 'r', ')', ';', 'printer', '.', 'marginPrint', '(', '""[""', ')', ';', 'printer', '.', 'eol', '(', ')', ';', 'printer', '.', 'indent', '(', ')', ';', 'printCompoundInstance', '(', 'dr', ')', ';', 'printer', '.', 'outdent', '(', ')', ';', 'printer', '.', 'marginPrint', '(', '""]""', ')', ';', '}', 'break', ';', 'default', ':', 'throw', 'new', 'DapException', '(', '""Unexpected data cursor scheme:""', '+', 'datav', '.', 'getScheme', '(', ')', ')', ';', '}', '}']","Print a single structure or sequence or record instance

@param datav
@throws DapException","['Print', 'a', 'single', 'structure', 'or', 'sequence', 'or', 'record', 'instance']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4lib/src/main/java/dap4/dap4lib/DSPPrinter.java#L271-L305,test
wildfly/wildfly,connector/src/main/java/org/jboss/as/connector/util/SecurityActions.java,SecurityActions.getConstructor,"static Constructor<?> getConstructor(final Class<?> c, final Class<?>... params)
            throws NoSuchMethodException {
        if (System.getSecurityManager() == null)
            return c.getConstructor(params);

        Constructor<?> result = AccessController.doPrivileged(new PrivilegedAction<Constructor<?>>() {
            public Constructor<?> run() {
                try {
                    return c.getConstructor(params);
                } catch (NoSuchMethodException e) {
                    return null;
                }
            }
        });

        if (result != null)
            return result;

        throw new NoSuchMethodException();
    }",java,"static Constructor<?> getConstructor(final Class<?> c, final Class<?>... params)
            throws NoSuchMethodException {
        if (System.getSecurityManager() == null)
            return c.getConstructor(params);

        Constructor<?> result = AccessController.doPrivileged(new PrivilegedAction<Constructor<?>>() {
            public Constructor<?> run() {
                try {
                    return c.getConstructor(params);
                } catch (NoSuchMethodException e) {
                    return null;
                }
            }
        });

        if (result != null)
            return result;

        throw new NoSuchMethodException();
    }","['static', 'Constructor', '<', '?', '>', 'getConstructor', '(', 'final', 'Class', '<', '?', '>', 'c', ',', 'final', 'Class', '<', '?', '>', '...', 'params', ')', 'throws', 'NoSuchMethodException', '{', 'if', '(', 'System', '.', 'getSecurityManager', '(', ')', '==', 'null', ')', 'return', 'c', '.', 'getConstructor', '(', 'params', ')', ';', 'Constructor', '<', '?', '>', 'result', '=', 'AccessController', '.', 'doPrivileged', '(', 'new', 'PrivilegedAction', '<', 'Constructor', '<', '?', '>', '>', '(', ')', '{', 'public', 'Constructor', '<', '?', '>', 'run', '(', ')', '{', 'try', '{', 'return', 'c', '.', 'getConstructor', '(', 'params', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', 'return', 'null', ';', '}', '}', '}', ')', ';', 'if', '(', 'result', '!=', 'null', ')', 'return', 'result', ';', 'throw', 'new', 'NoSuchMethodException', '(', ')', ';', '}']","Get the constructor

@param c      The class
@param params The parameters
@return The constructor
@throws NoSuchMethodException If a matching method is not found.","['Get', 'the', 'constructor']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/connector/src/main/java/org/jboss/as/connector/util/SecurityActions.java#L104-L123,test
oblac/jodd,jodd-http/src/main/java/jodd/http/net/SocketHttpConnectionProvider.java,SocketHttpConnectionProvider.createSSLSocket,"protected SSLSocket createSSLSocket(
		final String host, final int port, final int connectionTimeout,
		final boolean trustAll, final boolean verifyHttpsHost) throws IOException {

		final SocketFactory socketFactory = getSocketFactory(proxy, true, trustAll, connectionTimeout);

		final Socket socket;

		if (connectionTimeout < 0) {
			socket = socketFactory.createSocket(host, port);
		}
		else {
			// creates unconnected socket
			// unfortunately, this does not work always

//			sslSocket = (SSLSocket) socketFactory.createSocket();
//			sslSocket.connect(new InetSocketAddress(host, port), connectionTimeout);

			//
			// Note: SSLSocketFactory has several create() methods.
			// Those that take arguments all connect immediately
			// and have no options for specifying a connection timeout.
			//
			// So, we have to create a socket and connect it (with a
			// connection timeout), then have the SSLSocketFactory wrap
			// the already-connected socket.
			//
			socket = Sockets.connect(host, port, connectionTimeout);
			//sock.setSoTimeout(readTimeout);
			//socket.connect(new InetSocketAddress(host, port), connectionTimeout);

			// continue to wrap this plain socket with ssl socket...
		}


		// wrap plain socket in an SSL socket

		SSLSocket sslSocket;

		if (socket instanceof SSLSocket) {
			sslSocket = (SSLSocket) socket;
		}
		else {
			if (socketFactory instanceof SSLSocketFactory) {
				sslSocket = (SSLSocket) ((SSLSocketFactory)socketFactory).createSocket(socket, host, port, true);
			}
			else {
				sslSocket = (SSLSocket) (getDefaultSSLSocketFactory(trustAll)).createSocket(socket, host, port, true);
			}
		}

		// sslSocket is now ready

		if (secureEnabledProtocols != null) {
			final String[] values = StringUtil.splitc(secureEnabledProtocols, ',');

			StringUtil.trimAll(values);

			sslSocket.setEnabledProtocols(values);
		}

		// set SSL parameters to allow host name verifier

		if (verifyHttpsHost) {
			final SSLParameters sslParams = new SSLParameters();

			sslParams.setEndpointIdentificationAlgorithm(""HTTPS"");

			sslSocket.setSSLParameters(sslParams);
		}

		return sslSocket;
	}",java,"protected SSLSocket createSSLSocket(
		final String host, final int port, final int connectionTimeout,
		final boolean trustAll, final boolean verifyHttpsHost) throws IOException {

		final SocketFactory socketFactory = getSocketFactory(proxy, true, trustAll, connectionTimeout);

		final Socket socket;

		if (connectionTimeout < 0) {
			socket = socketFactory.createSocket(host, port);
		}
		else {
			// creates unconnected socket
			// unfortunately, this does not work always

//			sslSocket = (SSLSocket) socketFactory.createSocket();
//			sslSocket.connect(new InetSocketAddress(host, port), connectionTimeout);

			//
			// Note: SSLSocketFactory has several create() methods.
			// Those that take arguments all connect immediately
			// and have no options for specifying a connection timeout.
			//
			// So, we have to create a socket and connect it (with a
			// connection timeout), then have the SSLSocketFactory wrap
			// the already-connected socket.
			//
			socket = Sockets.connect(host, port, connectionTimeout);
			//sock.setSoTimeout(readTimeout);
			//socket.connect(new InetSocketAddress(host, port), connectionTimeout);

			// continue to wrap this plain socket with ssl socket...
		}


		// wrap plain socket in an SSL socket

		SSLSocket sslSocket;

		if (socket instanceof SSLSocket) {
			sslSocket = (SSLSocket) socket;
		}
		else {
			if (socketFactory instanceof SSLSocketFactory) {
				sslSocket = (SSLSocket) ((SSLSocketFactory)socketFactory).createSocket(socket, host, port, true);
			}
			else {
				sslSocket = (SSLSocket) (getDefaultSSLSocketFactory(trustAll)).createSocket(socket, host, port, true);
			}
		}

		// sslSocket is now ready

		if (secureEnabledProtocols != null) {
			final String[] values = StringUtil.splitc(secureEnabledProtocols, ',');

			StringUtil.trimAll(values);

			sslSocket.setEnabledProtocols(values);
		}

		// set SSL parameters to allow host name verifier

		if (verifyHttpsHost) {
			final SSLParameters sslParams = new SSLParameters();

			sslParams.setEndpointIdentificationAlgorithm(""HTTPS"");

			sslSocket.setSSLParameters(sslParams);
		}

		return sslSocket;
	}","['protected', 'SSLSocket', 'createSSLSocket', '(', 'final', 'String', 'host', ',', 'final', 'int', 'port', ',', 'final', 'int', 'connectionTimeout', ',', 'final', 'boolean', 'trustAll', ',', 'final', 'boolean', 'verifyHttpsHost', ')', 'throws', 'IOException', '{', 'final', 'SocketFactory', 'socketFactory', '=', 'getSocketFactory', '(', 'proxy', ',', 'true', ',', 'trustAll', ',', 'connectionTimeout', ')', ';', 'final', 'Socket', 'socket', ';', 'if', '(', 'connectionTimeout', '<', '0', ')', '{', 'socket', '=', 'socketFactory', '.', 'createSocket', '(', 'host', ',', 'port', ')', ';', '}', 'else', '{', '// creates unconnected socket', '// unfortunately, this does not work always', '//\t\t\tsslSocket = (SSLSocket) socketFactory.createSocket();', '//\t\t\tsslSocket.connect(new InetSocketAddress(host, port), connectionTimeout);', '//', '// Note: SSLSocketFactory has several create() methods.', '// Those that take arguments all connect immediately', '// and have no options for specifying a connection timeout.', '//', '// So, we have to create a socket and connect it (with a', '// connection timeout), then have the SSLSocketFactory wrap', '// the already-connected socket.', '//', 'socket', '=', 'Sockets', '.', 'connect', '(', 'host', ',', 'port', ',', 'connectionTimeout', ')', ';', '//sock.setSoTimeout(readTimeout);', '//socket.connect(new InetSocketAddress(host, port), connectionTimeout);', '// continue to wrap this plain socket with ssl socket...', '}', '// wrap plain socket in an SSL socket', 'SSLSocket', 'sslSocket', ';', 'if', '(', 'socket', 'instanceof', 'SSLSocket', ')', '{', 'sslSocket', '=', '(', 'SSLSocket', ')', 'socket', ';', '}', 'else', '{', 'if', '(', 'socketFactory', 'instanceof', 'SSLSocketFactory', ')', '{', 'sslSocket', '=', '(', 'SSLSocket', ')', '(', '(', 'SSLSocketFactory', ')', 'socketFactory', ')', '.', 'createSocket', '(', 'socket', ',', 'host', ',', 'port', ',', 'true', ')', ';', '}', 'else', '{', 'sslSocket', '=', '(', 'SSLSocket', ')', '(', 'getDefaultSSLSocketFactory', '(', 'trustAll', ')', ')', '.', 'createSocket', '(', 'socket', ',', 'host', ',', 'port', ',', 'true', ')', ';', '}', '}', '// sslSocket is now ready', 'if', '(', 'secureEnabledProtocols', '!=', 'null', ')', '{', 'final', 'String', '[', ']', 'values', '=', 'StringUtil', '.', 'splitc', '(', 'secureEnabledProtocols', ',', ""'"", ""'"", ')', ';', 'StringUtil', '.', 'trimAll', '(', 'values', ')', ';', 'sslSocket', '.', 'setEnabledProtocols', '(', 'values', ')', ';', '}', '// set SSL parameters to allow host name verifier', 'if', '(', 'verifyHttpsHost', ')', '{', 'final', 'SSLParameters', 'sslParams', '=', 'new', 'SSLParameters', '(', ')', ';', 'sslParams', '.', 'setEndpointIdentificationAlgorithm', '(', '""HTTPS""', ')', ';', 'sslSocket', '.', 'setSSLParameters', '(', 'sslParams', ')', ';', '}', 'return', 'sslSocket', ';', '}']",Creates a SSL socket. Enables default secure enabled protocols if specified.,"['Creates', 'a', 'SSL', 'socket', '.', 'Enables', 'default', 'secure', 'enabled', 'protocols', 'if', 'specified', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-http/src/main/java/jodd/http/net/SocketHttpConnectionProvider.java#L155-L227,test
rupertlssmith/lojix,lojix/search/src/main/com/thesett/aima/search/examples/eightpuzzle/EightPuzzleState.java,EightPuzzleState.getChildStateForOperator,"public EightPuzzleState getChildStateForOperator(Operator op)
    {
        // Create a copy of the existing board state
        EightPuzzleState newState;

        try
        {
            newState = (EightPuzzleState) clone();
        }
        catch (CloneNotSupportedException e)
        {
            throw new IllegalStateException(""Puzzle state could not be cloned."", e);
        }

        // Update the new board state using the in-place operator application
        newState.updateWithOperator(op);

        return newState;
    }",java,"public EightPuzzleState getChildStateForOperator(Operator op)
    {
        // Create a copy of the existing board state
        EightPuzzleState newState;

        try
        {
            newState = (EightPuzzleState) clone();
        }
        catch (CloneNotSupportedException e)
        {
            throw new IllegalStateException(""Puzzle state could not be cloned."", e);
        }

        // Update the new board state using the in-place operator application
        newState.updateWithOperator(op);

        return newState;
    }","['public', 'EightPuzzleState', 'getChildStateForOperator', '(', 'Operator', 'op', ')', '{', '// Create a copy of the existing board state', 'EightPuzzleState', 'newState', ';', 'try', '{', 'newState', '=', '(', 'EightPuzzleState', ')', 'clone', '(', ')', ';', '}', 'catch', '(', 'CloneNotSupportedException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Puzzle state could not be cloned.""', ',', 'e', ')', ';', '}', '// Update the new board state using the in-place operator application', 'newState', '.', 'updateWithOperator', '(', 'op', ')', ';', 'return', 'newState', ';', '}']","Applies a move to generate a new board position. This creates a new state object and updates its board position.
The board position in this object is not changed.

@param  op The move to apply to this board; ""U"" for up, ""D"" for down, ""L"" for left and ""R"" for right.

@return A new instance of EightPuzzleState with the operator applied to it.","['Applies', 'a', 'move', 'to', 'generate', 'a', 'new', 'board', 'position', '.', 'This', 'creates', 'a', 'new', 'state', 'object', 'and', 'updates', 'its', 'board', 'position', '.', 'The', 'board', 'position', 'in', 'this', 'object', 'is', 'not', 'changed', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/search/src/main/com/thesett/aima/search/examples/eightpuzzle/EightPuzzleState.java#L310-L328,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/sql/operator/OQueryOperatorContainsText.java,OQueryOperatorContainsText.evaluateRecord,"@Override
  public Object evaluateRecord(final OIdentifiable iRecord, ODocument iCurrentResult, final OSQLFilterCondition iCondition,
      final Object iLeft, final Object iRight, OCommandContext iContext, final ODocumentSerializer serializer) {
    if (iLeft == null || iRight == null)
      return false;

    return iLeft.toString().indexOf(iRight.toString()) > -1;
  }",java,"@Override
  public Object evaluateRecord(final OIdentifiable iRecord, ODocument iCurrentResult, final OSQLFilterCondition iCondition,
      final Object iLeft, final Object iRight, OCommandContext iContext, final ODocumentSerializer serializer) {
    if (iLeft == null || iRight == null)
      return false;

    return iLeft.toString().indexOf(iRight.toString()) > -1;
  }","['@', 'Override', 'public', 'Object', 'evaluateRecord', '(', 'final', 'OIdentifiable', 'iRecord', ',', 'ODocument', 'iCurrentResult', ',', 'final', 'OSQLFilterCondition', 'iCondition', ',', 'final', 'Object', 'iLeft', ',', 'final', 'Object', 'iRight', ',', 'OCommandContext', 'iContext', ',', 'final', 'ODocumentSerializer', 'serializer', ')', '{', 'if', '(', 'iLeft', '==', 'null', '||', 'iRight', '==', 'null', ')', 'return', 'false', ';', 'return', 'iLeft', '.', 'toString', '(', ')', '.', 'indexOf', '(', 'iRight', '.', 'toString', '(', ')', ')', '>', '-', '1', ';', '}']",This is executed on non-indexed fields.,"['This', 'is', 'executed', 'on', 'non', '-', 'indexed', 'fields', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/sql/operator/OQueryOperatorContainsText.java#L69-L76,test
real-logic/aeron,aeron-archive/src/main/java/io/aeron/archive/client/ControlResponsePoller.java,ControlResponsePoller.poll,"public int poll()
    {
        controlSessionId = -1;
        correlationId = -1;
        relevantId = -1;
        templateId = -1;
        errorMessage = null;
        pollComplete = false;

        return subscription.controlledPoll(fragmentAssembler, fragmentLimit);
    }",java,"public int poll()
    {
        controlSessionId = -1;
        correlationId = -1;
        relevantId = -1;
        templateId = -1;
        errorMessage = null;
        pollComplete = false;

        return subscription.controlledPoll(fragmentAssembler, fragmentLimit);
    }","['public', 'int', 'poll', '(', ')', '{', 'controlSessionId', '=', '-', '1', ';', 'correlationId', '=', '-', '1', ';', 'relevantId', '=', '-', '1', ';', 'templateId', '=', '-', '1', ';', 'errorMessage', '=', 'null', ';', 'pollComplete', '=', 'false', ';', 'return', 'subscription', '.', 'controlledPoll', '(', 'fragmentAssembler', ',', 'fragmentLimit', ')', ';', '}']","Poll for control response events.

@return the number of fragments read during the operation. Zero if no events are available.","['Poll', 'for', 'control', 'response', 'events', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-archive/src/main/java/io/aeron/archive/client/ControlResponsePoller.java#L88-L98,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagFileProcessor.java,TagFileProcessor.parseTagFileDirectives,"public static TagInfo parseTagFileDirectives(ParserController pc,
						 String name,
						 String path,
						 TagLibraryInfo tagLibInfo)
                        throws JasperException {

        ErrorDispatcher err = pc.getCompiler().getErrorDispatcher();

        Node.Nodes page = null;
        try {
            page = pc.parseTagFileDirectives(path);
        } catch (FileNotFoundException e) {
            err.jspError(""jsp.error.file.not.found"", path);
        } catch (IOException e) {
            err.jspError(""jsp.error.file.not.found"", path);
        }

        TagFileDirectiveVisitor tagFileVisitor
            = new TagFileDirectiveVisitor(pc.getCompiler(), tagLibInfo, name,
                                          path);
        page.visit(tagFileVisitor);
        tagFileVisitor.postCheck();

        return tagFileVisitor.getTagInfo();
    }",java,"public static TagInfo parseTagFileDirectives(ParserController pc,
						 String name,
						 String path,
						 TagLibraryInfo tagLibInfo)
                        throws JasperException {

        ErrorDispatcher err = pc.getCompiler().getErrorDispatcher();

        Node.Nodes page = null;
        try {
            page = pc.parseTagFileDirectives(path);
        } catch (FileNotFoundException e) {
            err.jspError(""jsp.error.file.not.found"", path);
        } catch (IOException e) {
            err.jspError(""jsp.error.file.not.found"", path);
        }

        TagFileDirectiveVisitor tagFileVisitor
            = new TagFileDirectiveVisitor(pc.getCompiler(), tagLibInfo, name,
                                          path);
        page.visit(tagFileVisitor);
        tagFileVisitor.postCheck();

        return tagFileVisitor.getTagInfo();
    }","['public', 'static', 'TagInfo', 'parseTagFileDirectives', '(', 'ParserController', 'pc', ',', 'String', 'name', ',', 'String', 'path', ',', 'TagLibraryInfo', 'tagLibInfo', ')', 'throws', 'JasperException', '{', 'ErrorDispatcher', 'err', '=', 'pc', '.', 'getCompiler', '(', ')', '.', 'getErrorDispatcher', '(', ')', ';', 'Node', '.', 'Nodes', 'page', '=', 'null', ';', 'try', '{', 'page', '=', 'pc', '.', 'parseTagFileDirectives', '(', 'path', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'err', '.', 'jspError', '(', '""jsp.error.file.not.found""', ',', 'path', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'err', '.', 'jspError', '(', '""jsp.error.file.not.found""', ',', 'path', ')', ';', '}', 'TagFileDirectiveVisitor', 'tagFileVisitor', '=', 'new', 'TagFileDirectiveVisitor', '(', 'pc', '.', 'getCompiler', '(', ')', ',', 'tagLibInfo', ',', 'name', ',', 'path', ')', ';', 'page', '.', 'visit', '(', 'tagFileVisitor', ')', ';', 'tagFileVisitor', '.', 'postCheck', '(', ')', ';', 'return', 'tagFileVisitor', '.', 'getTagInfo', '(', ')', ';', '}']","Parses the tag file, and collects information on the directives included
in it.  The method is used to obtain the info on the tag file, when the
handler that it represents is referenced.  The tag file is not compiled
here.

@param pc the current ParserController used in this compilation
@param name the tag name as specified in the TLD
@param tagfile the path for the tagfile
@param tagLibInfo the TagLibraryInfo object associated with this TagInfo
@return a TagInfo object assembled from the directives in the tag file.","['Parses', 'the', 'tag', 'file', 'and', 'collects', 'information', 'on', 'the', 'directives', 'included', 'in', 'it', '.', 'The', 'method', 'is', 'used', 'to', 'obtain', 'the', 'info', 'on', 'the', 'tag', 'file', 'when', 'the', 'handler', 'that', 'it', 'represents', 'is', 'referenced', '.', 'The', 'tag', 'file', 'is', 'not', 'compiled', 'here', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/TagFileProcessor.java#L578-L602,test
streamsets/datacollector,hive-protolib/src/main/java/com/streamsets/pipeline/stage/lib/hive/HiveQueryExecutor.java,HiveQueryExecutor.executeAlterTableAddPartitionQuery,"public void executeAlterTableAddPartitionQuery(
      String qualifiedTableName,
      LinkedHashMap<String, String> partitionNameValueMap,
      Map<String, HiveTypeInfo> partitionTypeMap,
      String partitionPath
  ) throws StageException {
    String sql = buildPartitionAdditionQuery(qualifiedTableName, partitionNameValueMap, partitionTypeMap, partitionPath);
    execute(sql);
  }",java,"public void executeAlterTableAddPartitionQuery(
      String qualifiedTableName,
      LinkedHashMap<String, String> partitionNameValueMap,
      Map<String, HiveTypeInfo> partitionTypeMap,
      String partitionPath
  ) throws StageException {
    String sql = buildPartitionAdditionQuery(qualifiedTableName, partitionNameValueMap, partitionTypeMap, partitionPath);
    execute(sql);
  }","['public', 'void', 'executeAlterTableAddPartitionQuery', '(', 'String', 'qualifiedTableName', ',', 'LinkedHashMap', '<', 'String', ',', 'String', '>', 'partitionNameValueMap', ',', 'Map', '<', 'String', ',', 'HiveTypeInfo', '>', 'partitionTypeMap', ',', 'String', 'partitionPath', ')', 'throws', 'StageException', '{', 'String', 'sql', '=', 'buildPartitionAdditionQuery', '(', 'qualifiedTableName', ',', 'partitionNameValueMap', ',', 'partitionTypeMap', ',', 'partitionPath', ')', ';', 'execute', '(', 'sql', ')', ';', '}']","Add a new partition to the given table, with optional custom location.
@param qualifiedTableName Table name in the form `database`.`table`.
@param partitionNameValueMap Map between partition column names and their values.
@param partitionTypeMap Map between partition column names and their types.
@param partitionPath Location in the Hadoop filesystem where the partition will be created. If null, the default
location will be used.","['Add', 'a', 'new', 'partition', 'to', 'the', 'given', 'table', 'with', 'optional', 'custom', 'location', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/hive-protolib/src/main/java/com/streamsets/pipeline/stage/lib/hive/HiveQueryExecutor.java#L389-L397,test
abmargb/jamppa,src/main/java/org/jivesoftware/smack/util/collections/AbstractReferenceMap.java,AbstractReferenceMap.values,"public Collection<V> values() {
        if (values == null) {
            values = new ReferenceValues<K, V>(this);
        }
        return values;
    }",java,"public Collection<V> values() {
        if (values == null) {
            values = new ReferenceValues<K, V>(this);
        }
        return values;
    }","['public', 'Collection', '<', 'V', '>', 'values', '(', ')', '{', 'if', '(', 'values', '==', 'null', ')', '{', 'values', '=', 'new', 'ReferenceValues', '<', 'K', ',', 'V', '>', '(', 'this', ')', ';', '}', 'return', 'values', ';', '}']","Returns a collection view of this map's values.

@return a set view of this map's values","['Returns', 'a', 'collection', 'view', 'of', 'this', 'map', 's', 'values', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/util/collections/AbstractReferenceMap.java#L342-L347,test
liveontologies/elk-reasoner,elk-ore-parent/elk-ore/src/main/java/org/semanticweb/elk/ore/OreTaxonomyPrinter.java,OreTaxonomyPrinter.printDeclarations,"protected static void printDeclarations(Taxonomy<ElkClass> classTaxonomy,
			ElkObject.Factory objectFactory, Appendable writer)
			throws IOException {

		List<ElkClass> classes = new ArrayList<ElkClass>(classTaxonomy
				.getNodes().size() * 2);

		for (TaxonomyNode<ElkClass> classNode : classTaxonomy.getNodes()) {
			for (ElkClass clazz : classNode) {
				if (!clazz.getIri().equals(PredefinedElkIris.OWL_THING)
						&& !clazz.getIri()
								.equals(PredefinedElkIris.OWL_NOTHING)) {
					classes.add(clazz);

				}
			}
		}

		Collections.sort(classes, CLASS_COMPARATOR);

		for (ElkClass clazz : classes) {
			ElkDeclarationAxiom decl = objectFactory.getDeclarationAxiom(clazz);
			OwlFunctionalStylePrinter.append(writer, decl, true);
			writer.append('\n');
		}
	}",java,"protected static void printDeclarations(Taxonomy<ElkClass> classTaxonomy,
			ElkObject.Factory objectFactory, Appendable writer)
			throws IOException {

		List<ElkClass> classes = new ArrayList<ElkClass>(classTaxonomy
				.getNodes().size() * 2);

		for (TaxonomyNode<ElkClass> classNode : classTaxonomy.getNodes()) {
			for (ElkClass clazz : classNode) {
				if (!clazz.getIri().equals(PredefinedElkIris.OWL_THING)
						&& !clazz.getIri()
								.equals(PredefinedElkIris.OWL_NOTHING)) {
					classes.add(clazz);

				}
			}
		}

		Collections.sort(classes, CLASS_COMPARATOR);

		for (ElkClass clazz : classes) {
			ElkDeclarationAxiom decl = objectFactory.getDeclarationAxiom(clazz);
			OwlFunctionalStylePrinter.append(writer, decl, true);
			writer.append('\n');
		}
	}","['protected', 'static', 'void', 'printDeclarations', '(', 'Taxonomy', '<', 'ElkClass', '>', 'classTaxonomy', ',', 'ElkObject', '.', 'Factory', 'objectFactory', ',', 'Appendable', 'writer', ')', 'throws', 'IOException', '{', 'List', '<', 'ElkClass', '>', 'classes', '=', 'new', 'ArrayList', '<', 'ElkClass', '>', '(', 'classTaxonomy', '.', 'getNodes', '(', ')', '.', 'size', '(', ')', '*', '2', ')', ';', 'for', '(', 'TaxonomyNode', '<', 'ElkClass', '>', 'classNode', ':', 'classTaxonomy', '.', 'getNodes', '(', ')', ')', '{', 'for', '(', 'ElkClass', 'clazz', ':', 'classNode', ')', '{', 'if', '(', '!', 'clazz', '.', 'getIri', '(', ')', '.', 'equals', '(', 'PredefinedElkIris', '.', 'OWL_THING', ')', '&&', '!', 'clazz', '.', 'getIri', '(', ')', '.', 'equals', '(', 'PredefinedElkIris', '.', 'OWL_NOTHING', ')', ')', '{', 'classes', '.', 'add', '(', 'clazz', ')', ';', '}', '}', '}', 'Collections', '.', 'sort', '(', 'classes', ',', 'CLASS_COMPARATOR', ')', ';', 'for', '(', 'ElkClass', 'clazz', ':', 'classes', ')', '{', 'ElkDeclarationAxiom', 'decl', '=', 'objectFactory', '.', 'getDeclarationAxiom', '(', 'clazz', ')', ';', 'OwlFunctionalStylePrinter', '.', 'append', '(', 'writer', ',', 'decl', ',', 'true', ')', ';', 'writer', '.', 'append', '(', ""'"", ""'"", ')', ';', '}', '}']","Prints class declarations

@param classTaxonomy
@param objectFactory
@param writer
@throws IOException","['Prints', 'class', 'declarations']",cfbe5279a57e0433d45c1676c7658ddb6e29b9eb,https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-ore-parent/elk-ore/src/main/java/org/semanticweb/elk/ore/OreTaxonomyPrinter.java#L165-L190,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/core/DroolsDebugTarget.java,DroolsDebugTarget.getDroolsBreakpoint,"public DroolsLineBreakpoint getDroolsBreakpoint(String source) {

        if ( source == null ) {
            return null;
        }

        Iterator<IBreakpoint> iterator = getBreakpoints().iterator();
        while ( iterator.hasNext() ) {
            IJavaBreakpoint element = (IJavaBreakpoint) iterator.next();
            if ( element instanceof DroolsLineBreakpoint && ((DroolsLineBreakpoint) element).getDialectName().equals( ""mvel"" ) ) {
                DroolsLineBreakpoint l = (DroolsLineBreakpoint) element;
                try {

                    int matchLine = l.getLineNumber();
                    String matchSource = l.getRuleName();

                    if ( source.equals( matchSource ) || l.getFileRuleMappings().containsKey( source ) ) {
                        return l;
                    }

                } catch ( CoreException e ) {
                    logError( e );
                }
            }
        }

        return null;
    }",java,"public DroolsLineBreakpoint getDroolsBreakpoint(String source) {

        if ( source == null ) {
            return null;
        }

        Iterator<IBreakpoint> iterator = getBreakpoints().iterator();
        while ( iterator.hasNext() ) {
            IJavaBreakpoint element = (IJavaBreakpoint) iterator.next();
            if ( element instanceof DroolsLineBreakpoint && ((DroolsLineBreakpoint) element).getDialectName().equals( ""mvel"" ) ) {
                DroolsLineBreakpoint l = (DroolsLineBreakpoint) element;
                try {

                    int matchLine = l.getLineNumber();
                    String matchSource = l.getRuleName();

                    if ( source.equals( matchSource ) || l.getFileRuleMappings().containsKey( source ) ) {
                        return l;
                    }

                } catch ( CoreException e ) {
                    logError( e );
                }
            }
        }

        return null;
    }","['public', 'DroolsLineBreakpoint', 'getDroolsBreakpoint', '(', 'String', 'source', ')', '{', 'if', '(', 'source', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'Iterator', '<', 'IBreakpoint', '>', 'iterator', '=', 'getBreakpoints', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'iterator', '.', 'hasNext', '(', ')', ')', '{', 'IJavaBreakpoint', 'element', '=', '(', 'IJavaBreakpoint', ')', 'iterator', '.', 'next', '(', ')', ';', 'if', '(', 'element', 'instanceof', 'DroolsLineBreakpoint', '&&', '(', '(', 'DroolsLineBreakpoint', ')', 'element', ')', '.', 'getDialectName', '(', ')', '.', 'equals', '(', '""mvel""', ')', ')', '{', 'DroolsLineBreakpoint', 'l', '=', '(', 'DroolsLineBreakpoint', ')', 'element', ';', 'try', '{', 'int', 'matchLine', '=', 'l', '.', 'getLineNumber', '(', ')', ';', 'String', 'matchSource', '=', 'l', '.', 'getRuleName', '(', ')', ';', 'if', '(', 'source', '.', 'equals', '(', 'matchSource', ')', '||', 'l', '.', 'getFileRuleMappings', '(', ')', '.', 'containsKey', '(', 'source', ')', ')', '{', 'return', 'l', ';', '}', '}', 'catch', '(', 'CoreException', 'e', ')', '{', 'logError', '(', 'e', ')', ';', '}', '}', '}', 'return', 'null', ';', '}']","Tries to find a match for the provided breakpoint information from the list of registered breakpoints.
For stepping and possibly other purposes it returns also a breakpoint for cases where exactly the same line was not found.

If breakpoint is not found for <code>line</code> at <code>source</code> then it takes the first line that is above the
specified line at the same file.

@param source
@param line
@return","['Tries', 'to', 'find', 'a', 'match', 'for', 'the', 'provided', 'breakpoint', 'information', 'from', 'the', 'list', 'of', 'registered', 'breakpoints', '.', 'For', 'stepping', 'and', 'possibly', 'other', 'purposes', 'it', 'returns', 'also', 'a', 'breakpoint', 'for', 'cases', 'where', 'exactly', 'the', 'same', 'line', 'was', 'not', 'found', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/debug/core/DroolsDebugTarget.java#L811-L838,test
boonproject/boon,boon/src/main/java/org/boon/sort/Ordering.java,Ordering.lastOf,"public static <T> T lastOf( List<T> list, Sort... sorts ) {

        if (list.size()>1) {
            Sorting.sort(list, sorts);

            return list.get(list.size()-1);
        } else {
            return null;
        }
    }",java,"public static <T> T lastOf( List<T> list, Sort... sorts ) {

        if (list.size()>1) {
            Sorting.sort(list, sorts);

            return list.get(list.size()-1);
        } else {
            return null;
        }
    }","['public', 'static', '<', 'T', '>', 'T', 'lastOf', '(', 'List', '<', 'T', '>', 'list', ',', 'Sort', '...', 'sorts', ')', '{', 'if', '(', 'list', '.', 'size', '(', ')', '>', '1', ')', '{', 'Sorting', '.', 'sort', '(', 'list', ',', 'sorts', ')', ';', 'return', 'list', '.', 'get', '(', 'list', '.', 'size', '(', ')', '-', '1', ')', ';', '}', 'else', '{', 'return', 'null', ';', '}', '}']","Grabs the last items after the sort.
@param list
@param sorts
@param <T>
@return","['Grabs', 'the', 'last', 'items', 'after', 'the', 'sort', '.']",9bc6870dbe5dd58c45c18d8edb493e8efc089463,https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/sort/Ordering.java#L174-L183,test
Unidata/thredds,ui/src/main/java/thredds/logs/LogCategorizer.java,LogCategorizer.getServiceSpecial,"static public String getServiceSpecial(String path) {
    String ss = null;
    if (path.startsWith(""/dqcServlet""))
      ss = ""dqcServlet"";
    else if (path.startsWith(""/cdmvalidator""))
      ss = ""cdmvalidator"";
    return ss;
  }",java,"static public String getServiceSpecial(String path) {
    String ss = null;
    if (path.startsWith(""/dqcServlet""))
      ss = ""dqcServlet"";
    else if (path.startsWith(""/cdmvalidator""))
      ss = ""cdmvalidator"";
    return ss;
  }","['static', 'public', 'String', 'getServiceSpecial', '(', 'String', 'path', ')', '{', 'String', 'ss', '=', 'null', ';', 'if', '(', 'path', '.', 'startsWith', '(', '""/dqcServlet""', ')', ')', 'ss', '=', '""dqcServlet""', ';', 'else', 'if', '(', 'path', '.', 'startsWith', '(', '""/cdmvalidator""', ')', ')', 'ss', '=', '""cdmvalidator""', ';', 'return', 'ss', ';', '}']",the ones that dont start with thredds,"['the', 'ones', 'that', 'dont', 'start', 'with', 'thredds']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/thredds/logs/LogCategorizer.java#L220-L227,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/geoloc/Rubberband.java,Rubberband.getBounds,"public Rectangle getBounds() {
    return new Rectangle(stretchedPt.x < anchorPt.x ?
                         stretchedPt.x : anchorPt.x,
                         stretchedPt.y < anchorPt.y ?
                         stretchedPt.y : anchorPt.y,
                         Math.abs(stretchedPt.x - anchorPt.x),
                         Math.abs(stretchedPt.y - anchorPt.y));
  }",java,"public Rectangle getBounds() {
    return new Rectangle(stretchedPt.x < anchorPt.x ?
                         stretchedPt.x : anchorPt.x,
                         stretchedPt.y < anchorPt.y ?
                         stretchedPt.y : anchorPt.y,
                         Math.abs(stretchedPt.x - anchorPt.x),
                         Math.abs(stretchedPt.y - anchorPt.y));
  }","['public', 'Rectangle', 'getBounds', '(', ')', '{', 'return', 'new', 'Rectangle', '(', 'stretchedPt', '.', 'x', '<', 'anchorPt', '.', 'x', '?', 'stretchedPt', '.', 'x', ':', 'anchorPt', '.', 'x', ',', 'stretchedPt', '.', 'y', '<', 'anchorPt', '.', 'y', '?', 'stretchedPt', '.', 'y', ':', 'anchorPt', '.', 'y', ',', 'Math', '.', 'abs', '(', 'stretchedPt', '.', 'x', '-', 'anchorPt', '.', 'x', ')', ',', 'Math', '.', 'abs', '(', 'stretchedPt', '.', 'y', '-', 'anchorPt', '.', 'y', ')', ')', ';', '}']",Get current Bounds,"['Get', 'current', 'Bounds']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/geoloc/Rubberband.java#L145-L152,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/proxetta/ProxettaFactory.java,ProxettaFactory.setTarget,"public T setTarget(final Class target) {
		assertTargetIsNotDefined();

		try {
			targetInputStream = ClassLoaderUtil.getClassAsStream(target);
			if (targetInputStream == null) {
				throw new ProxettaException(""Target class not found: "" + target.getName());
			}
			targetClass = target;
			targetClassName = target.getName();
		}
		catch (IOException ioex) {
			StreamUtil.close(targetInputStream);
			throw new ProxettaException(""Unable to stream class: "" + target.getName(), ioex);
		}
		return _this();
	}",java,"public T setTarget(final Class target) {
		assertTargetIsNotDefined();

		try {
			targetInputStream = ClassLoaderUtil.getClassAsStream(target);
			if (targetInputStream == null) {
				throw new ProxettaException(""Target class not found: "" + target.getName());
			}
			targetClass = target;
			targetClassName = target.getName();
		}
		catch (IOException ioex) {
			StreamUtil.close(targetInputStream);
			throw new ProxettaException(""Unable to stream class: "" + target.getName(), ioex);
		}
		return _this();
	}","['public', 'T', 'setTarget', '(', 'final', 'Class', 'target', ')', '{', 'assertTargetIsNotDefined', '(', ')', ';', 'try', '{', 'targetInputStream', '=', 'ClassLoaderUtil', '.', 'getClassAsStream', '(', 'target', ')', ';', 'if', '(', 'targetInputStream', '==', 'null', ')', '{', 'throw', 'new', 'ProxettaException', '(', '""Target class not found: ""', '+', 'target', '.', 'getName', '(', ')', ')', ';', '}', 'targetClass', '=', 'target', ';', 'targetClassName', '=', 'target', '.', 'getName', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioex', ')', '{', 'StreamUtil', '.', 'close', '(', 'targetInputStream', ')', ';', 'throw', 'new', 'ProxettaException', '(', '""Unable to stream class: ""', '+', 'target', '.', 'getName', '(', ')', ',', 'ioex', ')', ';', '}', 'return', '_this', '(', ')', ';', '}']",Defines class as a target.,"['Defines', 'class', 'as', 'a', 'target', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/proxetta/ProxettaFactory.java#L138-L154,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/storage/fs/OFileClassic.java,OFileClassic.replaceContentWith,"public void replaceContentWith(final Path newContentFile) throws IOException {
    acquireWriteLock();
    try {
      close();

      Files.copy(newContentFile, osFile, StandardCopyOption.REPLACE_EXISTING);

      open();
    } finally {
      releaseWriteLock();
    }
  }",java,"public void replaceContentWith(final Path newContentFile) throws IOException {
    acquireWriteLock();
    try {
      close();

      Files.copy(newContentFile, osFile, StandardCopyOption.REPLACE_EXISTING);

      open();
    } finally {
      releaseWriteLock();
    }
  }","['public', 'void', 'replaceContentWith', '(', 'final', 'Path', 'newContentFile', ')', 'throws', 'IOException', '{', 'acquireWriteLock', '(', ')', ';', 'try', '{', 'close', '(', ')', ';', 'Files', '.', 'copy', '(', 'newContentFile', ',', 'osFile', ',', 'StandardCopyOption', '.', 'REPLACE_EXISTING', ')', ';', 'open', '(', ')', ';', '}', 'finally', '{', 'releaseWriteLock', '(', ')', ';', '}', '}']","Replaces the file content with the content of the provided file.

@param newContentFile the new content file to replace the content with.","['Replaces', 'the', 'file', 'content', 'with', 'the', 'content', 'of', 'the', 'provided', 'file', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/storage/fs/OFileClassic.java#L933-L944,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/gis/SpatialGrid.java,SpatialGrid.distanceSq,"private double distanceSq( Point2D pt, int indexX, int indexY) {
    if ((indexX < 0) || (indexX >= countX) || (indexY < 0) || (indexY >= countY)) // outside bounding box
      return MAX_DOUBLE;

      GridCell gtest = gridArray[indexY][indexX];
      if (!gtest.used)    // nothing in this cell
        return MAX_DOUBLE;

        // get distance from center of cell
      Rectangle2D rect = gtest.objectBB;
      double dx = rect.getX()+rect.getWidth()/2 - pt.getX();
      double dy = rect.getY()+rect.getHeight()/2 - pt.getY();
      return (dx*dx + dy*dy);
    }",java,"private double distanceSq( Point2D pt, int indexX, int indexY) {
    if ((indexX < 0) || (indexX >= countX) || (indexY < 0) || (indexY >= countY)) // outside bounding box
      return MAX_DOUBLE;

      GridCell gtest = gridArray[indexY][indexX];
      if (!gtest.used)    // nothing in this cell
        return MAX_DOUBLE;

        // get distance from center of cell
      Rectangle2D rect = gtest.objectBB;
      double dx = rect.getX()+rect.getWidth()/2 - pt.getX();
      double dy = rect.getY()+rect.getHeight()/2 - pt.getY();
      return (dx*dx + dy*dy);
    }","['private', 'double', 'distanceSq', '(', 'Point2D', 'pt', ',', 'int', 'indexX', ',', 'int', 'indexY', ')', '{', 'if', '(', '(', 'indexX', '<', '0', ')', '||', '(', 'indexX', '>=', 'countX', ')', '||', '(', 'indexY', '<', '0', ')', '||', '(', 'indexY', '>=', 'countY', ')', ')', '// outside bounding box', 'return', 'MAX_DOUBLE', ';', 'GridCell', 'gtest', '=', 'gridArray', '[', 'indexY', ']', '[', 'indexX', ']', ';', 'if', '(', '!', 'gtest', '.', 'used', ')', '// nothing in this cell', 'return', 'MAX_DOUBLE', ';', '// get distance from center of cell', 'Rectangle2D', 'rect', '=', 'gtest', '.', 'objectBB', ';', 'double', 'dx', '=', 'rect', '.', 'getX', '(', ')', '+', 'rect', '.', 'getWidth', '(', ')', '/', '2', '-', 'pt', '.', 'getX', '(', ')', ';', 'double', 'dy', '=', 'rect', '.', 'getY', '(', ')', '+', 'rect', '.', 'getHeight', '(', ')', '/', '2', '-', 'pt', '.', 'getY', '(', ')', ';', 'return', '(', 'dx', '*', 'dx', '+', 'dy', '*', 'dy', ')', ';', '}']","if out of bbox or cell not marked, return MAX_DOUBLE","['if', 'out', 'of', 'bbox', 'or', 'cell', 'not', 'marked', 'return', 'MAX_DOUBLE']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/gis/SpatialGrid.java#L237-L250,test
oblac/jodd,jodd-core/src/main/java/jodd/io/NetUtil.java,NetUtil.validateAgaintIPAdressV4Format,"public static boolean validateAgaintIPAdressV4Format(final String input) {
		if (input == null) {
			return false;
		}

		int hitDots = 0;
		char[] data = input.toCharArray();
		for (int i = 0; i < data.length; i++) {
			char c = data[i];
			int b = 0;
			do {
				if (c < '0' || c > '9') {
					return false;
				}
				b = (b * 10 + c) - 48;
				if (++i >= data.length) {
					break;
				}
				c = data[i];
			} while (c != '.');

			if (b > 255) {
				return false;
			}
			hitDots++;
		}

		return hitDots == 4;
	}",java,"public static boolean validateAgaintIPAdressV4Format(final String input) {
		if (input == null) {
			return false;
		}

		int hitDots = 0;
		char[] data = input.toCharArray();
		for (int i = 0; i < data.length; i++) {
			char c = data[i];
			int b = 0;
			do {
				if (c < '0' || c > '9') {
					return false;
				}
				b = (b * 10 + c) - 48;
				if (++i >= data.length) {
					break;
				}
				c = data[i];
			} while (c != '.');

			if (b > 255) {
				return false;
			}
			hitDots++;
		}

		return hitDots == 4;
	}","['public', 'static', 'boolean', 'validateAgaintIPAdressV4Format', '(', 'final', 'String', 'input', ')', '{', 'if', '(', 'input', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'int', 'hitDots', '=', '0', ';', 'char', '[', ']', 'data', '=', 'input', '.', 'toCharArray', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'data', '.', 'length', ';', 'i', '++', ')', '{', 'char', 'c', '=', 'data', '[', 'i', ']', ';', 'int', 'b', '=', '0', ';', 'do', '{', 'if', '(', 'c', '<', ""'"", ""'"", '||', 'c', '>', ""'"", ""'"", ')', '{', 'return', 'false', ';', '}', 'b', '=', '(', 'b', '*', '10', '+', 'c', ')', '-', '48', ';', 'if', '(', '++', 'i', '>=', 'data', '.', 'length', ')', '{', 'break', ';', '}', 'c', '=', 'data', '[', 'i', ']', ';', '}', 'while', '(', 'c', '!=', ""'"", ""'"", ')', ';', 'if', '(', 'b', '>', '255', ')', '{', 'return', 'false', ';', '}', 'hitDots', '++', ';', '}', 'return', 'hitDots', '==', '4', ';', '}']","Checks given string against IP address v4 format.

@param input an ip address - may be null
@return <tt>true</tt> if param has a valid ip v4 format <tt>false</tt> otherwise
@see <a href=""https://en.wikipedia.org/wiki/IP_address#IPv4_addresses"">ip address v4</a>","['Checks', 'given', 'string', 'against', 'IP', 'address', 'v4', 'format', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/NetUtil.java#L108-L136,test
oblac/jodd,jodd-http/src/main/java/jodd/http/HeadersMultiMap.java,HeadersMultiMap.addHeader,"public void addHeader(final String name, final String value) {
		List<String> valuesList = super.getAll(name);
		if (valuesList.isEmpty()) {
			super.add(name, value);
			return;
		}
		super.remove(name);
		valuesList.add(value);
		super.addAll(name, valuesList);
	}",java,"public void addHeader(final String name, final String value) {
		List<String> valuesList = super.getAll(name);
		if (valuesList.isEmpty()) {
			super.add(name, value);
			return;
		}
		super.remove(name);
		valuesList.add(value);
		super.addAll(name, valuesList);
	}","['public', 'void', 'addHeader', '(', 'final', 'String', 'name', ',', 'final', 'String', 'value', ')', '{', 'List', '<', 'String', '>', 'valuesList', '=', 'super', '.', 'getAll', '(', 'name', ')', ';', 'if', '(', 'valuesList', '.', 'isEmpty', '(', ')', ')', '{', 'super', '.', 'add', '(', 'name', ',', 'value', ')', ';', 'return', ';', '}', 'super', '.', 'remove', '(', 'name', ')', ';', 'valuesList', '.', 'add', '(', 'value', ')', ';', 'super', '.', 'addAll', '(', 'name', ',', 'valuesList', ')', ';', '}']","Adds new header value. If existing value exist, it will be removed
so the store the new key value.","['Adds', 'new', 'header', 'value', '.', 'If', 'existing', 'value', 'exist', 'it', 'will', 'be', 'removed', 'so', 'the', 'store', 'the', 'new', 'key', 'value', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-http/src/main/java/jodd/http/HeadersMultiMap.java#L40-L49,test
amedia/meteo,meteo-core/src/main/java/no/api/meteo/entity/core/service/sunrise/SunriseDate.java,SunriseDate.isSun,"public boolean isSun(ZonedDateTime currentDate) {
        if (getSun().getNeverRise()) {
            return false;
        } else if (getSun().getNeverSet()) {
            return true;
        }
        return timeWithinPeriod(currentDate);
    }",java,"public boolean isSun(ZonedDateTime currentDate) {
        if (getSun().getNeverRise()) {
            return false;
        } else if (getSun().getNeverSet()) {
            return true;
        }
        return timeWithinPeriod(currentDate);
    }","['public', 'boolean', 'isSun', '(', 'ZonedDateTime', 'currentDate', ')', '{', 'if', '(', 'getSun', '(', ')', '.', 'getNeverRise', '(', ')', ')', '{', 'return', 'false', ';', '}', 'else', 'if', '(', 'getSun', '(', ')', '.', 'getNeverSet', '(', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'timeWithinPeriod', '(', 'currentDate', ')', ';', '}']","Check if the sun is shining for a given time.

@param currentDate
The time (date) to be checked.

@return <code>true</code> if the sun has raised, else <code>false</code>.","['Check', 'if', 'the', 'sun', 'is', 'shining', 'for', 'a', 'given', 'time', '.']",cbb59e1c2f889d15c24f3625d1769b543d4af595,https://github.com/amedia/meteo/blob/cbb59e1c2f889d15c24f3625d1769b543d4af595/meteo-core/src/main/java/no/api/meteo/entity/core/service/sunrise/SunriseDate.java#L71-L78,test
moparisthebest/aptIn16,apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java,DeclarationFilter.getFilter,"public static DeclarationFilter getFilter(
			final Collection<Modifier> mods) {
		return new DeclarationFilter() {
			public boolean matches(Declaration d) {
				return d.getModifiers().containsAll(mods);
			}
		};
	}",java,"public static DeclarationFilter getFilter(
			final Collection<Modifier> mods) {
		return new DeclarationFilter() {
			public boolean matches(Declaration d) {
				return d.getModifiers().containsAll(mods);
			}
		};
	}","['public', 'static', 'DeclarationFilter', 'getFilter', '(', 'final', 'Collection', '<', 'Modifier', '>', 'mods', ')', '{', 'return', 'new', 'DeclarationFilter', '(', ')', '{', 'public', 'boolean', 'matches', '(', 'Declaration', 'd', ')', '{', 'return', 'd', '.', 'getModifiers', '(', ')', '.', 'containsAll', '(', 'mods', ')', ';', '}', '}', ';', '}']","Returns a filter that selects declarations containing all of a
collection of modifiers.

@param mods the modifiers to match (non-null)
@return a filter that matches declarations containing <tt>mods</tt>","['Returns', 'a', 'filter', 'that', 'selects', 'declarations', 'containing', 'all', 'of', 'a', 'collection', 'of', 'modifiers', '.']",de38f7add09e69cb5ff970d1bada079a162358e7,https://github.com/moparisthebest/aptIn16/blob/de38f7add09e69cb5ff970d1bada079a162358e7/apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java#L137-L144,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/Variable.java,Variable._read,"protected Array _read(Section section) throws IOException, InvalidRangeException {
    // check if its really a full read
    if ((null == section) || section.computeSize() == getSize())
      return _read();

    // full read was cached
    if (isCaching()) {
      if (cache.data == null) {
        setCachedData(_read()); // read and cache entire array
        if (debugCaching) System.out.println(""cache "" + getFullName());
      }
      if (debugCaching) System.out.println(""got data from cache "" + getFullName());
      return cache.data.sectionNoReduce(section.getRanges()).copy(); // subset it, return copy
    }

    return proxyReader.reallyRead(this, section, null);
  }",java,"protected Array _read(Section section) throws IOException, InvalidRangeException {
    // check if its really a full read
    if ((null == section) || section.computeSize() == getSize())
      return _read();

    // full read was cached
    if (isCaching()) {
      if (cache.data == null) {
        setCachedData(_read()); // read and cache entire array
        if (debugCaching) System.out.println(""cache "" + getFullName());
      }
      if (debugCaching) System.out.println(""got data from cache "" + getFullName());
      return cache.data.sectionNoReduce(section.getRanges()).copy(); // subset it, return copy
    }

    return proxyReader.reallyRead(this, section, null);
  }","['protected', 'Array', '_read', '(', 'Section', 'section', ')', 'throws', 'IOException', ',', 'InvalidRangeException', '{', '// check if its really a full read', 'if', '(', '(', 'null', '==', 'section', ')', '||', 'section', '.', 'computeSize', '(', ')', '==', 'getSize', '(', ')', ')', 'return', '_read', '(', ')', ';', '// full read was cached', 'if', '(', 'isCaching', '(', ')', ')', '{', 'if', '(', 'cache', '.', 'data', '==', 'null', ')', '{', 'setCachedData', '(', '_read', '(', ')', ')', ';', '// read and cache entire array', 'if', '(', 'debugCaching', ')', 'System', '.', 'out', '.', 'println', '(', '""cache ""', '+', 'getFullName', '(', ')', ')', ';', '}', 'if', '(', 'debugCaching', ')', 'System', '.', 'out', '.', 'println', '(', '""got data from cache ""', '+', 'getFullName', '(', ')', ')', ';', 'return', 'cache', '.', 'data', '.', 'sectionNoReduce', '(', 'section', '.', 'getRanges', '(', ')', ')', '.', 'copy', '(', ')', ';', '// subset it, return copy', '}', 'return', 'proxyReader', '.', 'reallyRead', '(', 'this', ',', 'section', ',', 'null', ')', ';', '}']","assume filled, validated Section","['assume', 'filled', 'validated', 'Section']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/Variable.java#L793-L809,test
jboss/jboss-common-core,src/main/java/org/jboss/util/xml/XmlHelper.java,XmlHelper.getOptionalChildContent,"public static String getOptionalChildContent(Element element,
                                                String tagName)
      throws Exception
   {
      return getElementContent(getOptionalChild(element, tagName));
   }",java,"public static String getOptionalChildContent(Element element,
                                                String tagName)
      throws Exception
   {
      return getElementContent(getOptionalChild(element, tagName));
   }","['public', 'static', 'String', 'getOptionalChildContent', '(', 'Element', 'element', ',', 'String', 'tagName', ')', 'throws', 'Exception', '{', 'return', 'getElementContent', '(', 'getOptionalChild', '(', 'element', ',', 'tagName', ')', ')', ';', '}']","Macro to get the content of an optional child element.

@param element    The parent element.
@param tagName    The name of the desired child.
@return           The element content or null.
@throws Exception","['Macro', 'to', 'get', 'the', 'content', 'of', 'an', 'optional', 'child', 'element', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/XmlHelper.java#L214-L219,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java,Compiler.generateClass,"private void generateClass()
        throws FileNotFoundException, JasperException, Exception {

        long t1 = 0;
        if (log.isLoggable(Level.FINE)) {
            t1 = System.currentTimeMillis();
        }

        String javaFileName = ctxt.getServletJavaFileName();

        setJavaCompilerOptions();

        // Start java compilation
        JavacErrorDetail[] javacErrors =
            javaCompiler.compile(ctxt.getFullClassName(), pageNodes);

        if (javacErrors != null) {
            // If there are errors, always generate java files to disk.
            javaCompiler.doJavaFile(true);

            log.severe(""Error compiling file: "" + javaFileName);
            errDispatcher.javacError(javacErrors);
        }

        if (log.isLoggable(Level.FINE)) {
            long t2 = System.currentTimeMillis();
            log.fine(""Compiled "" + javaFileName + "" "" + (t2-t1) + ""ms"");
        }

        // Save or delete the generated Java files, depending on the
        // value of ""keepgenerated"" attribute
        javaCompiler.doJavaFile(ctxt.keepGenerated());

        // JSR45 Support
        if (!ctxt.isPrototypeMode() && !options.isSmapSuppressed()) {
            smapUtil.installSmap();
        }

        // START CR 6373479
        if (jsw != null && jsw.getServletClassLastModifiedTime() <= 0) {
            jsw.setServletClassLastModifiedTime(
                javaCompiler.getClassLastModified());
        }
        // END CR 6373479

        if (options.getSaveBytecode()) {
            javaCompiler.saveClassFile(ctxt.getFullClassName(),
                                       ctxt.getClassFileName());
        }

        // On some systems, due to file caching, the time stamp for the updated
        // JSP file may actually be greater than that of the newly created byte
        // codes in the cache.  In such cases, adjust the cache time stamp to
        // JSP page time, to avoid unnecessary recompilations.
        ctxt.getRuntimeContext().adjustBytecodeTime(ctxt.getFullClassName(),
                                                    jspModTime);
    }",java,"private void generateClass()
        throws FileNotFoundException, JasperException, Exception {

        long t1 = 0;
        if (log.isLoggable(Level.FINE)) {
            t1 = System.currentTimeMillis();
        }

        String javaFileName = ctxt.getServletJavaFileName();

        setJavaCompilerOptions();

        // Start java compilation
        JavacErrorDetail[] javacErrors =
            javaCompiler.compile(ctxt.getFullClassName(), pageNodes);

        if (javacErrors != null) {
            // If there are errors, always generate java files to disk.
            javaCompiler.doJavaFile(true);

            log.severe(""Error compiling file: "" + javaFileName);
            errDispatcher.javacError(javacErrors);
        }

        if (log.isLoggable(Level.FINE)) {
            long t2 = System.currentTimeMillis();
            log.fine(""Compiled "" + javaFileName + "" "" + (t2-t1) + ""ms"");
        }

        // Save or delete the generated Java files, depending on the
        // value of ""keepgenerated"" attribute
        javaCompiler.doJavaFile(ctxt.keepGenerated());

        // JSR45 Support
        if (!ctxt.isPrototypeMode() && !options.isSmapSuppressed()) {
            smapUtil.installSmap();
        }

        // START CR 6373479
        if (jsw != null && jsw.getServletClassLastModifiedTime() <= 0) {
            jsw.setServletClassLastModifiedTime(
                javaCompiler.getClassLastModified());
        }
        // END CR 6373479

        if (options.getSaveBytecode()) {
            javaCompiler.saveClassFile(ctxt.getFullClassName(),
                                       ctxt.getClassFileName());
        }

        // On some systems, due to file caching, the time stamp for the updated
        // JSP file may actually be greater than that of the newly created byte
        // codes in the cache.  In such cases, adjust the cache time stamp to
        // JSP page time, to avoid unnecessary recompilations.
        ctxt.getRuntimeContext().adjustBytecodeTime(ctxt.getFullClassName(),
                                                    jspModTime);
    }","['private', 'void', 'generateClass', '(', ')', 'throws', 'FileNotFoundException', ',', 'JasperException', ',', 'Exception', '{', 'long', 't1', '=', '0', ';', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINE', ')', ')', '{', 't1', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', '}', 'String', 'javaFileName', '=', 'ctxt', '.', 'getServletJavaFileName', '(', ')', ';', 'setJavaCompilerOptions', '(', ')', ';', '// Start java compilation', 'JavacErrorDetail', '[', ']', 'javacErrors', '=', 'javaCompiler', '.', 'compile', '(', 'ctxt', '.', 'getFullClassName', '(', ')', ',', 'pageNodes', ')', ';', 'if', '(', 'javacErrors', '!=', 'null', ')', '{', '// If there are errors, always generate java files to disk.', 'javaCompiler', '.', 'doJavaFile', '(', 'true', ')', ';', 'log', '.', 'severe', '(', '""Error compiling file: ""', '+', 'javaFileName', ')', ';', 'errDispatcher', '.', 'javacError', '(', 'javacErrors', ')', ';', '}', 'if', '(', 'log', '.', 'isLoggable', '(', 'Level', '.', 'FINE', ')', ')', '{', 'long', 't2', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'log', '.', 'fine', '(', '""Compiled ""', '+', 'javaFileName', '+', '"" ""', '+', '(', 't2', '-', 't1', ')', '+', '""ms""', ')', ';', '}', '// Save or delete the generated Java files, depending on the', '// value of ""keepgenerated"" attribute', 'javaCompiler', '.', 'doJavaFile', '(', 'ctxt', '.', 'keepGenerated', '(', ')', ')', ';', '// JSR45 Support', 'if', '(', '!', 'ctxt', '.', 'isPrototypeMode', '(', ')', '&&', '!', 'options', '.', 'isSmapSuppressed', '(', ')', ')', '{', 'smapUtil', '.', 'installSmap', '(', ')', ';', '}', '// START CR 6373479', 'if', '(', 'jsw', '!=', 'null', '&&', 'jsw', '.', 'getServletClassLastModifiedTime', '(', ')', '<=', '0', ')', '{', 'jsw', '.', 'setServletClassLastModifiedTime', '(', 'javaCompiler', '.', 'getClassLastModified', '(', ')', ')', ';', '}', '// END CR 6373479', 'if', '(', 'options', '.', 'getSaveBytecode', '(', ')', ')', '{', 'javaCompiler', '.', 'saveClassFile', '(', 'ctxt', '.', 'getFullClassName', '(', ')', ',', 'ctxt', '.', 'getClassFileName', '(', ')', ')', ';', '}', '// On some systems, due to file caching, the time stamp for the updated', '// JSP file may actually be greater than that of the newly created byte', '// codes in the cache.  In such cases, adjust the cache time stamp to', '// JSP page time, to avoid unnecessary recompilations.', 'ctxt', '.', 'getRuntimeContext', '(', ')', '.', 'adjustBytecodeTime', '(', 'ctxt', '.', 'getFullClassName', '(', ')', ',', 'jspModTime', ')', ';', '}']",Compile the servlet from .java file to .class file,"['Compile', 'the', 'servlet', 'from', '.', 'java', 'file', 'to', '.', 'class', 'file']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/Compiler.java#L371-L427,test
oblac/jodd,jodd-servlet/src/main/java/jodd/servlet/filter/GzipFilter.java,GzipFilter.isGzipEligible,"protected boolean isGzipEligible(final HttpServletRequest request) {
		// request parameter name

		if (requestParameterName.length() != 0) {
			String forceGzipString = request.getParameter(requestParameterName);

			if (forceGzipString != null) {
				return Converter.get().toBooleanValue(forceGzipString, false);
			}
		}

		// extract uri

		String uri = request.getRequestURI();

		if (uri == null) {
			return false;
		}

		uri = uri.toLowerCase();

		boolean result = false;

		// check uri

		if (matches == null) {					// match == *
			if (extensions == null) {			// extensions == *
				return true;
			}
			// extension
			String extension = FileNameUtil.getExtension(uri);

			if (extension.length() > 0) {
				extension = extension.toLowerCase();

				if (StringUtil.equalsOne(extension, extensions) != -1) {
					result = true;
				}
			}
		} else {
			if (wildcards) {
				result = Wildcard.matchPathOne(uri, matches) != -1;
			} else {
				for (String match : matches) {
					if (uri.contains(match)) {
						result = true;
						break;
					}
				}
			}
		}

		if ((result) && (excludes != null)) {
			if (wildcards) {
				if (Wildcard.matchPathOne(uri, excludes) != -1) {
					result = false;
				}
			} else {
				for (String exclude : excludes) {
					if (uri.contains(exclude)) {
						result = false;						// excludes founded
						break;
					}
				}
			}
		}

		return result;
	}",java,"protected boolean isGzipEligible(final HttpServletRequest request) {
		// request parameter name

		if (requestParameterName.length() != 0) {
			String forceGzipString = request.getParameter(requestParameterName);

			if (forceGzipString != null) {
				return Converter.get().toBooleanValue(forceGzipString, false);
			}
		}

		// extract uri

		String uri = request.getRequestURI();

		if (uri == null) {
			return false;
		}

		uri = uri.toLowerCase();

		boolean result = false;

		// check uri

		if (matches == null) {					// match == *
			if (extensions == null) {			// extensions == *
				return true;
			}
			// extension
			String extension = FileNameUtil.getExtension(uri);

			if (extension.length() > 0) {
				extension = extension.toLowerCase();

				if (StringUtil.equalsOne(extension, extensions) != -1) {
					result = true;
				}
			}
		} else {
			if (wildcards) {
				result = Wildcard.matchPathOne(uri, matches) != -1;
			} else {
				for (String match : matches) {
					if (uri.contains(match)) {
						result = true;
						break;
					}
				}
			}
		}

		if ((result) && (excludes != null)) {
			if (wildcards) {
				if (Wildcard.matchPathOne(uri, excludes) != -1) {
					result = false;
				}
			} else {
				for (String exclude : excludes) {
					if (uri.contains(exclude)) {
						result = false;						// excludes founded
						break;
					}
				}
			}
		}

		return result;
	}","['protected', 'boolean', 'isGzipEligible', '(', 'final', 'HttpServletRequest', 'request', ')', '{', '// request parameter name', 'if', '(', 'requestParameterName', '.', 'length', '(', ')', '!=', '0', ')', '{', 'String', 'forceGzipString', '=', 'request', '.', 'getParameter', '(', 'requestParameterName', ')', ';', 'if', '(', 'forceGzipString', '!=', 'null', ')', '{', 'return', 'Converter', '.', 'get', '(', ')', '.', 'toBooleanValue', '(', 'forceGzipString', ',', 'false', ')', ';', '}', '}', '// extract uri', 'String', 'uri', '=', 'request', '.', 'getRequestURI', '(', ')', ';', 'if', '(', 'uri', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'uri', '=', 'uri', '.', 'toLowerCase', '(', ')', ';', 'boolean', 'result', '=', 'false', ';', '// check uri', 'if', '(', 'matches', '==', 'null', ')', '{', '// match == *', 'if', '(', 'extensions', '==', 'null', ')', '{', '// extensions == *', 'return', 'true', ';', '}', '// extension', 'String', 'extension', '=', 'FileNameUtil', '.', 'getExtension', '(', 'uri', ')', ';', 'if', '(', 'extension', '.', 'length', '(', ')', '>', '0', ')', '{', 'extension', '=', 'extension', '.', 'toLowerCase', '(', ')', ';', 'if', '(', 'StringUtil', '.', 'equalsOne', '(', 'extension', ',', 'extensions', ')', '!=', '-', '1', ')', '{', 'result', '=', 'true', ';', '}', '}', '}', 'else', '{', 'if', '(', 'wildcards', ')', '{', 'result', '=', 'Wildcard', '.', 'matchPathOne', '(', 'uri', ',', 'matches', ')', '!=', '-', '1', ';', '}', 'else', '{', 'for', '(', 'String', 'match', ':', 'matches', ')', '{', 'if', '(', 'uri', '.', 'contains', '(', 'match', ')', ')', '{', 'result', '=', 'true', ';', 'break', ';', '}', '}', '}', '}', 'if', '(', '(', 'result', ')', '&&', '(', 'excludes', '!=', 'null', ')', ')', '{', 'if', '(', 'wildcards', ')', '{', 'if', '(', 'Wildcard', '.', 'matchPathOne', '(', 'uri', ',', 'excludes', ')', '!=', '-', '1', ')', '{', 'result', '=', 'false', ';', '}', '}', 'else', '{', 'for', '(', 'String', 'exclude', ':', 'excludes', ')', '{', 'if', '(', 'uri', '.', 'contains', '(', 'exclude', ')', ')', '{', 'result', '=', 'false', ';', '// excludes founded', 'break', ';', '}', '}', '}', '}', 'return', 'result', ';', '}']",Determine if request is eligible for GZipping.,"['Determine', 'if', 'request', 'is', 'eligible', 'for', 'GZipping', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-servlet/src/main/java/jodd/servlet/filter/GzipFilter.java#L192-L260,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/PagedList.java,PagedList.get,"public List<E> get(int index)
    {
        /*log.fine(""public List<E> get(int index): called"");*/

        // Check that the index is not to large.
        int originalSize = original.size();
        int size = (originalSize / pageSize) + (((originalSize % pageSize) == 0) ? 0 : 1);

        /*log.fine(""originalSize = "" + originalSize);*/
        /*log.fine(""size = "" + size);*/

        // Check if the size of the underlying list is zero, in which case return an empty list, so long as page zero
        // was requested.
        if ((index == 0) && (originalSize == 0))
        {
            return new ArrayList<E>();
        }

        // Check if the requested index exceeds the number of pages, or is an illegal negative value.
        if ((index >= size) || (index < 0))
        {
            /*log.fine(""(index >= size) || (index < 0), throwing out of bounds exception."");*/
            throw new IndexOutOfBoundsException(""Index "" + index +
                "" is less than zero or more than the number of pages: "" + size);
        }

        // Extract the appropriate sub-list.
        // Note that if this is the last page it may not be a full page. Just up to the last page will be returned.
        /*log.fine(""Requesting sublist from, "" + (pageSize * index) + "", to ,"" +
            (((pageSize * (index + 1)) >= originalSize) ? originalSize : (pageSize * (index + 1))) + ""."");*/

        List<E> result =
            original.subList(pageSize * index,
                ((pageSize * (index + 1)) >= originalSize) ? originalSize : (pageSize * (index + 1)));

        return result;
    }",java,"public List<E> get(int index)
    {
        /*log.fine(""public List<E> get(int index): called"");*/

        // Check that the index is not to large.
        int originalSize = original.size();
        int size = (originalSize / pageSize) + (((originalSize % pageSize) == 0) ? 0 : 1);

        /*log.fine(""originalSize = "" + originalSize);*/
        /*log.fine(""size = "" + size);*/

        // Check if the size of the underlying list is zero, in which case return an empty list, so long as page zero
        // was requested.
        if ((index == 0) && (originalSize == 0))
        {
            return new ArrayList<E>();
        }

        // Check if the requested index exceeds the number of pages, or is an illegal negative value.
        if ((index >= size) || (index < 0))
        {
            /*log.fine(""(index >= size) || (index < 0), throwing out of bounds exception."");*/
            throw new IndexOutOfBoundsException(""Index "" + index +
                "" is less than zero or more than the number of pages: "" + size);
        }

        // Extract the appropriate sub-list.
        // Note that if this is the last page it may not be a full page. Just up to the last page will be returned.
        /*log.fine(""Requesting sublist from, "" + (pageSize * index) + "", to ,"" +
            (((pageSize * (index + 1)) >= originalSize) ? originalSize : (pageSize * (index + 1))) + ""."");*/

        List<E> result =
            original.subList(pageSize * index,
                ((pageSize * (index + 1)) >= originalSize) ? originalSize : (pageSize * (index + 1)));

        return result;
    }","['public', 'List', '<', 'E', '>', 'get', '(', 'int', 'index', ')', '{', '/*log.fine(""public List<E> get(int index): called"");*/', '// Check that the index is not to large.', 'int', 'originalSize', '=', 'original', '.', 'size', '(', ')', ';', 'int', 'size', '=', '(', 'originalSize', '/', 'pageSize', ')', '+', '(', '(', '(', 'originalSize', '%', 'pageSize', ')', '==', '0', ')', '?', '0', ':', '1', ')', ';', '/*log.fine(""originalSize = "" + originalSize);*/', '/*log.fine(""size = "" + size);*/', '// Check if the size of the underlying list is zero, in which case return an empty list, so long as page zero', '// was requested.', 'if', '(', '(', 'index', '==', '0', ')', '&&', '(', 'originalSize', '==', '0', ')', ')', '{', 'return', 'new', 'ArrayList', '<', 'E', '>', '(', ')', ';', '}', '// Check if the requested index exceeds the number of pages, or is an illegal negative value.', 'if', '(', '(', 'index', '>=', 'size', ')', '||', '(', 'index', '<', '0', ')', ')', '{', '/*log.fine(""(index >= size) || (index < 0), throwing out of bounds exception."");*/', 'throw', 'new', 'IndexOutOfBoundsException', '(', '""Index ""', '+', 'index', '+', '"" is less than zero or more than the number of pages: ""', '+', 'size', ')', ';', '}', '// Extract the appropriate sub-list.', '// Note that if this is the last page it may not be a full page. Just up to the last page will be returned.', '/*log.fine(""Requesting sublist from, "" + (pageSize * index) + "", to ,"" +\n            (((pageSize * (index + 1)) >= originalSize) ? originalSize : (pageSize * (index + 1))) + ""."");*/', 'List', '<', 'E', '>', 'result', '=', 'original', '.', 'subList', '(', 'pageSize', '*', 'index', ',', '(', '(', 'pageSize', '*', '(', 'index', '+', '1', ')', ')', '>=', 'originalSize', ')', '?', 'originalSize', ':', '(', 'pageSize', '*', '(', 'index', '+', '1', ')', ')', ')', ';', 'return', 'result', ';', '}']","Extracts the sub-list at the specified page index. The returned list will have size equal to the page size unless
it is the last page in which case it may not be a full page.

@param  index The sub-list index to extract.

@return The sub-list as a {@link java.util.List}.

@throws IndexOutOfBoundsException If the index is < 0 or larger that the number of pages (list size / page size +
(list size % page size == 0 ? 0 : 1)).","['Extracts', 'the', 'sub', '-', 'list', 'at', 'the', 'specified', 'page', 'index', '.', 'The', 'returned', 'list', 'will', 'have', 'size', 'equal', 'to', 'the', 'page', 'size', 'unless', 'it', 'is', 'the', 'last', 'page', 'in', 'which', 'case', 'it', 'may', 'not', 'be', 'a', 'full', 'page', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/PagedList.java#L103-L139,test
oblac/jodd,jodd-json/src/main/java/jodd/json/JsonParser.java,JsonParser.parseStringContent,"protected String parseStringContent(final char quote) {
		final int startNdx = ndx;

		// roll-out until the end of the string or the escape char
		while (true) {
			final char c = input[ndx];

			if (c == quote) {
				// no escapes found, just use existing string
				ndx++;
				return new String(input, startNdx, ndx - 1 - startNdx);
			}

			if (c == '\\') {
				break;
			}

			ndx++;
		}

		// escapes found, proceed differently

		textLen = ndx - startNdx;

		growEmpty();

//		for (int i = startNdx, j = 0; j < textLen; i++, j++) {
//			text[j] = input[i];
//		}
		System.arraycopy(input, startNdx, text, 0, textLen);

		// escape char, process everything until the end
		while (true) {
			char c = input[ndx];

			if (c == quote) {
				// done
				ndx++;
				final String str = new String(text, 0, textLen);
				textLen = 0;
				return str;
			}

			if (c == '\\') {
				// escape char found
				ndx++;

				c = input[ndx];

				switch (c) {
					case '\""' : c = '\""'; break;
					case '\\' : c = '\\'; break;
					case '/' : c = '/'; break;
					case 'b' : c = '\b'; break;
					case 'f' : c = '\f'; break;
					case 'n' : c = '\n'; break;
					case 'r' : c = '\r'; break;
					case 't' : c = '\t'; break;
					case 'u' :
						ndx++;
						c = parseUnicode();
						break;
					default:
						if (looseMode) {
							if (c != '\'') {
								c = '\\';
								ndx--;
							}
						}
						else {
							syntaxError(""Invalid escape char: "" + c);
						}
				}
			}

			text[textLen] = c;

			textLen++;

			growAndCopy();

			ndx++;
		}
	}",java,"protected String parseStringContent(final char quote) {
		final int startNdx = ndx;

		// roll-out until the end of the string or the escape char
		while (true) {
			final char c = input[ndx];

			if (c == quote) {
				// no escapes found, just use existing string
				ndx++;
				return new String(input, startNdx, ndx - 1 - startNdx);
			}

			if (c == '\\') {
				break;
			}

			ndx++;
		}

		// escapes found, proceed differently

		textLen = ndx - startNdx;

		growEmpty();

//		for (int i = startNdx, j = 0; j < textLen; i++, j++) {
//			text[j] = input[i];
//		}
		System.arraycopy(input, startNdx, text, 0, textLen);

		// escape char, process everything until the end
		while (true) {
			char c = input[ndx];

			if (c == quote) {
				// done
				ndx++;
				final String str = new String(text, 0, textLen);
				textLen = 0;
				return str;
			}

			if (c == '\\') {
				// escape char found
				ndx++;

				c = input[ndx];

				switch (c) {
					case '\""' : c = '\""'; break;
					case '\\' : c = '\\'; break;
					case '/' : c = '/'; break;
					case 'b' : c = '\b'; break;
					case 'f' : c = '\f'; break;
					case 'n' : c = '\n'; break;
					case 'r' : c = '\r'; break;
					case 't' : c = '\t'; break;
					case 'u' :
						ndx++;
						c = parseUnicode();
						break;
					default:
						if (looseMode) {
							if (c != '\'') {
								c = '\\';
								ndx--;
							}
						}
						else {
							syntaxError(""Invalid escape char: "" + c);
						}
				}
			}

			text[textLen] = c;

			textLen++;

			growAndCopy();

			ndx++;
		}
	}","['protected', 'String', 'parseStringContent', '(', 'final', 'char', 'quote', ')', '{', 'final', 'int', 'startNdx', '=', 'ndx', ';', '// roll-out until the end of the string or the escape char', 'while', '(', 'true', ')', '{', 'final', 'char', 'c', '=', 'input', '[', 'ndx', ']', ';', 'if', '(', 'c', '==', 'quote', ')', '{', '// no escapes found, just use existing string', 'ndx', '++', ';', 'return', 'new', 'String', '(', 'input', ',', 'startNdx', ',', 'ndx', '-', '1', '-', 'startNdx', ')', ';', '}', 'if', '(', 'c', '==', ""'"", ""'"", ')', '{', 'break', ';', '}', 'ndx', '++', ';', '}', '// escapes found, proceed differently', 'textLen', '=', 'ndx', '-', 'startNdx', ';', 'growEmpty', '(', ')', ';', '//\t\tfor (int i = startNdx, j = 0; j < textLen; i++, j++) {', '//\t\t\ttext[j] = input[i];', '//\t\t}', 'System', '.', 'arraycopy', '(', 'input', ',', 'startNdx', ',', 'text', ',', '0', ',', 'textLen', ')', ';', '// escape char, process everything until the end', 'while', '(', 'true', ')', '{', 'char', 'c', '=', 'input', '[', 'ndx', ']', ';', 'if', '(', 'c', '==', 'quote', ')', '{', '// done', 'ndx', '++', ';', 'final', 'String', 'str', '=', 'new', 'String', '(', 'text', ',', '0', ',', 'textLen', ')', ';', 'textLen', '=', '0', ';', 'return', 'str', ';', '}', 'if', '(', 'c', '==', ""'"", ""'"", ')', '{', '// escape char found', 'ndx', '++', ';', 'c', '=', 'input', '[', 'ndx', ']', ';', 'switch', '(', 'c', ')', '{', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'c', '=', ""'"", ""'"", ';', 'break', ';', 'case', ""'"", ""'"", ':', 'ndx', '++', ';', 'c', '=', 'parseUnicode', '(', ')', ';', 'break', ';', 'default', ':', 'if', '(', 'looseMode', ')', '{', 'if', '(', 'c', '!=', ""'"", ""'"", ')', '{', 'c', '=', ""'"", ""'"", ';', 'ndx', '--', ';', '}', '}', 'else', '{', 'syntaxError', '(', '""Invalid escape char: ""', '+', 'c', ')', ';', '}', '}', '}', 'text', '[', 'textLen', ']', '=', 'c', ';', 'textLen', '++', ';', 'growAndCopy', '(', ')', ';', 'ndx', '++', ';', '}', '}']","Parses string content, once when starting quote has been consumed.","['Parses', 'string', 'content', 'once', 'when', 'starting', 'quote', 'has', 'been', 'consumed', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-json/src/main/java/jodd/json/JsonParser.java#L676-L759,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java,Targets.makeTargets,"protected Target[] makeTargets(final Target actionTarget, final MethodParam[] methodParams) {
		if (methodParams == null) {
			// action does not have method parameters, so there is just one target
			return new Target[]{actionTarget};
		}

		// action has method arguments, so there is more then one target
		final Target[] target = new Target[methodParams.length + 1];
		target[0] = actionTarget;

		final Object action = actionTarget.value();

		for (int i = 0; i < methodParams.length; i++) {
			final MethodParam methodParam = methodParams[i];
			final Class paramType = methodParam.type();

			final Target paramTarget;

			if (methodParam.annotationType() == null) {
				// parameter is NOT annotated, create new value for the target
				// the class itself will be a base class, and should be scanned

				final ScopeData newScopeData = methodParam.scopeData().inspector().inspectClassScopesWithCache(paramType);
				paramTarget = Target.ofValue(createActionMethodArgument(paramType, action), newScopeData);
			}
			else if (methodParam.annotationType() == Out.class) {
				// parameter is annotated with *only* OUT annotation
				// create the output value now AND to save the type
				paramTarget = Target.ofMethodParam(methodParam, createActionMethodArgument(paramType, action));
			}
			else {
				// parameter is annotated with any IN annotation
				// create target with NO value, as the value will be created later
				paramTarget = Target.ofMethodParam(methodParam, type -> createActionMethodArgument(type, action));
			}

			target[i + 1] = paramTarget;
		}
		return target;
	}",java,"protected Target[] makeTargets(final Target actionTarget, final MethodParam[] methodParams) {
		if (methodParams == null) {
			// action does not have method parameters, so there is just one target
			return new Target[]{actionTarget};
		}

		// action has method arguments, so there is more then one target
		final Target[] target = new Target[methodParams.length + 1];
		target[0] = actionTarget;

		final Object action = actionTarget.value();

		for (int i = 0; i < methodParams.length; i++) {
			final MethodParam methodParam = methodParams[i];
			final Class paramType = methodParam.type();

			final Target paramTarget;

			if (methodParam.annotationType() == null) {
				// parameter is NOT annotated, create new value for the target
				// the class itself will be a base class, and should be scanned

				final ScopeData newScopeData = methodParam.scopeData().inspector().inspectClassScopesWithCache(paramType);
				paramTarget = Target.ofValue(createActionMethodArgument(paramType, action), newScopeData);
			}
			else if (methodParam.annotationType() == Out.class) {
				// parameter is annotated with *only* OUT annotation
				// create the output value now AND to save the type
				paramTarget = Target.ofMethodParam(methodParam, createActionMethodArgument(paramType, action));
			}
			else {
				// parameter is annotated with any IN annotation
				// create target with NO value, as the value will be created later
				paramTarget = Target.ofMethodParam(methodParam, type -> createActionMethodArgument(type, action));
			}

			target[i + 1] = paramTarget;
		}
		return target;
	}","['protected', 'Target', '[', ']', 'makeTargets', '(', 'final', 'Target', 'actionTarget', ',', 'final', 'MethodParam', '[', ']', 'methodParams', ')', '{', 'if', '(', 'methodParams', '==', 'null', ')', '{', '// action does not have method parameters, so there is just one target', 'return', 'new', 'Target', '[', ']', '{', 'actionTarget', '}', ';', '}', '// action has method arguments, so there is more then one target', 'final', 'Target', '[', ']', 'target', '=', 'new', 'Target', '[', 'methodParams', '.', 'length', '+', '1', ']', ';', 'target', '[', '0', ']', '=', 'actionTarget', ';', 'final', 'Object', 'action', '=', 'actionTarget', '.', 'value', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'methodParams', '.', 'length', ';', 'i', '++', ')', '{', 'final', 'MethodParam', 'methodParam', '=', 'methodParams', '[', 'i', ']', ';', 'final', 'Class', 'paramType', '=', 'methodParam', '.', 'type', '(', ')', ';', 'final', 'Target', 'paramTarget', ';', 'if', '(', 'methodParam', '.', 'annotationType', '(', ')', '==', 'null', ')', '{', '// parameter is NOT annotated, create new value for the target', '// the class itself will be a base class, and should be scanned', 'final', 'ScopeData', 'newScopeData', '=', 'methodParam', '.', 'scopeData', '(', ')', '.', 'inspector', '(', ')', '.', 'inspectClassScopesWithCache', '(', 'paramType', ')', ';', 'paramTarget', '=', 'Target', '.', 'ofValue', '(', 'createActionMethodArgument', '(', 'paramType', ',', 'action', ')', ',', 'newScopeData', ')', ';', '}', 'else', 'if', '(', 'methodParam', '.', 'annotationType', '(', ')', '==', 'Out', '.', 'class', ')', '{', '// parameter is annotated with *only* OUT annotation', '// create the output value now AND to save the type', 'paramTarget', '=', 'Target', '.', 'ofMethodParam', '(', 'methodParam', ',', 'createActionMethodArgument', '(', 'paramType', ',', 'action', ')', ')', ';', '}', 'else', '{', '// parameter is annotated with any IN annotation', '// create target with NO value, as the value will be created later', 'paramTarget', '=', 'Target', '.', 'ofMethodParam', '(', 'methodParam', ',', 'type', '->', 'createActionMethodArgument', '(', 'type', ',', 'action', ')', ')', ';', '}', 'target', '[', 'i', '+', '1', ']', '=', 'paramTarget', ';', '}', 'return', 'target', ';', '}']",Joins action and parameters into one single array of Targets.,"['Joins', 'action', 'and', 'parameters', 'into', 'one', 'single', 'array', 'of', 'Targets', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java#L127-L166,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/model/group/processor/PreProcessorExecutor.java,PreProcessorExecutor.decoratePreProcessor,"private synchronized ResourcePreProcessor decoratePreProcessor(final ResourcePreProcessor processor,
      final ProcessingCriteria criteria) {
    final ResourcePreProcessor decorated = new DefaultProcessorDecorator(processor, criteria) {
      @Override
      public void process(final Resource resource, final Reader reader, final Writer writer)
          throws IOException {
        try {
          callbackRegistry.onBeforePreProcess();
          super.process(resource, reader, writer);
        } finally {
          callbackRegistry.onAfterPreProcess();
        }
      }
    };
    injector.inject(decorated);
    return decorated;
  }",java,"private synchronized ResourcePreProcessor decoratePreProcessor(final ResourcePreProcessor processor,
      final ProcessingCriteria criteria) {
    final ResourcePreProcessor decorated = new DefaultProcessorDecorator(processor, criteria) {
      @Override
      public void process(final Resource resource, final Reader reader, final Writer writer)
          throws IOException {
        try {
          callbackRegistry.onBeforePreProcess();
          super.process(resource, reader, writer);
        } finally {
          callbackRegistry.onAfterPreProcess();
        }
      }
    };
    injector.inject(decorated);
    return decorated;
  }","['private', 'synchronized', 'ResourcePreProcessor', 'decoratePreProcessor', '(', 'final', 'ResourcePreProcessor', 'processor', ',', 'final', 'ProcessingCriteria', 'criteria', ')', '{', 'final', 'ResourcePreProcessor', 'decorated', '=', 'new', 'DefaultProcessorDecorator', '(', 'processor', ',', 'criteria', ')', '{', '@', 'Override', 'public', 'void', 'process', '(', 'final', 'Resource', 'resource', ',', 'final', 'Reader', 'reader', ',', 'final', 'Writer', 'writer', ')', 'throws', 'IOException', '{', 'try', '{', 'callbackRegistry', '.', 'onBeforePreProcess', '(', ')', ';', 'super', '.', 'process', '(', 'resource', ',', 'reader', ',', 'writer', ')', ';', '}', 'finally', '{', 'callbackRegistry', '.', 'onAfterPreProcess', '(', ')', ';', '}', '}', '}', ';', 'injector', '.', 'inject', '(', 'decorated', ')', ';', 'return', 'decorated', ';', '}']","Decorates preProcessor with mandatory decorators.
This method is synchronized to ensure that processor is injected before it is being used by other thread.","['Decorates', 'preProcessor', 'with', 'mandatory', 'decorators', '.', 'This', 'method', 'is', 'synchronized', 'to', 'ensure', 'that', 'processor', 'is', 'injected', 'before', 'it', 'is', 'being', 'used', 'by', 'other', 'thread', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/model/group/processor/PreProcessorExecutor.java#L220-L236,test
oblac/jodd,jodd-db/src/main/java/jodd/db/oom/dao/GenericDao.java,GenericDao.deleteById,"public void deleteById(final Object entity) {
		if (entity != null) {
			int result = query(dbOom.entities().deleteById(entity)).autoClose().executeUpdate();

			if (result != 0) {
				// now reset the ID value
				Class type = entity.getClass();
				DbEntityDescriptor ded = dbOom.entityManager().lookupType(type);

				setEntityId(ded, entity, 0);
			}
		}
	}",java,"public void deleteById(final Object entity) {
		if (entity != null) {
			int result = query(dbOom.entities().deleteById(entity)).autoClose().executeUpdate();

			if (result != 0) {
				// now reset the ID value
				Class type = entity.getClass();
				DbEntityDescriptor ded = dbOom.entityManager().lookupType(type);

				setEntityId(ded, entity, 0);
			}
		}
	}","['public', 'void', 'deleteById', '(', 'final', 'Object', 'entity', ')', '{', 'if', '(', 'entity', '!=', 'null', ')', '{', 'int', 'result', '=', 'query', '(', 'dbOom', '.', 'entities', '(', ')', '.', 'deleteById', '(', 'entity', ')', ')', '.', 'autoClose', '(', ')', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'result', '!=', '0', ')', '{', '// now reset the ID value', 'Class', 'type', '=', 'entity', '.', 'getClass', '(', ')', ';', 'DbEntityDescriptor', 'ded', '=', 'dbOom', '.', 'entityManager', '(', ')', '.', 'lookupType', '(', 'type', ')', ';', 'setEntityId', '(', 'ded', ',', 'entity', ',', '0', ')', ';', '}', '}', '}']",Delete single object by its id. Resets ID value.,"['Delete', 'single', 'object', 'by', 'its', 'id', '.', 'Resets', 'ID', 'value', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/oom/dao/GenericDao.java#L224-L236,test
Unidata/thredds,httpservices/src/main/java/ucar/httpservices/Escape.java,Escape.xunescapeString,"private static String xunescapeString(String in, char escape, boolean spaceplus)
    {
        try {
            if(in == null) return null;

            byte[] utf8 = in.getBytes(utf8Charset);
            byte escape8 = (byte) escape;
            byte[] out = new byte[utf8.length]; // Should be max we need

            int index8 = 0;
            for(int i = 0; i < utf8.length; ) {
                byte b = utf8[i++];
                if(b == plus && spaceplus) {
                    out[index8++] = blank;
                } else if(b == escape8) {
                    // check to see if there are enough characters left
                    if(i + 2 <= utf8.length) {
                        b = (byte) (fromHex(utf8[i]) << 4 | fromHex(utf8[i + 1]));
                        i += 2;
                    }
                }
                out[index8++] = b;
            }
            return new String(out, 0, index8, utf8Charset);
        } catch (Exception e) {
            return in;
        }

    }",java,"private static String xunescapeString(String in, char escape, boolean spaceplus)
    {
        try {
            if(in == null) return null;

            byte[] utf8 = in.getBytes(utf8Charset);
            byte escape8 = (byte) escape;
            byte[] out = new byte[utf8.length]; // Should be max we need

            int index8 = 0;
            for(int i = 0; i < utf8.length; ) {
                byte b = utf8[i++];
                if(b == plus && spaceplus) {
                    out[index8++] = blank;
                } else if(b == escape8) {
                    // check to see if there are enough characters left
                    if(i + 2 <= utf8.length) {
                        b = (byte) (fromHex(utf8[i]) << 4 | fromHex(utf8[i + 1]));
                        i += 2;
                    }
                }
                out[index8++] = b;
            }
            return new String(out, 0, index8, utf8Charset);
        } catch (Exception e) {
            return in;
        }

    }","['private', 'static', 'String', 'xunescapeString', '(', 'String', 'in', ',', 'char', 'escape', ',', 'boolean', 'spaceplus', ')', '{', 'try', '{', 'if', '(', 'in', '==', 'null', ')', 'return', 'null', ';', 'byte', '[', ']', 'utf8', '=', 'in', '.', 'getBytes', '(', 'utf8Charset', ')', ';', 'byte', 'escape8', '=', '(', 'byte', ')', 'escape', ';', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'utf8', '.', 'length', ']', ';', '// Should be max we need', 'int', 'index8', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'utf8', '.', 'length', ';', ')', '{', 'byte', 'b', '=', 'utf8', '[', 'i', '++', ']', ';', 'if', '(', 'b', '==', 'plus', '&&', 'spaceplus', ')', '{', 'out', '[', 'index8', '++', ']', '=', 'blank', ';', '}', 'else', 'if', '(', 'b', '==', 'escape8', ')', '{', '// check to see if there are enough characters left', 'if', '(', 'i', '+', '2', '<=', 'utf8', '.', 'length', ')', '{', 'b', '=', '(', 'byte', ')', '(', 'fromHex', '(', 'utf8', '[', 'i', ']', ')', '<<', '4', '|', 'fromHex', '(', 'utf8', '[', 'i', '+', '1', ']', ')', ')', ';', 'i', '+=', '2', ';', '}', '}', 'out', '[', 'index8', '++', ']', '=', 'b', ';', '}', 'return', 'new', 'String', '(', 'out', ',', '0', ',', 'index8', ',', 'utf8Charset', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'return', 'in', ';', '}', '}']","Given a string that contains WWW escape sequences, translate those escape
sequences back into ASCII characters. Return the modified string.

@param in        The string to modify.
@param escape    The character used to signal the begining of an escape sequence.
param except If there is some escape code that should not be removed by
this call (e.g., you might not want to remove spaces, %20) use this
parameter to specify that code. The function will then transform all
escapes except that one.
@param spaceplus True if spaces should be replaced by '+'.
@return The modified string.","['Given', 'a', 'string', 'that', 'contains', 'WWW', 'escape', 'sequences', 'translate', 'those', 'escape', 'sequences', 'back', 'into', 'ASCII', 'characters', '.', 'Return', 'the', 'modified', 'string', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/httpservices/src/main/java/ucar/httpservices/Escape.java#L145-L173,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataPng.java,CoverageDataPng.getPixelValues,"public int[] getPixelValues(byte[] imageBytes) {

        PngReaderInt reader = new PngReaderInt(new ByteArrayInputStream(imageBytes));
        validateImageType(reader);
        int[] pixels = new int[reader.imgInfo.cols * reader.imgInfo.rows];
        int rowNumber = 0;
        while (reader.hasMoreRows()) {
            ImageLineInt row = reader.readRowInt();
            int[] rowValues = row.getScanline();
            System.arraycopy(rowValues, 0, pixels, rowNumber * reader.imgInfo.cols, rowValues.length);
            rowNumber++;
        }
        reader.close();

        return pixels;
    }",java,"public int[] getPixelValues(byte[] imageBytes) {

        PngReaderInt reader = new PngReaderInt(new ByteArrayInputStream(imageBytes));
        validateImageType(reader);
        int[] pixels = new int[reader.imgInfo.cols * reader.imgInfo.rows];
        int rowNumber = 0;
        while (reader.hasMoreRows()) {
            ImageLineInt row = reader.readRowInt();
            int[] rowValues = row.getScanline();
            System.arraycopy(rowValues, 0, pixels, rowNumber * reader.imgInfo.cols, rowValues.length);
            rowNumber++;
        }
        reader.close();

        return pixels;
    }","['public', 'int', '[', ']', 'getPixelValues', '(', 'byte', '[', ']', 'imageBytes', ')', '{', 'PngReaderInt', 'reader', '=', 'new', 'PngReaderInt', '(', 'new', 'ByteArrayInputStream', '(', 'imageBytes', ')', ')', ';', 'validateImageType', '(', 'reader', ')', ';', 'int', '[', ']', 'pixels', '=', 'new', 'int', '[', 'reader', '.', 'imgInfo', '.', 'cols', '*', 'reader', '.', 'imgInfo', '.', 'rows', ']', ';', 'int', 'rowNumber', '=', '0', ';', 'while', '(', 'reader', '.', 'hasMoreRows', '(', ')', ')', '{', 'ImageLineInt', 'row', '=', 'reader', '.', 'readRowInt', '(', ')', ';', 'int', '[', ']', 'rowValues', '=', 'row', '.', 'getScanline', '(', ')', ';', 'System', '.', 'arraycopy', '(', 'rowValues', ',', '0', ',', 'pixels', ',', 'rowNumber', '*', 'reader', '.', 'imgInfo', '.', 'cols', ',', 'rowValues', '.', 'length', ')', ';', 'rowNumber', '++', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'return', 'pixels', ';', '}']","Get the pixel values of the image as 16 bit unsigned integer values

@param imageBytes image bytes
@return 16 bit unsigned integer pixel values","['Get', 'the', 'pixel', 'values', 'of', 'the', 'image', 'as', '16', 'bit', 'unsigned', 'integer', 'values']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataPng.java#L124-L139,test
DigitalPebble/storm-crawler,core/src/main/java/com/digitalpebble/stormcrawler/persistence/AbstractQueryingSpout.java,AbstractQueryingSpout.throttleQueries,"private long throttleQueries() {
        if (timeLastQuerySent != 0) {
            // check that we allowed some time between queries
            long difference = System.currentTimeMillis() - timeLastQuerySent;
            if (difference < minDelayBetweenQueries) {
                return minDelayBetweenQueries - difference;
            }
        }
        return -1;
    }",java,"private long throttleQueries() {
        if (timeLastQuerySent != 0) {
            // check that we allowed some time between queries
            long difference = System.currentTimeMillis() - timeLastQuerySent;
            if (difference < minDelayBetweenQueries) {
                return minDelayBetweenQueries - difference;
            }
        }
        return -1;
    }","['private', 'long', 'throttleQueries', '(', ')', '{', 'if', '(', 'timeLastQuerySent', '!=', '0', ')', '{', '// check that we allowed some time between queries', 'long', 'difference', '=', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'timeLastQuerySent', ';', 'if', '(', 'difference', '<', 'minDelayBetweenQueries', ')', '{', 'return', 'minDelayBetweenQueries', '-', 'difference', ';', '}', '}', 'return', '-', '1', ';', '}']","Returns the amount of time to wait if the backend was queried too
recently and needs throttling or -1 if the backend can be queried
straight away.","['Returns', 'the', 'amount', 'of', 'time', 'to', 'wait', 'if', 'the', 'backend', 'was', 'queried', 'too', 'recently', 'and', 'needs', 'throttling', 'or', '-', '1', 'if', 'the', 'backend', 'can', 'be', 'queried', 'straight', 'away', '.']",5d0465192ab8fbd89a90db32cb20960a282411ea,https://github.com/DigitalPebble/storm-crawler/blob/5d0465192ab8fbd89a90db32cb20960a282411ea/core/src/main/java/com/digitalpebble/stormcrawler/persistence/AbstractQueryingSpout.java#L229-L238,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/tx/OTransactionNoTx.java,OTransactionNoTx.saveRecord,"public ORecord saveRecord(final ORecord iRecord, final String iClusterName, final OPERATION_MODE iMode, boolean iForceCreate,
      final ORecordCallback<? extends Number> iRecordCreatedCallback, ORecordCallback<Integer> iRecordUpdatedCallback) {
    try {

      return database.saveAll(iRecord, iClusterName, iMode, iForceCreate, iRecordCreatedCallback, iRecordUpdatedCallback);

    } catch (Exception e) {
      // REMOVE IT FROM THE CACHE TO AVOID DIRTY RECORDS
      final ORecordId rid = (ORecordId) iRecord.getIdentity();
      if (rid.isValid())
        database.getLocalCache().freeRecord(rid);

      if (e instanceof ONeedRetryException)
        throw (ONeedRetryException) e;

      throw OException.wrapException(
          new ODatabaseException(""Error during saving of record"" + (iRecord != null ? "" with rid "" + iRecord.getIdentity() : """")),
          e);
    }
  }",java,"public ORecord saveRecord(final ORecord iRecord, final String iClusterName, final OPERATION_MODE iMode, boolean iForceCreate,
      final ORecordCallback<? extends Number> iRecordCreatedCallback, ORecordCallback<Integer> iRecordUpdatedCallback) {
    try {

      return database.saveAll(iRecord, iClusterName, iMode, iForceCreate, iRecordCreatedCallback, iRecordUpdatedCallback);

    } catch (Exception e) {
      // REMOVE IT FROM THE CACHE TO AVOID DIRTY RECORDS
      final ORecordId rid = (ORecordId) iRecord.getIdentity();
      if (rid.isValid())
        database.getLocalCache().freeRecord(rid);

      if (e instanceof ONeedRetryException)
        throw (ONeedRetryException) e;

      throw OException.wrapException(
          new ODatabaseException(""Error during saving of record"" + (iRecord != null ? "" with rid "" + iRecord.getIdentity() : """")),
          e);
    }
  }","['public', 'ORecord', 'saveRecord', '(', 'final', 'ORecord', 'iRecord', ',', 'final', 'String', 'iClusterName', ',', 'final', 'OPERATION_MODE', 'iMode', ',', 'boolean', 'iForceCreate', ',', 'final', 'ORecordCallback', '<', '?', 'extends', 'Number', '>', 'iRecordCreatedCallback', ',', 'ORecordCallback', '<', 'Integer', '>', 'iRecordUpdatedCallback', ')', '{', 'try', '{', 'return', 'database', '.', 'saveAll', '(', 'iRecord', ',', 'iClusterName', ',', 'iMode', ',', 'iForceCreate', ',', 'iRecordCreatedCallback', ',', 'iRecordUpdatedCallback', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '// REMOVE IT FROM THE CACHE TO AVOID DIRTY RECORDS\r', 'final', 'ORecordId', 'rid', '=', '(', 'ORecordId', ')', 'iRecord', '.', 'getIdentity', '(', ')', ';', 'if', '(', 'rid', '.', 'isValid', '(', ')', ')', 'database', '.', 'getLocalCache', '(', ')', '.', 'freeRecord', '(', 'rid', ')', ';', 'if', '(', 'e', 'instanceof', 'ONeedRetryException', ')', 'throw', '(', 'ONeedRetryException', ')', 'e', ';', 'throw', 'OException', '.', 'wrapException', '(', 'new', 'ODatabaseException', '(', '""Error during saving of record""', '+', '(', 'iRecord', '!=', 'null', '?', '"" with rid ""', '+', 'iRecord', '.', 'getIdentity', '(', ')', ':', '""""', ')', ')', ',', 'e', ')', ';', '}', '}']","Update the record.

@param iRecord
@param iForceCreate
@param iRecordCreatedCallback
@param iRecordUpdatedCallback","['Update', 'the', 'record', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/tx/OTransactionNoTx.java#L158-L177,test
jillesvangurp/urlbuilder,src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java,UrlBuilder.queryParam,"public UrlBuilder queryParam(String name, String value, boolean encode) {
        if (StringUtils.isNotEmpty(value)) {
            if (encode) {
                try {
                    value = URLEncoder.encode(value, ""UTF-8"");
                } catch (UnsupportedEncodingException e) {
                    throw new IllegalStateException(e);
                }
            }
            params.add(new EntryImpl(name, value));
        }
        return this;
    }",java,"public UrlBuilder queryParam(String name, String value, boolean encode) {
        if (StringUtils.isNotEmpty(value)) {
            if (encode) {
                try {
                    value = URLEncoder.encode(value, ""UTF-8"");
                } catch (UnsupportedEncodingException e) {
                    throw new IllegalStateException(e);
                }
            }
            params.add(new EntryImpl(name, value));
        }
        return this;
    }","['public', 'UrlBuilder', 'queryParam', '(', 'String', 'name', ',', 'String', 'value', ',', 'boolean', 'encode', ')', '{', 'if', '(', 'StringUtils', '.', 'isNotEmpty', '(', 'value', ')', ')', '{', 'if', '(', 'encode', ')', '{', 'try', '{', 'value', '=', 'URLEncoder', '.', 'encode', '(', 'value', ',', '""UTF-8""', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'e', ')', ';', '}', '}', 'params', '.', 'add', '(', 'new', 'EntryImpl', '(', 'name', ',', 'value', ')', ')', ';', '}', 'return', 'this', ';', '}']","Create a query parameter with a String value.
@param name name
@param value value
@param encode if true, the value is urlencoded.
@return the builder","['Create', 'a', 'query', 'parameter', 'with', 'a', 'String', 'value', '.']",22a8a4edf74a08b07cb17aad08c58c9feec8a2c0,https://github.com/jillesvangurp/urlbuilder/blob/22a8a4edf74a08b07cb17aad08c58c9feec8a2c0/src/main/java/com/github/jillesvangurp/urlbuilder/UrlBuilder.java#L174-L186,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/CNCtx.java,CNCtx.lookupLink,"public java.lang.Object lookupLink(String name) throws NamingException {
        return lookupLink(new CompositeName(name));
    }",java,"public java.lang.Object lookupLink(String name) throws NamingException {
        return lookupLink(new CompositeName(name));
    }","['public', 'java', '.', 'lang', '.', 'Object', 'lookupLink', '(', 'String', 'name', ')', 'throws', 'NamingException', '{', 'return', 'lookupLink', '(', 'new', 'CompositeName', '(', 'name', ')', ')', ';', '}']","Is mapped to resolve in the COS Naming api.

@param name string
@return the resolved object.
@throws NamingException See lookup.","['Is', 'mapped', 'to', 'resolve', 'in', 'the', 'COS', 'Naming', 'api', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/CNCtx.java#L985-L987,test
rupertlssmith/lojix,lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/DynamicOperatorParser.java,DynamicOperatorParser.checkAndResolveToFixity,"protected static OpSymbol checkAndResolveToFixity(CandidateOpSymbol candidate, OpSymbol.Fixity... fixities)
        throws SourceCodeException
    {
        OpSymbol result = null;

        for (OpSymbol.Fixity fixity : fixities)
        {
            result = candidate.getPossibleOperators().get(fixity);

            if (result != null)
            {
                break;
            }
        }

        if (result == null)
        {
            throw new SourceCodeException(""Operator "" + candidate + "" must be one of "" + Arrays.toString(fixities) +
                "", but does not have the required form."", null, null, null, candidate.getSourceCodePosition());
        }

        return result;
    }",java,"protected static OpSymbol checkAndResolveToFixity(CandidateOpSymbol candidate, OpSymbol.Fixity... fixities)
        throws SourceCodeException
    {
        OpSymbol result = null;

        for (OpSymbol.Fixity fixity : fixities)
        {
            result = candidate.getPossibleOperators().get(fixity);

            if (result != null)
            {
                break;
            }
        }

        if (result == null)
        {
            throw new SourceCodeException(""Operator "" + candidate + "" must be one of "" + Arrays.toString(fixities) +
                "", but does not have the required form."", null, null, null, candidate.getSourceCodePosition());
        }

        return result;
    }","['protected', 'static', 'OpSymbol', 'checkAndResolveToFixity', '(', 'CandidateOpSymbol', 'candidate', ',', 'OpSymbol', '.', 'Fixity', '...', 'fixities', ')', 'throws', 'SourceCodeException', '{', 'OpSymbol', 'result', '=', 'null', ';', 'for', '(', 'OpSymbol', '.', 'Fixity', 'fixity', ':', 'fixities', ')', '{', 'result', '=', 'candidate', '.', 'getPossibleOperators', '(', ')', '.', 'get', '(', 'fixity', ')', ';', 'if', '(', 'result', '!=', 'null', ')', '{', 'break', ';', '}', '}', 'if', '(', 'result', '==', 'null', ')', '{', 'throw', 'new', 'SourceCodeException', '(', '""Operator ""', '+', 'candidate', '+', '"" must be one of ""', '+', 'Arrays', '.', 'toString', '(', 'fixities', ')', '+', '"", but does not have the required form.""', ',', 'null', ',', 'null', ',', 'null', ',', 'candidate', '.', 'getSourceCodePosition', '(', ')', ')', ';', '}', 'return', 'result', ';', '}']","Checks if a candidate operator symbol can have one of the specified fixities, and resolve it to an oeprator with
that fixity if so. If it cannot be resolved an exception is raised.

@param  candidate The candidate operator symbol to resolve.
@param  fixities  The possible fixities to resolve the symbol to.

@return The candidate operator resolved to an actual operator.

@throws SourceCodeException If the candidate operator cannot be resolved.","['Checks', 'if', 'a', 'candidate', 'operator', 'symbol', 'can', 'have', 'one', 'of', 'the', 'specified', 'fixities', 'and', 'resolve', 'it', 'to', 'an', 'oeprator', 'with', 'that', 'fixity', 'if', 'so', '.', 'If', 'it', 'cannot', 'be', 'resolved', 'an', 'exception', 'is', 'raised', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/logic/src/main/com/thesett/aima/logic/fol/isoprologparser/DynamicOperatorParser.java#L463-L485,test
cglib/cglib,cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java,CodeEmitter.load_arg,"public void load_arg(int index) {
        load_local(state.argumentTypes[index],
                   state.localOffset + skipArgs(index));
    }",java,"public void load_arg(int index) {
        load_local(state.argumentTypes[index],
                   state.localOffset + skipArgs(index));
    }","['public', 'void', 'load_arg', '(', 'int', 'index', ')', '{', 'load_local', '(', 'state', '.', 'argumentTypes', '[', 'index', ']', ',', 'state', '.', 'localOffset', '+', 'skipArgs', '(', 'index', ')', ')', ';', '}']","Pushes the specified argument of the current method onto the stack.
@param index the zero-based index into the argument list","['Pushes', 'the', 'specified', 'argument', 'of', 'the', 'current', 'method', 'onto', 'the', 'stack', '.']",cd01695c11fd3c66641b295b9596f74cf13c548b,https://github.com/cglib/cglib/blob/cd01695c11fd3c66641b295b9596f74cf13c548b/cglib/src/main/java/net/sf/cglib/core/CodeEmitter.java#L373-L376,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadataDataSource.java,GeoPackageMetadataDataSource.getOrCreate,"public GeoPackageMetadata getOrCreate(String geoPackage) {
        GeoPackageMetadata metadata = get(geoPackage);

        if (metadata == null) {
            metadata = new GeoPackageMetadata();
            metadata.setName(geoPackage);
            create(metadata);
        }

        return metadata;
    }",java,"public GeoPackageMetadata getOrCreate(String geoPackage) {
        GeoPackageMetadata metadata = get(geoPackage);

        if (metadata == null) {
            metadata = new GeoPackageMetadata();
            metadata.setName(geoPackage);
            create(metadata);
        }

        return metadata;
    }","['public', 'GeoPackageMetadata', 'getOrCreate', '(', 'String', 'geoPackage', ')', '{', 'GeoPackageMetadata', 'metadata', '=', 'get', '(', 'geoPackage', ')', ';', 'if', '(', 'metadata', '==', 'null', ')', '{', 'metadata', '=', 'new', 'GeoPackageMetadata', '(', ')', ';', 'metadata', '.', 'setName', '(', 'geoPackage', ')', ';', 'create', '(', 'metadata', ')', ';', '}', 'return', 'metadata', ';', '}']","Get GeoPackage metadata or create it if it does not exist

@param geoPackage GeoPackage name
@return GeoPackage metadata","['Get', 'GeoPackage', 'metadata', 'or', 'create', 'it', 'if', 'it', 'does', 'not', 'exist']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/GeoPackageMetadataDataSource.java#L226-L236,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/geoloc/ProjectionImpl.java,ProjectionImpl.getHeader,"public static String getHeader() {
    StringBuilder headerB = new StringBuilder(60);
    headerB.append(""Name"");
    Format.tab(headerB, 20, true);
    headerB.append(""Class"");
    Format.tab(headerB, 40, true);
    headerB.append(""Parameters"");
    return headerB.toString();
  }",java,"public static String getHeader() {
    StringBuilder headerB = new StringBuilder(60);
    headerB.append(""Name"");
    Format.tab(headerB, 20, true);
    headerB.append(""Class"");
    Format.tab(headerB, 40, true);
    headerB.append(""Parameters"");
    return headerB.toString();
  }","['public', 'static', 'String', 'getHeader', '(', ')', '{', 'StringBuilder', 'headerB', '=', 'new', 'StringBuilder', '(', '60', ')', ';', 'headerB', '.', 'append', '(', '""Name""', ')', ';', 'Format', '.', 'tab', '(', 'headerB', ',', '20', ',', 'true', ')', ';', 'headerB', '.', 'append', '(', '""Class""', ')', ';', 'Format', '.', 'tab', '(', 'headerB', ',', '40', ',', 'true', ')', ';', 'headerB', '.', 'append', '(', '""Parameters""', ')', ';', 'return', 'headerB', '.', 'toString', '(', ')', ';', '}']","Get a header for display.

@return human readable header for display","['Get', 'a', 'header', 'for', 'display', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/geoloc/ProjectionImpl.java#L278-L286,test
vdmeer/execs,src/main/java/de/vandermeer/execs/cf/CF_Locator.java,CF_Locator.getCfLocations,"public Map<URI, String> getCfLocations(){
		if(this.needsReRun==true){
			this.locationMap.clear();
			String pathSep = System.getProperty(""path.separator"");
			String classpath = System.getProperty(""java.class.path"");
			StringTokenizer st = new StringTokenizer(classpath, pathSep);

			File file = null;
			while(st.hasMoreTokens()){
				String path = st.nextToken();
				file = new File(path);
				this.include(file);
			}
		}

		this.needsReRun = false;
		return this.locationMap;
	}",java,"public Map<URI, String> getCfLocations(){
		if(this.needsReRun==true){
			this.locationMap.clear();
			String pathSep = System.getProperty(""path.separator"");
			String classpath = System.getProperty(""java.class.path"");
			StringTokenizer st = new StringTokenizer(classpath, pathSep);

			File file = null;
			while(st.hasMoreTokens()){
				String path = st.nextToken();
				file = new File(path);
				this.include(file);
			}
		}

		this.needsReRun = false;
		return this.locationMap;
	}","['public', 'Map', '<', 'URI', ',', 'String', '>', 'getCfLocations', '(', ')', '{', 'if', '(', 'this', '.', 'needsReRun', '==', 'true', ')', '{', 'this', '.', 'locationMap', '.', 'clear', '(', ')', ';', 'String', 'pathSep', '=', 'System', '.', 'getProperty', '(', '""path.separator""', ')', ';', 'String', 'classpath', '=', 'System', '.', 'getProperty', '(', '""java.class.path""', ')', ';', 'StringTokenizer', 'st', '=', 'new', 'StringTokenizer', '(', 'classpath', ',', 'pathSep', ')', ';', 'File', 'file', '=', 'null', ';', 'while', '(', 'st', '.', 'hasMoreTokens', '(', ')', ')', '{', 'String', 'path', '=', 'st', '.', 'nextToken', '(', ')', ';', 'file', '=', 'new', 'File', '(', 'path', ')', ';', 'this', '.', 'include', '(', 'file', ')', ';', '}', '}', 'this', '.', 'needsReRun', '=', 'false', ';', 'return', 'this', '.', 'locationMap', ';', '}']","Runs the locator and collects all locations using the filters if set.
The method can be called multiple times and will only result in a new map if any of the filters have been changed.
If no filter has been changed, the current map will be returned.
@return returns a map with all found locations, empty if none found","['Runs', 'the', 'locator', 'and', 'collects', 'all', 'locations', 'using', 'the', 'filters', 'if', 'set', '.', 'The', 'method', 'can', 'be', 'called', 'multiple', 'times', 'and', 'will', 'only', 'result', 'in', 'a', 'new', 'map', 'if', 'any', 'of', 'the', 'filters', 'have', 'been', 'changed', '.', 'If', 'no', 'filter', 'has', 'been', 'changed', 'the', 'current', 'map', 'will', 'be', 'returned', '.']",ac73170bfd449de1f460248d56ece57ff3b0c761,https://github.com/vdmeer/execs/blob/ac73170bfd449de1f460248d56ece57ff3b0c761/src/main/java/de/vandermeer/execs/cf/CF_Locator.java#L96-L113,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/ops/aggregates/Batch.java,Batch.getBatches,"public static <U extends Aggregate> List<Batch<U>> getBatches(List<U> list, int partitionSize) {
        List<List<U>> partitions = Lists.partition(list, partitionSize);
        List<Batch<U>> split = new ArrayList<>();

        for (List<U> partition : partitions) {
            split.add(new Batch<U>(partition));
        }

        return split;
    }",java,"public static <U extends Aggregate> List<Batch<U>> getBatches(List<U> list, int partitionSize) {
        List<List<U>> partitions = Lists.partition(list, partitionSize);
        List<Batch<U>> split = new ArrayList<>();

        for (List<U> partition : partitions) {
            split.add(new Batch<U>(partition));
        }

        return split;
    }","['public', 'static', '<', 'U', 'extends', 'Aggregate', '>', 'List', '<', 'Batch', '<', 'U', '>', '>', 'getBatches', '(', 'List', '<', 'U', '>', 'list', ',', 'int', 'partitionSize', ')', '{', 'List', '<', 'List', '<', 'U', '>>', 'partitions', '=', 'Lists', '.', 'partition', '(', 'list', ',', 'partitionSize', ')', ';', 'List', '<', 'Batch', '<', 'U', '>', '>', 'split', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'for', '(', 'List', '<', 'U', '>', 'partition', ':', 'partitions', ')', '{', 'split', '.', 'add', '(', 'new', 'Batch', '<', 'U', '>', '(', 'partition', ')', ')', ';', '}', 'return', 'split', ';', '}']","Helper method to create batch from list of aggregates, for cases when list of aggregates is higher then batchLimit

@param list
@param <U>
@return","['Helper', 'method', 'to', 'create', 'batch', 'from', 'list', 'of', 'aggregates', 'for', 'cases', 'when', 'list', 'of', 'aggregates', 'is', 'higher', 'then', 'batchLimit']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/ops/aggregates/Batch.java#L105-L114,test
streamsets/datacollector,container/src/main/java/com/streamsets/datacollector/cli/sch/SchAdmin.java,SchAdmin.retrieveUserToken,"private static String retrieveUserToken(String url, String username, String password) {
    Response response = null;
    try {
      Map<String, String> loginJson = new HashMap<>();
      loginJson.put(""userName"", username);
      loginJson.put(""password"", password);
      response = ClientBuilder.newClient()
          .target(url + ""/security/public-rest/v1/authentication/login"")
          .register(new CsrfProtectionFilter(""CSRF""))
          .request()
          .post(Entity.json(loginJson));
      if (response.getStatus() != Response.Status.OK.getStatusCode()) {
        throw new RuntimeException(Utils.format(""DPM Login failed, status code '{}': {}"",
            response.getStatus(),
            response.readEntity(String.class)
        ));
      }
    } finally {
      if (response != null) {
        response.close();
      }
    }

   return response.getHeaderString(SSOConstants.X_USER_AUTH_TOKEN);
  }",java,"private static String retrieveUserToken(String url, String username, String password) {
    Response response = null;
    try {
      Map<String, String> loginJson = new HashMap<>();
      loginJson.put(""userName"", username);
      loginJson.put(""password"", password);
      response = ClientBuilder.newClient()
          .target(url + ""/security/public-rest/v1/authentication/login"")
          .register(new CsrfProtectionFilter(""CSRF""))
          .request()
          .post(Entity.json(loginJson));
      if (response.getStatus() != Response.Status.OK.getStatusCode()) {
        throw new RuntimeException(Utils.format(""DPM Login failed, status code '{}': {}"",
            response.getStatus(),
            response.readEntity(String.class)
        ));
      }
    } finally {
      if (response != null) {
        response.close();
      }
    }

   return response.getHeaderString(SSOConstants.X_USER_AUTH_TOKEN);
  }","['private', 'static', 'String', 'retrieveUserToken', '(', 'String', 'url', ',', 'String', 'username', ',', 'String', 'password', ')', '{', 'Response', 'response', '=', 'null', ';', 'try', '{', 'Map', '<', 'String', ',', 'String', '>', 'loginJson', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'loginJson', '.', 'put', '(', '""userName""', ',', 'username', ')', ';', 'loginJson', '.', 'put', '(', '""password""', ',', 'password', ')', ';', 'response', '=', 'ClientBuilder', '.', 'newClient', '(', ')', '.', 'target', '(', 'url', '+', '""/security/public-rest/v1/authentication/login""', ')', '.', 'register', '(', 'new', 'CsrfProtectionFilter', '(', '""CSRF""', ')', ')', '.', 'request', '(', ')', '.', 'post', '(', 'Entity', '.', 'json', '(', 'loginJson', ')', ')', ';', 'if', '(', 'response', '.', 'getStatus', '(', ')', '!=', 'Response', '.', 'Status', '.', 'OK', '.', 'getStatusCode', '(', ')', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'Utils', '.', 'format', '(', '""DPM Login failed, status code \'{}\': {}""', ',', 'response', '.', 'getStatus', '(', ')', ',', 'response', '.', 'readEntity', '(', 'String', '.', 'class', ')', ')', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'response', '!=', 'null', ')', '{', 'response', '.', 'close', '(', ')', ';', '}', '}', 'return', 'response', '.', 'getHeaderString', '(', 'SSOConstants', '.', 'X_USER_AUTH_TOKEN', ')', ';', '}']",Login user and retrieve authentication token.,"['Login', 'user', 'and', 'retrieve', 'authentication', 'token', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/cli/sch/SchAdmin.java#L249-L273,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java,ProfileTableImpl.profileExists,"public boolean profileExists(String profileName) {
		
		boolean result = component.getProfileEntityFramework().findProfile(this.getProfileTableName(), profileName) != null;
		
		if (logger.isDebugEnabled()) {
			logger.debug(""Profile named ""+profileName+(result ? """" : "" does not"")+"" exists on table named "" + this.getProfileTableName());
		} 
		
		return result;
	}",java,"public boolean profileExists(String profileName) {
		
		boolean result = component.getProfileEntityFramework().findProfile(this.getProfileTableName(), profileName) != null;
		
		if (logger.isDebugEnabled()) {
			logger.debug(""Profile named ""+profileName+(result ? """" : "" does not"")+"" exists on table named "" + this.getProfileTableName());
		} 
		
		return result;
	}","['public', 'boolean', 'profileExists', '(', 'String', 'profileName', ')', '{', 'boolean', 'result', '=', 'component', '.', 'getProfileEntityFramework', '(', ')', '.', 'findProfile', '(', 'this', '.', 'getProfileTableName', '(', ')', ',', 'profileName', ')', '!=', 'null', ';', 'if', '(', 'logger', '.', 'isDebugEnabled', '(', ')', ')', '{', 'logger', '.', 'debug', '(', '""Profile named ""', '+', 'profileName', '+', '(', 'result', '?', '""""', ':', '"" does not""', ')', '+', '"" exists on table named ""', '+', 'this', '.', 'getProfileTableName', '(', ')', ')', ';', '}', 'return', 'result', ';', '}']","Determines if profile is in back end storage == visible to other
compoenents than MBean, if null is passed as argumetn it must check for
any other than defualt?","['Determines', 'if', 'profile', 'is', 'in', 'back', 'end', 'storage', '==', 'visible', 'to', 'other', 'compoenents', 'than', 'MBean', 'if', 'null', 'is', 'passed', 'as', 'argumetn', 'it', 'must', 'check', 'for', 'any', 'other', 'than', 'defualt?']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java#L631-L640,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/queues/WrapperQueue.java,WrapperQueue.signalOnSizeThresholdCrossing,"private void signalOnSizeThresholdCrossing(long oldSize, long newSize)
    {
        if (signalable != null)
        {
            if ((oldSize >= lowWaterSizeThreshold) && (newSize < lowWaterSizeThreshold))
            {
                signalable.signalAll();
            }
            else if ((oldSize >= highWaterSizeThreshold) && (newSize < highWaterSizeThreshold))
            {
                signalable.signal();
            }
        }
    }",java,"private void signalOnSizeThresholdCrossing(long oldSize, long newSize)
    {
        if (signalable != null)
        {
            if ((oldSize >= lowWaterSizeThreshold) && (newSize < lowWaterSizeThreshold))
            {
                signalable.signalAll();
            }
            else if ((oldSize >= highWaterSizeThreshold) && (newSize < highWaterSizeThreshold))
            {
                signalable.signal();
            }
        }
    }","['private', 'void', 'signalOnSizeThresholdCrossing', '(', 'long', 'oldSize', ',', 'long', 'newSize', ')', '{', 'if', '(', 'signalable', '!=', 'null', ')', '{', 'if', '(', '(', 'oldSize', '>=', 'lowWaterSizeThreshold', ')', '&&', '(', 'newSize', '<', 'lowWaterSizeThreshold', ')', ')', '{', 'signalable', '.', 'signalAll', '(', ')', ';', '}', 'else', 'if', '(', '(', 'oldSize', '>=', 'highWaterSizeThreshold', ')', '&&', '(', 'newSize', '<', 'highWaterSizeThreshold', ')', ')', '{', 'signalable', '.', 'signal', '(', ')', ';', '}', '}', '}']","Signals the signallable resource if the size crosses a threshold boundary in a downward direction.

@param oldSize The old size.
@param newSize The new size.","['Signals', 'the', 'signallable', 'resource', 'if', 'the', 'size', 'crosses', 'a', 'threshold', 'boundary', 'in', 'a', 'downward', 'direction', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/queues/WrapperQueue.java#L783-L796,test
jboss/jboss-common-core,src/main/java/org/jboss/util/StopWatch.java,StopWatch.start,"public void start(final boolean reset)
   {
      if (!running) {
         if (reset) reset();
         start = System.currentTimeMillis();
         running = true;
      }
   }",java,"public void start(final boolean reset)
   {
      if (!running) {
         if (reset) reset();
         start = System.currentTimeMillis();
         running = true;
      }
   }","['public', 'void', 'start', '(', 'final', 'boolean', 'reset', ')', '{', 'if', '(', '!', 'running', ')', '{', 'if', '(', 'reset', ')', 'reset', '(', ')', ';', 'start', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'running', '=', 'true', ';', '}', '}']","Start the watch.

@param reset   True to reset the watch prior to starting.","['Start', 'the', 'watch', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/StopWatch.java#L68-L75,test
hawkular/hawkular-metrics,containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java,TokenAuthenticator.generateSubjectAccessReview,"private String generateSubjectAccessReview(String namespace, String verb, String resource) {
        ObjectNode objectNode = objectMapper.createObjectNode();
        objectNode.put(""apiVersion"", ""v1"");
        objectNode.put(""kind"", KIND);
        objectNode.put(""resource"", resource);
        objectNode.put(""verb"", verb);
        objectNode.put(""namespace"", namespace);
        return objectNode.toString();
    }",java,"private String generateSubjectAccessReview(String namespace, String verb, String resource) {
        ObjectNode objectNode = objectMapper.createObjectNode();
        objectNode.put(""apiVersion"", ""v1"");
        objectNode.put(""kind"", KIND);
        objectNode.put(""resource"", resource);
        objectNode.put(""verb"", verb);
        objectNode.put(""namespace"", namespace);
        return objectNode.toString();
    }","['private', 'String', 'generateSubjectAccessReview', '(', 'String', 'namespace', ',', 'String', 'verb', ',', 'String', 'resource', ')', '{', 'ObjectNode', 'objectNode', '=', 'objectMapper', '.', 'createObjectNode', '(', ')', ';', 'objectNode', '.', 'put', '(', '""apiVersion""', ',', '""v1""', ')', ';', 'objectNode', '.', 'put', '(', '""kind""', ',', 'KIND', ')', ';', 'objectNode', '.', 'put', '(', '""resource""', ',', 'resource', ')', ';', 'objectNode', '.', 'put', '(', '""verb""', ',', 'verb', ')', ';', 'objectNode', '.', 'put', '(', '""namespace""', ',', 'namespace', ')', ';', 'return', 'objectNode', '.', 'toString', '(', ')', ';', '}']","Generates a SubjectAccessReview object used to request if a user has a certain permission or not.

@param namespace the namespace
@param verb      the requested permission

@return JSON text representation of the SubjectAccessReview object","['Generates', 'a', 'SubjectAccessReview', 'object', 'used', 'to', 'request', 'if', 'a', 'user', 'has', 'a', 'certain', 'permission', 'or', 'not', '.']",6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c,https://github.com/hawkular/hawkular-metrics/blob/6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java#L296-L304,test
oblac/jodd,jodd-json/src/main/java/jodd/json/MapToBean.java,MapToBean.map2bean,"public Object map2bean(final Map map, Class targetType) {
		Object target = null;

		// create targets type
		String className = (String) map.get(classMetadataName);

		if (className == null) {
			if (targetType == null) {
				// nothing to do, no information about target type found
				target = map;
			}
		}
		else {
			checkClassName(jsonParser.classnameWhitelist, className);

			try {
				targetType = ClassLoaderUtil.loadClass(className);
			} catch (ClassNotFoundException cnfex) {
				throw new JsonException(cnfex);
			}
		}

		if (target == null) {
			target = jsonParser.newObjectInstance(targetType);
		}

		ClassDescriptor cd = ClassIntrospector.get().lookup(target.getClass());

		boolean targetIsMap = target instanceof Map;

		for (Object key : map.keySet()) {
			String keyName = key.toString();

			if (classMetadataName != null) {
				if (keyName.equals(classMetadataName)) {
					continue;
				}
			}

			PropertyDescriptor pd = cd.getPropertyDescriptor(keyName, declared);

			if (!targetIsMap && pd == null) {
				// target property does not exist, continue
				continue;
			}

			// value is one of JSON basic types, like Number, Map, List...
			Object value = map.get(key);

			Class propertyType = pd == null ? null : pd.getType();
			Class componentType = pd == null ? null : pd.resolveComponentType(true);

			if (value != null) {
				if (value instanceof List) {
					if (componentType != null && componentType != String.class) {
						value = generifyList((List) value, componentType);
					}
				}
				else if (value instanceof Map) {
					// if the value we want to inject is a Map...
					if (!ClassUtil.isTypeOf(propertyType, Map.class)) {
						// ... and if target is NOT a map
						value = map2bean((Map) value, propertyType);
					}
					else {
						// target is also a Map, but we might need to generify it
						Class keyType = pd == null ? null : pd.resolveKeyType(true);

						if (keyType != String.class || componentType != String.class) {
							// generify
							value = generifyMap((Map) value, keyType, componentType);
						}
					}
				}
			}

			if (targetIsMap) {
				((Map)target).put(keyName, value);
			}
			else {
				try {
					setValue(target, pd, value);
				} catch (Exception ignore) {
					ignore.printStackTrace();
				}
			}
		}

		return target;
	}",java,"public Object map2bean(final Map map, Class targetType) {
		Object target = null;

		// create targets type
		String className = (String) map.get(classMetadataName);

		if (className == null) {
			if (targetType == null) {
				// nothing to do, no information about target type found
				target = map;
			}
		}
		else {
			checkClassName(jsonParser.classnameWhitelist, className);

			try {
				targetType = ClassLoaderUtil.loadClass(className);
			} catch (ClassNotFoundException cnfex) {
				throw new JsonException(cnfex);
			}
		}

		if (target == null) {
			target = jsonParser.newObjectInstance(targetType);
		}

		ClassDescriptor cd = ClassIntrospector.get().lookup(target.getClass());

		boolean targetIsMap = target instanceof Map;

		for (Object key : map.keySet()) {
			String keyName = key.toString();

			if (classMetadataName != null) {
				if (keyName.equals(classMetadataName)) {
					continue;
				}
			}

			PropertyDescriptor pd = cd.getPropertyDescriptor(keyName, declared);

			if (!targetIsMap && pd == null) {
				// target property does not exist, continue
				continue;
			}

			// value is one of JSON basic types, like Number, Map, List...
			Object value = map.get(key);

			Class propertyType = pd == null ? null : pd.getType();
			Class componentType = pd == null ? null : pd.resolveComponentType(true);

			if (value != null) {
				if (value instanceof List) {
					if (componentType != null && componentType != String.class) {
						value = generifyList((List) value, componentType);
					}
				}
				else if (value instanceof Map) {
					// if the value we want to inject is a Map...
					if (!ClassUtil.isTypeOf(propertyType, Map.class)) {
						// ... and if target is NOT a map
						value = map2bean((Map) value, propertyType);
					}
					else {
						// target is also a Map, but we might need to generify it
						Class keyType = pd == null ? null : pd.resolveKeyType(true);

						if (keyType != String.class || componentType != String.class) {
							// generify
							value = generifyMap((Map) value, keyType, componentType);
						}
					}
				}
			}

			if (targetIsMap) {
				((Map)target).put(keyName, value);
			}
			else {
				try {
					setValue(target, pd, value);
				} catch (Exception ignore) {
					ignore.printStackTrace();
				}
			}
		}

		return target;
	}","['public', 'Object', 'map2bean', '(', 'final', 'Map', 'map', ',', 'Class', 'targetType', ')', '{', 'Object', 'target', '=', 'null', ';', '// create targets type', 'String', 'className', '=', '(', 'String', ')', 'map', '.', 'get', '(', 'classMetadataName', ')', ';', 'if', '(', 'className', '==', 'null', ')', '{', 'if', '(', 'targetType', '==', 'null', ')', '{', '// nothing to do, no information about target type found', 'target', '=', 'map', ';', '}', '}', 'else', '{', 'checkClassName', '(', 'jsonParser', '.', 'classnameWhitelist', ',', 'className', ')', ';', 'try', '{', 'targetType', '=', 'ClassLoaderUtil', '.', 'loadClass', '(', 'className', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'cnfex', ')', '{', 'throw', 'new', 'JsonException', '(', 'cnfex', ')', ';', '}', '}', 'if', '(', 'target', '==', 'null', ')', '{', 'target', '=', 'jsonParser', '.', 'newObjectInstance', '(', 'targetType', ')', ';', '}', 'ClassDescriptor', 'cd', '=', 'ClassIntrospector', '.', 'get', '(', ')', '.', 'lookup', '(', 'target', '.', 'getClass', '(', ')', ')', ';', 'boolean', 'targetIsMap', '=', 'target', 'instanceof', 'Map', ';', 'for', '(', 'Object', 'key', ':', 'map', '.', 'keySet', '(', ')', ')', '{', 'String', 'keyName', '=', 'key', '.', 'toString', '(', ')', ';', 'if', '(', 'classMetadataName', '!=', 'null', ')', '{', 'if', '(', 'keyName', '.', 'equals', '(', 'classMetadataName', ')', ')', '{', 'continue', ';', '}', '}', 'PropertyDescriptor', 'pd', '=', 'cd', '.', 'getPropertyDescriptor', '(', 'keyName', ',', 'declared', ')', ';', 'if', '(', '!', 'targetIsMap', '&&', 'pd', '==', 'null', ')', '{', '// target property does not exist, continue', 'continue', ';', '}', '// value is one of JSON basic types, like Number, Map, List...', 'Object', 'value', '=', 'map', '.', 'get', '(', 'key', ')', ';', 'Class', 'propertyType', '=', 'pd', '==', 'null', '?', 'null', ':', 'pd', '.', 'getType', '(', ')', ';', 'Class', 'componentType', '=', 'pd', '==', 'null', '?', 'null', ':', 'pd', '.', 'resolveComponentType', '(', 'true', ')', ';', 'if', '(', 'value', '!=', 'null', ')', '{', 'if', '(', 'value', 'instanceof', 'List', ')', '{', 'if', '(', 'componentType', '!=', 'null', '&&', 'componentType', '!=', 'String', '.', 'class', ')', '{', 'value', '=', 'generifyList', '(', '(', 'List', ')', 'value', ',', 'componentType', ')', ';', '}', '}', 'else', 'if', '(', 'value', 'instanceof', 'Map', ')', '{', '// if the value we want to inject is a Map...', 'if', '(', '!', 'ClassUtil', '.', 'isTypeOf', '(', 'propertyType', ',', 'Map', '.', 'class', ')', ')', '{', '// ... and if target is NOT a map', 'value', '=', 'map2bean', '(', '(', 'Map', ')', 'value', ',', 'propertyType', ')', ';', '}', 'else', '{', '// target is also a Map, but we might need to generify it', 'Class', 'keyType', '=', 'pd', '==', 'null', '?', 'null', ':', 'pd', '.', 'resolveKeyType', '(', 'true', ')', ';', 'if', '(', 'keyType', '!=', 'String', '.', 'class', '||', 'componentType', '!=', 'String', '.', 'class', ')', '{', '// generify', 'value', '=', 'generifyMap', '(', '(', 'Map', ')', 'value', ',', 'keyType', ',', 'componentType', ')', ';', '}', '}', '}', '}', 'if', '(', 'targetIsMap', ')', '{', '(', '(', 'Map', ')', 'target', ')', '.', 'put', '(', 'keyName', ',', 'value', ')', ';', '}', 'else', '{', 'try', '{', 'setValue', '(', 'target', ',', 'pd', ',', 'value', ')', ';', '}', 'catch', '(', 'Exception', 'ignore', ')', '{', 'ignore', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', 'return', 'target', ';', '}']",Converts map to target type.,"['Converts', 'map', 'to', 'target', 'type', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-json/src/main/java/jodd/json/MapToBean.java#L60-L149,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java,GridCoordSys.findXYindexFromLatLonBounded,"@Override
  public int[] findXYindexFromLatLonBounded(double lat, double lon, int[] result) {
    Projection dataProjection = getProjection();
    ProjectionPoint pp = dataProjection.latLonToProj(new LatLonPointImpl(lat, lon), new ProjectionPointImpl());

    return findXYindexFromCoordBounded(pp.getX(), pp.getY(), result);
  }",java,"@Override
  public int[] findXYindexFromLatLonBounded(double lat, double lon, int[] result) {
    Projection dataProjection = getProjection();
    ProjectionPoint pp = dataProjection.latLonToProj(new LatLonPointImpl(lat, lon), new ProjectionPointImpl());

    return findXYindexFromCoordBounded(pp.getX(), pp.getY(), result);
  }","['@', 'Override', 'public', 'int', '[', ']', 'findXYindexFromLatLonBounded', '(', 'double', 'lat', ',', 'double', 'lon', ',', 'int', '[', ']', 'result', ')', '{', 'Projection', 'dataProjection', '=', 'getProjection', '(', ')', ';', 'ProjectionPoint', 'pp', '=', 'dataProjection', '.', 'latLonToProj', '(', 'new', 'LatLonPointImpl', '(', 'lat', ',', 'lon', ')', ',', 'new', 'ProjectionPointImpl', '(', ')', ')', ';', 'return', 'findXYindexFromCoordBounded', '(', 'pp', '.', 'getX', '(', ')', ',', 'pp', '.', 'getY', '(', ')', ',', 'result', ')', ';', '}']","Given a lat,lon point, find the x,y index in the coordinate system.
If outside the range, the closest point is returned

@param lat    latitude position.
@param lon    longitude position.
@param result put result in here, may be null
@return int[2], 0=x,1=y indices in the coordinate system of the point.","['Given', 'a', 'lat', 'lon', 'point', 'find', 'the', 'x', 'y', 'index', 'in', 'the', 'coordinate', 'system', '.', 'If', 'outside', 'the', 'range', 'the', 'closest', 'point', 'is', 'returned']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java#L872-L878,test
ArpNetworking/logback-steno,src/main/java/com/arpnetworking/steno/LogValueMapFactory.java,LogValueMapFactory.of,"public static LogValueMap of(final String k1, final Object v1) {
        return builder()
                .put(k1, v1)
                .build();
    }",java,"public static LogValueMap of(final String k1, final Object v1) {
        return builder()
                .put(k1, v1)
                .build();
    }","['public', 'static', 'LogValueMap', 'of', '(', 'final', 'String', 'k1', ',', 'final', 'Object', 'v1', ')', '{', 'return', 'builder', '(', ')', '.', 'put', '(', 'k1', ',', 'v1', ')', '.', 'build', '(', ')', ';', '}']","Construct an immutable map from one key-value pair. Although this is more convenient than the
static factory methods this method does not capture the instance being logged.

@since 1.9.2

@param k1 Key one.
@param v1 Value one.
@return New <code>LogValueMap</code>.","['Construct', 'an', 'immutable', 'map', 'from', 'one', 'key', '-', 'value', 'pair', '.', 'Although', 'this', 'is', 'more', 'convenient', 'than', 'the', 'static', 'factory', 'methods', 'this', 'method', 'does', 'not', 'capture', 'the', 'instance', 'being', 'logged', '.']",abd5c68ce7d42c39f80ffbad6d162d5fed3a346e,https://github.com/ArpNetworking/logback-steno/blob/abd5c68ce7d42c39f80ffbad6d162d5fed3a346e/src/main/java/com/arpnetworking/steno/LogValueMapFactory.java#L77-L81,test
myabc/markdownj,core/src/main/java/org/markdownj/MarkdownProcessor.java,MarkdownProcessor.escapeSpecialCharsWithinTagAttributes,"private TextEditor escapeSpecialCharsWithinTagAttributes(TextEditor text) {
        Collection<HTMLToken> tokens = text.tokenizeHTML();
        TextEditor newText = new TextEditor("""");

        for (HTMLToken token : tokens) {
            String value = token.getText();
            if (token.isTag()) {
                value = value.replaceAll(""\\\\"", CHAR_PROTECTOR.encode(""\\""));
                value = value.replaceAll(""`"", CHAR_PROTECTOR.encode(""`""));
                value = value.replaceAll(""\\*"", CHAR_PROTECTOR.encode(""*""));
                value = value.replaceAll(""_"", CHAR_PROTECTOR.encode(""_""));
            }
            newText.append(value);
        }

        return newText;
    }",java,"private TextEditor escapeSpecialCharsWithinTagAttributes(TextEditor text) {
        Collection<HTMLToken> tokens = text.tokenizeHTML();
        TextEditor newText = new TextEditor("""");

        for (HTMLToken token : tokens) {
            String value = token.getText();
            if (token.isTag()) {
                value = value.replaceAll(""\\\\"", CHAR_PROTECTOR.encode(""\\""));
                value = value.replaceAll(""`"", CHAR_PROTECTOR.encode(""`""));
                value = value.replaceAll(""\\*"", CHAR_PROTECTOR.encode(""*""));
                value = value.replaceAll(""_"", CHAR_PROTECTOR.encode(""_""));
            }
            newText.append(value);
        }

        return newText;
    }","['private', 'TextEditor', 'escapeSpecialCharsWithinTagAttributes', '(', 'TextEditor', 'text', ')', '{', 'Collection', '<', 'HTMLToken', '>', 'tokens', '=', 'text', '.', 'tokenizeHTML', '(', ')', ';', 'TextEditor', 'newText', '=', 'new', 'TextEditor', '(', '""""', ')', ';', 'for', '(', 'HTMLToken', 'token', ':', 'tokens', ')', '{', 'String', 'value', '=', 'token', '.', 'getText', '(', ')', ';', 'if', '(', 'token', '.', 'isTag', '(', ')', ')', '{', 'value', '=', 'value', '.', 'replaceAll', '(', '""\\\\\\\\""', ',', 'CHAR_PROTECTOR', '.', 'encode', '(', '""\\\\""', ')', ')', ';', 'value', '=', 'value', '.', 'replaceAll', '(', '""`""', ',', 'CHAR_PROTECTOR', '.', 'encode', '(', '""`""', ')', ')', ';', 'value', '=', 'value', '.', 'replaceAll', '(', '""\\\\*""', ',', 'CHAR_PROTECTOR', '.', 'encode', '(', '""*""', ')', ')', ';', 'value', '=', 'value', '.', 'replaceAll', '(', '""_""', ',', 'CHAR_PROTECTOR', '.', 'encode', '(', '""_""', ')', ')', ';', '}', 'newText', '.', 'append', '(', 'value', ')', ';', '}', 'return', 'newText', ';', '}']","escape special characters

Within tags -- meaning between < and > -- encode [\ ` * _] so they
don't conflict with their use in Markdown for code, italics and strong.
We're replacing each such character with its corresponding random string
value; this is likely overkill, but it should prevent us from colliding
with the escape values by accident.

@param text
@return","['escape', 'special', 'characters']",f8ed00caeb69fc602aa2209812d953c26c2a4263,https://github.com/myabc/markdownj/blob/f8ed00caeb69fc602aa2209812d953c26c2a4263/core/src/main/java/org/markdownj/MarkdownProcessor.java#L654-L670,test
Unidata/thredds,dap4/d4lib/src/main/java/dap4/dap4lib/DMRPrinter.java,DMRPrinter.printXMLAttributes,"void
    printXMLAttributes(DapNode node, CEConstraint ce, int flags)
            throws IOException
    {
        if((flags & PERLINE) != 0)
            printer.indent(2);

        // Print name first, if non-null and !NONAME
        // Note that the short name needs to use
        // entity escaping (which is done by printXMLattribute),
        // but backslash escaping is not required.
        String name = node.getShortName();
        if(name != null && (flags & NONAME) == 0) {
            name = node.getShortName();
            printXMLAttribute(""name"", name, flags);
        }

        switch (node.getSort()) {
        case DATASET:
            DapDataset dataset = (DapDataset) node;
            printXMLAttribute(""dapVersion"", dataset.getDapVersion(), flags);
            printXMLAttribute(""dmrVersion"", dataset.getDMRVersion(), flags);
            // boilerplate
            printXMLAttribute(""xmlns"", ""http://xml.opendap.org/ns/DAP/4.0#"", flags);
            printXMLAttribute(""xmlns:dap"", ""http://xml.opendap.org/ns/DAP/4.0#"", flags);
            break;

        case DIMENSION:
            DapDimension orig = (DapDimension) node;
            if(orig.isShared()) {//not Anonymous
                // name will have already been printed
                // Now, we need to get the size as defined by the constraint
                DapDimension actual = this.ce.getRedefDim(orig);
                if(actual == null)
                    actual = orig;
                long size = actual.getSize();
                printXMLAttribute(""size"", Long.toString(size), flags);
            }
            break;

        case ENUMERATION:
            printXMLAttribute(""basetype"", ((DapEnumeration) node).getBaseType().getTypeName(), flags);
            break;

        case VARIABLE:
            DapVariable var = (DapVariable) node;
            DapType basetype = var.getBaseType();
            if(basetype.isEnumType()) {
                printXMLAttribute(""enum"", basetype.getTypeName(), flags);
            }
            break;

        case ATTRIBUTE:
            DapAttribute attr = (DapAttribute) node;
            basetype = attr.getBaseType();
            printXMLAttribute(""type"", basetype.getTypeName(), flags);
            if(attr.getBaseType().isEnumType()) {
                printXMLAttribute(""enum"", basetype.getTypeName(), flags);
            }
            break;

        default:
            break; // node either has no attributes or name only
        } //switch
        if(!this.testing)
            printReserved(node);
        if((flags & PERLINE) != 0) {
            printer.outdent(2);
        }
    }",java,"void
    printXMLAttributes(DapNode node, CEConstraint ce, int flags)
            throws IOException
    {
        if((flags & PERLINE) != 0)
            printer.indent(2);

        // Print name first, if non-null and !NONAME
        // Note that the short name needs to use
        // entity escaping (which is done by printXMLattribute),
        // but backslash escaping is not required.
        String name = node.getShortName();
        if(name != null && (flags & NONAME) == 0) {
            name = node.getShortName();
            printXMLAttribute(""name"", name, flags);
        }

        switch (node.getSort()) {
        case DATASET:
            DapDataset dataset = (DapDataset) node;
            printXMLAttribute(""dapVersion"", dataset.getDapVersion(), flags);
            printXMLAttribute(""dmrVersion"", dataset.getDMRVersion(), flags);
            // boilerplate
            printXMLAttribute(""xmlns"", ""http://xml.opendap.org/ns/DAP/4.0#"", flags);
            printXMLAttribute(""xmlns:dap"", ""http://xml.opendap.org/ns/DAP/4.0#"", flags);
            break;

        case DIMENSION:
            DapDimension orig = (DapDimension) node;
            if(orig.isShared()) {//not Anonymous
                // name will have already been printed
                // Now, we need to get the size as defined by the constraint
                DapDimension actual = this.ce.getRedefDim(orig);
                if(actual == null)
                    actual = orig;
                long size = actual.getSize();
                printXMLAttribute(""size"", Long.toString(size), flags);
            }
            break;

        case ENUMERATION:
            printXMLAttribute(""basetype"", ((DapEnumeration) node).getBaseType().getTypeName(), flags);
            break;

        case VARIABLE:
            DapVariable var = (DapVariable) node;
            DapType basetype = var.getBaseType();
            if(basetype.isEnumType()) {
                printXMLAttribute(""enum"", basetype.getTypeName(), flags);
            }
            break;

        case ATTRIBUTE:
            DapAttribute attr = (DapAttribute) node;
            basetype = attr.getBaseType();
            printXMLAttribute(""type"", basetype.getTypeName(), flags);
            if(attr.getBaseType().isEnumType()) {
                printXMLAttribute(""enum"", basetype.getTypeName(), flags);
            }
            break;

        default:
            break; // node either has no attributes or name only
        } //switch
        if(!this.testing)
            printReserved(node);
        if((flags & PERLINE) != 0) {
            printer.outdent(2);
        }
    }","['void', 'printXMLAttributes', '(', 'DapNode', 'node', ',', 'CEConstraint', 'ce', ',', 'int', 'flags', ')', 'throws', 'IOException', '{', 'if', '(', '(', 'flags', '&', 'PERLINE', ')', '!=', '0', ')', 'printer', '.', 'indent', '(', '2', ')', ';', '// Print name first, if non-null and !NONAME', '// Note that the short name needs to use', '// entity escaping (which is done by printXMLattribute),', '// but backslash escaping is not required.', 'String', 'name', '=', 'node', '.', 'getShortName', '(', ')', ';', 'if', '(', 'name', '!=', 'null', '&&', '(', 'flags', '&', 'NONAME', ')', '==', '0', ')', '{', 'name', '=', 'node', '.', 'getShortName', '(', ')', ';', 'printXMLAttribute', '(', '""name""', ',', 'name', ',', 'flags', ')', ';', '}', 'switch', '(', 'node', '.', 'getSort', '(', ')', ')', '{', 'case', 'DATASET', ':', 'DapDataset', 'dataset', '=', '(', 'DapDataset', ')', 'node', ';', 'printXMLAttribute', '(', '""dapVersion""', ',', 'dataset', '.', 'getDapVersion', '(', ')', ',', 'flags', ')', ';', 'printXMLAttribute', '(', '""dmrVersion""', ',', 'dataset', '.', 'getDMRVersion', '(', ')', ',', 'flags', ')', ';', '// boilerplate', 'printXMLAttribute', '(', '""xmlns""', ',', '""http://xml.opendap.org/ns/DAP/4.0#""', ',', 'flags', ')', ';', 'printXMLAttribute', '(', '""xmlns:dap""', ',', '""http://xml.opendap.org/ns/DAP/4.0#""', ',', 'flags', ')', ';', 'break', ';', 'case', 'DIMENSION', ':', 'DapDimension', 'orig', '=', '(', 'DapDimension', ')', 'node', ';', 'if', '(', 'orig', '.', 'isShared', '(', ')', ')', '{', '//not Anonymous', '// name will have already been printed', '// Now, we need to get the size as defined by the constraint', 'DapDimension', 'actual', '=', 'this', '.', 'ce', '.', 'getRedefDim', '(', 'orig', ')', ';', 'if', '(', 'actual', '==', 'null', ')', 'actual', '=', 'orig', ';', 'long', 'size', '=', 'actual', '.', 'getSize', '(', ')', ';', 'printXMLAttribute', '(', '""size""', ',', 'Long', '.', 'toString', '(', 'size', ')', ',', 'flags', ')', ';', '}', 'break', ';', 'case', 'ENUMERATION', ':', 'printXMLAttribute', '(', '""basetype""', ',', '(', '(', 'DapEnumeration', ')', 'node', ')', '.', 'getBaseType', '(', ')', '.', 'getTypeName', '(', ')', ',', 'flags', ')', ';', 'break', ';', 'case', 'VARIABLE', ':', 'DapVariable', 'var', '=', '(', 'DapVariable', ')', 'node', ';', 'DapType', 'basetype', '=', 'var', '.', 'getBaseType', '(', ')', ';', 'if', '(', 'basetype', '.', 'isEnumType', '(', ')', ')', '{', 'printXMLAttribute', '(', '""enum""', ',', 'basetype', '.', 'getTypeName', '(', ')', ',', 'flags', ')', ';', '}', 'break', ';', 'case', 'ATTRIBUTE', ':', 'DapAttribute', 'attr', '=', '(', 'DapAttribute', ')', 'node', ';', 'basetype', '=', 'attr', '.', 'getBaseType', '(', ')', ';', 'printXMLAttribute', '(', '""type""', ',', 'basetype', '.', 'getTypeName', '(', ')', ',', 'flags', ')', ';', 'if', '(', 'attr', '.', 'getBaseType', '(', ')', '.', 'isEnumType', '(', ')', ')', '{', 'printXMLAttribute', '(', '""enum""', ',', 'basetype', '.', 'getTypeName', '(', ')', ',', 'flags', ')', ';', '}', 'break', ';', 'default', ':', 'break', ';', '// node either has no attributes or name only', '}', '//switch', 'if', '(', '!', 'this', '.', 'testing', ')', 'printReserved', '(', 'node', ')', ';', 'if', '(', '(', 'flags', '&', 'PERLINE', ')', '!=', '0', ')', '{', 'printer', '.', 'outdent', '(', '2', ')', ';', '}', '}']",Print info from the node that needs to be in the form of xml attributes,"['Print', 'info', 'from', 'the', 'node', 'that', 'needs', 'to', 'be', 'in', 'the', 'form', 'of', 'xml', 'attributes']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4lib/src/main/java/dap4/dap4lib/DMRPrinter.java#L295-L364,test
abmargb/jamppa,src/main/java/org/jivesoftware/smack/util/collections/AbstractReferenceMap.java,AbstractReferenceMap.keySet,"public Set<K> keySet() {
        if (keySet == null) {
            keySet = new ReferenceKeySet<K, V>(this);
        }
        return keySet;
    }",java,"public Set<K> keySet() {
        if (keySet == null) {
            keySet = new ReferenceKeySet<K, V>(this);
        }
        return keySet;
    }","['public', 'Set', '<', 'K', '>', 'keySet', '(', ')', '{', 'if', '(', 'keySet', '==', 'null', ')', '{', 'keySet', '=', 'new', 'ReferenceKeySet', '<', 'K', ',', 'V', '>', '(', 'this', ')', ';', '}', 'return', 'keySet', ';', '}']","Returns a set view of this map's keys.

@return a set view of this map's keys","['Returns', 'a', 'set', 'view', 'of', 'this', 'map', 's', 'keys', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/util/collections/AbstractReferenceMap.java#L330-L335,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/template/PresenceNonConstant.java,PresenceNonConstant.userEncountered,"@SuppressWarnings(""unused"")
    public void userEncountered() {
        List<String> descriptors = new ArrayList<>();
        /*
        if (strict && ((!present && !fireUnknownIfNotPresent)|| !strictPresent) && addResponseDescriptors) {
            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);
            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);
            }
        } else if (present && strict && addResponseDescriptors) {
            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdPresent()) {
                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);
            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);
            }
        }*/
        descriptors.add(CommonEvents.Descriptors.NOT_INTERRUPT);
        boolean known = !fireUnknownIfNotPresent || present;
        boolean firstPresent = (!strict && !present) || (strict && !strictPresent);
        long lastSeen = this.lastSeen.until(LocalDateTime.now(), ChronoUnit.SECONDS);
        Optional<Event> presenceEvent = IdentificationManagerM.getInstance()
                .getIdentification(this)
                .flatMap(id -> PresenceEvent.createPresenceEvent(id, strict, known, firstPresent, descriptors, lastSeen))
                .map(event -> event.addEventLifeCycleListener(EventLifeCycle.APPROVED, lifeCycle -> {
                    if (known) {
                        this.lastSeen = LocalDateTime.now();
                        if (strict)
                            this.strictPresent = true;
                        present = true;
                    }
                }));
        if (!presenceEvent.isPresent()) {
            error(""unable to create PresenceEvent"");
        } else {
            fire(presenceEvent.get(), 5);
        }
    }",java,"@SuppressWarnings(""unused"")
    public void userEncountered() {
        List<String> descriptors = new ArrayList<>();
        /*
        if (strict && ((!present && !fireUnknownIfNotPresent)|| !strictPresent) && addResponseDescriptors) {
            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);
            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);
            }
        } else if (present && strict && addResponseDescriptors) {
            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdPresent()) {
                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);
            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {
                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);
            }
        }*/
        descriptors.add(CommonEvents.Descriptors.NOT_INTERRUPT);
        boolean known = !fireUnknownIfNotPresent || present;
        boolean firstPresent = (!strict && !present) || (strict && !strictPresent);
        long lastSeen = this.lastSeen.until(LocalDateTime.now(), ChronoUnit.SECONDS);
        Optional<Event> presenceEvent = IdentificationManagerM.getInstance()
                .getIdentification(this)
                .flatMap(id -> PresenceEvent.createPresenceEvent(id, strict, known, firstPresent, descriptors, lastSeen))
                .map(event -> event.addEventLifeCycleListener(EventLifeCycle.APPROVED, lifeCycle -> {
                    if (known) {
                        this.lastSeen = LocalDateTime.now();
                        if (strict)
                            this.strictPresent = true;
                        present = true;
                    }
                }));
        if (!presenceEvent.isPresent()) {
            error(""unable to create PresenceEvent"");
        } else {
            fire(presenceEvent.get(), 5);
        }
    }","['@', 'SuppressWarnings', '(', '""unused""', ')', 'public', 'void', 'userEncountered', '(', ')', '{', 'List', '<', 'String', '>', 'descriptors', '=', 'new', 'ArrayList', '<>', '(', ')', ';', '/*\n        if (strict && ((!present && !fireUnknownIfNotPresent)|| !strictPresent) && addResponseDescriptors) {\n            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdNotPresent()) {\n                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);\n            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {\n                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);\n            }\n        } else if (present && strict && addResponseDescriptors) {\n            if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMajorMinuteThresholdPresent()) {\n                descriptors.add(CommonEvents.Response.MAJOR_RESPONSE_DESCRIPTOR);\n            } else if (lastSeen.until(LocalDateTime.now(), ChronoUnit.MINUTES) > getMinorMinuteThresholdNotPresent()) {\n                descriptors.add(CommonEvents.Response.MINOR_RESPONSE_DESCRIPTOR);\n            }\n        }*/', 'descriptors', '.', 'add', '(', 'CommonEvents', '.', 'Descriptors', '.', 'NOT_INTERRUPT', ')', ';', 'boolean', 'known', '=', '!', 'fireUnknownIfNotPresent', '||', 'present', ';', 'boolean', 'firstPresent', '=', '(', '!', 'strict', '&&', '!', 'present', ')', '||', '(', 'strict', '&&', '!', 'strictPresent', ')', ';', 'long', 'lastSeen', '=', 'this', '.', 'lastSeen', '.', 'until', '(', 'LocalDateTime', '.', 'now', '(', ')', ',', 'ChronoUnit', '.', 'SECONDS', ')', ';', 'Optional', '<', 'Event', '>', 'presenceEvent', '=', 'IdentificationManagerM', '.', 'getInstance', '(', ')', '.', 'getIdentification', '(', 'this', ')', '.', 'flatMap', '(', 'id', '->', 'PresenceEvent', '.', 'createPresenceEvent', '(', 'id', ',', 'strict', ',', 'known', ',', 'firstPresent', ',', 'descriptors', ',', 'lastSeen', ')', ')', '.', 'map', '(', 'event', '->', 'event', '.', 'addEventLifeCycleListener', '(', 'EventLifeCycle', '.', 'APPROVED', ',', 'lifeCycle', '->', '{', 'if', '(', 'known', ')', '{', 'this', '.', 'lastSeen', '=', 'LocalDateTime', '.', 'now', '(', ')', ';', 'if', '(', 'strict', ')', 'this', '.', 'strictPresent', '=', 'true', ';', 'present', '=', 'true', ';', '}', '}', ')', ')', ';', 'if', '(', '!', 'presenceEvent', '.', 'isPresent', '(', ')', ')', '{', 'error', '(', '""unable to create PresenceEvent""', ')', ';', '}', 'else', '{', 'fire', '(', 'presenceEvent', '.', 'get', '(', ')', ',', '5', ')', ';', '}', '}']",call this method when you have encountered the user,"['call', 'this', 'method', 'when', 'you', 'have', 'encountered', 'the', 'user']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/presence/provider/template/PresenceNonConstant.java#L65-L102,test
Koekiebox-PTY-LTD/Fluid,fluid-api/src/main/java/com/fluidbpm/program/api/util/cache/CacheUtil.java,CacheUtil.shutdown,"public void shutdown()
	{
		if(this.memcachedClient != null &&
				!this.memcachedClient.isShutdown())
		{
			try {
				this.memcachedClient.shutdown();
			}
			//
			catch (IOException eParam) {

				throw new FluidCacheException(
						""Unable to create shutdown MemCache client. ""+eParam.getMessage(), eParam);
			}
		}
	}",java,"public void shutdown()
	{
		if(this.memcachedClient != null &&
				!this.memcachedClient.isShutdown())
		{
			try {
				this.memcachedClient.shutdown();
			}
			//
			catch (IOException eParam) {

				throw new FluidCacheException(
						""Unable to create shutdown MemCache client. ""+eParam.getMessage(), eParam);
			}
		}
	}","['public', 'void', 'shutdown', '(', ')', '{', 'if', '(', 'this', '.', 'memcachedClient', '!=', 'null', '&&', '!', 'this', '.', 'memcachedClient', '.', 'isShutdown', '(', ')', ')', '{', 'try', '{', 'this', '.', 'memcachedClient', '.', 'shutdown', '(', ')', ';', '}', '//', 'catch', '(', 'IOException', 'eParam', ')', '{', 'throw', 'new', 'FluidCacheException', '(', '""Unable to create shutdown MemCache client. ""', '+', 'eParam', '.', 'getMessage', '(', ')', ',', 'eParam', ')', ';', '}', '}', '}']",Closes the Memcached client connection.,"['Closes', 'the', 'Memcached', 'client', 'connection', '.']",81153d865f71b84ca933532c7115717bc3979270,https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-api/src/main/java/com/fluidbpm/program/api/util/cache/CacheUtil.java#L523-L538,test
GojaFramework/goja,goja-web/src/main/java/goja/mvc/datatables/DTCriterias.java,DTCriterias.setParam,"public void setParam(String field, Object value) {
        this.setParam(field, Condition.EQ, value);
    }",java,"public void setParam(String field, Object value) {
        this.setParam(field, Condition.EQ, value);
    }","['public', 'void', 'setParam', '(', 'String', 'field', ',', 'Object', 'value', ')', '{', 'this', '.', 'setParam', '(', 'field', ',', 'Condition', '.', 'EQ', ',', 'value', ')', ';', '}']","Adding custom query equal  value.

@param field query condition
@param value query condition","['Adding', 'custom', 'query', 'equal', 'value', '.']",77179b495f668fc1fa20accc912991df6bb2d917,https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-web/src/main/java/goja/mvc/datatables/DTCriterias.java#L241-L243,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ParserUtility.java,ParserUtility.parseCommentToMap,"public static void parseCommentToMap(final String cellKey,
			final String newComment,
			final Map<String, Map<String, String>> sheetCommentMap,
			final boolean normalComment) {
		if ((newComment != null) && (!newComment.trim().isEmpty())) {
			// normal comment key is $$
			String commentKey = TieConstants.NORMAL_COMMENT_KEY_IN_MAP;
			if (!normalComment) {
				// not normal comment. e.g. ${... or $init{... or
				// key = $ or key = $init
				commentKey = newComment.substring(0,
						newComment.indexOf(TieConstants.EL_START_BRACKET));
			}
			Map<String, String> map = sheetCommentMap.get(commentKey);
			if (map == null) {
				map = new HashMap<>();
			}
			// inner map's key is sheetName!$columnIndex$rowIndex
			map.put(cellKey, newComment);
			sheetCommentMap.put(commentKey, map);
		}
	}",java,"public static void parseCommentToMap(final String cellKey,
			final String newComment,
			final Map<String, Map<String, String>> sheetCommentMap,
			final boolean normalComment) {
		if ((newComment != null) && (!newComment.trim().isEmpty())) {
			// normal comment key is $$
			String commentKey = TieConstants.NORMAL_COMMENT_KEY_IN_MAP;
			if (!normalComment) {
				// not normal comment. e.g. ${... or $init{... or
				// key = $ or key = $init
				commentKey = newComment.substring(0,
						newComment.indexOf(TieConstants.EL_START_BRACKET));
			}
			Map<String, String> map = sheetCommentMap.get(commentKey);
			if (map == null) {
				map = new HashMap<>();
			}
			// inner map's key is sheetName!$columnIndex$rowIndex
			map.put(cellKey, newComment);
			sheetCommentMap.put(commentKey, map);
		}
	}","['public', 'static', 'void', 'parseCommentToMap', '(', 'final', 'String', 'cellKey', ',', 'final', 'String', 'newComment', ',', 'final', 'Map', '<', 'String', ',', 'Map', '<', 'String', ',', 'String', '>', '>', 'sheetCommentMap', ',', 'final', 'boolean', 'normalComment', ')', '{', 'if', '(', '(', 'newComment', '!=', 'null', ')', '&&', '(', '!', 'newComment', '.', 'trim', '(', ')', '.', 'isEmpty', '(', ')', ')', ')', '{', '// normal comment key is $$\r', 'String', 'commentKey', '=', 'TieConstants', '.', 'NORMAL_COMMENT_KEY_IN_MAP', ';', 'if', '(', '!', 'normalComment', ')', '{', '// not normal comment. e.g. ${... or $init{... or\r', '// key = $ or key = $init\r', 'commentKey', '=', 'newComment', '.', 'substring', '(', '0', ',', 'newComment', '.', 'indexOf', '(', 'TieConstants', '.', 'EL_START_BRACKET', ')', ')', ';', '}', 'Map', '<', 'String', ',', 'String', '>', 'map', '=', 'sheetCommentMap', '.', 'get', '(', 'commentKey', ')', ';', 'if', '(', 'map', '==', 'null', ')', '{', 'map', '=', 'new', 'HashMap', '<>', '(', ')', ';', '}', ""// inner map's key is sheetName!$columnIndex$rowIndex\r"", 'map', '.', 'put', '(', 'cellKey', ',', 'newComment', ')', ';', 'sheetCommentMap', '.', 'put', '(', 'commentKey', ',', 'map', ')', ';', '}', '}']","Parse Comment To Map

Normal comment : key $$ Not Normal comment: key e.g. $save

@param cellKey
cellKey.
@param newComment
updated comment.
@param sheetCommentMap
the sheet comment map.
@param normalComment
the normal comment.","['Parse', 'Comment', 'To', 'Map']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ParserUtility.java#L534-L555,test
rupertlssmith/lojix,lojix/search/src/main/com/thesett/aima/search/impl/IterativeBoundAlgorithm.java,IterativeBoundAlgorithm.search,"public SearchNode search(QueueSearchState<O, T> initSearch, Collection<T> startStates, int maxSteps,
        int searchSteps) throws SearchNotExhaustiveException
    {
        // Iteratively increase the bound until a search succeeds.
        for (float bound = startBound;;)
        {
            // Set up the maximum bound for this iteration.
            maxBound = bound;

            // Use a try block as the depth bounded search will throw a MaxBoundException if it fails but there
            // are successors states known to exist beyond the current max depth fringe.
            try
            {
                // Get the number of search steps taken so far and pass this into the underlying depth bounded search
                // so that the step count limit carries over between successive iterations.
                int numStepsSoFar = initSearch.getStepsTaken();

                // Call the super class search method to perform a depth bounded search on this maximum bound starting
                // from the initial search state.
                initSearch.resetEnqueuedOnceFlag();

                SearchNode node = super.search(initSearch, startStates, maxSteps, numStepsSoFar);

                // Check if the current depth found a goal node
                if (node != null)
                {
                    return node;
                }

                // The depth bounded search returned null, so it has exhausted the search space. Return with null.
                else
                {
                    return null;
                }
            }

            // The depth bounded search failed but it knows that there are more successor states at deeper levels.
            catch (MaxBoundException e)
            {
                // Do nothing, no node found at this depth so continue at the next depth level
                e = null;
            }

            // Check if the bound should be increased by epsilon or to the next smallest bound property value
            // beyond the fringe and update the bound for the next iteration.
            if (useEpsilon)
            {
                bound = bound + epsilon;
            }
            else
            {
                bound = getMinBeyondBound();
            }
        }
    }",java,"public SearchNode search(QueueSearchState<O, T> initSearch, Collection<T> startStates, int maxSteps,
        int searchSteps) throws SearchNotExhaustiveException
    {
        // Iteratively increase the bound until a search succeeds.
        for (float bound = startBound;;)
        {
            // Set up the maximum bound for this iteration.
            maxBound = bound;

            // Use a try block as the depth bounded search will throw a MaxBoundException if it fails but there
            // are successors states known to exist beyond the current max depth fringe.
            try
            {
                // Get the number of search steps taken so far and pass this into the underlying depth bounded search
                // so that the step count limit carries over between successive iterations.
                int numStepsSoFar = initSearch.getStepsTaken();

                // Call the super class search method to perform a depth bounded search on this maximum bound starting
                // from the initial search state.
                initSearch.resetEnqueuedOnceFlag();

                SearchNode node = super.search(initSearch, startStates, maxSteps, numStepsSoFar);

                // Check if the current depth found a goal node
                if (node != null)
                {
                    return node;
                }

                // The depth bounded search returned null, so it has exhausted the search space. Return with null.
                else
                {
                    return null;
                }
            }

            // The depth bounded search failed but it knows that there are more successor states at deeper levels.
            catch (MaxBoundException e)
            {
                // Do nothing, no node found at this depth so continue at the next depth level
                e = null;
            }

            // Check if the bound should be increased by epsilon or to the next smallest bound property value
            // beyond the fringe and update the bound for the next iteration.
            if (useEpsilon)
            {
                bound = bound + epsilon;
            }
            else
            {
                bound = getMinBeyondBound();
            }
        }
    }","['public', 'SearchNode', 'search', '(', 'QueueSearchState', '<', 'O', ',', 'T', '>', 'initSearch', ',', 'Collection', '<', 'T', '>', 'startStates', ',', 'int', 'maxSteps', ',', 'int', 'searchSteps', ')', 'throws', 'SearchNotExhaustiveException', '{', '// Iteratively increase the bound until a search succeeds.', 'for', '(', 'float', 'bound', '=', 'startBound', ';', ';', ')', '{', '// Set up the maximum bound for this iteration.', 'maxBound', '=', 'bound', ';', '// Use a try block as the depth bounded search will throw a MaxBoundException if it fails but there', '// are successors states known to exist beyond the current max depth fringe.', 'try', '{', '// Get the number of search steps taken so far and pass this into the underlying depth bounded search', '// so that the step count limit carries over between successive iterations.', 'int', 'numStepsSoFar', '=', 'initSearch', '.', 'getStepsTaken', '(', ')', ';', '// Call the super class search method to perform a depth bounded search on this maximum bound starting', '// from the initial search state.', 'initSearch', '.', 'resetEnqueuedOnceFlag', '(', ')', ';', 'SearchNode', 'node', '=', 'super', '.', 'search', '(', 'initSearch', ',', 'startStates', ',', 'maxSteps', ',', 'numStepsSoFar', ')', ';', '// Check if the current depth found a goal node', 'if', '(', 'node', '!=', 'null', ')', '{', 'return', 'node', ';', '}', '// The depth bounded search returned null, so it has exhausted the search space. Return with null.', 'else', '{', 'return', 'null', ';', '}', '}', '// The depth bounded search failed but it knows that there are more successor states at deeper levels.', 'catch', '(', 'MaxBoundException', 'e', ')', '{', '// Do nothing, no node found at this depth so continue at the next depth level', 'e', '=', 'null', ';', '}', '// Check if the bound should be increased by epsilon or to the next smallest bound property value', '// beyond the fringe and update the bound for the next iteration.', 'if', '(', 'useEpsilon', ')', '{', 'bound', '=', 'bound', '+', 'epsilon', ';', '}', 'else', '{', 'bound', '=', 'getMinBeyondBound', '(', ')', ';', '}', '}', '}']","Search iteratively on increasing maximum bound limits until the search space is exhausted or a goal state is
found.

@param  initSearch  The algorithm to turn the start states into the intial set of search nodes, of the correct
type to begin the search with.
@param  startStates The set of start states to begin the search with.
@param  maxSteps    The maximum number of steps to search for before giving up. If this is 0 or less then no
maximum number is enforced.
@param  searchSteps The number of steps taken so far. This may be greater than 0 if this search is run
iteratively and previous iterations of it have already been run.

@return The first {@link SearchNode} corresponding to a goal state that is found or null if none can be found
after exhaustive searching.

@throws SearchNotExhaustiveException SearchNotExhaustiveException If the search terminates prematurely because
the maximum number of steps is reached.","['Search', 'iteratively', 'on', 'increasing', 'maximum', 'bound', 'limits', 'until', 'the', 'search', 'space', 'is', 'exhausted', 'or', 'a', 'goal', 'state', 'is', 'found', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/search/src/main/com/thesett/aima/search/impl/IterativeBoundAlgorithm.java#L115-L169,test
Koekiebox-PTY-LTD/Fluid,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/FlowClient.java,FlowClient.deleteFlow,"public Flow deleteFlow(Flow flowParam)
    {
        if(flowParam != null && this.serviceTicket != null)
        {
            flowParam.setServiceTicket(this.serviceTicket);
        }

        return new Flow(this.postJson(flowParam, WS.Path.Flow.Version1.flowDelete()));
    }",java,"public Flow deleteFlow(Flow flowParam)
    {
        if(flowParam != null && this.serviceTicket != null)
        {
            flowParam.setServiceTicket(this.serviceTicket);
        }

        return new Flow(this.postJson(flowParam, WS.Path.Flow.Version1.flowDelete()));
    }","['public', 'Flow', 'deleteFlow', '(', 'Flow', 'flowParam', ')', '{', 'if', '(', 'flowParam', '!=', 'null', '&&', 'this', '.', 'serviceTicket', '!=', 'null', ')', '{', 'flowParam', '.', 'setServiceTicket', '(', 'this', '.', 'serviceTicket', ')', ';', '}', 'return', 'new', 'Flow', '(', 'this', '.', 'postJson', '(', 'flowParam', ',', 'WS', '.', 'Path', '.', 'Flow', '.', 'Version1', '.', 'flowDelete', '(', ')', ')', ')', ';', '}']","Delete an existing Flow.

@param flowParam The Flow to delete.
@return The deleted Flow.","['Delete', 'an', 'existing', 'Flow', '.']",81153d865f71b84ca933532c7115717bc3979270,https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/FlowClient.java#L137-L145,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/DefaultProcessorProvider.java,DefaultProcessorProvider.toPostProcessors,"private Map<String, ResourcePostProcessor> toPostProcessors(
      final Map<String, ResourcePreProcessor> preProcessorsMap) {
    final Map<String, ResourcePostProcessor> map = new HashMap<String, ResourcePostProcessor>();
    for (final Entry<String, ResourcePreProcessor> entry : preProcessorsMap.entrySet()) {
      map.put(entry.getKey(), new ProcessorDecorator(entry.getValue()));
    }
    return map;
  }",java,"private Map<String, ResourcePostProcessor> toPostProcessors(
      final Map<String, ResourcePreProcessor> preProcessorsMap) {
    final Map<String, ResourcePostProcessor> map = new HashMap<String, ResourcePostProcessor>();
    for (final Entry<String, ResourcePreProcessor> entry : preProcessorsMap.entrySet()) {
      map.put(entry.getKey(), new ProcessorDecorator(entry.getValue()));
    }
    return map;
  }","['private', 'Map', '<', 'String', ',', 'ResourcePostProcessor', '>', 'toPostProcessors', '(', 'final', 'Map', '<', 'String', ',', 'ResourcePreProcessor', '>', 'preProcessorsMap', ')', '{', 'final', 'Map', '<', 'String', ',', 'ResourcePostProcessor', '>', 'map', '=', 'new', 'HashMap', '<', 'String', ',', 'ResourcePostProcessor', '>', '(', ')', ';', 'for', '(', 'final', 'Entry', '<', 'String', ',', 'ResourcePreProcessor', '>', 'entry', ':', 'preProcessorsMap', '.', 'entrySet', '(', ')', ')', '{', 'map', '.', 'put', '(', 'entry', '.', 'getKey', '(', ')', ',', 'new', 'ProcessorDecorator', '(', 'entry', '.', 'getValue', '(', ')', ')', ')', ';', '}', 'return', 'map', ';', '}']","Creates a map of postProcessors form a map of preProcessors. This method will be removed in 1.5.0 release when
there will be no differences between pre & post processor interface.","['Creates', 'a', 'map', 'of', 'postProcessors', 'form', 'a', 'map', 'of', 'preProcessors', '.', 'This', 'method', 'will', 'be', 'removed', 'in', '1', '.', '5', '.', '0', 'release', 'when', 'there', 'will', 'be', 'no', 'differences', 'between', 'pre', '&', 'post', 'processor', 'interface', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/DefaultProcessorProvider.java#L58-L65,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/sigmet/SigmetIOServiceProvider.java,SigmetIOServiceProvider.isValidFile,"public boolean isValidFile(ucar.unidata.io.RandomAccessFile raf) {
    try {
      raf.order(RandomAccessFile.LITTLE_ENDIAN);
      // The first struct in the file is the product_hdr, which will have the
      // standard structure_header, followed by other embedded structures.
      // Each of these structures also have a structure header. To validate
      // the file we check for a product_hdr (by looking for type 27 in the
      // structure_header), then a product_configuration structure (by looking
      // for type 26 in its structure_header), then checking that that
      // the product_configuration does indicate a type of RAW data (type 15)
      raf.seek(0);
      short[] data = new short[13];
      raf.readShort(data, 0, 13);
      return (data[0] == (short) 27 &&
              data[6] == (short) 26 &&
              data[12] ==(short) 15);
    } catch (IOException ioe) {
      System.out.println(""In isValidFile(): "" + ioe.toString());
      return false;
    }
  }",java,"public boolean isValidFile(ucar.unidata.io.RandomAccessFile raf) {
    try {
      raf.order(RandomAccessFile.LITTLE_ENDIAN);
      // The first struct in the file is the product_hdr, which will have the
      // standard structure_header, followed by other embedded structures.
      // Each of these structures also have a structure header. To validate
      // the file we check for a product_hdr (by looking for type 27 in the
      // structure_header), then a product_configuration structure (by looking
      // for type 26 in its structure_header), then checking that that
      // the product_configuration does indicate a type of RAW data (type 15)
      raf.seek(0);
      short[] data = new short[13];
      raf.readShort(data, 0, 13);
      return (data[0] == (short) 27 &&
              data[6] == (short) 26 &&
              data[12] ==(short) 15);
    } catch (IOException ioe) {
      System.out.println(""In isValidFile(): "" + ioe.toString());
      return false;
    }
  }","['public', 'boolean', 'isValidFile', '(', 'ucar', '.', 'unidata', '.', 'io', '.', 'RandomAccessFile', 'raf', ')', '{', 'try', '{', 'raf', '.', 'order', '(', 'RandomAccessFile', '.', 'LITTLE_ENDIAN', ')', ';', '// The first struct in the file is the product_hdr, which will have the\r', '// standard structure_header, followed by other embedded structures.\r', '// Each of these structures also have a structure header. To validate\r', '// the file we check for a product_hdr (by looking for type 27 in the\r', '// structure_header), then a product_configuration structure (by looking\r', '// for type 26 in its structure_header), then checking that that\r', '// the product_configuration does indicate a type of RAW data (type 15)\r', 'raf', '.', 'seek', '(', '0', ')', ';', 'short', '[', ']', 'data', '=', 'new', 'short', '[', '13', ']', ';', 'raf', '.', 'readShort', '(', 'data', ',', '0', ',', '13', ')', ';', 'return', '(', 'data', '[', '0', ']', '==', '(', 'short', ')', '27', '&&', 'data', '[', '6', ']', '==', '(', 'short', ')', '26', '&&', 'data', '[', '12', ']', '==', '(', 'short', ')', '15', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""In isValidFile(): ""', '+', 'ioe', '.', 'toString', '(', ')', ')', ';', 'return', 'false', ';', '}', '}']",Check if this is a valid SIGMET-IRIS file for this IOServiceProvider.,"['Check', 'if', 'this', 'is', 'a', 'valid', 'SIGMET', '-', 'IRIS', 'file', 'for', 'this', 'IOServiceProvider', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/sigmet/SigmetIOServiceProvider.java#L121-L141,test
DigitalPebble/storm-crawler,core/src/main/java/com/digitalpebble/stormcrawler/util/CharsetIdentification.java,CharsetIdentification.getCharsetFromBOM,"private static String getCharsetFromBOM(final byte[] byteData) {
        BOMInputStream bomIn = new BOMInputStream(new ByteArrayInputStream(
                byteData));
        try {
            ByteOrderMark bom = bomIn.getBOM();
            if (bom != null) {
                return bom.getCharsetName();
            }
        } catch (IOException e) {
            return null;
        }
        return null;
    }",java,"private static String getCharsetFromBOM(final byte[] byteData) {
        BOMInputStream bomIn = new BOMInputStream(new ByteArrayInputStream(
                byteData));
        try {
            ByteOrderMark bom = bomIn.getBOM();
            if (bom != null) {
                return bom.getCharsetName();
            }
        } catch (IOException e) {
            return null;
        }
        return null;
    }","['private', 'static', 'String', 'getCharsetFromBOM', '(', 'final', 'byte', '[', ']', 'byteData', ')', '{', 'BOMInputStream', 'bomIn', '=', 'new', 'BOMInputStream', '(', 'new', 'ByteArrayInputStream', '(', 'byteData', ')', ')', ';', 'try', '{', 'ByteOrderMark', 'bom', '=', 'bomIn', '.', 'getBOM', '(', ')', ';', 'if', '(', 'bom', '!=', 'null', ')', '{', 'return', 'bom', '.', 'getCharsetName', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'return', 'null', ';', '}', 'return', 'null', ';', '}']",Detects any BOMs and returns the corresponding charset,"['Detects', 'any', 'BOMs', 'and', 'returns', 'the', 'corresponding', 'charset']",5d0465192ab8fbd89a90db32cb20960a282411ea,https://github.com/DigitalPebble/storm-crawler/blob/5d0465192ab8fbd89a90db32cb20960a282411ea/core/src/main/java/com/digitalpebble/stormcrawler/util/CharsetIdentification.java#L88-L100,test
Enterprise-Content-Management/infoarchive-sip-sdk,stringtemplate/src/main/java/com/opentext/ia/sip/assembly/stringtemplate/StringTemplate.java,StringTemplate.prepareTemplate,"protected ST prepareTemplate(ST prototype, D domainObject, Map<String, ContentInfo> contentInfo) {
    ST template = new ST(prototype);
    template.add(MODEL_VARIABLE, domainObject);
    template.add(CONTENT_VARIABLE, contentInfo);
    return template;
  }",java,"protected ST prepareTemplate(ST prototype, D domainObject, Map<String, ContentInfo> contentInfo) {
    ST template = new ST(prototype);
    template.add(MODEL_VARIABLE, domainObject);
    template.add(CONTENT_VARIABLE, contentInfo);
    return template;
  }","['protected', 'ST', 'prepareTemplate', '(', 'ST', 'prototype', ',', 'D', 'domainObject', ',', 'Map', '<', 'String', ',', 'ContentInfo', '>', 'contentInfo', ')', '{', 'ST', 'template', '=', 'new', 'ST', '(', 'prototype', ')', ';', 'template', '.', 'add', '(', 'MODEL_VARIABLE', ',', 'domainObject', ')', ';', 'template', '.', 'add', '(', 'CONTENT_VARIABLE', ',', 'contentInfo', ')', ';', 'return', 'template', ';', '}']","Prepares the template by adding the variables.
@param prototype The template prototype
@param domainObject The domain object
@param contentInfo The reference information and the encoded content hashes
@return The prepared template instance","['Prepares', 'the', 'template', 'by', 'adding', 'the', 'variables', '.']",3c84a4d9ce569139e9a442034526944d3e63436e,https://github.com/Enterprise-Content-Management/infoarchive-sip-sdk/blob/3c84a4d9ce569139e9a442034526944d3e63436e/stringtemplate/src/main/java/com/opentext/ia/sip/assembly/stringtemplate/StringTemplate.java#L135-L140,test
wildfly/wildfly,undertow/src/main/java/org/wildfly/extension/undertow/deployment/ServletResourceManager.java,ServletResourceManager.list,"public List<Resource> list(String path) {
        try {
            final List<Resource> ret = new ArrayList<>();

            Resource res = deploymentResourceManager.getResource(path);
            if (res != null) {
                for (Resource child : res.list()) {
                    ret.add(new ServletResource(this, child));
                }
            }
            String p = path;
            if (p.startsWith(""/"")) {
                p = p.substring(1);
            }
            if (overlays != null) {
                for (VirtualFile overlay : overlays) {
                    VirtualFile child = overlay.getChild(p);
                    if (child.exists()) {
                        VirtualFileResource vfsResource = new VirtualFileResource(overlay.getPhysicalFile(), child, path);
                        for (Resource c : vfsResource.list()) {
                            ret.add(new ServletResource(this, c));
                        }
                    }
                }
            }
            return ret;
        } catch (IOException e) {
            throw new RuntimeException(e); //this method really should have thrown IOException
        }
    }",java,"public List<Resource> list(String path) {
        try {
            final List<Resource> ret = new ArrayList<>();

            Resource res = deploymentResourceManager.getResource(path);
            if (res != null) {
                for (Resource child : res.list()) {
                    ret.add(new ServletResource(this, child));
                }
            }
            String p = path;
            if (p.startsWith(""/"")) {
                p = p.substring(1);
            }
            if (overlays != null) {
                for (VirtualFile overlay : overlays) {
                    VirtualFile child = overlay.getChild(p);
                    if (child.exists()) {
                        VirtualFileResource vfsResource = new VirtualFileResource(overlay.getPhysicalFile(), child, path);
                        for (Resource c : vfsResource.list()) {
                            ret.add(new ServletResource(this, c));
                        }
                    }
                }
            }
            return ret;
        } catch (IOException e) {
            throw new RuntimeException(e); //this method really should have thrown IOException
        }
    }","['public', 'List', '<', 'Resource', '>', 'list', '(', 'String', 'path', ')', '{', 'try', '{', 'final', 'List', '<', 'Resource', '>', 'ret', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'Resource', 'res', '=', 'deploymentResourceManager', '.', 'getResource', '(', 'path', ')', ';', 'if', '(', 'res', '!=', 'null', ')', '{', 'for', '(', 'Resource', 'child', ':', 'res', '.', 'list', '(', ')', ')', '{', 'ret', '.', 'add', '(', 'new', 'ServletResource', '(', 'this', ',', 'child', ')', ')', ';', '}', '}', 'String', 'p', '=', 'path', ';', 'if', '(', 'p', '.', 'startsWith', '(', '""/""', ')', ')', '{', 'p', '=', 'p', '.', 'substring', '(', '1', ')', ';', '}', 'if', '(', 'overlays', '!=', 'null', ')', '{', 'for', '(', 'VirtualFile', 'overlay', ':', 'overlays', ')', '{', 'VirtualFile', 'child', '=', 'overlay', '.', 'getChild', '(', 'p', ')', ';', 'if', '(', 'child', '.', 'exists', '(', ')', ')', '{', 'VirtualFileResource', 'vfsResource', '=', 'new', 'VirtualFileResource', '(', 'overlay', '.', 'getPhysicalFile', '(', ')', ',', 'child', ',', 'path', ')', ';', 'for', '(', 'Resource', 'c', ':', 'vfsResource', '.', 'list', '(', ')', ')', '{', 'ret', '.', 'add', '(', 'new', 'ServletResource', '(', 'this', ',', 'c', ')', ')', ';', '}', '}', '}', '}', 'return', 'ret', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '//this method really should have thrown IOException', '}', '}']","Lists all children of a particular path, taking overlays into account

@param path The path
@return The list of children","['Lists', 'all', 'children', 'of', 'a', 'particular', 'path', 'taking', 'overlays', 'into', 'account']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/undertow/src/main/java/org/wildfly/extension/undertow/deployment/ServletResourceManager.java#L149-L178,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/DataUriGenerator.java,DataUriGenerator.generateDataURI,"private void generateDataURI(final byte[] bytes, final Writer out, final String mimeType)
      throws IOException {
    // create the output
    final StringBuffer buffer = new StringBuffer();
    buffer.append(DATA_URI_PREFIX);
    
    // add MIME type
    buffer.append(mimeType);
    
    // output base64-encoding
    buffer.append("";base64,"");
    buffer.append(Base64.encodeBytes(bytes));
    
    // output to writer
    out.write(buffer.toString());
  }",java,"private void generateDataURI(final byte[] bytes, final Writer out, final String mimeType)
      throws IOException {
    // create the output
    final StringBuffer buffer = new StringBuffer();
    buffer.append(DATA_URI_PREFIX);
    
    // add MIME type
    buffer.append(mimeType);
    
    // output base64-encoding
    buffer.append("";base64,"");
    buffer.append(Base64.encodeBytes(bytes));
    
    // output to writer
    out.write(buffer.toString());
  }","['private', 'void', 'generateDataURI', '(', 'final', 'byte', '[', ']', 'bytes', ',', 'final', 'Writer', 'out', ',', 'final', 'String', 'mimeType', ')', 'throws', 'IOException', '{', '// create the output', 'final', 'StringBuffer', 'buffer', '=', 'new', 'StringBuffer', '(', ')', ';', 'buffer', '.', 'append', '(', 'DATA_URI_PREFIX', ')', ';', '// add MIME type', 'buffer', '.', 'append', '(', 'mimeType', ')', ';', '// output base64-encoding', 'buffer', '.', 'append', '(', '"";base64,""', ')', ';', 'buffer', '.', 'append', '(', 'Base64', '.', 'encodeBytes', '(', 'bytes', ')', ')', ';', '// output to writer', 'out', '.', 'write', '(', 'buffer', '.', 'toString', '(', ')', ')', ';', '}']","Generates a data URI from a byte array and outputs to the given writer.

@param bytes
The array of bytes to output to the data URI.
@param out
Where to output the data URI.
@param mimeType
The MIME type to specify in the data URI.
@throws java.io.IOException","['Generates', 'a', 'data', 'URI', 'from', 'a', 'byte', 'array', 'and', 'outputs', 'to', 'the', 'given', 'writer', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/DataUriGenerator.java#L69-L84,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/AtomicQueryConcept.java,AtomicQueryConcept.setOriginalText,"public void setOriginalText(String v) {
    if (AtomicQueryConcept_Type.featOkTst && ((AtomicQueryConcept_Type)jcasType).casFeat_originalText == null)
      jcasType.jcas.throwFeatMissing(""originalText"", ""edu.cmu.lti.oaqa.type.retrieval.AtomicQueryConcept"");
    jcasType.ll_cas.ll_setStringValue(addr, ((AtomicQueryConcept_Type)jcasType).casFeatCode_originalText, v);}",java,"public void setOriginalText(String v) {
    if (AtomicQueryConcept_Type.featOkTst && ((AtomicQueryConcept_Type)jcasType).casFeat_originalText == null)
      jcasType.jcas.throwFeatMissing(""originalText"", ""edu.cmu.lti.oaqa.type.retrieval.AtomicQueryConcept"");
    jcasType.ll_cas.ll_setStringValue(addr, ((AtomicQueryConcept_Type)jcasType).casFeatCode_originalText, v);}","['public', 'void', 'setOriginalText', '(', 'String', 'v', ')', '{', 'if', '(', 'AtomicQueryConcept_Type', '.', 'featOkTst', '&&', '(', '(', 'AtomicQueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeat_originalText', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""originalText""', ',', '""edu.cmu.lti.oaqa.type.retrieval.AtomicQueryConcept""', ')', ';', 'jcasType', '.', 'll_cas', '.', 'll_setStringValue', '(', 'addr', ',', '(', '(', 'AtomicQueryConcept_Type', ')', 'jcasType', ')', '.', 'casFeatCode_originalText', ',', 'v', ')', ';', '}']","setter for originalText - sets The lexical string in the question.
@generated
@param v value to set into the feature","['setter', 'for', 'originalText', '-', 'sets', 'The', 'lexical', 'string', 'in', 'the', 'question', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/AtomicQueryConcept.java#L104-L107,test
arnohaase/a-foundation,a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java,ForkJoinPool.commonSubmitterQueue,"static WorkQueue commonSubmitterQueue() {
        ForkJoinPool p = common;
        int r = ThreadLocalRandomHelper.getProbe();
        WorkQueue[] ws; int m;
        return (p != null && (ws = p.workQueues) != null &&
                (m = ws.length - 1) >= 0) ?
            ws[m & r & SQMASK] : null;
    }",java,"static WorkQueue commonSubmitterQueue() {
        ForkJoinPool p = common;
        int r = ThreadLocalRandomHelper.getProbe();
        WorkQueue[] ws; int m;
        return (p != null && (ws = p.workQueues) != null &&
                (m = ws.length - 1) >= 0) ?
            ws[m & r & SQMASK] : null;
    }","['static', 'WorkQueue', 'commonSubmitterQueue', '(', ')', '{', 'ForkJoinPool', 'p', '=', 'common', ';', 'int', 'r', '=', 'ThreadLocalRandomHelper', '.', 'getProbe', '(', ')', ';', 'WorkQueue', '[', ']', 'ws', ';', 'int', 'm', ';', 'return', '(', 'p', '!=', 'null', '&&', '(', 'ws', '=', 'p', '.', 'workQueues', ')', '!=', 'null', '&&', '(', 'm', '=', 'ws', '.', 'length', '-', '1', ')', '>=', '0', ')', '?', 'ws', '[', 'm', '&', 'r', '&', 'SQMASK', ']', ':', 'null', ';', '}']",Returns common pool queue for an external thread.,"['Returns', 'common', 'pool', 'queue', 'for', 'an', 'external', 'thread', '.']",f3eef2ca89d67775f202a4c28140230a6229291e,https://github.com/arnohaase/a-foundation/blob/f3eef2ca89d67775f202a4c28140230a6229291e/a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java#L2427-L2434,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java,GridCoordSys.findXYindexFromCoordBounded,"@Override
  public int[] findXYindexFromCoordBounded(double x_coord, double y_coord, int[] result) {
    if (result == null)
      result = new int[2];

    if ((horizXaxis instanceof CoordinateAxis1D) && (horizYaxis instanceof CoordinateAxis1D)) {
      result[0] = ((CoordinateAxis1D) horizXaxis).findCoordElementBounded(x_coord);
      result[1] = ((CoordinateAxis1D) horizYaxis).findCoordElementBounded(y_coord);
      return result;

    } else if ((horizXaxis instanceof CoordinateAxis2D) && (horizYaxis instanceof CoordinateAxis2D)) {
      if (g2d == null)
        g2d = new GridCoordinate2D((CoordinateAxis2D) horizYaxis, (CoordinateAxis2D) horizXaxis);

      int[] result2 = new int[2];
      g2d.findCoordElement(y_coord, x_coord, result2); // returns best guess
      result[0] = result2[1];
      result[1] = result2[0];
      return result;
    }

    // cant happen
    throw new IllegalStateException(""GridCoordSystem.findXYindexFromCoord"");
  }",java,"@Override
  public int[] findXYindexFromCoordBounded(double x_coord, double y_coord, int[] result) {
    if (result == null)
      result = new int[2];

    if ((horizXaxis instanceof CoordinateAxis1D) && (horizYaxis instanceof CoordinateAxis1D)) {
      result[0] = ((CoordinateAxis1D) horizXaxis).findCoordElementBounded(x_coord);
      result[1] = ((CoordinateAxis1D) horizYaxis).findCoordElementBounded(y_coord);
      return result;

    } else if ((horizXaxis instanceof CoordinateAxis2D) && (horizYaxis instanceof CoordinateAxis2D)) {
      if (g2d == null)
        g2d = new GridCoordinate2D((CoordinateAxis2D) horizYaxis, (CoordinateAxis2D) horizXaxis);

      int[] result2 = new int[2];
      g2d.findCoordElement(y_coord, x_coord, result2); // returns best guess
      result[0] = result2[1];
      result[1] = result2[0];
      return result;
    }

    // cant happen
    throw new IllegalStateException(""GridCoordSystem.findXYindexFromCoord"");
  }","['@', 'Override', 'public', 'int', '[', ']', 'findXYindexFromCoordBounded', '(', 'double', 'x_coord', ',', 'double', 'y_coord', ',', 'int', '[', ']', 'result', ')', '{', 'if', '(', 'result', '==', 'null', ')', 'result', '=', 'new', 'int', '[', '2', ']', ';', 'if', '(', '(', 'horizXaxis', 'instanceof', 'CoordinateAxis1D', ')', '&&', '(', 'horizYaxis', 'instanceof', 'CoordinateAxis1D', ')', ')', '{', 'result', '[', '0', ']', '=', '(', '(', 'CoordinateAxis1D', ')', 'horizXaxis', ')', '.', 'findCoordElementBounded', '(', 'x_coord', ')', ';', 'result', '[', '1', ']', '=', '(', '(', 'CoordinateAxis1D', ')', 'horizYaxis', ')', '.', 'findCoordElementBounded', '(', 'y_coord', ')', ';', 'return', 'result', ';', '}', 'else', 'if', '(', '(', 'horizXaxis', 'instanceof', 'CoordinateAxis2D', ')', '&&', '(', 'horizYaxis', 'instanceof', 'CoordinateAxis2D', ')', ')', '{', 'if', '(', 'g2d', '==', 'null', ')', 'g2d', '=', 'new', 'GridCoordinate2D', '(', '(', 'CoordinateAxis2D', ')', 'horizYaxis', ',', '(', 'CoordinateAxis2D', ')', 'horizXaxis', ')', ';', 'int', '[', ']', 'result2', '=', 'new', 'int', '[', '2', ']', ';', 'g2d', '.', 'findCoordElement', '(', 'y_coord', ',', 'x_coord', ',', 'result2', ')', ';', '// returns best guess\r', 'result', '[', '0', ']', '=', 'result2', '[', '1', ']', ';', 'result', '[', '1', ']', '=', 'result2', '[', '0', ']', ';', 'return', 'result', ';', '}', '// cant happen\r', 'throw', 'new', 'IllegalStateException', '(', '""GridCoordSystem.findXYindexFromCoord""', ')', ';', '}']","Given a point in x,y coordinate space, find the x,y index in the coordinate system.
If outside the range, the closest point is returned, eg, 0 or n-1 depending on if the coordinate is too small or too large.

@param x_coord position in x coordinate space.
@param y_coord position in y coordinate space.
@param result  put result in here, may be null
@return int[2], 0=x,1=y indices in the coordinate system of the point.","['Given', 'a', 'point', 'in', 'x', 'y', 'coordinate', 'space', 'find', 'the', 'x', 'y', 'index', 'in', 'the', 'coordinate', 'system', '.', 'If', 'outside', 'the', 'range', 'the', 'closest', 'point', 'is', 'returned', 'eg', '0', 'or', 'n', '-', '1', 'depending', 'on', 'if', 'the', 'coordinate', 'is', 'too', 'small', 'or', 'too', 'large', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dt/grid/GridCoordSys.java#L822-L845,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/SimpleTree.java,SimpleTree.clearChildren,"public void clearChildren()
    {
        // Check that their are children to clear.
        if (children != null)
        {
            // Loop over all the children setting their parent to null.
            for (Tree<E> child : children)
            {
                child.setParent(null);
            }

            // Clear out the children collection.
            children.clear();

            // Mark this as a leaf node.
            nodeOrLeaf = Type.Leaf;
        }
    }",java,"public void clearChildren()
    {
        // Check that their are children to clear.
        if (children != null)
        {
            // Loop over all the children setting their parent to null.
            for (Tree<E> child : children)
            {
                child.setParent(null);
            }

            // Clear out the children collection.
            children.clear();

            // Mark this as a leaf node.
            nodeOrLeaf = Type.Leaf;
        }
    }","['public', 'void', 'clearChildren', '(', ')', '{', '// Check that their are children to clear.', 'if', '(', 'children', '!=', 'null', ')', '{', '// Loop over all the children setting their parent to null.', 'for', '(', 'Tree', '<', 'E', '>', 'child', ':', 'children', ')', '{', 'child', '.', 'setParent', '(', 'null', ')', ';', '}', '// Clear out the children collection.', 'children', '.', 'clear', '(', ')', ';', '// Mark this as a leaf node.', 'nodeOrLeaf', '=', 'Type', '.', 'Leaf', ';', '}', '}']","Clears all the children of this point in the tree. If this point is a leaf it will have no children so this
operation does nothing. If this point is a node it will be reduced to a leaf by this operation. This
implementation supports turning nodes into leaves.","['Clears', 'all', 'the', 'children', 'of', 'this', 'point', 'in', 'the', 'tree', '.', 'If', 'this', 'point', 'is', 'a', 'leaf', 'it', 'will', 'have', 'no', 'children', 'so', 'this', 'operation', 'does', 'nothing', '.', 'If', 'this', 'point', 'is', 'a', 'node', 'it', 'will', 'be', 'reduced', 'to', 'a', 'leaf', 'by', 'this', 'operation', '.', 'This', 'implementation', 'supports', 'turning', 'nodes', 'into', 'leaves', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/SimpleTree.java#L261-L278,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/gempak/AbstractGempakStationFileReader.java,AbstractGempakStationFileReader.getStationKeyNames,"public List<String> getStationKeyNames() {
    List<String> keys = new ArrayList<>();
    if ((stationKeys != null) && !stationKeys.isEmpty()) {
      for (Key key : stationKeys) {
        keys.add(key.name);
      }
    }
    return keys;
  }",java,"public List<String> getStationKeyNames() {
    List<String> keys = new ArrayList<>();
    if ((stationKeys != null) && !stationKeys.isEmpty()) {
      for (Key key : stationKeys) {
        keys.add(key.name);
      }
    }
    return keys;
  }","['public', 'List', '<', 'String', '>', 'getStationKeyNames', '(', ')', '{', 'List', '<', 'String', '>', 'keys', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'if', '(', '(', 'stationKeys', '!=', 'null', ')', '&&', '!', 'stationKeys', '.', 'isEmpty', '(', ')', ')', '{', 'for', '(', 'Key', 'key', ':', 'stationKeys', ')', '{', 'keys', '.', 'add', '(', 'key', '.', 'name', ')', ';', '}', '}', 'return', 'keys', ';', '}']","Get the station key names

@return the list of station key names","['Get', 'the', 'station', 'key', 'names']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/AbstractGempakStationFileReader.java#L341-L349,test
wildfly/wildfly,ee/src/main/java/org/jboss/as/ee/component/ViewConfiguration.java,ViewConfiguration.putPrivateData,"public <T> void putPrivateData(final Class<T> type, T data ) {
        privateData.put(type, data);
    }",java,"public <T> void putPrivateData(final Class<T> type, T data ) {
        privateData.put(type, data);
    }","['public', '<', 'T', '>', 'void', 'putPrivateData', '(', 'final', 'Class', '<', 'T', '>', 'type', ',', 'T', 'data', ')', '{', 'privateData', '.', 'put', '(', 'type', ',', 'data', ')', ';', '}']","Attaches arbitrary private data to this view instance

@param type The type of data
@param data The data","['Attaches', 'arbitrary', 'private', 'data', 'to', 'this', 'view', 'instance']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ee/src/main/java/org/jboss/as/ee/component/ViewConfiguration.java#L287-L289,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/sigmet/SigmetIOServiceProvider.java,SigmetIOServiceProvider.readIntData,"public Array readIntData(LayoutRegular index, Variable v2) throws IOException {
    int[] var = (int[]) (v2.read().get1DJavaArray(v2.getDataType()));
    int[] data = new int[(int) index.getTotalNelems()];
    while (index.hasNext()) {
      Layout.Chunk chunk = index.next();
      System.arraycopy(var, (int) chunk.getSrcPos() / 4, data, (int) chunk.getDestElem(), chunk.getNelems());
    }
    return Array.factory(v2.getDataType(), new int[] {(int) index.getTotalNelems()}, data);
  }",java,"public Array readIntData(LayoutRegular index, Variable v2) throws IOException {
    int[] var = (int[]) (v2.read().get1DJavaArray(v2.getDataType()));
    int[] data = new int[(int) index.getTotalNelems()];
    while (index.hasNext()) {
      Layout.Chunk chunk = index.next();
      System.arraycopy(var, (int) chunk.getSrcPos() / 4, data, (int) chunk.getDestElem(), chunk.getNelems());
    }
    return Array.factory(v2.getDataType(), new int[] {(int) index.getTotalNelems()}, data);
  }","['public', 'Array', 'readIntData', '(', 'LayoutRegular', 'index', ',', 'Variable', 'v2', ')', 'throws', 'IOException', '{', 'int', '[', ']', 'var', '=', '(', 'int', '[', ']', ')', '(', 'v2', '.', 'read', '(', ')', '.', 'get1DJavaArray', '(', 'v2', '.', 'getDataType', '(', ')', ')', ')', ';', 'int', '[', ']', 'data', '=', 'new', 'int', '[', '(', 'int', ')', 'index', '.', 'getTotalNelems', '(', ')', ']', ';', 'while', '(', 'index', '.', 'hasNext', '(', ')', ')', '{', 'Layout', '.', 'Chunk', 'chunk', '=', 'index', '.', 'next', '(', ')', ';', 'System', '.', 'arraycopy', '(', 'var', ',', '(', 'int', ')', 'chunk', '.', 'getSrcPos', '(', ')', '/', '4', ',', 'data', ',', '(', 'int', ')', 'chunk', '.', 'getDestElem', '(', ')', ',', 'chunk', '.', 'getNelems', '(', ')', ')', ';', '}', 'return', 'Array', '.', 'factory', '(', 'v2', '.', 'getDataType', '(', ')', ',', 'new', 'int', '[', ']', '{', '(', 'int', ')', 'index', '.', 'getTotalNelems', '(', ')', '}', ',', 'data', ')', ';', '}']","Read data from a top level Variable of INTEGER data type and return a memory resident Array.

@param index LayoutRegular object
@param v2    Variable has INTEGER data type.
@return Array of data which will be read from Variable through this call.","['Read', 'data', 'from', 'a', 'top', 'level', 'Variable', 'of', 'INTEGER', 'data', 'type', 'and', 'return', 'a', 'memory', 'resident', 'Array', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/sigmet/SigmetIOServiceProvider.java#L825-L833,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/functions/FunctionProperties.java,FunctionProperties.fromFlatProperties,"public static FunctionProperties fromFlatProperties(FlatProperties properties) {
        val props = new FunctionProperties();

        for (int e = 0; e < properties.iLength(); e++)
            props.getI().add(properties.i(e));

        for (int e = 0; e < properties.lLength(); e++)
            props.getL().add(properties.l(e));

        for (int e = 0; e < properties.dLength(); e++)
            props.getD().add(properties.d(e));

        for (int e = 0; e < properties.iLength(); e++)
            props.getA().add(Nd4j.createFromFlatArray(properties.a(e)));

        return props;
    }",java,"public static FunctionProperties fromFlatProperties(FlatProperties properties) {
        val props = new FunctionProperties();

        for (int e = 0; e < properties.iLength(); e++)
            props.getI().add(properties.i(e));

        for (int e = 0; e < properties.lLength(); e++)
            props.getL().add(properties.l(e));

        for (int e = 0; e < properties.dLength(); e++)
            props.getD().add(properties.d(e));

        for (int e = 0; e < properties.iLength(); e++)
            props.getA().add(Nd4j.createFromFlatArray(properties.a(e)));

        return props;
    }","['public', 'static', 'FunctionProperties', 'fromFlatProperties', '(', 'FlatProperties', 'properties', ')', '{', 'val', 'props', '=', 'new', 'FunctionProperties', '(', ')', ';', 'for', '(', 'int', 'e', '=', '0', ';', 'e', '<', 'properties', '.', 'iLength', '(', ')', ';', 'e', '++', ')', 'props', '.', 'getI', '(', ')', '.', '(', 'properties', '.', 'i', '(', ')', ')', ';', 'for', '(', 'int', 'e', '=', '0', ';', 'e', '<', 'properties', '.', 'lLength', '(', ')', ';', 'e', '++', ')', 'props', '.', 'getL', '(', ')', '.', '(', 'properties', '.', 'l', '(', ')', ')', ';', 'for', '(', 'int', 'e', '=', '0', ';', 'e', '<', 'properties', '.', 'dLength', '(', ')', ';', 'e', '++', ')', 'props', '.', 'getD', '(', ')', '.', '(', 'properties', '.', '(', 'e', ')', ')', ';', 'for', '(', 'int', 'e', '=', '0', ';', 'e', '<', 'properties', '.', 'iLength', '(', ')', ';', 'e', '++', ')', 'props', '.', 'getA', '(', ')', '.', '(', 'Nd4j', '.', 'createFromFlatArray', '(', 'properties', '.', '(', ')', ')', ')', ';', 'return', 'props', ';', '}']","This method creates new FunctionProperties instance from FlatBuffers representation
@param properties
@return","['This', 'method', 'creates', 'new', 'FunctionProperties', 'instance', 'from', 'FlatBuffers', 'representation']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/functions/FunctionProperties.java#L57-L73,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/util/PropertiesHelper.java,PropertiesHelper.getProperties,"public static Properties getProperties(URL url) throws IOException
    {
        /*log.fine(""getProperties(URL): called"");*/

        // Open the URL as an input stream
        InputStream is = url.openStream();

        // Create properties object loaded from the stream
        Properties properties = getProperties(is);

        // Close the url
        is.close();

        return properties;
    }",java,"public static Properties getProperties(URL url) throws IOException
    {
        /*log.fine(""getProperties(URL): called"");*/

        // Open the URL as an input stream
        InputStream is = url.openStream();

        // Create properties object loaded from the stream
        Properties properties = getProperties(is);

        // Close the url
        is.close();

        return properties;
    }","['public', 'static', 'Properties', 'getProperties', '(', 'URL', 'url', ')', 'throws', 'IOException', '{', '/*log.fine(""getProperties(URL): called"");*/', '// Open the URL as an input stream', 'InputStream', 'is', '=', 'url', '.', 'openStream', '(', ')', ';', '// Create properties object loaded from the stream', 'Properties', 'properties', '=', 'getProperties', '(', 'is', ')', ';', '// Close the url', 'is', '.', 'close', '(', ')', ';', 'return', 'properties', ';', '}']","Get properties from a url.

@param  url The URL.

@return The properties loaded from the url.

@throws IOException If there is an I/O error reading from the URL.","['Get', 'properties', 'from', 'a', 'url', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/PropertiesHelper.java#L100-L114,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java,ConfigurationUtility.changeIndexNumberInHiddenColumn,"public static void changeIndexNumberInHiddenColumn(
			final ConfigBuildRef configBuildRef, final int startRowIndex,
			final String fullName, final Map<String, String> changeMap,
			final int steps) {
		String searchName = fullName.substring(0,
				fullName.lastIndexOf('.') + 1);
		Sheet sheet = configBuildRef.getSheet();
		for (int i = startRowIndex; i <= sheet.getLastRowNum(); i++) {
			Row row = sheet.getRow(i);
			String fname = getFullNameFromRow(row);
			if ((fname != null) && (fname.indexOf(searchName) >= 0)) {
				int sindex = fname.indexOf(searchName);
				String snum = fname.substring(sindex + searchName.length());
				int sufindex = snum.indexOf(':');
				String suffix = """";
				if (sufindex > 0) {
					snum = snum.substring(0, sufindex);
					suffix = "":"";
				}
				int increaseNum = Integer.parseInt(snum) + steps;
				String realFullName = fname.substring(sindex);
				String changeName = fname.replace(
						searchName + snum + suffix,
						searchName + increaseNum + suffix);
				if (changeMap.get(realFullName) == null) {
					changeMap.put(realFullName,
							changeName.substring(sindex));
				}
				setFullNameInHiddenColumn(row, changeName);
			} else {
				return;
			}
		}
	}",java,"public static void changeIndexNumberInHiddenColumn(
			final ConfigBuildRef configBuildRef, final int startRowIndex,
			final String fullName, final Map<String, String> changeMap,
			final int steps) {
		String searchName = fullName.substring(0,
				fullName.lastIndexOf('.') + 1);
		Sheet sheet = configBuildRef.getSheet();
		for (int i = startRowIndex; i <= sheet.getLastRowNum(); i++) {
			Row row = sheet.getRow(i);
			String fname = getFullNameFromRow(row);
			if ((fname != null) && (fname.indexOf(searchName) >= 0)) {
				int sindex = fname.indexOf(searchName);
				String snum = fname.substring(sindex + searchName.length());
				int sufindex = snum.indexOf(':');
				String suffix = """";
				if (sufindex > 0) {
					snum = snum.substring(0, sufindex);
					suffix = "":"";
				}
				int increaseNum = Integer.parseInt(snum) + steps;
				String realFullName = fname.substring(sindex);
				String changeName = fname.replace(
						searchName + snum + suffix,
						searchName + increaseNum + suffix);
				if (changeMap.get(realFullName) == null) {
					changeMap.put(realFullName,
							changeName.substring(sindex));
				}
				setFullNameInHiddenColumn(row, changeName);
			} else {
				return;
			}
		}
	}","['public', 'static', 'void', 'changeIndexNumberInHiddenColumn', '(', 'final', 'ConfigBuildRef', 'configBuildRef', ',', 'final', 'int', 'startRowIndex', ',', 'final', 'String', 'fullName', ',', 'final', 'Map', '<', 'String', ',', 'String', '>', 'changeMap', ',', 'final', 'int', 'steps', ')', '{', 'String', 'searchName', '=', 'fullName', '.', 'substring', '(', '0', ',', 'fullName', '.', 'lastIndexOf', '(', ""'"", ""'"", ')', '+', '1', ')', ';', 'Sheet', 'sheet', '=', 'configBuildRef', '.', 'getSheet', '(', ')', ';', 'for', '(', 'int', 'i', '=', 'startRowIndex', ';', 'i', '<=', 'sheet', '.', 'getLastRowNum', '(', ')', ';', 'i', '++', ')', '{', 'Row', 'row', '=', 'sheet', '.', 'getRow', '(', 'i', ')', ';', 'String', 'fname', '=', 'getFullNameFromRow', '(', 'row', ')', ';', 'if', '(', '(', 'fname', '!=', 'null', ')', '&&', '(', 'fname', '.', 'indexOf', '(', 'searchName', ')', '>=', '0', ')', ')', '{', 'int', 'sindex', '=', 'fname', '.', 'indexOf', '(', 'searchName', ')', ';', 'String', 'snum', '=', 'fname', '.', 'substring', '(', 'sindex', '+', 'searchName', '.', 'length', '(', ')', ')', ';', 'int', 'sufindex', '=', 'snum', '.', 'indexOf', '(', ""'"", ""'"", ')', ';', 'String', 'suffix', '=', '""""', ';', 'if', '(', 'sufindex', '>', '0', ')', '{', 'snum', '=', 'snum', '.', 'substring', '(', '0', ',', 'sufindex', ')', ';', 'suffix', '=', '"":""', ';', '}', 'int', 'increaseNum', '=', 'Integer', '.', 'parseInt', '(', 'snum', ')', '+', 'steps', ';', 'String', 'realFullName', '=', 'fname', '.', 'substring', '(', 'sindex', ')', ';', 'String', 'changeName', '=', 'fname', '.', 'replace', '(', 'searchName', '+', 'snum', '+', 'suffix', ',', 'searchName', '+', 'increaseNum', '+', 'suffix', ')', ';', 'if', '(', 'changeMap', '.', 'get', '(', 'realFullName', ')', '==', 'null', ')', '{', 'changeMap', '.', 'put', '(', 'realFullName', ',', 'changeName', '.', 'substring', '(', 'sindex', ')', ')', ';', '}', 'setFullNameInHiddenColumn', '(', 'row', ',', 'changeName', ')', ';', '}', 'else', '{', 'return', ';', '}', '}', '}']","Change index number in hidden column.

@param configBuildRef
the config build ref
@param startRowIndex
the start row index
@param fullName
the full name
@param changeMap
the change map
@param steps
the steps ( 1 add -1 delete ).","['Change', 'index', 'number', 'in', 'hidden', 'column', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java#L285-L318,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/configuration/FormCommand.java,FormCommand.buildWatchListForCell,"private void buildWatchListForCell(
			final XSSFEvaluationWorkbook wbWrapper, final int sheetIndex,
			final Cell cell, final List<Integer> watchList, final int lastStaticRow) {
		String formula = cell.getCellFormula();

		Ptg[] ptgs = FormulaParser.parse(formula, wbWrapper,
				FormulaType.CELL, sheetIndex);

		for (int k = 0; k < ptgs.length; k++) {
			Object ptg = ptgs[k];
			// For area formula, only first row is watched.
			// Reason is the lastRow must shift same rows with
			// firstRow.
			// Otherwise it's difficult to calculate.
			// In case some situation cannot fit, then should make
			// change to the formula.
			int areaInt = ShiftFormulaUtility
					.getFirstSupportedRowNumFromPtg(ptg);
			if (areaInt >= 0) {
				addToWatchList(areaInt, lastStaticRow, watchList);
			}
		}

		// when insert row, the formula may changed. so here is the
		// workaround.
		// change formula to user formula to preserve the row
		// changes.
		cell.setCellType(CellType.STRING);
		cell.setCellValue(TieConstants.USER_FORMULA_PREFIX + formula
				+ TieConstants.USER_FORMULA_SUFFIX);
	}",java,"private void buildWatchListForCell(
			final XSSFEvaluationWorkbook wbWrapper, final int sheetIndex,
			final Cell cell, final List<Integer> watchList, final int lastStaticRow) {
		String formula = cell.getCellFormula();

		Ptg[] ptgs = FormulaParser.parse(formula, wbWrapper,
				FormulaType.CELL, sheetIndex);

		for (int k = 0; k < ptgs.length; k++) {
			Object ptg = ptgs[k];
			// For area formula, only first row is watched.
			// Reason is the lastRow must shift same rows with
			// firstRow.
			// Otherwise it's difficult to calculate.
			// In case some situation cannot fit, then should make
			// change to the formula.
			int areaInt = ShiftFormulaUtility
					.getFirstSupportedRowNumFromPtg(ptg);
			if (areaInt >= 0) {
				addToWatchList(areaInt, lastStaticRow, watchList);
			}
		}

		// when insert row, the formula may changed. so here is the
		// workaround.
		// change formula to user formula to preserve the row
		// changes.
		cell.setCellType(CellType.STRING);
		cell.setCellValue(TieConstants.USER_FORMULA_PREFIX + formula
				+ TieConstants.USER_FORMULA_SUFFIX);
	}","['private', 'void', 'buildWatchListForCell', '(', 'final', 'XSSFEvaluationWorkbook', 'wbWrapper', ',', 'final', 'int', 'sheetIndex', ',', 'final', 'Cell', 'cell', ',', 'final', 'List', '<', 'Integer', '>', 'watchList', ',', 'final', 'int', 'lastStaticRow', ')', '{', 'String', 'formula', '=', 'cell', '.', 'getCellFormula', '(', ')', ';', 'Ptg', '[', ']', 'ptgs', '=', 'FormulaParser', '.', 'parse', '(', 'formula', ',', 'wbWrapper', ',', 'FormulaType', '.', 'CELL', ',', 'sheetIndex', ')', ';', 'for', '(', 'int', 'k', '=', '0', ';', 'k', '<', 'ptgs', '.', 'length', ';', 'k', '++', ')', '{', 'Object', 'ptg', '=', 'ptgs', '[', 'k', ']', ';', '// For area formula, only first row is watched.\r', '// Reason is the lastRow must shift same rows with\r', '// firstRow.\r', ""// Otherwise it's difficult to calculate.\r"", '// In case some situation cannot fit, then should make\r', '// change to the formula.\r', 'int', 'areaInt', '=', 'ShiftFormulaUtility', '.', 'getFirstSupportedRowNumFromPtg', '(', 'ptg', ')', ';', 'if', '(', 'areaInt', '>=', '0', ')', '{', 'addToWatchList', '(', 'areaInt', ',', 'lastStaticRow', ',', 'watchList', ')', ';', '}', '}', '// when insert row, the formula may changed. so here is the\r', '// workaround.\r', '// change formula to user formula to preserve the row\r', '// changes.\r', 'cell', '.', 'setCellType', '(', 'CellType', '.', 'STRING', ')', ';', 'cell', '.', 'setCellValue', '(', 'TieConstants', '.', 'USER_FORMULA_PREFIX', '+', 'formula', '+', 'TieConstants', '.', 'USER_FORMULA_SUFFIX', ')', ';', '}']","Builds the watch list for cell.

@param wbWrapper
the wb wrapper
@param sheetIndex
the sheet index
@param cell
the cell
@param watchList
the watch list
@param lastStaticRow
the last static row","['Builds', 'the', 'watch', 'list', 'for', 'cell', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/configuration/FormCommand.java#L298-L328,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/complex/BaseComplexNDArray.java,BaseComplexNDArray.sub,"@Override
    public IComplexNDArray sub(INDArray other, INDArray result) {
        return dup().subi(other, result);
    }",java,"@Override
    public IComplexNDArray sub(INDArray other, INDArray result) {
        return dup().subi(other, result);
    }","['@', 'Override', 'public', 'IComplexNDArray', 'sub', '(', 'INDArray', 'other', ',', 'INDArray', 'result', ')', '{', 'return', 'dup', '(', ')', '.', 'subi', '(', 'other', ',', 'result', ')', ';', '}']","copy subtraction of two matrices

@param other  the second ndarray to subtract
@param result the result ndarray
@return the result of the subtraction","['copy', 'subtraction', 'of', 'two', 'matrices']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/complex/BaseComplexNDArray.java#L2504-L2507,test
OpenEstate/OpenEstate-IO,IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/GrundstueckEmpfohleneNutzung.java,GrundstueckEmpfohleneNutzung.setLager,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setLager(JAXBElement<Object> value) {
        this.lager = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:52:47+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setLager(JAXBElement<Object> value) {
        this.lager = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:52:47+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setLager', '(', 'JAXBElement', '<', 'Object', '>', 'value', ')', '{', 'this', '.', 'lager', '=', 'value', ';', '}']","Sets the value of the lager property.

@param value
allowed object is
{@link JAXBElement }{@code <}{@link Object }{@code >}","['Sets', 'the', 'value', 'of', 'the', 'lager', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/GrundstueckEmpfohleneNutzung.java#L626-L629,test
ReactiveX/RxJava,src/main/java/io/reactivex/Maybe.java,Maybe.fromSingle,"@CheckReturnValue
    @NonNull
    @SchedulerSupport(SchedulerSupport.NONE)
    public static <T> Maybe<T> fromSingle(SingleSource<T> singleSource) {
        ObjectHelper.requireNonNull(singleSource, ""singleSource is null"");
        return RxJavaPlugins.onAssembly(new MaybeFromSingle<T>(singleSource));
    }",java,"@CheckReturnValue
    @NonNull
    @SchedulerSupport(SchedulerSupport.NONE)
    public static <T> Maybe<T> fromSingle(SingleSource<T> singleSource) {
        ObjectHelper.requireNonNull(singleSource, ""singleSource is null"");
        return RxJavaPlugins.onAssembly(new MaybeFromSingle<T>(singleSource));
    }","['@', 'CheckReturnValue', '@', 'NonNull', '@', 'SchedulerSupport', '(', 'SchedulerSupport', '.', 'NONE', ')', 'public', 'static', '<', 'T', '>', 'Maybe', '<', 'T', '>', 'fromSingle', '(', 'SingleSource', '<', 'T', '>', 'singleSource', ')', '{', 'ObjectHelper', '.', 'requireNonNull', '(', 'singleSource', ',', '""singleSource is null""', ')', ';', 'return', 'RxJavaPlugins', '.', 'onAssembly', '(', 'new', 'MaybeFromSingle', '<', 'T', '>', '(', 'singleSource', ')', ')', ';', '}']","Wraps a SingleSource into a Maybe.

<dl>
<dt><b>Scheduler:</b></dt>
<dd>{@code fromSingle} does not operate by default on a particular {@link Scheduler}.</dd>
</dl>
@param <T> the target type
@param singleSource the SingleSource to convert from
@return the new Maybe instance
@throws NullPointerException if single is null","['Wraps', 'a', 'SingleSource', 'into', 'a', 'Maybe', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Maybe.java#L725-L731,test
yunify/qingstor-sdk-java,src/main/java/com/qingstor/sdk/upload/UploadManager.java,UploadManager.sign,"private void sign(RequestHandler requestHandler) throws QSException {
        if (callBack != null) {
            String signed = callBack.onSignature(requestHandler.getStringToSignature());
            if (!QSStringUtil.isEmpty(signed))
                requestHandler.setSignature(callBack.onAccessKey(), signed);
            String correctTime = callBack.onCorrectTime(requestHandler.getStringToSignature());
            if (correctTime != null && correctTime.trim().length() > 0)
                requestHandler.getBuilder().setHeader(QSConstant.HEADER_PARAM_KEY_DATE, correctTime);
        }
    }",java,"private void sign(RequestHandler requestHandler) throws QSException {
        if (callBack != null) {
            String signed = callBack.onSignature(requestHandler.getStringToSignature());
            if (!QSStringUtil.isEmpty(signed))
                requestHandler.setSignature(callBack.onAccessKey(), signed);
            String correctTime = callBack.onCorrectTime(requestHandler.getStringToSignature());
            if (correctTime != null && correctTime.trim().length() > 0)
                requestHandler.getBuilder().setHeader(QSConstant.HEADER_PARAM_KEY_DATE, correctTime);
        }
    }","['private', 'void', 'sign', '(', 'RequestHandler', 'requestHandler', ')', 'throws', 'QSException', '{', 'if', '(', 'callBack', '!=', 'null', ')', '{', 'String', 'signed', '=', 'callBack', '.', 'onSignature', '(', 'requestHandler', '.', 'getStringToSignature', '(', ')', ')', ';', 'if', '(', '!', 'QSStringUtil', '.', 'isEmpty', '(', 'signed', ')', ')', 'requestHandler', '.', 'setSignature', '(', 'callBack', '.', 'onAccessKey', '(', ')', ',', 'signed', ')', ';', 'String', 'correctTime', '=', 'callBack', '.', 'onCorrectTime', '(', 'requestHandler', '.', 'getStringToSignature', '(', ')', ')', ';', 'if', '(', 'correctTime', '!=', 'null', '&&', 'correctTime', '.', 'trim', '(', ')', '.', 'length', '(', ')', '>', '0', ')', 'requestHandler', '.', 'getBuilder', '(', ')', '.', 'setHeader', '(', 'QSConstant', '.', 'HEADER_PARAM_KEY_DATE', ',', 'correctTime', ')', ';', '}', '}']","When sending a request will call this method to sign with server.
@param requestHandler handler of the request.
@throws QSException exception","['When', 'sending', 'a', 'request', 'will', 'call', 'this', 'method', 'to', 'sign', 'with', 'server', '.']",b44a228a99e60e4d6e5a450b7c05972552ab9962,https://github.com/yunify/qingstor-sdk-java/blob/b44a228a99e60e4d6e5a450b7c05972552ab9962/src/main/java/com/qingstor/sdk/upload/UploadManager.java#L240-L249,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/reflect/DirectMemento.java,DirectMemento.put,"public void put(Class cls, String attr, Object val)
    {
        /*log.fine(""public void put(Class cls, String attr, Object val): called"");*/
        /*log.fine(""class name is "" + cls.getName());*/
        /*log.fine(""attribute is "" + attr);*/
        /*log.fine(""value to set is "" + val);*/

        HashMap map;

        // Check that the cache for the class exists in the cache.
        if (values.containsKey(cls))
        {
            // Get the cache of field for the class.
            map = (HashMap) values.get(cls);
        }
        else
        {
            // The class does not already exist in the cache to create a new cache for its fields.
            map = new HashMap();

            // Cache the new field cache against the class.
            values.put(cls, map);
        }

        // Store the attribute in the field cache for the class.
        map.put(attr, val);
    }",java,"public void put(Class cls, String attr, Object val)
    {
        /*log.fine(""public void put(Class cls, String attr, Object val): called"");*/
        /*log.fine(""class name is "" + cls.getName());*/
        /*log.fine(""attribute is "" + attr);*/
        /*log.fine(""value to set is "" + val);*/

        HashMap map;

        // Check that the cache for the class exists in the cache.
        if (values.containsKey(cls))
        {
            // Get the cache of field for the class.
            map = (HashMap) values.get(cls);
        }
        else
        {
            // The class does not already exist in the cache to create a new cache for its fields.
            map = new HashMap();

            // Cache the new field cache against the class.
            values.put(cls, map);
        }

        // Store the attribute in the field cache for the class.
        map.put(attr, val);
    }","['public', 'void', 'put', '(', 'Class', 'cls', ',', 'String', 'attr', ',', 'Object', 'val', ')', '{', '/*log.fine(""public void put(Class cls, String attr, Object val): called"");*/', '/*log.fine(""class name is "" + cls.getName());*/', '/*log.fine(""attribute is "" + attr);*/', '/*log.fine(""value to set is "" + val);*/', 'HashMap', 'map', ';', '// Check that the cache for the class exists in the cache.', 'if', '(', 'values', '.', 'containsKey', '(', 'cls', ')', ')', '{', '// Get the cache of field for the class.', 'map', '=', '(', 'HashMap', ')', 'values', '.', 'get', '(', 'cls', ')', ';', '}', 'else', '{', '// The class does not already exist in the cache to create a new cache for its fields.', 'map', '=', 'new', 'HashMap', '(', ')', ';', '// Cache the new field cache against the class.', 'values', '.', 'put', '(', 'cls', ',', 'map', ')', ';', '}', '// Store the attribute in the field cache for the class.', 'map', '.', 'put', '(', 'attr', ',', 'val', ')', ';', '}']","Places the specified value into the memento based on the field's declaring class and name.

@param cls  The class in which the field is declared.
@param attr The name of the attribute.
@param val  The value to store into this memento.","['Places', 'the', 'specified', 'value', 'into', 'the', 'memento', 'based', 'on', 'the', 'field', 's', 'declaring', 'class', 'and', 'name', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/reflect/DirectMemento.java#L270-L296,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/table/JTableSorted.java,JTableSorted.setList,"public void setList ( ArrayList rowList) {
    this.list = rowList;
    if (list.size() > 0)
      jtable.setRowSelectionInterval(0, 0);
    else
      jtable.clearSelection();

    model.sort();
    jtable.revalidate();
  }",java,"public void setList ( ArrayList rowList) {
    this.list = rowList;
    if (list.size() > 0)
      jtable.setRowSelectionInterval(0, 0);
    else
      jtable.clearSelection();

    model.sort();
    jtable.revalidate();
  }","['public', 'void', 'setList', '(', 'ArrayList', 'rowList', ')', '{', 'this', '.', 'list', '=', 'rowList', ';', 'if', '(', 'list', '.', 'size', '(', ')', '>', '0', ')', 'jtable', '.', 'setRowSelectionInterval', '(', '0', ',', '0', ')', ';', 'else', 'jtable', '.', 'clearSelection', '(', ')', ';', 'model', '.', 'sort', '(', ')', ';', 'jtable', '.', 'revalidate', '(', ')', ';', '}']","Replace the rowList with this one.
@param rowList list of rows","['Replace', 'the', 'rowList', 'with', 'this', 'one', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/table/JTableSorted.java#L293-L302,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/proxetta/ProxettaFactory.java,ProxettaFactory.dumpClassInDebugFolder,"protected void dumpClassInDebugFolder(final byte[] bytes) {
		File debugFolder = proxetta.getDebugFolder();
		if (debugFolder == null) {
			return;
		}

		if (!debugFolder.exists() || !debugFolder.isDirectory()) {
			log.warn(""Invalid debug folder: "" + debugFolder);
		}

		String fileName = proxyClassName;
		if (fileName == null) {
			fileName = ""proxetta-"" + System.currentTimeMillis();
		}

		fileName += "".class"";

		File file = new File(debugFolder, fileName);
		try {
			FileUtil.writeBytes(file, bytes);
		} catch (IOException ioex) {
			log.warn(""Error writing class as "" + file, ioex);
		}
	}",java,"protected void dumpClassInDebugFolder(final byte[] bytes) {
		File debugFolder = proxetta.getDebugFolder();
		if (debugFolder == null) {
			return;
		}

		if (!debugFolder.exists() || !debugFolder.isDirectory()) {
			log.warn(""Invalid debug folder: "" + debugFolder);
		}

		String fileName = proxyClassName;
		if (fileName == null) {
			fileName = ""proxetta-"" + System.currentTimeMillis();
		}

		fileName += "".class"";

		File file = new File(debugFolder, fileName);
		try {
			FileUtil.writeBytes(file, bytes);
		} catch (IOException ioex) {
			log.warn(""Error writing class as "" + file, ioex);
		}
	}","['protected', 'void', 'dumpClassInDebugFolder', '(', 'final', 'byte', '[', ']', 'bytes', ')', '{', 'File', 'debugFolder', '=', 'proxetta', '.', 'getDebugFolder', '(', ')', ';', 'if', '(', 'debugFolder', '==', 'null', ')', '{', 'return', ';', '}', 'if', '(', '!', 'debugFolder', '.', 'exists', '(', ')', '||', '!', 'debugFolder', '.', 'isDirectory', '(', ')', ')', '{', 'log', '.', 'warn', '(', '""Invalid debug folder: ""', '+', 'debugFolder', ')', ';', '}', 'String', 'fileName', '=', 'proxyClassName', ';', 'if', '(', 'fileName', '==', 'null', ')', '{', 'fileName', '=', '""proxetta-""', '+', 'System', '.', 'currentTimeMillis', '(', ')', ';', '}', 'fileName', '+=', '"".class""', ';', 'File', 'file', '=', 'new', 'File', '(', 'debugFolder', ',', 'fileName', ')', ';', 'try', '{', 'FileUtil', '.', 'writeBytes', '(', 'file', ',', 'bytes', ')', ';', '}', 'catch', '(', 'IOException', 'ioex', ')', '{', 'log', '.', 'warn', '(', '""Error writing class as ""', '+', 'file', ',', 'ioex', ')', ';', '}', '}']",Writes created class content to output folder for debugging purposes.,"['Writes', 'created', 'class', 'content', 'to', 'output', 'folder', 'for', 'debugging', 'purposes', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/proxetta/ProxettaFactory.java#L331-L354,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/Request.java,Request.write,"public void write(OutputStream os) throws IOException {
        if (requestBodyWriter == null) {
            if (inputRead) {
                is.reset();
                inputRead = false;
            }
            super.write(os);
        } else {
            requestBodyWriter.writeRequestBody(os);
        }
    }",java,"public void write(OutputStream os) throws IOException {
        if (requestBodyWriter == null) {
            if (inputRead) {
                is.reset();
                inputRead = false;
            }
            super.write(os);
        } else {
            requestBodyWriter.writeRequestBody(os);
        }
    }","['public', 'void', 'write', '(', 'OutputStream', 'os', ')', 'throws', 'IOException', '{', 'if', '(', 'requestBodyWriter', '==', 'null', ')', '{', 'if', '(', 'inputRead', ')', '{', 'is', '.', 'reset', '(', ')', ';', 'inputRead', '=', 'false', ';', '}', 'super', '.', 'write', '(', 'os', ')', ';', '}', 'else', '{', 'requestBodyWriter', '.', 'writeRequestBody', '(', 'os', ')', ';', '}', '}']","Writes this request's body to the given output stream. This method may
be called more than once during the lifetime of this request.

@param os an output stream
@exception IOException if there is an I/O error","['Writes', 'this', 'request', 's', 'body', 'to', 'the', 'given', 'output', 'stream', '.', 'This', 'method', 'may', 'be', 'called', 'more', 'than', 'once', 'during', 'the', 'lifetime', 'of', 'this', 'request', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/Request.java#L158-L168,test
oblac/jodd,jodd-core/src/main/java/jodd/bridge/ClassPathURLs.java,ClassPathURLs.of,"public static URL[] of(ClassLoader classLoader, Class clazz) {
		if (clazz == null) {
			clazz = ClassPathURLs.class;
		}
		if (classLoader == null) {
			classLoader = clazz.getClassLoader();
		}
		final Set<URL> urls = new LinkedHashSet<>();

		while (classLoader != null) {
			if (classLoader instanceof URLClassLoader) {
				final URLClassLoader urlClassLoader = (URLClassLoader) classLoader;
				return urlClassLoader.getURLs();
			}

			final URL url = classModuleUrl(classLoader, clazz);

			if (url != null) {
				urls.add(url);
			}

			classLoader = classLoader.getParent();
		}

		return urls.toArray(new URL[0]);
	}",java,"public static URL[] of(ClassLoader classLoader, Class clazz) {
		if (clazz == null) {
			clazz = ClassPathURLs.class;
		}
		if (classLoader == null) {
			classLoader = clazz.getClassLoader();
		}
		final Set<URL> urls = new LinkedHashSet<>();

		while (classLoader != null) {
			if (classLoader instanceof URLClassLoader) {
				final URLClassLoader urlClassLoader = (URLClassLoader) classLoader;
				return urlClassLoader.getURLs();
			}

			final URL url = classModuleUrl(classLoader, clazz);

			if (url != null) {
				urls.add(url);
			}

			classLoader = classLoader.getParent();
		}

		return urls.toArray(new URL[0]);
	}","['public', 'static', 'URL', '[', ']', 'of', '(', 'ClassLoader', 'classLoader', ',', 'Class', 'clazz', ')', '{', 'if', '(', 'clazz', '==', 'null', ')', '{', 'clazz', '=', 'ClassPathURLs', '.', 'class', ';', '}', 'if', '(', 'classLoader', '==', 'null', ')', '{', 'classLoader', '=', 'clazz', '.', 'getClassLoader', '(', ')', ';', '}', 'final', 'Set', '<', 'URL', '>', 'urls', '=', 'new', 'LinkedHashSet', '<>', '(', ')', ';', 'while', '(', 'classLoader', '!=', 'null', ')', '{', 'if', '(', 'classLoader', 'instanceof', 'URLClassLoader', ')', '{', 'final', 'URLClassLoader', 'urlClassLoader', '=', '(', 'URLClassLoader', ')', 'classLoader', ';', 'return', 'urlClassLoader', '.', 'getURLs', '(', ')', ';', '}', 'final', 'URL', 'url', '=', 'classModuleUrl', '(', 'classLoader', ',', 'clazz', ')', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'urls', '.', 'add', '(', 'url', ')', ';', '}', 'classLoader', '=', 'classLoader', '.', 'getParent', '(', ')', ';', '}', 'return', 'urls', '.', 'toArray', '(', 'new', 'URL', '[', '0', ']', ')', ';', '}']","Returns urls for the classloader

@param classLoader classloader in which to find urls
@return list of urls or {@code null} if not found","['Returns', 'urls', 'for', 'the', 'classloader']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/bridge/ClassPathURLs.java#L43-L68,test
kocakosm/pitaya,src/org/kocakosm/pitaya/util/XArrays.java,XArrays.copyOf,"public static <T> T[] copyOf(T[] original)
	{
		return Arrays.copyOf(original, original.length);
	}",java,"public static <T> T[] copyOf(T[] original)
	{
		return Arrays.copyOf(original, original.length);
	}","['public', 'static', '<', 'T', '>', 'T', '[', ']', 'copyOf', '(', 'T', '[', ']', 'original', ')', '{', 'return', 'Arrays', '.', 'copyOf', '(', 'original', ',', 'original', '.', 'length', ')', ';', '}']","Returns a copy of the given array. The original array and the
returned copy will have identical length and content.

@param <T> the type of the elements in the array to copy.
@param original the array to be copied.

@return a copy of the original array.

@throws NullPointerException if {@code original} is {@code null}.","['Returns', 'a', 'copy', 'of', 'the', 'given', 'array', '.', 'The', 'original', 'array', 'and', 'the', 'returned', 'copy', 'will', 'have', 'identical', 'length', 'and', 'content', '.']",f2b203b6cdb32723bd1249a1325a3bb5918bf99a,https://github.com/kocakosm/pitaya/blob/f2b203b6cdb32723bd1249a1325a3bb5918bf99a/src/org/kocakosm/pitaya/util/XArrays.java#L755-L758,test
oblac/jodd,jodd-core/src/main/java/jodd/chalk/Chalk.java,Chalk.on,"public String on(final String string) {
		if (!enabled) {
			return string;
		}

		final StringBuilder sb = new StringBuilder();

		if (prefix != null) {
			sb.append(prefix).append(""m"");
		}

		sb.append(string);

		if (suffix != null) {
			sb.append(suffix).append(""m"");
		}

		return sb.toString();
	}",java,"public String on(final String string) {
		if (!enabled) {
			return string;
		}

		final StringBuilder sb = new StringBuilder();

		if (prefix != null) {
			sb.append(prefix).append(""m"");
		}

		sb.append(string);

		if (suffix != null) {
			sb.append(suffix).append(""m"");
		}

		return sb.toString();
	}","['public', 'String', 'on', '(', 'final', 'String', 'string', ')', '{', 'if', '(', '!', 'enabled', ')', '{', 'return', 'string', ';', '}', 'final', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'if', '(', 'prefix', '!=', 'null', ')', '{', 'sb', '.', 'append', '(', 'prefix', ')', '.', 'append', '(', '""m""', ')', ';', '}', 'sb', '.', 'append', '(', 'string', ')', ';', 'if', '(', 'suffix', '!=', 'null', ')', '{', 'sb', '.', 'append', '(', 'suffix', ')', '.', 'append', '(', '""m""', ')', ';', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']",Returns chalked string.,"['Returns', 'chalked', 'string', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/chalk/Chalk.java#L264-L282,test
hawkular/hawkular-metrics,containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java,TokenAuthenticator.onRequestResult,"private void onRequestResult(HttpServerExchange serverExchange, PooledConnection connection, boolean allowed) {
        connectionPools.get(serverExchange.getIoThread()).release(connection);
        // Remove attachment early to make it eligible for GC
        AuthContext context = serverExchange.removeAttachment(AUTH_CONTEXT_KEY);
        apiLatency.update(context.getClientResponseTime(), NANOSECONDS);
        authLatency.update(context.getLatency(), NANOSECONDS);
        if (allowed) {
            serverExchange.dispatch(containerHandler);
        } else {
            endExchange(serverExchange, FORBIDDEN);
        }
    }",java,"private void onRequestResult(HttpServerExchange serverExchange, PooledConnection connection, boolean allowed) {
        connectionPools.get(serverExchange.getIoThread()).release(connection);
        // Remove attachment early to make it eligible for GC
        AuthContext context = serverExchange.removeAttachment(AUTH_CONTEXT_KEY);
        apiLatency.update(context.getClientResponseTime(), NANOSECONDS);
        authLatency.update(context.getLatency(), NANOSECONDS);
        if (allowed) {
            serverExchange.dispatch(containerHandler);
        } else {
            endExchange(serverExchange, FORBIDDEN);
        }
    }","['private', 'void', 'onRequestResult', '(', 'HttpServerExchange', 'serverExchange', ',', 'PooledConnection', 'connection', ',', 'boolean', 'allowed', ')', '{', 'connectionPools', '.', 'get', '(', 'serverExchange', '.', 'getIoThread', '(', ')', ')', '.', 'release', '(', 'connection', ')', ';', '// Remove attachment early to make it eligible for GC', 'AuthContext', 'context', '=', 'serverExchange', '.', 'removeAttachment', '(', 'AUTH_CONTEXT_KEY', ')', ';', 'apiLatency', '.', 'update', '(', 'context', '.', 'getClientResponseTime', '(', ')', ',', 'NANOSECONDS', ')', ';', 'authLatency', '.', 'update', '(', 'context', '.', 'getLatency', '(', ')', ',', 'NANOSECONDS', ')', ';', 'if', '(', 'allowed', ')', '{', 'serverExchange', '.', 'dispatch', '(', 'containerHandler', ')', ';', '}', 'else', '{', 'endExchange', '(', 'serverExchange', ',', 'FORBIDDEN', ')', ';', '}', '}']",Called when the Kubernetes master server reponse has been inspected.,"['Called', 'when', 'the', 'Kubernetes', 'master', 'server', 'reponse', 'has', 'been', 'inspected', '.']",6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c,https://github.com/hawkular/hawkular-metrics/blob/6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java#L323-L334,test
artclarke/humble-video,humble-video-noarch/src/main/java/io/humble/ferry/JNILibrary.java,JNILibrary.deleteTemporaryFiles,"private static void deleteTemporaryFiles() {
    final File dir = getTmpDir();
    final FilenameFilter filter = new FilenameFilter() {
      public boolean accept(File dir, String name) {
        return name.endsWith(HUMBLE_TEMP_EXTENSION);
      }
    };
    final File markers[] = dir.listFiles(filter);
    for (File marker : markers) {
      final String markerName = marker.getName();
      final String libName = markerName.substring(0, markerName.length()
          - HUMBLE_TEMP_EXTENSION.length());
      final File lib = new File(marker.getParentFile(), libName);
      if (!lib.exists() || lib.delete())
        marker.delete();
    }
  }",java,"private static void deleteTemporaryFiles() {
    final File dir = getTmpDir();
    final FilenameFilter filter = new FilenameFilter() {
      public boolean accept(File dir, String name) {
        return name.endsWith(HUMBLE_TEMP_EXTENSION);
      }
    };
    final File markers[] = dir.listFiles(filter);
    for (File marker : markers) {
      final String markerName = marker.getName();
      final String libName = markerName.substring(0, markerName.length()
          - HUMBLE_TEMP_EXTENSION.length());
      final File lib = new File(marker.getParentFile(), libName);
      if (!lib.exists() || lib.delete())
        marker.delete();
    }
  }","['private', 'static', 'void', 'deleteTemporaryFiles', '(', ')', '{', 'final', 'File', 'dir', '=', 'getTmpDir', '(', ')', ';', 'final', 'FilenameFilter', 'filter', '=', 'new', 'FilenameFilter', '(', ')', '{', 'public', 'boolean', 'accept', '(', 'File', 'dir', ',', 'String', 'name', ')', '{', 'return', 'name', '.', 'endsWith', '(', 'HUMBLE_TEMP_EXTENSION', ')', ';', '}', '}', ';', 'final', 'File', 'markers', '[', ']', '=', 'dir', '.', 'listFiles', '(', 'filter', ')', ';', 'for', '(', 'File', 'marker', ':', 'markers', ')', '{', 'final', 'String', 'markerName', '=', 'marker', '.', 'getName', '(', ')', ';', 'final', 'String', 'libName', '=', 'markerName', '.', 'substring', '(', '0', ',', 'markerName', '.', 'length', '(', ')', '-', 'HUMBLE_TEMP_EXTENSION', '.', 'length', '(', ')', ')', ';', 'final', 'File', 'lib', '=', 'new', 'File', '(', 'marker', '.', 'getParentFile', '(', ')', ',', 'libName', ')', ';', 'if', '(', '!', 'lib', '.', 'exists', '(', ')', '||', 'lib', '.', 'delete', '(', ')', ')', 'marker', '.', 'delete', '(', ')', ';', '}', '}']","Finds all "".humble"" temp files in the temp directory and nukes them.","['Finds', 'all', '.', 'humble', 'temp', 'files', 'in', 'the', 'temp', 'directory', 'and', 'nukes', 'them', '.']",aa349ae2d7ef74160b7074feac8d298cf90394d1,https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/ferry/JNILibrary.java#L332-L348,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/io/RandomAccessFile.java,RandomAccessFile.searchForward,"public boolean searchForward(KMPMatch match, int maxBytes) throws IOException {
    long start = getFilePointer();
    long last = (maxBytes < 0) ? length() : Math.min(length(), start + maxBytes);
    long needToScan = last - start;

    // check what ever is now in the buffer
    int bytesAvailable = (int) (dataEnd - filePosition);
    if (bytesAvailable < 1) {
      seek(filePosition); // read a new buffer
      bytesAvailable = (int) (dataEnd - filePosition);
    }
    int bufStart = (int) (filePosition - bufferStart);
    int scanBytes = (int) Math.min(bytesAvailable, needToScan);
    int pos = match.indexOf(buffer, bufStart, scanBytes);
    if (pos >= 0) {
      seek(bufferStart + pos);
      return true;
    }

    int matchLen = match.getMatchLength();
    needToScan -= scanBytes - matchLen;

    while (needToScan > matchLen) {
      readBuffer(dataEnd - matchLen); // force new buffer

      scanBytes = (int) Math.min(buffer.length, needToScan);
      pos = match.indexOf(buffer, 0, scanBytes);
      if (pos > 0) {
        seek(bufferStart + pos);
        return true;
      }

      needToScan -= scanBytes - matchLen;
    }

    // failure
    seek(last);
    return false;
  }",java,"public boolean searchForward(KMPMatch match, int maxBytes) throws IOException {
    long start = getFilePointer();
    long last = (maxBytes < 0) ? length() : Math.min(length(), start + maxBytes);
    long needToScan = last - start;

    // check what ever is now in the buffer
    int bytesAvailable = (int) (dataEnd - filePosition);
    if (bytesAvailable < 1) {
      seek(filePosition); // read a new buffer
      bytesAvailable = (int) (dataEnd - filePosition);
    }
    int bufStart = (int) (filePosition - bufferStart);
    int scanBytes = (int) Math.min(bytesAvailable, needToScan);
    int pos = match.indexOf(buffer, bufStart, scanBytes);
    if (pos >= 0) {
      seek(bufferStart + pos);
      return true;
    }

    int matchLen = match.getMatchLength();
    needToScan -= scanBytes - matchLen;

    while (needToScan > matchLen) {
      readBuffer(dataEnd - matchLen); // force new buffer

      scanBytes = (int) Math.min(buffer.length, needToScan);
      pos = match.indexOf(buffer, 0, scanBytes);
      if (pos > 0) {
        seek(bufferStart + pos);
        return true;
      }

      needToScan -= scanBytes - matchLen;
    }

    // failure
    seek(last);
    return false;
  }","['public', 'boolean', 'searchForward', '(', 'KMPMatch', 'match', ',', 'int', 'maxBytes', ')', 'throws', 'IOException', '{', 'long', 'start', '=', 'getFilePointer', '(', ')', ';', 'long', 'last', '=', '(', 'maxBytes', '<', '0', ')', '?', 'length', '(', ')', ':', 'Math', '.', 'min', '(', 'length', '(', ')', ',', 'start', '+', 'maxBytes', ')', ';', 'long', 'needToScan', '=', 'last', '-', 'start', ';', '// check what ever is now in the buffer\r', 'int', 'bytesAvailable', '=', '(', 'int', ')', '(', 'dataEnd', '-', 'filePosition', ')', ';', 'if', '(', 'bytesAvailable', '<', '1', ')', '{', 'seek', '(', 'filePosition', ')', ';', '// read a new buffer\r', 'bytesAvailable', '=', '(', 'int', ')', '(', 'dataEnd', '-', 'filePosition', ')', ';', '}', 'int', 'bufStart', '=', '(', 'int', ')', '(', 'filePosition', '-', 'bufferStart', ')', ';', 'int', 'scanBytes', '=', '(', 'int', ')', 'Math', '.', 'min', '(', 'bytesAvailable', ',', 'needToScan', ')', ';', 'int', 'pos', '=', 'match', '.', 'indexOf', '(', 'buffer', ',', 'bufStart', ',', 'scanBytes', ')', ';', 'if', '(', 'pos', '>=', '0', ')', '{', 'seek', '(', 'bufferStart', '+', 'pos', ')', ';', 'return', 'true', ';', '}', 'int', 'matchLen', '=', 'match', '.', 'getMatchLength', '(', ')', ';', 'needToScan', '-=', 'scanBytes', '-', 'matchLen', ';', 'while', '(', 'needToScan', '>', 'matchLen', ')', '{', 'readBuffer', '(', 'dataEnd', '-', 'matchLen', ')', ';', '// force new buffer\r', 'scanBytes', '=', '(', 'int', ')', 'Math', '.', 'min', '(', 'buffer', '.', 'length', ',', 'needToScan', ')', ';', 'pos', '=', 'match', '.', 'indexOf', '(', 'buffer', ',', '0', ',', 'scanBytes', ')', ';', 'if', '(', 'pos', '>', '0', ')', '{', 'seek', '(', 'bufferStart', '+', 'pos', ')', ';', 'return', 'true', ';', '}', 'needToScan', '-=', 'scanBytes', '-', 'matchLen', ';', '}', '// failure\r', 'seek', '(', 'last', ')', ';', 'return', 'false', ';', '}']","Search forward from the current pos, looking for a match.

@param match    the match to look for.
@param maxBytes maximum number of bytes to search. use -1 for all
@return true if found, file position will be at the start of the match.
@throws IOException on read error","['Search', 'forward', 'from', 'the', 'current', 'pos', 'looking', 'for', 'a', 'match', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/io/RandomAccessFile.java#L1842-L1880,test
ReactiveX/RxJava,src/main/java/io/reactivex/subjects/UnicastSubject.java,UnicastSubject.create,"@CheckReturnValue
    @NonNull
    public static <T> UnicastSubject<T> create() {
        return new UnicastSubject<T>(bufferSize(), true);
    }",java,"@CheckReturnValue
    @NonNull
    public static <T> UnicastSubject<T> create() {
        return new UnicastSubject<T>(bufferSize(), true);
    }","['@', 'CheckReturnValue', '@', 'NonNull', 'public', 'static', '<', 'T', '>', 'UnicastSubject', '<', 'T', '>', 'create', '(', ')', '{', 'return', 'new', 'UnicastSubject', '<', 'T', '>', '(', 'bufferSize', '(', ')', ',', 'true', ')', ';', '}']","Creates an UnicastSubject with an internal buffer capacity hint 16.
@param <T> the value type
@return an UnicastSubject instance","['Creates', 'an', 'UnicastSubject', 'with', 'an', 'internal', 'buffer', 'capacity', 'hint', '16', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/subjects/UnicastSubject.java#L181-L185,test
cologneintelligence/FitGoodies,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java,FileSystemDirectoryHelper.dirDepth,"public int dirDepth(final File path) {
		final String stringPath = path.getPath();
		return stringPath.length() - stringPath.replaceAll(""[/\\\\]"", """").length();
	}",java,"public int dirDepth(final File path) {
		final String stringPath = path.getPath();
		return stringPath.length() - stringPath.replaceAll(""[/\\\\]"", """").length();
	}","['public', 'int', 'dirDepth', '(', 'final', 'File', 'path', ')', '{', 'final', 'String', 'stringPath', '=', 'path', '.', 'getPath', '(', ')', ';', 'return', 'stringPath', '.', 'length', '(', ')', '-', 'stringPath', '.', 'replaceAll', '(', '""[/\\\\\\\\]""', ',', '""""', ')', '.', 'length', '(', ')', ';', '}']","Counts the number of directories in a given path.

@param path the path to analyze
@return number of directories","['Counts', 'the', 'number', 'of', 'directories', 'in', 'a', 'given', 'path', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java#L250-L253,test
oblac/jodd,jodd-bean/src/main/java/jodd/introspector/Ctors.java,Ctors.getCtorDescriptor,"public CtorDescriptor getCtorDescriptor(final Class... args) {
		ctors:
		for (CtorDescriptor ctorDescriptor : allCtors) {
			Class[] arg = ctorDescriptor.getParameters();

			if (arg.length != args.length) {
				continue;
			}

			for (int j = 0; j < arg.length; j++) {
				if (arg[j] != args[j]) {
					continue ctors;
				}
			}

			return ctorDescriptor;
		}
		return null;
	}",java,"public CtorDescriptor getCtorDescriptor(final Class... args) {
		ctors:
		for (CtorDescriptor ctorDescriptor : allCtors) {
			Class[] arg = ctorDescriptor.getParameters();

			if (arg.length != args.length) {
				continue;
			}

			for (int j = 0; j < arg.length; j++) {
				if (arg[j] != args[j]) {
					continue ctors;
				}
			}

			return ctorDescriptor;
		}
		return null;
	}","['public', 'CtorDescriptor', 'getCtorDescriptor', '(', 'final', 'Class', '...', 'args', ')', '{', 'ctors', ':', 'for', '(', 'CtorDescriptor', 'ctorDescriptor', ':', 'allCtors', ')', '{', 'Class', '[', ']', 'arg', '=', 'ctorDescriptor', '.', 'getParameters', '(', ')', ';', 'if', '(', 'arg', '.', 'length', '!=', 'args', '.', 'length', ')', '{', 'continue', ';', '}', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'arg', '.', 'length', ';', 'j', '++', ')', '{', 'if', '(', 'arg', '[', 'j', ']', '!=', 'args', '[', 'j', ']', ')', '{', 'continue', 'ctors', ';', '}', '}', 'return', 'ctorDescriptor', ';', '}', 'return', 'null', ';', '}']",Finds constructor description that matches given argument types.,"['Finds', 'constructor', 'description', 'that', 'matches', 'given', 'argument', 'types', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-bean/src/main/java/jodd/introspector/Ctors.java#L86-L104,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java,CommandResource.createCommandResource,"public static Optional<CommandResource> createCommandResource(Identification provider, String command, Capabilities capabilities, Context context) {
        CommandResource commandResource = new CommandResource(provider, command, capabilities);
        if (!verifyCommand(command)) {
            context.getLogger().error(""IllegalCommand!"");
            return Optional.empty();
        }
        if (!verifyCapabilities(command, capabilities)) {
            context.getLogger().error(""Player is not able to handle Command!"");
            return Optional.empty();
        }
        return Optional.of(commandResource);
    }",java,"public static Optional<CommandResource> createCommandResource(Identification provider, String command, Capabilities capabilities, Context context) {
        CommandResource commandResource = new CommandResource(provider, command, capabilities);
        if (!verifyCommand(command)) {
            context.getLogger().error(""IllegalCommand!"");
            return Optional.empty();
        }
        if (!verifyCapabilities(command, capabilities)) {
            context.getLogger().error(""Player is not able to handle Command!"");
            return Optional.empty();
        }
        return Optional.of(commandResource);
    }","['public', 'static', 'Optional', '<', 'CommandResource', '>', 'createCommandResource', '(', 'Identification', 'provider', ',', 'String', 'command', ',', 'Capabilities', 'capabilities', ',', 'Context', 'context', ')', '{', 'CommandResource', 'commandResource', '=', 'new', 'CommandResource', '(', 'provider', ',', 'command', ',', 'capabilities', ')', ';', 'if', '(', '!', 'verifyCommand', '(', 'command', ')', ')', '{', 'context', '.', 'getLogger', '(', ')', '.', 'error', '(', '""IllegalCommand!""', ')', ';', 'return', 'Optional', '.', 'empty', '(', ')', ';', '}', 'if', '(', '!', 'verifyCapabilities', '(', 'command', ',', 'capabilities', ')', ')', '{', 'context', '.', 'getLogger', '(', ')', '.', 'error', '(', '""Player is not able to handle Command!""', ')', ';', 'return', 'Optional', '.', 'empty', '(', ')', ';', '}', 'return', 'Optional', '.', 'of', '(', 'commandResource', ')', ';', '}']","creates a new Resource.

@param provider   the Provider of the Resource
@param command          the resource
@param capabilities the capabilities of the player
@param context used for logging
@return the commandResource if nothing illegal was passed","['creates', 'a', 'new', 'Resource', '.']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java#L53-L64,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/media/crop/CropImageActivity.java,CropImageActivity.rotateImage,"private Bitmap rotateImage(Bitmap src, float degree) {
        // create new matrix
        Matrix matrix = new Matrix();
        // setup rotation degree
        matrix.postRotate(degree);
        Bitmap bmp = Bitmap.createBitmap(src, 0, 0, src.getWidth(),
                src.getHeight(), matrix, true);
        return bmp;
    }",java,"private Bitmap rotateImage(Bitmap src, float degree) {
        // create new matrix
        Matrix matrix = new Matrix();
        // setup rotation degree
        matrix.postRotate(degree);
        Bitmap bmp = Bitmap.createBitmap(src, 0, 0, src.getWidth(),
                src.getHeight(), matrix, true);
        return bmp;
    }","['private', 'Bitmap', 'rotateImage', '(', 'Bitmap', 'src', ',', 'float', 'degree', ')', '{', '// create new matrix', 'Matrix', 'matrix', '=', 'new', 'Matrix', '(', ')', ';', '// setup rotation degree', 'matrix', '.', 'postRotate', '(', 'degree', ')', ';', 'Bitmap', 'bmp', '=', 'Bitmap', '.', 'createBitmap', '(', 'src', ',', '0', ',', '0', ',', 'src', '.', 'getWidth', '(', ')', ',', 'src', '.', 'getHeight', '(', ')', ',', 'matrix', ',', 'true', ')', ';', 'return', 'bmp', ';', '}']",Thong added for rotate,"['Thong', 'added', 'for', 'rotate']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/media/crop/CropImageActivity.java#L660-L668,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/ImageUrlRewriter.java,ImageUrlRewriter.computeNewImageLocation,"private String computeNewImageLocation(final String cssUri, final String imageUrl) {
    LOG.debug(""cssUri: {}, imageUrl {}"", cssUri, imageUrl);
    final String cleanImageUrl = cleanImageUrl(imageUrl);
    // TODO move to ServletContextUriLocator as a helper method?
    // for the following input: /a/b/c/1.css => /a/b/c/
    int idxLastSeparator = cssUri.lastIndexOf(ServletContextUriLocator.PREFIX);
    if (idxLastSeparator == -1) {
      if (ClasspathUriLocator.isValid(cssUri)) {
        idxLastSeparator = cssUri.lastIndexOf(ClasspathUriLocator.PREFIX);
        // find the index of ':' character used by classpath prefix
        if (idxLastSeparator >= 0) {
          idxLastSeparator += ClasspathUriLocator.PREFIX.length() - 1;
        }
      }
      if (idxLastSeparator < 0) {
        throw new IllegalStateException(""Invalid cssUri: "" + cssUri + "". Should contain at least one '/' character!"");
      }
    }
    final String cssUriFolder = cssUri.substring(0, idxLastSeparator + 1);
    // remove '/' from imageUrl if it starts with one.
    final String processedImageUrl = cleanImageUrl.startsWith(ServletContextUriLocator.PREFIX) ? cleanImageUrl.substring(1)
        : cleanImageUrl;
    final String computedImageLocation = cleanPath(cssUriFolder + processedImageUrl);
    LOG.debug(""computedImageLocation: {}"", computedImageLocation);
    return computedImageLocation;
  }",java,"private String computeNewImageLocation(final String cssUri, final String imageUrl) {
    LOG.debug(""cssUri: {}, imageUrl {}"", cssUri, imageUrl);
    final String cleanImageUrl = cleanImageUrl(imageUrl);
    // TODO move to ServletContextUriLocator as a helper method?
    // for the following input: /a/b/c/1.css => /a/b/c/
    int idxLastSeparator = cssUri.lastIndexOf(ServletContextUriLocator.PREFIX);
    if (idxLastSeparator == -1) {
      if (ClasspathUriLocator.isValid(cssUri)) {
        idxLastSeparator = cssUri.lastIndexOf(ClasspathUriLocator.PREFIX);
        // find the index of ':' character used by classpath prefix
        if (idxLastSeparator >= 0) {
          idxLastSeparator += ClasspathUriLocator.PREFIX.length() - 1;
        }
      }
      if (idxLastSeparator < 0) {
        throw new IllegalStateException(""Invalid cssUri: "" + cssUri + "". Should contain at least one '/' character!"");
      }
    }
    final String cssUriFolder = cssUri.substring(0, idxLastSeparator + 1);
    // remove '/' from imageUrl if it starts with one.
    final String processedImageUrl = cleanImageUrl.startsWith(ServletContextUriLocator.PREFIX) ? cleanImageUrl.substring(1)
        : cleanImageUrl;
    final String computedImageLocation = cleanPath(cssUriFolder + processedImageUrl);
    LOG.debug(""computedImageLocation: {}"", computedImageLocation);
    return computedImageLocation;
  }","['private', 'String', 'computeNewImageLocation', '(', 'final', 'String', 'cssUri', ',', 'final', 'String', 'imageUrl', ')', '{', 'LOG', '.', 'debug', '(', '""cssUri: {}, imageUrl {}""', ',', 'cssUri', ',', 'imageUrl', ')', ';', 'final', 'String', 'cleanImageUrl', '=', 'cleanImageUrl', '(', 'imageUrl', ')', ';', '// TODO move to ServletContextUriLocator as a helper method?', '// for the following input: /a/b/c/1.css => /a/b/c/', 'int', 'idxLastSeparator', '=', 'cssUri', '.', 'lastIndexOf', '(', 'ServletContextUriLocator', '.', 'PREFIX', ')', ';', 'if', '(', 'idxLastSeparator', '==', '-', '1', ')', '{', 'if', '(', 'ClasspathUriLocator', '.', 'isValid', '(', 'cssUri', ')', ')', '{', 'idxLastSeparator', '=', 'cssUri', '.', 'lastIndexOf', '(', 'ClasspathUriLocator', '.', 'PREFIX', ')', ';', ""// find the index of ':' character used by classpath prefix"", 'if', '(', 'idxLastSeparator', '>=', '0', ')', '{', 'idxLastSeparator', '+=', 'ClasspathUriLocator', '.', 'PREFIX', '.', 'length', '(', ')', '-', '1', ';', '}', '}', 'if', '(', 'idxLastSeparator', '<', '0', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Invalid cssUri: ""', '+', 'cssUri', '+', '"". Should contain at least one \'/\' character!""', ')', ';', '}', '}', 'final', 'String', 'cssUriFolder', '=', 'cssUri', '.', 'substring', '(', '0', ',', 'idxLastSeparator', '+', '1', ')', ';', ""// remove '/' from imageUrl if it starts with one."", 'final', 'String', 'processedImageUrl', '=', 'cleanImageUrl', '.', 'startsWith', '(', 'ServletContextUriLocator', '.', 'PREFIX', ')', '?', 'cleanImageUrl', '.', 'substring', '(', '1', ')', ':', 'cleanImageUrl', ';', 'final', 'String', 'computedImageLocation', '=', 'cleanPath', '(', 'cssUriFolder', '+', 'processedImageUrl', ')', ';', 'LOG', '.', 'debug', '(', '""computedImageLocation: {}""', ',', 'computedImageLocation', ')', ';', 'return', 'computedImageLocation', ';', '}']","Concatenates cssUri and imageUrl after few changes are applied to both input parameters.

@param cssUri
the URI of css resource.
@param imageUrl
the URL of image referred in css.
@return processed new location of image url.","['Concatenates', 'cssUri', 'and', 'imageUrl', 'after', 'few', 'changes', 'are', 'applied', 'to', 'both', 'input', 'parameters', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/model/resource/processor/support/ImageUrlRewriter.java#L174-L199,test
coinbase/coinbase-java,src/main/java/com/coinbase/api/CoinbaseBuilder.java,CoinbaseBuilder.withApiKey,"public CoinbaseBuilder withApiKey(String api_key, String api_secret) {
    	this.api_key = api_key;
    	this.api_secret = api_secret;
    	return this;
    }",java,"public CoinbaseBuilder withApiKey(String api_key, String api_secret) {
    	this.api_key = api_key;
    	this.api_secret = api_secret;
    	return this;
    }","['public', 'CoinbaseBuilder', 'withApiKey', '(', 'String', 'api_key', ',', 'String', 'api_secret', ')', '{', 'this', '.', 'api_key', '=', 'api_key', ';', 'this', '.', 'api_secret', '=', 'api_secret', ';', 'return', 'this', ';', '}']","Specify the HMAC api key and secret to be used for authenticated requests

Having more than one client with the same api/secret globally is unsupported
and will result in sporadic auth errors as the nonce is calculated from the system time.

@param api_key the HMAC API Key
@param api_secret the HMAC API Secret

@return this CoinbaseBuilder object","['Specify', 'the', 'HMAC', 'api', 'key', 'and', 'secret', 'to', 'be', 'used', 'for', 'authenticated', 'requests']",e3f48712a0f45aabd8e205f11fa76d1cc3fa0ff8,https://github.com/coinbase/coinbase-java/blob/e3f48712a0f45aabd8e205f11fa76d1cc3fa0ff8/src/main/java/com/coinbase/api/CoinbaseBuilder.java#L52-L56,test
stanfy/enroscar,images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java,ImagesManager.memCacheImage,"protected void memCacheImage(final String url, final Bitmap bitmap) {
    if (debug) { Log.d(TAG, ""Memcache for "" + url); }
    memCache.putElement(url, bitmap);
  }",java,"protected void memCacheImage(final String url, final Bitmap bitmap) {
    if (debug) { Log.d(TAG, ""Memcache for "" + url); }
    memCache.putElement(url, bitmap);
  }","['protected', 'void', 'memCacheImage', '(', 'final', 'String', 'url', ',', 'final', 'Bitmap', 'bitmap', ')', '{', 'if', '(', 'debug', ')', '{', 'Log', '.', 'd', '(', 'TAG', ',', '""Memcache for ""', '+', 'url', ')', ';', '}', 'memCache', '.', 'putElement', '(', 'url', ',', 'bitmap', ')', ';', '}']","Add image to memory cache.
@param url image URL
@param bitmap bitmap","['Add', 'image', 'to', 'memory', 'cache', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/images/src/main/java/com/stanfy/enroscar/images/ImagesManager.java#L472-L475,test
oblac/jodd,jodd-servlet/src/main/java/jodd/servlet/ServletUtil.java,ServletUtil.getAllCookies,"public static Cookie[] getAllCookies(final HttpServletRequest request, final String cookieName) {
		Cookie[] cookies = request.getCookies();
		if (cookies == null) {
			return null;
		}
		ArrayList<Cookie> list = new ArrayList<>(cookies.length);
		for (Cookie cookie : cookies) {
			if (cookie.getName().equals(cookieName)) {
				list.add(cookie);
			}
		}
		if (list.isEmpty()) {
			return null;
		}
		return list.toArray(new Cookie[0]);
	}",java,"public static Cookie[] getAllCookies(final HttpServletRequest request, final String cookieName) {
		Cookie[] cookies = request.getCookies();
		if (cookies == null) {
			return null;
		}
		ArrayList<Cookie> list = new ArrayList<>(cookies.length);
		for (Cookie cookie : cookies) {
			if (cookie.getName().equals(cookieName)) {
				list.add(cookie);
			}
		}
		if (list.isEmpty()) {
			return null;
		}
		return list.toArray(new Cookie[0]);
	}","['public', 'static', 'Cookie', '[', ']', 'getAllCookies', '(', 'final', 'HttpServletRequest', 'request', ',', 'final', 'String', 'cookieName', ')', '{', 'Cookie', '[', ']', 'cookies', '=', 'request', '.', 'getCookies', '(', ')', ';', 'if', '(', 'cookies', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'ArrayList', '<', 'Cookie', '>', 'list', '=', 'new', 'ArrayList', '<>', '(', 'cookies', '.', 'length', ')', ';', 'for', '(', 'Cookie', 'cookie', ':', 'cookies', ')', '{', 'if', '(', 'cookie', '.', 'getName', '(', ')', '.', 'equals', '(', 'cookieName', ')', ')', '{', 'list', '.', 'add', '(', 'cookie', ')', ';', '}', '}', 'if', '(', 'list', '.', 'isEmpty', '(', ')', ')', '{', 'return', 'null', ';', '}', 'return', 'list', '.', 'toArray', '(', 'new', 'Cookie', '[', '0', ']', ')', ';', '}']","Returns all cookies from client that matches provided name.
@see #getCookie(javax.servlet.http.HttpServletRequest, String)","['Returns', 'all', 'cookies', 'from', 'client', 'that', 'matches', 'provided', 'name', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-servlet/src/main/java/jodd/servlet/ServletUtil.java#L231-L246,test
Unidata/thredds,clcommon/src/main/java/thredds/inventory/bdb/MetadataManager.java,MetadataManager.closeAll,"static synchronized public void closeAll() {

    List<MetadataManager> closeDatabases = new ArrayList<>(openDatabases);
    for (MetadataManager mm : closeDatabases) {
      if (debug) System.out.println(""  close database "" + mm.collectionName);
      mm.close();
    }
    openDatabases = new ArrayList<>(); // empty

    if (myEnv != null) {
      try {
        // Finally, close the store and environment.
        myEnv.close();
        myEnv = null;
        logger.info(""closed bdb caching"");

      } catch (DatabaseException dbe) {
        logger.error(""Error closing bdb: "", dbe);
      }
    }
  }",java,"static synchronized public void closeAll() {

    List<MetadataManager> closeDatabases = new ArrayList<>(openDatabases);
    for (MetadataManager mm : closeDatabases) {
      if (debug) System.out.println(""  close database "" + mm.collectionName);
      mm.close();
    }
    openDatabases = new ArrayList<>(); // empty

    if (myEnv != null) {
      try {
        // Finally, close the store and environment.
        myEnv.close();
        myEnv = null;
        logger.info(""closed bdb caching"");

      } catch (DatabaseException dbe) {
        logger.error(""Error closing bdb: "", dbe);
      }
    }
  }","['static', 'synchronized', 'public', 'void', 'closeAll', '(', ')', '{', 'List', '<', 'MetadataManager', '>', 'closeDatabases', '=', 'new', 'ArrayList', '<>', '(', 'openDatabases', ')', ';', 'for', '(', 'MetadataManager', 'mm', ':', 'closeDatabases', ')', '{', 'if', '(', 'debug', ')', 'System', '.', 'out', '.', 'println', '(', '""  close database ""', '+', 'mm', '.', 'collectionName', ')', ';', 'mm', '.', 'close', '(', ')', ';', '}', 'openDatabases', '=', 'new', 'ArrayList', '<>', '(', ')', ';', '// empty', 'if', '(', 'myEnv', '!=', 'null', ')', '{', 'try', '{', '// Finally, close the store and environment.', 'myEnv', '.', 'close', '(', ')', ';', 'myEnv', '=', 'null', ';', 'logger', '.', 'info', '(', '""closed bdb caching""', ')', ';', '}', 'catch', '(', 'DatabaseException', 'dbe', ')', '{', 'logger', '.', 'error', '(', '""Error closing bdb: ""', ',', 'dbe', ')', ';', '}', '}', '}']",this is called on TDS shutdown and reinit,"['this', 'is', 'called', 'on', 'TDS', 'shutdown', 'and', 'reinit']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/clcommon/src/main/java/thredds/inventory/bdb/MetadataManager.java#L114-L134,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java,CommandResource.verifyCapabilities,"public static boolean verifyCapabilities(String command, Capabilities capabilities) {
        switch (command) {
            case PLAY: return capabilities.hasPlayPauseControl();
            case PAUSE: return capabilities.hasPlayPauseControl();
            case SELECT_TRACK: return capabilities.isAbleToSelectTrack();
            case NEXT: return capabilities.hasNextPrevious();
            case PREVIOUS: return capabilities.hasNextPrevious();
            case JUMP: return capabilities.isAbleToJump();
            case CHANGE_PLAYBACK: return capabilities.isPlaybackChangeable();
            case CHANGE_VOLUME: return capabilities.canChangeVolume();
            case STOP: return true;
        }
        return false;
    }",java,"public static boolean verifyCapabilities(String command, Capabilities capabilities) {
        switch (command) {
            case PLAY: return capabilities.hasPlayPauseControl();
            case PAUSE: return capabilities.hasPlayPauseControl();
            case SELECT_TRACK: return capabilities.isAbleToSelectTrack();
            case NEXT: return capabilities.hasNextPrevious();
            case PREVIOUS: return capabilities.hasNextPrevious();
            case JUMP: return capabilities.isAbleToJump();
            case CHANGE_PLAYBACK: return capabilities.isPlaybackChangeable();
            case CHANGE_VOLUME: return capabilities.canChangeVolume();
            case STOP: return true;
        }
        return false;
    }","['public', 'static', 'boolean', 'verifyCapabilities', '(', 'String', 'command', ',', 'Capabilities', 'capabilities', ')', '{', 'switch', '(', 'command', ')', '{', 'case', 'PLAY', ':', 'return', 'capabilities', '.', 'hasPlayPauseControl', '(', ')', ';', 'case', 'PAUSE', ':', 'return', 'capabilities', '.', 'hasPlayPauseControl', '(', ')', ';', 'case', 'SELECT_TRACK', ':', 'return', 'capabilities', '.', 'isAbleToSelectTrack', '(', ')', ';', 'case', 'NEXT', ':', 'return', 'capabilities', '.', 'hasNextPrevious', '(', ')', ';', 'case', 'PREVIOUS', ':', 'return', 'capabilities', '.', 'hasNextPrevious', '(', ')', ';', 'case', 'JUMP', ':', 'return', 'capabilities', '.', 'isAbleToJump', '(', ')', ';', 'case', 'CHANGE_PLAYBACK', ':', 'return', 'capabilities', '.', 'isPlaybackChangeable', '(', ')', ';', 'case', 'CHANGE_VOLUME', ':', 'return', 'capabilities', '.', 'canChangeVolume', '(', ')', ';', 'case', 'STOP', ':', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","verifies that the player is capable of handling the command
@param command the command
@param capabilities the capabilities
@return true if capable, false if not","['verifies', 'that', 'the', 'player', 'is', 'capable', 'of', 'handling', 'the', 'command']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/music/resources/CommandResource.java#L88-L101,test
rupertlssmith/lojix,base/struts-tools/src/main/com/thesett/common/webapp/tags/DebugTag.java,DebugTag.getPageScope,"public String getPageScope()
    {
        Map info = new TreeMap();
        Enumeration names = pageContext.getAttributeNamesInScope(PageContext.PAGE_SCOPE);

        while (names.hasMoreElements())
        {
            String name = (String) names.nextElement();
            Object value = pageContext.getAttribute(name);

            info.put(name, toStringValue(value));
        }

        return toHTMLTable(""page scope"", info);
    }",java,"public String getPageScope()
    {
        Map info = new TreeMap();
        Enumeration names = pageContext.getAttributeNamesInScope(PageContext.PAGE_SCOPE);

        while (names.hasMoreElements())
        {
            String name = (String) names.nextElement();
            Object value = pageContext.getAttribute(name);

            info.put(name, toStringValue(value));
        }

        return toHTMLTable(""page scope"", info);
    }","['public', 'String', 'getPageScope', '(', ')', '{', 'Map', 'info', '=', 'new', 'TreeMap', '(', ')', ';', 'Enumeration', 'names', '=', 'pageContext', '.', 'getAttributeNamesInScope', '(', 'PageContext', '.', 'PAGE_SCOPE', ')', ';', 'while', '(', 'names', '.', 'hasMoreElements', '(', ')', ')', '{', 'String', 'name', '=', '(', 'String', ')', 'names', '.', 'nextElement', '(', ')', ';', 'Object', 'value', '=', 'pageContext', '.', 'getAttribute', '(', 'name', ')', ';', 'info', '.', 'put', '(', 'name', ',', 'toStringValue', '(', 'value', ')', ')', ';', '}', 'return', 'toHTMLTable', '(', '""page scope""', ',', 'info', ')', ';', '}']","Returns a String with all page scope variables.

@return A String with all page scope variables.","['Returns', 'a', 'String', 'with', 'all', 'page', 'scope', 'variables', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/struts-tools/src/main/com/thesett/common/webapp/tags/DebugTag.java#L204-L218,test
buschmais/jqa-commandline-tool,application/src/main/java/com/buschmais/jqassistant/commandline/Main.java,Main.getErrorMessage,"private static String getErrorMessage(CliExecutionException e) {
        StringBuffer messageBuilder = new StringBuffer();
        Throwable current = e;
        do {
            messageBuilder.append(""-> "");
            messageBuilder.append(current.getMessage());
            current = current.getCause();
        }
        while (current != null);
        return messageBuilder.toString();
    }",java,"private static String getErrorMessage(CliExecutionException e) {
        StringBuffer messageBuilder = new StringBuffer();
        Throwable current = e;
        do {
            messageBuilder.append(""-> "");
            messageBuilder.append(current.getMessage());
            current = current.getCause();
        }
        while (current != null);
        return messageBuilder.toString();
    }","['private', 'static', 'String', 'getErrorMessage', '(', 'CliExecutionException', 'e', ')', '{', 'StringBuffer', 'messageBuilder', '=', 'new', 'StringBuffer', '(', ')', ';', 'Throwable', 'current', '=', 'e', ';', 'do', '{', 'messageBuilder', '.', 'append', '(', '""-> ""', ')', ';', 'messageBuilder', '.', 'append', '(', 'current', '.', 'getMessage', '(', ')', ')', ';', 'current', '=', 'current', '.', 'getCause', '(', ')', ';', '}', 'while', '(', 'current', '!=', 'null', ')', ';', 'return', 'messageBuilder', '.', 'toString', '(', ')', ';', '}']","Extract an error message from the given exception and its causes.

@param e
The exception.
@return The error message.","['Extract', 'an', 'error', 'message', 'from', 'the', 'given', 'exception', 'and', 'its', 'causes', '.']",c24de584ef4414fca673a75c16f4a533a188481f,https://github.com/buschmais/jqa-commandline-tool/blob/c24de584ef4414fca673a75c16f4a533a188481f/application/src/main/java/com/buschmais/jqassistant/commandline/Main.java#L89-L99,test
agentsoz/jill,jill/src/main/java/io/github/agentsoz/jill/util/Stack255.java,Stack255.push,"public boolean push(Object obj) {
    // Cannot add beyond maximum capacity
    if (isFull()) {
      return false;
    }
    // Grow if we are at capacity
    if (size == objects.length) {
      grow();
    }
    objects[size++] = obj;
    return true;
  }",java,"public boolean push(Object obj) {
    // Cannot add beyond maximum capacity
    if (isFull()) {
      return false;
    }
    // Grow if we are at capacity
    if (size == objects.length) {
      grow();
    }
    objects[size++] = obj;
    return true;
  }","['public', 'boolean', 'push', '(', 'Object', 'obj', ')', '{', '// Cannot add beyond maximum capacity', 'if', '(', 'isFull', '(', ')', ')', '{', 'return', 'false', ';', '}', '// Grow if we are at capacity', 'if', '(', 'size', '==', 'objects', '.', 'length', ')', '{', 'grow', '(', ')', ';', '}', 'objects', '[', 'size', '++', ']', '=', 'obj', ';', 'return', 'true', ';', '}']","Pushes an object on to the top of the stack.

@param obj the Object to place on the stack
@return true if successfully added, false if the stack was full","['Pushes', 'an', 'object', 'on', 'to', 'the', 'top', 'of', 'the', 'stack', '.']",13126fc78350465b477386132465f84cad719426,https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/util/Stack255.java#L91-L102,test
phax/ph-math,ph-math/src/main/java/com/helger/numbercruncher/piutils/AbstractPiFormula.java,AbstractPiFormula.timestamp,"protected String timestamp (final long time)
  {
    // Current time followed by elapsed time as (hh:mm:ss).
    final LocalDateTime aLDT = PDTFactory.getCurrentLocalDateTime ();
    final LocalDateTime aOld = PDTFactory.createLocalDateTime (time);

    return aLDT.toLocalTime ().toString () + "" ("" + Duration.between (aOld, aLDT).toString () + "")"";
  }",java,"protected String timestamp (final long time)
  {
    // Current time followed by elapsed time as (hh:mm:ss).
    final LocalDateTime aLDT = PDTFactory.getCurrentLocalDateTime ();
    final LocalDateTime aOld = PDTFactory.createLocalDateTime (time);

    return aLDT.toLocalTime ().toString () + "" ("" + Duration.between (aOld, aLDT).toString () + "")"";
  }","['protected', 'String', 'timestamp', '(', 'final', 'long', 'time', ')', '{', '// Current time followed by elapsed time as (hh:mm:ss).', 'final', 'LocalDateTime', 'aLDT', '=', 'PDTFactory', '.', 'getCurrentLocalDateTime', '(', ')', ';', 'final', 'LocalDateTime', 'aOld', '=', 'PDTFactory', '.', 'createLocalDateTime', '(', 'time', ')', ';', 'return', 'aLDT', '.', 'toLocalTime', '(', ')', '.', 'toString', '(', ')', '+', '"" (""', '+', 'Duration', '.', 'between', '(', 'aOld', ',', 'aLDT', ')', '.', 'toString', '(', ')', '+', '"")""', ';', '}']","Return a timestamp string that contains the elapsed time period.

@param time
the starting time of the period
@return the timestamp string","['Return', 'a', 'timestamp', 'string', 'that', 'contains', 'the', 'elapsed', 'time', 'period', '.']",9f998870c7e05226e032b1f38c23e7d45ec0169d,https://github.com/phax/ph-math/blob/9f998870c7e05226e032b1f38c23e7d45ec0169d/ph-math/src/main/java/com/helger/numbercruncher/piutils/AbstractPiFormula.java#L81-L88,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/service/WebSheetLoader.java,WebSheetLoader.setDataTablePage,"private void setDataTablePage(final int first) {
		if (parent.getWebFormClientId() != null) {
			final DataTable d = (DataTable) FacesContext.getCurrentInstance().getViewRoot()
					.findComponent(parent.getWebFormClientId());
			if (d != null) {
				d.setFirst(first);
			}
		}
	}",java,"private void setDataTablePage(final int first) {
		if (parent.getWebFormClientId() != null) {
			final DataTable d = (DataTable) FacesContext.getCurrentInstance().getViewRoot()
					.findComponent(parent.getWebFormClientId());
			if (d != null) {
				d.setFirst(first);
			}
		}
	}","['private', 'void', 'setDataTablePage', '(', 'final', 'int', 'first', ')', '{', 'if', '(', 'parent', '.', 'getWebFormClientId', '(', ')', '!=', 'null', ')', '{', 'final', 'DataTable', 'd', '=', '(', 'DataTable', ')', 'FacesContext', '.', 'getCurrentInstance', '(', ')', '.', 'getViewRoot', '(', ')', '.', 'findComponent', '(', 'parent', '.', 'getWebFormClientId', '(', ')', ')', ';', 'if', '(', 'd', '!=', 'null', ')', '{', 'd', '.', 'setFirst', '(', 'first', ')', ';', '}', '}', '}']","Sets the data table page.

@param first
the new data table page","['Sets', 'the', 'data', 'table', 'page', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/service/WebSheetLoader.java#L585-L593,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/music/player/Progress.java,Progress.importResource,"public static Optional<Progress> importResource(ResourceModel resourceModel) {
        Object resource = resourceModel.getResource();
        try {
            //noinspection unchecked
            HashMap<String, Long> data = (HashMap<String, Long>) resource;
            long length = data.get(lengthDescriptor);
            long knownPosition = data.get(knownPositionDescriptor);
            long knownTimestamp = data.get(knownMillisTimeStampDescriptor);
            return Optional.of(new Progress(length, knownPosition, knownTimestamp));
        } catch (Exception e) {
            return Optional.empty();
        }
    }",java,"public static Optional<Progress> importResource(ResourceModel resourceModel) {
        Object resource = resourceModel.getResource();
        try {
            //noinspection unchecked
            HashMap<String, Long> data = (HashMap<String, Long>) resource;
            long length = data.get(lengthDescriptor);
            long knownPosition = data.get(knownPositionDescriptor);
            long knownTimestamp = data.get(knownMillisTimeStampDescriptor);
            return Optional.of(new Progress(length, knownPosition, knownTimestamp));
        } catch (Exception e) {
            return Optional.empty();
        }
    }","['public', 'static', 'Optional', '<', 'Progress', '>', 'importResource', '(', 'ResourceModel', 'resourceModel', ')', '{', 'Object', 'resource', '=', 'resourceModel', '.', 'getResource', '(', ')', ';', 'try', '{', '//noinspection unchecked', 'HashMap', '<', 'String', ',', 'Long', '>', 'data', '=', '(', 'HashMap', '<', 'String', ',', 'Long', '>', ')', 'resource', ';', 'long', 'length', '=', 'data', '.', 'get', '(', 'lengthDescriptor', ')', ';', 'long', 'knownPosition', '=', 'data', '.', 'get', '(', 'knownPositionDescriptor', ')', ';', 'long', 'knownTimestamp', '=', 'data', '.', 'get', '(', 'knownMillisTimeStampDescriptor', ')', ';', 'return', 'Optional', '.', 'of', '(', 'new', 'Progress', '(', 'length', ',', 'knownPosition', ',', 'knownTimestamp', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'return', 'Optional', '.', 'empty', '(', ')', ';', '}', '}']","creates a Progress-object from the resourceModel
@param resourceModel the ResourceModel
@return the optional Progress","['creates', 'a', 'Progress', '-', 'object', 'from', 'the', 'resourceModel']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/music/player/Progress.java#L76-L88,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java,ProfileTableImpl.remove,"public void remove(boolean isUninstall) throws SLEEException {

		if (logger.isTraceEnabled()) {
			logger.trace(""removeProfileTable: removing profileTable=""
					+ profileTableName);
		}
		
		// remove the table profiles, at this stage they may use notification source, lets leave it.
		for (ProfileID profileID : getProfiles()) {
			// don't invoke the profile concrete object, to avoid evil profile lifecycle impls 
			// that rollbacks tx, as Test1110251Test
			this.removeProfile(profileID.getProfileName(), false, isUninstall);
		}

		// remove default profile
		if (getDefaultProfileEntity() != null) {
			this.removeProfile(null, false, false);
		}
		
		// add action after commit to remove tracer and close uncommitted mbeans
		TransactionalAction commitAction = new TransactionalAction() {
			public void execute() {
				// remove notification sources for profile table
				final TraceManagement traceMBeanImpl = sleeContainer.getTraceManagement();
				traceMBeanImpl.deregisterNotificationSource(new ProfileTableNotification(profileTableName));
				// close uncommitted mbeans
				closeUncommittedProfileMBeans();					
			}
		};
		sleeContainer.getTransactionManager().getTransactionContext().getAfterCommitActions().add(commitAction);
		

		if (sleeContainer.getSleeState() == SleeState.RUNNING) {
			endActivity();
		}

		// unregister mbean
		unregisterUsageMBean();

		// remove object pool
		profileManagement.getObjectPoolManagement().removeObjectPool(this, sleeContainer.getTransactionManager());

	}",java,"public void remove(boolean isUninstall) throws SLEEException {

		if (logger.isTraceEnabled()) {
			logger.trace(""removeProfileTable: removing profileTable=""
					+ profileTableName);
		}
		
		// remove the table profiles, at this stage they may use notification source, lets leave it.
		for (ProfileID profileID : getProfiles()) {
			// don't invoke the profile concrete object, to avoid evil profile lifecycle impls 
			// that rollbacks tx, as Test1110251Test
			this.removeProfile(profileID.getProfileName(), false, isUninstall);
		}

		// remove default profile
		if (getDefaultProfileEntity() != null) {
			this.removeProfile(null, false, false);
		}
		
		// add action after commit to remove tracer and close uncommitted mbeans
		TransactionalAction commitAction = new TransactionalAction() {
			public void execute() {
				// remove notification sources for profile table
				final TraceManagement traceMBeanImpl = sleeContainer.getTraceManagement();
				traceMBeanImpl.deregisterNotificationSource(new ProfileTableNotification(profileTableName));
				// close uncommitted mbeans
				closeUncommittedProfileMBeans();					
			}
		};
		sleeContainer.getTransactionManager().getTransactionContext().getAfterCommitActions().add(commitAction);
		

		if (sleeContainer.getSleeState() == SleeState.RUNNING) {
			endActivity();
		}

		// unregister mbean
		unregisterUsageMBean();

		// remove object pool
		profileManagement.getObjectPoolManagement().removeObjectPool(this, sleeContainer.getTransactionManager());

	}","['public', 'void', 'remove', '(', 'boolean', 'isUninstall', ')', 'throws', 'SLEEException', '{', 'if', '(', 'logger', '.', 'isTraceEnabled', '(', ')', ')', '{', 'logger', '.', 'trace', '(', '""removeProfileTable: removing profileTable=""', '+', 'profileTableName', ')', ';', '}', '// remove the table profiles, at this stage they may use notification source, lets leave it.', 'for', '(', 'ProfileID', 'profileID', ':', 'getProfiles', '(', ')', ')', '{', ""// don't invoke the profile concrete object, to avoid evil profile lifecycle impls "", '// that rollbacks tx, as Test1110251Test', 'this', '.', 'removeProfile', '(', 'profileID', '.', 'getProfileName', '(', ')', ',', 'false', ',', 'isUninstall', ')', ';', '}', '// remove default profile', 'if', '(', 'getDefaultProfileEntity', '(', ')', '!=', 'null', ')', '{', 'this', '.', 'removeProfile', '(', 'null', ',', 'false', ',', 'false', ')', ';', '}', '// add action after commit to remove tracer and close uncommitted mbeans', 'TransactionalAction', 'commitAction', '=', 'new', 'TransactionalAction', '(', ')', '{', 'public', 'void', 'execute', '(', ')', '{', '// remove notification sources for profile table', 'final', 'TraceManagement', 'traceMBeanImpl', '=', 'sleeContainer', '.', 'getTraceManagement', '(', ')', ';', 'traceMBeanImpl', '.', 'deregisterNotificationSource', '(', 'new', 'ProfileTableNotification', '(', 'profileTableName', ')', ')', ';', '// close uncommitted mbeans', 'closeUncommittedProfileMBeans', '(', ')', ';', '}', '}', ';', 'sleeContainer', '.', 'getTransactionManager', '(', ')', '.', 'getTransactionContext', '(', ')', '.', 'getAfterCommitActions', '(', ')', '.', 'add', '(', 'commitAction', ')', ';', 'if', '(', 'sleeContainer', '.', 'getSleeState', '(', ')', '==', 'SleeState', '.', 'RUNNING', ')', '{', 'endActivity', '(', ')', ';', '}', '// unregister mbean', 'unregisterUsageMBean', '(', ')', ';', '// remove object pool', 'profileManagement', '.', 'getObjectPoolManagement', '(', ')', '.', 'removeObjectPool', '(', 'this', ',', 'sleeContainer', '.', 'getTransactionManager', '(', ')', ')', ';', '}']","Triggers remove operation on this profile table.

@throws UnrecognizedProfileTableNameException","['Triggers', 'remove', 'operation', 'on', 'this', 'profile', 'table', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/profile/ProfileTableImpl.java#L671-L713,test
blademainer/common_utils,common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java,XmlValidationModeDetector.consume,"private String consume(String line) {
        int index = (this.inComment ? endComment(line) : startComment(line));
        return (index == -1 ? null : line.substring(index));
    }",java,"private String consume(String line) {
        int index = (this.inComment ? endComment(line) : startComment(line));
        return (index == -1 ? null : line.substring(index));
    }","['private', 'String', 'consume', '(', 'String', 'line', ')', '{', 'int', 'index', '=', '(', 'this', '.', 'inComment', '?', 'endComment', '(', 'line', ')', ':', 'startComment', '(', 'line', ')', ')', ';', 'return', '(', 'index', '==', '-', '1', '?', 'null', ':', 'line', '.', 'substring', '(', 'index', ')', ')', ';', '}']","Consume the next comment token, update the ""inComment"" flag
and return the remaining content.","['Consume', 'the', 'next', 'comment', 'token', 'update', 'the', 'inComment', 'flag', 'and', 'return', 'the', 'remaining', 'content', '.']",ef6baf0367c16de95a28caab67a7d5842a6d13db,https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/common_helper/src/main/java/com/xiongyingqi/util/xml/XmlValidationModeDetector.java#L159-L162,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/hdf5/H5header.java,H5Group.isChildOf,"boolean isChildOf(H5Group that) {
      if (parent == null) return false;
      if (parent == that) return true;
      return parent.isChildOf(that);
    }",java,"boolean isChildOf(H5Group that) {
      if (parent == null) return false;
      if (parent == that) return true;
      return parent.isChildOf(that);
    }","['boolean', 'isChildOf', '(', 'H5Group', 'that', ')', '{', 'if', '(', 'parent', '==', 'null', ')', 'return', 'false', ';', 'if', '(', 'parent', '==', 'that', ')', 'return', 'true', ';', 'return', 'parent', '.', 'isChildOf', '(', 'that', ')', ';', '}']",is this a child of that ?,"['is', 'this', 'a', 'child', 'of', 'that', '?']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/hdf5/H5header.java#L2249-L2253,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/reflect/BeanMemento.java,BeanMemento.restoreValues,"public static void restoreValues(Object ob, Map<String, Object> values) throws NoSuchFieldException
    {
        /*log.fine(""public void restore(Object ob): called"");*/
        /*log.fine(""Object to restore to has the type: "" + ob.getClass());*/

        // Get the class of th object to restore to.
        Class obClass = ob.getClass();

        // Loop over all the stored properties.
        for (String propName : values.keySet())
        {
            // Get the cached property from this mementos store.
            Object nextValue = values.get(propName);
            /*log.fine(""Next property to restore is: "" + propName);*/
            /*log.fine(""Next value to restore is: "" + nextValue);*/

            // Used to hold the value to set.
            Object paramValue;

            // Used to hold the type of the value to set.
            Class paramType;

            // Check if the value store is a null.
            if (nextValue == null)
            {
                paramValue = null;
                paramType = null;
            }

            // Check if the value to store is a multi type data object.
            else if (nextValue instanceof TypeConverter.MultiTypeData)
            {
                /*log.fine(""The value to restore is a multi typed data object."");*/

                TypeConverter.MultiTypeData multiValue = (TypeConverter.MultiTypeData) nextValue;

                // Get the types (classes) of all the possible 'setter' methods for the property.
                Set<Class> setterTypes = ReflectionUtils.findMatchingSetters(ob.getClass(), propName);
                /*log.fine(""setterTypes = "" + setterTypes);*/

                // Use the type converter to get the best matching type with the multi data.
                paramType = TypeConverter.bestMatchingConversion(multiValue, setterTypes);

                // Convert the multi data to an object of the appropriate type.
                paramValue = TypeConverter.convert(multiValue, paramType);
            }

            // The value to store is not a multi type.
            else
            {
                /*log.fine(""The value to restore is a simply typed data object."");*/

                // Get the type and value of the plain type to set.
                paramValue = nextValue;
                paramType = nextValue.getClass();
            }

            /*log.fine(""paramValue = "" + paramValue);*/
            /*log.fine(""paramType = "" + paramType);*/

            // Call the setter method with the new property value, checking first that the property has a matching
            // 'setter' method.
            Method setterMethod;

            try
            {
                // Convert the first letter of the property name to upper case to match against the upper case version
                // of it that will be in the setter method name. For example the property test will have a setter method
                // called setTest.
                String upperPropertyName = Character.toUpperCase(propName.charAt(0)) + propName.substring(1);

                // Try to find an appropriate setter method on the object to call.
                setterMethod = obClass.getMethod(""set"" + upperPropertyName, paramType);

                // Call the setter method with the new property value.
                Object[] params = new Object[] { paramValue };
                setterMethod.invoke(ob, params);
            }
            catch (NoSuchMethodException e)
            {
                // Do nothing as properties may have getters but no setter for read only properties.
                /*log.log(java.util.logging.Level.FINE, ""A setter method could not be found for "" + propName + ""."", e);*/

                /*
                // The object does not have a matching setter method for the type.
                NoSuchFieldException nsfe = new NoSuchFieldException(""The object does not have a matching setter "" +
                                                                     ""method 'set"" + propName + ""'."");
                nsfe.initCause(e);
                throw nsfe;
                */
            }
            catch (IllegalAccessException e)
            {
                /*log.log(java.util.logging.Level.FINE, ""IllegalAccessException during call to setter method."", e);*/
            }
            catch (InvocationTargetException e)
            {
                /*log.log(java.util.logging.Level.FINE, ""InvocationTargetException during call to setter method."", e);*/
            }
        }
    }",java,"public static void restoreValues(Object ob, Map<String, Object> values) throws NoSuchFieldException
    {
        /*log.fine(""public void restore(Object ob): called"");*/
        /*log.fine(""Object to restore to has the type: "" + ob.getClass());*/

        // Get the class of th object to restore to.
        Class obClass = ob.getClass();

        // Loop over all the stored properties.
        for (String propName : values.keySet())
        {
            // Get the cached property from this mementos store.
            Object nextValue = values.get(propName);
            /*log.fine(""Next property to restore is: "" + propName);*/
            /*log.fine(""Next value to restore is: "" + nextValue);*/

            // Used to hold the value to set.
            Object paramValue;

            // Used to hold the type of the value to set.
            Class paramType;

            // Check if the value store is a null.
            if (nextValue == null)
            {
                paramValue = null;
                paramType = null;
            }

            // Check if the value to store is a multi type data object.
            else if (nextValue instanceof TypeConverter.MultiTypeData)
            {
                /*log.fine(""The value to restore is a multi typed data object."");*/

                TypeConverter.MultiTypeData multiValue = (TypeConverter.MultiTypeData) nextValue;

                // Get the types (classes) of all the possible 'setter' methods for the property.
                Set<Class> setterTypes = ReflectionUtils.findMatchingSetters(ob.getClass(), propName);
                /*log.fine(""setterTypes = "" + setterTypes);*/

                // Use the type converter to get the best matching type with the multi data.
                paramType = TypeConverter.bestMatchingConversion(multiValue, setterTypes);

                // Convert the multi data to an object of the appropriate type.
                paramValue = TypeConverter.convert(multiValue, paramType);
            }

            // The value to store is not a multi type.
            else
            {
                /*log.fine(""The value to restore is a simply typed data object."");*/

                // Get the type and value of the plain type to set.
                paramValue = nextValue;
                paramType = nextValue.getClass();
            }

            /*log.fine(""paramValue = "" + paramValue);*/
            /*log.fine(""paramType = "" + paramType);*/

            // Call the setter method with the new property value, checking first that the property has a matching
            // 'setter' method.
            Method setterMethod;

            try
            {
                // Convert the first letter of the property name to upper case to match against the upper case version
                // of it that will be in the setter method name. For example the property test will have a setter method
                // called setTest.
                String upperPropertyName = Character.toUpperCase(propName.charAt(0)) + propName.substring(1);

                // Try to find an appropriate setter method on the object to call.
                setterMethod = obClass.getMethod(""set"" + upperPropertyName, paramType);

                // Call the setter method with the new property value.
                Object[] params = new Object[] { paramValue };
                setterMethod.invoke(ob, params);
            }
            catch (NoSuchMethodException e)
            {
                // Do nothing as properties may have getters but no setter for read only properties.
                /*log.log(java.util.logging.Level.FINE, ""A setter method could not be found for "" + propName + ""."", e);*/

                /*
                // The object does not have a matching setter method for the type.
                NoSuchFieldException nsfe = new NoSuchFieldException(""The object does not have a matching setter "" +
                                                                     ""method 'set"" + propName + ""'."");
                nsfe.initCause(e);
                throw nsfe;
                */
            }
            catch (IllegalAccessException e)
            {
                /*log.log(java.util.logging.Level.FINE, ""IllegalAccessException during call to setter method."", e);*/
            }
            catch (InvocationTargetException e)
            {
                /*log.log(java.util.logging.Level.FINE, ""InvocationTargetException during call to setter method."", e);*/
            }
        }
    }","['public', 'static', 'void', 'restoreValues', '(', 'Object', 'ob', ',', 'Map', '<', 'String', ',', 'Object', '>', 'values', ')', 'throws', 'NoSuchFieldException', '{', '/*log.fine(""public void restore(Object ob): called"");*/', '/*log.fine(""Object to restore to has the type: "" + ob.getClass());*/', '// Get the class of th object to restore to.', 'Class', 'obClass', '=', 'ob', '.', 'getClass', '(', ')', ';', '// Loop over all the stored properties.', 'for', '(', 'String', 'propName', ':', 'values', '.', 'keySet', '(', ')', ')', '{', '// Get the cached property from this mementos store.', 'Object', 'nextValue', '=', 'values', '.', 'get', '(', 'propName', ')', ';', '/*log.fine(""Next property to restore is: "" + propName);*/', '/*log.fine(""Next value to restore is: "" + nextValue);*/', '// Used to hold the value to set.', 'Object', 'paramValue', ';', '// Used to hold the type of the value to set.', 'Class', 'paramType', ';', '// Check if the value store is a null.', 'if', '(', 'nextValue', '==', 'null', ')', '{', 'paramValue', '=', 'null', ';', 'paramType', '=', 'null', ';', '}', '// Check if the value to store is a multi type data object.', 'else', 'if', '(', 'nextValue', 'instanceof', 'TypeConverter', '.', 'MultiTypeData', ')', '{', '/*log.fine(""The value to restore is a multi typed data object."");*/', 'TypeConverter', '.', 'MultiTypeData', 'multiValue', '=', '(', 'TypeConverter', '.', 'MultiTypeData', ')', 'nextValue', ';', ""// Get the types (classes) of all the possible 'setter' methods for the property."", 'Set', '<', 'Class', '>', 'setterTypes', '=', 'ReflectionUtils', '.', 'findMatchingSetters', '(', 'ob', '.', 'getClass', '(', ')', ',', 'propName', ')', ';', '/*log.fine(""setterTypes = "" + setterTypes);*/', '// Use the type converter to get the best matching type with the multi data.', 'paramType', '=', 'TypeConverter', '.', 'bestMatchingConversion', '(', 'multiValue', ',', 'setterTypes', ')', ';', '// Convert the multi data to an object of the appropriate type.', 'paramValue', '=', 'TypeConverter', '.', 'convert', '(', 'multiValue', ',', 'paramType', ')', ';', '}', '// The value to store is not a multi type.', 'else', '{', '/*log.fine(""The value to restore is a simply typed data object."");*/', '// Get the type and value of the plain type to set.', 'paramValue', '=', 'nextValue', ';', 'paramType', '=', 'nextValue', '.', 'getClass', '(', ')', ';', '}', '/*log.fine(""paramValue = "" + paramValue);*/', '/*log.fine(""paramType = "" + paramType);*/', '// Call the setter method with the new property value, checking first that the property has a matching', ""// 'setter' method."", 'Method', 'setterMethod', ';', 'try', '{', '// Convert the first letter of the property name to upper case to match against the upper case version', '// of it that will be in the setter method name. For example the property test will have a setter method', '// called setTest.', 'String', 'upperPropertyName', '=', 'Character', '.', 'toUpperCase', '(', 'propName', '.', 'charAt', '(', '0', ')', ')', '+', 'propName', '.', 'substring', '(', '1', ')', ';', '// Try to find an appropriate setter method on the object to call.', 'setterMethod', '=', 'obClass', '.', 'getMethod', '(', '""set""', '+', 'upperPropertyName', ',', 'paramType', ')', ';', '// Call the setter method with the new property value.', 'Object', '[', ']', 'params', '=', 'new', 'Object', '[', ']', '{', 'paramValue', '}', ';', 'setterMethod', '.', 'invoke', '(', 'ob', ',', 'params', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', '// Do nothing as properties may have getters but no setter for read only properties.', '/*log.log(java.util.logging.Level.FINE, ""A setter method could not be found for "" + propName + ""."", e);*/', '/*\n                // The object does not have a matching setter method for the type.\n                NoSuchFieldException nsfe = new NoSuchFieldException(""The object does not have a matching setter "" +\n                                                                     ""method \'set"" + propName + ""\'."");\n                nsfe.initCause(e);\n                throw nsfe;\n                */', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', '/*log.log(java.util.logging.Level.FINE, ""IllegalAccessException during call to setter method."", e);*/', '}', 'catch', '(', 'InvocationTargetException', 'e', ')', '{', '/*log.log(java.util.logging.Level.FINE, ""InvocationTargetException during call to setter method."", e);*/', '}', '}', '}']","Restores the properties currently in this memento to the specified object.

@param  ob     The object to which the values from this memento should be restored.
@param  values The map of values to restore.

@throws NoSuchFieldException If a setter method could not be found for a property.","['Restores', 'the', 'properties', 'currently', 'in', 'this', 'memento', 'to', 'the', 'specified', 'object', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/reflect/BeanMemento.java#L86-L186,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/kb/Concept.java,Concept.getTypes,"public FSList getTypes() {
    if (Concept_Type.featOkTst && ((Concept_Type)jcasType).casFeat_types == null)
      jcasType.jcas.throwFeatMissing(""types"", ""edu.cmu.lti.oaqa.type.kb.Concept"");
    return (FSList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((Concept_Type)jcasType).casFeatCode_types)));}",java,"public FSList getTypes() {
    if (Concept_Type.featOkTst && ((Concept_Type)jcasType).casFeat_types == null)
      jcasType.jcas.throwFeatMissing(""types"", ""edu.cmu.lti.oaqa.type.kb.Concept"");
    return (FSList)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((Concept_Type)jcasType).casFeatCode_types)));}","['public', 'FSList', 'getTypes', '(', ')', '{', 'if', '(', 'Concept_Type', '.', 'featOkTst', '&&', '(', '(', 'Concept_Type', ')', 'jcasType', ')', '.', 'casFeat_types', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""types""', ',', '""edu.cmu.lti.oaqa.type.kb.Concept""', ')', ';', 'return', '(', 'FSList', ')', '(', 'jcasType', '.', 'll_cas', '.', 'll_getFSForRef', '(', 'jcasType', '.', 'll_cas', '.', 'll_getRefValue', '(', 'addr', ',', '(', '(', 'Concept_Type', ')', 'jcasType', ')', '.', 'casFeatCode_types', ')', ')', ')', ';', '}']","getter for types - gets A list of concept types that the concept belongs to.
@generated
@return value of the feature","['getter', 'for', 'types', '-', 'gets', 'A', 'list', 'of', 'concept', 'types', 'that', 'the', 'concept', 'belongs', 'to', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/kb/Concept.java#L164-L167,test
streamsets/datacollector,container/src/main/java/com/streamsets/datacollector/classpath/ClasspathValidatorResult.java,ClasspathValidatorResult.logDetails,"public void logDetails() {
    if(isValid()) {
      return;
    }

    LOG.warn(""Validation results for {}"", name);

    if(!unparseablePaths.isEmpty()) {
      LOG.warn(""Can't parse the following artifacts:"");
      for(String path : unparseablePaths) {
        LOG.warn(""  {}"", path);
      }
    }

    if(!versionCollisions.isEmpty()) {
      LOG.warn(""Detected colliding dependency versions:"");
      for(Map.Entry<String, Map<String, List<Dependency>>> entry : versionCollisions.entrySet()) {
        LOG.warn(""  Dependency {} have versions: {}"", entry.getKey(), StringUtils.join(entry.getValue().keySet(), "", ""));
        for(Map.Entry<String, List<Dependency>> versionEntry : entry.getValue().entrySet()) {
          LOG.warn(""    Version: {}"", versionEntry.getKey());
          for(Dependency dependency: versionEntry.getValue()) {
            LOG.warn(""      {}"", dependency.getSourceName());
          }
        }
      }
    }
  }",java,"public void logDetails() {
    if(isValid()) {
      return;
    }

    LOG.warn(""Validation results for {}"", name);

    if(!unparseablePaths.isEmpty()) {
      LOG.warn(""Can't parse the following artifacts:"");
      for(String path : unparseablePaths) {
        LOG.warn(""  {}"", path);
      }
    }

    if(!versionCollisions.isEmpty()) {
      LOG.warn(""Detected colliding dependency versions:"");
      for(Map.Entry<String, Map<String, List<Dependency>>> entry : versionCollisions.entrySet()) {
        LOG.warn(""  Dependency {} have versions: {}"", entry.getKey(), StringUtils.join(entry.getValue().keySet(), "", ""));
        for(Map.Entry<String, List<Dependency>> versionEntry : entry.getValue().entrySet()) {
          LOG.warn(""    Version: {}"", versionEntry.getKey());
          for(Dependency dependency: versionEntry.getValue()) {
            LOG.warn(""      {}"", dependency.getSourceName());
          }
        }
      }
    }
  }","['public', 'void', 'logDetails', '(', ')', '{', 'if', '(', 'isValid', '(', ')', ')', '{', 'return', ';', '}', 'LOG', '.', 'warn', '(', '""Validation results for {}""', ',', 'name', ')', ';', 'if', '(', '!', 'unparseablePaths', '.', 'isEmpty', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""Can\'t parse the following artifacts:""', ')', ';', 'for', '(', 'String', 'path', ':', 'unparseablePaths', ')', '{', 'LOG', '.', 'warn', '(', '""  {}""', ',', 'path', ')', ';', '}', '}', 'if', '(', '!', 'versionCollisions', '.', 'isEmpty', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""Detected colliding dependency versions:""', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'Map', '<', 'String', ',', 'List', '<', 'Dependency', '>', '>', '>', 'entry', ':', 'versionCollisions', '.', 'entrySet', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""  Dependency {} have versions: {}""', ',', 'entry', '.', 'getKey', '(', ')', ',', 'StringUtils', '.', 'join', '(', 'entry', '.', 'getValue', '(', ')', '.', 'keySet', '(', ')', ',', '"", ""', ')', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'List', '<', 'Dependency', '>', '>', 'versionEntry', ':', 'entry', '.', 'getValue', '(', ')', '.', 'entrySet', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""    Version: {}""', ',', 'versionEntry', '.', 'getKey', '(', ')', ')', ';', 'for', '(', 'Dependency', 'dependency', ':', 'versionEntry', '.', 'getValue', '(', ')', ')', '{', 'LOG', '.', 'warn', '(', '""      {}""', ',', 'dependency', '.', 'getSourceName', '(', ')', ')', ';', '}', '}', '}', '}', '}']",Generate small report into log.,"['Generate', 'small', 'report', 'into', 'log', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/classpath/ClasspathValidatorResult.java#L72-L98,test
streamsets/datacollector,hive-protolib/src/main/java/com/streamsets/pipeline/stage/lib/hive/HiveMetastoreUtil.java,HiveMetastoreUtil.getCustomLocation,"public static boolean getCustomLocation(Record metadataRecord) throws HiveStageCheckedException{
    if (metadataRecord.get(SEP + VERSION).getValueAsInteger() < 3) {
      return DEFAULT_CUSTOM_LOCATION;
    }

    if (metadataRecord.has(SEP + CUSTOM_LOCATION)) {
      return metadataRecord.get(SEP + CUSTOM_LOCATION).getValueAsBoolean();
    }
    throw new HiveStageCheckedException(Errors.HIVE_17, CUSTOM_LOCATION, metadataRecord);
  }",java,"public static boolean getCustomLocation(Record metadataRecord) throws HiveStageCheckedException{
    if (metadataRecord.get(SEP + VERSION).getValueAsInteger() < 3) {
      return DEFAULT_CUSTOM_LOCATION;
    }

    if (metadataRecord.has(SEP + CUSTOM_LOCATION)) {
      return metadataRecord.get(SEP + CUSTOM_LOCATION).getValueAsBoolean();
    }
    throw new HiveStageCheckedException(Errors.HIVE_17, CUSTOM_LOCATION, metadataRecord);
  }","['public', 'static', 'boolean', 'getCustomLocation', '(', 'Record', 'metadataRecord', ')', 'throws', 'HiveStageCheckedException', '{', 'if', '(', 'metadataRecord', '.', 'get', '(', 'SEP', '+', 'VERSION', ')', '.', 'getValueAsInteger', '(', ')', '<', '3', ')', '{', 'return', 'DEFAULT_CUSTOM_LOCATION', ';', '}', 'if', '(', 'metadataRecord', '.', 'has', '(', 'SEP', '+', 'CUSTOM_LOCATION', ')', ')', '{', 'return', 'metadataRecord', '.', 'get', '(', 'SEP', '+', 'CUSTOM_LOCATION', ')', '.', 'getValueAsBoolean', '(', ')', ';', '}', 'throw', 'new', 'HiveStageCheckedException', '(', 'Errors', '.', 'HIVE_17', ',', 'CUSTOM_LOCATION', ',', 'metadataRecord', ')', ';', '}']","Get the customLocation flag from the metadata record. This flag marks whether or not the Hive database object
is stored into a custom path on the Hadoop filesystem. In both cases, the path is stored in the 'location'
field of the metadata record.

The customLocation flag is included in partition metadata records with version > 2. For previous versions this
function returns {@code DEFAULT_CUSTOM_LOCATION} to keep the previous behavior.

@param metadataRecord the metadata record.
@return true if the location has been customized, false otherwise.
@throws HiveStageCheckedException","['Get', 'the', 'customLocation', 'flag', 'from', 'the', 'metadata', 'record', '.', 'This', 'flag', 'marks', 'whether', 'or', 'not', 'the', 'Hive', 'database', 'object', 'is', 'stored', 'into', 'a', 'custom', 'path', 'on', 'the', 'Hadoop', 'filesystem', '.', 'In', 'both', 'cases', 'the', 'path', 'is', 'stored', 'in', 'the', 'location', 'field', 'of', 'the', 'metadata', 'record', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/hive-protolib/src/main/java/com/streamsets/pipeline/stage/lib/hive/HiveMetastoreUtil.java#L473-L482,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspContextWrapper.java,JspContextWrapper.findAlias,"private String findAlias(String varName) {

	if (aliases == null)
	    return varName;

	String alias = aliases.get(varName);
	if (alias == null) {
	    return varName;
	}
	return alias;
    }",java,"private String findAlias(String varName) {

	if (aliases == null)
	    return varName;

	String alias = aliases.get(varName);
	if (alias == null) {
	    return varName;
	}
	return alias;
    }","['private', 'String', 'findAlias', '(', 'String', 'varName', ')', '{', 'if', '(', 'aliases', '==', 'null', ')', 'return', 'varName', ';', 'String', 'alias', '=', 'aliases', '.', 'get', '(', 'varName', ')', ';', 'if', '(', 'alias', '==', 'null', ')', '{', 'return', 'varName', ';', '}', 'return', 'alias', ';', '}']","Checks to see if the given variable name is used as an alias, and if so,
returns the variable name for which it is used as an alias.

@param varName The variable name to check
@return The variable name for which varName is used as an alias, or
varName if it is not being used as an alias","['Checks', 'to', 'see', 'if', 'the', 'given', 'variable', 'name', 'is', 'used', 'as', 'an', 'alias', 'and', 'if', 'so', 'returns', 'the', 'variable', 'name', 'for', 'which', 'it', 'is', 'used', 'as', 'an', 'alias', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/runtime/JspContextWrapper.java#L497-L507,test
js-lib-com/tiny-container,src/main/java/js/http/encoder/JsonArgumentsReader.java,JsonArgumentsReader.read,"@Override
	public Object read(InputStream inputStream, Type type) throws IOException {
		try {
			return json.parse(new InputStreamReader(inputStream, ""UTF-8""), type);
		} catch (JsonException | ClassCastException | UnsupportedEncodingException e) {
			throw new IllegalArgumentException(e.getMessage());
		}
	}",java,"@Override
	public Object read(InputStream inputStream, Type type) throws IOException {
		try {
			return json.parse(new InputStreamReader(inputStream, ""UTF-8""), type);
		} catch (JsonException | ClassCastException | UnsupportedEncodingException e) {
			throw new IllegalArgumentException(e.getMessage());
		}
	}","['@', 'Override', 'public', 'Object', 'read', '(', 'InputStream', 'inputStream', ',', 'Type', 'type', ')', 'throws', 'IOException', '{', 'try', '{', 'return', 'json', '.', 'parse', '(', 'new', 'InputStreamReader', '(', 'inputStream', ',', '""UTF-8""', ')', ',', 'type', ')', ';', '}', 'catch', '(', 'JsonException', '|', 'ClassCastException', '|', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","Parse JSON from input stream accordingly given type. Return parsed object.

@param inputStream JSON input stream,
@param type expected type.
@return parsed object.
@throws IllegalArgumentException if JSON parse or reading from stream fails.","['Parse', 'JSON', 'from', 'input', 'stream', 'accordingly', 'given', 'type', '.', 'Return', 'parsed', 'object', '.']",ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e,https://github.com/js-lib-com/tiny-container/blob/ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e/src/main/java/js/http/encoder/JsonArgumentsReader.java#L67-L74,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/permanentSoundOutput/events/EndedEvent.java,EndedEvent.createEndedEvent,"public static Optional<EndedEvent> createEndedEvent(Identification source) {
        try {
            EndedEvent stopRequest = new EndedEvent(source);
            return Optional.of(stopRequest);
        } catch (IllegalArgumentException e) {
            return Optional.empty();
        }
    }",java,"public static Optional<EndedEvent> createEndedEvent(Identification source) {
        try {
            EndedEvent stopRequest = new EndedEvent(source);
            return Optional.of(stopRequest);
        } catch (IllegalArgumentException e) {
            return Optional.empty();
        }
    }","['public', 'static', 'Optional', '<', 'EndedEvent', '>', 'createEndedEvent', '(', 'Identification', 'source', ')', '{', 'try', '{', 'EndedEvent', 'stopRequest', '=', 'new', 'EndedEvent', '(', 'source', ')', ';', 'return', 'Optional', '.', 'of', '(', 'stopRequest', ')', ';', '}', 'catch', '(', 'IllegalArgumentException', 'e', ')', '{', 'return', 'Optional', '.', 'empty', '(', ')', ';', '}', '}']","creates a new EndedEvent
@param source the caller
@return the optional StartMusicRequest","['creates', 'a', 'new', 'EndedEvent']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/permanentSoundOutput/events/EndedEvent.java#L36-L43,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/Activator.java,Activator.getImageDescriptor,"public static ImageDescriptor getImageDescriptor(String id) {
        ImageDescriptor retVal = getDefault().getImageRegistry().getDescriptor(id);
        if (retVal == null) {
            retVal = loadImageDescriptor(id);
            getDefault().getImageRegistry().put(id, retVal);
        }
        return retVal;
    }",java,"public static ImageDescriptor getImageDescriptor(String id) {
        ImageDescriptor retVal = getDefault().getImageRegistry().getDescriptor(id);
        if (retVal == null) {
            retVal = loadImageDescriptor(id);
            getDefault().getImageRegistry().put(id, retVal);
        }
        return retVal;
    }","['public', 'static', 'ImageDescriptor', 'getImageDescriptor', '(', 'String', 'id', ')', '{', 'ImageDescriptor', 'retVal', '=', 'getDefault', '(', ')', '.', 'getImageRegistry', '(', ')', '.', 'getDescriptor', '(', 'id', ')', ';', 'if', '(', 'retVal', '==', 'null', ')', '{', 'retVal', '=', 'loadImageDescriptor', '(', 'id', ')', ';', 'getDefault', '(', ')', '.', 'getImageRegistry', '(', ')', '.', 'put', '(', 'id', ',', 'retVal', ')', ';', '}', 'return', 'retVal', ';', '}']","Returns an image descriptor for the image file at the given
plug-in relative path

@param path the path
@return the image descriptor","['Returns', 'an', 'image', 'descriptor', 'for', 'the', 'image', 'file', 'at', 'the', 'given', 'plug', '-', 'in', 'relative', 'path']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/Activator.java#L163-L170,test
Unidata/thredds,ui/src/main/java/ucar/util/prefs/ui/PrefPanel.java,PrefPanel.addDateField,"public Field.Date addDateField(String fldName, String label, Date defValue) {
    Field.Date fld = new Field.Date(fldName, label, defValue, storeData);
    addField( new FieldResizable(fld, this));
    return fld;
  }",java,"public Field.Date addDateField(String fldName, String label, Date defValue) {
    Field.Date fld = new Field.Date(fldName, label, defValue, storeData);
    addField( new FieldResizable(fld, this));
    return fld;
  }","['public', 'Field', '.', 'Date', 'addDateField', '(', 'String', 'fldName', ',', 'String', 'label', ',', 'Date', 'defValue', ')', '{', 'Field', '.', 'Date', 'fld', '=', 'new', 'Field', '.', 'Date', '(', 'fldName', ',', 'label', ',', 'defValue', ',', 'storeData', ')', ';', 'addField', '(', 'new', 'FieldResizable', '(', 'fld', ',', 'this', ')', ')', ';', 'return', 'fld', ';', '}']","Add a field that edits a date
@param fldName the name to store the data in the PersistenceManagerData
@param label used as the label on the panel
@param defValue default value","['Add', 'a', 'field', 'that', 'edits', 'a', 'date']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/util/prefs/ui/PrefPanel.java#L329-L333,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,FeatureStyleExtension.setStyleDefault,"public void setStyleDefault(FeatureRow featureRow, StyleRow style) {
        setStyle(featureRow.getTable().getTableName(), featureRow.getId(),
                null, style);
    }",java,"public void setStyleDefault(FeatureRow featureRow, StyleRow style) {
        setStyle(featureRow.getTable().getTableName(), featureRow.getId(),
                null, style);
    }","['public', 'void', 'setStyleDefault', '(', 'FeatureRow', 'featureRow', ',', 'StyleRow', 'style', ')', '{', 'setStyle', '(', 'featureRow', '.', 'getTable', '(', ')', '.', 'getTableName', '(', ')', ',', 'featureRow', '.', 'getId', '(', ')', ',', 'null', ',', 'style', ')', ';', '}']","Set the default style of the feature row

@param featureRow feature row
@param style      style row","['Set', 'the', 'default', 'style', 'of', 'the', 'feature', 'row']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L1136-L1139,test
objectify/objectify,src/main/java/com/googlecode/objectify/impl/EntityMetadata.java,EntityMetadata.save,"public FullEntity<?> save(final P pojo, final SaveContext ctx) {
		try {
			return translator.save(pojo, false, ctx, Path.root()).get();
		}
		catch (SaveException ex) { throw ex; }
		catch (Exception ex) {
			throw new SaveException(pojo, ex);
		}
	}",java,"public FullEntity<?> save(final P pojo, final SaveContext ctx) {
		try {
			return translator.save(pojo, false, ctx, Path.root()).get();
		}
		catch (SaveException ex) { throw ex; }
		catch (Exception ex) {
			throw new SaveException(pojo, ex);
		}
	}","['public', 'FullEntity', '<', '?', '>', 'save', '(', 'final', 'P', 'pojo', ',', 'final', 'SaveContext', 'ctx', ')', '{', 'try', '{', 'return', 'translator', '.', 'save', '(', 'pojo', ',', 'false', ',', 'ctx', ',', 'Path', '.', 'root', '(', ')', ')', '.', 'get', '(', ')', ';', '}', 'catch', '(', 'SaveException', 'ex', ')', '{', 'throw', 'ex', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'throw', 'new', 'SaveException', '(', 'pojo', ',', 'ex', ')', ';', '}', '}']",Converts an object to a datastore Entity with the appropriate Key type.,"['Converts', 'an', 'object', 'to', 'a', 'datastore', 'Entity', 'with', 'the', 'appropriate', 'Key', 'type', '.']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/impl/EntityMetadata.java#L111-L119,test
Unidata/thredds,dap4/d4core/src/main/java/dap4/core/dmr/parser/bison/Dap4ParserImpl.java,Dap4ParserImpl.passReserved,"void
    passReserved(XMLAttributeMap map, DapNode node)
            throws ParseException
    {
	try {
           DapAttribute attr = null;
           for(Map.Entry<String, SaxEvent> entry : map.entrySet()) {
                SaxEvent event = entry.getValue();
		String key = entry.getKey();
		String value = event.value;
		if(isReserved(key))
		    node.addXMLAttribute(key,value);
           }
       } catch (DapException de) {
           throw new ParseException(de);
       }
    }",java,"void
    passReserved(XMLAttributeMap map, DapNode node)
            throws ParseException
    {
	try {
           DapAttribute attr = null;
           for(Map.Entry<String, SaxEvent> entry : map.entrySet()) {
                SaxEvent event = entry.getValue();
		String key = entry.getKey();
		String value = event.value;
		if(isReserved(key))
		    node.addXMLAttribute(key,value);
           }
       } catch (DapException de) {
           throw new ParseException(de);
       }
    }","['void', 'passReserved', '(', 'XMLAttributeMap', 'map', ',', 'DapNode', 'node', ')', 'throws', 'ParseException', '{', 'try', '{', 'DapAttribute', 'attr', '=', 'null', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'SaxEvent', '>', 'entry', ':', 'map', '.', 'entrySet', '(', ')', ')', '{', 'SaxEvent', 'event', '=', 'entry', '.', 'getValue', '(', ')', ';', 'String', 'key', '=', 'entry', '.', 'getKey', '(', ')', ';', 'String', 'value', '=', 'event', '.', 'value', ';', 'if', '(', 'isReserved', '(', 'key', ')', ')', 'node', '.', 'addXMLAttribute', '(', 'key', ',', 'value', ')', ';', '}', '}', 'catch', '(', 'DapException', 'de', ')', '{', 'throw', 'new', 'ParseException', '(', 'de', ')', ';', '}', '}']",add any reserved xml attributes to a node unchanged,"['add', 'any', 'reserved', 'xml', 'attributes', 'to', 'a', 'node', 'unchanged']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/dmr/parser/bison/Dap4ParserImpl.java#L193-L209,test
robeio/robe,robe-hibernate/src/main/java/io/robe/hibernate/criteria/api/criterion/Restrictions.java,Restrictions.le,"public static Restriction le(String name, Object value){
        return new Restriction(Operator.LESS_OR_EQUALS_THAN, name, value);
    }",java,"public static Restriction le(String name, Object value){
        return new Restriction(Operator.LESS_OR_EQUALS_THAN, name, value);
    }","['public', 'static', 'Restriction', 'le', '(', 'String', 'name', ',', 'Object', 'value', ')', '{', 'return', 'new', 'Restriction', '(', 'Operator', '.', 'LESS_OR_EQUALS_THAN', ',', 'name', ',', 'value', ')', ';', '}']",'<=' less or equals than operator,"['<', '=', 'less', 'or', 'equals', 'than', 'operator']",a0a8c7cebd1f70f78cf24a66a002859e937badfe,https://github.com/robeio/robe/blob/a0a8c7cebd1f70f78cf24a66a002859e937badfe/robe-hibernate/src/main/java/io/robe/hibernate/criteria/api/criterion/Restrictions.java#L68-L70,test
kocakosm/pitaya,src/org/kocakosm/pitaya/security/Passwords.java,Passwords.verify,"public static boolean verify(String password, byte[] hash)
	{
		byte[] h = Arrays.copyOf(hash, HASH_LENGTH + SALT_LENGTH + 3);
		int n = 1 << (h[HASH_LENGTH + SALT_LENGTH] & 0xFF);
		int r = h[HASH_LENGTH + SALT_LENGTH + 1] & 0xFF;
		int p = h[HASH_LENGTH + SALT_LENGTH + 2] & 0xFF;
		if (n > N || n < N_MIN || r > R || r < R_MIN || p > P || p < P_MIN) {
			n = N;
			r = R;
			p = P;
		}
		byte[] salt = new byte[SALT_LENGTH];
		System.arraycopy(h, HASH_LENGTH, salt, 0, SALT_LENGTH);
		byte[] expected = hash(password, salt, r, n, p);
		int result = 0;
		for (int i = 0; i < h.length; i++) {
			result |= h[i] ^ expected[i];
		}
		return result == 0;
	}",java,"public static boolean verify(String password, byte[] hash)
	{
		byte[] h = Arrays.copyOf(hash, HASH_LENGTH + SALT_LENGTH + 3);
		int n = 1 << (h[HASH_LENGTH + SALT_LENGTH] & 0xFF);
		int r = h[HASH_LENGTH + SALT_LENGTH + 1] & 0xFF;
		int p = h[HASH_LENGTH + SALT_LENGTH + 2] & 0xFF;
		if (n > N || n < N_MIN || r > R || r < R_MIN || p > P || p < P_MIN) {
			n = N;
			r = R;
			p = P;
		}
		byte[] salt = new byte[SALT_LENGTH];
		System.arraycopy(h, HASH_LENGTH, salt, 0, SALT_LENGTH);
		byte[] expected = hash(password, salt, r, n, p);
		int result = 0;
		for (int i = 0; i < h.length; i++) {
			result |= h[i] ^ expected[i];
		}
		return result == 0;
	}","['public', 'static', 'boolean', 'verify', '(', 'String', 'password', ',', 'byte', '[', ']', 'hash', ')', '{', 'byte', '[', ']', 'h', '=', 'Arrays', '.', 'copyOf', '(', 'hash', ',', 'HASH_LENGTH', '+', 'SALT_LENGTH', '+', '3', ')', ';', 'int', 'n', '=', '1', '<<', '(', 'h', '[', 'HASH_LENGTH', '+', 'SALT_LENGTH', ']', '&', '0xFF', ')', ';', 'int', 'r', '=', 'h', '[', 'HASH_LENGTH', '+', 'SALT_LENGTH', '+', '1', ']', '&', '0xFF', ';', 'int', 'p', '=', 'h', '[', 'HASH_LENGTH', '+', 'SALT_LENGTH', '+', '2', ']', '&', '0xFF', ';', 'if', '(', 'n', '>', 'N', '||', 'n', '<', 'N_MIN', '||', 'r', '>', 'R', '||', 'r', '<', 'R_MIN', '||', 'p', '>', 'P', '||', 'p', '<', 'P_MIN', ')', '{', 'n', '=', 'N', ';', 'r', '=', 'R', ';', 'p', '=', 'P', ';', '}', 'byte', '[', ']', 'salt', '=', 'new', 'byte', '[', 'SALT_LENGTH', ']', ';', 'System', '.', 'arraycopy', '(', 'h', ',', 'HASH_LENGTH', ',', 'salt', ',', '0', ',', 'SALT_LENGTH', ')', ';', 'byte', '[', ']', 'expected', '=', 'hash', '(', 'password', ',', 'salt', ',', 'r', ',', 'n', ',', 'p', ')', ';', 'int', 'result', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'h', '.', 'length', ';', 'i', '++', ')', '{', 'result', '|=', 'h', '[', 'i', ']', '^', 'expected', '[', 'i', ']', ';', '}', 'return', 'result', '==', '0', ';', '}']","Verifies that the given password matches the hashed one.

@param password the password to verify.
@param hash the hashed password.

@return whether the given password matches the hashed one.

@throws NullPointerException if one of the arguments is {@code null}.","['Verifies', 'that', 'the', 'given', 'password', 'matches', 'the', 'hashed', 'one', '.']",f2b203b6cdb32723bd1249a1325a3bb5918bf99a,https://github.com/kocakosm/pitaya/blob/f2b203b6cdb32723bd1249a1325a3bb5918bf99a/src/org/kocakosm/pitaya/security/Passwords.java#L86-L105,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/index/OIndexFullText.java,OIndexFullText.put,"@Override
  public OIndexFullText put(Object key, final OIdentifiable singleValue) {
    if (key == null) {
      return this;
    }

    key = getCollatingValue(key);

    final Set<String> words = splitIntoWords(key.toString());

    // FOREACH WORD CREATE THE LINK TO THE CURRENT DOCUMENT
    for (final String word : words) {
      acquireSharedLock();
      try {
        if (apiVersion == 0) {
          doPutV0(singleValue, word);
        } else if (apiVersion == 1) {
          doPutV1(singleValue, word);
        } else {
          throw new IllegalStateException(""Invalid API version, "" + apiVersion);
        }

      } finally {
        releaseSharedLock();
      }
    }

    return this;
  }",java,"@Override
  public OIndexFullText put(Object key, final OIdentifiable singleValue) {
    if (key == null) {
      return this;
    }

    key = getCollatingValue(key);

    final Set<String> words = splitIntoWords(key.toString());

    // FOREACH WORD CREATE THE LINK TO THE CURRENT DOCUMENT
    for (final String word : words) {
      acquireSharedLock();
      try {
        if (apiVersion == 0) {
          doPutV0(singleValue, word);
        } else if (apiVersion == 1) {
          doPutV1(singleValue, word);
        } else {
          throw new IllegalStateException(""Invalid API version, "" + apiVersion);
        }

      } finally {
        releaseSharedLock();
      }
    }

    return this;
  }","['@', 'Override', 'public', 'OIndexFullText', 'put', '(', 'Object', 'key', ',', 'final', 'OIdentifiable', 'singleValue', ')', '{', 'if', '(', 'key', '==', 'null', ')', '{', 'return', 'this', ';', '}', 'key', '=', 'getCollatingValue', '(', 'key', ')', ';', 'final', 'Set', '<', 'String', '>', 'words', '=', 'splitIntoWords', '(', 'key', '.', 'toString', '(', ')', ')', ';', '// FOREACH WORD CREATE THE LINK TO THE CURRENT DOCUMENT', 'for', '(', 'final', 'String', 'word', ':', 'words', ')', '{', 'acquireSharedLock', '(', ')', ';', 'try', '{', 'if', '(', 'apiVersion', '==', '0', ')', '{', 'doPutV0', '(', 'singleValue', ',', 'word', ')', ';', '}', 'else', 'if', '(', 'apiVersion', '==', '1', ')', '{', 'doPutV1', '(', 'singleValue', ',', 'word', ')', ';', '}', 'else', '{', 'throw', 'new', 'IllegalStateException', '(', '""Invalid API version, ""', '+', 'apiVersion', ')', ';', '}', '}', 'finally', '{', 'releaseSharedLock', '(', ')', ';', '}', '}', 'return', 'this', ';', '}']","Indexes a value and save the index. Splits the value in single words and index each one. Save of the index is responsibility of
the caller.","['Indexes', 'a', 'value', 'and', 'save', 'the', 'index', '.', 'Splits', 'the', 'value', 'in', 'single', 'words', 'and', 'index', 'each', 'one', '.', 'Save', 'of', 'the', 'index', 'is', 'responsibility', 'of', 'the', 'caller', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/index/OIndexFullText.java#L79-L107,test
rest-assured/rest-assured,rest-assured/src/main/java/io/restassured/matcher/DetailedCookieMatcher.java,DetailedCookieMatcher.secured,"public DetailedCookieMatcher secured(Matcher<? super Boolean> securedMatcher) {
        return new DetailedCookieMatcher(and(Matchers.hasProperty(""secured"", securedMatcher)));
    }",java,"public DetailedCookieMatcher secured(Matcher<? super Boolean> securedMatcher) {
        return new DetailedCookieMatcher(and(Matchers.hasProperty(""secured"", securedMatcher)));
    }","['public', 'DetailedCookieMatcher', 'secured', '(', 'Matcher', '<', '?', 'super', 'Boolean', '>', 'securedMatcher', ')', '{', 'return', 'new', 'DetailedCookieMatcher', '(', 'and', '(', 'Matchers', '.', 'hasProperty', '(', '""secured""', ',', 'securedMatcher', ')', ')', ')', ';', '}']","Verifies whether secured property of cookie satisfies specified matcher.
@param securedMatcher assertion for secured property
@return A {@link DetailedCookieMatcher} instance with and-composed secured property assertion","['Verifies', 'whether', 'secured', 'property', 'of', 'cookie', 'satisfies', 'specified', 'matcher', '.']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/matcher/DetailedCookieMatcher.java#L145-L147,test
streamsets/datacollector,commonlib/src/main/java/com/streamsets/pipeline/lib/io/LiveDirectoryScanner.java,LiveDirectoryScanner.scan,"public LiveFile scan(LiveFile current) throws IOException {
    try {
      return scanInternal(current);
    } catch (NoSuchFileException ex) {
      // this could happen because there has been a file rotation/deletion after the search/filter/sort and before
      // the creation of the nen current. Lets sleep for 50ms and try again, if fails again give up.
      ThreadUtil.sleep(50);
      return scanInternal(current);
    }
  }",java,"public LiveFile scan(LiveFile current) throws IOException {
    try {
      return scanInternal(current);
    } catch (NoSuchFileException ex) {
      // this could happen because there has been a file rotation/deletion after the search/filter/sort and before
      // the creation of the nen current. Lets sleep for 50ms and try again, if fails again give up.
      ThreadUtil.sleep(50);
      return scanInternal(current);
    }
  }","['public', 'LiveFile', 'scan', '(', 'LiveFile', 'current', ')', 'throws', 'IOException', '{', 'try', '{', 'return', 'scanInternal', '(', 'current', ')', ';', '}', 'catch', '(', 'NoSuchFileException', 'ex', ')', '{', '// this could happen because there has been a file rotation/deletion after the search/filter/sort and before', '// the creation of the nen current. Lets sleep for 50ms and try again, if fails again give up.', 'ThreadUtil', '.', 'sleep', '(', '50', ')', ';', 'return', 'scanInternal', '(', 'current', ')', ';', '}', '}']","Scans the directory of for the next file.

@param current the last 'rolled' file processed. Use <code>null</code> to look for the first one. The provided
file cannot be the 'live' file.
@return the next 'rolled' file in order, if there are no more 'rolled' files it will return the 'live' file,
if there is not 'live' file it will return <code>null</code>.
@throws IOException thrown if the directory could not be scanned.","['Scans', 'the', 'directory', 'of', 'for', 'the', 'next', 'file', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/commonlib/src/main/java/com/streamsets/pipeline/lib/io/LiveDirectoryScanner.java#L143-L152,test
andrealbinop/fitnesse-jdbc-slim,src/main/java/com/github/andreptb/fitnesse/JdbcFixture.java,JdbcFixture.runInTheSql,"public boolean runInTheSql(String database, final String sql) {
		getDatabaseJdbcTemplate(database).update(sql);
		return true;
	}",java,"public boolean runInTheSql(String database, final String sql) {
		getDatabaseJdbcTemplate(database).update(sql);
		return true;
	}","['public', 'boolean', 'runInTheSql', '(', 'String', 'database', ',', 'final', 'String', 'sql', ')', '{', 'getDatabaseJdbcTemplate', '(', 'database', ')', '.', 'update', '(', 'sql', ')', ';', 'return', 'true', ';', '}']","Simply runs a SQL command, used for udpates, inserts which the result doesn't matter.

<p><code>
| run in | <i>database</i> | the sql | <i>sql</i> |
</code></p>
@param database registered database to run the SQL
@param sql to run","['Simply', 'runs', 'a', 'SQL', 'command', 'used', 'for', 'udpates', 'inserts', 'which', 'the', 'result', 'doesn', 't', 'matter', '.']",7eba72089234a93d8f33c5056c963671dbb7f94f,https://github.com/andrealbinop/fitnesse-jdbc-slim/blob/7eba72089234a93d8f33c5056c963671dbb7f94f/src/main/java/com/github/andreptb/fitnesse/JdbcFixture.java#L51-L54,test
oblac/jodd,jodd-bean/src/main/java/jodd/bean/BeanUtilUtil.java,BeanUtilUtil.convertToCollection,"@SuppressWarnings(""unchecked"")
	protected Object convertToCollection(final Object value, final Class destinationType, final Class componentType) {
		return typeConverterManager.convertToCollection(value, destinationType, componentType);
	}",java,"@SuppressWarnings(""unchecked"")
	protected Object convertToCollection(final Object value, final Class destinationType, final Class componentType) {
		return typeConverterManager.convertToCollection(value, destinationType, componentType);
	}","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'protected', 'Object', 'convertToCollection', '(', 'final', 'Object', 'value', ',', 'final', 'Class', 'destinationType', ',', 'final', 'Class', 'componentType', ')', '{', 'return', 'typeConverterManager', '.', 'convertToCollection', '(', 'value', ',', 'destinationType', ',', 'componentType', ')', ';', '}']",Converter to collection.,"['Converter', 'to', 'collection', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-bean/src/main/java/jodd/bean/BeanUtilUtil.java#L82-L85,test
lessthanoptimal/GeoRegression,main/src/georegression/geometry/UtilPolygons2D_F64.java,UtilPolygons2D_F64.convexHull,"public static void convexHull( List<Point2D_F64> points , Polygon2D_F64 hull ) {
		Point2D_F64[] array = new Point2D_F64[points.size()];

		for (int i = 0; i < points.size(); i++) {
			array[i] = points.get(i);
		}

		AndrewMonotoneConvexHull_F64 andrew = new AndrewMonotoneConvexHull_F64();
		andrew.process(array,array.length,hull);
	}",java,"public static void convexHull( List<Point2D_F64> points , Polygon2D_F64 hull ) {
		Point2D_F64[] array = new Point2D_F64[points.size()];

		for (int i = 0; i < points.size(); i++) {
			array[i] = points.get(i);
		}

		AndrewMonotoneConvexHull_F64 andrew = new AndrewMonotoneConvexHull_F64();
		andrew.process(array,array.length,hull);
	}","['public', 'static', 'void', 'convexHull', '(', 'List', '<', 'Point2D_F64', '>', 'points', ',', 'Polygon2D_F64', 'hull', ')', '{', 'Point2D_F64', '[', ']', 'array', '=', 'new', 'Point2D_F64', '[', 'points', '.', 'size', '(', ')', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'points', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'array', '[', 'i', ']', '=', 'points', '.', 'get', '(', 'i', ')', ';', '}', 'AndrewMonotoneConvexHull_F64', 'andrew', '=', 'new', 'AndrewMonotoneConvexHull_F64', '(', ')', ';', 'andrew', '.', 'process', '(', 'array', ',', 'array', '.', 'length', ',', 'hull', ')', ';', '}']","Computes the convex hull of the set of points.

<p>
NOTE: This method declares a temporary array.  If you want to avoid that invoke {@link AndrewMonotoneConvexHull_F64}
directly.
</p>

@param points (Input) Set of points.
@param hull (output) storage for convex hull.  Will be in counter-clockwise order","['Computes', 'the', 'convex', 'hull', 'of', 'the', 'set', 'of', 'points', '.']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/geometry/UtilPolygons2D_F64.java#L408-L417,test
intellimate/IzouSDK,src/main/java/org/intellimate/izou/sdk/frameworks/music/events/StopMusic.java,StopMusic.verify,"public static boolean verify(EventModel eventModel, Identifiable player) {
        if (!eventModel.containsDescriptor(StopMusic.ID))
            return false;
        return SelectorResource.isTarget(eventModel, player)
                .orElse(true);
    }",java,"public static boolean verify(EventModel eventModel, Identifiable player) {
        if (!eventModel.containsDescriptor(StopMusic.ID))
            return false;
        return SelectorResource.isTarget(eventModel, player)
                .orElse(true);
    }","['public', 'static', 'boolean', 'verify', '(', 'EventModel', 'eventModel', ',', 'Identifiable', 'player', ')', '{', 'if', '(', '!', 'eventModel', '.', 'containsDescriptor', '(', 'StopMusic', '.', 'ID', ')', ')', 'return', 'false', ';', 'return', 'SelectorResource', '.', 'isTarget', '(', 'eventModel', ',', 'player', ')', '.', 'orElse', '(', 'true', ')', ';', '}']","verifies that the StopMusicRequest is correct and checks whether the you are meant to react to it
@param eventModel the EventModel to check against
@param player the identifiable
@return true if verified, false if not","['verifies', 'that', 'the', 'StopMusicRequest', 'is', 'correct', 'and', 'checks', 'whether', 'the', 'you', 'are', 'meant', 'to', 'react', 'to', 'it']",bc8705ad48a6ca12a722f2b787be435949fa5d08,https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/music/events/StopMusic.java#L57-L62,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/config/jmx/WroConfiguration.java,WroConfiguration.reloadCacheWithNewValue,"private void reloadCacheWithNewValue(final Long newValue) {
    final long newValueAsPrimitive = newValue == null ? getCacheUpdatePeriod() : newValue;
    LOG.debug(""invoking {} listeners"", cacheUpdatePeriodListeners.size());
    for (final PropertyChangeListener listener : cacheUpdatePeriodListeners) {
      final PropertyChangeEvent event = new PropertyChangeEvent(this, ""cache"", getCacheUpdatePeriod(),
          newValueAsPrimitive);
      listener.propertyChange(event);
    }
  }",java,"private void reloadCacheWithNewValue(final Long newValue) {
    final long newValueAsPrimitive = newValue == null ? getCacheUpdatePeriod() : newValue;
    LOG.debug(""invoking {} listeners"", cacheUpdatePeriodListeners.size());
    for (final PropertyChangeListener listener : cacheUpdatePeriodListeners) {
      final PropertyChangeEvent event = new PropertyChangeEvent(this, ""cache"", getCacheUpdatePeriod(),
          newValueAsPrimitive);
      listener.propertyChange(event);
    }
  }","['private', 'void', 'reloadCacheWithNewValue', '(', 'final', 'Long', 'newValue', ')', '{', 'final', 'long', 'newValueAsPrimitive', '=', 'newValue', '==', 'null', '?', 'getCacheUpdatePeriod', '(', ')', ':', 'newValue', ';', 'LOG', '.', 'debug', '(', '""invoking {} listeners""', ',', 'cacheUpdatePeriodListeners', '.', 'size', '(', ')', ')', ';', 'for', '(', 'final', 'PropertyChangeListener', 'listener', ':', 'cacheUpdatePeriodListeners', ')', '{', 'final', 'PropertyChangeEvent', 'event', '=', 'new', 'PropertyChangeEvent', '(', 'this', ',', '""cache""', ',', 'getCacheUpdatePeriod', '(', ')', ',', 'newValueAsPrimitive', ')', ';', 'listener', '.', 'propertyChange', '(', 'event', ')', ';', '}', '}']","Notify all listeners about cachePeriod property changed. If passed newValue is null, the oldValue is taken as new
value. This is the case when the reloadCache is invoked.

@param newValue
value to set.","['Notify', 'all', 'listeners', 'about', 'cachePeriod', 'property', 'changed', '.', 'If', 'passed', 'newValue', 'is', 'null', 'the', 'oldValue', 'is', 'taken', 'as', 'new', 'value', '.', 'This', 'is', 'the', 'case', 'when', 'the', 'reloadCache', 'is', 'invoked', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/config/jmx/WroConfiguration.java#L195-L203,test
ReactiveX/RxJava,src/main/java/io/reactivex/disposables/SerialDisposable.java,SerialDisposable.get,"@Nullable
    public Disposable get() {
        Disposable d = resource.get();
        if (d == DisposableHelper.DISPOSED) {
            return Disposables.disposed();
        }
        return d;
    }",java,"@Nullable
    public Disposable get() {
        Disposable d = resource.get();
        if (d == DisposableHelper.DISPOSED) {
            return Disposables.disposed();
        }
        return d;
    }","['@', 'Nullable', 'public', 'Disposable', 'get', '(', ')', '{', 'Disposable', 'd', '=', 'resource', '.', 'get', '(', ')', ';', 'if', '(', 'd', '==', 'DisposableHelper', '.', 'DISPOSED', ')', '{', 'return', 'Disposables', '.', 'disposed', '(', ')', ';', '}', 'return', 'd', ';', '}']","Returns the currently contained Disposable or null if this container is empty.
@return the current Disposable, may be null","['Returns', 'the', 'currently', 'contained', 'Disposable', 'or', 'null', 'if', 'this', 'container', 'is', 'empty', '.']",ac84182aa2bd866b53e01c8e3fe99683b882c60e,https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/disposables/SerialDisposable.java#L70-L77,test
streamsets/datacollector,mapreduce-protolib/src/main/java/com/streamsets/pipeline/stage/destination/mapreduce/MapreduceUtils.java,MapreduceUtils.addJarsToJob,"public static void addJarsToJob(Configuration conf, boolean allowMultiple, String... jarPatterns) {
    final ClassLoader loader = MapreduceUtils.class.getClassLoader();
    if (!(loader instanceof URLClassLoader)) {
      throw new IllegalStateException(String.format(
          ""ClassLoader for %s is not an instance of URLClassLoader (it is %s), and thus this method cannot be used"",
          MapreduceUtils.class.getCanonicalName(),
          loader.getClass().getCanonicalName()
      ));
    }
    final URLClassLoader urlClassLoader = (URLClassLoader) loader;

    addJarsToJob(conf, allowMultiple, urlClassLoader.getURLs(), jarPatterns);
  }",java,"public static void addJarsToJob(Configuration conf, boolean allowMultiple, String... jarPatterns) {
    final ClassLoader loader = MapreduceUtils.class.getClassLoader();
    if (!(loader instanceof URLClassLoader)) {
      throw new IllegalStateException(String.format(
          ""ClassLoader for %s is not an instance of URLClassLoader (it is %s), and thus this method cannot be used"",
          MapreduceUtils.class.getCanonicalName(),
          loader.getClass().getCanonicalName()
      ));
    }
    final URLClassLoader urlClassLoader = (URLClassLoader) loader;

    addJarsToJob(conf, allowMultiple, urlClassLoader.getURLs(), jarPatterns);
  }","['public', 'static', 'void', 'addJarsToJob', '(', 'Configuration', 'conf', ',', 'boolean', 'allowMultiple', ',', 'String', '...', 'jarPatterns', ')', '{', 'final', 'ClassLoader', 'loader', '=', 'MapreduceUtils', '.', 'class', '.', 'getClassLoader', '(', ')', ';', 'if', '(', '!', '(', 'loader', 'instanceof', 'URLClassLoader', ')', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'String', '.', 'format', '(', '""ClassLoader for %s is not an instance of URLClassLoader (it is %s), and thus this method cannot be used""', ',', 'MapreduceUtils', '.', 'class', '.', 'getCanonicalName', '(', ')', ',', 'loader', '.', 'getClass', '(', ')', '.', 'getCanonicalName', '(', ')', ')', ')', ';', '}', 'final', 'URLClassLoader', 'urlClassLoader', '=', '(', 'URLClassLoader', ')', 'loader', ';', 'addJarsToJob', '(', 'conf', ',', 'allowMultiple', ',', 'urlClassLoader', '.', 'getURLs', '(', ')', ',', 'jarPatterns', ')', ';', '}']","Add jars whose names contain the given patterns to the job's classpath.

Searches the {@link ClassLoader} - which must be an instance of {@link URLClassLoader} or an
{@link IllegalStateException} will be thrown - of the {@link MapreduceUtils} class itself for the jar matching
a pattern indicated each arguments.

Each supplied jarPattern is treated as a case-insensitive substring for a full jar path.  This method expects
to find at least one jar matching each substring, or an {@link IllegalArgumentException} will be thrown.  If more
than one jar is matched, then the result will depend on the allowMultiple parameter - if true, then all will be
added, while if false, an {@link IllegalArgumentException} will be thrown.

Care has <b>NOT</b> been taken to optimize the performance of this method; the runtime is M * N where M is the
number of entries on the classpath and N is the number of given jarPatterns.  It is assumed that this method
will be called infrequently and with relatively few jarPatterns.

@param conf the Hadoop conf for the MapReduce job
@param allowMultiple whether multiple matching jars are allowed to be added for a single pattern
@param jarPatterns the patterns to search for within the classpath","['Add', 'jars', 'whose', 'names', 'contain', 'the', 'given', 'patterns', 'to', 'the', 'job', 's', 'classpath', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/mapreduce-protolib/src/main/java/com/streamsets/pipeline/stage/destination/mapreduce/MapreduceUtils.java#L86-L98,test
RestComm/jain-slee,container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/ClassGeneratorUtils.java,ClassGeneratorUtils.createClass,"public static CtClass createClass(String className, String[] interfaces) throws Exception
  {
    if(className == null)
    {
      throw new NullPointerException(""Class name cannot be null"");
    }

    CtClass clazz = classPool.makeClass(className);

    if(interfaces != null && interfaces.length > 0)
    {
      clazz.setInterfaces( classPool.get( interfaces ) );
    }
    
    return clazz;
  }",java,"public static CtClass createClass(String className, String[] interfaces) throws Exception
  {
    if(className == null)
    {
      throw new NullPointerException(""Class name cannot be null"");
    }

    CtClass clazz = classPool.makeClass(className);

    if(interfaces != null && interfaces.length > 0)
    {
      clazz.setInterfaces( classPool.get( interfaces ) );
    }
    
    return clazz;
  }","['public', 'static', 'CtClass', 'createClass', '(', 'String', 'className', ',', 'String', '[', ']', 'interfaces', ')', 'throws', 'Exception', '{', 'if', '(', 'className', '==', 'null', ')', '{', 'throw', 'new', 'NullPointerException', '(', '""Class name cannot be null""', ')', ';', '}', 'CtClass', 'clazz', '=', 'classPool', '.', 'makeClass', '(', 'className', ')', ';', 'if', '(', 'interfaces', '!=', 'null', '&&', 'interfaces', '.', 'length', '>', '0', ')', '{', 'clazz', '.', 'setInterfaces', '(', 'classPool', '.', 'get', '(', 'interfaces', ')', ')', ';', '}', 'return', 'clazz', ';', '}']","Creates a class with the desired name and linked to the mentioned interfaces.

@param className
@param interfaces
@return
@throws Exception","['Creates', 'a', 'class', 'with', 'the', 'desired', 'name', 'and', 'linked', 'to', 'the', 'mentioned', 'interfaces', '.']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/profiles/src/main/java/org/mobicents/slee/container/deployment/profile/ClassGeneratorUtils.java#L98-L113,test
jbundle/util,apprunner/src/main/java/org/jbundle/util/apprunner/AppUtilities.java,AppUtilities.parseArgs,"public static Properties parseArgs(Properties properties, String[] args)
    {
    	if (properties == null)
    		properties = new Properties();
        if (args == null)
            return properties;
        for (int i = 0; i < args.length; i++)
        	AppUtilities.addParam(properties, args[i], false);
        return properties;
    }",java,"public static Properties parseArgs(Properties properties, String[] args)
    {
    	if (properties == null)
    		properties = new Properties();
        if (args == null)
            return properties;
        for (int i = 0; i < args.length; i++)
        	AppUtilities.addParam(properties, args[i], false);
        return properties;
    }","['public', 'static', 'Properties', 'parseArgs', '(', 'Properties', 'properties', ',', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'properties', '==', 'null', ')', 'properties', '=', 'new', 'Properties', '(', ')', ';', 'if', '(', 'args', '==', 'null', ')', 'return', 'properties', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'args', '.', 'length', ';', 'i', '++', ')', 'AppUtilities', '.', 'addParam', '(', 'properties', ',', 'args', '[', 'i', ']', '', ',', 'false', ')', ';', 'return', 'properties', ';', '}']","Parse this URL formatted string into properties.
@properties The properties object to add the params to.
@args The arguments to parse (each formatted as key=value).","['Parse', 'this', 'URL', 'formatted', 'string', 'into', 'properties', '.']",5af0f2292f56f29f70cbc26d0bfa72f89ae31be0,https://github.com/jbundle/util/blob/5af0f2292f56f29f70cbc26d0bfa72f89ae31be0/apprunner/src/main/java/org/jbundle/util/apprunner/AppUtilities.java#L65-L74,test
playframework/playframework,core/play/src/main/java/play/http/DefaultHttpErrorHandler.java,DefaultHttpErrorHandler.onClientError,"@Override
  public CompletionStage<Result> onClientError(
      RequestHeader request, int statusCode, String message) {
    if (statusCode == 400) {
      return onBadRequest(request, message);
    } else if (statusCode == 403) {
      return onForbidden(request, message);
    } else if (statusCode == 404) {
      return onNotFound(request, message);
    } else if (statusCode >= 400 && statusCode < 500) {
      return onOtherClientError(request, statusCode, message);
    } else {
      throw new IllegalArgumentException(
          ""onClientError invoked with non client error status code "" + statusCode + "": "" + message);
    }
  }",java,"@Override
  public CompletionStage<Result> onClientError(
      RequestHeader request, int statusCode, String message) {
    if (statusCode == 400) {
      return onBadRequest(request, message);
    } else if (statusCode == 403) {
      return onForbidden(request, message);
    } else if (statusCode == 404) {
      return onNotFound(request, message);
    } else if (statusCode >= 400 && statusCode < 500) {
      return onOtherClientError(request, statusCode, message);
    } else {
      throw new IllegalArgumentException(
          ""onClientError invoked with non client error status code "" + statusCode + "": "" + message);
    }
  }","['@', 'Override', 'public', 'CompletionStage', '<', 'Result', '>', 'onClientError', '(', 'RequestHeader', 'request', ',', 'int', 'statusCode', ',', 'String', 'message', ')', '{', 'if', '(', 'statusCode', '==', '400', ')', '{', 'return', 'onBadRequest', '(', 'request', ',', 'message', ')', ';', '}', 'else', 'if', '(', 'statusCode', '==', '403', ')', '{', 'return', 'onForbidden', '(', 'request', ',', 'message', ')', ';', '}', 'else', 'if', '(', 'statusCode', '==', '404', ')', '{', 'return', 'onNotFound', '(', 'request', ',', 'message', ')', ';', '}', 'else', 'if', '(', 'statusCode', '>=', '400', '&&', 'statusCode', '<', '500', ')', '{', 'return', 'onOtherClientError', '(', 'request', ',', 'statusCode', ',', 'message', ')', ';', '}', 'else', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""onClientError invoked with non client error status code ""', '+', 'statusCode', '+', '"": ""', '+', 'message', ')', ';', '}', '}']","Invoked when a client error occurs, that is, an error in the 4xx series.

<p>The base implementation calls onBadRequest, onForbidden, onNotFound, or onOtherClientError
depending on the HTTP status code.

@param request The request that caused the client error.
@param statusCode The error status code. Must be greater or equal to 400, and less than 500.
@param message The error message.
@return a CompletionStage containing the Result.","['Invoked', 'when', 'a', 'client', 'error', 'occurs', 'that', 'is', 'an', 'error', 'in', 'the', '4xx', 'series', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/http/DefaultHttpErrorHandler.java#L70-L85,test
orientechnologies/orientdb,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java,OrientBaseGraph.createKeyIndex,"@SuppressWarnings({ ""rawtypes"" })
  @Override
  public <T extends Element> void createKeyIndex(final String key, final Class<T> elementClass,
      final Parameter... indexParameters) {
    makeActive();

    if (elementClass == null)
      throw ExceptionFactory.classForElementCannotBeNull();

    executeOutsideTx(new OCallable<OClass, OrientBaseGraph>() {
      @Override
      public OClass call(final OrientBaseGraph g) {

        String indexType = OClass.INDEX_TYPE.NOTUNIQUE.name();
        OType keyType = OType.STRING;
        String className = null;
        String collate = null;
        ODocument metadata = null;

        final String ancestorClassName = getClassName(elementClass);

        // READ PARAMETERS
        for (Parameter<?, ?> p : indexParameters) {
          if (p.getKey().equals(""type""))
            indexType = p.getValue().toString().toUpperCase(Locale.ENGLISH);
          else if (p.getKey().equals(""keytype""))
            keyType = OType.valueOf(p.getValue().toString().toUpperCase(Locale.ENGLISH));
          else if (p.getKey().equals(""class""))
            className = p.getValue().toString();
          else if (p.getKey().equals(""collate""))
            collate = p.getValue().toString();
          else if (p.getKey().toString().startsWith(""metadata."")) {
            if (metadata == null)
              metadata = new ODocument();
            metadata.field(p.getKey().toString().substring(""metadata."".length()), p.getValue());
          }
        }

        if (className == null)
          className = ancestorClassName;

        final ODatabaseDocument db = getRawGraph();
        final OSchema schema = db.getMetadata().getSchema();

        final OClass cls = schema.getOrCreateClass(className, schema.getClass(ancestorClassName));
        final OProperty property = cls.getProperty(key);
        if (property != null)
          keyType = property.getType();

        OPropertyIndexDefinition indexDefinition = new OPropertyIndexDefinition(className, key, keyType);
        if (collate != null)
          indexDefinition.setCollate(collate);
        db.getMetadata().getIndexManager()
            .createIndex(className + ""."" + key, indexType, indexDefinition, cls.getPolymorphicClusterIds(), null, metadata);
        return null;

      }
    }, ""create key index on '"", elementClass.getSimpleName(), ""."", key, ""'"");
  }",java,"@SuppressWarnings({ ""rawtypes"" })
  @Override
  public <T extends Element> void createKeyIndex(final String key, final Class<T> elementClass,
      final Parameter... indexParameters) {
    makeActive();

    if (elementClass == null)
      throw ExceptionFactory.classForElementCannotBeNull();

    executeOutsideTx(new OCallable<OClass, OrientBaseGraph>() {
      @Override
      public OClass call(final OrientBaseGraph g) {

        String indexType = OClass.INDEX_TYPE.NOTUNIQUE.name();
        OType keyType = OType.STRING;
        String className = null;
        String collate = null;
        ODocument metadata = null;

        final String ancestorClassName = getClassName(elementClass);

        // READ PARAMETERS
        for (Parameter<?, ?> p : indexParameters) {
          if (p.getKey().equals(""type""))
            indexType = p.getValue().toString().toUpperCase(Locale.ENGLISH);
          else if (p.getKey().equals(""keytype""))
            keyType = OType.valueOf(p.getValue().toString().toUpperCase(Locale.ENGLISH));
          else if (p.getKey().equals(""class""))
            className = p.getValue().toString();
          else if (p.getKey().equals(""collate""))
            collate = p.getValue().toString();
          else if (p.getKey().toString().startsWith(""metadata."")) {
            if (metadata == null)
              metadata = new ODocument();
            metadata.field(p.getKey().toString().substring(""metadata."".length()), p.getValue());
          }
        }

        if (className == null)
          className = ancestorClassName;

        final ODatabaseDocument db = getRawGraph();
        final OSchema schema = db.getMetadata().getSchema();

        final OClass cls = schema.getOrCreateClass(className, schema.getClass(ancestorClassName));
        final OProperty property = cls.getProperty(key);
        if (property != null)
          keyType = property.getType();

        OPropertyIndexDefinition indexDefinition = new OPropertyIndexDefinition(className, key, keyType);
        if (collate != null)
          indexDefinition.setCollate(collate);
        db.getMetadata().getIndexManager()
            .createIndex(className + ""."" + key, indexType, indexDefinition, cls.getPolymorphicClusterIds(), null, metadata);
        return null;

      }
    }, ""create key index on '"", elementClass.getSimpleName(), ""."", key, ""'"");
  }","['@', 'SuppressWarnings', '(', '{', '""rawtypes""', '}', ')', '@', 'Override', 'public', '<', 'T', 'extends', 'Element', '>', 'void', 'createKeyIndex', '(', 'final', 'String', 'key', ',', 'final', 'Class', '<', 'T', '>', 'elementClass', ',', 'final', 'Parameter', '...', 'indexParameters', ')', '{', 'makeActive', '(', ')', ';', 'if', '(', 'elementClass', '==', 'null', ')', 'throw', 'ExceptionFactory', '.', 'classForElementCannotBeNull', '(', ')', ';', 'executeOutsideTx', '(', 'new', 'OCallable', '<', 'OClass', ',', 'OrientBaseGraph', '>', '(', ')', '{', '@', 'Override', 'public', 'OClass', 'call', '(', 'final', 'OrientBaseGraph', 'g', ')', '{', 'String', 'indexType', '=', 'OClass', '.', 'INDEX_TYPE', '.', 'NOTUNIQUE', '.', 'name', '(', ')', ';', 'OType', 'keyType', '=', 'OType', '.', 'STRING', ';', 'String', 'className', '=', 'null', ';', 'String', 'collate', '=', 'null', ';', 'ODocument', 'metadata', '=', 'null', ';', 'final', 'String', 'ancestorClassName', '=', 'getClassName', '(', 'elementClass', ')', ';', '// READ PARAMETERS', 'for', '(', 'Parameter', '<', '?', ',', '?', '>', 'p', ':', 'indexParameters', ')', '{', 'if', '(', 'p', '.', 'getKey', '(', ')', '.', 'equals', '(', '""type""', ')', ')', 'indexType', '=', 'p', '.', 'getValue', '(', ')', '.', 'toString', '(', ')', '.', 'toUpperCase', '(', 'Locale', '.', 'ENGLISH', ')', ';', 'else', 'if', '(', 'p', '.', 'getKey', '(', ')', '.', 'equals', '(', '""keytype""', ')', ')', 'keyType', '=', 'OType', '.', 'valueOf', '(', 'p', '.', 'getValue', '(', ')', '.', 'toString', '(', ')', '.', 'toUpperCase', '(', 'Locale', '.', 'ENGLISH', ')', ')', ';', 'else', 'if', '(', 'p', '.', 'getKey', '(', ')', '.', 'equals', '(', '""class""', ')', ')', 'className', '=', 'p', '.', 'getValue', '(', ')', '.', 'toString', '(', ')', ';', 'else', 'if', '(', 'p', '.', 'getKey', '(', ')', '.', 'equals', '(', '""collate""', ')', ')', 'collate', '=', 'p', '.', 'getValue', '(', ')', '.', 'toString', '(', ')', ';', 'else', 'if', '(', 'p', '.', 'getKey', '(', ')', '.', 'toString', '(', ')', '.', 'startsWith', '(', '""metadata.""', ')', ')', '{', 'if', '(', 'metadata', '==', 'null', ')', 'metadata', '=', 'new', 'ODocument', '(', ')', ';', 'metadata', '.', 'field', '(', 'p', '.', 'getKey', '(', ')', '.', 'toString', '(', ')', '.', 'substring', '(', '""metadata.""', '.', 'length', '(', ')', ')', ',', 'p', '.', 'getValue', '(', ')', ')', ';', '}', '}', 'if', '(', 'className', '==', 'null', ')', 'className', '=', 'ancestorClassName', ';', 'final', 'ODatabaseDocument', 'db', '=', 'getRawGraph', '(', ')', ';', 'final', 'OSchema', 'schema', '=', 'db', '.', 'getMetadata', '(', ')', '.', 'getSchema', '(', ')', ';', 'final', 'OClass', 'cls', '=', 'schema', '.', 'getOrCreateClass', '(', 'className', ',', 'schema', '.', 'getClass', '(', 'ancestorClassName', ')', ')', ';', 'final', 'OProperty', 'property', '=', 'cls', '.', 'getProperty', '(', 'key', ')', ';', 'if', '(', 'property', '!=', 'null', ')', 'keyType', '=', 'property', '.', 'getType', '(', ')', ';', 'OPropertyIndexDefinition', 'indexDefinition', '=', 'new', 'OPropertyIndexDefinition', '(', 'className', ',', 'key', ',', 'keyType', ')', ';', 'if', '(', 'collate', '!=', 'null', ')', 'indexDefinition', '.', 'setCollate', '(', 'collate', ')', ';', 'db', '.', 'getMetadata', '(', ')', '.', 'getIndexManager', '(', ')', '.', 'createIndex', '(', 'className', '+', '"".""', '+', 'key', ',', 'indexType', ',', 'indexDefinition', ',', 'cls', '.', 'getPolymorphicClusterIds', '(', ')', ',', 'null', ',', 'metadata', ')', ';', 'return', 'null', ';', '}', '}', ',', '""create key index on \'""', ',', 'elementClass', '.', 'getSimpleName', '(', ')', ',', '"".""', ',', 'key', ',', '""\'""', ')', ';', '}']","Creates an automatic indexing structure for indexing provided key for element class.

@param key             the key to create the index for
@param elementClass    the element class that the index is for
@param indexParameters a collection of parameters for the underlying index implementation: <ul> <li>""type"" is the index type
between the supported types (UNIQUE, NOTUNIQUE, FULLTEXT). The default type is NOT_UNIQUE <li>""class"" is
the class to index when it's a custom type derived by Vertex (V) or Edge (E) <li>""keytype"" to use a key
type different by OType.STRING,</li></li> </ul>
@param <T>             the element class specification","['Creates', 'an', 'automatic', 'indexing', 'structure', 'for', 'indexing', 'provided', 'key', 'for', 'element', 'class', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientBaseGraph.java#L1657-L1715,test
Unidata/thredds,bufr/src/main/java/ucar/nc2/iosp/bufr/DataDescriptor.java,DataDescriptor.countBits,"int countBits() {
    int total_nbits = 0;
    total_nbytesCDM = 0;

    for (DataDescriptor dd : subKeys) {
      if (dd.subKeys != null) {
        total_nbits += dd.countBits();
        total_nbytesCDM += dd.total_nbytesCDM;

      } else if (dd.f == 0) {
        total_nbits += dd.bitWidth;
        total_nbytesCDM += dd.getByteWidthCDM();
      }
    }

    // replication
    if (replication > 1) {
      total_nbits *= replication;
      total_nbytesCDM *= replication;
    }

    return total_nbits;
  }",java,"int countBits() {
    int total_nbits = 0;
    total_nbytesCDM = 0;

    for (DataDescriptor dd : subKeys) {
      if (dd.subKeys != null) {
        total_nbits += dd.countBits();
        total_nbytesCDM += dd.total_nbytesCDM;

      } else if (dd.f == 0) {
        total_nbits += dd.bitWidth;
        total_nbytesCDM += dd.getByteWidthCDM();
      }
    }

    // replication
    if (replication > 1) {
      total_nbits *= replication;
      total_nbytesCDM *= replication;
    }

    return total_nbits;
  }","['int', 'countBits', '(', ')', '{', 'int', 'total_nbits', '=', '0', ';', 'total_nbytesCDM', '=', '0', ';', 'for', '(', 'DataDescriptor', 'dd', ':', 'subKeys', ')', '{', 'if', '(', 'dd', '.', 'subKeys', '!=', 'null', ')', '{', 'total_nbits', '+=', 'dd', '.', 'countBits', '(', ')', ';', 'total_nbytesCDM', '+=', 'dd', '.', 'total_nbytesCDM', ';', '}', 'else', 'if', '(', 'dd', '.', 'f', '==', '0', ')', '{', 'total_nbits', '+=', 'dd', '.', 'bitWidth', ';', 'total_nbytesCDM', '+=', 'dd', '.', 'getByteWidthCDM', '(', ')', ';', '}', '}', '// replication\r', 'if', '(', 'replication', '>', '1', ')', '{', 'total_nbits', '*=', 'replication', ';', 'total_nbytesCDM', '*=', 'replication', ';', '}', 'return', 'total_nbits', ';', '}']","count the bits used by the data in this dd and its children
only accurate for not compressed, and not variable length

@return bits used by the data in the file","['count', 'the', 'bits', 'used', 'by', 'the', 'data', 'in', 'this', 'dd', 'and', 'its', 'children', 'only', 'accurate', 'for', 'not', 'compressed', 'and', 'not', 'variable', 'length']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/bufr/src/main/java/ucar/nc2/iosp/bufr/DataDescriptor.java#L244-L266,test
oblac/jodd,jodd-vtor/src/main/java/jodd/vtor/ValidationContext.java,ValidationContext.addClassChecks,"public void addClassChecks(final Class target) {
		final List<Check> list = cache.get(target, () -> {
			final List<Check> newList = new ArrayList<>();
			final ClassDescriptor cd = ClassIntrospector.get().lookup(target);
			final PropertyDescriptor[] allProperties = cd.getAllPropertyDescriptors();
			for (PropertyDescriptor propertyDescriptor : allProperties) {
				collectPropertyAnnotationChecks(newList, propertyDescriptor);
			}
			return newList;
		});
		addAll(list);
	}",java,"public void addClassChecks(final Class target) {
		final List<Check> list = cache.get(target, () -> {
			final List<Check> newList = new ArrayList<>();
			final ClassDescriptor cd = ClassIntrospector.get().lookup(target);
			final PropertyDescriptor[] allProperties = cd.getAllPropertyDescriptors();
			for (PropertyDescriptor propertyDescriptor : allProperties) {
				collectPropertyAnnotationChecks(newList, propertyDescriptor);
			}
			return newList;
		});
		addAll(list);
	}","['public', 'void', 'addClassChecks', '(', 'final', 'Class', 'target', ')', '{', 'final', 'List', '<', 'Check', '>', 'list', '=', 'cache', '.', 'get', '(', 'target', ',', '(', ')', '->', '{', 'final', 'List', '<', 'Check', '>', 'newList', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'final', 'ClassDescriptor', 'cd', '=', 'ClassIntrospector', '.', 'get', '(', ')', '.', 'lookup', '(', 'target', ')', ';', 'final', 'PropertyDescriptor', '[', ']', 'allProperties', '=', 'cd', '.', 'getAllPropertyDescriptors', '(', ')', ';', 'for', '(', 'PropertyDescriptor', 'propertyDescriptor', ':', 'allProperties', ')', '{', 'collectPropertyAnnotationChecks', '(', 'newList', ',', 'propertyDescriptor', ')', ';', '}', 'return', 'newList', ';', '}', ')', ';', 'addAll', '(', 'list', ')', ';', '}']","Parses class annotations and adds all checks.
@see #resolveFor(Class)","['Parses', 'class', 'annotations', 'and', 'adds', 'all', 'checks', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-vtor/src/main/java/jodd/vtor/ValidationContext.java#L95-L106,test
klakegg/pkix-ocsp,src/main/java/net/klakegg/pkix/ocsp/fetcher/ApacheOcspFetcher.java,ApacheOcspFetcher.builder,"public static Builder<OcspFetcher> builder() {
        return new Builder<>(new BuildHandler<OcspFetcher>() {
            @Override
            public OcspFetcher build(Properties properties) {
                return new ApacheOcspFetcher(properties);
            }
        });
    }",java,"public static Builder<OcspFetcher> builder() {
        return new Builder<>(new BuildHandler<OcspFetcher>() {
            @Override
            public OcspFetcher build(Properties properties) {
                return new ApacheOcspFetcher(properties);
            }
        });
    }","['public', 'static', 'Builder', '<', 'OcspFetcher', '>', 'builder', '(', ')', '{', 'return', 'new', 'Builder', '<>', '(', 'new', 'BuildHandler', '<', 'OcspFetcher', '>', '(', ')', '{', '@', 'Override', 'public', 'OcspFetcher', 'build', '(', 'Properties', 'properties', ')', '{', 'return', 'new', 'ApacheOcspFetcher', '(', 'properties', ')', ';', '}', '}', ')', ';', '}']","Builder to create an instance of OcspFetcher using Apache HttpClient for connectivity.

@return Prepared fetcher.","['Builder', 'to', 'create', 'an', 'instance', 'of', 'OcspFetcher', 'using', 'Apache', 'HttpClient', 'for', 'connectivity', '.']",e540d1777d90b6789ab679636b25ddbf122183ee,https://github.com/klakegg/pkix-ocsp/blob/e540d1777d90b6789ab679636b25ddbf122183ee/src/main/java/net/klakegg/pkix/ocsp/fetcher/ApacheOcspFetcher.java#L37-L44,test
streamsets/datacollector,mysql-binlog-lib/src/main/java/com/streamsets/pipeline/stage/origin/mysql/EventBuffer.java,EventBuffer.poll,"public EnrichedEvent poll(long timeout, TimeUnit unit) throws StageException {
    try {
      return queue.poll(timeout, unit);
    } catch (InterruptedException e) {
      LOG.error(Errors.MYSQL_001.getMessage(), e.toString(), e);
      Thread.currentThread().interrupt();
      throw new StageException(Errors.MYSQL_001, e.toString(), e);
    }
  }",java,"public EnrichedEvent poll(long timeout, TimeUnit unit) throws StageException {
    try {
      return queue.poll(timeout, unit);
    } catch (InterruptedException e) {
      LOG.error(Errors.MYSQL_001.getMessage(), e.toString(), e);
      Thread.currentThread().interrupt();
      throw new StageException(Errors.MYSQL_001, e.toString(), e);
    }
  }","['public', 'EnrichedEvent', 'poll', '(', 'long', 'timeout', ',', 'TimeUnit', 'unit', ')', 'throws', 'StageException', '{', 'try', '{', 'return', 'queue', '.', 'poll', '(', 'timeout', ',', 'unit', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'LOG', '.', 'error', '(', 'Errors', '.', 'MYSQL_001', '.', 'getMessage', '(', ')', ',', 'e', '.', 'toString', '(', ')', ',', 'e', ')', ';', 'Thread', '.', 'currentThread', '(', ')', '.', 'interrupt', '(', ')', ';', 'throw', 'new', 'StageException', '(', 'Errors', '.', 'MYSQL_001', ',', 'e', '.', 'toString', '(', ')', ',', 'e', ')', ';', '}', '}']","Read next event from buffer with respect to maximum timeout.
@param timeout timeout.
@param unit timeout time unit.
@return next event of null
@throws StageException","['Read', 'next', 'event', 'from', 'buffer', 'with', 'respect', 'to', 'maximum', 'timeout', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/mysql-binlog-lib/src/main/java/com/streamsets/pipeline/stage/origin/mysql/EventBuffer.java#L49-L57,test
jboss/jboss-common-core,src/main/java/org/jboss/util/collection/CachedList.java,CachedList.getObject,"private Object getObject(final int index) {
      Object obj = list.get(index);

      return Objects.deref(obj);
   }",java,"private Object getObject(final int index) {
      Object obj = list.get(index);

      return Objects.deref(obj);
   }","['private', 'Object', 'getObject', '(', 'final', 'int', 'index', ')', '{', 'Object', 'obj', '=', 'list', '.', 'get', '(', 'index', ')', ';', 'return', 'Objects', '.', 'deref', '(', 'obj', ')', ';', '}']",Dereference the object at the given index.,"['Dereference', 'the', 'object', 'at', 'the', 'given', 'index', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/collection/CachedList.java#L67-L71,test
playframework/playframework,core/play/src/main/java/play/http/HttpEntity.java,HttpEntity.fromString,"public static final HttpEntity fromString(String content, String charset) {
    return new Strict(
        ByteString.fromString(content, charset), Optional.of(""text/plain; charset="" + charset));
  }",java,"public static final HttpEntity fromString(String content, String charset) {
    return new Strict(
        ByteString.fromString(content, charset), Optional.of(""text/plain; charset="" + charset));
  }","['public', 'static', 'final', 'HttpEntity', 'fromString', '(', 'String', 'content', ',', 'String', 'charset', ')', '{', 'return', 'new', 'Strict', '(', 'ByteString', '.', 'fromString', '(', 'content', ',', 'charset', ')', ',', 'Optional', '.', 'of', '(', '""text/plain; charset=""', '+', 'charset', ')', ')', ';', '}']","Create an entity from the given String.

@param content The content.
@param charset The charset.
@return the HTTP entity.","['Create', 'an', 'entity', 'from', 'the', 'given', 'String', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/http/HttpEntity.java#L88-L91,test
braintree/braintree_android,PayPalOneTouch/src/main/java/com/paypal/android/sdk/onetouch/core/config/OtcConfiguration.java,OtcConfiguration.getBrowserBillingAgreementConfig,"public BillingAgreementRecipe getBrowserBillingAgreementConfig() {
        for (BillingAgreementRecipe recipe : mBillingAgreementRecipesInDecreasingPriorityOrder) {
            if (recipe.getTarget() == RequestTarget.browser) {
                return recipe;
            }
        }

        return null;
    }",java,"public BillingAgreementRecipe getBrowserBillingAgreementConfig() {
        for (BillingAgreementRecipe recipe : mBillingAgreementRecipesInDecreasingPriorityOrder) {
            if (recipe.getTarget() == RequestTarget.browser) {
                return recipe;
            }
        }

        return null;
    }","['public', 'BillingAgreementRecipe', 'getBrowserBillingAgreementConfig', '(', ')', '{', 'for', '(', 'BillingAgreementRecipe', 'recipe', ':', 'mBillingAgreementRecipesInDecreasingPriorityOrder', ')', '{', 'if', '(', 'recipe', '.', 'getTarget', '(', ')', '==', 'RequestTarget', '.', 'browser', ')', '{', 'return', 'recipe', ';', '}', '}', 'return', 'null', ';', '}']","Returns the browser recipe that can handle billing agreement, or null if there is none.

@return","['Returns', 'the', 'browser', 'recipe', 'that', 'can', 'handle', 'billing', 'agreement', 'or', 'null', 'if', 'there', 'is', 'none', '.']",07b32e6fad73f9fb8432971b0e79fc8c94b11873,https://github.com/braintree/braintree_android/blob/07b32e6fad73f9fb8432971b0e79fc8c94b11873/PayPalOneTouch/src/main/java/com/paypal/android/sdk/onetouch/core/config/OtcConfiguration.java#L56-L64,test
OpenEstate/OpenEstate-IO,Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java,Kyero_3.upgradeFromPreviousVersion,"@Override
    public void upgradeFromPreviousVersion(KyeroDocument doc) {
        doc.setDocumentVersion(KyeroVersion.V3);

        try {
            this.removeCustomElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't remove <custom> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeNewBuildElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <new_build> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeTypeElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <type> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeCurrencyElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <currency> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeUrlElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <url> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }
    }",java,"@Override
    public void upgradeFromPreviousVersion(KyeroDocument doc) {
        doc.setDocumentVersion(KyeroVersion.V3);

        try {
            this.removeCustomElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't remove <custom> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeNewBuildElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <new_build> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeTypeElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <type> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeCurrencyElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <currency> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }

        try {
            this.upgradeUrlElements(doc.getDocument());
        } catch (Exception ex) {
            LOGGER.error(""Can't upgrade <url> elements!"");
            LOGGER.error(""> "" + ex.getLocalizedMessage(), ex);
        }
    }","['@', 'Override', 'public', 'void', 'upgradeFromPreviousVersion', '(', 'KyeroDocument', 'doc', ')', '{', 'doc', '.', 'setDocumentVersion', '(', 'KyeroVersion', '.', 'V3', ')', ';', 'try', '{', 'this', '.', 'removeCustomElements', '(', 'doc', '.', 'getDocument', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'LOGGER', '.', 'error', '(', '""Can\'t remove <custom> elements!""', ')', ';', 'LOGGER', '.', 'error', '(', '""> ""', '+', 'ex', '.', 'getLocalizedMessage', '(', ')', ',', 'ex', ')', ';', '}', 'try', '{', 'this', '.', 'upgradeNewBuildElements', '(', 'doc', '.', 'getDocument', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'LOGGER', '.', 'error', '(', '""Can\'t upgrade <new_build> elements!""', ')', ';', 'LOGGER', '.', 'error', '(', '""> ""', '+', 'ex', '.', 'getLocalizedMessage', '(', ')', ',', 'ex', ')', ';', '}', 'try', '{', 'this', '.', 'upgradeTypeElements', '(', 'doc', '.', 'getDocument', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'LOGGER', '.', 'error', '(', '""Can\'t upgrade <type> elements!""', ')', ';', 'LOGGER', '.', 'error', '(', '""> ""', '+', 'ex', '.', 'getLocalizedMessage', '(', ')', ',', 'ex', ')', ';', '}', 'try', '{', 'this', '.', 'upgradeCurrencyElements', '(', 'doc', '.', 'getDocument', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'LOGGER', '.', 'error', '(', '""Can\'t upgrade <currency> elements!""', ')', ';', 'LOGGER', '.', 'error', '(', '""> ""', '+', 'ex', '.', 'getLocalizedMessage', '(', ')', ',', 'ex', ')', ';', '}', 'try', '{', 'this', '.', 'upgradeUrlElements', '(', 'doc', '.', 'getDocument', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'LOGGER', '.', 'error', '(', '""Can\'t upgrade <url> elements!""', ')', ';', 'LOGGER', '.', 'error', '(', '""> ""', '+', 'ex', '.', 'getLocalizedMessage', '(', ')', ',', 'ex', ')', ';', '}', '}']","Upgrade a Kyero document to version 3.

@param doc Kyero document in version 2.1","['Upgrade', 'a', 'Kyero', 'document', 'to', 'version', '3', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Kyero/src/main/java/org/openestate/io/kyero/converters/Kyero_3.java#L112-L150,test
eclipse/packagedrone,bundles/org.eclipse.packagedrone.repo.channel.impl/src/org/eclipse/packagedrone/repo/channel/impl/ChannelServiceImpl.java,ChannelServiceImpl.findByName,"private Optional<ChannelInstance> findByName ( final String name )
    {
        if ( name == null )
        {
            return empty ();
        }

        final String id = this.manager.accessCall ( KEY_STORAGE, ChannelServiceAccess.class, channels -> {
            return channels.mapToId ( name );
        } );

        return findById ( id );
    }",java,"private Optional<ChannelInstance> findByName ( final String name )
    {
        if ( name == null )
        {
            return empty ();
        }

        final String id = this.manager.accessCall ( KEY_STORAGE, ChannelServiceAccess.class, channels -> {
            return channels.mapToId ( name );
        } );

        return findById ( id );
    }","['private', 'Optional', '<', 'ChannelInstance', '>', 'findByName', '(', 'final', 'String', 'name', ')', '{', 'if', '(', 'name', '==', 'null', ')', '{', 'return', 'empty', '(', ')', ';', '}', 'final', 'String', 'id', '=', 'this', '.', 'manager', '.', 'accessCall', '(', 'KEY_STORAGE', ',', 'ChannelServiceAccess', '.', 'class', ',', 'channels', '->', '{', 'return', 'channels', '.', 'mapToId', '(', 'name', ')', ';', '}', ')', ';', 'return', 'findById', '(', 'id', ')', ';', '}']","Find a channel by name

@param name
the channel name to look for
@return the optional channel entry, never returns {@code null} but my
return {@link Optional#empty()}.","['Find', 'a', 'channel', 'by', 'name']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.eclipse.packagedrone.repo.channel.impl/src/org/eclipse/packagedrone/repo/channel/impl/ChannelServiceImpl.java#L265-L277,test
eiichiro/bootleg,src/main/java/org/eiichiro/bootleg/AbstractRequest.java,AbstractRequest.cookie,"protected Object cookie(Type type, String name) {
		return parameter(type, name, new Function<String, Object>() {

			public Object apply(String name) {
				Cookie[] cookies = context.request().getCookies();
				
				if (cookies != null) {
					for (Cookie cookie : cookies) {
						if (cookie.getName().equals(name)) {
							return cookie.getValue();
						}
					}
				}
				
				return null;
			}
			
		}, new Function<String, Collection<Object>>() {

			public Collection<Object> apply(String name) {
				HttpServletRequest request = context.request();
				Map<String, Object> map = new TreeMap<String, Object>();
				Cookie[] cookies = request.getCookies();
				
				if (cookies != null) {
					for (Cookie cookie : cookies) {
						String key = cookie.getName();
						
						if (key.startsWith(name + ""["")) {
							map.put(key, cookie.getValue());
						}
					}
				}
				
				return (map.isEmpty()) ? null : map.values();
			}
			
		});
	}",java,"protected Object cookie(Type type, String name) {
		return parameter(type, name, new Function<String, Object>() {

			public Object apply(String name) {
				Cookie[] cookies = context.request().getCookies();
				
				if (cookies != null) {
					for (Cookie cookie : cookies) {
						if (cookie.getName().equals(name)) {
							return cookie.getValue();
						}
					}
				}
				
				return null;
			}
			
		}, new Function<String, Collection<Object>>() {

			public Collection<Object> apply(String name) {
				HttpServletRequest request = context.request();
				Map<String, Object> map = new TreeMap<String, Object>();
				Cookie[] cookies = request.getCookies();
				
				if (cookies != null) {
					for (Cookie cookie : cookies) {
						String key = cookie.getName();
						
						if (key.startsWith(name + ""["")) {
							map.put(key, cookie.getValue());
						}
					}
				}
				
				return (map.isEmpty()) ? null : map.values();
			}
			
		});
	}","['protected', 'Object', 'cookie', '(', 'Type', 'type', ',', 'String', 'name', ')', '{', 'return', 'parameter', '(', 'type', ',', 'name', ',', 'new', 'Function', '<', 'String', ',', 'Object', '>', '(', ')', '{', 'public', 'Object', 'apply', '(', 'String', 'name', ')', '{', 'Cookie', '[', ']', 'cookies', '=', 'context', '.', 'request', '(', ')', '.', 'getCookies', '(', ')', ';', 'if', '(', 'cookies', '!=', 'null', ')', '{', 'for', '(', 'Cookie', 'cookie', ':', 'cookies', ')', '{', 'if', '(', 'cookie', '.', 'getName', '(', ')', '.', 'equals', '(', 'name', ')', ')', '{', 'return', 'cookie', '.', 'getValue', '(', ')', ';', '}', '}', '}', 'return', 'null', ';', '}', '}', ',', 'new', 'Function', '<', 'String', ',', 'Collection', '<', 'Object', '>', '>', '(', ')', '{', 'public', 'Collection', '<', 'Object', '>', 'apply', '(', 'String', 'name', ')', '{', 'HttpServletRequest', 'request', '=', 'context', '.', 'request', '(', ')', ';', 'Map', '<', 'String', ',', 'Object', '>', 'map', '=', 'new', 'TreeMap', '<', 'String', ',', 'Object', '>', '(', ')', ';', 'Cookie', '[', ']', 'cookies', '=', 'request', '.', 'getCookies', '(', ')', ';', 'if', '(', 'cookies', '!=', 'null', ')', '{', 'for', '(', 'Cookie', 'cookie', ':', 'cookies', ')', '{', 'String', 'key', '=', 'cookie', '.', 'getName', '(', ')', ';', 'if', '(', 'key', '.', 'startsWith', '(', 'name', '+', '""[""', ')', ')', '{', 'map', '.', 'put', '(', 'key', ',', 'cookie', '.', 'getValue', '(', ')', ')', ';', '}', '}', '}', 'return', '(', 'map', '.', 'isEmpty', '(', ')', ')', '?', 'null', ':', 'map', '.', 'values', '(', ')', ';', '}', '}', ')', ';', '}']","Returns the Web endpoint method parameter from cookie in the HTTP request.

@param type The parameter type.
@param name The parameter name.
@return The Web endpoint method parameter from cookie in the HTTP request.","['Returns', 'the', 'Web', 'endpoint', 'method', 'parameter', 'from', 'cookie', 'in', 'the', 'HTTP', 'request', '.']",b98a108500597cb6185056be2eef7de5ba1963d2,https://github.com/eiichiro/bootleg/blob/b98a108500597cb6185056be2eef7de5ba1963d2/src/main/java/org/eiichiro/bootleg/AbstractRequest.java#L569-L607,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/SupportedLock.java,SupportedLock.addLockEntry,"public LockEntry addLockEntry() {

        Element lockentry = addChild(root, ""lockentry"", childNames, false); //$NON-NLS-1$
        Element locktype = appendChild(lockentry, ""locktype""); //$NON-NLS-1$
        appendChild(locktype, ""write""); //$NON-NLS-1$

        LockEntry result = null;
        try {
            result = new LockEntry(lockentry);
        } catch (MalformedElementException e) {
            Assert.isTrue(false, Policy.bind(""assert.internalError"")); //$NON-NLS-1$
        }

        return result;
    }",java,"public LockEntry addLockEntry() {

        Element lockentry = addChild(root, ""lockentry"", childNames, false); //$NON-NLS-1$
        Element locktype = appendChild(lockentry, ""locktype""); //$NON-NLS-1$
        appendChild(locktype, ""write""); //$NON-NLS-1$

        LockEntry result = null;
        try {
            result = new LockEntry(lockentry);
        } catch (MalformedElementException e) {
            Assert.isTrue(false, Policy.bind(""assert.internalError"")); //$NON-NLS-1$
        }

        return result;
    }","['public', 'LockEntry', 'addLockEntry', '(', ')', '{', 'Element', 'lockentry', '=', 'addChild', '(', 'root', ',', '""lockentry""', ',', 'childNames', ',', 'false', ')', ';', '//$NON-NLS-1$', 'Element', 'locktype', '=', 'appendChild', '(', 'lockentry', ',', '""locktype""', ')', ';', '//$NON-NLS-1$', 'appendChild', '(', 'locktype', ',', '""write""', ')', ';', '//$NON-NLS-1$', 'LockEntry', 'result', '=', 'null', ';', 'try', '{', 'result', '=', 'new', 'LockEntry', '(', 'lockentry', ')', ';', '}', 'catch', '(', 'MalformedElementException', 'e', ')', '{', 'Assert', '.', 'isTrue', '(', 'false', ',', 'Policy', '.', 'bind', '(', '""assert.internalError""', ')', ')', ';', '//$NON-NLS-1$', '}', 'return', 'result', ';', '}']","Creates a new lockentry and adds it to this supported lock. Returns
an editor on the new lockentry.

@return an editor on a new lockentry for this supportedlock","['Creates', 'a', 'new', 'lockentry', 'and', 'adds', 'it', 'to', 'this', 'supported', 'lock', '.', 'Returns', 'an', 'editor', 'on', 'the', 'new', 'lockentry', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/SupportedLock.java#L62-L76,test
wildfly/wildfly,messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/injection/InjectedJMSContext.java,InjectedJMSContext.isInTransaction,"private boolean isInTransaction() {
        TransactionSynchronizationRegistry tsr = getTransactionSynchronizationRegistry();
        boolean inTx = tsr.getTransactionStatus() == Status.STATUS_ACTIVE;
        return inTx;
    }",java,"private boolean isInTransaction() {
        TransactionSynchronizationRegistry tsr = getTransactionSynchronizationRegistry();
        boolean inTx = tsr.getTransactionStatus() == Status.STATUS_ACTIVE;
        return inTx;
    }","['private', 'boolean', 'isInTransaction', '(', ')', '{', 'TransactionSynchronizationRegistry', 'tsr', '=', 'getTransactionSynchronizationRegistry', '(', ')', ';', 'boolean', 'inTx', '=', 'tsr', '.', 'getTransactionStatus', '(', ')', '==', 'Status', '.', 'STATUS_ACTIVE', ';', 'return', 'inTx', ';', '}']",check whether there is an active transaction.,"['check', 'whether', 'there', 'is', 'an', 'active', 'transaction', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/injection/InjectedJMSContext.java#L108-L112,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/common/log/OLogManager.java,OLogManager.shutdown,"public void shutdown() {
    if (shutdownFlag.compareAndSet(false, true)) {
      try {
        if (LogManager.getLogManager() instanceof ShutdownLogManager)
          ((ShutdownLogManager) LogManager.getLogManager()).shutdown();
      } catch (NoClassDefFoundError ignore) {
        // Om nom nom. Some custom class loaders, like Tomcat's one, cannot load classes while in shutdown hooks, since their
        // runtime is already shutdown. Ignoring the exception, if ShutdownLogManager is not loaded at this point there are no instances
        // of it anyway and we have nothing to shutdown.
      }
    }
  }",java,"public void shutdown() {
    if (shutdownFlag.compareAndSet(false, true)) {
      try {
        if (LogManager.getLogManager() instanceof ShutdownLogManager)
          ((ShutdownLogManager) LogManager.getLogManager()).shutdown();
      } catch (NoClassDefFoundError ignore) {
        // Om nom nom. Some custom class loaders, like Tomcat's one, cannot load classes while in shutdown hooks, since their
        // runtime is already shutdown. Ignoring the exception, if ShutdownLogManager is not loaded at this point there are no instances
        // of it anyway and we have nothing to shutdown.
      }
    }
  }","['public', 'void', 'shutdown', '(', ')', '{', 'if', '(', 'shutdownFlag', '.', 'compareAndSet', '(', 'false', ',', 'true', ')', ')', '{', 'try', '{', 'if', '(', 'LogManager', '.', 'getLogManager', '(', ')', 'instanceof', 'ShutdownLogManager', ')', '(', '(', 'ShutdownLogManager', ')', 'LogManager', '.', 'getLogManager', '(', ')', ')', '.', 'shutdown', '(', ')', ';', '}', 'catch', '(', 'NoClassDefFoundError', 'ignore', ')', '{', ""// Om nom nom. Some custom class loaders, like Tomcat's one, cannot load classes while in shutdown hooks, since their"", '// runtime is already shutdown. Ignoring the exception, if ShutdownLogManager is not loaded at this point there are no instances', '// of it anyway and we have nothing to shutdown.', '}', '}', '}']",Shutdowns this log manager.,"['Shutdowns', 'this', 'log', 'manager', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/common/log/OLogManager.java#L373-L384,test
deliveredtechnologies/rulebook,rulebook-core/src/main/java/com/deliveredtechnologies/rulebook/lang/GivenRuleBuilder.java,GivenRuleBuilder.given,"GivenRuleBuilder<T, U> given(String name, T value) {
    return given(new Fact<T>(name, value));
  }",java,"GivenRuleBuilder<T, U> given(String name, T value) {
    return given(new Fact<T>(name, value));
  }","['GivenRuleBuilder', '<', 'T', ',', 'U', '>', 'given', '(', 'String', 'name', ',', 'T', 'value', ')', '{', 'return', 'given', '(', 'new', 'Fact', '<', 'T', '>', '(', 'name', ',', 'value', ')', ')', ';', '}']","Adds a fact to the Rule.
@param name  the name of the fact
@param value the value of the fact
@return      a GivenRuleBuilder","['Adds', 'a', 'fact', 'to', 'the', 'Rule', '.']",253738f6bc1e7804bb8649863e969956075a19ae,https://github.com/deliveredtechnologies/rulebook/blob/253738f6bc1e7804bb8649863e969956075a19ae/rulebook-core/src/main/java/com/deliveredtechnologies/rulebook/lang/GivenRuleBuilder.java#L38-L40,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV0.java,ORecordSerializerBinaryV0.getPositionsFromEmbeddedCollection,"private List<RecordInfo> getPositionsFromEmbeddedCollection(final BytesContainer bytes, int serializerVersion) {
    List<RecordInfo> retList = new ArrayList<>();

    int numberOfElements = OVarIntSerializer.readAsInteger(bytes);
    //read collection type
    readByte(bytes);

    for (int i = 0; i < numberOfElements; i++) {
      //read element

      //read data type      
      OType dataType = readOType(bytes, false);
      int fieldStart = bytes.offset;      

      RecordInfo fieldInfo = new RecordInfo();
      fieldInfo.fieldStartOffset = fieldStart;
      fieldInfo.fieldType = dataType;

      //TODO find better way to skip data bytes;
      deserializeValue(bytes, dataType, null, true, -1, serializerVersion, true);
      fieldInfo.fieldLength = bytes.offset - fieldStart;
      retList.add(fieldInfo);
    }

    return retList;
  }",java,"private List<RecordInfo> getPositionsFromEmbeddedCollection(final BytesContainer bytes, int serializerVersion) {
    List<RecordInfo> retList = new ArrayList<>();

    int numberOfElements = OVarIntSerializer.readAsInteger(bytes);
    //read collection type
    readByte(bytes);

    for (int i = 0; i < numberOfElements; i++) {
      //read element

      //read data type      
      OType dataType = readOType(bytes, false);
      int fieldStart = bytes.offset;      

      RecordInfo fieldInfo = new RecordInfo();
      fieldInfo.fieldStartOffset = fieldStart;
      fieldInfo.fieldType = dataType;

      //TODO find better way to skip data bytes;
      deserializeValue(bytes, dataType, null, true, -1, serializerVersion, true);
      fieldInfo.fieldLength = bytes.offset - fieldStart;
      retList.add(fieldInfo);
    }

    return retList;
  }","['private', 'List', '<', 'RecordInfo', '>', 'getPositionsFromEmbeddedCollection', '(', 'final', 'BytesContainer', 'bytes', ',', 'int', 'serializerVersion', ')', '{', 'List', '<', 'RecordInfo', '>', 'retList', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'int', 'numberOfElements', '=', 'OVarIntSerializer', '.', 'readAsInteger', '(', 'bytes', ')', ';', '//read collection type', 'readByte', '(', 'bytes', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numberOfElements', ';', 'i', '++', ')', '{', '//read element', '//read data type      ', 'OType', 'dataType', '=', 'readOType', '(', 'bytes', ',', 'false', ')', ';', 'int', 'fieldStart', '=', 'bytes', '.', 'offset', ';', 'RecordInfo', 'fieldInfo', '=', 'new', 'RecordInfo', '(', ')', ';', 'fieldInfo', '.', 'fieldStartOffset', '=', 'fieldStart', ';', 'fieldInfo', '.', 'fieldType', '=', 'dataType', ';', '//TODO find better way to skip data bytes;', 'deserializeValue', '(', 'bytes', ',', 'dataType', ',', 'null', ',', 'true', ',', '-', '1', ',', 'serializerVersion', ',', 'true', ')', ';', 'fieldInfo', '.', 'fieldLength', '=', 'bytes', '.', 'offset', '-', 'fieldStart', ';', 'retList', '.', 'add', '(', 'fieldInfo', ')', ';', '}', 'return', 'retList', ';', '}']",returns begin position and length for each value in embedded collection,"['returns', 'begin', 'position', 'and', 'length', 'for', 'each', 'value', 'in', 'embedded', 'collection']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/record/binary/ORecordSerializerBinaryV0.java#L466-L491,test
mikepenz/CrossfadeDrawerLayout,library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java,CrossfadeDrawerLayout.fadeDown,"public void fadeDown(int duration) {
        //fade down
        mContainer.clearAnimation();
        ResizeWidthAnimation anim = new ResizeWidthAnimation(mContainer, mMinWidth, new ApplyTransformationListener() {
            @Override
            public void applyTransformation(int width) {
                overlapViews(width);
            }
        });
        anim.setDuration(duration);
        mContainer.startAnimation(anim);
    }",java,"public void fadeDown(int duration) {
        //fade down
        mContainer.clearAnimation();
        ResizeWidthAnimation anim = new ResizeWidthAnimation(mContainer, mMinWidth, new ApplyTransformationListener() {
            @Override
            public void applyTransformation(int width) {
                overlapViews(width);
            }
        });
        anim.setDuration(duration);
        mContainer.startAnimation(anim);
    }","['public', 'void', 'fadeDown', '(', 'int', 'duration', ')', '{', '//fade down', 'mContainer', '.', 'clearAnimation', '(', ')', ';', 'ResizeWidthAnimation', 'anim', '=', 'new', 'ResizeWidthAnimation', '(', 'mContainer', ',', 'mMinWidth', ',', 'new', 'ApplyTransformationListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'applyTransformation', '(', 'int', 'width', ')', '{', 'overlapViews', '(', 'width', ')', ';', '}', '}', ')', ';', 'anim', '.', 'setDuration', '(', 'duration', ')', ';', 'mContainer', '.', 'startAnimation', '(', 'anim', ')', ';', '}']","animate to the small view

@param duration","['animate', 'to', 'the', 'small', 'view']",7fe26d80d2c69410040daa61343d5040d2d4142a,https://github.com/mikepenz/CrossfadeDrawerLayout/blob/7fe26d80d2c69410040daa61343d5040d2d4142a/library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java#L355-L366,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/iosp/grads/GradsDataDescriptorFile.java,GradsDataDescriptorFile.getTimeStepsPerFile,"public int[] getTimeStepsPerFile(String filename) {
    if (chsubs != null) {
      for (Chsub ch : chsubs) {
        if (filename.contains(ch.subString)) {
          return new int[]{ch.numTimes, ch.startTimeIndex};
        }
      }
    }
    return new int[]{timeStepsPerFile, 0};
  }",java,"public int[] getTimeStepsPerFile(String filename) {
    if (chsubs != null) {
      for (Chsub ch : chsubs) {
        if (filename.contains(ch.subString)) {
          return new int[]{ch.numTimes, ch.startTimeIndex};
        }
      }
    }
    return new int[]{timeStepsPerFile, 0};
  }","['public', 'int', '[', ']', 'getTimeStepsPerFile', '(', 'String', 'filename', ')', '{', 'if', '(', 'chsubs', '!=', 'null', ')', '{', 'for', '(', 'Chsub', 'ch', ':', 'chsubs', ')', '{', 'if', '(', 'filename', '.', 'contains', '(', 'ch', '.', 'subString', ')', ')', '{', 'return', 'new', 'int', '[', ']', '{', 'ch', '.', 'numTimes', ',', 'ch', '.', 'startTimeIndex', '}', ';', '}', '}', '}', 'return', 'new', 'int', '[', ']', '{', 'timeStepsPerFile', ',', '0', '}', ';', '}']","Get the number of timesteps per file and the starting offset

@param filename the filename to check
@return the starting index and number of times in that file","['Get', 'the', 'number', 'of', 'timesteps', 'per', 'file', 'and', 'the', 'starting', 'offset']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/grads/GradsDataDescriptorFile.java#L715-L724,test
real-logic/aeron,aeron-client/src/main/java/io/aeron/ChannelUri.java,ChannelUri.addSessionId,"public static String addSessionId(final String channel, final int sessionId)
    {
        final ChannelUri channelUri = ChannelUri.parse(channel);
        channelUri.put(CommonContext.SESSION_ID_PARAM_NAME, Integer.toString(sessionId));

        return channelUri.toString();
    }",java,"public static String addSessionId(final String channel, final int sessionId)
    {
        final ChannelUri channelUri = ChannelUri.parse(channel);
        channelUri.put(CommonContext.SESSION_ID_PARAM_NAME, Integer.toString(sessionId));

        return channelUri.toString();
    }","['public', 'static', 'String', 'addSessionId', '(', 'final', 'String', 'channel', ',', 'final', 'int', 'sessionId', ')', '{', 'final', 'ChannelUri', 'channelUri', '=', 'ChannelUri', '.', 'parse', '(', 'channel', ')', ';', 'channelUri', '.', 'put', '(', 'CommonContext', '.', 'SESSION_ID_PARAM_NAME', ',', 'Integer', '.', 'toString', '(', 'sessionId', ')', ')', ';', 'return', 'channelUri', '.', 'toString', '(', ')', ';', '}']","Add a sessionId to a given channel.

@param channel   to add sessionId to.
@param sessionId to add to channel.
@return new string that represents channel with sessionId added.","['Add', 'a', 'sessionId', 'to', 'a', 'given', 'channel', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-client/src/main/java/io/aeron/ChannelUri.java#L413-L419,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dataset/CoordinateSystem.java,CoordinateSystem.containsAxis,"public boolean containsAxis(String axisName) {
    for (CoordinateAxis ca : coordAxes) {
      if (ca.getFullName().equals(axisName))
        return true;
    }
    return false;
   }",java,"public boolean containsAxis(String axisName) {
    for (CoordinateAxis ca : coordAxes) {
      if (ca.getFullName().equals(axisName))
        return true;
    }
    return false;
   }","['public', 'boolean', 'containsAxis', '(', 'String', 'axisName', ')', '{', 'for', '(', 'CoordinateAxis', 'ca', ':', 'coordAxes', ')', '{', 'if', '(', 'ca', '.', 'getFullName', '(', ')', '.', 'equals', '(', 'axisName', ')', ')', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","Do we have the named axis?
@param axisName (full unescaped) name of axis
@return true if we have an axis of that name","['Do', 'we', 'have', 'the', 'named', 'axis?']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/CoordinateSystem.java#L456-L462,test
apache/parquet-mr,parquet-cli/src/main/java/org/apache/parquet/cli/BaseCommand.java,BaseCommand.output,"public void output(String content, Logger console, String filename)
      throws IOException {
    if (filename == null || ""-"".equals(filename)) {
      console.info(content);
    } else {
      FSDataOutputStream outgoing = create(filename);
      try {
        outgoing.write(content.getBytes(StandardCharsets.UTF_8));
      } finally {
        outgoing.close();
      }
    }
  }",java,"public void output(String content, Logger console, String filename)
      throws IOException {
    if (filename == null || ""-"".equals(filename)) {
      console.info(content);
    } else {
      FSDataOutputStream outgoing = create(filename);
      try {
        outgoing.write(content.getBytes(StandardCharsets.UTF_8));
      } finally {
        outgoing.close();
      }
    }
  }","['public', 'void', 'output', '(', 'String', 'content', ',', 'Logger', 'console', ',', 'String', 'filename', ')', 'throws', 'IOException', '{', 'if', '(', 'filename', '==', 'null', '||', '""-""', '.', 'equals', '(', 'filename', ')', ')', '{', 'console', '.', 'info', '(', 'content', ')', ';', '}', 'else', '{', 'FSDataOutputStream', 'outgoing', '=', 'create', '(', 'filename', ')', ';', 'try', '{', 'outgoing', '.', 'write', '(', 'content', '.', 'getBytes', '(', 'StandardCharsets', '.', 'UTF_8', ')', ')', ';', '}', 'finally', '{', 'outgoing', '.', 'close', '(', ')', ';', '}', '}', '}']","Output content to the console or a file.

This will not produce checksum files.

@param content String content to write
@param console A {@link Logger} for writing to the console
@param filename The destination {@link Path} as a String
@throws IOException if there is an error while writing","['Output', 'content', 'to', 'the', 'console', 'or', 'a', 'file', '.']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-cli/src/main/java/org/apache/parquet/cli/BaseCommand.java#L95-L107,test
OpenEstate/OpenEstate-IO,OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Ausblick.java,Ausblick.setBlick,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setBlick(Ausblick.Blick value) {
        this.blick = value;
    }",java,"@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2018-10-12T02:54:50+02:00"", comments = ""JAXB RI v2.2.11"")
    public void setBlick(Ausblick.Blick value) {
        this.blick = value;
    }","['@', 'Generated', '(', 'value', '=', '""com.sun.tools.xjc.Driver""', ',', 'date', '=', '""2018-10-12T02:54:50+02:00""', ',', 'comments', '=', '""JAXB RI v2.2.11""', ')', 'public', 'void', 'setBlick', '(', 'Ausblick', '.', 'Blick', 'value', ')', '{', 'this', '.', 'blick', '=', 'value', ';', '}']","Sets the value of the blick property.

@param value
allowed object is
{@link Ausblick.Blick }","['Sets', 'the', 'value', 'of', 'the', 'blick', 'property', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/Ausblick.java#L63-L66,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/util/IO.java,IO.readFileToByteArray,"static public byte[] readFileToByteArray(String filename) throws IOException {
    try (FileInputStream fin = new FileInputStream(filename)) {
      InputStream in = new BufferedInputStream(fin);
      return readContentsToByteArray(in);
    }
  }",java,"static public byte[] readFileToByteArray(String filename) throws IOException {
    try (FileInputStream fin = new FileInputStream(filename)) {
      InputStream in = new BufferedInputStream(fin);
      return readContentsToByteArray(in);
    }
  }","['static', 'public', 'byte', '[', ']', 'readFileToByteArray', '(', 'String', 'filename', ')', 'throws', 'IOException', '{', 'try', '(', 'FileInputStream', 'fin', '=', 'new', 'FileInputStream', '(', 'filename', ')', ')', '{', 'InputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'fin', ')', ';', 'return', 'readContentsToByteArray', '(', 'in', ')', ';', '}', '}']","Read the file and place contents into a byte array,
with any error messages  put in the return String.

@param filename the file to read from.
@return byte[] holding the contents, or an error message.
@throws java.io.IOException on io error","['Read', 'the', 'file', 'and', 'place', 'contents', 'into', 'a', 'byte', 'array', 'with', 'any', 'error', 'messages', 'put', 'in', 'the', 'return', 'String', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/util/IO.java#L451-L456,test
lightcouch/LightCouch,src/main/java/org/lightcouch/CouchDbDesign.java,CouchDbDesign.synchronizeAllWithDb,"public void synchronizeAllWithDb() {
		List<DesignDocument> documents = getAllFromDesk();
		for (DesignDocument dd : documents) {
			synchronizeWithDb(dd);
		}
	}",java,"public void synchronizeAllWithDb() {
		List<DesignDocument> documents = getAllFromDesk();
		for (DesignDocument dd : documents) {
			synchronizeWithDb(dd);
		}
	}","['public', 'void', 'synchronizeAllWithDb', '(', ')', '{', 'List', '<', 'DesignDocument', '>', 'documents', '=', 'getAllFromDesk', '(', ')', ';', 'for', '(', 'DesignDocument', 'dd', ':', 'documents', ')', '{', 'synchronizeWithDb', '(', 'dd', ')', ';', '}', '}']","Synchronize all design documents on desk to the database.
@see #synchronizeWithDb(DesignDocument)
@see CouchDbClient#syncDesignDocsWithDb()","['Synchronize', 'all', 'design', 'documents', 'on', 'desk', 'to', 'the', 'database', '.']",9646889503475e862fd2158487e1cdd805447f4a,https://github.com/lightcouch/LightCouch/blob/9646889503475e862fd2158487e1cdd805447f4a/src/main/java/org/lightcouch/CouchDbDesign.java#L111-L116,test
orientechnologies/orientdb,graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientEdge.java,OrientEdge.getId,"@Override
  public Object getId() {
    if (rawElement == null)
      // CREATE A TEMPORARY ID
      return vOut.getIdentity() + ""->"" + vIn.getIdentity();

    setCurrentGraphInThreadLocal();

    return super.getId();
  }",java,"@Override
  public Object getId() {
    if (rawElement == null)
      // CREATE A TEMPORARY ID
      return vOut.getIdentity() + ""->"" + vIn.getIdentity();

    setCurrentGraphInThreadLocal();

    return super.getId();
  }","['@', 'Override', 'public', 'Object', 'getId', '(', ')', '{', 'if', '(', 'rawElement', '==', 'null', ')', '// CREATE A TEMPORARY ID', 'return', 'vOut', '.', 'getIdentity', '(', ')', '+', '""->""', '+', 'vIn', '.', 'getIdentity', '(', ')', ';', 'setCurrentGraphInThreadLocal', '(', ')', ';', 'return', 'super', '.', 'getId', '(', ')', ';', '}']",Returns the Edge Id assuring to save it if it's transient yet.,"['Returns', 'the', 'Edge', 'Id', 'assuring', 'to', 'save', 'it', 'if', 'it', 's', 'transient', 'yet', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/graphdb/src/main/java/com/tinkerpop/blueprints/impls/orient/OrientEdge.java#L255-L264,test
apache/parquet-mr,parquet-hive/parquet-hive-storage-handler/src/main/java/org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport.java,DataWritableReadSupport.resolveSchemaAccess,"private MessageType resolveSchemaAccess(MessageType requestedSchema, MessageType fileSchema,
          Configuration configuration) {
    if(configuration.getBoolean(PARQUET_COLUMN_INDEX_ACCESS, false)) {
      final List<String> listColumns = getColumns(configuration.get(IOConstants.COLUMNS));

      List<Type> requestedTypes = new ArrayList<Type>();

      for(Type t : requestedSchema.getFields()) {
        int index = listColumns.indexOf(t.getName());
        requestedTypes.add(fileSchema.getType(index));
      }

      requestedSchema = new MessageType(requestedSchema.getName(), requestedTypes);
    }

    return requestedSchema;
  }",java,"private MessageType resolveSchemaAccess(MessageType requestedSchema, MessageType fileSchema,
          Configuration configuration) {
    if(configuration.getBoolean(PARQUET_COLUMN_INDEX_ACCESS, false)) {
      final List<String> listColumns = getColumns(configuration.get(IOConstants.COLUMNS));

      List<Type> requestedTypes = new ArrayList<Type>();

      for(Type t : requestedSchema.getFields()) {
        int index = listColumns.indexOf(t.getName());
        requestedTypes.add(fileSchema.getType(index));
      }

      requestedSchema = new MessageType(requestedSchema.getName(), requestedTypes);
    }

    return requestedSchema;
  }","['private', 'MessageType', 'resolveSchemaAccess', '(', 'MessageType', 'requestedSchema', ',', 'MessageType', 'fileSchema', ',', 'Configuration', 'configuration', ')', '{', 'if', '(', 'configuration', '.', 'getBoolean', '(', 'PARQUET_COLUMN_INDEX_ACCESS', ',', 'false', ')', ')', '{', 'final', 'List', '<', 'String', '>', 'listColumns', '=', 'getColumns', '(', 'configuration', '.', 'get', '(', 'IOConstants', '.', 'COLUMNS', ')', ')', ';', 'List', '<', 'Type', '>', 'requestedTypes', '=', 'new', 'ArrayList', '<', 'Type', '>', '(', ')', ';', 'for', '(', 'Type', 't', ':', 'requestedSchema', '.', 'getFields', '(', ')', ')', '{', 'int', 'index', '=', 'listColumns', '.', 'indexOf', '(', 't', '.', 'getName', '(', ')', ')', ';', 'requestedTypes', '.', 'add', '(', 'fileSchema', '.', 'getType', '(', 'index', ')', ')', ';', '}', 'requestedSchema', '=', 'new', 'MessageType', '(', 'requestedSchema', '.', 'getName', '(', ')', ',', 'requestedTypes', ')', ';', '}', 'return', 'requestedSchema', ';', '}']","Determine the file column names based on the position within the requested columns and
use that as the requested schema.","['Determine', 'the', 'file', 'column', 'names', 'based', 'on', 'the', 'position', 'within', 'the', 'requested', 'columns', 'and', 'use', 'that', 'as', 'the', 'requested', 'schema', '.']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hive/parquet-hive-storage-handler/src/main/java/org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport.java#L139-L155,test
oblac/jodd,jodd-core/src/main/java/jodd/io/FileUtil.java,FileUtil.appendBytes,"public static void appendBytes(final File dest, final byte[] data, final int off, final int len) throws IOException {
		outBytes(dest, data, off, len, true);
	}",java,"public static void appendBytes(final File dest, final byte[] data, final int off, final int len) throws IOException {
		outBytes(dest, data, off, len, true);
	}","['public', 'static', 'void', 'appendBytes', '(', 'final', 'File', 'dest', ',', 'final', 'byte', '[', ']', 'data', ',', 'final', 'int', 'off', ',', 'final', 'int', 'len', ')', 'throws', 'IOException', '{', 'outBytes', '(', 'dest', ',', 'data', ',', 'off', ',', 'len', ',', 'true', ')', ';', '}']","Appends bytes. append = true

@see #outBytes(File, byte[], int, int, boolean)","['Appends', 'bytes', '.', 'append', '=', 'true']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/FileUtil.java#L1026-L1028,test
jboss/jboss-common-core,src/main/java/org/jboss/util/Classes.java,Classes.getAllUniqueInterfaces,"public static Class[] getAllUniqueInterfaces(Class c)
   {
      Set uniqueIfaces = new HashSet();
      while (c != null )
      {
         Class[] ifaces = c.getInterfaces();
         for (int n = 0; n < ifaces.length; n ++)
         {
            uniqueIfaces.add(ifaces[n]);
         }
         c = c.getSuperclass();
      }
      return (Class[])uniqueIfaces.toArray(new Class[uniqueIfaces.size()]);
   }",java,"public static Class[] getAllUniqueInterfaces(Class c)
   {
      Set uniqueIfaces = new HashSet();
      while (c != null )
      {
         Class[] ifaces = c.getInterfaces();
         for (int n = 0; n < ifaces.length; n ++)
         {
            uniqueIfaces.add(ifaces[n]);
         }
         c = c.getSuperclass();
      }
      return (Class[])uniqueIfaces.toArray(new Class[uniqueIfaces.size()]);
   }","['public', 'static', 'Class', '[', ']', 'getAllUniqueInterfaces', '(', 'Class', 'c', ')', '{', 'Set', 'uniqueIfaces', '=', 'new', 'HashSet', '(', ')', ';', 'while', '(', 'c', '!=', 'null', ')', '{', 'Class', '[', ']', 'ifaces', '=', 'c', '.', 'getInterfaces', '(', ')', ';', 'for', '(', 'int', 'n', '=', '0', ';', 'n', '<', 'ifaces', '.', 'length', ';', 'n', '++', ')', '{', 'uniqueIfaces', '.', 'add', '(', 'ifaces', '[', 'n', ']', ')', ';', '}', 'c', '=', 'c', '.', 'getSuperclass', '(', ')', ';', '}', 'return', '(', 'Class', '[', ']', ')', 'uniqueIfaces', '.', 'toArray', '(', 'new', 'Class', '[', 'uniqueIfaces', '.', 'size', '(', ')', ']', ')', ';', '}']","Returns an array containing all the unique interfaces implemented
by the argument class c and all its superclasses. Interfaces that
appear multiple times through inheritence are only accounted for once.

@param c - the class to start scanning for interfaces
@return the interfaces","['Returns', 'an', 'array', 'containing', 'all', 'the', 'unique', 'interfaces', 'implemented', 'by', 'the', 'argument', 'class', 'c', 'and', 'all', 'its', 'superclasses', '.', 'Interfaces', 'that', 'appear', 'multiple', 'times', 'through', 'inheritence', 'are', 'only', 'accounted', 'for', 'once', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/Classes.java#L431-L444,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Search.java,Search.setQuery,"public void setQuery(String v) {
    if (Search_Type.featOkTst && ((Search_Type)jcasType).casFeat_query == null)
      jcasType.jcas.throwFeatMissing(""query"", ""edu.cmu.lti.oaqa.type.retrieval.Search"");
    jcasType.ll_cas.ll_setStringValue(addr, ((Search_Type)jcasType).casFeatCode_query, v);}",java,"public void setQuery(String v) {
    if (Search_Type.featOkTst && ((Search_Type)jcasType).casFeat_query == null)
      jcasType.jcas.throwFeatMissing(""query"", ""edu.cmu.lti.oaqa.type.retrieval.Search"");
    jcasType.ll_cas.ll_setStringValue(addr, ((Search_Type)jcasType).casFeatCode_query, v);}","['public', 'void', 'setQuery', '(', 'String', 'v', ')', '{', 'if', '(', 'Search_Type', '.', 'featOkTst', '&&', '(', '(', 'Search_Type', ')', 'jcasType', ')', '.', 'casFeat_query', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""query""', ',', '""edu.cmu.lti.oaqa.type.retrieval.Search""', ')', ';', 'jcasType', '.', 'll_cas', '.', 'll_setStringValue', '(', 'addr', ',', '(', '(', 'Search_Type', ')', 'jcasType', ')', '.', 'casFeatCode_query', ',', 'v', ')', ';', '}']","setter for query - sets The query in the native syntax of the corresponding search engine.
@generated
@param v value to set into the feature","['setter', 'for', 'query', '-', 'sets', 'The', 'query', 'in', 'the', 'native', 'syntax', 'of', 'the', 'corresponding', 'search', 'engine', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/Search.java#L84-L87,test
TooTallNate/Java-WebSocket,src/main/java/org/java_websocket/drafts/Draft_6455.java,Draft_6455.processFrameIsFin,"private void processFrameIsFin(WebSocketImpl webSocketImpl, Framedata frame) throws InvalidDataException {
		if( currentContinuousFrame == null ) {
			log.trace( ""Protocol error: Previous continuous frame sequence not completed."" );
			throw new InvalidDataException( CloseFrame.PROTOCOL_ERROR, ""Continuous frame sequence was not started."" );
		}
		addToBufferList(frame.getPayloadData());
		checkBufferLimit();
		if( currentContinuousFrame.getOpcode() == Opcode.TEXT ) {
			((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() );
			((FramedataImpl1) currentContinuousFrame).isValid();
			try {
				webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, Charsetfunctions.stringUtf8( currentContinuousFrame.getPayloadData() ) );
			} catch ( RuntimeException e ) {
				logRuntimeException(webSocketImpl, e);
			}
		} else if( currentContinuousFrame.getOpcode() == Opcode.BINARY ) {
			((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() );
			((FramedataImpl1) currentContinuousFrame).isValid();
			try {
				webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, currentContinuousFrame.getPayloadData() );
			} catch ( RuntimeException e ) {
				logRuntimeException(webSocketImpl, e);
			}
		}
		currentContinuousFrame = null;
		clearBufferList();
	}",java,"private void processFrameIsFin(WebSocketImpl webSocketImpl, Framedata frame) throws InvalidDataException {
		if( currentContinuousFrame == null ) {
			log.trace( ""Protocol error: Previous continuous frame sequence not completed."" );
			throw new InvalidDataException( CloseFrame.PROTOCOL_ERROR, ""Continuous frame sequence was not started."" );
		}
		addToBufferList(frame.getPayloadData());
		checkBufferLimit();
		if( currentContinuousFrame.getOpcode() == Opcode.TEXT ) {
			((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() );
			((FramedataImpl1) currentContinuousFrame).isValid();
			try {
				webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, Charsetfunctions.stringUtf8( currentContinuousFrame.getPayloadData() ) );
			} catch ( RuntimeException e ) {
				logRuntimeException(webSocketImpl, e);
			}
		} else if( currentContinuousFrame.getOpcode() == Opcode.BINARY ) {
			((FramedataImpl1) currentContinuousFrame).setPayload( getPayloadFromByteBufferList() );
			((FramedataImpl1) currentContinuousFrame).isValid();
			try {
				webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, currentContinuousFrame.getPayloadData() );
			} catch ( RuntimeException e ) {
				logRuntimeException(webSocketImpl, e);
			}
		}
		currentContinuousFrame = null;
		clearBufferList();
	}","['private', 'void', 'processFrameIsFin', '(', 'WebSocketImpl', 'webSocketImpl', ',', 'Framedata', 'frame', ')', 'throws', 'InvalidDataException', '{', 'if', '(', 'currentContinuousFrame', '==', 'null', ')', '{', 'log', '.', 'trace', '(', '""Protocol error: Previous continuous frame sequence not completed.""', ')', ';', 'throw', 'new', 'InvalidDataException', '(', 'CloseFrame', '.', 'PROTOCOL_ERROR', ',', '""Continuous frame sequence was not started.""', ')', ';', '}', 'addToBufferList', '(', 'frame', '.', 'getPayloadData', '(', ')', ')', ';', 'checkBufferLimit', '(', ')', ';', 'if', '(', 'currentContinuousFrame', '.', 'getOpcode', '(', ')', '==', 'Opcode', '.', 'TEXT', ')', '{', '(', '(', 'FramedataImpl1', ')', 'currentContinuousFrame', ')', '.', 'setPayload', '(', 'getPayloadFromByteBufferList', '(', ')', ')', ';', '(', '(', 'FramedataImpl1', ')', 'currentContinuousFrame', ')', '.', 'isValid', '(', ')', ';', 'try', '{', 'webSocketImpl', '.', 'getWebSocketListener', '(', ')', '.', 'onWebsocketMessage', '(', 'webSocketImpl', ',', 'Charsetfunctions', '.', 'stringUtf8', '(', 'currentContinuousFrame', '.', 'getPayloadData', '(', ')', ')', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'logRuntimeException', '(', 'webSocketImpl', ',', 'e', ')', ';', '}', '}', 'else', 'if', '(', 'currentContinuousFrame', '.', 'getOpcode', '(', ')', '==', 'Opcode', '.', 'BINARY', ')', '{', '(', '(', 'FramedataImpl1', ')', 'currentContinuousFrame', ')', '.', 'setPayload', '(', 'getPayloadFromByteBufferList', '(', ')', ')', ';', '(', '(', 'FramedataImpl1', ')', 'currentContinuousFrame', ')', '.', 'isValid', '(', ')', ';', 'try', '{', 'webSocketImpl', '.', 'getWebSocketListener', '(', ')', '.', 'onWebsocketMessage', '(', 'webSocketImpl', ',', 'currentContinuousFrame', '.', 'getPayloadData', '(', ')', ')', ';', '}', 'catch', '(', 'RuntimeException', 'e', ')', '{', 'logRuntimeException', '(', 'webSocketImpl', ',', 'e', ')', ';', '}', '}', 'currentContinuousFrame', '=', 'null', ';', 'clearBufferList', '(', ')', ';', '}']","Process the frame if it is the last frame
@param webSocketImpl the websocket impl
@param frame the frame
@throws InvalidDataException if there is a protocol error","['Process', 'the', 'frame', 'if', 'it', 'is', 'the', 'last', 'frame']",73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9,https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/drafts/Draft_6455.java#L870-L896,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ColorUtility.java,ColorUtility.geColorFromSpPr,"public static XColor geColorFromSpPr(final int index,
			final CTShapeProperties ctSpPr, final ThemesTable themeTable,
			final boolean isLineColor) {

		CTSolidColorFillProperties colorFill = null;

		try {
			if (isLineColor) {
				colorFill = ctSpPr.getLn().getSolidFill();
			} else {
				colorFill = ctSpPr.getSolidFill();
			}
		} catch (Exception ex) {
			LOG.log(Level.FINE, ""No entry for solidFill"", ex);
		}
		XColor xcolor = findAutomaticFillColor(themeTable, colorFill);
		if (xcolor != null) {
			return xcolor;
		} else {
			return getXColorWithAutomaticFill(index, themeTable);
		}

	}",java,"public static XColor geColorFromSpPr(final int index,
			final CTShapeProperties ctSpPr, final ThemesTable themeTable,
			final boolean isLineColor) {

		CTSolidColorFillProperties colorFill = null;

		try {
			if (isLineColor) {
				colorFill = ctSpPr.getLn().getSolidFill();
			} else {
				colorFill = ctSpPr.getSolidFill();
			}
		} catch (Exception ex) {
			LOG.log(Level.FINE, ""No entry for solidFill"", ex);
		}
		XColor xcolor = findAutomaticFillColor(themeTable, colorFill);
		if (xcolor != null) {
			return xcolor;
		} else {
			return getXColorWithAutomaticFill(index, themeTable);
		}

	}","['public', 'static', 'XColor', 'geColorFromSpPr', '(', 'final', 'int', 'index', ',', 'final', 'CTShapeProperties', 'ctSpPr', ',', 'final', 'ThemesTable', 'themeTable', ',', 'final', 'boolean', 'isLineColor', ')', '{', 'CTSolidColorFillProperties', 'colorFill', '=', 'null', ';', 'try', '{', 'if', '(', 'isLineColor', ')', '{', 'colorFill', '=', 'ctSpPr', '.', 'getLn', '(', ')', '.', 'getSolidFill', '(', ')', ';', '}', 'else', '{', 'colorFill', '=', 'ctSpPr', '.', 'getSolidFill', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'LOG', '.', 'log', '(', 'Level', '.', 'FINE', ',', '""No entry for solidFill""', ',', 'ex', ')', ';', '}', 'XColor', 'xcolor', '=', 'findAutomaticFillColor', '(', 'themeTable', ',', 'colorFill', ')', ';', 'if', '(', 'xcolor', '!=', 'null', ')', '{', 'return', 'xcolor', ';', '}', 'else', '{', 'return', 'getXColorWithAutomaticFill', '(', 'index', ',', 'themeTable', ')', ';', '}', '}']","get line color of line chart from CTLineSer.

@param index
line index.
@param ctSpPr
the ct sp pr
@param themeTable
themeTable.
@param isLineColor
is line color.
@return xcolor.","['get', 'line', 'color', 'of', 'line', 'chart', 'from', 'CTLineSer', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ColorUtility.java#L97-L119,test
Yubico/yubico-java-client,v2client/src/main/java/com/yubico/client/v2/YubicoClient.java,YubicoClient.getPublicId,"public static String getPublicId(String otp) {
		if ((otp == null) || (otp.length() < OTP_MIN_LEN)){
			//not a valid OTP format, throw an exception
			throw new IllegalArgumentException(""The OTP is too short to be valid"");
		}
		
		Integer len = otp.length();

		/* The OTP part is always the last 32 bytes of otp. Whatever is before that
		 * (if anything) is the public ID of the YubiKey. The ID can be set to ''
		 * through personalization.
		 */
		return otp.substring(0, len - 32).toLowerCase();
	}",java,"public static String getPublicId(String otp) {
		if ((otp == null) || (otp.length() < OTP_MIN_LEN)){
			//not a valid OTP format, throw an exception
			throw new IllegalArgumentException(""The OTP is too short to be valid"");
		}
		
		Integer len = otp.length();

		/* The OTP part is always the last 32 bytes of otp. Whatever is before that
		 * (if anything) is the public ID of the YubiKey. The ID can be set to ''
		 * through personalization.
		 */
		return otp.substring(0, len - 32).toLowerCase();
	}","['public', 'static', 'String', 'getPublicId', '(', 'String', 'otp', ')', '{', 'if', '(', '(', 'otp', '==', 'null', ')', '||', '(', 'otp', '.', 'length', '(', ')', '<', 'OTP_MIN_LEN', ')', ')', '{', '//not a valid OTP format, throw an exception', 'throw', 'new', 'IllegalArgumentException', '(', '""The OTP is too short to be valid""', ')', ';', '}', 'Integer', 'len', '=', 'otp', '.', 'length', '(', ')', ';', ""/* The OTP part is always the last 32 bytes of otp. Whatever is before that\n\t\t * (if anything) is the public ID of the YubiKey. The ID can be set to ''\n\t\t * through personalization.\n\t\t */"", 'return', 'otp', '.', 'substring', '(', '0', ',', 'len', '-', '32', ')', '.', 'toLowerCase', '(', ')', ';', '}']","Extract the public ID of a YubiKey from an OTP it generated.

@param otp	The OTP to extract ID from, in modhex format.

@return string	Public ID of YubiKey that generated otp. Between 0 and 12 lower-case characters.

@throws IllegalArgumentException for arguments that are null or too short to be valid OTP strings.","['Extract', 'the', 'public', 'ID', 'of', 'a', 'YubiKey', 'from', 'an', 'OTP', 'it', 'generated', '.']",263b09c6ab0ee54b0dc7d70516989abab981796f,https://github.com/Yubico/yubico-java-client/blob/263b09c6ab0ee54b0dc7d70516989abab981796f/v2client/src/main/java/com/yubico/client/v2/YubicoClient.java#L180-L193,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/util/StringUtil2.java,StringUtil2.filter7bits,"static public String filter7bits(String s) {
    if (s == null) return null;
    char[] bo = new char[s.length()];
    int count = 0;
    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      if ((c < 128) && (c > 31) || ((c == '\n') || (c == '\t'))) {
        bo[count++] = c;
      }
    }

    return new String(bo, 0, count);
  }",java,"static public String filter7bits(String s) {
    if (s == null) return null;
    char[] bo = new char[s.length()];
    int count = 0;
    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      if ((c < 128) && (c > 31) || ((c == '\n') || (c == '\t'))) {
        bo[count++] = c;
      }
    }

    return new String(bo, 0, count);
  }","['static', 'public', 'String', 'filter7bits', '(', 'String', 's', ')', '{', 'if', '(', 's', '==', 'null', ')', 'return', 'null', ';', 'char', '[', ']', 'bo', '=', 'new', 'char', '[', 's', '.', 'length', '(', ')', ']', ';', 'int', 'count', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 's', '.', 'length', '(', ')', ';', 'i', '++', ')', '{', 'char', 'c', '=', 's', '.', 'charAt', '(', 'i', ')', ';', 'if', '(', '(', 'c', '<', '128', ')', '&&', '(', 'c', '>', '31', ')', '||', '(', '(', 'c', '==', ""'"", ""'"", ')', '||', '(', 'c', '==', ""'"", ""'"", ')', ')', ')', '{', 'bo', '[', 'count', '++', ']', '=', 'c', ';', '}', '}', 'return', 'new', 'String', '(', 'bo', ',', '0', ',', 'count', ')', ';', '}']","Remove all but printable ascii

@param s filter this string
@return filtered string.","['Remove', 'all', 'but', 'printable', 'ascii']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/util/StringUtil2.java#L143-L155,test
rupertlssmith/lojix,lojix/power_model/src/main/com/thesett/aima/attribute/time/TimeUtils.java,TimeUtils.ticksWithSecondsSetTo,"public static long ticksWithSecondsSetTo(long ticks, int seconds)
    {
        long oldSeconds = ticksToSeconds(ticks);

        return ticks - (oldSeconds * MILLIS_PER_SECOND) + (seconds * MILLIS_PER_SECOND);
    }",java,"public static long ticksWithSecondsSetTo(long ticks, int seconds)
    {
        long oldSeconds = ticksToSeconds(ticks);

        return ticks - (oldSeconds * MILLIS_PER_SECOND) + (seconds * MILLIS_PER_SECOND);
    }","['public', 'static', 'long', 'ticksWithSecondsSetTo', '(', 'long', 'ticks', ',', 'int', 'seconds', ')', '{', 'long', 'oldSeconds', '=', 'ticksToSeconds', '(', 'ticks', ')', ';', 'return', 'ticks', '-', '(', 'oldSeconds', '*', 'MILLIS_PER_SECOND', ')', '+', '(', 'seconds', '*', 'MILLIS_PER_SECOND', ')', ';', '}']","Sets the seconds component of the timestamp, returning the new timestamp with updated component.

@param  ticks   The time in ticks.
@param  seconds The new seconds field.

@return The new time in ticks.","['Sets', 'the', 'seconds', 'component', 'of', 'the', 'timestamp', 'returning', 'the', 'new', 'timestamp', 'with', 'updated', 'component', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/power_model/src/main/com/thesett/aima/attribute/time/TimeUtils.java#L376-L381,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java,ClassVisitor.visitAnnotation,"public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible) {
    if (cv != null) {
      return cv.visitAnnotation(descriptor, visible);
    }
    return null;
  }",java,"public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible) {
    if (cv != null) {
      return cv.visitAnnotation(descriptor, visible);
    }
    return null;
  }","['public', 'AnnotationVisitor', 'visitAnnotation', '(', 'final', 'String', 'descriptor', ',', 'final', 'boolean', 'visible', ')', '{', 'if', '(', 'cv', '!=', 'null', ')', '{', 'return', 'cv', '.', 'visitAnnotation', '(', 'descriptor', ',', 'visible', ')', ';', '}', 'return', 'null', ';', '}']","Visits an annotation of the class.

@param descriptor the class descriptor of the annotation class.
@param visible {@literal true} if the annotation is visible at runtime.
@return a visitor to visit the annotation values, or {@literal null} if this visitor is not
interested in visiting this annotation.","['Visits', 'an', 'annotation', 'of', 'the', 'class', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/ClassVisitor.java#L181-L186,test
stanfy/enroscar,net/src/main/java/com/stanfy/enroscar/net/cache/Md5.java,Md5.getMd5,"public static String getMd5(final String text)  {
    try {

      final MessageDigest md = MessageDigest.getInstance(""MD5"");
      final byte[] utf8Bytes = text.getBytes(UTF_8_NAME);
      md.update(utf8Bytes, 0, utf8Bytes.length);
      final byte[] md5hash = md.digest();
      final int radix = 16;
      final int length = 32;

      final StringBuilder result = new StringBuilder(length).append(new BigInteger(1, md5hash).toString(radix));

      final int zeroBeginLen = length - result.length();
      if (zeroBeginLen > 0) {
        final char [] zeroBegin = new char[zeroBeginLen];
        Arrays.fill(zeroBegin, Character.forDigit(0, radix));
        result.insert(0, zeroBegin);
      }

      return result.toString();

    } catch (final NoSuchAlgorithmException|UnsupportedEncodingException e) {
      throw new AssertionError(e);
    }
  }",java,"public static String getMd5(final String text)  {
    try {

      final MessageDigest md = MessageDigest.getInstance(""MD5"");
      final byte[] utf8Bytes = text.getBytes(UTF_8_NAME);
      md.update(utf8Bytes, 0, utf8Bytes.length);
      final byte[] md5hash = md.digest();
      final int radix = 16;
      final int length = 32;

      final StringBuilder result = new StringBuilder(length).append(new BigInteger(1, md5hash).toString(radix));

      final int zeroBeginLen = length - result.length();
      if (zeroBeginLen > 0) {
        final char [] zeroBegin = new char[zeroBeginLen];
        Arrays.fill(zeroBegin, Character.forDigit(0, radix));
        result.insert(0, zeroBegin);
      }

      return result.toString();

    } catch (final NoSuchAlgorithmException|UnsupportedEncodingException e) {
      throw new AssertionError(e);
    }
  }","['public', 'static', 'String', 'getMd5', '(', 'final', 'String', 'text', ')', '{', 'try', '{', 'final', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '""MD5""', ')', ';', 'final', 'byte', '[', ']', 'utf8Bytes', '=', 'text', '.', 'getBytes', '(', 'UTF_8_NAME', ')', ';', 'md', '.', 'update', '(', 'utf8Bytes', ',', '0', ',', 'utf8Bytes', '.', 'length', ')', ';', 'final', 'byte', '[', ']', 'md5hash', '=', 'md', '.', 'digest', '(', ')', ';', 'final', 'int', 'radix', '=', '16', ';', 'final', 'int', 'length', '=', '32', ';', 'final', 'StringBuilder', 'result', '=', 'new', 'StringBuilder', '(', 'length', ')', '.', 'append', '(', 'new', 'BigInteger', '(', '1', ',', 'md5hash', ')', '.', 'toString', '(', 'radix', ')', ')', ';', 'final', 'int', 'zeroBeginLen', '=', 'length', '-', 'result', '.', 'length', '(', ')', ';', 'if', '(', 'zeroBeginLen', '>', '0', ')', '{', 'final', 'char', '[', ']', 'zeroBegin', '=', 'new', 'char', '[', 'zeroBeginLen', ']', ';', 'Arrays', '.', 'fill', '(', 'zeroBegin', ',', 'Character', '.', 'forDigit', '(', '0', ',', 'radix', ')', ')', ';', 'result', '.', 'insert', '(', '0', ',', 'zeroBegin', ')', ';', '}', 'return', 'result', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', '|', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'AssertionError', '(', 'e', ')', ';', '}', '}']","Calculate 32 bytes length MD5 digest.
@param text input text
@return MD5 digest","['Calculate', '32', 'bytes', 'length', 'MD5', 'digest', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/net/src/main/java/com/stanfy/enroscar/net/cache/Md5.java#L21-L45,test
RestComm/jain-slee,container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java,ActivityContextImpl.detachSbbEntity,"public void detachSbbEntity(SbbEntityID sbbEntityId)
			throws javax.slee.TransactionRequiredLocalException {

		boolean detached = cacheData.detachSbbEntity(sbbEntityId);

		if (detached && acReferencesHandler != null && !isEnding()) {
			acReferencesHandler.sbbeReferenceRemoved();
			if (logger.isTraceEnabled()) {
				logger.trace(""Detached sbb entity "" + sbbEntityId
						+ "" from AC with handle "" + getActivityContextHandle());
			}
		}
	}",java,"public void detachSbbEntity(SbbEntityID sbbEntityId)
			throws javax.slee.TransactionRequiredLocalException {

		boolean detached = cacheData.detachSbbEntity(sbbEntityId);

		if (detached && acReferencesHandler != null && !isEnding()) {
			acReferencesHandler.sbbeReferenceRemoved();
			if (logger.isTraceEnabled()) {
				logger.trace(""Detached sbb entity "" + sbbEntityId
						+ "" from AC with handle "" + getActivityContextHandle());
			}
		}
	}","['public', 'void', 'detachSbbEntity', '(', 'SbbEntityID', 'sbbEntityId', ')', 'throws', 'javax', '.', 'slee', '.', 'TransactionRequiredLocalException', '{', 'boolean', 'detached', '=', 'cacheData', '.', 'detachSbbEntity', '(', 'sbbEntityId', ')', ';', 'if', '(', 'detached', '&&', 'acReferencesHandler', '!=', 'null', '&&', '!', 'isEnding', '(', ')', ')', '{', 'acReferencesHandler', '.', 'sbbeReferenceRemoved', '(', ')', ';', 'if', '(', 'logger', '.', 'isTraceEnabled', '(', ')', ')', '{', 'logger', '.', 'trace', '(', '""Detached sbb entity ""', '+', 'sbbEntityId', '+', '"" from AC with handle ""', '+', 'getActivityContextHandle', '(', ')', ')', ';', '}', '}', '}']","Detach the sbb entity

@param sbbEntityId","['Detach', 'the', 'sbb', 'entity']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java#L375-L387,test
oblac/jodd,jodd-mail/src/main/java/jodd/mail/EmailAttachmentBuilder.java,EmailAttachmentBuilder.setContentIdFromNameIfMissing,"protected EmailAttachmentBuilder setContentIdFromNameIfMissing() {
		if (contentId == null) {
			if (name != null) {
				contentId(FileNameUtil.getName(name));
			} else {
				contentId(NO_NAME);
			}
		}
		return this;
	}",java,"protected EmailAttachmentBuilder setContentIdFromNameIfMissing() {
		if (contentId == null) {
			if (name != null) {
				contentId(FileNameUtil.getName(name));
			} else {
				contentId(NO_NAME);
			}
		}
		return this;
	}","['protected', 'EmailAttachmentBuilder', 'setContentIdFromNameIfMissing', '(', ')', '{', 'if', '(', 'contentId', '==', 'null', ')', '{', 'if', '(', 'name', '!=', 'null', ')', '{', 'contentId', '(', 'FileNameUtil', '.', 'getName', '(', 'name', ')', ')', ';', '}', 'else', '{', 'contentId', '(', 'NO_NAME', ')', ';', '}', '}', 'return', 'this', ';', '}']","Set content ID if it is missing.

@return this
@see #contentId(String)","['Set', 'content', 'ID', 'if', 'it', 'is', 'missing', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/EmailAttachmentBuilder.java#L262-L271,test
oblac/jodd,jodd-decora/src/main/java/jodd/decora/parser/DecoraParser.java,DecoraParser.writeDecoratedPage,"protected void writeDecoratedPage(final Writer out, final char[] decoratorContent, final char[] pageContent, final DecoraTag[] decoraTags) throws IOException {
		int ndx = 0;

		for (DecoraTag decoraTag : decoraTags) {
			// [1] just copy content before the Decora tag
			int decoratorLen = decoraTag.getStartIndex() - ndx;
			if (decoratorLen <= 0) {
				continue;
			}
			out.write(decoratorContent, ndx, decoratorLen);

			ndx = decoraTag.getEndIndex();

			// [2] now write region at the place of Decora tag
			int regionLen = decoraTag.getRegionLength();

			if (regionLen == 0) {
				if (decoraTag.hasDefaultValue()) {
					out.write(decoratorContent, decoraTag.getDefaultValueStart(), decoraTag.getDefaultValueLength());
				}
			} else {
				writeRegion(out, pageContent, decoraTag, decoraTags);
			}

		}

		// write remaining content
		out.write(decoratorContent, ndx, decoratorContent.length - ndx);
	}",java,"protected void writeDecoratedPage(final Writer out, final char[] decoratorContent, final char[] pageContent, final DecoraTag[] decoraTags) throws IOException {
		int ndx = 0;

		for (DecoraTag decoraTag : decoraTags) {
			// [1] just copy content before the Decora tag
			int decoratorLen = decoraTag.getStartIndex() - ndx;
			if (decoratorLen <= 0) {
				continue;
			}
			out.write(decoratorContent, ndx, decoratorLen);

			ndx = decoraTag.getEndIndex();

			// [2] now write region at the place of Decora tag
			int regionLen = decoraTag.getRegionLength();

			if (regionLen == 0) {
				if (decoraTag.hasDefaultValue()) {
					out.write(decoratorContent, decoraTag.getDefaultValueStart(), decoraTag.getDefaultValueLength());
				}
			} else {
				writeRegion(out, pageContent, decoraTag, decoraTags);
			}

		}

		// write remaining content
		out.write(decoratorContent, ndx, decoratorContent.length - ndx);
	}","['protected', 'void', 'writeDecoratedPage', '(', 'final', 'Writer', 'out', ',', 'final', 'char', '[', ']', 'decoratorContent', ',', 'final', 'char', '[', ']', 'pageContent', ',', 'final', 'DecoraTag', '[', ']', 'decoraTags', ')', 'throws', 'IOException', '{', 'int', 'ndx', '=', '0', ';', 'for', '(', 'DecoraTag', 'decoraTag', ':', 'decoraTags', ')', '{', '// [1] just copy content before the Decora tag', 'int', 'decoratorLen', '=', 'decoraTag', '.', 'getStartIndex', '(', ')', '-', 'ndx', ';', 'if', '(', 'decoratorLen', '<=', '0', ')', '{', 'continue', ';', '}', 'out', '.', 'write', '(', 'decoratorContent', ',', 'ndx', ',', 'decoratorLen', ')', ';', 'ndx', '=', 'decoraTag', '.', 'getEndIndex', '(', ')', ';', '// [2] now write region at the place of Decora tag', 'int', 'regionLen', '=', 'decoraTag', '.', 'getRegionLength', '(', ')', ';', 'if', '(', 'regionLen', '==', '0', ')', '{', 'if', '(', 'decoraTag', '.', 'hasDefaultValue', '(', ')', ')', '{', 'out', '.', 'write', '(', 'decoratorContent', ',', 'decoraTag', '.', 'getDefaultValueStart', '(', ')', ',', 'decoraTag', '.', 'getDefaultValueLength', '(', ')', ')', ';', '}', '}', 'else', '{', 'writeRegion', '(', 'out', ',', 'pageContent', ',', 'decoraTag', ',', 'decoraTags', ')', ';', '}', '}', '// write remaining content', 'out', '.', 'write', '(', 'decoratorContent', ',', 'ndx', ',', 'decoratorContent', '.', 'length', '-', 'ndx', ')', ';', '}']",Writes decorated content.,"['Writes', 'decorated', 'content', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-decora/src/main/java/jodd/decora/parser/DecoraParser.java#L77-L105,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java,JspUtil.getTagHandlerClassName,"public static String getTagHandlerClassName(String path,
						ErrorDispatcher err)
                throws JasperException {

        String className = null;
        int begin = 0;
        int index;
        
        index = path.lastIndexOf("".tag"");
        if (index == -1) {
            err.jspError(""jsp.error.tagfile.badSuffix"", path);
        }

        //It's tempting to remove the "".tag"" suffix here, but we can't.
        //If we remove it, the fully-qualified class name of this tag
        //could conflict with the package name of other tags.
        //For instance, the tag file
        //    /WEB-INF/tags/foo.tag
        //would have fully-qualified class name
        //    org.apache.jsp.tag.web.foo
        //which would conflict with the package name of the tag file
        //    /WEB-INF/tags/foo/bar.tag

        index = path.indexOf(WEB_INF_TAGS);
        if (index != -1) {
            className = ""org.apache.jsp.tag.web."";
            begin = index + WEB_INF_TAGS.length();
        } else {
	    index = path.indexOf(META_INF_TAGS);
	    if (index != -1) {
		className = ""org.apache.jsp.tag.meta."";
		begin = index + META_INF_TAGS.length();
	    } else {
		err.jspError(""jsp.error.tagfile.illegalPath"", path);
	    }
	}

        className += makeJavaPackage(path.substring(begin));
  
       return className;
    }",java,"public static String getTagHandlerClassName(String path,
						ErrorDispatcher err)
                throws JasperException {

        String className = null;
        int begin = 0;
        int index;
        
        index = path.lastIndexOf("".tag"");
        if (index == -1) {
            err.jspError(""jsp.error.tagfile.badSuffix"", path);
        }

        //It's tempting to remove the "".tag"" suffix here, but we can't.
        //If we remove it, the fully-qualified class name of this tag
        //could conflict with the package name of other tags.
        //For instance, the tag file
        //    /WEB-INF/tags/foo.tag
        //would have fully-qualified class name
        //    org.apache.jsp.tag.web.foo
        //which would conflict with the package name of the tag file
        //    /WEB-INF/tags/foo/bar.tag

        index = path.indexOf(WEB_INF_TAGS);
        if (index != -1) {
            className = ""org.apache.jsp.tag.web."";
            begin = index + WEB_INF_TAGS.length();
        } else {
	    index = path.indexOf(META_INF_TAGS);
	    if (index != -1) {
		className = ""org.apache.jsp.tag.meta."";
		begin = index + META_INF_TAGS.length();
	    } else {
		err.jspError(""jsp.error.tagfile.illegalPath"", path);
	    }
	}

        className += makeJavaPackage(path.substring(begin));
  
       return className;
    }","['public', 'static', 'String', 'getTagHandlerClassName', '(', 'String', 'path', ',', 'ErrorDispatcher', 'err', ')', 'throws', 'JasperException', '{', 'String', 'className', '=', 'null', ';', 'int', 'begin', '=', '0', ';', 'int', 'index', ';', 'index', '=', 'path', '.', 'lastIndexOf', '(', '"".tag""', ')', ';', 'if', '(', 'index', '==', '-', '1', ')', '{', 'err', '.', 'jspError', '(', '""jsp.error.tagfile.badSuffix""', ',', 'path', ')', ';', '}', '//It\'s tempting to remove the "".tag"" suffix here, but we can\'t.', '//If we remove it, the fully-qualified class name of this tag', '//could conflict with the package name of other tags.', '//For instance, the tag file', '//    /WEB-INF/tags/foo.tag', '//would have fully-qualified class name', '//    org.apache.jsp.tag.web.foo', '//which would conflict with the package name of the tag file', '//    /WEB-INF/tags/foo/bar.tag', 'index', '=', 'path', '.', 'indexOf', '(', 'WEB_INF_TAGS', ')', ';', 'if', '(', 'index', '!=', '-', '1', ')', '{', 'className', '=', '""org.apache.jsp.tag.web.""', ';', 'begin', '=', 'index', '+', 'WEB_INF_TAGS', '.', 'length', '(', ')', ';', '}', 'else', '{', 'index', '=', 'path', '.', 'indexOf', '(', 'META_INF_TAGS', ')', ';', 'if', '(', 'index', '!=', '-', '1', ')', '{', 'className', '=', '""org.apache.jsp.tag.meta.""', ';', 'begin', '=', 'index', '+', 'META_INF_TAGS', '.', 'length', '(', ')', ';', '}', 'else', '{', 'err', '.', 'jspError', '(', '""jsp.error.tagfile.illegalPath""', ',', 'path', ')', ';', '}', '}', 'className', '+=', 'makeJavaPackage', '(', 'path', '.', 'substring', '(', 'begin', ')', ')', ';', 'return', 'className', ';', '}']","Gets the fully-qualified class name of the tag handler corresponding to
the given tag file path.

@param path Tag file path
@param err Error dispatcher

@return Fully-qualified class name of the tag handler corresponding to
the given tag file path","['Gets', 'the', 'fully', '-', 'qualified', 'class', 'name', 'of', 'the', 'tag', 'handler', 'corresponding', 'to', 'the', 'given', 'tag', 'file', 'path', '.']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java#L933-L973,test
real-logic/aeron,aeron-cluster/src/main/java/io/aeron/cluster/RecordingLog.java,RecordingLog.tombstoneEntry,"public void tombstoneEntry(final long leadershipTermId, final int entryIndex)
    {
        int index = -1;
        for (int i = 0, size = entries.size(); i < size; i++)
        {
            final Entry entry = entries.get(i);
            if (entry.leadershipTermId == leadershipTermId && entry.entryIndex == entryIndex)
            {
                index = entry.entryIndex;

                if (ENTRY_TYPE_TERM == entry.type)
                {
                    indexByLeadershipTermIdMap.remove(leadershipTermId);
                }

                break;
            }
        }

        if (-1 == index)
        {
            throw new ClusterException(""unknown entry index: "" + entryIndex);
        }

        buffer.putInt(0, NULL_VALUE, LITTLE_ENDIAN);
        byteBuffer.limit(SIZE_OF_INT).position(0);
        final long filePosition = (index * (long)ENTRY_LENGTH) + ENTRY_TYPE_OFFSET;

        try
        {
            if (SIZE_OF_INT != fileChannel.write(byteBuffer, filePosition))
            {
                throw new ClusterException(""failed to write field atomically"");
            }
        }
        catch (final Exception ex)
        {
            LangUtil.rethrowUnchecked(ex);
        }
    }",java,"public void tombstoneEntry(final long leadershipTermId, final int entryIndex)
    {
        int index = -1;
        for (int i = 0, size = entries.size(); i < size; i++)
        {
            final Entry entry = entries.get(i);
            if (entry.leadershipTermId == leadershipTermId && entry.entryIndex == entryIndex)
            {
                index = entry.entryIndex;

                if (ENTRY_TYPE_TERM == entry.type)
                {
                    indexByLeadershipTermIdMap.remove(leadershipTermId);
                }

                break;
            }
        }

        if (-1 == index)
        {
            throw new ClusterException(""unknown entry index: "" + entryIndex);
        }

        buffer.putInt(0, NULL_VALUE, LITTLE_ENDIAN);
        byteBuffer.limit(SIZE_OF_INT).position(0);
        final long filePosition = (index * (long)ENTRY_LENGTH) + ENTRY_TYPE_OFFSET;

        try
        {
            if (SIZE_OF_INT != fileChannel.write(byteBuffer, filePosition))
            {
                throw new ClusterException(""failed to write field atomically"");
            }
        }
        catch (final Exception ex)
        {
            LangUtil.rethrowUnchecked(ex);
        }
    }","['public', 'void', 'tombstoneEntry', '(', 'final', 'long', 'leadershipTermId', ',', 'final', 'int', 'entryIndex', ')', '{', 'int', 'index', '=', '-', '1', ';', 'for', '(', 'int', 'i', '=', '0', ',', 'size', '=', 'entries', '.', 'size', '(', ')', ';', 'i', '<', 'size', ';', 'i', '++', ')', '{', 'final', 'Entry', 'entry', '=', 'entries', '.', 'get', '(', 'i', ')', ';', 'if', '(', 'entry', '.', 'leadershipTermId', '==', 'leadershipTermId', '&&', 'entry', '.', 'entryIndex', '==', 'entryIndex', ')', '{', 'index', '=', 'entry', '.', 'entryIndex', ';', 'if', '(', 'ENTRY_TYPE_TERM', '==', 'entry', '.', 'type', ')', '{', 'indexByLeadershipTermIdMap', '.', 'remove', '(', 'leadershipTermId', ')', ';', '}', 'break', ';', '}', '}', 'if', '(', '-', '1', '==', 'index', ')', '{', 'throw', 'new', 'ClusterException', '(', '""unknown entry index: ""', '+', 'entryIndex', ')', ';', '}', 'buffer', '.', 'putInt', '(', '0', ',', 'NULL_VALUE', ',', 'LITTLE_ENDIAN', ')', ';', 'byteBuffer', '.', 'limit', '(', 'SIZE_OF_INT', ')', '.', 'position', '(', '0', ')', ';', 'final', 'long', 'filePosition', '=', '(', 'index', '*', '(', 'long', ')', 'ENTRY_LENGTH', ')', '+', 'ENTRY_TYPE_OFFSET', ';', 'try', '{', 'if', '(', 'SIZE_OF_INT', '!=', 'fileChannel', '.', 'write', '(', 'byteBuffer', ',', 'filePosition', ')', ')', '{', 'throw', 'new', 'ClusterException', '(', '""failed to write field atomically""', ')', ';', '}', '}', 'catch', '(', 'final', 'Exception', 'ex', ')', '{', 'LangUtil', '.', 'rethrowUnchecked', '(', 'ex', ')', ';', '}', '}']","Tombstone an entry in the log so it is no longer valid.

@param leadershipTermId to match for validation.
@param entryIndex       reached in the leadership term.","['Tombstone', 'an', 'entry', 'in', 'the', 'log', 'so', 'it', 'is', 'no', 'longer', 'valid', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-cluster/src/main/java/io/aeron/cluster/RecordingLog.java#L756-L795,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,FeatureStyleExtension.setIconDefault,"public void setIconDefault(FeatureRow featureRow, IconRow icon) {
        setIcon(featureRow.getTable().getTableName(), featureRow.getId(), null,
                icon);
    }",java,"public void setIconDefault(FeatureRow featureRow, IconRow icon) {
        setIcon(featureRow.getTable().getTableName(), featureRow.getId(), null,
                icon);
    }","['public', 'void', 'setIconDefault', '(', 'FeatureRow', 'featureRow', ',', 'IconRow', 'icon', ')', '{', 'setIcon', '(', 'featureRow', '.', 'getTable', '(', ')', '.', 'getTableName', '(', ')', ',', 'featureRow', '.', 'getId', '(', ')', ',', 'null', ',', 'icon', ')', ';', '}']","Set the default icon of the feature row

@param featureRow feature row
@param icon       icon row","['Set', 'the', 'default', 'icon', 'of', 'the', 'feature', 'row']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L1240-L1243,test
wildfly/wildfly,ejb3/src/main/java/org/jboss/as/ejb3/deployment/ApplicableMethodInformation.java,ApplicableMethodInformation.isMethodLevel,"public boolean isMethodLevel(MethodIntf methodIntf, Method method, MethodIntf defaultMethodIntf) {
        assert methodIntf != null : ""methodIntf is null"";
        assert method != null : ""method is null"";

        Method classMethod = resolveRealMethod(method);
        String[] methodParams = MethodInfoHelper.getCanonicalParameterTypes(classMethod);
        final String methodName = classMethod.getName();
        final String className = classMethod.getDeclaringClass().getName();

        ArrayKey methodParamsKey = new ArrayKey((Object[]) methodParams);
        T attr = get(get(get(perViewStyle3, methodIntf), methodName), methodParamsKey);
        if (attr != null)
            return true;
        attr = get(get(perViewStyle2, methodIntf), methodName);
        if (attr != null)
            return true;
        attr = get(perViewStyle1, methodIntf);
        if (attr != null)
            return false;
        attr = get(get(get(style3, className), methodName), methodParamsKey);
        if (attr != null)
            return true;
        attr = get(style2, methodName);
        if (attr != null)
            return true;
        attr = get(style1, className);
        if (attr != null)
            return false;
        if(defaultMethodIntf == null) {
            return false;
        } else {
            return isMethodLevel(defaultMethodIntf, method, null);
        }
    }",java,"public boolean isMethodLevel(MethodIntf methodIntf, Method method, MethodIntf defaultMethodIntf) {
        assert methodIntf != null : ""methodIntf is null"";
        assert method != null : ""method is null"";

        Method classMethod = resolveRealMethod(method);
        String[] methodParams = MethodInfoHelper.getCanonicalParameterTypes(classMethod);
        final String methodName = classMethod.getName();
        final String className = classMethod.getDeclaringClass().getName();

        ArrayKey methodParamsKey = new ArrayKey((Object[]) methodParams);
        T attr = get(get(get(perViewStyle3, methodIntf), methodName), methodParamsKey);
        if (attr != null)
            return true;
        attr = get(get(perViewStyle2, methodIntf), methodName);
        if (attr != null)
            return true;
        attr = get(perViewStyle1, methodIntf);
        if (attr != null)
            return false;
        attr = get(get(get(style3, className), methodName), methodParamsKey);
        if (attr != null)
            return true;
        attr = get(style2, methodName);
        if (attr != null)
            return true;
        attr = get(style1, className);
        if (attr != null)
            return false;
        if(defaultMethodIntf == null) {
            return false;
        } else {
            return isMethodLevel(defaultMethodIntf, method, null);
        }
    }","['public', 'boolean', 'isMethodLevel', '(', 'MethodIntf', 'methodIntf', ',', 'Method', 'method', ',', 'MethodIntf', 'defaultMethodIntf', ')', '{', 'assert', 'methodIntf', '!=', 'null', ':', '""methodIntf is null""', ';', 'assert', 'method', '!=', 'null', ':', '""method is null""', ';', 'Method', 'classMethod', '=', 'resolveRealMethod', '(', 'method', ')', ';', 'String', '[', ']', 'methodParams', '=', 'MethodInfoHelper', '.', 'getCanonicalParameterTypes', '(', 'classMethod', ')', ';', 'final', 'String', 'methodName', '=', 'classMethod', '.', 'getName', '(', ')', ';', 'final', 'String', 'className', '=', 'classMethod', '.', 'getDeclaringClass', '(', ')', '.', 'getName', '(', ')', ';', 'ArrayKey', 'methodParamsKey', '=', 'new', 'ArrayKey', '(', '(', 'Object', '[', ']', ')', 'methodParams', ')', ';', 'T', 'attr', '=', 'get', '(', 'get', '(', 'get', '(', 'perViewStyle3', ',', 'methodIntf', ')', ',', 'methodName', ')', ',', 'methodParamsKey', ')', ';', 'if', '(', 'attr', '!=', 'null', ')', 'return', 'true', ';', 'attr', '=', 'get', '(', 'get', '(', 'perViewStyle2', ',', 'methodIntf', ')', ',', 'methodName', ')', ';', 'if', '(', 'attr', '!=', 'null', ')', 'return', 'true', ';', 'attr', '=', 'get', '(', 'perViewStyle1', ',', 'methodIntf', ')', ';', 'if', '(', 'attr', '!=', 'null', ')', 'return', 'false', ';', 'attr', '=', 'get', '(', 'get', '(', 'get', '(', 'style3', ',', 'className', ')', ',', 'methodName', ')', ',', 'methodParamsKey', ')', ';', 'if', '(', 'attr', '!=', 'null', ')', 'return', 'true', ';', 'attr', '=', 'get', '(', 'style2', ',', 'methodName', ')', ';', 'if', '(', 'attr', '!=', 'null', ')', 'return', 'true', ';', 'attr', '=', 'get', '(', 'style1', ',', 'className', ')', ';', 'if', '(', 'attr', '!=', 'null', ')', 'return', 'false', ';', 'if', '(', 'defaultMethodIntf', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'return', 'isMethodLevel', '(', 'defaultMethodIntf', ',', 'method', ',', 'null', ')', ';', '}', '}']","Returns true if the given transaction specification was expliitly specified at a method level, returns
false if it was inherited from the default","['Returns', 'true', 'if', 'the', 'given', 'transaction', 'specification', 'was', 'expliitly', 'specified', 'at', 'a', 'method', 'level', 'returns', 'false', 'if', 'it', 'was', 'inherited', 'from', 'the', 'default']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ejb3/src/main/java/org/jboss/as/ejb3/deployment/ApplicableMethodInformation.java#L326-L359,test
square/retrofit,retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java,NetworkBehavior.createErrorResponse,"public Response<?> createErrorResponse() {
    Response<?> call;
    try {
      call = errorFactory.call();
    } catch (Exception e) {
      throw new IllegalStateException(""Error factory threw an exception."", e);
    }
    if (call == null) {
      throw new IllegalStateException(""Error factory returned null."");
    }
    if (call.isSuccessful()) {
      throw new IllegalStateException(""Error factory returned successful response."");
    }
    return call;
  }",java,"public Response<?> createErrorResponse() {
    Response<?> call;
    try {
      call = errorFactory.call();
    } catch (Exception e) {
      throw new IllegalStateException(""Error factory threw an exception."", e);
    }
    if (call == null) {
      throw new IllegalStateException(""Error factory returned null."");
    }
    if (call.isSuccessful()) {
      throw new IllegalStateException(""Error factory returned successful response."");
    }
    return call;
  }","['public', 'Response', '<', '?', '>', 'createErrorResponse', '(', ')', '{', 'Response', '<', '?', '>', 'call', ';', 'try', '{', 'call', '=', 'errorFactory', '.', 'call', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Error factory threw an exception.""', ',', 'e', ')', ';', '}', 'if', '(', 'call', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Error factory returned null.""', ')', ';', '}', 'if', '(', 'call', '.', 'isSuccessful', '(', ')', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""Error factory returned successful response.""', ')', ';', '}', 'return', 'call', ';', '}']",The HTTP error to be used when an error is triggered.,"['The', 'HTTP', 'error', 'to', 'be', 'used', 'when', 'an', 'error', 'is', 'triggered', '.']",81a6193a7b3f2b1bf25e78adc2638681b0514fe8,https://github.com/square/retrofit/blob/81a6193a7b3f2b1bf25e78adc2638681b0514fe8/retrofit-mock/src/main/java/retrofit2/mock/NetworkBehavior.java#L161-L175,test
oblac/jodd,jodd-db/src/main/java/jodd/db/oom/dao/GenericDao.java,GenericDao.decreaseProperty,"public <ID> void decreaseProperty(final Class entityType, final ID id, final String name, final Number delta) {
		query(dbOom.entities().increaseColumn(entityType, id, name, delta, false)).autoClose().executeUpdate();
	}",java,"public <ID> void decreaseProperty(final Class entityType, final ID id, final String name, final Number delta) {
		query(dbOom.entities().increaseColumn(entityType, id, name, delta, false)).autoClose().executeUpdate();
	}","['public', '<', 'ID', '>', 'void', 'decreaseProperty', '(', 'final', 'Class', 'entityType', ',', 'final', 'ID', 'id', ',', 'final', 'String', 'name', ',', 'final', 'Number', 'delta', ')', '{', 'query', '(', 'dbOom', '.', 'entities', '(', ')', '.', 'increaseColumn', '(', 'entityType', ',', 'id', ',', 'name', ',', 'delta', ',', 'false', ')', ')', '.', 'autoClose', '(', ')', '.', 'executeUpdate', '(', ')', ';', '}']",Decreases a property.,"['Decreases', 'a', 'property', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/oom/dao/GenericDao.java#L269-L271,test
streamsets/datacollector,apache-kafka_0_9-lib/src/main/java/org/apache/kafka/common/security/kerberos/LoginManager.java,LoginManager.acquireLoginManager,"public static final LoginManager acquireLoginManager(LoginType loginType, Map<String, ?> configs) throws IOException, LoginException {
        synchronized (LoginManager.class) {
            LoginManager loginManager = CACHED_INSTANCES.get(loginType);
            if (loginManager == null) {
                loginManager = new LoginManager(loginType, configs);
                CACHED_INSTANCES.put(loginType, loginManager);
            }
            return loginManager.acquire();
        }
    }",java,"public static final LoginManager acquireLoginManager(LoginType loginType, Map<String, ?> configs) throws IOException, LoginException {
        synchronized (LoginManager.class) {
            LoginManager loginManager = CACHED_INSTANCES.get(loginType);
            if (loginManager == null) {
                loginManager = new LoginManager(loginType, configs);
                CACHED_INSTANCES.put(loginType, loginManager);
            }
            return loginManager.acquire();
        }
    }","['public', 'static', 'final', 'LoginManager', 'acquireLoginManager', '(', 'LoginType', 'loginType', ',', 'Map', '<', 'String', ',', '?', '>', 'configs', ')', 'throws', 'IOException', ',', 'LoginException', '{', 'synchronized', '(', 'LoginManager', '.', 'class', ')', '{', 'LoginManager', 'loginManager', '=', 'CACHED_INSTANCES', '.', 'get', '(', 'loginType', ')', ';', 'if', '(', 'loginManager', '==', 'null', ')', '{', 'loginManager', '=', 'new', 'LoginManager', '(', 'loginType', ',', 'configs', ')', ';', 'CACHED_INSTANCES', '.', 'put', '(', 'loginType', ',', 'loginManager', ')', ';', '}', 'return', 'loginManager', '.', 'acquire', '(', ')', ';', '}', '}']","Returns an instance of `LoginManager` and increases its reference count.

`release()` should be invoked when the `LoginManager` is no longer needed. This method will try to reuse an
existing `LoginManager` for the provided `mode` if available. However, it expects `configs` to be the same for
every invocation and it will ignore them in the case where it's returning a cached instance of `LoginManager`.

This is a bit ugly and it would be nicer if we could pass the `LoginManager` to `ChannelBuilders.create` and
shut it down when the broker or clients are closed. It's straightforward to do the former, but it's more
complicated to do the latter without making the consumer API more complex.

@param loginType the type of the login context, it should be SERVER for the broker and CLIENT for the clients
(i.e. consumer and producer)
@param configs configuration as key/value pairs","['Returns', 'an', 'instance', 'of', 'LoginManager', 'and', 'increases', 'its', 'reference', 'count', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/apache-kafka_0_9-lib/src/main/java/org/apache/kafka/common/security/kerberos/LoginManager.java#L94-L103,test
moparisthebest/aptIn16,apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java,DeclarationFilter.and,"public DeclarationFilter and(DeclarationFilter f) {
		final DeclarationFilter f1 = this;
		final DeclarationFilter f2 = f;
		return new DeclarationFilter() {
			public boolean matches(Declaration d) {
				return f1.matches(d) && f2.matches(d);
			}
		};
	}",java,"public DeclarationFilter and(DeclarationFilter f) {
		final DeclarationFilter f1 = this;
		final DeclarationFilter f2 = f;
		return new DeclarationFilter() {
			public boolean matches(Declaration d) {
				return f1.matches(d) && f2.matches(d);
			}
		};
	}","['public', 'DeclarationFilter', 'and', '(', 'DeclarationFilter', 'f', ')', '{', 'final', 'DeclarationFilter', 'f1', '=', 'this', ';', 'final', 'DeclarationFilter', 'f2', '=', 'f', ';', 'return', 'new', 'DeclarationFilter', '(', ')', '{', 'public', 'boolean', 'matches', '(', 'Declaration', 'd', ')', '{', 'return', 'f1', '.', 'matches', '(', 'd', ')', '&&', 'f2', '.', 'matches', '(', 'd', ')', ';', '}', '}', ';', '}']","Returns a filter that selects those declarations selected
by both this filter and another.

@param f filter to be composed with this one
@return a filter that selects those declarations selected by
both this filter and another","['Returns', 'a', 'filter', 'that', 'selects', 'those', 'declarations', 'selected', 'by', 'both', 'this', 'filter', 'and', 'another', '.']",de38f7add09e69cb5ff970d1bada079a162358e7,https://github.com/moparisthebest/aptIn16/blob/de38f7add09e69cb5ff970d1bada079a162358e7/apt-mirror-api/src/main/java/com/sun/mirror/util/DeclarationFilter.java#L174-L182,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java,FeatureStyleExtension.setIcons,"public void setIcons(String featureTable, long featureId, Icons icons) {
        deleteIcons(featureTable, featureId);

        if (icons != null) {

            if (icons.getDefault() != null) {
                setIconDefault(featureTable, featureId, icons.getDefault());
            }

            for (Entry<GeometryType, IconRow> icon : icons.getIcons()
                    .entrySet()) {
                setIcon(featureTable, featureId, icon.getKey(), icon.getValue());
            }

        }
    }",java,"public void setIcons(String featureTable, long featureId, Icons icons) {
        deleteIcons(featureTable, featureId);

        if (icons != null) {

            if (icons.getDefault() != null) {
                setIconDefault(featureTable, featureId, icons.getDefault());
            }

            for (Entry<GeometryType, IconRow> icon : icons.getIcons()
                    .entrySet()) {
                setIcon(featureTable, featureId, icon.getKey(), icon.getValue());
            }

        }
    }","['public', 'void', 'setIcons', '(', 'String', 'featureTable', ',', 'long', 'featureId', ',', 'Icons', 'icons', ')', '{', 'deleteIcons', '(', 'featureTable', ',', 'featureId', ')', ';', 'if', '(', 'icons', '!=', 'null', ')', '{', 'if', '(', 'icons', '.', 'getDefault', '(', ')', '!=', 'null', ')', '{', 'setIconDefault', '(', 'featureTable', ',', 'featureId', ',', 'icons', '.', 'getDefault', '(', ')', ')', ';', '}', 'for', '(', 'Entry', '<', 'GeometryType', ',', 'IconRow', '>', 'icon', ':', 'icons', '.', 'getIcons', '(', ')', '.', 'entrySet', '(', ')', ')', '{', 'setIcon', '(', 'featureTable', ',', 'featureId', ',', 'icon', '.', 'getKey', '(', ')', ',', 'icon', '.', 'getValue', '(', ')', ')', ';', '}', '}', '}']","Set the icons for the feature table and feature id

@param featureTable feature table
@param featureId    feature id
@param icons        icons","['Set', 'the', 'icons', 'for', 'the', 'feature', 'table', 'and', 'feature', 'id']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L1194-L1209,test
wildfly/wildfly,webservices/server-integration/src/main/java/org/jboss/as/webservices/deployers/deployment/AbstractDeploymentModelBuilder.java,AbstractDeploymentModelBuilder.newDeployment,"private ArchiveDeployment newDeployment(final DeploymentUnit unit) {
        WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit);
        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);
        final VirtualFile root = deploymentRoot != null ? deploymentRoot.getRoot() : null;
        final ClassLoader classLoader;
        final Module module = unit.getAttachment(Attachments.MODULE);
        if (module == null) {
            classLoader = unit.getAttachment(CLASSLOADER_KEY);
            if (classLoader == null) {
                throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(unit);
            }
        } else {
            classLoader = module.getClassLoader();
        }

        ArchiveDeployment parentDep = null;
        if (unit.getParent() != null) {
            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);
            if (parentModule == null) {
                throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(deploymentRoot);
            }
            WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit.getParent());
            parentDep = this.newDeployment(null, unit.getParent().getName(), parentModule.getClassLoader(), null);
        }

        final UnifiedVirtualFile uvf = root != null ? new VirtualFileAdaptor(root) : new ResourceLoaderAdapter(classLoader);
        final ArchiveDeployment dep = this.newDeployment(parentDep, unit.getName(), classLoader, uvf);

        //add an AnnotationInfo attachment that uses composite jandex index
        dep.addAttachment(AnnotationsInfo.class, new JandexAnnotationsInfo(unit));

        return dep;
    }",java,"private ArchiveDeployment newDeployment(final DeploymentUnit unit) {
        WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit);
        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);
        final VirtualFile root = deploymentRoot != null ? deploymentRoot.getRoot() : null;
        final ClassLoader classLoader;
        final Module module = unit.getAttachment(Attachments.MODULE);
        if (module == null) {
            classLoader = unit.getAttachment(CLASSLOADER_KEY);
            if (classLoader == null) {
                throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(unit);
            }
        } else {
            classLoader = module.getClassLoader();
        }

        ArchiveDeployment parentDep = null;
        if (unit.getParent() != null) {
            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);
            if (parentModule == null) {
                throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(deploymentRoot);
            }
            WSLogger.ROOT_LOGGER.tracef(""Creating new unified WS deployment model for %s"", unit.getParent());
            parentDep = this.newDeployment(null, unit.getParent().getName(), parentModule.getClassLoader(), null);
        }

        final UnifiedVirtualFile uvf = root != null ? new VirtualFileAdaptor(root) : new ResourceLoaderAdapter(classLoader);
        final ArchiveDeployment dep = this.newDeployment(parentDep, unit.getName(), classLoader, uvf);

        //add an AnnotationInfo attachment that uses composite jandex index
        dep.addAttachment(AnnotationsInfo.class, new JandexAnnotationsInfo(unit));

        return dep;
    }","['private', 'ArchiveDeployment', 'newDeployment', '(', 'final', 'DeploymentUnit', 'unit', ')', '{', 'WSLogger', '.', 'ROOT_LOGGER', '.', 'tracef', '(', '""Creating new unified WS deployment model for %s""', ',', 'unit', ')', ';', 'final', 'ResourceRoot', 'deploymentRoot', '=', 'unit', '.', 'getAttachment', '(', 'Attachments', '.', 'DEPLOYMENT_ROOT', ')', ';', 'final', 'VirtualFile', 'root', '=', 'deploymentRoot', '!=', 'null', '?', 'deploymentRoot', '.', 'getRoot', '(', ')', ':', 'null', ';', 'final', 'ClassLoader', 'classLoader', ';', 'final', 'Module', 'module', '=', 'unit', '.', 'getAttachment', '(', 'Attachments', '.', 'MODULE', ')', ';', 'if', '(', 'module', '==', 'null', ')', '{', 'classLoader', '=', 'unit', '.', 'getAttachment', '(', 'CLASSLOADER_KEY', ')', ';', 'if', '(', 'classLoader', '==', 'null', ')', '{', 'throw', 'WSLogger', '.', 'ROOT_LOGGER', '.', 'classLoaderResolutionFailed', '(', 'unit', ')', ';', '}', '}', 'else', '{', 'classLoader', '=', 'module', '.', 'getClassLoader', '(', ')', ';', '}', 'ArchiveDeployment', 'parentDep', '=', 'null', ';', 'if', '(', 'unit', '.', 'getParent', '(', ')', '!=', 'null', ')', '{', 'final', 'Module', 'parentModule', '=', 'unit', '.', 'getParent', '(', ')', '.', 'getAttachment', '(', 'Attachments', '.', 'MODULE', ')', ';', 'if', '(', 'parentModule', '==', 'null', ')', '{', 'throw', 'WSLogger', '.', 'ROOT_LOGGER', '.', 'classLoaderResolutionFailed', '(', 'deploymentRoot', ')', ';', '}', 'WSLogger', '.', 'ROOT_LOGGER', '.', 'tracef', '(', '""Creating new unified WS deployment model for %s""', ',', 'unit', '.', 'getParent', '(', ')', ')', ';', 'parentDep', '=', 'this', '.', 'newDeployment', '(', 'null', ',', 'unit', '.', 'getParent', '(', ')', '.', 'getName', '(', ')', ',', 'parentModule', '.', 'getClassLoader', '(', ')', ',', 'null', ')', ';', '}', 'final', 'UnifiedVirtualFile', 'uvf', '=', 'root', '!=', 'null', '?', 'new', 'VirtualFileAdaptor', '(', 'root', ')', ':', 'new', 'ResourceLoaderAdapter', '(', 'classLoader', ')', ';', 'final', 'ArchiveDeployment', 'dep', '=', 'this', '.', 'newDeployment', '(', 'parentDep', ',', 'unit', '.', 'getName', '(', ')', ',', 'classLoader', ',', 'uvf', ')', ';', '//add an AnnotationInfo attachment that uses composite jandex index', 'dep', '.', 'addAttachment', '(', 'AnnotationsInfo', '.', 'class', ',', 'new', 'JandexAnnotationsInfo', '(', 'unit', ')', ')', ';', 'return', 'dep', ';', '}']","Creates new Web Service deployment.

@param unit deployment unit
@return archive deployment","['Creates', 'new', 'Web', 'Service', 'deployment', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/webservices/server-integration/src/main/java/org/jboss/as/webservices/deployers/deployment/AbstractDeploymentModelBuilder.java#L185-L217,test
abmargb/jamppa,src/main/java/org/jivesoftware/smack/SASLAuthentication.java,SASLAuthentication.getRegisterSASLMechanisms,"public static List<Class<? extends SASLMechanism>> getRegisterSASLMechanisms() {
        List<Class<? extends SASLMechanism>> answer = new ArrayList<Class<? extends SASLMechanism>>();
        for (String mechanismsPreference : mechanismsPreferences) {
            answer.add(implementedMechanisms.get(mechanismsPreference));
        }
        return answer;
    }",java,"public static List<Class<? extends SASLMechanism>> getRegisterSASLMechanisms() {
        List<Class<? extends SASLMechanism>> answer = new ArrayList<Class<? extends SASLMechanism>>();
        for (String mechanismsPreference : mechanismsPreferences) {
            answer.add(implementedMechanisms.get(mechanismsPreference));
        }
        return answer;
    }","['public', 'static', 'List', '<', 'Class', '<', '?', 'extends', 'SASLMechanism', '>', '>', 'getRegisterSASLMechanisms', '(', ')', '{', 'List', '<', 'Class', '<', '?', 'extends', 'SASLMechanism', '>', '>', 'answer', '=', 'new', 'ArrayList', '<', 'Class', '<', '?', 'extends', 'SASLMechanism', '>', '>', '(', ')', ';', 'for', '(', 'String', 'mechanismsPreference', ':', 'mechanismsPreferences', ')', '{', 'answer', '.', 'add', '(', 'implementedMechanisms', '.', 'get', '(', 'mechanismsPreference', ')', ')', ';', '}', 'return', 'answer', ';', '}']","Returns the registerd SASLMechanism classes sorted by the level of
preference.

@return the registerd SASLMechanism classes sorted by the level of
preference.","['Returns', 'the', 'registerd', 'SASLMechanism', 'classes', 'sorted', 'by', 'the', 'level', 'of', 'preference', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/SASLAuthentication.java#L211-L217,test
abmargb/jamppa,src/main/java/org/jivesoftware/smack/UserRoster.java,UserRoster.setOfflinePresences,"private void setOfflinePresences() {
        Presence packetUnavailable;
        for (String user : presenceMap.keySet()) {
            Map<String, Presence> resources = presenceMap.get(user);
            if (resources != null) {
                for (String resource : resources.keySet()) {
                    packetUnavailable = new Presence(Presence.Type.unavailable);
                    packetUnavailable.setFrom(user + ""/"" + resource);
                    presencePacketListener.processPacket(packetUnavailable);
                }
            }
        }
    }",java,"private void setOfflinePresences() {
        Presence packetUnavailable;
        for (String user : presenceMap.keySet()) {
            Map<String, Presence> resources = presenceMap.get(user);
            if (resources != null) {
                for (String resource : resources.keySet()) {
                    packetUnavailable = new Presence(Presence.Type.unavailable);
                    packetUnavailable.setFrom(user + ""/"" + resource);
                    presencePacketListener.processPacket(packetUnavailable);
                }
            }
        }
    }","['private', 'void', 'setOfflinePresences', '(', ')', '{', 'Presence', 'packetUnavailable', ';', 'for', '(', 'String', 'user', ':', 'presenceMap', '.', 'keySet', '(', ')', ')', '{', 'Map', '<', 'String', ',', 'Presence', '>', 'resources', '=', 'presenceMap', '.', 'get', '(', 'user', ')', ';', 'if', '(', 'resources', '!=', 'null', ')', '{', 'for', '(', 'String', 'resource', ':', 'resources', '.', 'keySet', '(', ')', ')', '{', 'packetUnavailable', '=', 'new', 'Presence', '(', 'Presence', '.', 'Type', '.', 'unavailable', ')', ';', 'packetUnavailable', '.', 'setFrom', '(', 'user', '+', '""/""', '+', 'resource', ')', ';', 'presencePacketListener', '.', 'processPacket', '(', 'packetUnavailable', ')', ';', '}', '}', '}', '}']","Changes the presence of available contacts offline by simulating an
unavailable presence sent from the server. After a disconnection, every
Presence is set to offline.","['Changes', 'the', 'presence', 'of', 'available', 'contacts', 'offline', 'by', 'simulating', 'an', 'unavailable', 'presence', 'sent', 'from', 'the', 'server', '.', 'After', 'a', 'disconnection', 'every', 'Presence', 'is', 'set', 'to', 'offline', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/UserRoster.java#L675-L687,test
TooTallNate/Java-WebSocket,src/main/java/org/java_websocket/server/WebSocketServer.java,WebSocketServer.stop,"public void stop( int timeout ) throws InterruptedException {
		if( !isclosed.compareAndSet( false, true ) ) { // this also makes sure that no further connections will be added to this.connections
			return;
		}

		List<WebSocket> socketsToClose;

		// copy the connections in a list (prevent callback deadlocks)
		synchronized ( connections ) {
			socketsToClose = new ArrayList<WebSocket>( connections );
		}

		for( WebSocket ws : socketsToClose ) {
			ws.close( CloseFrame.GOING_AWAY );
		}

		wsf.close();

		synchronized ( this ) {
			if( selectorthread != null  && selector != null) {
				selector.wakeup();
				selectorthread.join( timeout );
			}
		}
	}",java,"public void stop( int timeout ) throws InterruptedException {
		if( !isclosed.compareAndSet( false, true ) ) { // this also makes sure that no further connections will be added to this.connections
			return;
		}

		List<WebSocket> socketsToClose;

		// copy the connections in a list (prevent callback deadlocks)
		synchronized ( connections ) {
			socketsToClose = new ArrayList<WebSocket>( connections );
		}

		for( WebSocket ws : socketsToClose ) {
			ws.close( CloseFrame.GOING_AWAY );
		}

		wsf.close();

		synchronized ( this ) {
			if( selectorthread != null  && selector != null) {
				selector.wakeup();
				selectorthread.join( timeout );
			}
		}
	}","['public', 'void', 'stop', '(', 'int', 'timeout', ')', 'throws', 'InterruptedException', '{', 'if', '(', '!', 'isclosed', '.', 'compareAndSet', '(', 'false', ',', 'true', ')', ')', '{', '// this also makes sure that no further connections will be added to this.connections', 'return', ';', '}', 'List', '<', 'WebSocket', '>', 'socketsToClose', ';', '// copy the connections in a list (prevent callback deadlocks)', 'synchronized', '(', 'connections', ')', '{', 'socketsToClose', '=', 'new', 'ArrayList', '<', 'WebSocket', '>', '(', 'connections', ')', ';', '}', 'for', '(', 'WebSocket', 'ws', ':', 'socketsToClose', ')', '{', 'ws', '.', 'close', '(', 'CloseFrame', '.', 'GOING_AWAY', ')', ';', '}', 'wsf', '.', 'close', '(', ')', ';', 'synchronized', '(', 'this', ')', '{', 'if', '(', 'selectorthread', '!=', 'null', '&&', 'selector', '!=', 'null', ')', '{', 'selector', '.', 'wakeup', '(', ')', ';', 'selectorthread', '.', 'join', '(', 'timeout', ')', ';', '}', '}', '}']","Closes all connected clients sockets, then closes the underlying
ServerSocketChannel, effectively killing the server socket selectorthread,
freeing the port the server was bound to and stops all internal workerthreads.

If this method is called before the server is started it will never start.

@param timeout
Specifies how many milliseconds the overall close handshaking may take altogether before the connections are closed without proper close handshaking.<br>

@throws InterruptedException Interrupt","['Closes', 'all', 'connected', 'clients', 'sockets', 'then', 'closes', 'the', 'underlying', 'ServerSocketChannel', 'effectively', 'killing', 'the', 'server', 'socket', 'selectorthread', 'freeing', 'the', 'port', 'the', 'server', 'was', 'bound', 'to', 'and', 'stops', 'all', 'internal', 'workerthreads', '.']",73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9,https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/server/WebSocketServer.java#L245-L269,test
apache/parquet-mr,parquet-common/src/main/java/org/apache/parquet/Exceptions.java,Exceptions.throwIfInstance,"public static <E extends Exception> void throwIfInstance(Throwable t,
                                                           Class<E> excClass)
      throws E {
    if (excClass.isAssignableFrom(t.getClass())) {
      // the throwable is already an exception, so return it
      throw excClass.cast(t);
    }
  }",java,"public static <E extends Exception> void throwIfInstance(Throwable t,
                                                           Class<E> excClass)
      throws E {
    if (excClass.isAssignableFrom(t.getClass())) {
      // the throwable is already an exception, so return it
      throw excClass.cast(t);
    }
  }","['public', 'static', '<', 'E', 'extends', 'Exception', '>', 'void', 'throwIfInstance', '(', 'Throwable', 't', ',', 'Class', '<', 'E', '>', 'excClass', ')', 'throws', 'E', '{', 'if', '(', 'excClass', '.', 'isAssignableFrom', '(', 't', '.', 'getClass', '(', ')', ')', ')', '{', '// the throwable is already an exception, so return it', 'throw', 'excClass', '.', 'cast', '(', 't', ')', ';', '}', '}']","If the given throwable is an instance of E, throw it as an E.

@param t an exception instance
@param excClass an exception class t may be an instance of
@param <E> the type of exception that will be thrown if throwable is an instance
@throws E if t is an instance of E","['If', 'the', 'given', 'throwable', 'is', 'an', 'instance', 'of', 'E', 'throw', 'it', 'as', 'an', 'E', '.']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-common/src/main/java/org/apache/parquet/Exceptions.java#L31-L38,test
RuedigerMoeller/fast-serialization,src/main/java/org/nustaq/serialization/FSTConfiguration.java,FSTConfiguration.createJsonConfiguration,"public static FSTConfiguration createJsonConfiguration(boolean prettyPrint, boolean shareReferences ) {
        if ( shareReferences && prettyPrint ) {
            throw new RuntimeException(""unsupported flag combination"");
        }
        return createJsonConfiguration(prettyPrint,shareReferences,null);
    }",java,"public static FSTConfiguration createJsonConfiguration(boolean prettyPrint, boolean shareReferences ) {
        if ( shareReferences && prettyPrint ) {
            throw new RuntimeException(""unsupported flag combination"");
        }
        return createJsonConfiguration(prettyPrint,shareReferences,null);
    }","['public', 'static', 'FSTConfiguration', 'createJsonConfiguration', '(', 'boolean', 'prettyPrint', ',', 'boolean', 'shareReferences', ')', '{', 'if', '(', 'shareReferences', '&&', 'prettyPrint', ')', '{', 'throw', 'new', 'RuntimeException', '(', '""unsupported flag combination""', ')', ';', '}', 'return', 'createJsonConfiguration', '(', 'prettyPrint', ',', 'shareReferences', ',', 'null', ')', ';', '}']","create a json conf with given attributes. Note that shared refs = true for jason might be not as stable as for binary encodings
as fst relies on stream positions to identify objects within a given input, so any inbetween formatting will break proper reference
resolution.

WARNING: use of sharedrefs = true is Deprecated as its flakey

@param prettyPrint
@param shareReferences
@return","['create', 'a', 'json', 'conf', 'with', 'given', 'attributes', '.', 'Note', 'that', 'shared', 'refs', '=', 'true', 'for', 'jason', 'might', 'be', 'not', 'as', 'stable', 'as', 'for', 'binary', 'encodings', 'as', 'fst', 'relies', 'on', 'stream', 'positions', 'to', 'identify', 'objects', 'within', 'a', 'given', 'input', 'so', 'any', 'inbetween', 'formatting', 'will', 'break', 'proper', 'reference', 'resolution', '.']",59f8f800b79479d0b9c80901cf55903d9b027f26,https://github.com/RuedigerMoeller/fast-serialization/blob/59f8f800b79479d0b9c80901cf55903d9b027f26/src/main/java/org/nustaq/serialization/FSTConfiguration.java#L287-L292,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/manager/factory/BaseWroManagerFactory.java,BaseWroManagerFactory.addModelTransformer,"public BaseWroManagerFactory addModelTransformer(final Transformer<WroModel> modelTransformer) {
    if (modelTransformers == null) {
      modelTransformers = new ArrayList<Transformer<WroModel>>();
    }
    this.modelTransformers.add(modelTransformer);
    return this;
  }",java,"public BaseWroManagerFactory addModelTransformer(final Transformer<WroModel> modelTransformer) {
    if (modelTransformers == null) {
      modelTransformers = new ArrayList<Transformer<WroModel>>();
    }
    this.modelTransformers.add(modelTransformer);
    return this;
  }","['public', 'BaseWroManagerFactory', 'addModelTransformer', '(', 'final', 'Transformer', '<', 'WroModel', '>', 'modelTransformer', ')', '{', 'if', '(', 'modelTransformers', '==', 'null', ')', '{', 'modelTransformers', '=', 'new', 'ArrayList', '<', 'Transformer', '<', 'WroModel', '>', '>', '(', ')', ';', '}', 'this', '.', 'modelTransformers', '.', 'add', '(', 'modelTransformer', ')', ';', 'return', 'this', ';', '}']",Add a single model transformer.,"['Add', 'a', 'single', 'model', 'transformer', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/manager/factory/BaseWroManagerFactory.java#L340-L346,test
tiefaces/TieFaces,src/org/tiefaces/components/websheet/utility/ChartUtility.java,ChartUtility.getChartType,"public static ChartType getChartType(final CTChart ctChart) {
        CTPlotArea plotArea = ctChart.getPlotArea();

        for (ChartType chartType : ChartType.values()) {
            if (chartType.isThisType(plotArea)) {
                return chartType;
            }
        }
        return null;
    }",java,"public static ChartType getChartType(final CTChart ctChart) {
        CTPlotArea plotArea = ctChart.getPlotArea();

        for (ChartType chartType : ChartType.values()) {
            if (chartType.isThisType(plotArea)) {
                return chartType;
            }
        }
        return null;
    }","['public', 'static', 'ChartType', 'getChartType', '(', 'final', 'CTChart', 'ctChart', ')', '{', 'CTPlotArea', 'plotArea', '=', 'ctChart', '.', 'getPlotArea', '(', ')', ';', 'for', '(', 'ChartType', 'chartType', ':', 'ChartType', '.', 'values', '(', ')', ')', '{', 'if', '(', 'chartType', '.', 'isThisType', '(', 'plotArea', ')', ')', '{', 'return', 'chartType', ';', '}', '}', 'return', 'null', ';', '}']","return chart type from CTChart object.

@param ctChart
object.
@return ChartType.","['return', 'chart', 'type', 'from', 'CTChart', 'object', '.']",3b57b9701ed0f080b5fa4fa78269cc0c422b34ba,https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ChartUtility.java#L74-L83,test
OpenEstate/OpenEstate-IO,Core/src/main/java/org/openestate/io/core/LocaleUtils.java,LocaleUtils.getCountryName,"public static String getCountryName(String country, Locale language) {
        country = StringUtils.trimToNull(country);
        if (country == null) return null;

        String iso2Code = LocaleUtils.getCountryISO2(country);
        if (iso2Code != null) {
            String name = StringUtils.trimToNull(
                    new Locale(iso2Code, iso2Code).getDisplayCountry(language));
            if (name != null) return name;
        }
        return null;
    }",java,"public static String getCountryName(String country, Locale language) {
        country = StringUtils.trimToNull(country);
        if (country == null) return null;

        String iso2Code = LocaleUtils.getCountryISO2(country);
        if (iso2Code != null) {
            String name = StringUtils.trimToNull(
                    new Locale(iso2Code, iso2Code).getDisplayCountry(language));
            if (name != null) return name;
        }
        return null;
    }","['public', 'static', 'String', 'getCountryName', '(', 'String', 'country', ',', 'Locale', 'language', ')', '{', 'country', '=', 'StringUtils', '.', 'trimToNull', '(', 'country', ')', ';', 'if', '(', 'country', '==', 'null', ')', 'return', 'null', ';', 'String', 'iso2Code', '=', 'LocaleUtils', '.', 'getCountryISO2', '(', 'country', ')', ';', 'if', '(', 'iso2Code', '!=', 'null', ')', '{', 'String', 'name', '=', 'StringUtils', '.', 'trimToNull', '(', 'new', 'Locale', '(', 'iso2Code', ',', 'iso2Code', ')', '.', 'getDisplayCountry', '(', 'language', ')', ')', ';', 'if', '(', 'name', '!=', 'null', ')', 'return', 'name', ';', '}', 'return', 'null', ';', '}']","Return a country name in another language.

@param country  country name
@param language language to translate
@return translated country name or null, if no translation was found","['Return', 'a', 'country', 'name', 'in', 'another', 'language', '.']",f961dae78f40823f05a8c0d4e59d639e718aa18a,https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Core/src/main/java/org/openestate/io/core/LocaleUtils.java#L144-L155,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/samediff/SameDiff.java,SameDiff.gru,"public SDVariable gru(String baseName, GRUCellConfiguration configuration) {
        return new GRUCell(this, configuration).outputVariables(baseName)[0];
    }",java,"public SDVariable gru(String baseName, GRUCellConfiguration configuration) {
        return new GRUCell(this, configuration).outputVariables(baseName)[0];
    }","['public', 'SDVariable', 'gru', '(', 'String', 'baseName', ',', 'GRUCellConfiguration', 'configuration', ')', '{', 'return', 'new', 'GRUCell', '(', 'this', ',', 'configuration', ')', '.', 'outputVariables', '(', 'baseName', ')', '[', '0', ']', ';', '}']","The gru cell

@param baseName      the base name for the gru cell
@param configuration teh configuration to use
@return","['The', 'gru', 'cell']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/samediff/SameDiff.java#L4613-L4615,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Passage.java,Passage.getOffsetInBeginSection,"public int getOffsetInBeginSection() {
    if (Passage_Type.featOkTst && ((Passage_Type)jcasType).casFeat_offsetInBeginSection == null)
      jcasType.jcas.throwFeatMissing(""offsetInBeginSection"", ""edu.cmu.lti.oaqa.type.retrieval.Passage"");
    return jcasType.ll_cas.ll_getIntValue(addr, ((Passage_Type)jcasType).casFeatCode_offsetInBeginSection);}",java,"public int getOffsetInBeginSection() {
    if (Passage_Type.featOkTst && ((Passage_Type)jcasType).casFeat_offsetInBeginSection == null)
      jcasType.jcas.throwFeatMissing(""offsetInBeginSection"", ""edu.cmu.lti.oaqa.type.retrieval.Passage"");
    return jcasType.ll_cas.ll_getIntValue(addr, ((Passage_Type)jcasType).casFeatCode_offsetInBeginSection);}","['public', 'int', 'getOffsetInBeginSection', '(', ')', '{', 'if', '(', 'Passage_Type', '.', 'featOkTst', '&&', '(', '(', 'Passage_Type', ')', 'jcasType', ')', '.', 'casFeat_offsetInBeginSection', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""offsetInBeginSection""', ',', '""edu.cmu.lti.oaqa.type.retrieval.Passage""', ')', ';', 'return', 'jcasType', '.', 'll_cas', '.', 'll_getIntValue', '(', 'addr', ',', '(', '(', 'Passage_Type', ')', 'jcasType', ')', '.', 'casFeatCode_offsetInBeginSection', ')', ';', '}']","getter for offsetInBeginSection - gets Character offset of the start of this passage within the section that contains this passage.
@generated
@return value of the feature","['getter', 'for', 'offsetInBeginSection', '-', 'gets', 'Character', 'offset', 'of', 'the', 'start', 'of', 'this', 'passage', 'within', 'the', 'section', 'that', 'contains', 'this', 'passage', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/Passage.java#L117-L120,test
wildfly/wildfly,iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ConstantAnalysis.java,ConstantAnalysis.insertValue,"public void insertValue(Any any) {
        if (type == String.class)
            any.insert_wstring((String) value); // 1.3.5.10 Map to wstring
        else
            Util.insertAnyPrimitive(any, value);
    }",java,"public void insertValue(Any any) {
        if (type == String.class)
            any.insert_wstring((String) value); // 1.3.5.10 Map to wstring
        else
            Util.insertAnyPrimitive(any, value);
    }","['public', 'void', 'insertValue', '(', 'Any', 'any', ')', '{', 'if', '(', 'type', '==', 'String', '.', 'class', ')', 'any', '.', 'insert_wstring', '(', '(', 'String', ')', 'value', ')', ';', '// 1.3.5.10 Map to wstring', 'else', 'Util', '.', 'insertAnyPrimitive', '(', 'any', ',', 'value', ')', ';', '}']",Insert the constant value into the argument Any.,"['Insert', 'the', 'constant', 'value', 'into', 'the', 'argument', 'Any', '.']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/ConstantAnalysis.java#L77-L82,test
deeplearning4j/nd4j,nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/convolution/Convolution.java,Convolution.col2im,"public static INDArray col2im(INDArray col, int sy, int sx, int ph, int pw, int h, int w) {
        if (col.rank() != 6)
            throw new IllegalArgumentException(""col2im input array must be rank 6"");

        INDArray output = Nd4j.create(new long[]{col.size(0), col.size(1), h, w});

        Col2Im col2Im = Col2Im.builder()
                .inputArrays(new  INDArray[]{col})
                .outputs(new INDArray[]{output})
                .conv2DConfig(Conv2DConfig.builder()
                        .sy(sy)
                        .sx(sx)
                        .dw(1)
                        .dh(1)
                        .kh(h)
                        .kw(w)
                        .ph(ph)
                        .pw(pw)
                        .build())
                .build();

        Nd4j.getExecutioner().exec(col2Im);
        return col2Im.outputArguments()[0];
    }",java,"public static INDArray col2im(INDArray col, int sy, int sx, int ph, int pw, int h, int w) {
        if (col.rank() != 6)
            throw new IllegalArgumentException(""col2im input array must be rank 6"");

        INDArray output = Nd4j.create(new long[]{col.size(0), col.size(1), h, w});

        Col2Im col2Im = Col2Im.builder()
                .inputArrays(new  INDArray[]{col})
                .outputs(new INDArray[]{output})
                .conv2DConfig(Conv2DConfig.builder()
                        .sy(sy)
                        .sx(sx)
                        .dw(1)
                        .dh(1)
                        .kh(h)
                        .kw(w)
                        .ph(ph)
                        .pw(pw)
                        .build())
                .build();

        Nd4j.getExecutioner().exec(col2Im);
        return col2Im.outputArguments()[0];
    }","['public', 'static', 'INDArray', 'col2im', '(', 'INDArray', 'col', ',', 'int', 'sy', ',', 'int', 'sx', ',', 'int', 'ph', ',', 'int', 'pw', ',', 'int', 'h', ',', 'int', 'w', ')', '{', 'if', '(', 'col', '.', 'rank', '(', ')', '!=', '6', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""col2im input array must be rank 6""', ')', ';', 'INDArray', 'output', '=', 'Nd4j', '.', 'create', '(', 'new', 'long', '[', ']', '{', 'col', '.', 'size', '(', '0', ')', ',', 'col', '.', 'size', '(', '1', ')', ',', 'h', ',', 'w', '}', ')', ';', 'Col2Im', 'col2Im', '=', 'Col2Im', '.', 'builder', '(', ')', '.', 'inputArrays', '(', 'new', 'INDArray', '[', ']', '{', 'col', '}', ')', '.', 'outputs', '(', 'new', 'INDArray', '[', ']', '{', 'output', '}', ')', '.', 'conv2DConfig', '(', 'Conv2DConfig', '.', 'builder', '(', ')', '.', 'sy', '(', 'sy', ')', '.', 'sx', '(', 'sx', ')', '.', 'dw', '(', '1', ')', '.', 'dh', '(', '1', ')', '.', 'kh', '(', 'h', ')', '.', 'kw', '(', 'w', ')', '.', 'ph', '(', 'ph', ')', '.', 'pw', '(', 'pw', ')', '.', 'build', '(', ')', ')', '.', 'build', '(', ')', ';', 'Nd4j', '.', 'getExecutioner', '(', ')', '.', 'exec', '(', 'col2Im', ')', ';', 'return', 'col2Im', '.', 'outputArguments', '(', ')', '[', '0', ']', ';', '}']","Rearrange matrix
columns into blocks

@param col the column
transposed image to convert
@param sy stride y
@param sx stride x
@param ph padding height
@param pw padding width
@param h height
@param w width
@return","['Rearrange', 'matrix', 'columns', 'into', 'blocks']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/convolution/Convolution.java#L81-L104,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java,ByteArrayOutputStream.write,"public synchronized int write(InputStream in) throws IOException {
        int readCount = 0;
        int inBufferPos = count - filledBufferSum;
        int n = in.read(currentBuffer, inBufferPos, currentBuffer.length - inBufferPos);
        while (n != -1) {
            readCount += n;
            inBufferPos += n;
            count += n;
            if (inBufferPos == currentBuffer.length) {
                needNewBuffer(currentBuffer.length);
                inBufferPos = 0;
            }
            n = in.read(currentBuffer, inBufferPos, currentBuffer.length - inBufferPos);
        }
        return readCount;
    }",java,"public synchronized int write(InputStream in) throws IOException {
        int readCount = 0;
        int inBufferPos = count - filledBufferSum;
        int n = in.read(currentBuffer, inBufferPos, currentBuffer.length - inBufferPos);
        while (n != -1) {
            readCount += n;
            inBufferPos += n;
            count += n;
            if (inBufferPos == currentBuffer.length) {
                needNewBuffer(currentBuffer.length);
                inBufferPos = 0;
            }
            n = in.read(currentBuffer, inBufferPos, currentBuffer.length - inBufferPos);
        }
        return readCount;
    }","['public', 'synchronized', 'int', 'write', '(', 'InputStream', 'in', ')', 'throws', 'IOException', '{', 'int', 'readCount', '=', '0', ';', 'int', 'inBufferPos', '=', 'count', '-', 'filledBufferSum', ';', 'int', 'n', '=', 'in', '.', 'read', '(', 'currentBuffer', ',', 'inBufferPos', ',', 'currentBuffer', '.', 'length', '-', 'inBufferPos', ')', ';', 'while', '(', 'n', '!=', '-', '1', ')', '{', 'readCount', '+=', 'n', ';', 'inBufferPos', '+=', 'n', ';', 'count', '+=', 'n', ';', 'if', '(', 'inBufferPos', '==', 'currentBuffer', '.', 'length', ')', '{', 'needNewBuffer', '(', 'currentBuffer', '.', 'length', ')', ';', 'inBufferPos', '=', '0', ';', '}', 'n', '=', 'in', '.', 'read', '(', 'currentBuffer', ',', 'inBufferPos', ',', 'currentBuffer', '.', 'length', '-', 'inBufferPos', ')', ';', '}', 'return', 'readCount', ';', '}']","Writes the entire contents of the specified input stream to this
byte stream. Bytes from the input stream are read directly into the
internal buffers of this streams.

@param in the input stream to read from
@return total number of bytes read from the input stream
(and written to this stream)
@throws IOException if an I/O error occurs while reading the input stream
@since 1.4","['Writes', 'the', 'entire', 'contents', 'of', 'the', 'specified', 'input', 'stream', 'to', 'this', 'byte', 'stream', '.', 'Bytes', 'from', 'the', 'input', 'stream', 'are', 'read', 'directly', 'into', 'the', 'internal', 'buffers', 'of', 'this', 'streams', '.']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/utils/io/output/ByteArrayOutputStream.java#L187-L202,test
Unidata/thredds,visad/src/main/java/ucar/nc2/iosp/gempak/GempakGridReader.java,GempakGridReader.DM_RPKG,"public float[] DM_RPKG(int isword, int nword, int decimalScale)
          throws IOException {
    // from DM_RPKG
    // read the data packing type
    float[] data;
    int ipktyp = DM_RINT(isword);
    int iiword = isword + 1;
    int lendat = nword - 1;
    if (ipktyp == MDGNON) {  // no packing
      data = new float[lendat];
      DM_RFLT(iiword, data);
      return data;
    }
    int iiw;
    int irw;
    if (ipktyp == MDGDIF) {
      iiw = 4;
      irw = 3;
    } else if (ipktyp == MDGRB2) {
      iiw = 4;
      irw = 1;
    } else {
      iiw = 3;
      irw = 2;
    }
    int[] iarray = new int[iiw];
    float[] rarray = new float[irw];
    DM_RINT(iiword, iarray);
    iiword = iiword + iiw;
    lendat = lendat - iiw;
    DM_RFLT(iiword, rarray);
    iiword = iiword + irw;
    lendat = lendat - irw;

    if (ipktyp == MDGRB2) {
      data = unpackGrib2Data(iiword, lendat, iarray, rarray);
      return data;
    }
    int nbits = iarray[0];
    int misflg = iarray[1];
    boolean miss = misflg != 0;
    int kxky = iarray[2];
    // int mword = kxky;
    int kx = 0;
    if (iiw == 4) {
      kx = iarray[3];
    }
    float ref = rarray[0];
    float scale = rarray[1];
    float difmin = 0;
    if (irw == 3) {
      difmin = rarray[2];
    }
    data = unpackData(iiword, lendat, ipktyp, kxky, nbits, ref, scale,
            miss, difmin, kx, decimalScale);
    return data;

  }",java,"public float[] DM_RPKG(int isword, int nword, int decimalScale)
          throws IOException {
    // from DM_RPKG
    // read the data packing type
    float[] data;
    int ipktyp = DM_RINT(isword);
    int iiword = isword + 1;
    int lendat = nword - 1;
    if (ipktyp == MDGNON) {  // no packing
      data = new float[lendat];
      DM_RFLT(iiword, data);
      return data;
    }
    int iiw;
    int irw;
    if (ipktyp == MDGDIF) {
      iiw = 4;
      irw = 3;
    } else if (ipktyp == MDGRB2) {
      iiw = 4;
      irw = 1;
    } else {
      iiw = 3;
      irw = 2;
    }
    int[] iarray = new int[iiw];
    float[] rarray = new float[irw];
    DM_RINT(iiword, iarray);
    iiword = iiword + iiw;
    lendat = lendat - iiw;
    DM_RFLT(iiword, rarray);
    iiword = iiword + irw;
    lendat = lendat - irw;

    if (ipktyp == MDGRB2) {
      data = unpackGrib2Data(iiword, lendat, iarray, rarray);
      return data;
    }
    int nbits = iarray[0];
    int misflg = iarray[1];
    boolean miss = misflg != 0;
    int kxky = iarray[2];
    // int mword = kxky;
    int kx = 0;
    if (iiw == 4) {
      kx = iarray[3];
    }
    float ref = rarray[0];
    float scale = rarray[1];
    float difmin = 0;
    if (irw == 3) {
      difmin = rarray[2];
    }
    data = unpackData(iiword, lendat, ipktyp, kxky, nbits, ref, scale,
            miss, difmin, kx, decimalScale);
    return data;

  }","['public', 'float', '[', ']', 'DM_RPKG', '(', 'int', 'isword', ',', 'int', 'nword', ',', 'int', 'decimalScale', ')', 'throws', 'IOException', '{', '// from DM_RPKG', '// read the data packing type', 'float', '[', ']', 'data', ';', 'int', 'ipktyp', '=', 'DM_RINT', '(', 'isword', ')', ';', 'int', 'iiword', '=', 'isword', '+', '1', ';', 'int', 'lendat', '=', 'nword', '-', '1', ';', 'if', '(', 'ipktyp', '==', 'MDGNON', ')', '{', '// no packing', 'data', '=', 'new', 'float', '[', 'lendat', ']', ';', 'DM_RFLT', '(', 'iiword', ',', 'data', ')', ';', 'return', 'data', ';', '}', 'int', 'iiw', ';', 'int', 'irw', ';', 'if', '(', 'ipktyp', '==', 'MDGDIF', ')', '{', 'iiw', '=', '4', ';', 'irw', '=', '3', ';', '}', 'else', 'if', '(', 'ipktyp', '==', 'MDGRB2', ')', '{', 'iiw', '=', '4', ';', 'irw', '=', '1', ';', '}', 'else', '{', 'iiw', '=', '3', ';', 'irw', '=', '2', ';', '}', 'int', '[', ']', 'iarray', '=', 'new', 'int', '[', 'iiw', ']', ';', 'float', '[', ']', 'rarray', '=', 'new', 'float', '[', 'irw', ']', ';', 'DM_RINT', '(', 'iiword', ',', 'iarray', ')', ';', 'iiword', '=', 'iiword', '+', 'iiw', ';', 'lendat', '=', 'lendat', '-', 'iiw', ';', 'DM_RFLT', '(', 'iiword', ',', 'rarray', ')', ';', 'iiword', '=', 'iiword', '+', 'irw', ';', 'lendat', '=', 'lendat', '-', 'irw', ';', 'if', '(', 'ipktyp', '==', 'MDGRB2', ')', '{', 'data', '=', 'unpackGrib2Data', '(', 'iiword', ',', 'lendat', ',', 'iarray', ',', 'rarray', ')', ';', 'return', 'data', ';', '}', 'int', 'nbits', '=', 'iarray', '[', '0', ']', ';', 'int', 'misflg', '=', 'iarray', '[', '1', ']', ';', 'boolean', 'miss', '=', 'misflg', '!=', '0', ';', 'int', 'kxky', '=', 'iarray', '[', '2', ']', ';', '// int mword = kxky;', 'int', 'kx', '=', '0', ';', 'if', '(', 'iiw', '==', '4', ')', '{', 'kx', '=', 'iarray', '[', '3', ']', ';', '}', 'float', 'ref', '=', 'rarray', '[', '0', ']', ';', 'float', 'scale', '=', 'rarray', '[', '1', ']', ';', 'float', 'difmin', '=', '0', ';', 'if', '(', 'irw', '==', '3', ')', '{', 'difmin', '=', 'rarray', '[', '2', ']', ';', '}', 'data', '=', 'unpackData', '(', 'iiword', ',', 'lendat', ',', 'ipktyp', ',', 'kxky', ',', 'nbits', ',', 'ref', ',', 'scale', ',', 'miss', ',', 'difmin', ',', 'kx', ',', 'decimalScale', ')', ';', 'return', 'data', ';', '}']","Unpack a packed grid

@param isword       starting word (1 based)
@param nword        number of words to read
@param decimalScale decimal scale
@return array of unpacked data or null;
@throws IOException problem reading data","['Unpack', 'a', 'packed', 'grid']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/GempakGridReader.java#L393-L450,test
workplacesystems/utilsj,src/main/java/com/workplacesystems/utilsj/collections/helpers/CollectionUtilities.java,CollectionUtilities.reverse,"public static <K,V> void reverse(Map<K,V> source, Map<V,K> target)
    {
        Iterator<K> i = source.keySet().iterator();
        while (i.hasNext())
        {
            K key = i.next();
            V value = source.get(key);
            target.put(value, key);
        }
    }",java,"public static <K,V> void reverse(Map<K,V> source, Map<V,K> target)
    {
        Iterator<K> i = source.keySet().iterator();
        while (i.hasNext())
        {
            K key = i.next();
            V value = source.get(key);
            target.put(value, key);
        }
    }","['public', 'static', '<', 'K', ',', 'V', '>', 'void', 'reverse', '(', 'Map', '<', 'K', ',', 'V', '>', 'source', ',', 'Map', '<', 'V', ',', 'K', '>', 'target', ')', '{', 'Iterator', '<', 'K', '>', 'i', '=', 'source', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'i', '.', 'hasNext', '(', ')', ')', '{', 'K', 'key', '=', 'i', '.', 'next', '(', ')', ';', 'V', 'value', '=', 'source', '.', 'get', '(', 'key', ')', ';', 'target', '.', 'put', '(', 'value', ',', 'key', ')', ';', '}', '}']",Take key and value pairs from source and create map from value to key in target.,"['Take', 'key', 'and', 'value', 'pairs', 'from', 'source', 'and', 'create', 'map', 'from', 'value', 'to', 'key', 'in', 'target', '.']",1b638be51997eafac4d368c14f62a16624a08d3e,https://github.com/workplacesystems/utilsj/blob/1b638be51997eafac4d368c14f62a16624a08d3e/src/main/java/com/workplacesystems/utilsj/collections/helpers/CollectionUtilities.java#L41-L50,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java,SSLParametersConfiguration.enabledCipherSuites,"private String[] enabledCipherSuites(String[] supportedCipherSuites,
      String[] defaultCipherSuites) {
    if (enabledCipherSuites == null) {
      // we're assuming that the same engine is used for all configurables
      // so once we determine the enabled set, we won't do it again
      if (OptionHelper.isEmpty(getIncludedCipherSuites())
          && OptionHelper.isEmpty(getExcludedCipherSuites())) {
        enabledCipherSuites = Arrays.copyOf(defaultCipherSuites,
            defaultCipherSuites.length);
      }
      else {
        enabledCipherSuites = includedStrings(supportedCipherSuites,
            getIncludedCipherSuites(), getExcludedCipherSuites());
      }
      for (String cipherSuite : enabledCipherSuites) {
        addInfo(""enabled cipher suite: "" + cipherSuite);
      }
    }
    return enabledCipherSuites;
  }",java,"private String[] enabledCipherSuites(String[] supportedCipherSuites,
      String[] defaultCipherSuites) {
    if (enabledCipherSuites == null) {
      // we're assuming that the same engine is used for all configurables
      // so once we determine the enabled set, we won't do it again
      if (OptionHelper.isEmpty(getIncludedCipherSuites())
          && OptionHelper.isEmpty(getExcludedCipherSuites())) {
        enabledCipherSuites = Arrays.copyOf(defaultCipherSuites,
            defaultCipherSuites.length);
      }
      else {
        enabledCipherSuites = includedStrings(supportedCipherSuites,
            getIncludedCipherSuites(), getExcludedCipherSuites());
      }
      for (String cipherSuite : enabledCipherSuites) {
        addInfo(""enabled cipher suite: "" + cipherSuite);
      }
    }
    return enabledCipherSuites;
  }","['private', 'String', '[', ']', 'enabledCipherSuites', '(', 'String', '[', ']', 'supportedCipherSuites', ',', 'String', '[', ']', 'defaultCipherSuites', ')', '{', 'if', '(', 'enabledCipherSuites', '==', 'null', ')', '{', ""// we're assuming that the same engine is used for all configurables"", ""// so once we determine the enabled set, we won't do it again"", 'if', '(', 'OptionHelper', '.', 'isEmpty', '(', 'getIncludedCipherSuites', '(', ')', ')', '&&', 'OptionHelper', '.', 'isEmpty', '(', 'getExcludedCipherSuites', '(', ')', ')', ')', '{', 'enabledCipherSuites', '=', 'Arrays', '.', 'copyOf', '(', 'defaultCipherSuites', ',', 'defaultCipherSuites', '.', 'length', ')', ';', '}', 'else', '{', 'enabledCipherSuites', '=', 'includedStrings', '(', 'supportedCipherSuites', ',', 'getIncludedCipherSuites', '(', ')', ',', 'getExcludedCipherSuites', '(', ')', ')', ';', '}', 'for', '(', 'String', 'cipherSuite', ':', 'enabledCipherSuites', ')', '{', 'addInfo', '(', '""enabled cipher suite: ""', '+', 'cipherSuite', ')', ';', '}', '}', 'return', 'enabledCipherSuites', ';', '}']","Gets the set of enabled cipher suites based on the configuration.
@param supportedCipherSuites cipher suites supported by the SSL engine
@param defaultCipherSuites default cipher suites enabled by the SSL engine
@return enabled cipher suites","['Gets', 'the', 'set', 'of', 'enabled', 'cipher', 'suites', 'based', 'on', 'the', 'configuration', '.']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.java#L95-L114,test
oblac/jodd,jodd-json/src/main/java/jodd/json/JsonParser.java,JsonParser.replaceWithMappedTypeForPath,"protected Class replaceWithMappedTypeForPath(final Class target) {
		if (mappings == null) {
			return target;
		}

		Class newType;

		// first try alt paths

		Path altPath = path.getAltPath();

		if (altPath != null) {
			if (!altPath.equals(path)) {
				newType = mappings.get(altPath);

				if (newType != null) {
					return newType;
				}
			}
		}

		// now check regular paths

		newType = mappings.get(path);

		if (newType != null) {
			return newType;
		}

		return target;
	}",java,"protected Class replaceWithMappedTypeForPath(final Class target) {
		if (mappings == null) {
			return target;
		}

		Class newType;

		// first try alt paths

		Path altPath = path.getAltPath();

		if (altPath != null) {
			if (!altPath.equals(path)) {
				newType = mappings.get(altPath);

				if (newType != null) {
					return newType;
				}
			}
		}

		// now check regular paths

		newType = mappings.get(path);

		if (newType != null) {
			return newType;
		}

		return target;
	}","['protected', 'Class', 'replaceWithMappedTypeForPath', '(', 'final', 'Class', 'target', ')', '{', 'if', '(', 'mappings', '==', 'null', ')', '{', 'return', 'target', ';', '}', 'Class', 'newType', ';', '// first try alt paths', 'Path', 'altPath', '=', 'path', '.', 'getAltPath', '(', ')', ';', 'if', '(', 'altPath', '!=', 'null', ')', '{', 'if', '(', '!', 'altPath', '.', 'equals', '(', 'path', ')', ')', '{', 'newType', '=', 'mappings', '.', 'get', '(', 'altPath', ')', ';', 'if', '(', 'newType', '!=', 'null', ')', '{', 'return', 'newType', ';', '}', '}', '}', '// now check regular paths', 'newType', '=', 'mappings', '.', 'get', '(', 'path', ')', ';', 'if', '(', 'newType', '!=', 'null', ')', '{', 'return', 'newType', ';', '}', 'return', 'target', ';', '}']",Replaces type with mapped type for current path.,"['Replaces', 'type', 'with', 'mapped', 'type', 'for', 'current', 'path', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-json/src/main/java/jodd/json/JsonParser.java#L232-L262,test
streamsets/datacollector,basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/aggregation/aggregator/Aggregators.java,Aggregators.roll,"public Map<Aggregator, AggregatorData> roll(long newDataWindowEndTimeMillis) {
    Utils.checkState(started, ""Not started"");
    Utils.checkState(!stopped, ""Already stopped"");
    return dataProvider.roll(newDataWindowEndTimeMillis);
  }",java,"public Map<Aggregator, AggregatorData> roll(long newDataWindowEndTimeMillis) {
    Utils.checkState(started, ""Not started"");
    Utils.checkState(!stopped, ""Already stopped"");
    return dataProvider.roll(newDataWindowEndTimeMillis);
  }","['public', 'Map', '<', 'Aggregator', ',', 'AggregatorData', '>', 'roll', '(', 'long', 'newDataWindowEndTimeMillis', ')', '{', 'Utils', '.', 'checkState', '(', 'started', ',', '""Not started""', ')', ';', 'Utils', '.', 'checkState', '(', '!', 'stopped', ',', '""Already stopped""', ')', ';', 'return', 'dataProvider', '.', 'roll', '(', 'newDataWindowEndTimeMillis', ')', ';', '}']","Atomically rolls the DataWindow of all aggregators associated with the Aggregators instance.

@param newDataWindowEndTimeMillis ending time of the new DataWindow.
@return a Map with all the aggregators data of the DataWindow that closed.","['Atomically', 'rolls', 'the', 'DataWindow', 'of', 'all', 'aggregators', 'associated', 'with', 'the', 'Aggregators', 'instance', '.']",ea63245ea14d59d5229248387f0628f46131eae5,https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/aggregation/aggregator/Aggregators.java#L188-L192,test
tony19/logback-android,logback-android/src/main/java/ch/qos/logback/core/status/StatusBase.java,StatusBase.getEffectiveLevel,"public synchronized int getEffectiveLevel() {
    int result = level;
    int effLevel;

    Iterator it = iterator();
    Status s;
    while (it.hasNext()) {
      s = (Status) it.next();
      effLevel = s.getEffectiveLevel();
      if (effLevel > result) {
        result = effLevel;
      }
    }
    return result;
  }",java,"public synchronized int getEffectiveLevel() {
    int result = level;
    int effLevel;

    Iterator it = iterator();
    Status s;
    while (it.hasNext()) {
      s = (Status) it.next();
      effLevel = s.getEffectiveLevel();
      if (effLevel > result) {
        result = effLevel;
      }
    }
    return result;
  }","['public', 'synchronized', 'int', 'getEffectiveLevel', '(', ')', '{', 'int', 'result', '=', 'level', ';', 'int', 'effLevel', ';', 'Iterator', 'it', '=', 'iterator', '(', ')', ';', 'Status', 's', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 's', '=', '(', 'Status', ')', 'it', '.', 'next', '(', ')', ';', 'effLevel', '=', 's', '.', 'getEffectiveLevel', '(', ')', ';', 'if', '(', 'effLevel', '>', 'result', ')', '{', 'result', '=', 'effLevel', ';', '}', '}', 'return', 'result', ';', '}']",different status objects lying on the same cycle,"['different', 'status', 'objects', 'lying', 'on', 'the', 'same', 'cycle']",028489c11ccfc1237a53923db06f22a90b41809c,https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/status/StatusBase.java#L83-L97,test
oblac/jodd,jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java,AuthAction.login,"protected JsonResult login() {
		T authToken;

		authToken = loginViaBasicAuth(servletRequest);

		if (authToken == null) {
			authToken = loginViaRequestParams(servletRequest);
		}

		if (authToken == null) {
			log.warn(""Login failed."");

			return JsonResult.of(HttpStatus.error401().unauthorized(""Login failed.""));
		}

		log.info(""login OK!"");

		final UserSession<T> userSession = new UserSession<>(authToken, userAuth.tokenValue(authToken));

		userSession.start(servletRequest, servletResponse);

		// return token

		return tokenAsJson(authToken);
	}",java,"protected JsonResult login() {
		T authToken;

		authToken = loginViaBasicAuth(servletRequest);

		if (authToken == null) {
			authToken = loginViaRequestParams(servletRequest);
		}

		if (authToken == null) {
			log.warn(""Login failed."");

			return JsonResult.of(HttpStatus.error401().unauthorized(""Login failed.""));
		}

		log.info(""login OK!"");

		final UserSession<T> userSession = new UserSession<>(authToken, userAuth.tokenValue(authToken));

		userSession.start(servletRequest, servletResponse);

		// return token

		return tokenAsJson(authToken);
	}","['protected', 'JsonResult', 'login', '(', ')', '{', 'T', 'authToken', ';', 'authToken', '=', 'loginViaBasicAuth', '(', 'servletRequest', ')', ';', 'if', '(', 'authToken', '==', 'null', ')', '{', 'authToken', '=', 'loginViaRequestParams', '(', 'servletRequest', ')', ';', '}', 'if', '(', 'authToken', '==', 'null', ')', '{', 'log', '.', 'warn', '(', '""Login failed.""', ')', ';', 'return', 'JsonResult', '.', 'of', '(', 'HttpStatus', '.', 'error401', '(', ')', '.', 'unauthorized', '(', '""Login failed.""', ')', ')', ';', '}', 'log', '.', 'info', '(', '""login OK!""', ')', ';', 'final', 'UserSession', '<', 'T', '>', 'userSession', '=', 'new', 'UserSession', '<>', '(', 'authToken', ',', 'userAuth', '.', 'tokenValue', '(', 'authToken', ')', ')', ';', 'userSession', '.', 'start', '(', 'servletRequest', ',', 'servletResponse', ')', ';', '// return token', 'return', 'tokenAsJson', '(', 'authToken', ')', ';', '}']",Authenticate user and start user session.,"['Authenticate', 'user', 'and', 'start', 'user', 'session', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-joy/src/main/java/jodd/joy/auth/AuthAction.java#L74-L98,test
1gravity/Android-RTEditor,RTEditor/src/main/java/com/onegravity/rteditor/media/crop/ImageViewTouchBase.java,ImageViewTouchBase.maxZoom,"protected float maxZoom() {
        if (mBitmapDisplayed.getBitmap() == null) {
            return 1F;
        }

        float fw = (float) mBitmapDisplayed.getWidth() / (float) mThisWidth;
        float fh = (float) mBitmapDisplayed.getHeight() / (float) mThisHeight;
        float max = Math.max(fw, fh) * 4;
        return max;
    }",java,"protected float maxZoom() {
        if (mBitmapDisplayed.getBitmap() == null) {
            return 1F;
        }

        float fw = (float) mBitmapDisplayed.getWidth() / (float) mThisWidth;
        float fh = (float) mBitmapDisplayed.getHeight() / (float) mThisHeight;
        float max = Math.max(fw, fh) * 4;
        return max;
    }","['protected', 'float', 'maxZoom', '(', ')', '{', 'if', '(', 'mBitmapDisplayed', '.', 'getBitmap', '(', ')', '==', 'null', ')', '{', 'return', '1F', ';', '}', 'float', 'fw', '=', '(', 'float', ')', 'mBitmapDisplayed', '.', 'getWidth', '(', ')', '/', '(', 'float', ')', 'mThisWidth', ';', 'float', 'fh', '=', '(', 'float', ')', 'mBitmapDisplayed', '.', 'getHeight', '(', ')', '/', '(', 'float', ')', 'mThisHeight', ';', 'float', 'max', '=', 'Math', '.', 'max', '(', 'fw', ',', 'fh', ')', '*', '4', ';', 'return', 'max', ';', '}']","rather than the current 1024x768, this should be changed down to 200%.","['rather', 'than', 'the', 'current', '1024x768', 'this', 'should', 'be', 'changed', 'down', 'to', '200%', '.']",9d8fb4bb865b3b3d011e7633afedcdfb8d21754f,https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/media/crop/ImageViewTouchBase.java#L291-L300,test
mikepenz/CrossfadeDrawerLayout,library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java,CrossfadeDrawerLayout.fadeUp,"public void fadeUp(int duration) {
        //animate up
        mContainer.clearAnimation();
        ResizeWidthAnimation anim = new ResizeWidthAnimation(mContainer, mMaxWidth, new ApplyTransformationListener() {
            @Override
            public void applyTransformation(int width) {
                overlapViews(width);
            }
        });
        anim.setDuration(duration);
        mContainer.startAnimation(anim);
    }",java,"public void fadeUp(int duration) {
        //animate up
        mContainer.clearAnimation();
        ResizeWidthAnimation anim = new ResizeWidthAnimation(mContainer, mMaxWidth, new ApplyTransformationListener() {
            @Override
            public void applyTransformation(int width) {
                overlapViews(width);
            }
        });
        anim.setDuration(duration);
        mContainer.startAnimation(anim);
    }","['public', 'void', 'fadeUp', '(', 'int', 'duration', ')', '{', '//animate up', 'mContainer', '.', 'clearAnimation', '(', ')', ';', 'ResizeWidthAnimation', 'anim', '=', 'new', 'ResizeWidthAnimation', '(', 'mContainer', ',', 'mMaxWidth', ',', 'new', 'ApplyTransformationListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'applyTransformation', '(', 'int', 'width', ')', '{', 'overlapViews', '(', 'width', ')', ';', '}', '}', ')', ';', 'anim', '.', 'setDuration', '(', 'duration', ')', ';', 'mContainer', '.', 'startAnimation', '(', 'anim', ')', ';', '}']","animate to the large view

@param duration","['animate', 'to', 'the', 'large', 'view']",7fe26d80d2c69410040daa61343d5040d2d4142a,https://github.com/mikepenz/CrossfadeDrawerLayout/blob/7fe26d80d2c69410040daa61343d5040d2d4142a/library/src/main/java/com/mikepenz/crossfadedrawerlayout/view/CrossfadeDrawerLayout.java#L337-L348,test
RestComm/jain-slee,container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/TransactionContextImpl.java,TransactionContextImpl.executeBeforeCommitActions,"protected void executeBeforeCommitActions() {
		if (beforeCommitActions != null) {
			if (trace) {
				logger.trace(""Executing before commit actions"");
			}
			executeActions(beforeCommitActions,trace);
			beforeCommitActions = null;
		} 
	}",java,"protected void executeBeforeCommitActions() {
		if (beforeCommitActions != null) {
			if (trace) {
				logger.trace(""Executing before commit actions"");
			}
			executeActions(beforeCommitActions,trace);
			beforeCommitActions = null;
		} 
	}","['protected', 'void', 'executeBeforeCommitActions', '(', ')', '{', 'if', '(', 'beforeCommitActions', '!=', 'null', ')', '{', 'if', '(', 'trace', ')', '{', 'logger', '.', 'trace', '(', '""Executing before commit actions""', ')', ';', '}', 'executeActions', '(', 'beforeCommitActions', ',', 'trace', ')', ';', 'beforeCommitActions', '=', 'null', ';', '}', '}']",Executes actions scheduled for before commit,"['Executes', 'actions', 'scheduled', 'for', 'before', 'commit']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/transaction/src/main/java/org/mobicents/slee/runtime/transaction/TransactionContextImpl.java#L212-L220,test
basis-technology-corp/tcl-regex-java,src/main/java/com/basistech/tclre/Nfa.java,Nfa.dumprarcs,"int dumprarcs(Arc a, State s, int pos, StringBuilder sb) {
        if (a.outchain != null) {
            pos = dumprarcs(a.outchain, s, pos, sb);
        }
        dumparc(a, s, sb);
        if (pos == 5) {
            sb.append(""\n"");
            pos = 1;
        } else {
            pos++;
        }
        return pos;
    }",java,"int dumprarcs(Arc a, State s, int pos, StringBuilder sb) {
        if (a.outchain != null) {
            pos = dumprarcs(a.outchain, s, pos, sb);
        }
        dumparc(a, s, sb);
        if (pos == 5) {
            sb.append(""\n"");
            pos = 1;
        } else {
            pos++;
        }
        return pos;
    }","['int', 'dumprarcs', '(', 'Arc', 'a', ',', 'State', 's', ',', 'int', 'pos', ',', 'StringBuilder', 'sb', ')', '{', 'if', '(', 'a', '.', 'outchain', '!=', 'null', ')', '{', 'pos', '=', 'dumprarcs', '(', 'a', '.', 'outchain', ',', 's', ',', 'pos', ',', 'sb', ')', ';', '}', 'dumparc', '(', 'a', ',', 's', ',', 'sb', ')', ';', 'if', '(', 'pos', '==', '5', ')', '{', 'sb', '.', 'append', '(', '""\\n""', ')', ';', 'pos', '=', '1', ';', '}', 'else', '{', 'pos', '++', ';', '}', 'return', 'pos', ';', '}']","dumprarcs - dump remaining outarcs, recursively, in reverse order

@return resulting print position","['dumprarcs', '-', 'dump', 'remaining', 'outarcs', 'recursively', 'in', 'reverse', 'order']",de0d5eaccf9a61b694cb8793f234cc229c395b43,https://github.com/basis-technology-corp/tcl-regex-java/blob/de0d5eaccf9a61b694cb8793f234cc229c395b43/src/main/java/com/basistech/tclre/Nfa.java#L469-L481,test
oblac/jodd,jodd-madvoc/src/main/java/jodd/madvoc/MadvocRouter.java,MadvocRouter.filter,"@SuppressWarnings(""unchecked"")
	public <T extends ActionFilter> MadvocRouter filter(final Class<T> actionFilterClass) {
		filtersManager.resolve(actionFilterClass);
		return this;
	}",java,"@SuppressWarnings(""unchecked"")
	public <T extends ActionFilter> MadvocRouter filter(final Class<T> actionFilterClass) {
		filtersManager.resolve(actionFilterClass);
		return this;
	}","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'public', '<', 'T', 'extends', 'ActionFilter', '>', 'MadvocRouter', 'filter', '(', 'final', 'Class', '<', 'T', '>', 'actionFilterClass', ')', '{', 'filtersManager', '.', 'resolve', '(', 'actionFilterClass', ')', ';', 'return', 'this', ';', '}']",Returns action filter instance for further configuration.,"['Returns', 'action', 'filter', 'instance', 'for', 'further', 'configuration', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/MadvocRouter.java#L99-L103,test
Unidata/thredds,cdm/src/main/java/ucar/ma2/Index.java,Index.set,"public Index set(int[] index) {
    if (index.length != rank)
      throw new ArrayIndexOutOfBoundsException();
    if (rank == 0) return this;
    int prefixrank = (hasvlen ? rank : rank - 1);
    System.arraycopy(index, 0, current, 0, prefixrank);
    if (hasvlen) current[prefixrank] = -1;
    return this;
  }",java,"public Index set(int[] index) {
    if (index.length != rank)
      throw new ArrayIndexOutOfBoundsException();
    if (rank == 0) return this;
    int prefixrank = (hasvlen ? rank : rank - 1);
    System.arraycopy(index, 0, current, 0, prefixrank);
    if (hasvlen) current[prefixrank] = -1;
    return this;
  }","['public', 'Index', 'set', '(', 'int', '[', ']', 'index', ')', '{', 'if', '(', 'index', '.', 'length', '!=', 'rank', ')', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', ')', ';', 'if', '(', 'rank', '==', '0', ')', 'return', 'this', ';', 'int', 'prefixrank', '=', '(', 'hasvlen', '?', 'rank', ':', 'rank', '-', '1', ')', ';', 'System', '.', 'arraycopy', '(', 'index', ',', '0', ',', 'current', ',', '0', ',', 'prefixrank', ')', ';', 'if', '(', 'hasvlen', ')', 'current', '[', 'prefixrank', ']', '=', '-', '1', ';', 'return', 'this', ';', '}']","Set the current element's index. General-rank case.

@param index set current value to these values
@return this, so you can use A.get(i.set(i))
@throws ArrayIndexOutOfBoundsException if index.length != rank.","['Set', 'the', 'current', 'element', 's', 'index', '.', 'General', '-', 'rank', 'case', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/Index.java#L562-L570,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxettaClassBuilder.java,ProxettaClassBuilder.makeStaticInitBlock,"protected void makeStaticInitBlock() {
		if (wd.adviceClinits != null) {
			MethodVisitor mv = wd.dest.visitMethod(AsmUtil.ACC_STATIC, CLINIT, DESC_VOID, null, null);
			mv.visitCode();
			for (String name : wd.adviceClinits) {
				mv.visitMethodInsn(
					INVOKESTATIC,
					wd.thisReference,
					name, DESC_VOID,
					false);
			}
			mv.visitInsn(RETURN);
			mv.visitMaxs(0, 0);
			mv.visitEnd();
		}
	}",java,"protected void makeStaticInitBlock() {
		if (wd.adviceClinits != null) {
			MethodVisitor mv = wd.dest.visitMethod(AsmUtil.ACC_STATIC, CLINIT, DESC_VOID, null, null);
			mv.visitCode();
			for (String name : wd.adviceClinits) {
				mv.visitMethodInsn(
					INVOKESTATIC,
					wd.thisReference,
					name, DESC_VOID,
					false);
			}
			mv.visitInsn(RETURN);
			mv.visitMaxs(0, 0);
			mv.visitEnd();
		}
	}","['protected', 'void', 'makeStaticInitBlock', '(', ')', '{', 'if', '(', 'wd', '.', 'adviceClinits', '!=', 'null', ')', '{', 'MethodVisitor', 'mv', '=', 'wd', '.', 'dest', '.', 'visitMethod', '(', 'AsmUtil', '.', 'ACC_STATIC', ',', 'CLINIT', ',', 'DESC_VOID', ',', 'null', ',', 'null', ')', ';', 'mv', '.', 'visitCode', '(', ')', ';', 'for', '(', 'String', 'name', ':', 'wd', '.', 'adviceClinits', ')', '{', 'mv', '.', 'visitMethodInsn', '(', 'INVOKESTATIC', ',', 'wd', '.', 'thisReference', ',', 'name', ',', 'DESC_VOID', ',', 'false', ')', ';', '}', 'mv', '.', 'visitInsn', '(', 'RETURN', ')', ';', 'mv', '.', 'visitMaxs', '(', '0', ',', '0', ')', ';', 'mv', '.', 'visitEnd', '(', ')', ';', '}', '}']","Creates static initialization block that simply calls all
advice static init methods in correct order.","['Creates', 'static', 'initialization', 'block', 'that', 'simply', 'calls', 'all', 'advice', 'static', 'init', 'methods', 'in', 'correct', 'order', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/proxetta/asm/ProxettaClassBuilder.java#L184-L199,test
google/guice,extensions/jmx/src/com/google/inject/tools/jmx/Manager.java,Manager.main,"public static void main(String[] args) throws Exception {
    if (args.length != 1) {
      System.err.println(
          ""Usage: java -Dcom.sun.management.jmxremote ""
              + Manager.class.getName()
              + "" [module class name]"");
      System.err.println(""Then run 'jconsole' to connect."");
      System.exit(1);
    }

    Module module = (Module) Class.forName(args[0]).newInstance();
    Injector injector = Guice.createInjector(module);

    manage(args[0], injector);

    System.out.println(""Press Ctrl+C to exit..."");

    // Sleep forever.
    Thread.sleep(Long.MAX_VALUE);
  }",java,"public static void main(String[] args) throws Exception {
    if (args.length != 1) {
      System.err.println(
          ""Usage: java -Dcom.sun.management.jmxremote ""
              + Manager.class.getName()
              + "" [module class name]"");
      System.err.println(""Then run 'jconsole' to connect."");
      System.exit(1);
    }

    Module module = (Module) Class.forName(args[0]).newInstance();
    Injector injector = Guice.createInjector(module);

    manage(args[0], injector);

    System.out.println(""Press Ctrl+C to exit..."");

    // Sleep forever.
    Thread.sleep(Long.MAX_VALUE);
  }","['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'if', '(', 'args', '.', 'length', '!=', '1', ')', '{', 'System', '.', 'err', '.', 'println', '(', '""Usage: java -Dcom.sun.management.jmxremote ""', '+', 'Manager', '.', 'class', '.', 'getName', '(', ')', '+', '"" [module class name]""', ')', ';', 'System', '.', 'err', '.', 'println', '(', '""Then run \'jconsole\' to connect.""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'Module', 'module', '=', '(', 'Module', ')', 'Class', '.', 'forName', '(', 'args', '[', '0', ']', ')', '.', 'newInstance', '(', ')', ';', 'Injector', 'injector', '=', 'Guice', '.', 'createInjector', '(', 'module', ')', ';', 'manage', '(', 'args', '[', '0', ']', ',', 'injector', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Press Ctrl+C to exit...""', ')', ';', '// Sleep forever.', 'Thread', '.', 'sleep', '(', 'Long', '.', 'MAX_VALUE', ')', ';', '}']",Run with no arguments for usage instructions.,"['Run', 'with', 'no', 'arguments', 'for', 'usage', 'instructions', '.']",a0552a16d813ead98fe73737fb001db336650251,https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/extensions/jmx/src/com/google/inject/tools/jmx/Manager.java#L84-L103,test
rupertlssmith/lojix,base/common/src/main/com/thesett/common/properties/ParsedProperties.java,ParsedProperties.getPropertyAsLong,"public Long getPropertyAsLong(String propName)
    {
        String prop = getProperty(propName);

        return (prop != null) ? Long.valueOf(prop) : null;
    }",java,"public Long getPropertyAsLong(String propName)
    {
        String prop = getProperty(propName);

        return (prop != null) ? Long.valueOf(prop) : null;
    }","['public', 'Long', 'getPropertyAsLong', '(', 'String', 'propName', ')', '{', 'String', 'prop', '=', 'getProperty', '(', 'propName', ')', ';', 'return', '(', 'prop', '!=', 'null', ')', '?', 'Long', '.', 'valueOf', '(', 'prop', ')', ':', 'null', ';', '}']","Parses a property as a long.

@param  propName The property.

@return The property as a long, or null if it does not exist.","['Parses', 'a', 'property', 'as', 'a', 'long', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/properties/ParsedProperties.java#L381-L386,test
abmargb/jamppa,src/main/java/org/jivesoftware/smack/PacketWriter.java,PacketWriter.nextPacket,"private Packet nextPacket() {
        Packet packet = null;
        // Wait until there's a packet or we're done.
        while (!done && (packet = queue.poll()) == null) {
            try {
                synchronized (queue) {
                    queue.wait();
                }
            } catch (InterruptedException ie) {
                // Do nothing
            }
        }
        return packet;
    }",java,"private Packet nextPacket() {
        Packet packet = null;
        // Wait until there's a packet or we're done.
        while (!done && (packet = queue.poll()) == null) {
            try {
                synchronized (queue) {
                    queue.wait();
                }
            } catch (InterruptedException ie) {
                // Do nothing
            }
        }
        return packet;
    }","['private', 'Packet', 'nextPacket', '(', ')', '{', 'Packet', 'packet', '=', 'null', ';', ""// Wait until there's a packet or we're done."", 'while', '(', '!', 'done', '&&', '(', 'packet', '=', 'queue', '.', 'poll', '(', ')', ')', '==', 'null', ')', '{', 'try', '{', 'synchronized', '(', 'queue', ')', '{', 'queue', '.', 'wait', '(', ')', ';', '}', '}', 'catch', '(', 'InterruptedException', 'ie', ')', '{', '// Do nothing', '}', '}', 'return', 'packet', ';', '}']","Returns the next available packet from the queue for writing.

@return the next packet for writing.","['Returns', 'the', 'next', 'available', 'packet', 'from', 'the', 'queue', 'for', 'writing', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/PacketWriter.java#L144-L157,test
Netflix/hollow,hollow/src/main/java/com/netflix/hollow/core/memory/SegmentedByteArray.java,SegmentedByteArray.orderedCopy,"public int orderedCopy(long srcPos, byte[] data, int destPos, int length) {
        int segmentSize = 1 << log2OfSegmentSize;
        int remainingBytesInSegment = (int)(segmentSize - (srcPos & bitmask));
        int dataPosition = destPos;

        while(length > 0) {
            byte[] segment = segments[(int)(srcPos >>> log2OfSegmentSize)];

            int bytesToCopyFromSegment = Math.min(remainingBytesInSegment, length);

            orderedCopy(segment, (int)(srcPos & bitmask), data, dataPosition, bytesToCopyFromSegment);

            dataPosition += bytesToCopyFromSegment;
            srcPos += bytesToCopyFromSegment;
            remainingBytesInSegment = segmentSize - (int)(srcPos & bitmask);
            length -= bytesToCopyFromSegment;
        }

        return dataPosition - destPos;
    }",java,"public int orderedCopy(long srcPos, byte[] data, int destPos, int length) {
        int segmentSize = 1 << log2OfSegmentSize;
        int remainingBytesInSegment = (int)(segmentSize - (srcPos & bitmask));
        int dataPosition = destPos;

        while(length > 0) {
            byte[] segment = segments[(int)(srcPos >>> log2OfSegmentSize)];

            int bytesToCopyFromSegment = Math.min(remainingBytesInSegment, length);

            orderedCopy(segment, (int)(srcPos & bitmask), data, dataPosition, bytesToCopyFromSegment);

            dataPosition += bytesToCopyFromSegment;
            srcPos += bytesToCopyFromSegment;
            remainingBytesInSegment = segmentSize - (int)(srcPos & bitmask);
            length -= bytesToCopyFromSegment;
        }

        return dataPosition - destPos;
    }","['public', 'int', 'orderedCopy', '(', 'long', 'srcPos', ',', 'byte', '[', ']', 'data', ',', 'int', 'destPos', ',', 'int', 'length', ')', '{', 'int', 'segmentSize', '=', '1', '<<', 'log2OfSegmentSize', ';', 'int', 'remainingBytesInSegment', '=', '(', 'int', ')', '(', 'segmentSize', '-', '(', 'srcPos', '&', 'bitmask', ')', ')', ';', 'int', 'dataPosition', '=', 'destPos', ';', 'while', '(', 'length', '>', '0', ')', '{', 'byte', '[', ']', 'segment', '=', 'segments', '[', '(', 'int', ')', '(', 'srcPos', '>>>', 'log2OfSegmentSize', ')', ']', ';', 'int', 'bytesToCopyFromSegment', '=', 'Math', '.', 'min', '(', 'remainingBytesInSegment', ',', 'length', ')', ';', 'orderedCopy', '(', 'segment', ',', '(', 'int', ')', '(', 'srcPos', '&', 'bitmask', ')', ',', 'data', ',', 'dataPosition', ',', 'bytesToCopyFromSegment', ')', ';', 'dataPosition', '+=', 'bytesToCopyFromSegment', ';', 'srcPos', '+=', 'bytesToCopyFromSegment', ';', 'remainingBytesInSegment', '=', 'segmentSize', '-', '(', 'int', ')', '(', 'srcPos', '&', 'bitmask', ')', ';', 'length', '-=', 'bytesToCopyFromSegment', ';', '}', 'return', 'dataPosition', '-', 'destPos', ';', '}']","copies exactly data.length bytes from this SegmentedByteArray into the provided byte array,
guaranteeing that if the update is seen by another thread, then all other writes prior to
this call are also visible to that thread.

@param srcPos the position to begin copying from the source data
@param data the source data
@param destPos the position to begin writing in this array
@param length the length of the data to copy
@return the number of bytes copied","['copies', 'exactly', 'data', '.', 'length', 'bytes', 'from', 'this', 'SegmentedByteArray', 'into', 'the', 'provided', 'byte', 'array', 'guaranteeing', 'that', 'if', 'the', 'update', 'is', 'seen', 'by', 'another', 'thread', 'then', 'all', 'other', 'writes', 'prior', 'to', 'this', 'call', 'are', 'also', 'visible', 'to', 'that', 'thread', '.']",43ca100034a01050fb764170bd32b085ac9a3c22,https://github.com/Netflix/hollow/blob/43ca100034a01050fb764170bd32b085ac9a3c22/hollow/src/main/java/com/netflix/hollow/core/memory/SegmentedByteArray.java#L206-L225,test
playframework/playframework,core/play-java/src/main/java/play/libs/XPath.java,XPath.selectNodes,"public static NodeList selectNodes(String path, Object node) {
    return selectNodes(path, node, null);
  }",java,"public static NodeList selectNodes(String path, Object node) {
    return selectNodes(path, node, null);
  }","['public', 'static', 'NodeList', 'selectNodes', '(', 'String', 'path', ',', 'Object', 'node', ')', '{', 'return', 'selectNodes', '(', 'path', ',', 'node', ',', 'null', ')', ';', '}']","Select all nodes that are selected by this XPath expression. If multiple nodes match, multiple
nodes will be returned. Nodes will be returned in document-order,

@param path the xpath expression
@param node the starting node
@return result of evaluating the xpath expression against node","['Select', 'all', 'nodes', 'that', 'are', 'selected', 'by', 'this', 'XPath', 'expression', '.', 'If', 'multiple', 'nodes', 'match', 'multiple', 'nodes', 'will', 'be', 'returned', '.', 'Nodes', 'will', 'be', 'returned', 'in', 'document', '-', 'order']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play-java/src/main/java/play/libs/XPath.java#L110-L112,test
RestComm/jain-slee,container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java,ResourceAdaptorObjectImpl.verifyConfigProperties,"private void verifyConfigProperties(ConfigProperties newProperties)
			throws InvalidConfigurationException {

		if (doTraceLogs) {
			logger.trace(""verifyConfigProperties( newProperties = ""
					+ newProperties + "" )"");
		}

		// merge properties
		for (ConfigProperties.Property configProperty : configProperties
				.getProperties()) {
			if (newProperties.getProperty(configProperty.getName()) == null) {
				newProperties.addProperty(configProperty);
			}
		}
		// validate result
		for (ConfigProperties.Property entityProperty : newProperties
				.getProperties()) {
			if (entityProperty.getValue() == null) {
				throw new InvalidConfigurationException(""the property ""
						+ entityProperty.getName() + "" has null value"");
			}
		}
		// validate in ra object
		object.raVerifyConfiguration(newProperties);
		// ok, switch config
		configProperties = newProperties;
	}",java,"private void verifyConfigProperties(ConfigProperties newProperties)
			throws InvalidConfigurationException {

		if (doTraceLogs) {
			logger.trace(""verifyConfigProperties( newProperties = ""
					+ newProperties + "" )"");
		}

		// merge properties
		for (ConfigProperties.Property configProperty : configProperties
				.getProperties()) {
			if (newProperties.getProperty(configProperty.getName()) == null) {
				newProperties.addProperty(configProperty);
			}
		}
		// validate result
		for (ConfigProperties.Property entityProperty : newProperties
				.getProperties()) {
			if (entityProperty.getValue() == null) {
				throw new InvalidConfigurationException(""the property ""
						+ entityProperty.getName() + "" has null value"");
			}
		}
		// validate in ra object
		object.raVerifyConfiguration(newProperties);
		// ok, switch config
		configProperties = newProperties;
	}","['private', 'void', 'verifyConfigProperties', '(', 'ConfigProperties', 'newProperties', ')', 'throws', 'InvalidConfigurationException', '{', 'if', '(', 'doTraceLogs', ')', '{', 'logger', '.', 'trace', '(', '""verifyConfigProperties( newProperties = ""', '+', 'newProperties', '+', '"" )""', ')', ';', '}', '// merge properties', 'for', '(', 'ConfigProperties', '.', 'Property', 'configProperty', ':', 'configProperties', '.', 'getProperties', '(', ')', ')', '{', 'if', '(', 'newProperties', '.', 'getProperty', '(', 'configProperty', '.', 'getName', '(', ')', ')', '==', 'null', ')', '{', 'newProperties', '.', 'addProperty', '(', 'configProperty', ')', ';', '}', '}', '// validate result', 'for', '(', 'ConfigProperties', '.', 'Property', 'entityProperty', ':', 'newProperties', '.', 'getProperties', '(', ')', ')', '{', 'if', '(', 'entityProperty', '.', 'getValue', '(', ')', '==', 'null', ')', '{', 'throw', 'new', 'InvalidConfigurationException', '(', '""the property ""', '+', 'entityProperty', '.', 'getName', '(', ')', '+', '"" has null value""', ')', ';', '}', '}', '// validate in ra object', 'object', '.', 'raVerifyConfiguration', '(', 'newProperties', ')', ';', '// ok, switch config', 'configProperties', '=', 'newProperties', ';', '}']","Merges the current properties values with the new ones and uses the ra to
verify the configuration

@param newProperties
@throws InvalidConfigurationException
if the configuration, after merging the specified properties
with the current properties values, results in an invalid
configuration","['Merges', 'the', 'current', 'properties', 'values', 'with', 'the', 'new', 'ones', 'and', 'uses', 'the', 'ra', 'to', 'verify', 'the', 'configuration']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/resource/src/main/java/org/mobicents/slee/resource/ResourceAdaptorObjectImpl.java#L212-L239,test
Unidata/thredds,legacy/src/main/java/ucar/nc2/dt/point/RecordDatasetHelper.java,RecordDatasetHelper.setStationInfo,"public void setStationInfo(String stnIdVName, String stnDescVName) {
    this.stnIdVName = stnIdVName;
    this.stnDescVName = stnDescVName;

    Variable stationVar = ncfile.findVariable(stnIdVName);
    stationIdType = stationVar.getDataType();
  }",java,"public void setStationInfo(String stnIdVName, String stnDescVName) {
    this.stnIdVName = stnIdVName;
    this.stnDescVName = stnDescVName;

    Variable stationVar = ncfile.findVariable(stnIdVName);
    stationIdType = stationVar.getDataType();
  }","['public', 'void', 'setStationInfo', '(', 'String', 'stnIdVName', ',', 'String', 'stnDescVName', ')', '{', 'this', '.', 'stnIdVName', '=', 'stnIdVName', ';', 'this', '.', 'stnDescVName', '=', 'stnDescVName', ';', 'Variable', 'stationVar', '=', 'ncfile', '.', 'findVariable', '(', 'stnIdVName', ')', ';', 'stationIdType', '=', 'stationVar', '.', 'getDataType', '(', ')', ';', '}']","Set extra information used by station obs datasets.

@param stnIdVName   the obs variable that is used to find the station in the stnHash; may be type  int or a String (char).
@param stnDescVName optional station var containing station description","['Set', 'extra', 'information', 'used', 'by', 'station', 'obs', 'datasets', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/ucar/nc2/dt/point/RecordDatasetHelper.java#L134-L140,test
RestComm/jain-slee,container/services/src/main/java/org/mobicents/slee/container/deployment/ConcreteSbbGenerator.java,ConcreteSbbGenerator.createGetSbbActivityContextInterfaceMethod,"protected void createGetSbbActivityContextInterfaceMethod(
			CtClass activityContextInterface,
			Class<?> concreteActivityContextInterfaceClass)
			throws DeploymentException {
		String methodToAdd = ""public ""
				+ activityContextInterface.getName()
				+ "" asSbbActivityContextInterface(javax.slee.ActivityContextInterface aci) {""
				+ ""if(aci==null)""
				+ ""     throw new ""
				+ IllegalStateException.class.getName()
				+ ""(\""Passed argument can not be of null value.\"");""
				+ "" if(sbbEntity == null || sbbEntity.getSbbObject().getState() != ""
				+ SbbObjectState.class.getName() + "".READY) { throw new ""
				+ IllegalStateException.class.getName()
				+ ""(\""Cannot call asSbbActivityContextInterface\""); } ""
				+ ""else if ( aci instanceof ""
				+ concreteActivityContextInterfaceClass.getName()
				+ "") return aci;"" + ""else return  new ""
				+ concreteActivityContextInterfaceClass.getName() + "" ( ("" + ActivityContextInterface.class.getName() + "") $1, ""
				+ ""sbbEntity.getSbbComponent());"" + ""}"";
		CtMethod methodTest;
		try {
			methodTest = CtNewMethod.make(methodToAdd, sbbConcreteClass);
			sbbConcreteClass.addMethod(methodTest);
			if (logger.isTraceEnabled()) {
				logger.trace(""Method "" + methodToAdd + "" added"");
			}
		} catch (CannotCompileException e) {
			throw new DeploymentException(e.getMessage(), e);
		}
	}",java,"protected void createGetSbbActivityContextInterfaceMethod(
			CtClass activityContextInterface,
			Class<?> concreteActivityContextInterfaceClass)
			throws DeploymentException {
		String methodToAdd = ""public ""
				+ activityContextInterface.getName()
				+ "" asSbbActivityContextInterface(javax.slee.ActivityContextInterface aci) {""
				+ ""if(aci==null)""
				+ ""     throw new ""
				+ IllegalStateException.class.getName()
				+ ""(\""Passed argument can not be of null value.\"");""
				+ "" if(sbbEntity == null || sbbEntity.getSbbObject().getState() != ""
				+ SbbObjectState.class.getName() + "".READY) { throw new ""
				+ IllegalStateException.class.getName()
				+ ""(\""Cannot call asSbbActivityContextInterface\""); } ""
				+ ""else if ( aci instanceof ""
				+ concreteActivityContextInterfaceClass.getName()
				+ "") return aci;"" + ""else return  new ""
				+ concreteActivityContextInterfaceClass.getName() + "" ( ("" + ActivityContextInterface.class.getName() + "") $1, ""
				+ ""sbbEntity.getSbbComponent());"" + ""}"";
		CtMethod methodTest;
		try {
			methodTest = CtNewMethod.make(methodToAdd, sbbConcreteClass);
			sbbConcreteClass.addMethod(methodTest);
			if (logger.isTraceEnabled()) {
				logger.trace(""Method "" + methodToAdd + "" added"");
			}
		} catch (CannotCompileException e) {
			throw new DeploymentException(e.getMessage(), e);
		}
	}","['protected', 'void', 'createGetSbbActivityContextInterfaceMethod', '(', 'CtClass', 'activityContextInterface', ',', 'Class', '<', '?', '>', 'concreteActivityContextInterfaceClass', ')', 'throws', 'DeploymentException', '{', 'String', 'methodToAdd', '=', '""public ""', '+', 'activityContextInterface', '.', 'getName', '(', ')', '+', '"" asSbbActivityContextInterface(javax.slee.ActivityContextInterface aci) {""', '+', '""if(aci==null)""', '+', '""     throw new ""', '+', 'IllegalStateException', '.', 'class', '.', 'getName', '(', ')', '+', '""(\\""Passed argument can not be of null value.\\"");""', '+', '"" if(sbbEntity == null || sbbEntity.getSbbObject().getState() != ""', '+', 'SbbObjectState', '.', 'class', '.', 'getName', '(', ')', '+', '"".READY) { throw new ""', '+', 'IllegalStateException', '.', 'class', '.', 'getName', '(', ')', '+', '""(\\""Cannot call asSbbActivityContextInterface\\""); } ""', '+', '""else if ( aci instanceof ""', '+', 'concreteActivityContextInterfaceClass', '.', 'getName', '(', ')', '+', '"") return aci;""', '+', '""else return  new ""', '+', 'concreteActivityContextInterfaceClass', '.', 'getName', '(', ')', '+', '"" ( (""', '+', 'ActivityContextInterface', '.', 'class', '.', 'getName', '(', ')', '+', '"") $1, ""', '+', '""sbbEntity.getSbbComponent());""', '+', '""}""', ';', 'CtMethod', 'methodTest', ';', 'try', '{', 'methodTest', '=', 'CtNewMethod', '.', 'make', '(', 'methodToAdd', ',', 'sbbConcreteClass', ')', ';', 'sbbConcreteClass', '.', 'addMethod', '(', 'methodTest', ')', ';', 'if', '(', 'logger', '.', 'isTraceEnabled', '(', ')', ')', '{', 'logger', '.', 'trace', '(', '""Method ""', '+', 'methodToAdd', '+', '"" added""', ')', ';', '}', '}', 'catch', '(', 'CannotCompileException', 'e', ')', '{', 'throw', 'new', 'DeploymentException', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}']","Create the narrow method to get the activity context interface

@param activityContextInterface
the activity context interface return type of the narrow
method
@param concreteActivityContextInterfaceClass
@throws DeploymentException","['Create', 'the', 'narrow', 'method', 'to', 'get', 'the', 'activity', 'context', 'interface']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/services/src/main/java/org/mobicents/slee/container/deployment/ConcreteSbbGenerator.java#L1063-L1093,test
apache/parquet-mr,parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java,ParquetFileWriter.writeColumnChunk,"void writeColumnChunk(ColumnDescriptor descriptor,
      long valueCount,
      CompressionCodecName compressionCodecName,
      DictionaryPage dictionaryPage,
      BytesInput bytes,
      long uncompressedTotalPageSize,
      long compressedTotalPageSize,
      Statistics<?> totalStats,
      ColumnIndexBuilder columnIndexBuilder,
      OffsetIndexBuilder offsetIndexBuilder,
      Set<Encoding> rlEncodings,
      Set<Encoding> dlEncodings,
      List<Encoding> dataEncodings) throws IOException {
    startColumn(descriptor, valueCount, compressionCodecName);

    state = state.write();
    if (dictionaryPage != null) {
      writeDictionaryPage(dictionaryPage);
    }
    LOG.debug(""{}: write data pages"", out.getPos());
    long headersSize = bytes.size() - compressedTotalPageSize;
    this.uncompressedLength += uncompressedTotalPageSize + headersSize;
    this.compressedLength += compressedTotalPageSize + headersSize;
    LOG.debug(""{}: write data pages content"", out.getPos());
    firstPageOffset = out.getPos();
    bytes.writeAllTo(out);
    encodingStatsBuilder.addDataEncodings(dataEncodings);
    if (rlEncodings.isEmpty()) {
      encodingStatsBuilder.withV2Pages();
    }
    currentEncodings.addAll(rlEncodings);
    currentEncodings.addAll(dlEncodings);
    currentEncodings.addAll(dataEncodings);
    currentStatistics = totalStats;

    this.columnIndexBuilder = columnIndexBuilder;
    this.offsetIndexBuilder = offsetIndexBuilder;

    endColumn();
  }",java,"void writeColumnChunk(ColumnDescriptor descriptor,
      long valueCount,
      CompressionCodecName compressionCodecName,
      DictionaryPage dictionaryPage,
      BytesInput bytes,
      long uncompressedTotalPageSize,
      long compressedTotalPageSize,
      Statistics<?> totalStats,
      ColumnIndexBuilder columnIndexBuilder,
      OffsetIndexBuilder offsetIndexBuilder,
      Set<Encoding> rlEncodings,
      Set<Encoding> dlEncodings,
      List<Encoding> dataEncodings) throws IOException {
    startColumn(descriptor, valueCount, compressionCodecName);

    state = state.write();
    if (dictionaryPage != null) {
      writeDictionaryPage(dictionaryPage);
    }
    LOG.debug(""{}: write data pages"", out.getPos());
    long headersSize = bytes.size() - compressedTotalPageSize;
    this.uncompressedLength += uncompressedTotalPageSize + headersSize;
    this.compressedLength += compressedTotalPageSize + headersSize;
    LOG.debug(""{}: write data pages content"", out.getPos());
    firstPageOffset = out.getPos();
    bytes.writeAllTo(out);
    encodingStatsBuilder.addDataEncodings(dataEncodings);
    if (rlEncodings.isEmpty()) {
      encodingStatsBuilder.withV2Pages();
    }
    currentEncodings.addAll(rlEncodings);
    currentEncodings.addAll(dlEncodings);
    currentEncodings.addAll(dataEncodings);
    currentStatistics = totalStats;

    this.columnIndexBuilder = columnIndexBuilder;
    this.offsetIndexBuilder = offsetIndexBuilder;

    endColumn();
  }","['void', 'writeColumnChunk', '(', 'ColumnDescriptor', 'descriptor', ',', 'long', 'valueCount', ',', 'CompressionCodecName', 'compressionCodecName', ',', 'DictionaryPage', 'dictionaryPage', ',', 'BytesInput', 'bytes', ',', 'long', 'uncompressedTotalPageSize', ',', 'long', 'compressedTotalPageSize', ',', 'Statistics', '<', '?', '>', 'totalStats', ',', 'ColumnIndexBuilder', 'columnIndexBuilder', ',', 'OffsetIndexBuilder', 'offsetIndexBuilder', ',', 'Set', '<', 'Encoding', '>', 'rlEncodings', ',', 'Set', '<', 'Encoding', '>', 'dlEncodings', ',', 'List', '<', 'Encoding', '>', 'dataEncodings', ')', 'throws', 'IOException', '{', 'startColumn', '(', 'descriptor', ',', 'valueCount', ',', 'compressionCodecName', ')', ';', 'state', '=', 'state', '.', 'write', '(', ')', ';', 'if', '(', 'dictionaryPage', '!=', 'null', ')', '{', 'writeDictionaryPage', '(', 'dictionaryPage', ')', ';', '}', 'LOG', '.', 'debug', '(', '""{}: write data pages""', ',', 'out', '.', 'getPos', '(', ')', ')', ';', 'long', 'headersSize', '=', 'bytes', '.', 'size', '(', ')', '-', 'compressedTotalPageSize', ';', 'this', '.', 'uncompressedLength', '+=', 'uncompressedTotalPageSize', '+', 'headersSize', ';', 'this', '.', 'compressedLength', '+=', 'compressedTotalPageSize', '+', 'headersSize', ';', 'LOG', '.', 'debug', '(', '""{}: write data pages content""', ',', 'out', '.', 'getPos', '(', ')', ')', ';', 'firstPageOffset', '=', 'out', '.', 'getPos', '(', ')', ';', 'bytes', '.', 'writeAllTo', '(', 'out', ')', ';', 'encodingStatsBuilder', '.', 'addDataEncodings', '(', 'dataEncodings', ')', ';', 'if', '(', 'rlEncodings', '.', 'isEmpty', '(', ')', ')', '{', 'encodingStatsBuilder', '.', 'withV2Pages', '(', ')', ';', '}', 'currentEncodings', '.', 'addAll', '(', 'rlEncodings', ')', ';', 'currentEncodings', '.', 'addAll', '(', 'dlEncodings', ')', ';', 'currentEncodings', '.', 'addAll', '(', 'dataEncodings', ')', ';', 'currentStatistics', '=', 'totalStats', ';', 'this', '.', 'columnIndexBuilder', '=', 'columnIndexBuilder', ';', 'this', '.', 'offsetIndexBuilder', '=', 'offsetIndexBuilder', ';', 'endColumn', '(', ')', ';', '}']","Writes a column chunk at once
@param descriptor the descriptor of the column
@param valueCount the value count in this column
@param compressionCodecName the name of the compression codec used for compressing the pages
@param dictionaryPage the dictionary page for this column chunk (might be null)
@param bytes the encoded pages including page headers to be written as is
@param uncompressedTotalPageSize total uncompressed size (without page headers)
@param compressedTotalPageSize total compressed size (without page headers)
@param totalStats accumulated statistics for the column chunk
@param columnIndexBuilder the builder object for the column index
@param offsetIndexBuilder the builder object for the offset index
@param rlEncodings the RL encodings used in this column chunk
@param dlEncodings the DL encodings used in this column chunk
@param dataEncodings the data encodings used in this column chunk
@throws IOException if there is an error while writing","['Writes', 'a', 'column', 'chunk', 'at', 'once']",62dcc68acaf64012bf731e103be780956f1f446d,https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java#L553-L592,test
agentsoz/jill,jill/src/main/java/io/github/agentsoz/jill/core/GlobalState.java,GlobalState.reset,"public static void reset() {
    agentTypes = new AObjectCatalog(""agentTypes"", 5, 5);
    goalTypes = new AObjectCatalog(""goalTypes"", 10, 5);
    planTypes = new AObjectCatalog(""planTypes"", 20, 5);
    agents = null;
    beliefbase = null;
    eventHandlers = new HashSet<JillExtension>();
  }",java,"public static void reset() {
    agentTypes = new AObjectCatalog(""agentTypes"", 5, 5);
    goalTypes = new AObjectCatalog(""goalTypes"", 10, 5);
    planTypes = new AObjectCatalog(""planTypes"", 20, 5);
    agents = null;
    beliefbase = null;
    eventHandlers = new HashSet<JillExtension>();
  }","['public', 'static', 'void', 'reset', '(', ')', '{', 'agentTypes', '=', 'new', 'AObjectCatalog', '(', '""agentTypes""', ',', '5', ',', '5', ')', ';', 'goalTypes', '=', 'new', 'AObjectCatalog', '(', '""goalTypes""', ',', '10', ',', '5', ')', ';', 'planTypes', '=', 'new', 'AObjectCatalog', '(', '""planTypes""', ',', '20', ',', '5', ')', ';', 'agents', '=', 'null', ';', 'beliefbase', '=', 'null', ';', 'eventHandlers', '=', 'new', 'HashSet', '<', 'JillExtension', '>', '(', ')', ';', '}']",Resets the global state.,"['Resets', 'the', 'global', 'state', '.']",13126fc78350465b477386132465f84cad719426,https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/core/GlobalState.java#L82-L89,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/time/CalendarDate.java,CalendarDate.of,"public static CalendarDate of(Calendar cal, int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute) {
    Chronology base = Calendar.getChronology(cal);
    /* if (base == null)
      base = ISOChronology.getInstanceUTC(); // already in UTC
    else
      base = ZonedChronology.getInstance( base, DateTimeZone.UTC); // otherwise wrap it to be in UTC  */

    DateTime dt = new DateTime(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, base);
    if (!Calendar.isDefaultChronology(cal)) dt = dt.withChronology(Calendar.getChronology(cal));
    dt = dt.withZone(DateTimeZone.UTC);
    return new CalendarDate(cal, dt);
  }",java,"public static CalendarDate of(Calendar cal, int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute) {
    Chronology base = Calendar.getChronology(cal);
    /* if (base == null)
      base = ISOChronology.getInstanceUTC(); // already in UTC
    else
      base = ZonedChronology.getInstance( base, DateTimeZone.UTC); // otherwise wrap it to be in UTC  */

    DateTime dt = new DateTime(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, base);
    if (!Calendar.isDefaultChronology(cal)) dt = dt.withChronology(Calendar.getChronology(cal));
    dt = dt.withZone(DateTimeZone.UTC);
    return new CalendarDate(cal, dt);
  }","['public', 'static', 'CalendarDate', 'of', '(', 'Calendar', 'cal', ',', 'int', 'year', ',', 'int', 'monthOfYear', ',', 'int', 'dayOfMonth', ',', 'int', 'hourOfDay', ',', 'int', 'minuteOfHour', ',', 'int', 'secondOfMinute', ')', '{', 'Chronology', 'base', '=', 'Calendar', '.', 'getChronology', '(', 'cal', ')', ';', '/* if (base == null)\r\n      base = ISOChronology.getInstanceUTC(); // already in UTC\r\n    else\r\n      base = ZonedChronology.getInstance( base, DateTimeZone.UTC); // otherwise wrap it to be in UTC  */', 'DateTime', 'dt', '=', 'new', 'DateTime', '(', 'year', ',', 'monthOfYear', ',', 'dayOfMonth', ',', 'hourOfDay', ',', 'minuteOfHour', ',', 'secondOfMinute', ',', 'base', ')', ';', 'if', '(', '!', 'Calendar', '.', 'isDefaultChronology', '(', 'cal', ')', ')', 'dt', '=', 'dt', '.', 'withChronology', '(', 'Calendar', '.', 'getChronology', '(', 'cal', ')', ')', ';', 'dt', '=', 'dt', '.', 'withZone', '(', 'DateTimeZone', '.', 'UTC', ')', ';', 'return', 'new', 'CalendarDate', '(', 'cal', ',', 'dt', ')', ';', '}']","Get Calendar date from fields. Uses UTZ time zone
@param cal calendar to use, or null for default
@param year any integer
@param monthOfYear 1-12
@param dayOfMonth 1-31
@param hourOfDay  0-23
@param minuteOfHour 0-59
@param secondOfMinute 0-59
@return CalendarDate","['Get', 'Calendar', 'date', 'from', 'fields', '.', 'Uses', 'UTZ', 'time', 'zone']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/time/CalendarDate.java#L56-L67,test
Unidata/thredds,tds/src/main/java/thredds/servlet/ServletUtil.java,ServletUtil.returnString,"public static void returnString(String contents, HttpServletResponse res)
          throws IOException {

    try {
      ServletOutputStream out = res.getOutputStream();
      IO.copy(new ByteArrayInputStream(contents.getBytes(CDM.utf8Charset)), out);
    } catch (IOException e) {
      log.error("" IOException sending string: "", e);
      res.sendError(HttpServletResponse.SC_NOT_FOUND, ""Problem sending string: "" + e.getMessage());
    }
  }",java,"public static void returnString(String contents, HttpServletResponse res)
          throws IOException {

    try {
      ServletOutputStream out = res.getOutputStream();
      IO.copy(new ByteArrayInputStream(contents.getBytes(CDM.utf8Charset)), out);
    } catch (IOException e) {
      log.error("" IOException sending string: "", e);
      res.sendError(HttpServletResponse.SC_NOT_FOUND, ""Problem sending string: "" + e.getMessage());
    }
  }","['public', 'static', 'void', 'returnString', '(', 'String', 'contents', ',', 'HttpServletResponse', 'res', ')', 'throws', 'IOException', '{', 'try', '{', 'ServletOutputStream', 'out', '=', 'res', '.', 'getOutputStream', '(', ')', ';', 'IO', '.', 'copy', '(', 'new', 'ByteArrayInputStream', '(', 'contents', '.', 'getBytes', '(', 'CDM', '.', 'utf8Charset', ')', ')', ',', 'out', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '.', 'error', '(', '"" IOException sending string: ""', ',', 'e', ')', ';', 'res', '.', 'sendError', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ',', '""Problem sending string: ""', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","Send given content string as the HTTP response.

@param contents the string to return as the HTTP response.
@param res      the HttpServletResponse
@throws IOException if an I/O error occurs while writing the response.","['Send', 'given', 'content', 'string', 'as', 'the', 'HTTP', 'response', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tds/src/main/java/thredds/servlet/ServletUtil.java#L257-L267,test
wildfly/wildfly,ee/src/main/java/org/jboss/as/ee/component/ViewConfiguration.java,ViewConfiguration.addViewInterceptor,"public void addViewInterceptor(InterceptorFactory interceptorFactory, int priority) {
        for (Method method : proxyFactory.getCachedMethods()) {
            addViewInterceptor(method, interceptorFactory, priority);
        }
    }",java,"public void addViewInterceptor(InterceptorFactory interceptorFactory, int priority) {
        for (Method method : proxyFactory.getCachedMethods()) {
            addViewInterceptor(method, interceptorFactory, priority);
        }
    }","['public', 'void', 'addViewInterceptor', '(', 'InterceptorFactory', 'interceptorFactory', ',', 'int', 'priority', ')', '{', 'for', '(', 'Method', 'method', ':', 'proxyFactory', '.', 'getCachedMethods', '(', ')', ')', '{', 'addViewInterceptor', '(', 'method', ',', 'interceptorFactory', ',', 'priority', ')', ';', '}', '}']","Adds an interceptor factory to all methods of a view

@param interceptorFactory The factory to add
@param priority           The interceptor order","['Adds', 'an', 'interceptor', 'factory', 'to', 'all', 'methods', 'of', 'a', 'view']",64896f1500fe465ad83d96ede9fa19d0c3747f18,https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ee/src/main/java/org/jboss/as/ee/component/ViewConfiguration.java#L118-L122,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/SearchResult.java,SearchResult.getCandidateAnswers,"public CandidateAnswerVariant getCandidateAnswers(int i) {
    if (SearchResult_Type.featOkTst && ((SearchResult_Type)jcasType).casFeat_candidateAnswers == null)
      jcasType.jcas.throwFeatMissing(""candidateAnswers"", ""edu.cmu.lti.oaqa.type.retrieval.SearchResult"");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((SearchResult_Type)jcasType).casFeatCode_candidateAnswers), i);
    return (CandidateAnswerVariant)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((SearchResult_Type)jcasType).casFeatCode_candidateAnswers), i)));}",java,"public CandidateAnswerVariant getCandidateAnswers(int i) {
    if (SearchResult_Type.featOkTst && ((SearchResult_Type)jcasType).casFeat_candidateAnswers == null)
      jcasType.jcas.throwFeatMissing(""candidateAnswers"", ""edu.cmu.lti.oaqa.type.retrieval.SearchResult"");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((SearchResult_Type)jcasType).casFeatCode_candidateAnswers), i);
    return (CandidateAnswerVariant)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((SearchResult_Type)jcasType).casFeatCode_candidateAnswers), i)));}","['public', 'CandidateAnswerVariant', 'getCandidateAnswers', '(', 'int', 'i', ')', '{', 'if', '(', 'SearchResult_Type', '.', 'featOkTst', '&&', '(', '(', 'SearchResult_Type', ')', 'jcasType', ')', '.', 'casFeat_candidateAnswers', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""candidateAnswers""', ',', '""edu.cmu.lti.oaqa.type.retrieval.SearchResult""', ')', ';', 'jcasType', '.', 'jcas', '.', 'checkArrayBounds', '(', 'jcasType', '.', 'll_cas', '.', 'll_getRefValue', '(', 'addr', ',', '(', '(', 'SearchResult_Type', ')', 'jcasType', ')', '.', 'casFeatCode_candidateAnswers', ')', ',', 'i', ')', ';', 'return', '(', 'CandidateAnswerVariant', ')', '(', 'jcasType', '.', 'll_cas', '.', 'll_getFSForRef', '(', 'jcasType', '.', 'll_cas', '.', 'll_getRefArrayValue', '(', 'jcasType', '.', 'll_cas', '.', 'll_getRefValue', '(', 'addr', ',', '(', '(', 'SearchResult_Type', ')', 'jcasType', ')', '.', 'casFeatCode_candidateAnswers', ')', ',', 'i', ')', ')', ')', ';', '}']","indexed getter for candidateAnswers - gets an indexed value - CandidateAnswerVariants generated from this SearchResult.
@generated
@param i index in the array to get
@return value of the element at index i","['indexed', 'getter', 'for', 'candidateAnswers', '-', 'gets', 'an', 'indexed', 'value', '-', 'CandidateAnswerVariants', 'generated', 'from', 'this', 'SearchResult', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/SearchResult.java#L227-L231,test
real-logic/aeron,aeron-driver/src/main/java/io/aeron/driver/Configuration.java,Configuration.validatePageSize,"public static void validatePageSize(final int pageSize)
    {
        if (pageSize < PAGE_MIN_SIZE)
        {
            throw new ConfigurationException(
                ""page size less than min size of "" + PAGE_MIN_SIZE + "": "" + pageSize);
        }

        if (pageSize > PAGE_MAX_SIZE)
        {
            throw new ConfigurationException(
                ""page size greater than max size of "" + PAGE_MAX_SIZE + "": "" + pageSize);
        }

        if (!BitUtil.isPowerOfTwo(pageSize))
        {
            throw new ConfigurationException(""page size not a power of 2: "" + pageSize);
        }
    }",java,"public static void validatePageSize(final int pageSize)
    {
        if (pageSize < PAGE_MIN_SIZE)
        {
            throw new ConfigurationException(
                ""page size less than min size of "" + PAGE_MIN_SIZE + "": "" + pageSize);
        }

        if (pageSize > PAGE_MAX_SIZE)
        {
            throw new ConfigurationException(
                ""page size greater than max size of "" + PAGE_MAX_SIZE + "": "" + pageSize);
        }

        if (!BitUtil.isPowerOfTwo(pageSize))
        {
            throw new ConfigurationException(""page size not a power of 2: "" + pageSize);
        }
    }","['public', 'static', 'void', 'validatePageSize', '(', 'final', 'int', 'pageSize', ')', '{', 'if', '(', 'pageSize', '<', 'PAGE_MIN_SIZE', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '""page size less than min size of ""', '+', 'PAGE_MIN_SIZE', '+', '"": ""', '+', 'pageSize', ')', ';', '}', 'if', '(', 'pageSize', '>', 'PAGE_MAX_SIZE', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '""page size greater than max size of ""', '+', 'PAGE_MAX_SIZE', '+', '"": ""', '+', 'pageSize', ')', ';', '}', 'if', '(', '!', 'BitUtil', '.', 'isPowerOfTwo', '(', 'pageSize', ')', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '""page size not a power of 2: ""', '+', 'pageSize', ')', ';', '}', '}']","Validate that page size is valid and alignment is valid.

@param pageSize to be checked.
@throws ConfigurationException if the size is not as expected.","['Validate', 'that', 'page', 'size', 'is', 'valid', 'and', 'alignment', 'is', 'valid', '.']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-driver/src/main/java/io/aeron/driver/Configuration.java#L1228-L1246,test
agentsoz/jill,jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java,IntentionSelector.run,"public void run() {
    Set<Integer> toRemove = new HashSet<Integer>();
    do {
      boolean idle = true;
      // Remove agents that have have become idle due to an external event
      removeInactiveAgents();
      // Add agents that have have become active due to an external event
      addActiveAgents();
      for (Integer i : activeAgents) {
        Agent agent = (Agent) GlobalState.agents.get(i);
        Stack255 agentExecutionStack = (Stack255) (agent).getExecutionStack();
        if (!isStackValid(agent, agentExecutionStack)) {
          // Mark this agent for removal
          toRemove.add(i);
          continue;
        }
        // At least one agent is active
        idle = false;
        // Get the item at the top of the stack
        Object node = (Object) agentExecutionStack.get((byte) (agentExecutionStack.size() - 1));
        if (node instanceof Plan) {
          // If it is a plan then execute a plan step; and if it finished then remove it
          managePlan(i, agentExecutionStack, (Plan) node, toRemove);
        } else if (node instanceof Goal) {
          // If it is a goal then find a plan for it and put it on the stack
          manageGoal(i, agent, agentExecutionStack, (Goal) node);
        }
        agent.nextActiveStack(); // select the next active stack for next time
      }
      // remove agents that have finished executing plans and have gone idle in this cycle
      removeFinishedAgents(toRemove);
      if (idle) {
        waitOnExternalMessage();
        if (shutdown) {
          break;
        }
      }
    } 
    while (true);
    logger.debug(""Pool {} is exiting"", poolid);
  }",java,"public void run() {
    Set<Integer> toRemove = new HashSet<Integer>();
    do {
      boolean idle = true;
      // Remove agents that have have become idle due to an external event
      removeInactiveAgents();
      // Add agents that have have become active due to an external event
      addActiveAgents();
      for (Integer i : activeAgents) {
        Agent agent = (Agent) GlobalState.agents.get(i);
        Stack255 agentExecutionStack = (Stack255) (agent).getExecutionStack();
        if (!isStackValid(agent, agentExecutionStack)) {
          // Mark this agent for removal
          toRemove.add(i);
          continue;
        }
        // At least one agent is active
        idle = false;
        // Get the item at the top of the stack
        Object node = (Object) agentExecutionStack.get((byte) (agentExecutionStack.size() - 1));
        if (node instanceof Plan) {
          // If it is a plan then execute a plan step; and if it finished then remove it
          managePlan(i, agentExecutionStack, (Plan) node, toRemove);
        } else if (node instanceof Goal) {
          // If it is a goal then find a plan for it and put it on the stack
          manageGoal(i, agent, agentExecutionStack, (Goal) node);
        }
        agent.nextActiveStack(); // select the next active stack for next time
      }
      // remove agents that have finished executing plans and have gone idle in this cycle
      removeFinishedAgents(toRemove);
      if (idle) {
        waitOnExternalMessage();
        if (shutdown) {
          break;
        }
      }
    } 
    while (true);
    logger.debug(""Pool {} is exiting"", poolid);
  }","['public', 'void', 'run', '(', ')', '{', 'Set', '<', 'Integer', '>', 'toRemove', '=', 'new', 'HashSet', '<', 'Integer', '>', '(', ')', ';', 'do', '{', 'boolean', 'idle', '=', 'true', ';', '// Remove agents that have have become idle due to an external event', 'removeInactiveAgents', '(', ')', ';', '// Add agents that have have become active due to an external event', 'addActiveAgents', '(', ')', ';', 'for', '(', 'Integer', 'i', ':', 'activeAgents', ')', '{', 'Agent', 'agent', '=', '(', 'Agent', ')', 'GlobalState', '.', 'agents', '.', 'get', '(', 'i', ')', ';', 'Stack255', 'agentExecutionStack', '=', '(', 'Stack255', ')', '(', 'agent', ')', '.', 'getExecutionStack', '(', ')', ';', 'if', '(', '!', 'isStackValid', '(', 'agent', ',', 'agentExecutionStack', ')', ')', '{', '// Mark this agent for removal', 'toRemove', '.', 'add', '(', 'i', ')', ';', 'continue', ';', '}', '// At least one agent is active', 'idle', '=', 'false', ';', '// Get the item at the top of the stack', 'Object', 'node', '=', '(', 'Object', ')', 'agentExecutionStack', '.', 'get', '(', '(', 'byte', ')', '(', 'agentExecutionStack', '.', 'size', '(', ')', '-', '1', ')', ')', ';', 'if', '(', 'node', 'instanceof', 'Plan', ')', '{', '// If it is a plan then execute a plan step; and if it finished then remove it', 'managePlan', '(', 'i', ',', 'agentExecutionStack', ',', '(', 'Plan', ')', 'node', ',', 'toRemove', ')', ';', '}', 'else', 'if', '(', 'node', 'instanceof', 'Goal', ')', '{', '// If it is a goal then find a plan for it and put it on the stack', 'manageGoal', '(', 'i', ',', 'agent', ',', 'agentExecutionStack', ',', '(', 'Goal', ')', 'node', ')', ';', '}', 'agent', '.', 'nextActiveStack', '(', ')', ';', '// select the next active stack for next time', '}', '// remove agents that have finished executing plans and have gone idle in this cycle', 'removeFinishedAgents', '(', 'toRemove', ')', ';', 'if', '(', 'idle', ')', '{', 'waitOnExternalMessage', '(', ')', ';', 'if', '(', 'shutdown', ')', '{', 'break', ';', '}', '}', '}', 'while', '(', 'true', ')', ';', 'logger', '.', 'debug', '(', '""Pool {} is exiting""', ',', 'poolid', ')', ';', '}']",Runs this intentions selction thread.,"['Runs', 'this', 'intentions', 'selction', 'thread', '.']",13126fc78350465b477386132465f84cad719426,https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/core/IntentionSelector.java#L86-L126,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dt/radial/RadialCoordSys.java,RadialCoordSys.isRadialCoordSys,"public static boolean isRadialCoordSys( Formatter parseInfo, CoordinateSystem cs) {
    return (cs.getAzimuthAxis() != null) && (cs.getRadialAxis() != null) && (cs.getElevationAxis() != null);
  }",java,"public static boolean isRadialCoordSys( Formatter parseInfo, CoordinateSystem cs) {
    return (cs.getAzimuthAxis() != null) && (cs.getRadialAxis() != null) && (cs.getElevationAxis() != null);
  }","['public', 'static', 'boolean', 'isRadialCoordSys', '(', 'Formatter', 'parseInfo', ',', 'CoordinateSystem', 'cs', ')', '{', 'return', '(', 'cs', '.', 'getAzimuthAxis', '(', ')', '!=', 'null', ')', '&&', '(', 'cs', '.', 'getRadialAxis', '(', ')', '!=', 'null', ')', '&&', '(', 'cs', '.', 'getElevationAxis', '(', ')', '!=', 'null', ')', ';', '}']","Determine if this CoordinateSystem can be made into a RadialCoordSys.
@param parseInfo put debug information into this Formatter; may be null.
@param cs the CoordinateSystem to test
@return true if it can be made into a RadialCoordSys.","['Determine', 'if', 'this', 'CoordinateSystem', 'can', 'be', 'made', 'into', 'a', 'RadialCoordSys', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dt/radial/RadialCoordSys.java#L36-L38,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/geoloc/Bearing.java,Bearing.findPoint,"public static LatLonPointImpl findPoint(double lat1, double lon1,
                                            double az, double dist,
                                            LatLonPointImpl result) {
        return findPoint(defaultEarth, lat1, lon1, az, dist, result);
    }",java,"public static LatLonPointImpl findPoint(double lat1, double lon1,
                                            double az, double dist,
                                            LatLonPointImpl result) {
        return findPoint(defaultEarth, lat1, lon1, az, dist, result);
    }","['public', 'static', 'LatLonPointImpl', 'findPoint', '(', 'double', 'lat1', ',', 'double', 'lon1', ',', 'double', 'az', ',', 'double', 'dist', ',', 'LatLonPointImpl', 'result', ')', '{', 'return', 'findPoint', '(', 'defaultEarth', ',', 'lat1', ',', 'lon1', ',', 'az', ',', 'dist', ',', 'result', ')', ';', '}']","Calculate a position given an azimuth and distance from
another point.  See details, below.  Uses default Earth.

@param lat1   latitude of starting point
@param lon1   longitude of starting point
@param az     forward azimuth (degrees)
@param dist   distance from the point (km)
@param result Object to use if non-null
@return the position as a LatLonPointImpl","['Calculate', 'a', 'position', 'given', 'an', 'azimuth', 'and', 'distance', 'from', 'another', 'point', '.', 'See', 'details', 'below', '.', 'Uses', 'default', 'Earth', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/geoloc/Bearing.java#L475-L479,test
playframework/playframework,core/play/src/main/java/play/http/HttpEntity.java,HttpEntity.consumeData,"public CompletionStage<ByteString> consumeData(Materializer mat) {
    return dataStream().runFold(ByteString.empty(), ByteString::concat, mat);
  }",java,"public CompletionStage<ByteString> consumeData(Materializer mat) {
    return dataStream().runFold(ByteString.empty(), ByteString::concat, mat);
  }","['public', 'CompletionStage', '<', 'ByteString', '>', 'consumeData', '(', 'Materializer', 'mat', ')', '{', 'return', 'dataStream', '(', ')', '.', 'runFold', '(', 'ByteString', '.', 'empty', '(', ')', ',', 'ByteString', '::', 'concat', ',', 'mat', ')', ';', '}']","Consumes the data.

<p>This method should be used carefully, since if the source represents an ephemeral stream,
then the entity may not be usable after this method is invoked.

@param mat the application's materializer.
@return a CompletionStage holding the data","['Consumes', 'the', 'data', '.']",3c46dca803d24e715d85de678c59dcfac9525a00,https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/http/HttpEntity.java#L52-L54,test
orientechnologies/orientdb,core/src/main/java/com/orientechnologies/orient/core/db/ODatabasePoolAbstract.java,ODatabasePoolAbstract.onStorageUnregistered,"public void onStorageUnregistered(final OStorage iStorage) {
    final String storageURL = iStorage.getURL();

    lock();
    try {
      Set<String> poolToClose = null;

      for (Entry<String, OReentrantResourcePool<String, DB>> e : pools.entrySet()) {
        final int pos = e.getKey().indexOf(""@"");
        final String dbName = e.getKey().substring(pos + 1);
        if (storageURL.equals(dbName)) {
          if (poolToClose == null)
            poolToClose = new HashSet<String>();

          poolToClose.add(e.getKey());
        }
      }

      if (poolToClose != null)
        for (String pool : poolToClose)
          remove(pool);

    } finally {
      unlock();
    }
  }",java,"public void onStorageUnregistered(final OStorage iStorage) {
    final String storageURL = iStorage.getURL();

    lock();
    try {
      Set<String> poolToClose = null;

      for (Entry<String, OReentrantResourcePool<String, DB>> e : pools.entrySet()) {
        final int pos = e.getKey().indexOf(""@"");
        final String dbName = e.getKey().substring(pos + 1);
        if (storageURL.equals(dbName)) {
          if (poolToClose == null)
            poolToClose = new HashSet<String>();

          poolToClose.add(e.getKey());
        }
      }

      if (poolToClose != null)
        for (String pool : poolToClose)
          remove(pool);

    } finally {
      unlock();
    }
  }","['public', 'void', 'onStorageUnregistered', '(', 'final', 'OStorage', 'iStorage', ')', '{', 'final', 'String', 'storageURL', '=', 'iStorage', '.', 'getURL', '(', ')', ';', 'lock', '(', ')', ';', 'try', '{', 'Set', '<', 'String', '>', 'poolToClose', '=', 'null', ';', 'for', '(', 'Entry', '<', 'String', ',', 'OReentrantResourcePool', '<', 'String', ',', 'DB', '>', '>', 'e', ':', 'pools', '.', 'entrySet', '(', ')', ')', '{', 'final', 'int', 'pos', '=', 'e', '.', 'getKey', '(', ')', '.', 'indexOf', '(', '""@""', ')', ';', 'final', 'String', 'dbName', '=', 'e', '.', 'getKey', '(', ')', '.', 'substring', '(', 'pos', '+', '1', ')', ';', 'if', '(', 'storageURL', '.', 'equals', '(', 'dbName', ')', ')', '{', 'if', '(', 'poolToClose', '==', 'null', ')', 'poolToClose', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'poolToClose', '.', 'add', '(', 'e', '.', 'getKey', '(', ')', ')', ';', '}', '}', 'if', '(', 'poolToClose', '!=', 'null', ')', 'for', '(', 'String', 'pool', ':', 'poolToClose', ')', 'remove', '(', 'pool', ')', ';', '}', 'finally', '{', 'unlock', '(', ')', ';', '}', '}']",Removes from memory the pool associated to the closed storage. This avoids pool open against closed storages.,"['Removes', 'from', 'memory', 'the', 'pool', 'associated', 'to', 'the', 'closed', 'storage', '.', 'This', 'avoids', 'pool', 'open', 'against', 'closed', 'storages', '.']",d970b12033f0462f0239ea0ad8ed41207e6e26f1,https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/ODatabasePoolAbstract.java#L324-L349,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/dataset/CoordinateAxis2D.java,CoordinateAxis2D.section,"public CoordinateAxis2D section(Range r1, Range r2) throws InvalidRangeException {
    List<Range> section = new ArrayList<>();
    section.add(r1);
    section.add(r2);
    return (CoordinateAxis2D) section(section);
  }",java,"public CoordinateAxis2D section(Range r1, Range r2) throws InvalidRangeException {
    List<Range> section = new ArrayList<>();
    section.add(r1);
    section.add(r2);
    return (CoordinateAxis2D) section(section);
  }","['public', 'CoordinateAxis2D', 'section', '(', 'Range', 'r1', ',', 'Range', 'r2', ')', 'throws', 'InvalidRangeException', '{', 'List', '<', 'Range', '>', 'section', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'section', '.', 'add', '(', 'r1', ')', ';', 'section', '.', 'add', '(', 'r2', ')', ';', 'return', '(', 'CoordinateAxis2D', ')', 'section', '(', 'section', ')', ';', '}']","Create a new CoordinateAxis2D as a section of this CoordinateAxis2D.

@param r1 the section on the first index
@param r2 the section on the second index
@return a section of this CoordinateAxis2D
@throws InvalidRangeException if specified Ranges are invalid","['Create', 'a', 'new', 'CoordinateAxis2D', 'as', 'a', 'section', 'of', 'this', 'CoordinateAxis2D', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/CoordinateAxis2D.java#L154-L159,test
stanfy/enroscar,net/src/main/java/com/stanfy/enroscar/rest/request/net/multipart/Part.java,Part.sendDispositionHeader,"protected void sendDispositionHeader(final OutputStream out) throws IOException {
    if (DEBUG) { Log.v(TAG, ""enter sendDispositionHeader(OutputStream out)""); }
    out.write(CONTENT_DISPOSITION_BYTES);
    out.write(QUOTE_BYTES);
    out.write(EncodingUtils.getAsciiBytes(getName()));
    out.write(QUOTE_BYTES);
  }",java,"protected void sendDispositionHeader(final OutputStream out) throws IOException {
    if (DEBUG) { Log.v(TAG, ""enter sendDispositionHeader(OutputStream out)""); }
    out.write(CONTENT_DISPOSITION_BYTES);
    out.write(QUOTE_BYTES);
    out.write(EncodingUtils.getAsciiBytes(getName()));
    out.write(QUOTE_BYTES);
  }","['protected', 'void', 'sendDispositionHeader', '(', 'final', 'OutputStream', 'out', ')', 'throws', 'IOException', '{', 'if', '(', 'DEBUG', ')', '{', 'Log', '.', 'v', '(', 'TAG', ',', '""enter sendDispositionHeader(OutputStream out)""', ')', ';', '}', 'out', '.', 'write', '(', 'CONTENT_DISPOSITION_BYTES', ')', ';', 'out', '.', 'write', '(', 'QUOTE_BYTES', ')', ';', 'out', '.', 'write', '(', 'EncodingUtils', '.', 'getAsciiBytes', '(', 'getName', '(', ')', ')', ')', ';', 'out', '.', 'write', '(', 'QUOTE_BYTES', ')', ';', '}']","Write the content disposition header to the specified output stream.

@param out The output stream
@throws IOException If an IO problem occurs.","['Write', 'the', 'content', 'disposition', 'header', 'to', 'the', 'specified', 'output', 'stream', '.']",0e64f3c309d62e359b55ddcba10e3cc592f5e083,https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/net/src/main/java/com/stanfy/enroscar/rest/request/net/multipart/Part.java#L158-L164,test
rupertlssmith/lojix,lojix/learning/src/main/com/thesett/aima/learning/AbstractLearningMethod.java,AbstractLearningMethod.initialize,"protected void initialize() throws LearningFailureException
    {
        // Check that at least one training example has been set.
        if (inputExamples.isEmpty())
        {
            throw new LearningFailureException(""No training examples to learn from."", null);
        }

        // Check if an output property set to override the default was not set.
        if (!outputPropertiesSet)
        {
            // Set the 'goal' property as the default.
            addGoalProperty(""goal"");
        }

        // Check if an input property set to override the default was not set.
        if (!inputPropertiesSet)
        {
            // Extract all properties from the first example in the training data set as the input property set,
            // automatically excluding any properties which are in the output set.
            State example = inputExamples.iterator().next();
            Set<String> allProperties = example.getComponentType().getAllPropertyNames();

            inputProperties = new HashSet<String>(allProperties);
            inputProperties.removeAll(outputProperties);

            inputPropertiesSet = true;
        }

        // Check all the training examples have all the required input and output properties.
        for (State example : inputExamples)
        {
            Set<String> properties = example.getComponentType().getAllPropertyNames();

            String errorMessage = """";

            for (String inputProperty : inputProperties)
            {
                if (!properties.contains(inputProperty))
                {
                    errorMessage +=
                        ""The training example, "" + example + "" does not contain the specified input property, "" +
                        inputProperty + ""\n"";
                }
            }

            for (String outputProperty : outputProperties)
            {
                if (!properties.contains(outputProperty))
                {
                    errorMessage +=
                        ""The training example, "" + example + "" does not contain the specified output property, "" +
                        outputProperty + ""\n"";
                }
            }

            if (!"""".equals(errorMessage))
            {
                throw new LearningFailureException(errorMessage, null);
            }
        }
    }",java,"protected void initialize() throws LearningFailureException
    {
        // Check that at least one training example has been set.
        if (inputExamples.isEmpty())
        {
            throw new LearningFailureException(""No training examples to learn from."", null);
        }

        // Check if an output property set to override the default was not set.
        if (!outputPropertiesSet)
        {
            // Set the 'goal' property as the default.
            addGoalProperty(""goal"");
        }

        // Check if an input property set to override the default was not set.
        if (!inputPropertiesSet)
        {
            // Extract all properties from the first example in the training data set as the input property set,
            // automatically excluding any properties which are in the output set.
            State example = inputExamples.iterator().next();
            Set<String> allProperties = example.getComponentType().getAllPropertyNames();

            inputProperties = new HashSet<String>(allProperties);
            inputProperties.removeAll(outputProperties);

            inputPropertiesSet = true;
        }

        // Check all the training examples have all the required input and output properties.
        for (State example : inputExamples)
        {
            Set<String> properties = example.getComponentType().getAllPropertyNames();

            String errorMessage = """";

            for (String inputProperty : inputProperties)
            {
                if (!properties.contains(inputProperty))
                {
                    errorMessage +=
                        ""The training example, "" + example + "" does not contain the specified input property, "" +
                        inputProperty + ""\n"";
                }
            }

            for (String outputProperty : outputProperties)
            {
                if (!properties.contains(outputProperty))
                {
                    errorMessage +=
                        ""The training example, "" + example + "" does not contain the specified output property, "" +
                        outputProperty + ""\n"";
                }
            }

            if (!"""".equals(errorMessage))
            {
                throw new LearningFailureException(errorMessage, null);
            }
        }
    }","['protected', 'void', 'initialize', '(', ')', 'throws', 'LearningFailureException', '{', '// Check that at least one training example has been set.', 'if', '(', 'inputExamples', '.', 'isEmpty', '(', ')', ')', '{', 'throw', 'new', 'LearningFailureException', '(', '""No training examples to learn from.""', ',', 'null', ')', ';', '}', '// Check if an output property set to override the default was not set.', 'if', '(', '!', 'outputPropertiesSet', ')', '{', ""// Set the 'goal' property as the default."", 'addGoalProperty', '(', '""goal""', ')', ';', '}', '// Check if an input property set to override the default was not set.', 'if', '(', '!', 'inputPropertiesSet', ')', '{', '// Extract all properties from the first example in the training data set as the input property set,', '// automatically excluding any properties which are in the output set.', 'State', 'example', '=', 'inputExamples', '.', 'iterator', '(', ')', '.', 'next', '(', ')', ';', 'Set', '<', 'String', '>', 'allProperties', '=', 'example', '.', 'getComponentType', '(', ')', '.', 'getAllPropertyNames', '(', ')', ';', 'inputProperties', '=', 'new', 'HashSet', '<', 'String', '>', '(', 'allProperties', ')', ';', 'inputProperties', '.', 'removeAll', '(', 'outputProperties', ')', ';', 'inputPropertiesSet', '=', 'true', ';', '}', '// Check all the training examples have all the required input and output properties.', 'for', '(', 'State', 'example', ':', 'inputExamples', ')', '{', 'Set', '<', 'String', '>', 'properties', '=', 'example', '.', 'getComponentType', '(', ')', '.', 'getAllPropertyNames', '(', ')', ';', 'String', 'errorMessage', '=', '""""', ';', 'for', '(', 'String', 'inputProperty', ':', 'inputProperties', ')', '{', 'if', '(', '!', 'properties', '.', 'contains', '(', 'inputProperty', ')', ')', '{', 'errorMessage', '+=', '""The training example, ""', '+', 'example', '+', '"" does not contain the specified input property, ""', '+', 'inputProperty', '+', '""\\n""', ';', '}', '}', 'for', '(', 'String', 'outputProperty', ':', 'outputProperties', ')', '{', 'if', '(', '!', 'properties', '.', 'contains', '(', 'outputProperty', ')', ')', '{', 'errorMessage', '+=', '""The training example, ""', '+', 'example', '+', '"" does not contain the specified output property, ""', '+', 'outputProperty', '+', '""\\n""', ';', '}', '}', 'if', '(', '!', '""""', '.', 'equals', '(', 'errorMessage', ')', ')', '{', 'throw', 'new', 'LearningFailureException', '(', 'errorMessage', ',', 'null', ')', ';', '}', '}', '}']","This should be called at the start of the learn method to initialize the input and output property sets.

@throws LearningFailureException If the set of training data and input and output properties are malformed.
Either because the training data set is empty or because there are input or
output properties that are not found in the training data set.","['This', 'should', 'be', 'called', 'at', 'the', 'start', 'of', 'the', 'learn', 'method', 'to', 'initialize', 'the', 'input', 'and', 'output', 'property', 'sets', '.']",ad494dc8bce2345567de7689d42291d4b30fbd51,https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/learning/src/main/com/thesett/aima/learning/AbstractLearningMethod.java#L232-L293,test
Unidata/thredds,cdm/src/main/java/ucar/unidata/io/RandomAccessFile.java,RandomAccessFile.writeDouble,"public final void writeDouble(double[] pa, int start, int n) throws IOException {
    for (int i = 0; i < n; i++) {
      writeDouble(pa[start + i]);
    }
  }",java,"public final void writeDouble(double[] pa, int start, int n) throws IOException {
    for (int i = 0; i < n; i++) {
      writeDouble(pa[start + i]);
    }
  }","['public', 'final', 'void', 'writeDouble', '(', 'double', '[', ']', 'pa', ',', 'int', 'start', ',', 'int', 'n', ')', 'throws', 'IOException', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'writeDouble', '(', 'pa', '[', 'start', '+', 'i', ']', ')', ';', '}', '}']","Write an array of doubles

@param pa    write from this array
@param start starting with this element in the array
@param n     write this number of elements
@throws IOException on read error","['Write', 'an', 'array', 'of', 'doubles']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/io/RandomAccessFile.java#L1716-L1720,test
passy/Android-DirectoryChooser,library/src/main/java/net/rdrei/android/dirchooser/DirectoryChooserFragment.java,DirectoryChooserFragment.createFileObserver,"private FileObserver createFileObserver(final String path) {
        return new FileObserver(path, FileObserver.CREATE | FileObserver.DELETE
                | FileObserver.MOVED_FROM | FileObserver.MOVED_TO) {

            @Override
            public void onEvent(final int event, final String path) {
                debug(""FileObserver received event %d"", event);
                final Activity activity = getActivity();

                if (activity != null) {
                    activity.runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            refreshDirectory();
                        }
                    });
                }
            }
        };
    }",java,"private FileObserver createFileObserver(final String path) {
        return new FileObserver(path, FileObserver.CREATE | FileObserver.DELETE
                | FileObserver.MOVED_FROM | FileObserver.MOVED_TO) {

            @Override
            public void onEvent(final int event, final String path) {
                debug(""FileObserver received event %d"", event);
                final Activity activity = getActivity();

                if (activity != null) {
                    activity.runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            refreshDirectory();
                        }
                    });
                }
            }
        };
    }","['private', 'FileObserver', 'createFileObserver', '(', 'final', 'String', 'path', ')', '{', 'return', 'new', 'FileObserver', '(', 'path', ',', 'FileObserver', '.', 'CREATE', '|', 'FileObserver', '.', 'DELETE', '|', 'FileObserver', '.', 'MOVED_FROM', '|', 'FileObserver', '.', 'MOVED_TO', ')', '{', '@', 'Override', 'public', 'void', 'onEvent', '(', 'final', 'int', 'event', ',', 'final', 'String', 'path', ')', '{', 'debug', '(', '""FileObserver received event %d""', ',', 'event', ')', ';', 'final', 'Activity', 'activity', '=', 'getActivity', '(', ')', ';', 'if', '(', 'activity', '!=', 'null', ')', '{', 'activity', '.', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'refreshDirectory', '(', ')', ';', '}', '}', ')', ';', '}', '}', '}', ';', '}']",Sets up a FileObserver to watch the current directory.,"['Sets', 'up', 'a', 'FileObserver', 'to', 'watch', 'the', 'current', 'directory', '.']",ee5b7f1b4cf01598b8719fcdf8ebd066418c48f4,https://github.com/passy/Android-DirectoryChooser/blob/ee5b7f1b4cf01598b8719fcdf8ebd066418c48f4/library/src/main/java/net/rdrei/android/dirchooser/DirectoryChooserFragment.java#L453-L472,test
oblac/jodd,jodd-proxetta/src/main/java/jodd/asm7/ByteVector.java,ByteVector.putByte,"public ByteVector putByte(final int byteValue) {
    int currentLength = length;
    if (currentLength + 1 > data.length) {
      enlarge(1);
    }
    data[currentLength++] = (byte) byteValue;
    length = currentLength;
    return this;
  }",java,"public ByteVector putByte(final int byteValue) {
    int currentLength = length;
    if (currentLength + 1 > data.length) {
      enlarge(1);
    }
    data[currentLength++] = (byte) byteValue;
    length = currentLength;
    return this;
  }","['public', 'ByteVector', 'putByte', '(', 'final', 'int', 'byteValue', ')', '{', 'int', 'currentLength', '=', 'length', ';', 'if', '(', 'currentLength', '+', '1', '>', 'data', '.', 'length', ')', '{', 'enlarge', '(', '1', ')', ';', '}', 'data', '[', 'currentLength', '++', ']', '=', '(', 'byte', ')', 'byteValue', ';', 'length', '=', 'currentLength', ';', 'return', 'this', ';', '}']","Puts a byte into this byte vector. The byte vector is automatically enlarged if necessary.

@param byteValue a byte.
@return this byte vector.","['Puts', 'a', 'byte', 'into', 'this', 'byte', 'vector', '.', 'The', 'byte', 'vector', 'is', 'automatically', 'enlarged', 'if', 'necessary', '.']",85ad7f813ec0e07ecd27042aeb47ff2047631fa5,https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/ByteVector.java#L74-L82,test
deeplearning4j/nd4j,nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/concurrency/CudaAffinityManager.java,CudaAffinityManager.getNextDevice,"protected Integer getNextDevice(long threadId) {
        Integer device = null;
        if (!CudaEnvironment.getInstance().getConfiguration().isForcedSingleGPU() && getNumberOfDevices() > 0) {
            // simple round-robin here
            synchronized (this) {
                device = CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().get(devPtr.getAndIncrement());

                // We check only for number of entries here, not their actual values
                if (devPtr.get() >= CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().size())
                    devPtr.set(0);

                logger.debug(""Mapping thread [{}] to device [{}], out of [{}] devices..."", threadId, device,
                        CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().size());
            }
        } else {
            device = CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().get(0);
            logger.debug(""Single device is forced, mapping to device [{}]"", device);
        }

        return device;
    }",java,"protected Integer getNextDevice(long threadId) {
        Integer device = null;
        if (!CudaEnvironment.getInstance().getConfiguration().isForcedSingleGPU() && getNumberOfDevices() > 0) {
            // simple round-robin here
            synchronized (this) {
                device = CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().get(devPtr.getAndIncrement());

                // We check only for number of entries here, not their actual values
                if (devPtr.get() >= CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().size())
                    devPtr.set(0);

                logger.debug(""Mapping thread [{}] to device [{}], out of [{}] devices..."", threadId, device,
                        CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().size());
            }
        } else {
            device = CudaEnvironment.getInstance().getConfiguration().getAvailableDevices().get(0);
            logger.debug(""Single device is forced, mapping to device [{}]"", device);
        }

        return device;
    }","['protected', 'Integer', 'getNextDevice', '(', 'long', 'threadId', ')', '{', 'Integer', 'device', '=', 'null', ';', 'if', '(', '!', 'CudaEnvironment', '.', 'getInstance', '(', ')', '.', 'getConfiguration', '(', ')', '.', 'isForcedSingleGPU', '(', ')', '&&', 'getNumberOfDevices', '(', ')', '>', '0', ')', '{', '// simple round-robin here', 'synchronized', '(', 'this', ')', '{', 'device', '=', 'CudaEnvironment', '.', 'getInstance', '(', ')', '.', 'getConfiguration', '(', ')', '.', 'getAvailableDevices', '(', ')', '.', 'get', '(', 'devPtr', '.', 'getAndIncrement', '(', ')', ')', ';', '// We check only for number of entries here, not their actual values', 'if', '(', 'devPtr', '.', 'get', '(', ')', '>=', 'CudaEnvironment', '.', 'getInstance', '(', ')', '.', 'getConfiguration', '(', ')', '.', 'getAvailableDevices', '(', ')', '.', 'size', '(', ')', ')', 'devPtr', '.', 'set', '(', '0', ')', ';', 'logger', '.', 'debug', '(', '""Mapping thread [{}] to device [{}], out of [{}] devices...""', ',', 'threadId', ',', 'device', ',', 'CudaEnvironment', '.', 'getInstance', '(', ')', '.', 'getConfiguration', '(', ')', '.', 'getAvailableDevices', '(', ')', '.', 'size', '(', ')', ')', ';', '}', '}', 'else', '{', 'device', '=', 'CudaEnvironment', '.', 'getInstance', '(', ')', '.', 'getConfiguration', '(', ')', '.', 'getAvailableDevices', '(', ')', '.', 'get', '(', '0', ')', ';', 'logger', '.', 'debug', '(', '""Single device is forced, mapping to device [{}]""', ',', 'device', ')', ';', '}', 'return', 'device', ';', '}']","This method returns device id available. Round-robin balancing used here.

@param threadId this parameter can be anything, it's used for logging only.
@return","['This', 'method', 'returns', 'device', 'id', 'available', '.', 'Round', '-', 'robin', 'balancing', 'used', 'here', '.']",8f005bcecb240d1fbb83b9d390ad801d1d3b6933,https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/jita/concurrency/CudaAffinityManager.java#L152-L172,test
spring-projects/spring-security,core/src/main/java/org/springframework/security/core/authority/mapping/MapBasedAttributes2GrantedAuthoritiesMapper.java,MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection,"private void addGrantedAuthorityCollection(Collection<GrantedAuthority> result,
			Object value) {
		if (value == null) {
			return;
		}
		if (value instanceof Collection<?>) {
			addGrantedAuthorityCollection(result, (Collection<?>) value);
		}
		else if (value instanceof Object[]) {
			addGrantedAuthorityCollection(result, (Object[]) value);
		}
		else if (value instanceof String) {
			addGrantedAuthorityCollection(result, (String) value);
		}
		else if (value instanceof GrantedAuthority) {
			result.add((GrantedAuthority) value);
		}
		else {
			throw new IllegalArgumentException(""Invalid object type: ""
					+ value.getClass().getName());
		}
	}",java,"private void addGrantedAuthorityCollection(Collection<GrantedAuthority> result,
			Object value) {
		if (value == null) {
			return;
		}
		if (value instanceof Collection<?>) {
			addGrantedAuthorityCollection(result, (Collection<?>) value);
		}
		else if (value instanceof Object[]) {
			addGrantedAuthorityCollection(result, (Object[]) value);
		}
		else if (value instanceof String) {
			addGrantedAuthorityCollection(result, (String) value);
		}
		else if (value instanceof GrantedAuthority) {
			result.add((GrantedAuthority) value);
		}
		else {
			throw new IllegalArgumentException(""Invalid object type: ""
					+ value.getClass().getName());
		}
	}","['private', 'void', 'addGrantedAuthorityCollection', '(', 'Collection', '<', 'GrantedAuthority', '>', 'result', ',', 'Object', 'value', ')', '{', 'if', '(', 'value', '==', 'null', ')', '{', 'return', ';', '}', 'if', '(', 'value', 'instanceof', 'Collection', '<', '?', '>', ')', '{', 'addGrantedAuthorityCollection', '(', 'result', ',', '(', 'Collection', '<', '?', '>', ')', 'value', ')', ';', '}', 'else', 'if', '(', 'value', 'instanceof', 'Object', '[', ']', ')', '{', 'addGrantedAuthorityCollection', '(', 'result', ',', '(', 'Object', '[', ']', ')', 'value', ')', ';', '}', 'else', 'if', '(', 'value', 'instanceof', 'String', ')', '{', 'addGrantedAuthorityCollection', '(', 'result', ',', '(', 'String', ')', 'value', ')', ';', '}', 'else', 'if', '(', 'value', 'instanceof', 'GrantedAuthority', ')', '{', 'result', '.', 'add', '(', '(', 'GrantedAuthority', ')', 'value', ')', ';', '}', 'else', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Invalid object type: ""', '+', 'value', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', ')', ';', '}', '}']","Convert the given value to a collection of Granted Authorities, adding the result
to the given result collection.

@param value The value to convert to a GrantedAuthority Collection
@return Collection containing the GrantedAuthority Collection","['Convert', 'the', 'given', 'value', 'to', 'a', 'collection', 'of', 'Granted', 'Authorities', 'adding', 'the', 'result', 'to', 'the', 'given', 'result', 'collection', '.']",98a8467e4c2ae05b3e09c67ece856944fa48ed23,https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/core/src/main/java/org/springframework/security/core/authority/mapping/MapBasedAttributes2GrantedAuthoritiesMapper.java#L122-L143,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/ft/point/standard/CoordSysEvaluator.java,CoordSysEvaluator.findCoordNameByType,"static public String findCoordNameByType(NetcdfDataset ds, AxisType atype) {
     CoordinateAxis coordAxis = findCoordByType(ds, atype);
     return coordAxis == null ? null : coordAxis.getFullName();
   }",java,"static public String findCoordNameByType(NetcdfDataset ds, AxisType atype) {
     CoordinateAxis coordAxis = findCoordByType(ds, atype);
     return coordAxis == null ? null : coordAxis.getFullName();
   }","['static', 'public', 'String', 'findCoordNameByType', '(', 'NetcdfDataset', 'ds', ',', 'AxisType', 'atype', ')', '{', 'CoordinateAxis', 'coordAxis', '=', 'findCoordByType', '(', 'ds', ',', 'atype', ')', ';', 'return', 'coordAxis', '==', 'null', '?', 'null', ':', 'coordAxis', '.', 'getFullName', '(', ')', ';', '}']","search for Axis by Type.
@param ds search in this dataset's ""Best"" coordinate system.
@param atype search for this type of CoordinateAxis. takes the first one it finds.
@return the found CoordinateAxis name, or null if none","['search', 'for', 'Axis', 'by', 'Type', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/CoordSysEvaluator.java#L47-L50,test
Unidata/thredds,cdm/src/main/java/ucar/nc2/units/SimpleUnit.java,SimpleUnit.getValue,"public double getValue() {
    if (!(uu instanceof ScaledUnit)) return Double.NaN;
    ScaledUnit offset = (ScaledUnit) uu;
    return offset.getScale();
  }",java,"public double getValue() {
    if (!(uu instanceof ScaledUnit)) return Double.NaN;
    ScaledUnit offset = (ScaledUnit) uu;
    return offset.getScale();
  }","['public', 'double', 'getValue', '(', ')', '{', 'if', '(', '!', '(', 'uu', 'instanceof', 'ScaledUnit', ')', ')', 'return', 'Double', '.', 'NaN', ';', 'ScaledUnit', 'offset', '=', '(', 'ScaledUnit', ')', 'uu', ';', 'return', 'offset', '.', 'getScale', '(', ')', ';', '}']","Extract the value, can only be called for ScaledUnit.
@return value of this unit if ScaledUnit, else NaN","['Extract', 'the', 'value', 'can', 'only', 'be', 'called', 'for', 'ScaledUnit', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/units/SimpleUnit.java#L313-L317,test
jboss/jboss-common-core,src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java,PublicId.stringReplace,"private static String stringReplace(String str,
				      String oldStr,
				      String newStr) {

    String result = """";
    int pos = str.indexOf(oldStr);

    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);

    while (pos >= 0) {
      //      System.out.println(str + "" ("" + pos + "")"");
      result += str.substring(0, pos);
      result += newStr;
      str = str.substring(pos+1);

      pos = str.indexOf(oldStr);
    }

    return result + str;
  }",java,"private static String stringReplace(String str,
				      String oldStr,
				      String newStr) {

    String result = """";
    int pos = str.indexOf(oldStr);

    //    System.out.println(str + "": "" + oldStr + "" => "" + newStr);

    while (pos >= 0) {
      //      System.out.println(str + "" ("" + pos + "")"");
      result += str.substring(0, pos);
      result += newStr;
      str = str.substring(pos+1);

      pos = str.indexOf(oldStr);
    }

    return result + str;
  }","['private', 'static', 'String', 'stringReplace', '(', 'String', 'str', ',', 'String', 'oldStr', ',', 'String', 'newStr', ')', '{', 'String', 'result', '=', '""""', ';', 'int', 'pos', '=', 'str', '.', 'indexOf', '(', 'oldStr', ')', ';', '//    System.out.println(str + "": "" + oldStr + "" => "" + newStr);', 'while', '(', 'pos', '>=', '0', ')', '{', '//      System.out.println(str + "" ("" + pos + "")"");', 'result', '+=', 'str', '.', 'substring', '(', '0', ',', 'pos', ')', ';', 'result', '+=', 'newStr', ';', 'str', '=', 'str', '.', 'substring', '(', 'pos', '+', '1', ')', ';', 'pos', '=', 'str', '.', 'indexOf', '(', 'oldStr', ')', ';', '}', 'return', 'result', '+', 'str', ';', '}']",Replace one string with another.,"['Replace', 'one', 'string', 'with', 'another', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/helpers/PublicId.java#L139-L158,test
objectify/objectify,src/main/java/com/googlecode/objectify/ObjectifyFactory.java,ObjectifyFactory.allocate,"private <T> KeyRange<T> allocate(final IncompleteKey incompleteKey, final int num) {
		final IncompleteKey[] allocations = new IncompleteKey[num];
		Arrays.fill(allocations, incompleteKey);

		final List<Key<T>> typedKeys = datastore().allocateId(allocations).stream()
				.map(Key::<T>create)
				.collect(Collectors.toList());

		return new KeyRange<>(typedKeys);
	}",java,"private <T> KeyRange<T> allocate(final IncompleteKey incompleteKey, final int num) {
		final IncompleteKey[] allocations = new IncompleteKey[num];
		Arrays.fill(allocations, incompleteKey);

		final List<Key<T>> typedKeys = datastore().allocateId(allocations).stream()
				.map(Key::<T>create)
				.collect(Collectors.toList());

		return new KeyRange<>(typedKeys);
	}","['private', '<', 'T', '>', 'KeyRange', '<', 'T', '>', 'allocate', '(', 'final', 'IncompleteKey', 'incompleteKey', ',', 'final', 'int', 'num', ')', '{', 'final', 'IncompleteKey', '[', ']', 'allocations', '=', 'new', 'IncompleteKey', '[', 'num', ']', ';', 'Arrays', '.', 'fill', '(', 'allocations', ',', 'incompleteKey', ')', ';', 'final', 'List', '<', 'Key', '<', 'T', '>', '>', 'typedKeys', '=', 'datastore', '(', ')', '.', 'allocateId', '(', 'allocations', ')', '.', 'stream', '(', ')', '.', 'map', '(', 'Key', '::', '<', 'T', '>', 'create', ')', '.', 'collect', '(', 'Collectors', '.', 'toList', '(', ')', ')', ';', 'return', 'new', 'KeyRange', '<>', '(', 'typedKeys', ')', ';', '}']",Allocate num copies of the incompleteKey,"['Allocate', 'num', 'copies', 'of', 'the', 'incompleteKey']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/ObjectifyFactory.java#L366-L375,test
real-logic/aeron,aeron-client/src/main/java/io/aeron/CommonContext.java,CommonContext.isDriverActive,"public static boolean isDriverActive(
        final File directory, final long driverTimeoutMs, final Consumer<String> logger)
    {
        final File cncFile = new File(directory, CncFileDescriptor.CNC_FILE);

        if (cncFile.exists() && cncFile.length() > 0)
        {
            logger.accept(""INFO: Aeron CnC file exists: "" + cncFile);

            final MappedByteBuffer cncByteBuffer = IoUtil.mapExistingFile(cncFile, ""CnC file"");
            try
            {
                return isDriverActive(driverTimeoutMs, logger, cncByteBuffer);
            }
            finally
            {
                IoUtil.unmap(cncByteBuffer);
            }
        }

        return false;
    }",java,"public static boolean isDriverActive(
        final File directory, final long driverTimeoutMs, final Consumer<String> logger)
    {
        final File cncFile = new File(directory, CncFileDescriptor.CNC_FILE);

        if (cncFile.exists() && cncFile.length() > 0)
        {
            logger.accept(""INFO: Aeron CnC file exists: "" + cncFile);

            final MappedByteBuffer cncByteBuffer = IoUtil.mapExistingFile(cncFile, ""CnC file"");
            try
            {
                return isDriverActive(driverTimeoutMs, logger, cncByteBuffer);
            }
            finally
            {
                IoUtil.unmap(cncByteBuffer);
            }
        }

        return false;
    }","['public', 'static', 'boolean', 'isDriverActive', '(', 'final', 'File', 'directory', ',', 'final', 'long', 'driverTimeoutMs', ',', 'final', 'Consumer', '<', 'String', '>', 'logger', ')', '{', 'final', 'File', 'cncFile', '=', 'new', 'File', '(', 'directory', ',', 'CncFileDescriptor', '.', 'CNC_FILE', ')', ';', 'if', '(', 'cncFile', '.', 'exists', '(', ')', '&&', 'cncFile', '.', 'length', '(', ')', '>', '0', ')', '{', 'logger', '.', 'accept', '(', '""INFO: Aeron CnC file exists: ""', '+', 'cncFile', ')', ';', 'final', 'MappedByteBuffer', 'cncByteBuffer', '=', 'IoUtil', '.', 'mapExistingFile', '(', 'cncFile', ',', '""CnC file""', ')', ';', 'try', '{', 'return', 'isDriverActive', '(', 'driverTimeoutMs', ',', 'logger', ',', 'cncByteBuffer', ')', ';', '}', 'finally', '{', 'IoUtil', '.', 'unmap', '(', 'cncByteBuffer', ')', ';', '}', '}', 'return', 'false', ';', '}']","Is a media driver active in the given directory?

@param directory       to check
@param driverTimeoutMs for the driver liveness check.
@param logger          for feedback as liveness checked.
@return true if a driver is active or false if not.","['Is', 'a', 'media', 'driver', 'active', 'in', 'the', 'given', 'directory?']",045c32f0256d1ea35d562520216affc281a41239,https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-client/src/main/java/io/aeron/CommonContext.java#L476-L497,test
Unidata/thredds,grib/src/main/java/ucar/nc2/grib/collection/GribCollectionMutable.java,GribCollectionMutable.getFilenames,"public List<String> getFilenames() {
    List<String> result = new ArrayList<>();
    for (MFile file : fileMap.values())
      result.add(file.getPath());
    Collections.sort(result);
    return result;
  }",java,"public List<String> getFilenames() {
    List<String> result = new ArrayList<>();
    for (MFile file : fileMap.values())
      result.add(file.getPath());
    Collections.sort(result);
    return result;
  }","['public', 'List', '<', 'String', '>', 'getFilenames', '(', ')', '{', 'List', '<', 'String', '>', 'result', '=', 'new', 'ArrayList', '<>', '(', ')', ';', 'for', '(', 'MFile', 'file', ':', 'fileMap', '.', 'values', '(', ')', ')', 'result', '.', '(', 'file', '.', 'getPath', '(', ')', ')', ';', 'Collections', '.', 'sort', '(', 'result', ')', ';', 'return', 'result', ';', '}']","The files that comprise the collection.
Actual paths, including the grib cache if used.

@return list of filename.","['The', 'files', 'that', 'comprise', 'the', 'collection', '.', 'Actual', 'paths', 'including', 'the', 'grib', 'cache', 'if', 'used', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/grib/src/main/java/ucar/nc2/grib/collection/GribCollectionMutable.java#L149-L155,test
wro4j/wro4j,wro4j-core/src/main/java/ro/isdc/wro/util/WroUtil.java,WroUtil.safeCopy,"public static void safeCopy(final Reader reader, final Writer writer)
      throws IOException {
    try {
      IOUtils.copy(reader, writer);
    } finally {
      IOUtils.closeQuietly(reader);
      IOUtils.closeQuietly(writer);
    }
  }",java,"public static void safeCopy(final Reader reader, final Writer writer)
      throws IOException {
    try {
      IOUtils.copy(reader, writer);
    } finally {
      IOUtils.closeQuietly(reader);
      IOUtils.closeQuietly(writer);
    }
  }","['public', 'static', 'void', 'safeCopy', '(', 'final', 'Reader', 'reader', ',', 'final', 'Writer', 'writer', ')', 'throws', 'IOException', '{', 'try', '{', 'IOUtils', '.', 'copy', '(', 'reader', ',', 'writer', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'reader', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'writer', ')', ';', '}', '}']","Copy and close the reader and writer streams.

@param reader
The source stream.
@param writer
The destination stream.
@throws IOException
If content cannot be copy.","['Copy', 'and', 'close', 'the', 'reader', 'and', 'writer', 'streams', '.']",d2a3de71ab8bf0af7061fb6327501e08198338df,https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/util/WroUtil.java#L351-L359,test
basis-technology-corp/tcl-regex-java,src/main/java/com/basistech/tclre/Lex.java,Lex.lexstart,"void lexstart() throws RegexException {
        prefixes();         /* may turn on new type bits etc. */

        if (0 != (v.cflags & Flags.REG_QUOTE)) {
            assert 0 == (v.cflags & (Flags.REG_ADVANCED | Flags.REG_EXPANDED | Flags.REG_NEWLINE));
            intocon(L_Q);
        } else if (0 != (v.cflags & Flags.REG_EXTENDED)) {
            assert 0 == (v.cflags & Flags.REG_QUOTE);
            intocon(L_ERE);
        } else {
            assert 0 == (v.cflags & (Flags.REG_QUOTE | Flags.REG_ADVF));
            intocon(L_BRE);
        }

        v.nexttype = Compiler.EMPTY;        /* remember we were at the start */
        next();         /* set up the first token */
    }",java,"void lexstart() throws RegexException {
        prefixes();         /* may turn on new type bits etc. */

        if (0 != (v.cflags & Flags.REG_QUOTE)) {
            assert 0 == (v.cflags & (Flags.REG_ADVANCED | Flags.REG_EXPANDED | Flags.REG_NEWLINE));
            intocon(L_Q);
        } else if (0 != (v.cflags & Flags.REG_EXTENDED)) {
            assert 0 == (v.cflags & Flags.REG_QUOTE);
            intocon(L_ERE);
        } else {
            assert 0 == (v.cflags & (Flags.REG_QUOTE | Flags.REG_ADVF));
            intocon(L_BRE);
        }

        v.nexttype = Compiler.EMPTY;        /* remember we were at the start */
        next();         /* set up the first token */
    }","['void', 'lexstart', '(', ')', 'throws', 'RegexException', '{', 'prefixes', '(', ')', ';', '/* may turn on new type bits etc. */', 'if', '(', '0', '!=', '(', 'v', '.', 'cflags', '&', 'Flags', '.', 'REG_QUOTE', ')', ')', '{', 'assert', '0', '==', '(', 'v', '.', 'cflags', '&', '(', 'Flags', '.', 'REG_ADVANCED', '|', 'Flags', '.', 'REG_EXPANDED', '|', 'Flags', '.', 'REG_NEWLINE', ')', ')', ';', 'intocon', '(', 'L_Q', ')', ';', '}', 'else', 'if', '(', '0', '!=', '(', 'v', '.', 'cflags', '&', 'Flags', '.', 'REG_EXTENDED', ')', ')', '{', 'assert', '0', '==', '(', 'v', '.', 'cflags', '&', 'Flags', '.', 'REG_QUOTE', ')', ';', 'intocon', '(', 'L_ERE', ')', ';', '}', 'else', '{', 'assert', '0', '==', '(', 'v', '.', 'cflags', '&', '(', 'Flags', '.', 'REG_QUOTE', '|', 'Flags', '.', 'REG_ADVF', ')', ')', ';', 'intocon', '(', 'L_BRE', ')', ';', '}', 'v', '.', 'nexttype', '=', 'Compiler', '.', 'EMPTY', ';', '/* remember we were at the start */', 'next', '(', ')', ';', '/* set up the first token */', '}']","lexstart - set up lexical stuff, scan leading options","['lexstart', '-', 'set', 'up', 'lexical', 'stuff', 'scan', 'leading', 'options']",de0d5eaccf9a61b694cb8793f234cc229c395b43,https://github.com/basis-technology-corp/tcl-regex-java/blob/de0d5eaccf9a61b694cb8793f234cc229c395b43/src/main/java/com/basistech/tclre/Lex.java#L173-L189,test
geomajas/geomajas-project-sld-editor,expert-common/src/main/java/org/geomajas/sld/editor/expert/common/server/service/InMemorySldServiceImpl.java,InMemorySldServiceImpl.validate,"public void validate(StyledLayerDescriptorInfo sld) throws SldException {
		try {
			parseSldI(sld);
		} catch (JiBXException e) {
			throw new SldException(""Validation error"", e);
		}
	}",java,"public void validate(StyledLayerDescriptorInfo sld) throws SldException {
		try {
			parseSldI(sld);
		} catch (JiBXException e) {
			throw new SldException(""Validation error"", e);
		}
	}","['public', 'void', 'validate', '(', 'StyledLayerDescriptorInfo', 'sld', ')', 'throws', 'SldException', '{', 'try', '{', 'parseSldI', '(', 'sld', ')', ';', '}', 'catch', '(', 'JiBXException', 'e', ')', '{', 'throw', 'new', 'SldException', '(', '""Validation error""', ',', 'e', ')', ';', '}', '}']","Test by marshalling.

@param sld
@throws SldException","['Test', 'by', 'marshalling', '.']",c8571446a7172a08eada40d847f8813d0b07ec69,https://github.com/geomajas/geomajas-project-sld-editor/blob/c8571446a7172a08eada40d847f8813d0b07ec69/expert-common/src/main/java/org/geomajas/sld/editor/expert/common/server/service/InMemorySldServiceImpl.java#L168-L174,test
ieb/sparsemapcontent,app/src/main/java/org/sakaiproject/nakamura/app/NakamuraMain.java,NakamuraMain.info,"static void info(String message, Throwable t) {
		log(System.out, ""*INFO*"", message, t);
	}",java,"static void info(String message, Throwable t) {
		log(System.out, ""*INFO*"", message, t);
	}","['static', 'void', 'info', '(', 'String', 'message', ',', 'Throwable', 't', ')', '{', 'log', '(', 'System', '.', 'out', ',', '""*INFO*""', ',', 'message', ',', 't', ')', ';', '}']",emit an informational message to standard out,"['emit', 'an', 'informational', 'message', 'to', 'standard', 'out']",0570fdf868adbbf7734790cbc09fe66480e5f2dc,https://github.com/ieb/sparsemapcontent/blob/0570fdf868adbbf7734790cbc09fe66480e5f2dc/app/src/main/java/org/sakaiproject/nakamura/app/NakamuraMain.java#L270-L272,test
kiegroup/droolsjbpm-tools,drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/GraphicalVertex.java,GraphicalVertex.getPropertyValue,"public Object getPropertyValue(Object propertyId) {
        if ( XPOS_PROP.equals( propertyId ) ) {
            return Integer.toString( location.x );
        }
        if ( YPOS_PROP.equals( propertyId ) ) {
            return Integer.toString( location.y );
        }
        if ( HEIGHT_PROP.equals( propertyId ) ) {
            return Integer.toString( size.height );
        }
        if ( WIDTH_PROP.equals( propertyId ) ) {
            return Integer.toString( size.width );
        }
        return null;
    }",java,"public Object getPropertyValue(Object propertyId) {
        if ( XPOS_PROP.equals( propertyId ) ) {
            return Integer.toString( location.x );
        }
        if ( YPOS_PROP.equals( propertyId ) ) {
            return Integer.toString( location.y );
        }
        if ( HEIGHT_PROP.equals( propertyId ) ) {
            return Integer.toString( size.height );
        }
        if ( WIDTH_PROP.equals( propertyId ) ) {
            return Integer.toString( size.width );
        }
        return null;
    }","['public', 'Object', 'getPropertyValue', '(', 'Object', 'propertyId', ')', '{', 'if', '(', 'XPOS_PROP', '.', 'equals', '(', 'propertyId', ')', ')', '{', 'return', 'Integer', '.', 'toString', '(', 'location', '.', 'x', ')', ';', '}', 'if', '(', 'YPOS_PROP', '.', 'equals', '(', 'propertyId', ')', ')', '{', 'return', 'Integer', '.', 'toString', '(', 'location', '.', 'y', ')', ';', '}', 'if', '(', 'HEIGHT_PROP', '.', 'equals', '(', 'propertyId', ')', ')', '{', 'return', 'Integer', '.', 'toString', '(', 'size', '.', 'height', ')', ';', '}', 'if', '(', 'WIDTH_PROP', '.', 'equals', '(', 'propertyId', ')', ')', '{', 'return', 'Integer', '.', 'toString', '(', 'size', '.', 'width', ')', ';', '}', 'return', 'null', ';', '}']","Return the property value for the given propertyId, or null.","['Return', 'the', 'property', 'value', 'for', 'the', 'given', 'propertyId', 'or', 'null', '.']",05e1f73c591178360a198dca29f99d73918991db,https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/model/GraphicalVertex.java#L152-L166,test
Koekiebox-PTY-LTD/Fluid,fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/RouteFieldClient.java,RouteFieldClient.createFieldParagraphTextPlain,"public Field createFieldParagraphTextPlain(Field routeFieldParam) {
		if(routeFieldParam != null && this.serviceTicket != null) {
			routeFieldParam.setServiceTicket(this.serviceTicket);
		}

		if(routeFieldParam != null) {
			routeFieldParam.setTypeAsEnum(Field.Type.ParagraphText);
			routeFieldParam.setTypeMetaData(FieldMetaData.ParagraphText.PLAIN);
		}

		return new Field(this.putJson(
				routeFieldParam, Version1.routeFieldCreate()));
	}",java,"public Field createFieldParagraphTextPlain(Field routeFieldParam) {
		if(routeFieldParam != null && this.serviceTicket != null) {
			routeFieldParam.setServiceTicket(this.serviceTicket);
		}

		if(routeFieldParam != null) {
			routeFieldParam.setTypeAsEnum(Field.Type.ParagraphText);
			routeFieldParam.setTypeMetaData(FieldMetaData.ParagraphText.PLAIN);
		}

		return new Field(this.putJson(
				routeFieldParam, Version1.routeFieldCreate()));
	}","['public', 'Field', 'createFieldParagraphTextPlain', '(', 'Field', 'routeFieldParam', ')', '{', 'if', '(', 'routeFieldParam', '!=', 'null', '&&', 'this', '.', 'serviceTicket', '!=', 'null', ')', '{', 'routeFieldParam', '.', 'setServiceTicket', '(', 'this', '.', 'serviceTicket', ')', ';', '}', 'if', '(', 'routeFieldParam', '!=', 'null', ')', '{', 'routeFieldParam', '.', 'setTypeAsEnum', '(', 'Field', '.', 'Type', '.', 'ParagraphText', ')', ';', 'routeFieldParam', '.', 'setTypeMetaData', '(', 'FieldMetaData', '.', 'ParagraphText', '.', 'PLAIN', ')', ';', '}', 'return', 'new', 'Field', '(', 'this', '.', 'putJson', '(', 'routeFieldParam', ',', 'Version1', '.', 'routeFieldCreate', '(', ')', ')', ')', ';', '}']","Create a new Paragraph Text field.

@param routeFieldParam Field to Create.
@return Created Field.","['Create', 'a', 'new', 'Paragraph', 'Text', 'field', '.']",81153d865f71b84ca933532c7115717bc3979270,https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/flow/RouteFieldClient.java#L105-L117,test
ngageoint/geopackage-android,geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataTiff.java,CoverageDataTiff.getPixelValue,"public float getPixelValue(byte[] imageBytes, int x, int y) {

        TIFFImage tiffImage = TiffReader.readTiff(imageBytes);
        FileDirectory directory = tiffImage.getFileDirectory();
        validateImageType(directory);
        Rasters rasters = directory.readRasters();
        float pixelValue = rasters.getFirstPixelSample(x, y).floatValue();

        return pixelValue;
    }",java,"public float getPixelValue(byte[] imageBytes, int x, int y) {

        TIFFImage tiffImage = TiffReader.readTiff(imageBytes);
        FileDirectory directory = tiffImage.getFileDirectory();
        validateImageType(directory);
        Rasters rasters = directory.readRasters();
        float pixelValue = rasters.getFirstPixelSample(x, y).floatValue();

        return pixelValue;
    }","['public', 'float', 'getPixelValue', '(', 'byte', '[', ']', 'imageBytes', ',', 'int', 'x', ',', 'int', 'y', ')', '{', 'TIFFImage', 'tiffImage', '=', 'TiffReader', '.', 'readTiff', '(', 'imageBytes', ')', ';', 'FileDirectory', 'directory', '=', 'tiffImage', '.', 'getFileDirectory', '(', ')', ';', 'validateImageType', '(', 'directory', ')', ';', 'Rasters', 'rasters', '=', 'directory', '.', 'readRasters', '(', ')', ';', 'float', 'pixelValue', '=', 'rasters', '.', 'getFirstPixelSample', '(', 'x', ',', 'y', ')', '.', 'floatValue', '(', ')', ';', 'return', 'pixelValue', ';', '}']","Get the pixel value as a float from the image and the coordinate

@param imageBytes image bytes
@param x          x coordinate
@param y          y coordinate
@return float pixel value","['Get', 'the', 'pixel', 'value', 'as', 'a', 'float', 'from', 'the', 'image', 'and', 'the', 'coordinate']",d19e9fcc636462c0f0ae1b7eca4acafae48de21b,https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/coverage/CoverageDataTiff.java#L115-L124,test
jboss/jboss-common-core,src/main/java/org/jboss/util/graph/Graph.java,Graph.findVertexByData,"public Vertex<T> findVertexByData(T data, Comparator<T> compare)
   {
      Vertex<T> match = null;
      for(Vertex<T> v : verticies.values())
      {
         if( compare.compare(data, v.getData()) == 0 )
         {
            match = v;
            break;
         }
      }
      return match;
   }",java,"public Vertex<T> findVertexByData(T data, Comparator<T> compare)
   {
      Vertex<T> match = null;
      for(Vertex<T> v : verticies.values())
      {
         if( compare.compare(data, v.getData()) == 0 )
         {
            match = v;
            break;
         }
      }
      return match;
   }","['public', 'Vertex', '<', 'T', '>', 'findVertexByData', '(', 'T', 'data', ',', 'Comparator', '<', 'T', '>', 'compare', ')', '{', 'Vertex', '<', 'T', '>', 'match', '=', 'null', ';', 'for', '(', 'Vertex', '<', 'T', '>', 'v', ':', 'verticies', '.', 'values', '(', ')', ')', '{', 'if', '(', 'compare', '.', 'compare', '(', 'data', ',', 'v', '.', 'getData', '(', ')', ')', '==', '0', ')', '{', 'match', '=', 'v', ';', 'break', ';', '}', '}', 'return', 'match', ';', '}']","Search the verticies for one with data.

@param data - the vertex data to match
@param compare - the comparator to perform the match
@return the first vertex with a matching data, null if no
matches are found","['Search', 'the', 'verticies', 'for', 'one', 'with', 'data', '.']",c191bb18db83fa106c6913cf34ed47989b65dc97,https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/graph/Graph.java#L410-L422,test
rest-assured/rest-assured,rest-assured/src/main/java/io/restassured/http/Cookies.java,Cookies.cookies,"public static Cookies cookies(Cookie cookie, Cookie... additionalCookies) {
        AssertParameter.notNull(cookie, ""Cookie"");
        final List<Cookie> cookieList = new LinkedList<Cookie>();
        cookieList.add(cookie);
        Collections.addAll(cookieList, additionalCookies);
        return new Cookies(cookieList);
    }",java,"public static Cookies cookies(Cookie cookie, Cookie... additionalCookies) {
        AssertParameter.notNull(cookie, ""Cookie"");
        final List<Cookie> cookieList = new LinkedList<Cookie>();
        cookieList.add(cookie);
        Collections.addAll(cookieList, additionalCookies);
        return new Cookies(cookieList);
    }","['public', 'static', 'Cookies', 'cookies', '(', 'Cookie', 'cookie', ',', 'Cookie', '...', 'additionalCookies', ')', '{', 'AssertParameter', '.', 'notNull', '(', 'cookie', ',', '""Cookie""', ')', ';', 'final', 'List', '<', 'Cookie', '>', 'cookieList', '=', 'new', 'LinkedList', '<', 'Cookie', '>', '(', ')', ';', 'cookieList', '.', 'add', '(', 'cookie', ')', ';', 'Collections', '.', 'addAll', '(', 'cookieList', ',', 'additionalCookies', ')', ';', 'return', 'new', 'Cookies', '(', 'cookieList', ')', ';', '}']","An alternative way to create a Cookies object from the constructor.

@param cookie            The cookie to be included
@param additionalCookies Additional cookies to be included (optional)
@return A new cookies object containing the specified cookies","['An', 'alternative', 'way', 'to', 'create', 'a', 'Cookies', 'object', 'from', 'the', 'constructor', '.']",165a85b65070f5a07fe0045175613fb2c2811642,https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/http/Cookies.java#L138-L144,test
lessthanoptimal/GeoRegression,main/src/georegression/geometry/UtilPoint3D_F64.java,UtilPoint3D_F64.mean,"public static Point3D_F64 mean( List<Point3D_F64> points , Point3D_F64 mean ) {
      if( mean == null )
         mean = new Point3D_F64();

		double x = 0, y = 0, z = 0;

		for( Point3D_F64 p : points ) {
			x += p.x;
			y += p.y;
			z += p.z;
		}

		mean.x = x / points.size();
		mean.y = y / points.size();
		mean.z = z / points.size();

		return mean;
	}",java,"public static Point3D_F64 mean( List<Point3D_F64> points , Point3D_F64 mean ) {
      if( mean == null )
         mean = new Point3D_F64();

		double x = 0, y = 0, z = 0;

		for( Point3D_F64 p : points ) {
			x += p.x;
			y += p.y;
			z += p.z;
		}

		mean.x = x / points.size();
		mean.y = y / points.size();
		mean.z = z / points.size();

		return mean;
	}","['public', 'static', 'Point3D_F64', 'mean', '(', 'List', '<', 'Point3D_F64', '>', 'points', ',', 'Point3D_F64', 'mean', ')', '{', 'if', '(', 'mean', '==', 'null', ')', 'mean', '=', 'new', 'Point3D_F64', '(', ')', ';', 'double', 'x', '=', '0', ',', 'y', '=', '0', ',', 'z', '=', '0', ';', 'for', '(', 'Point3D_F64', 'p', ':', 'points', ')', '{', 'x', '+=', 'p', '.', 'x', ';', 'y', '+=', 'p', '.', 'y', ';', 'z', '+=', 'p', '.', 'z', ';', '}', 'mean', '.', 'x', '=', 'x', '/', 'points', '.', 'size', '(', ')', ';', 'mean', '.', 'y', '=', 'y', '/', 'points', '.', 'size', '(', ')', ';', 'mean', '.', 'z', '=', 'z', '/', 'points', '.', 'size', '(', ')', ';', 'return', 'mean', ';', '}']","Computes the mean of the list of points.

@param points List of points
@param mean (Optional) storage for the mean.  Can be null
@return Mean","['Computes', 'the', 'mean', 'of', 'the', 'list', 'of', 'points', '.']",c067cd44a4e95bd826119f6e658bd82386ef289f,https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/geometry/UtilPoint3D_F64.java#L221-L238,test
abmargb/jamppa,src/main/java/org/jivesoftware/whack/ExternalComponent.java,ExternalComponent.connectionLost,"public void connectionLost() {
        // Ensure that only one thread will try to reconnect.
        synchronized (this) {
            if (reconnecting) {
                return;
            }
            reconnecting = true;
        }
        readerThread = null;
        boolean isConnected = false;
        if (!shutdown) {
            // Notify the component that connection was lost so it needs to
            // shutdown. The component is
            // still registered in the local component manager but just not
            // connected to the server
            component.shutdown();
        }
        while (!isConnected && !shutdown) {
            try {
                connect(host, port, subdomain);
                isConnected = true;
                // It may be possible that while a new connection was being
                // established the
                // component was required to shutdown so in this case we need to
                // close the new
                // connection
                if (shutdown) {
                    disconnect();
                } else {
                    // Component is back again working so start it up again
                    start();
                }
            } catch (ComponentException e) {
                manager.getLog().error(
                        ""Error trying to reconnect with the server"", e);
                // Wait for 5 seconds until the next retry
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException e1) {
                    // Do nothing
                }
            }
        }
        reconnecting = false;
    }",java,"public void connectionLost() {
        // Ensure that only one thread will try to reconnect.
        synchronized (this) {
            if (reconnecting) {
                return;
            }
            reconnecting = true;
        }
        readerThread = null;
        boolean isConnected = false;
        if (!shutdown) {
            // Notify the component that connection was lost so it needs to
            // shutdown. The component is
            // still registered in the local component manager but just not
            // connected to the server
            component.shutdown();
        }
        while (!isConnected && !shutdown) {
            try {
                connect(host, port, subdomain);
                isConnected = true;
                // It may be possible that while a new connection was being
                // established the
                // component was required to shutdown so in this case we need to
                // close the new
                // connection
                if (shutdown) {
                    disconnect();
                } else {
                    // Component is back again working so start it up again
                    start();
                }
            } catch (ComponentException e) {
                manager.getLog().error(
                        ""Error trying to reconnect with the server"", e);
                // Wait for 5 seconds until the next retry
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException e1) {
                    // Do nothing
                }
            }
        }
        reconnecting = false;
    }","['public', 'void', 'connectionLost', '(', ')', '{', '// Ensure that only one thread will try to reconnect.', 'synchronized', '(', 'this', ')', '{', 'if', '(', 'reconnecting', ')', '{', 'return', ';', '}', 'reconnecting', '=', 'true', ';', '}', 'readerThread', '=', 'null', ';', 'boolean', 'isConnected', '=', 'false', ';', 'if', '(', '!', 'shutdown', ')', '{', '// Notify the component that connection was lost so it needs to', '// shutdown. The component is', '// still registered in the local component manager but just not', '// connected to the server', 'component', '.', 'shutdown', '(', ')', ';', '}', 'while', '(', '!', 'isConnected', '&&', '!', 'shutdown', ')', '{', 'try', '{', 'connect', '(', 'host', ',', 'port', ',', 'subdomain', ')', ';', 'isConnected', '=', 'true', ';', '// It may be possible that while a new connection was being', '// established the', '// component was required to shutdown so in this case we need to', '// close the new', '// connection', 'if', '(', 'shutdown', ')', '{', 'disconnect', '(', ')', ';', '}', 'else', '{', '// Component is back again working so start it up again', 'start', '(', ')', ';', '}', '}', 'catch', '(', 'ComponentException', 'e', ')', '{', 'manager', '.', 'getLog', '(', ')', '.', 'error', '(', '""Error trying to reconnect with the server""', ',', 'e', ')', ';', '// Wait for 5 seconds until the next retry', 'try', '{', 'Thread', '.', 'sleep', '(', '5000', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e1', ')', '{', '// Do nothing', '}', '}', '}', 'reconnecting', '=', 'false', ';', '}']","Notification message that the connection with the server was lost
unexpectedly. We will try to reestablish the connection for ever until
the connection has been reestablished or this thread has been stopped.","['Notification', 'message', 'that', 'the', 'connection', 'with', 'the', 'server', 'was', 'lost', 'unexpectedly', '.', 'We', 'will', 'try', 'to', 'reestablish', 'the', 'connection', 'for', 'ever', 'until', 'the', 'connection', 'has', 'been', 'reestablished', 'or', 'this', 'thread', 'has', 'been', 'stopped', '.']",76f253239923df40904c462e3b88e7278b36b282,https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/whack/ExternalComponent.java#L429-L473,test
oaqa/baseqa,src/main/java/edu/cmu/lti/oaqa/type/retrieval/Passage.java,Passage.setOffsetInEndSection,"public void setOffsetInEndSection(int v) {
    if (Passage_Type.featOkTst && ((Passage_Type)jcasType).casFeat_offsetInEndSection == null)
      jcasType.jcas.throwFeatMissing(""offsetInEndSection"", ""edu.cmu.lti.oaqa.type.retrieval.Passage"");
    jcasType.ll_cas.ll_setIntValue(addr, ((Passage_Type)jcasType).casFeatCode_offsetInEndSection, v);}",java,"public void setOffsetInEndSection(int v) {
    if (Passage_Type.featOkTst && ((Passage_Type)jcasType).casFeat_offsetInEndSection == null)
      jcasType.jcas.throwFeatMissing(""offsetInEndSection"", ""edu.cmu.lti.oaqa.type.retrieval.Passage"");
    jcasType.ll_cas.ll_setIntValue(addr, ((Passage_Type)jcasType).casFeatCode_offsetInEndSection, v);}","['public', 'void', 'setOffsetInEndSection', '(', 'int', 'v', ')', '{', 'if', '(', 'Passage_Type', '.', 'featOkTst', '&&', '(', '(', 'Passage_Type', ')', 'jcasType', ')', '.', 'casFeat_offsetInEndSection', '==', 'null', ')', 'jcasType', '.', 'jcas', '.', 'throwFeatMissing', '(', '""offsetInEndSection""', ',', '""edu.cmu.lti.oaqa.type.retrieval.Passage""', ')', ';', 'jcasType', '.', 'll_cas', '.', 'll_setIntValue', '(', 'addr', ',', '(', '(', 'Passage_Type', ')', 'jcasType', ')', '.', 'casFeatCode_offsetInEndSection', ',', 'v', ')', ';', '}']","setter for offsetInEndSection - sets Character offset of the end of this passage within the section that contains this passage.
@generated
@param v value to set into the feature","['setter', 'for', 'offsetInEndSection', '-', 'sets', 'Character', 'offset', 'of', 'the', 'end', 'of', 'this', 'passage', 'within', 'the', 'section', 'that', 'contains', 'this', 'passage', '.']",6ea632d8e51e3e617d4876fc1185c49be0ad7eb8,https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/Passage.java#L148-L151,test
RestComm/jain-slee,container/components/components/src/main/java/org/mobicents/slee/container/component/ServiceComponentImpl.java,ServiceComponentImpl.getSbbIDs,"public Set<SbbID> getSbbIDs(ComponentRepository componentRepository) {
		Set<SbbID> result = new HashSet<SbbID>();
		buildSbbTree(descriptor.getRootSbbID(), result,
				componentRepository);
		return result;
	}",java,"public Set<SbbID> getSbbIDs(ComponentRepository componentRepository) {
		Set<SbbID> result = new HashSet<SbbID>();
		buildSbbTree(descriptor.getRootSbbID(), result,
				componentRepository);
		return result;
	}","['public', 'Set', '<', 'SbbID', '>', 'getSbbIDs', '(', 'ComponentRepository', 'componentRepository', ')', '{', 'Set', '<', 'SbbID', '>', 'result', '=', 'new', 'HashSet', '<', 'SbbID', '>', '(', ')', ';', 'buildSbbTree', '(', 'descriptor', '.', 'getRootSbbID', '(', ')', ',', 'result', ',', 'componentRepository', ')', ';', 'return', 'result', ';', '}']","Retrieves the set of sbbs used by this service

@param componentRepository
@return","['Retrieves', 'the', 'set', 'of', 'sbbs', 'used', 'by', 'this', 'service']",0eaa16ff2d4b6faf43f0d99260e88878fd54dee0,https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/ServiceComponentImpl.java#L191-L196,test
spring-projects/spring-security,samples/xml/contacts/src/main/java/sample/contact/AdminPermissionController.java,AdminPermissionController.displayAdminPage,"@RequestMapping(value = ""/secure/adminPermission.htm"", method = RequestMethod.GET)
	public ModelAndView displayAdminPage(@RequestParam(""contactId"") int contactId) {
		Contact contact = contactManager.getById(Long.valueOf(contactId));
		Acl acl = aclService.readAclById(new ObjectIdentityImpl(contact));

		Map<String, Object> model = new HashMap<>();
		model.put(""contact"", contact);
		model.put(""acl"", acl);

		return new ModelAndView(""adminPermission"", ""model"", model);
	}",java,"@RequestMapping(value = ""/secure/adminPermission.htm"", method = RequestMethod.GET)
	public ModelAndView displayAdminPage(@RequestParam(""contactId"") int contactId) {
		Contact contact = contactManager.getById(Long.valueOf(contactId));
		Acl acl = aclService.readAclById(new ObjectIdentityImpl(contact));

		Map<String, Object> model = new HashMap<>();
		model.put(""contact"", contact);
		model.put(""acl"", acl);

		return new ModelAndView(""adminPermission"", ""model"", model);
	}","['@', 'RequestMapping', '(', 'value', '=', '""/secure/adminPermission.htm""', ',', 'method', '=', 'RequestMethod', '.', 'GET', ')', 'public', 'ModelAndView', 'displayAdminPage', '(', '@', 'RequestParam', '(', '""contactId""', ')', 'int', 'contactId', ')', '{', 'Contact', 'contact', '=', 'contactManager', '.', 'getById', '(', 'Long', '.', 'valueOf', '(', 'contactId', ')', ')', ';', 'Acl', 'acl', '=', 'aclService', '.', 'readAclById', '(', 'new', 'ObjectIdentityImpl', '(', 'contact', ')', ')', ';', 'Map', '<', 'String', ',', 'Object', '>', 'model', '=', 'new', 'HashMap', '<>', '(', ')', ';', 'model', '.', 'put', '(', '""contact""', ',', 'contact', ')', ';', 'model', '.', 'put', '(', '""acl""', ',', 'acl', ')', ';', 'return', 'new', 'ModelAndView', '(', '""adminPermission""', ',', '""model""', ',', 'model', ')', ';', '}']",Displays the permission admin page for a particular contact.,"['Displays', 'the', 'permission', 'admin', 'page', 'for', 'a', 'particular', 'contact', '.']",98a8467e4c2ae05b3e09c67ece856944fa48ed23,https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/samples/xml/contacts/src/main/java/sample/contact/AdminPermissionController.java#L69-L79,test
eclipse/packagedrone,bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspC.java,JspC.main,"public static void main(String arg[]) {
        if (arg.length == 0) {
           System.out.println(Localizer.getMessage(""jspc.usage""));
        } else {
            JspC jspc = new JspC();
            try {
                jspc.setArgs(arg);
                if (jspc.helpNeeded) {
                    System.out.println(Localizer.getMessage(""jspc.usage""));
                } else {
                    jspc.execute();
                }
            } catch (JasperException je) {
                System.err.println(je);
                //System.err.println(je.getMessage());
                if (jspc.getDieLevel() != NO_DIE_LEVEL) {
                    System.exit(jspc.getDieLevel());
                }
            }
        }
    }",java,"public static void main(String arg[]) {
        if (arg.length == 0) {
           System.out.println(Localizer.getMessage(""jspc.usage""));
        } else {
            JspC jspc = new JspC();
            try {
                jspc.setArgs(arg);
                if (jspc.helpNeeded) {
                    System.out.println(Localizer.getMessage(""jspc.usage""));
                } else {
                    jspc.execute();
                }
            } catch (JasperException je) {
                System.err.println(je);
                //System.err.println(je.getMessage());
                if (jspc.getDieLevel() != NO_DIE_LEVEL) {
                    System.exit(jspc.getDieLevel());
                }
            }
        }
    }","['public', 'static', 'void', 'main', '(', 'String', 'arg', '[', ']', ')', '{', 'if', '(', 'arg', '.', 'length', '==', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'Localizer', '.', 'getMessage', '(', '""jspc.usage""', ')', ')', ';', '}', 'else', '{', 'JspC', 'jspc', '=', 'new', 'JspC', '(', ')', ';', 'try', '{', 'jspc', '.', 'setArgs', '(', 'arg', ')', ';', 'if', '(', 'jspc', '.', 'helpNeeded', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'Localizer', '.', 'getMessage', '(', '""jspc.usage""', ')', ')', ';', '}', 'else', '{', 'jspc', '.', 'execute', '(', ')', ';', '}', '}', 'catch', '(', 'JasperException', 'je', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'je', ')', ';', '//System.err.println(je.getMessage());', 'if', '(', 'jspc', '.', 'getDieLevel', '(', ')', '!=', 'NO_DIE_LEVEL', ')', '{', 'System', '.', 'exit', '(', 'jspc', '.', 'getDieLevel', '(', ')', ')', ';', '}', '}', '}', '}']",END GlassFish 750,"['END', 'GlassFish', '750']",3869c1643cdc6f7cb8b26097a7b6994683b13d7e,https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/JspC.java#L317-L337,test
objectify/objectify,src/main/java/com/googlecode/objectify/ObjectifyFactory.java,ObjectifyFactory.asyncDatastore,"public AsyncDatastore asyncDatastore(final boolean enableGlobalCache) {
		if (this.entityMemcache != null && enableGlobalCache && this.registrar.isCacheEnabled())
			return new CachingAsyncDatastore(asyncDatastore(), this.entityMemcache);
		else
			return asyncDatastore();
	}",java,"public AsyncDatastore asyncDatastore(final boolean enableGlobalCache) {
		if (this.entityMemcache != null && enableGlobalCache && this.registrar.isCacheEnabled())
			return new CachingAsyncDatastore(asyncDatastore(), this.entityMemcache);
		else
			return asyncDatastore();
	}","['public', 'AsyncDatastore', 'asyncDatastore', '(', 'final', 'boolean', 'enableGlobalCache', ')', '{', 'if', '(', 'this', '.', 'entityMemcache', '!=', 'null', '&&', 'enableGlobalCache', '&&', 'this', '.', 'registrar', '.', 'isCacheEnabled', '(', ')', ')', 'return', 'new', 'CachingAsyncDatastore', '(', 'asyncDatastore', '(', ')', ',', 'this', '.', 'entityMemcache', ')', ';', 'else', 'return', 'asyncDatastore', '(', ')', ';', '}']",Might produce a caching version if caching is enabled.,"['Might', 'produce', 'a', 'caching', 'version', 'if', 'caching', 'is', 'enabled', '.']",4bf325d2e49b400326416977c7d9bbdf5380175b,https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/ObjectifyFactory.java#L140-L145,test
Unidata/thredds,ui/src/main/java/ucar/nc2/ui/table/JTableSorted.java,JTableSorted.getSelected,"public TableRow getSelected() {
    if (list.size() == 0)
      return null;
    int sel = jtable.getSelectedRow();
    if (sel >= 0)
      return (TableRow) list.get(sel);
    else
      return null;
  }",java,"public TableRow getSelected() {
    if (list.size() == 0)
      return null;
    int sel = jtable.getSelectedRow();
    if (sel >= 0)
      return (TableRow) list.get(sel);
    else
      return null;
  }","['public', 'TableRow', 'getSelected', '(', ')', '{', 'if', '(', 'list', '.', 'size', '(', ')', '==', '0', ')', 'return', 'null', ';', 'int', 'sel', '=', 'jtable', '.', 'getSelectedRow', '(', ')', ';', 'if', '(', 'sel', '>=', '0', ')', 'return', '(', 'TableRow', ')', 'list', '.', 'get', '(', 'sel', ')', ';', 'else', 'return', 'null', ';', '}']","Get the currently selected row.
@return selected TableRow","['Get', 'the', 'currently', 'selected', 'row', '.']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/table/JTableSorted.java#L347-L355,test
cologneintelligence/FitGoodies,fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java,FileSystemDirectoryHelper.getCommonDir,"public File getCommonDir(final File dir1, final File dir2) throws IOException {
		List<File> parts1 = getParentDirs(dir1);
		List<File> parts2 = getParentDirs(dir2);
		File matched = null;

		final int maxCommonSize = Math.min(parts1.size(), parts2.size());
		for (int i = 0; i < maxCommonSize; ++i) {
			if (parts1.get(i).equals(parts2.get(i))) {
				matched = parts1.get(i);
			} else {
				break;
			}
		}

		return matched;
	}",java,"public File getCommonDir(final File dir1, final File dir2) throws IOException {
		List<File> parts1 = getParentDirs(dir1);
		List<File> parts2 = getParentDirs(dir2);
		File matched = null;

		final int maxCommonSize = Math.min(parts1.size(), parts2.size());
		for (int i = 0; i < maxCommonSize; ++i) {
			if (parts1.get(i).equals(parts2.get(i))) {
				matched = parts1.get(i);
			} else {
				break;
			}
		}

		return matched;
	}","['public', 'File', 'getCommonDir', '(', 'final', 'File', 'dir1', ',', 'final', 'File', 'dir2', ')', 'throws', 'IOException', '{', 'List', '<', 'File', '>', 'parts1', '=', 'getParentDirs', '(', 'dir1', ')', ';', 'List', '<', 'File', '>', 'parts2', '=', 'getParentDirs', '(', 'dir2', ')', ';', 'File', 'matched', '=', 'null', ';', 'final', 'int', 'maxCommonSize', '=', 'Math', '.', 'min', '(', 'parts1', '.', 'size', '(', ')', ',', 'parts2', '.', 'size', '(', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'maxCommonSize', ';', '++', 'i', ')', '{', 'if', '(', 'parts1', '.', 'get', '(', 'i', ')', '.', 'equals', '(', 'parts2', '.', 'get', '(', 'i', ')', ')', ')', '{', 'matched', '=', 'parts1', '.', 'get', '(', 'i', ')', ';', '}', 'else', '{', 'break', ';', '}', '}', 'return', 'matched', ';', '}']","Gets the longest common parent directory path of two paths.

@param dir1 first path
@param dir2 second path
@return longest common path in {@code dir1} and {@code dir2}
@throws java.io.IOException Exception which is thrown if paths cannot be normalized","['Gets', 'the', 'longest', 'common', 'parent', 'directory', 'path', 'of', 'two', 'paths', '.']",834e42d1f41b4b9226060b1e83a80cc69ea88c7b,https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/file/FileSystemDirectoryHelper.java#L104-L119,test
Unidata/thredds,tdcommon/src/main/java/thredds/server/catalog/tracker/DatasetTrackerChronicle.java,DatasetTrackerChronicle.cleanupBefore,"public static void cleanupBefore(String pathname, long trackerNumber) {
    for (long tnum = trackerNumber - 1; tnum > 0; tnum--) {
      File oldDatabaseFile = new File(pathname + datasetName + ""."" + tnum);
      if (!oldDatabaseFile.exists()) break;
      if (oldDatabaseFile.delete()) {
        catalogInitLog.info(""DatasetTrackerChronicle deleted {} "", oldDatabaseFile.getAbsolutePath());
      } else {
        catalogInitLog.error(""DatasetTrackerChronicle not able to delete {} "", oldDatabaseFile.getAbsolutePath());
      }
    }
  }",java,"public static void cleanupBefore(String pathname, long trackerNumber) {
    for (long tnum = trackerNumber - 1; tnum > 0; tnum--) {
      File oldDatabaseFile = new File(pathname + datasetName + ""."" + tnum);
      if (!oldDatabaseFile.exists()) break;
      if (oldDatabaseFile.delete()) {
        catalogInitLog.info(""DatasetTrackerChronicle deleted {} "", oldDatabaseFile.getAbsolutePath());
      } else {
        catalogInitLog.error(""DatasetTrackerChronicle not able to delete {} "", oldDatabaseFile.getAbsolutePath());
      }
    }
  }","['public', 'static', 'void', 'cleanupBefore', '(', 'String', 'pathname', ',', 'long', 'trackerNumber', ')', '{', 'for', '(', 'long', 'tnum', '=', 'trackerNumber', '-', '1', ';', 'tnum', '>', '0', ';', 'tnum', '--', ')', '{', 'File', 'oldDatabaseFile', '=', 'new', 'File', '(', 'pathname', '+', 'datasetName', '+', '"".""', '+', 'tnum', ')', ';', 'if', '(', '!', 'oldDatabaseFile', '.', 'exists', '(', ')', ')', 'break', ';', 'if', '(', 'oldDatabaseFile', '.', 'delete', '(', ')', ')', '{', 'catalogInitLog', '.', 'info', '(', '""DatasetTrackerChronicle deleted {} ""', ',', 'oldDatabaseFile', '.', 'getAbsolutePath', '(', ')', ')', ';', '}', 'else', '{', 'catalogInitLog', '.', 'error', '(', '""DatasetTrackerChronicle not able to delete {} ""', ',', 'oldDatabaseFile', '.', 'getAbsolutePath', '(', ')', ')', ';', '}', '}', '}']",delete old databases,"['delete', 'old', 'databases']",d2d68f9eee87f345625211324d71d5dc3e162ee1,https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tdcommon/src/main/java/thredds/server/catalog/tracker/DatasetTrackerChronicle.java#L32-L42,test
glytching/junit-extensions,src/main/java/io/github/glytching/junit/extension/system/RestoreContext.java,RestoreContext.restore,"public void restore() {
    for (String propertyName : propertyNames) {
      if (restoreProperties.containsKey(propertyName)) {
        // reinstate the original value
        System.setProperty(propertyName, restoreProperties.get(propertyName));
      } else {
        // remove the (previously unset) property
        System.clearProperty(propertyName);
      }
    }
  }",java,"public void restore() {
    for (String propertyName : propertyNames) {
      if (restoreProperties.containsKey(propertyName)) {
        // reinstate the original value
        System.setProperty(propertyName, restoreProperties.get(propertyName));
      } else {
        // remove the (previously unset) property
        System.clearProperty(propertyName);
      }
    }
  }","['public', 'void', 'restore', '(', ')', '{', 'for', '(', 'String', 'propertyName', ':', 'propertyNames', ')', '{', 'if', '(', 'restoreProperties', '.', 'containsKey', '(', 'propertyName', ')', ')', '{', '// reinstate the original value', 'System', '.', 'setProperty', '(', 'propertyName', ',', 'restoreProperties', '.', 'get', '(', 'propertyName', ')', ')', ';', '}', 'else', '{', '// remove the (previously unset) property', 'System', '.', 'clearProperty', '(', 'propertyName', ')', ';', '}', '}', '}']","Reverse the system property 'sets' performed on behalf of this restore context.

<p>For each entry in {@link #propertyNames}, if {@link #restoreProperties} contains an entry
then reset the system property with the value from {@link #restoreProperties} otherwise just
remove the system property for that property name.","['Reverse', 'the', 'system', 'property', 'sets', 'performed', 'on', 'behalf', 'of', 'this', 'restore', 'context', '.']",ad687cb3a5db38db3ae1a0a7129fe94a7494b0e1,https://github.com/glytching/junit-extensions/blob/ad687cb3a5db38db3ae1a0a7129fe94a7494b0e1/src/main/java/io/github/glytching/junit/extension/system/RestoreContext.java#L59-L69,test
rackerlabs/blueflood,blueflood-http/src/main/java/com/rackspacecloud/blueflood/http/MediaTypeChecker.java,MediaTypeChecker.isAcceptValid,"public boolean isAcceptValid(HttpHeaders headers) {
        String accept = headers.get(HttpHeaders.Names.ACCEPT);

        // if we get no Accept (which means */*), or */*,
        // or application/json, then it's valid
        return ( Strings.isNullOrEmpty(accept) ||
                accept.contains(ACCEPT_ALL) ||
                accept.toLowerCase().contains(MEDIA_TYPE_APPLICATION_JSON));
    }",java,"public boolean isAcceptValid(HttpHeaders headers) {
        String accept = headers.get(HttpHeaders.Names.ACCEPT);

        // if we get no Accept (which means */*), or */*,
        // or application/json, then it's valid
        return ( Strings.isNullOrEmpty(accept) ||
                accept.contains(ACCEPT_ALL) ||
                accept.toLowerCase().contains(MEDIA_TYPE_APPLICATION_JSON));
    }","['public', 'boolean', 'isAcceptValid', '(', 'HttpHeaders', 'headers', ')', '{', 'String', 'accept', '=', 'headers', '.', 'get', '(', 'HttpHeaders', '.', 'Names', '.', 'ACCEPT', ')', ';', '// if we get no Accept (which means */*), or */*,', ""// or application/json, then it's valid"", 'return', '(', 'Strings', '.', 'isNullOrEmpty', '(', 'accept', ')', '||', 'accept', '.', 'contains', '(', 'ACCEPT_ALL', ')', '||', 'accept', '.', 'toLowerCase', '(', ')', '.', 'contains', '(', 'MEDIA_TYPE_APPLICATION_JSON', ')', ')', ';', '}']","Checks the Accept header to see if clients accept the correct
media type
@param headers
@return","['Checks', 'the', 'Accept', 'header', 'to', 'see', 'if', 'clients', 'accept', 'the', 'correct', 'media', 'type']",4722a3449b1a7f8e88889ea8c340c6f24396b5b0,https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-http/src/main/java/com/rackspacecloud/blueflood/http/MediaTypeChecker.java#L37-L45,test
